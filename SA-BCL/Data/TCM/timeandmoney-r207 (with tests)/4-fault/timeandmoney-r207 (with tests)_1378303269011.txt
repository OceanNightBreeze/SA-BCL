#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
282 2 0 5 3 1 139 1 6 1 75 1 9 1 114 2 346 2 164 6 262 2 237 1 16 2 123 1 321 2 375 1 80 1 63 1 329 1 44 1 355 9 174 2 333 9 88 3 104 1 252 1 177 4 51 1 
282 2 0 5 3 1 139 1 6 1 75 1 9 1 114 2 346 2 164 6 262 2 237 1 16 2 123 1 321 2 375 1 80 1 63 1 329 1 44 1 355 9 174 2 333 9 88 3 104 1 252 1 177 4 51 1 
282 2 0 6 3 1 139 1 6 1 75 1 9 1 114 2 346 2 164 7 262 2 237 1 16 2 123 1 321 2 375 1 80 1 63 1 329 1 44 1 355 10 174 2 333 10 88 4 104 1 252 1 177 5 51 1 
282 2 0 4 3 1 139 1 6 1 75 1 9 1 114 2 346 2 164 4 262 1 237 1 16 2 123 1 321 2 80 1 63 1 329 1 44 1 355 7 174 2 333 7 88 2 104 1 252 1 177 3 51 1 
282 1 0 3 375 1 139 1 6 1 75 1 9 1 346 1 114 1 355 4 174 1 164 3 333 4 262 2 88 1 177 2 51 1 16 1 
282 1 148 1 321 1 0 1 3 1 139 1 75 1 183 1 353 1 9 1 114 1 346 1 44 1 355 2 174 1 333 2 
282 2 321 1 0 2 139 1 75 1 9 1 114 2 355 3 164 1 333 3 88 1 237 1 177 1 
282 2 321 1 0 5 375 1 139 1 6 1 75 1 65 1 9 1 346 1 114 2 355 9 174 1 164 7 262 2 333 9 88 3 104 1 252 1 237 1 177 4 51 1 16 1 310 1 
282 2 321 1 0 5 375 1 139 1 6 1 75 1 65 1 9 1 346 1 114 2 355 9 174 1 164 7 262 2 333 9 88 3 104 1 252 1 237 1 177 4 51 1 16 1 310 1 
190 1 108 1 147 1 
190 1 53 1 291 2 
69 2 345 2 131 2 1 1 264 1 171 2 248 2 374 2 
69 3 70 1 178 1 1 1 163 1 7 1 229 1 345 2 264 1 207 1 235 1 120 1 166 2 266 1 13 1 374 3 293 1 294 1 322 1 376 1 171 2 328 1 248 2 84 1 300 1 215 2 331 1 102 1 131 2 307 1 175 1 358 2 357 2 308 1 89 1 222 2 136 1 
69 1 345 1 131 1 264 1 171 1 73 1 248 1 126 1 298 1 374 1 
69 1 240 1 239 1 190 1 350 1 297 1 367 1 298 1 345 1 103 1 59 1 167 1 147 1 374 1 
69 1 240 1 239 1 190 1 350 2 171 1 248 1 367 1 298 1 345 1 131 1 103 1 59 2 147 1 374 1 
350 1 303 1 254 1 59 1 326 1 
190 1 350 2 290 1 254 1 59 2 326 1 220 1 147 1 
350 1 254 1 59 1 
69 1 350 1 171 1 326 1 73 1 248 1 126 1 298 1 345 1 131 1 59 1 264 1 201 1 374 1 
190 1 
190 1 350 2 254 1 59 2 326 1 134 1 220 1 147 1 
190 1 350 5 78 2 64 1 149 1 254 2 162 1 326 2 83 1 316 2 193 1 186 1 59 5 360 1 220 1 97 2 147 1 169 1 38 1 
1 1 108 1 
69 2 323 1 1 2 171 1 248 1 345 2 131 1 372 1 374 2 
370 1 81 1 127 1 
69 1 293 1 322 1 1 1 163 1 328 1 229 1 113 1 84 1 300 1 102 1 357 1 166 1 222 1 13 1 374 1 
69 2 293 1 322 1 171 1 163 1 328 1 248 1 229 1 84 1 300 1 172 1 345 1 173 1 102 1 370 1 357 1 166 1 222 1 13 1 374 2 
69 5 138 1 1 1 171 4 92 1 297 1 248 4 172 2 345 5 173 1 131 1 118 1 372 1 374 5 
268 1 69 2 345 2 171 2 73 1 248 2 298 1 374 2 
172 1 69 3 345 3 131 1 1 1 171 3 248 3 374 3 
69 1 345 1 171 1 73 1 248 1 298 1 374 1 
69 1 345 1 131 1 323 1 171 1 248 1 372 1 298 1 374 1 
69 4 1 1 163 1 180 1 7 1 229 1 367 1 345 3 207 1 59 1 264 1 235 1 120 1 166 1 372 1 266 1 13 1 374 4 240 1 239 1 293 1 350 1 294 1 322 1 376 1 171 3 328 1 248 3 84 1 298 1 300 1 172 1 173 1 215 1 331 1 102 1 274 1 131 2 103 1 307 1 358 2 357 1 89 1 222 1 
69 2 345 2 172 1 1 1 118 1 171 1 297 1 248 1 374 2 
69 3 240 1 239 1 190 1 350 1 106 1 171 3 180 1 248 3 298 1 367 1 172 2 345 3 173 1 131 1 103 1 59 1 372 1 374 3 
69 2 171 2 81 1 248 2 172 1 345 2 131 1 370 1 372 1 374 2 
69 1 293 1 322 1 1 1 163 1 328 1 229 1 84 1 300 1 102 1 357 1 166 1 222 1 13 1 374 1 
69 1 293 1 322 1 362 1 1 1 26 1 328 1 229 1 84 1 102 1 357 1 166 1 222 1 13 1 374 1 
281 1 70 2 294 1 225 1 141 1 213 1 182 1 81 2 285 1 127 2 7 1 215 4 331 2 305 1 233 1 117 1 307 1 370 2 358 2 235 1 218 1 120 1 266 1 309 1 
69 1 345 1 268 1 171 1 248 1 298 1 367 1 374 1 
318 1 58 1 
318 1 58 1 
55 1 23 1 
55 1 23 1 
55 1 23 1 
115 1 318 1 58 1 
318 1 371 1 58 1 
153 1 319 1 318 2 55 1 23 1 58 2 
115 1 318 1 58 1 
115 1 318 1 58 1 
318 1 150 1 58 1 
318 1 150 1 58 1 
318 1 150 1 58 1 
69 2 1 1 256 1 366 1 58 1 30 1 345 2 318 1 33 1 59 1 371 1 373 1 189 1 374 2 241 1 350 1 39 1 171 2 82 1 248 2 151 1 194 1 21 1 199 1 
190 1 241 2 350 2 212 1 351 1 93 1 247 1 25 2 151 3 30 2 58 2 153 1 289 1 318 2 33 2 194 1 59 2 155 1 189 2 
346 1 174 1 16 1 
346 1 174 1 183 1 
174 3 154 1 52 1 349 1 183 1 16 2 
174 2 154 1 349 1 249 1 183 1 16 1 
174 2 154 2 349 1 183 1 16 1 
341 1 225 1 141 1 366 1 286 1 112 1 316 1 233 1 59 4 146 2 291 1 97 1 147 1 38 1 122 1 350 4 190 1 78 1 213 1 326 4 272 1 192 1 83 1 101 1 130 1 193 3 132 1 21 1 199 1 
341 2 254 5 53 3 225 3 141 3 111 5 313 1 112 2 316 2 233 3 59 8 369 1 291 9 97 2 147 1 188 1 38 6 122 1 350 8 190 5 78 2 64 1 244 1 213 3 326 7 272 3 192 6 83 1 303 5 193 8 132 6 306 1 21 4 158 1 200 3 
69 1 341 1 53 2 225 1 141 1 284 1 73 1 286 1 112 1 316 1 345 1 233 1 264 1 59 3 146 1 291 4 97 1 147 1 38 2 374 1 190 3 350 3 78 1 64 1 171 1 213 1 326 2 272 1 248 1 192 2 126 1 298 1 101 1 131 1 193 3 132 2 21 1 200 1 201 1 
341 1 225 2 53 3 141 2 284 1 286 1 345 1 233 2 146 2 59 4 291 7 97 1 147 1 188 1 350 4 190 4 64 1 244 1 192 4 248 1 298 1 101 1 193 5 21 2 200 2 201 1 69 1 73 1 112 1 316 1 264 1 369 1 38 4 374 1 78 1 213 2 171 1 326 3 272 2 126 1 131 1 132 4 
108 1 13 1 137 1 
320 1 13 1 
296 1 
328 1 13 1 84 1 
261 1 13 1 
328 1 13 1 
100 1 251 1 328 1 13 3 137 2 84 1 
70 4 223 1 269 1 283 1 225 1 182 2 54 1 344 1 299 1 66 1 331 3 215 7 216 1 305 3 233 1 36 1 135 2 
70 4 223 1 269 1 283 1 225 1 182 2 54 1 344 1 299 1 66 1 331 3 215 7 216 1 305 3 233 1 36 1 135 2 
70 4 223 1 269 1 283 1 225 1 245 1 182 2 54 1 344 1 299 1 66 1 331 3 215 7 216 1 305 3 233 1 36 1 135 2 
70 16 223 2 283 1 225 4 141 3 182 5 54 2 7 1 94 1 344 1 259 4 288 1 32 3 232 1 233 4 235 1 120 1 36 5 269 2 213 3 272 3 299 1 99 1 66 1 331 15 215 31 216 2 305 10 307 1 335 1 358 2 48 1 135 3 278 1 
70 5 223 1 269 1 283 1 225 1 181 1 182 3 54 1 7 2 344 1 66 1 331 4 215 9 216 1 185 1 305 4 233 1 335 1 307 2 358 4 235 2 36 1 120 2 135 2 
282 1 0 1 311 1 52 1 139 1 257 1 56 1 342 1 28 1 75 1 183 1 9 1 346 1 114 1 164 1 166 1 16 1 321 1 293 1 210 1 322 1 301 1 355 2 174 2 333 2 195 1 197 1 357 1 222 1 160 1 
282 1 0 1 52 1 139 1 257 1 363 1 56 1 342 1 28 1 183 1 9 1 346 1 114 1 164 2 166 1 16 1 321 1 293 1 210 1 211 1 322 1 273 1 301 1 355 3 174 2 333 3 197 1 357 1 222 1 160 1 
0 1 52 1 139 1 257 1 28 1 183 1 9 1 346 1 164 2 166 1 16 1 321 1 293 1 210 1 211 1 322 1 273 1 301 1 355 2 174 2 333 2 197 1 357 1 222 1 160 1 
293 1 321 2 282 1 322 1 243 1 328 1 271 1 257 2 228 1 363 1 364 1 229 1 28 2 258 1 301 2 114 1 355 1 333 1 357 1 166 1 50 1 222 1 13 1 
282 1 52 1 257 1 56 1 342 1 28 1 75 1 183 1 346 1 114 1 166 1 16 1 321 1 293 1 210 1 211 1 322 1 301 1 355 1 174 2 333 1 195 1 197 1 357 1 222 1 160 1 
354 1 
341 1 179 2 53 2 229 2 347 2 345 1 95 2 59 5 348 1 291 2 236 1 97 1 147 1 13 1 98 2 240 1 239 1 190 2 350 5 293 1 297 1 298 1 193 2 103 1 357 2 67 2 24 1 69 1 312 1 254 6 365 2 364 1 204 1 316 1 367 1 119 4 35 1 166 2 167 1 121 1 38 2 374 1 322 1 78 1 40 2 328 1 125 1 83 1 42 1 378 1 219 1 49 1 220 3 50 1 222 2 
69 1 312 1 179 1 254 2 367 1 345 1 59 3 119 2 167 1 374 1 240 1 239 1 350 3 297 1 298 1 42 1 103 1 219 1 49 1 134 1 220 1 24 1 
69 1 312 1 254 1 367 1 345 1 59 3 119 3 167 1 147 1 374 1 98 1 240 1 239 1 350 3 190 1 297 1 298 1 42 1 103 1 219 1 49 1 134 1 220 1 24 1 
69 1 312 1 179 1 254 2 367 1 345 1 347 1 59 3 119 3 167 1 147 1 374 1 98 1 240 1 239 1 350 3 190 1 297 1 298 1 42 1 103 1 134 1 219 1 49 1 220 1 24 1 
69 1 312 1 254 7 179 4 53 2 365 2 316 1 367 1 345 1 347 4 95 2 59 5 12 1 119 6 167 1 121 1 96 1 97 1 292 1 147 5 38 1 14 1 98 4 374 1 61 1 240 1 239 1 190 5 350 5 78 1 40 2 297 1 83 1 298 1 42 1 193 1 103 1 67 2 378 1 219 1 134 1 49 1 220 3 24 1 
179 2 53 2 345 1 347 2 95 2 59 4 291 2 97 1 147 1 98 2 239 1 240 1 350 4 190 2 297 1 298 1 193 1 103 1 67 2 24 1 69 1 312 1 254 4 365 2 367 1 316 1 119 4 167 1 121 1 38 1 374 1 78 1 40 2 125 1 83 1 42 1 49 1 219 1 378 1 220 2 
69 1 312 1 179 2 254 4 53 2 365 2 367 1 316 1 347 2 345 1 95 2 59 4 119 4 167 1 121 1 96 1 97 1 147 1 292 1 38 1 14 1 98 2 374 1 240 1 239 1 190 1 350 4 78 1 40 2 297 1 83 1 298 1 42 1 193 1 103 1 67 2 378 1 219 1 49 1 220 2 24 1 
69 1 312 1 179 2 254 4 53 2 365 2 367 1 316 1 347 2 345 1 95 2 59 4 119 4 167 1 121 1 96 1 97 1 147 1 292 1 38 1 14 1 98 2 374 1 240 1 239 1 190 1 350 4 78 1 40 2 297 1 83 1 298 1 42 1 193 1 103 1 67 2 378 1 219 1 49 1 220 2 24 1 
69 1 312 1 179 2 254 4 367 1 343 1 316 1 347 2 345 1 59 4 291 2 119 4 167 1 96 1 97 1 147 1 38 1 98 2 374 1 240 1 239 1 190 1 350 4 78 1 40 2 297 1 83 1 298 1 42 1 302 1 193 1 103 1 67 2 378 1 219 1 49 1 220 2 276 2 159 2 24 1 277 1 
69 1 312 1 179 3 254 5 53 2 365 2 316 1 367 1 345 1 347 3 95 2 59 4 119 5 12 1 167 1 121 1 96 1 97 1 147 1 292 1 38 1 14 1 374 1 98 3 240 1 239 1 190 1 350 4 78 1 40 2 297 1 83 1 298 1 42 1 193 1 103 1 67 2 378 1 219 1 49 1 220 2 24 1 
69 1 312 1 179 3 254 5 53 2 365 2 316 1 367 1 345 1 347 3 95 2 59 4 119 5 12 1 167 1 121 1 96 1 97 1 147 1 292 1 38 1 14 1 374 1 98 3 240 1 239 1 190 1 350 4 78 1 40 2 297 1 83 1 298 1 42 1 193 1 103 1 67 2 378 1 219 1 49 1 220 2 24 1 
179 2 345 1 347 2 59 4 291 2 97 1 147 1 98 2 239 1 240 1 350 4 190 1 297 1 298 1 302 1 193 1 103 1 67 2 159 2 24 1 69 1 312 1 254 4 367 1 316 1 119 4 167 1 38 1 374 1 78 1 40 2 125 1 83 1 42 1 49 1 219 1 378 1 276 2 220 2 
70 3 283 1 1 2 108 1 225 1 182 2 7 1 344 1 233 1 117 1 370 1 235 1 120 1 266 1 294 1 269 1 81 1 127 1 66 1 215 6 331 3 216 1 305 2 307 1 358 2 135 1 
178 1 70 10 1 1 225 3 141 3 182 1 74 1 7 2 259 4 288 1 32 3 232 2 233 1 370 13 235 2 36 1 120 2 266 1 238 1 294 2 79 1 325 1 213 1 81 4 272 3 127 13 331 7 215 17 305 2 307 2 358 4 198 1 89 1 
69 2 178 1 70 1 1 1 163 1 229 1 7 1 113 1 345 1 231 1 265 1 235 1 166 1 120 1 266 1 13 1 374 2 293 1 322 1 294 1 325 1 171 1 81 1 328 1 248 1 84 1 300 1 172 1 173 1 102 1 331 1 215 2 307 1 357 1 358 2 253 1 222 1 89 1 
178 1 283 1 1 2 225 3 141 2 182 4 5 1 229 1 7 3 344 1 345 1 230 2 233 3 235 3 13 2 293 2 294 3 248 1 66 1 300 2 102 2 305 8 307 3 357 3 358 6 69 3 70 10 163 2 27 2 263 2 207 2 370 7 166 3 120 3 36 4 266 3 374 3 211 1 269 1 322 2 325 1 171 1 213 2 81 7 328 2 272 2 127 7 84 2 172 1 173 1 331 10 215 20 216 1 45 2 87 1 338 1 135 1 89 1 222 3 
69 1 178 1 70 1 311 1 72 1 4 1 364 1 229 2 7 2 368 1 345 1 117 1 235 2 208 1 166 8 120 2 266 2 13 3 374 1 293 2 211 1 322 2 294 2 324 1 171 1 328 2 248 1 20 1 172 1 215 2 331 1 47 1 307 2 357 7 358 4 222 8 89 1 50 1 136 2 
69 1 70 1 225 1 141 1 182 1 7 1 345 1 233 1 370 1 235 1 120 1 372 1 266 1 374 1 294 1 325 1 171 1 213 1 81 1 272 1 248 1 127 1 215 3 331 2 131 1 305 1 334 1 307 1 358 2 
70 2 294 1 225 1 141 1 81 1 127 1 7 1 215 2 305 1 117 1 307 1 370 1 358 2 235 1 36 1 120 1 266 1 309 1 
294 1 213 1 182 1 81 1 127 1 7 1 215 2 331 2 305 1 233 1 117 1 307 1 370 1 358 2 235 1 218 1 120 1 266 1 
70 2 225 1 141 1 182 1 7 1 233 1 117 1 370 2 235 1 120 1 36 1 266 1 294 1 213 1 81 2 272 1 127 2 215 4 331 2 305 2 307 1 358 2 
70 2 294 1 324 1 225 1 141 1 81 1 127 1 7 1 215 2 305 1 307 1 370 1 358 2 235 1 36 1 120 1 266 1 309 1 
294 1 324 1 213 1 182 1 81 1 127 1 7 1 215 2 331 2 305 1 233 1 307 1 370 1 358 2 235 1 218 1 120 1 266 1 
70 2 225 1 141 1 182 1 7 1 233 1 370 2 235 1 120 1 36 1 266 1 294 1 324 1 213 1 81 2 272 1 127 2 215 4 331 2 305 2 307 1 358 2 
70 2 225 1 141 1 182 1 7 1 233 1 370 2 235 1 120 1 36 1 266 1 294 1 213 1 81 2 272 1 127 2 215 4 331 2 305 2 307 1 358 2 
69 1 70 1 178 1 1 1 163 1 229 1 7 1 207 1 235 1 166 1 120 1 266 1 13 1 374 1 293 1 322 1 294 1 328 1 84 1 300 1 215 2 102 1 331 1 307 1 357 1 358 2 222 1 89 1 
69 1 70 1 178 1 362 1 1 1 26 1 229 1 7 1 235 1 166 1 120 1 266 1 13 1 374 1 293 1 322 1 294 1 328 1 84 1 215 2 102 1 331 1 377 1 307 1 357 1 358 2 222 1 89 1 
70 2 225 1 141 1 182 1 7 1 233 1 370 2 235 1 120 1 36 1 266 1 294 1 325 1 213 1 81 2 272 1 127 2 215 4 331 2 305 2 307 1 358 2 
69 1 70 2 311 1 225 1 141 1 163 1 182 1 7 1 230 1 233 1 207 1 370 2 235 1 36 1 166 1 120 1 266 1 13 1 374 1 293 1 322 1 294 1 213 1 81 2 328 1 272 1 127 2 84 1 300 1 331 2 215 4 102 1 305 2 307 1 357 1 358 2 222 1 
69 1 70 2 225 1 141 1 142 1 7 1 345 1 233 1 370 1 235 1 36 1 120 1 372 1 266 1 374 1 294 1 325 1 213 1 171 1 81 1 272 1 248 1 127 1 331 1 215 3 131 1 305 1 307 1 358 2 
70 9 225 3 141 3 181 1 182 3 203 1 287 1 7 2 259 2 315 1 288 1 184 2 32 1 232 1 233 3 235 2 60 2 120 2 36 3 15 1 213 3 272 3 331 10 215 19 304 1 305 6 307 2 358 4 275 1 279 1 
70 14 71 1 225 3 141 3 181 1 182 2 203 1 7 3 315 2 259 2 288 2 184 1 32 2 233 2 235 3 36 2 60 4 120 3 187 1 270 1 213 2 272 3 330 1 331 12 215 26 305 4 304 2 335 2 307 3 157 1 358 6 217 1 275 1 279 1 
70 22 71 1 283 1 225 6 141 5 181 1 182 4 203 1 7 3 344 1 259 5 315 1 288 3 184 1 32 3 232 2 233 5 235 3 60 4 120 3 36 4 187 1 15 1 269 1 270 1 213 4 272 5 330 1 66 1 331 22 215 44 216 1 304 2 305 8 335 1 307 3 157 1 217 1 358 6 275 1 135 1 176 1 279 1 
70 22 71 1 283 1 225 6 141 5 181 1 182 5 203 1 7 4 344 1 259 5 315 1 288 3 184 1 32 3 232 2 233 5 235 4 60 4 120 4 36 3 187 1 15 1 269 1 270 1 213 4 272 5 330 1 66 1 331 21 215 43 216 1 304 2 305 8 335 2 307 4 157 1 217 1 358 8 275 1 135 1 176 1 279 1 
70 27 71 1 283 1 225 8 141 7 181 1 182 7 203 1 7 2 344 1 259 4 315 1 288 2 184 1 32 4 232 2 233 8 235 2 60 4 120 2 36 7 187 1 269 1 79 2 270 1 213 7 272 7 330 1 66 1 331 25 215 52 216 1 304 1 305 14 335 1 307 2 157 1 217 1 358 4 275 1 135 1 279 1 
153 1 241 1 318 1 33 1 351 1 93 1 379 1 58 1 30 1 189 1 
39 1 371 1 
241 1 318 1 33 1 250 1 327 1 37 1 58 1 30 1 189 1 
115 1 221 1 
319 1 150 1 31 1 
190 1 350 1 241 1 212 1 351 1 93 1 247 1 25 1 151 2 30 1 58 1 153 1 318 1 194 1 33 1 59 1 155 1 189 1 
190 1 350 1 241 1 212 1 351 1 93 1 247 1 25 1 151 2 30 1 58 1 153 1 318 1 194 1 33 1 59 1 155 1 189 1 
190 1 350 1 241 1 212 1 351 1 93 1 247 1 25 1 151 2 30 1 58 1 153 1 318 1 194 1 33 1 59 1 155 1 189 1 
115 1 319 1 221 1 
115 1 319 1 221 1 
150 1 31 1 
319 1 150 1 31 1 
256 1 82 1 
69 2 1 1 256 1 25 1 366 1 58 1 30 1 345 2 318 1 33 1 59 1 371 1 373 1 374 2 189 1 350 1 241 1 39 1 171 2 326 1 82 1 248 2 151 1 152 1 155 1 21 1 199 1 
69 2 178 1 70 1 7 1 8 1 368 1 345 2 77 1 235 1 166 2 120 1 266 1 168 1 13 1 374 2 293 1 242 1 322 1 294 1 191 1 325 1 328 1 215 2 331 1 47 1 307 1 358 2 357 2 222 2 89 1 136 2 
293 1 311 1 210 1 322 1 211 1 52 1 257 1 342 1 183 1 346 1 317 1 174 2 116 1 357 2 337 1 166 2 222 2 16 1 160 1 
293 1 90 1 210 1 211 1 322 1 52 1 257 1 342 1 183 1 346 1 174 2 116 1 357 1 166 1 222 1 16 1 160 1 
293 1 322 1 110 1 328 1 257 1 271 1 364 1 229 1 357 1 337 1 166 1 222 1 50 1 13 1 
293 1 210 1 322 1 211 1 52 1 257 1 342 1 183 1 346 1 317 1 174 2 116 1 357 1 337 1 166 1 222 1 16 1 160 1 
17 1 
190 1 193 1 162 1 108 1 360 1 147 1 38 1 
254 1 53 1 365 1 316 1 95 1 59 1 291 1 121 1 97 1 147 1 38 1 190 2 350 1 78 1 83 1 193 1 220 1 
361 1 341 1 224 1 254 2 225 1 53 3 141 1 27 1 229 1 316 2 29 1 233 1 59 2 291 6 166 1 97 2 13 4 38 3 190 3 350 2 293 1 320 2 322 2 78 2 124 1 213 1 246 1 272 1 328 1 192 3 83 2 84 1 129 1 193 4 103 1 132 3 251 1 357 1 359 1 200 2 220 1 222 1 137 1 
341 1 340 1 71 1 254 1 53 3 225 2 141 2 284 2 204 1 259 1 316 2 288 1 32 1 233 2 145 1 59 1 291 6 97 2 187 1 147 2 38 5 350 1 190 5 78 2 213 2 272 2 192 5 83 2 330 1 193 8 132 5 157 1 217 1 200 1 220 1 
69 1 225 2 284 2 73 1 316 1 344 1 345 1 233 1 59 1 264 1 234 1 97 1 292 1 38 2 374 1 350 1 269 1 78 1 171 1 248 1 126 1 83 1 298 1 216 1 193 2 131 1 200 1 201 1 
190 1 78 1 162 1 83 1 316 1 193 1 360 1 97 1 147 1 38 1 
190 2 225 1 53 2 141 1 213 1 284 1 272 1 192 2 193 2 132 2 233 1 291 4 200 1 38 2 
190 1 350 1 254 1 59 1 220 1 147 1 
341 2 254 4 364 1 229 2 204 2 316 2 143 1 59 3 35 1 166 4 236 1 97 2 13 1 170 1 38 2 293 1 350 3 322 1 78 2 64 1 328 1 83 1 85 1 193 2 133 2 357 4 220 2 222 4 50 1 
69 3 1 1 163 1 7 1 229 1 345 2 264 1 207 1 235 1 120 1 166 1 266 1 13 1 374 3 293 1 322 1 294 1 376 1 171 2 328 1 248 2 84 1 300 1 215 1 331 1 102 1 131 2 307 1 358 2 357 1 89 1 222 1 
341 1 190 2 78 1 53 1 83 1 204 1 316 1 193 1 132 1 291 2 97 1 147 1 38 1 
62 1 241 1 189 1 
241 1 93 1 352 1 82 1 189 1 
62 1 241 1 189 1 
62 1 241 1 189 1 
161 1 241 1 189 1 
161 1 241 1 189 1 
161 1 241 1 189 1 
241 1 189 1 
318 1 58 1 
70 4 269 1 283 1 225 1 182 2 7 2 344 1 66 1 331 4 215 8 216 1 305 3 233 1 307 2 335 1 358 4 235 2 36 1 120 2 135 1 
70 3 269 1 283 1 108 1 225 1 182 2 344 1 66 1 331 3 215 6 216 1 305 2 233 1 135 1 
70 2 225 1 213 1 141 1 182 1 272 1 7 1 331 2 215 4 305 2 233 1 307 1 358 2 235 1 120 1 36 1 380 1 
70 3 225 1 213 1 141 1 182 1 272 1 259 2 288 1 331 4 215 7 32 1 305 2 233 1 232 1 36 1 
70 11 283 1 225 3 141 2 226 1 182 5 7 2 344 1 259 2 32 2 232 1 233 3 235 2 36 4 120 2 238 1 269 2 79 1 213 2 272 2 66 1 215 23 331 12 216 2 305 9 335 2 307 2 358 4 135 1 
215 1 331 1 259 1 
70 1 215 1 32 1 
70 3 225 1 141 1 213 1 182 2 272 1 7 1 27 1 331 3 215 6 305 3 233 1 307 1 358 2 235 1 120 1 36 1 380 1 
70 6 71 1 225 2 141 2 181 1 182 1 7 1 259 1 288 1 32 1 233 2 235 1 36 1 120 1 187 1 213 2 272 2 330 1 215 12 331 6 305 2 307 1 157 1 217 1 358 2 
70 3 269 1 225 1 182 1 344 1 215 6 331 3 216 1 305 2 233 1 36 1 
70 1 269 1 283 1 226 1 182 1 7 1 66 1 331 2 215 3 216 1 305 2 335 1 307 1 358 2 235 1 36 1 120 1 
70 6 269 2 225 2 182 3 344 1 215 12 331 6 216 2 305 6 233 2 234 1 36 3 
70 2 225 1 141 1 181 1 7 1 215 2 305 1 307 1 358 2 235 1 120 1 36 1 
70 2 225 1 213 1 141 1 181 1 182 1 272 1 7 1 331 2 215 4 305 2 233 1 307 1 358 2 235 1 120 1 36 1 
70 1 269 1 226 1 181 1 182 1 7 3 331 2 215 3 216 1 305 2 335 1 307 3 358 6 235 3 120 3 36 1 15 1 
70 16 283 1 225 5 226 1 141 3 181 1 182 7 7 5 344 2 259 4 288 1 32 3 232 1 233 5 235 5 120 5 36 5 15 1 269 3 213 3 272 3 99 1 66 1 331 18 215 34 216 3 305 12 335 2 307 5 358 10 48 1 380 1 135 1 278 1 
70 6 283 1 225 2 141 1 181 1 182 2 7 1 344 1 259 2 288 1 32 1 233 1 232 1 235 1 120 1 269 1 272 1 66 1 215 11 331 5 216 1 305 2 307 1 217 1 358 2 135 1 
70 6 283 1 225 2 141 1 181 1 182 2 7 2 344 1 259 2 288 1 32 1 233 1 232 1 235 2 120 2 36 1 269 1 272 1 66 1 215 11 331 5 216 1 305 3 307 2 217 1 358 4 380 1 135 1 
70 9 71 1 283 1 225 3 141 2 181 1 182 3 7 3 344 1 259 1 288 1 32 1 233 3 235 3 36 1 120 3 187 1 269 1 213 2 272 2 330 1 66 1 215 19 331 10 216 1 305 4 307 3 335 1 157 1 217 1 358 6 380 1 135 1 
70 10 71 1 283 1 225 3 141 2 181 1 182 3 7 3 344 1 259 1 288 1 32 1 233 2 235 3 36 2 120 3 187 1 269 1 213 1 272 2 330 1 66 1 215 17 331 7 216 1 305 5 335 1 307 3 157 1 217 1 358 6 380 1 135 1 
70 6 283 1 225 2 141 1 181 1 182 2 7 1 344 1 259 2 288 1 32 1 233 1 232 1 235 1 120 1 269 1 272 1 66 1 215 11 331 5 216 1 305 2 307 1 217 1 358 2 135 1 
70 6 71 1 225 2 141 2 181 1 182 1 7 1 259 1 288 1 32 1 233 2 235 1 36 1 120 1 187 1 213 2 272 2 330 1 215 12 331 6 305 2 307 1 157 1 217 1 358 2 
70 10 71 1 283 1 225 3 141 2 181 1 182 3 7 4 344 1 259 1 288 1 32 1 233 2 235 4 36 2 120 4 187 1 269 1 213 1 272 2 330 1 66 1 215 18 331 8 216 1 305 5 307 4 335 2 157 1 217 1 358 8 380 1 135 1 
70 9 71 1 225 3 141 3 181 1 182 3 7 4 259 1 288 1 32 1 233 2 235 4 36 3 120 4 187 1 15 1 213 2 272 3 330 1 215 16 331 7 305 6 307 4 335 2 157 1 217 1 358 8 
70 3 269 3 283 2 225 1 182 3 344 1 66 1 331 4 215 7 216 3 305 6 233 1 36 3 
70 10 71 1 283 1 225 3 141 2 181 1 182 3 7 4 344 1 259 1 288 1 32 1 233 2 235 4 36 1 120 4 187 1 15 1 269 1 213 1 272 2 330 1 66 1 215 18 331 8 216 1 305 4 307 4 335 2 157 1 217 1 358 8 135 1 
69 1 345 1 295 1 1 1 118 1 297 1 374 1 
69 1 295 1 1 1 214 1 297 1 314 1 76 1 345 1 43 1 118 1 336 1 374 1 
293 1 322 1 108 1 357 1 328 1 166 1 50 1 364 1 222 1 13 1 229 1 
69 2 293 1 322 1 1 1 171 1 328 1 248 1 229 1 84 1 300 1 172 1 345 1 102 1 357 1 166 1 222 1 13 1 374 2 
239 1 69 2 293 1 322 1 1 1 171 2 227 1 328 2 248 1 298 1 367 1 84 2 300 1 172 1 345 2 102 1 261 1 133 1 357 1 166 1 222 1 13 3 374 2 
69 2 362 1 1 1 227 1 367 1 345 2 206 1 261 1 166 2 13 3 374 2 239 1 293 1 322 1 171 2 328 2 248 1 84 2 298 1 172 1 102 1 357 2 133 1 222 2 
254 1 227 1 229 1 10 1 206 1 261 1 59 2 166 3 13 4 147 1 293 1 320 1 350 2 190 1 322 1 328 1 84 1 356 1 103 1 357 3 133 1 222 3 137 1 
190 1 350 2 320 1 293 1 322 1 224 1 254 1 227 1 328 1 229 1 84 1 206 1 261 1 103 1 59 2 133 1 357 3 166 3 222 3 147 1 13 4 137 1 
293 1 322 1 72 1 357 1 166 1 222 1 
293 2 311 1 211 1 322 3 72 1 255 1 4 1 140 1 328 2 57 1 20 1 229 2 84 1 368 1 357 6 251 1 208 1 166 7 222 7 13 3 136 1 
69 2 70 3 311 1 283 1 1 2 225 1 163 1 182 2 7 2 344 1 345 1 230 1 233 1 263 1 207 1 370 1 77 1 235 2 120 2 166 1 266 2 13 1 374 2 293 1 269 1 322 1 294 2 325 1 171 1 81 1 328 1 248 1 127 1 84 1 66 1 300 1 172 1 331 3 215 6 102 1 216 1 305 2 307 2 358 4 357 1 135 1 222 1 
224 1 254 2 162 1 229 1 316 2 29 1 59 3 166 1 97 2 147 1 13 2 38 1 190 1 350 3 320 1 78 2 326 1 83 2 129 1 85 1 193 1 103 1 357 1 359 1 360 1 220 1 222 1 137 1 
293 1 311 1 322 2 72 1 246 1 328 1 84 1 357 2 251 1 166 2 222 2 13 2 137 1 
209 1 293 1 311 1 322 1 328 1 364 1 229 1 206 1 357 4 166 4 222 4 50 1 13 1 
293 1 322 2 140 1 109 1 328 1 57 1 84 1 87 1 196 1 133 1 357 2 166 2 222 2 13 1 
346 1 293 1 210 1 174 1 322 1 357 1 166 1 222 1 229 1 183 1 
368 1 293 1 242 1 311 1 322 1 211 1 357 2 328 1 166 2 222 2 13 1 
209 1 293 2 311 1 322 2 4 1 328 2 364 1 229 1 368 1 133 1 357 4 166 5 208 1 50 1 222 5 13 3 
209 1 293 2 311 1 322 2 19 1 4 1 328 2 364 1 229 1 368 1 133 1 357 4 166 5 50 1 222 5 13 3 
69 2 293 1 322 1 362 1 1 1 171 1 328 1 248 1 229 1 84 1 172 1 345 1 102 1 357 1 166 1 222 1 13 1 374 2 
293 1 322 2 255 1 140 1 328 1 57 1 84 1 133 1 357 1 251 1 166 1 222 1 13 1 
86 1 332 1 1 1 156 1 34 1 
239 1 240 1 190 1 350 2 1 1 180 1 326 1 298 1 367 1 11 1 86 2 144 1 332 2 103 1 59 2 156 1 34 2 147 1 280 1 
69 1 191 1 8 1 345 1 332 1 156 1 34 1 168 1 374 1 
11 1 156 1 280 1 
0 1 108 1 139 1 9 1 
114 1 282 1 0 1 355 1 333 1 139 1 9 1 
321 1 355 1 301 1 
282 1 0 1 2 1 3 2 139 1 75 1 9 1 114 1 260 1 355 3 333 3 105 1 
114 1 282 1 0 1 355 2 164 1 262 1 333 2 139 1 9 1 
282 1 0 1 75 1 114 1 346 1 355 1 174 1 333 1 177 1 51 1 16 1 
114 1 282 1 0 1 355 1 333 1 75 1 9 1 
114 1 282 1 355 1 333 1 139 1 75 1 9 2 
282 2 0 1 41 1 75 1 9 1 114 2 355 2 333 2 267 1 68 1 
282 1 0 2 139 1 75 1 9 1 114 1 355 3 164 2 333 3 88 1 104 1 252 1 177 1 
282 1 0 1 52 1 139 1 75 1 183 1 9 1 114 1 346 1 355 2 174 2 164 1 333 2 165 1 16 1 
282 2 0 2 375 1 139 1 75 1 9 1 114 2 355 4 164 2 333 4 262 1 88 1 177 1 
114 1 282 1 0 1 355 1 333 1 139 1 75 1 9 1 
282 1 0 3 3 1 2 1 139 2 202 1 9 2 260 1 114 1 355 4 164 2 333 4 88 1 177 1 
282 1 339 1 0 1 139 1 75 1 9 1 114 1 355 2 46 1 164 1 333 2 310 1 
282 1 0 1 2 1 3 2 139 1 75 1 9 1 114 1 260 2 355 3 333 3 22 1 
205 1 0 2 107 1 128 2 
114 1 282 1 355 1 18 1 333 1 75 1 
114 1 282 1 0 1 355 2 164 1 333 2 139 1 104 1 75 1 9 1 
91 1 
114 1 282 1 0 1 355 1 333 1 139 1 75 1 9 1 
282 1 0 1 3 1 139 1 75 1 9 1 114 1 355 3 164 1 333 3 104 1 
0 1 88 1 202 1 177 1 
0 1 9 1 

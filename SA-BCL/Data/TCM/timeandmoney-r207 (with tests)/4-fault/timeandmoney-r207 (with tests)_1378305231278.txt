#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 2 55 1 279 1 359 1 220 1 332 1 222 9 313 2 224 4 98 1 338 2 369 2 289 1 100 1 63 1 10 6 15 1 344 2 293 2 66 1 232 1 215 1 68 9 377 3 152 5 216 2 154 1 50 1 
329 2 55 1 279 1 359 1 220 1 332 1 222 9 313 2 224 4 98 1 338 2 369 2 289 1 100 1 63 1 10 6 15 1 344 2 293 2 66 1 232 1 215 1 68 9 377 3 152 5 216 2 154 1 50 1 
329 2 55 1 279 1 359 1 220 1 332 1 222 10 313 2 224 5 98 1 338 2 369 2 289 1 100 1 63 1 10 7 15 1 344 2 293 2 66 1 232 1 215 1 68 10 377 4 152 6 216 2 154 1 50 1 
329 2 55 1 279 1 359 1 220 1 332 1 222 7 313 2 224 3 98 1 338 2 369 2 100 1 63 1 10 4 15 1 344 2 293 2 66 1 232 1 215 1 68 7 377 2 152 4 216 1 154 1 50 1 
63 1 10 3 293 1 329 1 344 1 279 1 220 1 332 1 222 4 313 1 224 2 377 1 68 4 152 3 216 2 154 1 369 1 289 1 
307 1 329 1 344 1 293 1 38 1 55 1 279 1 359 1 220 1 222 2 313 1 68 2 152 1 338 1 154 1 186 1 
10 1 377 1 68 3 66 1 344 2 329 2 279 1 220 1 152 2 338 1 222 3 154 1 224 1 
63 1 10 7 293 1 232 1 329 2 344 2 66 1 279 1 220 1 332 1 222 9 313 1 224 4 29 1 68 9 377 3 59 1 152 5 338 1 216 2 154 1 369 1 50 1 289 1 
63 1 10 7 293 1 232 1 329 2 344 2 66 1 279 1 220 1 332 1 222 9 313 1 224 4 29 1 68 9 377 3 59 1 152 5 338 1 216 2 154 1 369 1 50 1 289 1 
153 1 317 1 297 1 
301 2 356 1 297 1 
156 2 376 2 256 2 333 1 18 2 368 1 140 2 172 2 
156 3 157 1 246 1 95 1 280 1 358 2 207 1 221 1 333 1 253 2 114 1 209 1 116 2 256 2 195 1 169 1 119 2 211 2 287 1 9 1 368 1 86 1 370 1 140 2 172 3 371 1 229 1 123 1 231 1 213 1 144 1 40 1 201 1 18 2 376 2 348 1 70 1 306 1 204 1 
156 1 376 1 256 1 246 1 74 1 8 1 18 1 368 1 140 1 172 1 
156 1 35 1 94 1 25 1 294 1 246 1 251 1 312 1 297 1 138 1 317 1 140 1 228 1 172 1 
156 2 35 2 94 1 25 2 74 1 294 1 246 2 18 2 297 1 282 1 376 2 256 2 8 1 138 1 317 1 368 1 140 2 228 1 172 2 
35 1 255 1 25 1 208 1 288 1 
35 2 25 2 145 1 208 1 175 1 288 1 317 1 297 1 
35 1 25 1 208 1 
35 1 156 1 25 1 246 1 74 1 18 1 282 1 376 1 256 1 8 1 288 1 368 1 140 1 172 1 
297 1 
5 1 35 2 25 2 208 1 175 1 288 1 317 1 297 1 
35 5 230 2 25 5 278 1 373 1 39 2 361 1 175 1 208 2 297 1 346 1 166 1 257 1 137 2 136 1 182 1 288 2 317 1 277 1 
333 1 153 1 
156 2 206 1 333 2 18 1 376 1 256 1 149 1 140 2 172 2 
24 1 150 1 331 1 
156 1 371 1 229 1 213 1 358 1 280 1 221 1 40 1 333 1 253 1 128 1 209 1 195 1 211 1 9 1 172 1 
156 2 229 1 371 1 213 1 280 1 358 1 40 1 221 1 162 1 253 1 115 1 209 1 376 1 256 1 195 1 150 1 211 1 9 1 140 1 172 2 
156 5 234 1 251 1 333 1 162 1 135 1 18 1 115 2 376 4 256 4 149 1 46 1 140 5 172 5 
156 2 109 1 376 2 256 2 246 1 74 1 140 2 172 2 
156 3 376 3 256 3 333 1 18 1 140 3 115 1 172 3 
156 1 376 1 256 1 246 1 74 1 140 1 172 1 
156 1 376 1 256 1 246 1 149 1 206 1 18 1 140 1 172 1 
156 4 94 1 25 1 246 1 95 1 280 1 358 1 221 1 333 1 162 1 253 1 115 1 209 1 116 2 256 3 195 1 119 1 138 1 211 1 9 1 86 1 368 1 370 1 228 1 140 3 172 4 35 1 229 1 371 1 123 1 231 1 213 1 294 1 144 1 40 1 201 1 18 2 237 1 376 3 348 1 149 1 70 1 352 1 306 1 
156 2 376 1 256 1 234 1 333 1 251 1 140 2 172 2 115 1 
35 1 156 3 94 1 25 1 246 1 294 1 295 1 162 1 18 1 297 1 115 2 376 3 256 3 149 1 138 1 352 1 140 3 228 1 172 3 
156 2 24 1 18 1 115 1 376 2 256 2 149 1 150 1 140 2 172 2 
156 1 371 1 229 1 213 1 358 1 280 1 221 1 40 1 333 1 253 1 209 1 195 1 211 1 9 1 172 1 
156 1 110 1 229 1 213 1 358 1 280 1 221 1 40 1 333 1 253 1 195 1 43 1 211 1 9 1 172 1 
157 2 24 2 190 1 247 1 95 1 309 1 75 1 331 2 116 2 196 1 119 4 61 1 370 1 231 1 291 1 16 1 144 1 201 1 88 1 348 2 70 1 150 2 275 1 379 1 
156 1 109 1 376 1 256 1 246 1 138 1 140 1 172 1 
173 1 193 1 
173 1 193 1 
375 1 316 1 
375 1 316 1 
375 1 316 1 
173 1 193 1 56 1 
111 1 173 1 193 1 
79 1 375 1 173 2 233 1 193 2 316 1 
173 1 193 1 56 1 
173 1 193 1 56 1 
173 1 11 1 193 1 
173 1 11 1 193 1 
173 1 11 1 193 1 
260 1 111 1 156 2 35 1 342 1 173 1 53 1 25 1 159 1 134 1 193 1 322 1 362 1 333 1 106 1 42 1 376 2 256 2 181 1 47 1 304 1 184 1 140 2 172 2 
35 2 93 1 173 2 159 2 25 2 233 1 134 2 192 1 193 2 362 1 296 1 297 1 106 2 80 2 324 1 47 3 259 1 305 1 184 2 
293 1 313 1 369 1 
293 1 313 1 186 1 
293 3 33 1 380 1 186 1 318 1 369 2 
293 2 17 1 33 1 186 1 318 1 369 1 
293 2 33 1 186 1 369 1 318 2 
354 1 25 5 355 2 356 1 190 1 247 1 1 1 361 3 208 1 163 2 281 1 166 1 315 1 366 1 226 2 137 1 288 4 317 1 339 1 341 1 35 5 342 1 230 1 291 1 39 1 175 1 297 2 42 1 301 3 182 2 275 1 304 1 
354 3 25 9 356 3 188 1 190 3 247 3 1 1 361 8 208 6 163 6 58 5 78 1 165 1 166 1 255 5 366 2 257 1 226 6 137 2 288 7 317 1 341 2 141 1 35 9 230 2 291 3 39 2 175 1 105 1 323 1 297 5 301 9 182 6 275 3 304 4 
354 1 25 3 355 1 356 2 190 1 247 1 361 3 163 2 281 1 366 1 257 1 226 2 137 1 288 2 317 1 339 1 341 1 35 3 230 1 291 1 39 1 297 3 301 4 182 2 275 1 304 1 
354 2 25 4 355 2 356 3 190 2 247 2 361 5 163 4 281 1 366 1 226 4 257 1 137 1 288 3 317 1 339 1 341 1 141 1 35 4 230 1 291 2 39 1 105 1 323 1 297 4 301 7 182 4 275 2 304 2 
103 1 153 1 9 1 
9 1 101 1 
14 1 
280 1 40 1 9 1 
9 1 197 1 
280 1 9 1 
103 2 280 1 40 1 9 3 92 1 326 1 
198 1 157 4 65 1 262 1 190 1 16 2 75 3 146 1 6 2 117 1 271 1 167 1 348 3 119 7 83 1 275 1 72 1 
198 1 157 4 65 1 262 1 190 1 16 2 75 3 146 1 6 2 117 1 271 1 167 1 348 3 119 7 83 1 275 1 72 1 
198 1 157 4 65 1 262 1 190 1 16 2 75 3 146 1 6 2 117 1 271 1 167 1 348 3 119 7 83 1 275 1 34 1 72 1 
157 16 354 3 247 3 190 4 75 10 116 2 6 3 254 1 117 2 167 1 119 31 83 1 171 1 198 2 65 1 231 1 291 3 262 2 214 3 16 5 144 1 126 1 146 2 201 1 19 1 20 4 271 5 348 15 203 1 70 1 275 4 131 1 48 1 72 1 
157 5 190 1 75 4 116 4 6 2 254 1 117 1 167 1 119 9 198 1 65 1 231 2 262 1 16 3 144 2 146 1 201 2 271 1 238 1 348 4 70 2 275 1 51 1 72 1 
329 1 191 1 279 1 358 1 220 1 221 1 222 2 313 1 253 1 97 1 211 1 338 1 369 1 102 1 10 1 320 1 343 1 213 1 142 1 37 1 344 1 293 2 67 1 265 1 68 2 350 1 152 1 154 1 380 1 186 1 
218 1 329 1 191 1 279 1 358 1 220 1 221 1 222 3 313 1 253 1 97 1 211 1 338 1 369 1 10 2 320 1 343 1 213 1 142 1 37 1 344 1 293 2 265 1 127 1 68 3 272 1 350 1 152 1 380 1 186 1 
218 1 191 1 279 1 358 1 220 1 221 1 222 2 313 1 253 1 97 1 211 1 338 1 369 1 10 2 343 1 213 1 37 1 293 2 265 1 68 2 272 1 350 1 152 1 380 1 186 1 
112 1 329 1 358 1 280 2 221 2 222 1 252 1 253 1 225 1 335 1 195 1 97 2 211 1 338 2 85 1 9 2 319 1 122 1 213 1 343 2 344 1 264 1 40 1 265 2 127 1 267 1 269 1 347 1 68 1 273 1 
320 1 218 1 213 1 343 1 37 1 142 1 293 2 329 1 344 1 191 1 358 1 221 1 67 1 265 1 222 1 313 1 253 1 68 1 97 1 350 1 211 1 338 1 380 1 154 1 186 1 369 1 
349 1 
112 1 52 1 25 2 248 1 358 2 280 2 361 1 221 2 208 2 253 2 225 1 166 1 335 1 195 2 366 1 137 1 211 2 9 2 35 2 122 1 230 1 213 1 39 1 264 1 40 1 175 1 269 1 21 1 182 1 
156 1 94 1 244 1 25 3 246 1 251 1 208 2 312 1 5 1 138 1 140 1 228 1 172 1 35 3 294 1 236 1 175 1 41 1 108 2 69 1 351 1 241 1 
156 1 94 1 244 1 25 3 246 1 208 1 251 1 312 1 5 1 138 1 317 1 228 1 140 1 172 1 35 3 294 1 236 1 175 1 297 1 41 1 108 3 69 1 303 1 241 1 
156 1 94 1 244 1 25 3 246 1 251 1 208 2 312 1 5 1 138 1 317 1 228 1 140 1 172 1 35 3 292 1 294 1 236 1 175 1 297 1 41 1 108 3 69 1 351 1 303 1 241 1 
94 1 0 1 5 1 285 2 137 1 60 2 138 1 228 1 140 1 230 1 292 4 294 1 236 1 297 5 108 6 351 4 69 1 303 4 241 1 156 1 244 1 25 5 356 2 246 1 76 1 361 1 208 7 251 1 27 2 312 1 210 1 166 1 118 1 168 1 31 1 170 2 317 5 172 1 35 5 39 1 175 3 41 1 44 1 182 1 
94 1 285 2 137 1 60 2 138 1 228 1 140 1 230 1 292 2 294 1 236 1 297 2 108 4 301 2 69 1 351 2 303 2 241 1 156 1 243 1 244 1 25 4 356 2 246 1 361 1 251 1 208 4 27 2 312 1 166 1 118 1 168 1 170 2 317 1 172 1 35 4 39 1 175 2 41 1 182 1 
156 1 94 1 244 1 0 1 25 4 356 2 246 1 361 1 208 4 251 1 27 2 312 1 210 1 166 1 118 1 285 2 168 1 60 2 137 1 138 1 170 2 317 1 228 1 140 1 172 1 35 4 230 1 292 2 294 1 39 1 236 1 175 2 297 1 41 1 108 4 44 1 351 2 69 1 182 1 303 2 241 1 
156 1 94 1 244 1 0 1 25 4 356 2 246 1 361 1 208 4 251 1 27 2 312 1 210 1 166 1 118 1 285 2 168 1 60 2 137 1 138 1 170 2 317 1 228 1 140 1 172 1 35 4 230 1 292 2 294 1 39 1 236 1 175 2 297 1 41 1 108 4 44 1 351 2 69 1 182 1 303 2 241 1 
156 1 94 1 244 1 25 4 357 1 246 1 361 1 208 4 251 1 312 1 166 1 118 1 285 2 137 1 138 1 170 2 317 1 228 1 140 1 172 1 35 4 230 1 292 2 294 1 39 1 236 1 175 2 266 2 297 1 179 2 41 1 108 4 301 2 44 1 351 2 69 1 182 1 303 2 241 1 90 1 187 1 
156 1 94 1 244 1 0 1 25 4 356 2 246 1 361 1 76 1 251 1 208 5 27 2 312 1 210 1 166 1 118 1 285 2 168 1 60 2 137 1 138 1 170 2 317 1 228 1 140 1 172 1 35 4 230 1 292 3 294 1 39 1 236 1 175 2 297 1 41 1 108 5 44 1 69 1 351 3 182 1 303 3 241 1 
156 1 94 1 244 1 0 1 25 4 356 2 246 1 361 1 76 1 251 1 208 5 27 2 312 1 210 1 166 1 118 1 285 2 168 1 60 2 137 1 138 1 170 2 317 1 228 1 140 1 172 1 35 4 230 1 292 3 294 1 39 1 236 1 175 2 297 1 41 1 108 5 44 1 69 1 351 3 182 1 303 3 241 1 
94 1 285 2 137 1 138 1 228 1 140 1 230 1 292 2 294 1 236 1 297 1 108 4 301 2 69 1 351 2 303 2 241 1 156 1 243 1 244 1 25 4 357 1 246 1 361 1 251 1 208 4 312 1 166 1 118 1 170 2 317 1 172 1 35 4 39 1 266 2 175 2 179 2 41 1 182 1 
157 3 24 1 190 1 95 1 309 1 75 2 331 1 333 2 116 2 6 1 117 1 167 1 119 6 370 1 198 1 65 1 231 1 16 2 144 1 201 1 348 3 70 1 150 1 275 1 153 1 72 1 
157 8 354 2 24 4 247 1 190 1 75 2 95 2 331 11 333 1 116 4 119 14 84 1 258 1 370 1 123 1 174 1 231 2 291 2 16 1 214 3 144 2 201 2 178 1 19 1 20 3 202 1 271 1 348 6 70 2 150 11 275 2 131 1 204 1 
156 2 157 1 24 1 280 1 358 1 95 1 249 1 221 1 26 1 333 1 162 1 253 1 115 1 209 1 116 2 195 1 256 1 211 1 119 2 9 1 370 1 140 1 172 2 229 1 371 1 123 1 213 1 231 1 144 1 40 1 201 1 128 1 107 1 202 1 376 1 348 1 70 1 204 1 
218 1 190 3 95 3 280 2 331 7 221 2 333 2 6 1 195 1 9 2 140 1 198 1 229 2 65 1 13 1 231 3 291 2 16 4 144 3 201 3 202 1 348 10 70 3 151 2 150 7 240 1 72 1 204 1 156 3 354 2 157 10 24 7 247 2 358 3 75 8 162 1 253 3 28 2 115 1 209 2 116 6 117 1 167 1 256 1 211 3 119 20 86 2 370 3 172 3 371 2 123 1 372 1 213 2 125 2 40 2 376 1 271 4 45 2 275 3 
157 1 112 1 308 1 358 2 95 1 280 2 221 2 253 2 114 1 4 1 225 1 116 2 335 1 195 1 211 2 119 2 9 2 370 1 122 1 123 1 213 1 231 1 144 1 264 1 40 1 201 1 269 1 348 1 70 1 204 1 
156 1 354 1 157 1 24 1 247 1 190 1 75 1 95 1 331 1 116 2 256 1 119 3 139 1 370 1 140 1 172 1 231 1 291 1 16 1 144 1 201 1 18 1 202 1 376 1 348 2 149 1 70 1 150 1 275 1 
157 2 24 1 231 1 291 1 144 1 75 1 309 1 95 1 331 1 201 1 116 2 271 1 70 1 150 1 119 2 275 1 61 1 370 1 
24 1 231 1 16 1 247 1 190 1 144 1 75 1 309 1 95 1 331 1 201 1 116 2 348 2 70 1 150 1 119 2 379 1 370 1 
354 1 157 2 24 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 309 1 95 1 331 2 201 1 116 2 271 1 348 2 70 1 150 2 119 4 275 1 370 1 
157 2 24 1 231 1 291 1 144 1 75 1 95 1 331 1 201 1 4 1 116 2 271 1 70 1 150 1 119 2 275 1 61 1 370 1 
24 1 231 1 16 1 247 1 190 1 144 1 75 1 95 1 331 1 201 1 4 1 116 2 348 2 70 1 150 1 119 2 379 1 370 1 
354 1 157 2 24 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 95 1 331 2 201 1 4 1 116 2 271 1 348 2 70 1 150 2 119 4 275 1 370 1 
354 1 157 2 24 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 95 1 331 2 201 1 116 2 271 1 348 2 70 1 150 2 119 4 275 1 370 1 
156 1 157 1 280 1 358 1 95 1 221 1 333 1 253 1 209 1 116 2 195 1 119 2 211 1 86 1 9 1 370 1 172 1 229 1 371 1 123 1 213 1 231 1 144 1 40 1 201 1 348 1 70 1 204 1 
110 1 156 1 157 1 280 1 358 1 95 1 221 1 333 1 253 1 116 2 195 1 119 2 211 1 9 1 370 1 172 1 229 1 123 1 213 1 231 1 144 1 40 1 176 1 201 1 43 1 348 1 70 1 204 1 
354 1 157 2 24 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 95 1 331 2 201 1 116 2 202 1 271 1 348 2 70 1 150 2 119 4 275 1 370 1 
156 1 157 2 354 1 24 2 190 1 247 1 75 2 358 1 280 1 95 1 331 2 221 1 253 1 209 1 116 2 119 4 211 1 86 1 9 1 370 1 172 1 229 1 371 1 102 1 291 1 213 1 231 1 16 1 144 1 40 1 201 1 271 1 348 2 70 1 150 2 151 1 275 1 
156 1 354 1 157 2 24 1 190 1 247 1 75 1 95 1 331 1 223 1 116 2 256 1 119 3 370 1 140 1 172 1 231 1 291 1 144 1 201 1 18 1 202 1 376 1 271 1 348 1 149 1 70 1 150 1 275 1 
158 2 157 9 354 3 247 3 190 3 75 6 314 1 116 4 119 19 227 1 231 2 291 3 16 3 143 1 214 1 144 2 177 2 201 2 147 1 299 1 19 1 20 2 271 3 238 1 348 10 274 1 89 1 70 2 275 3 131 1 
158 1 157 14 354 3 190 2 247 2 75 4 116 6 254 2 82 1 286 1 119 26 337 1 231 3 291 3 16 2 143 1 214 2 144 3 177 4 201 3 147 1 299 1 20 2 271 2 348 12 238 1 274 2 89 2 70 3 275 3 131 2 276 1 49 1 91 1 
190 5 6 1 286 1 337 1 198 1 65 1 291 4 231 3 143 1 16 4 144 3 201 3 345 1 19 1 299 1 147 1 20 4 348 21 238 1 70 3 72 1 354 4 157 20 158 1 247 4 75 8 116 6 314 1 254 1 117 1 167 1 119 41 82 1 214 3 177 4 271 4 274 1 89 2 275 5 131 3 276 1 49 1 91 1 
158 1 157 20 354 4 247 3 190 4 75 7 314 1 6 1 116 8 254 2 117 1 167 1 82 1 286 1 119 38 337 1 198 1 65 1 231 4 291 4 16 4 143 1 214 3 144 4 177 4 201 4 345 1 147 1 299 1 19 1 20 4 271 3 238 1 348 18 274 1 89 2 70 4 275 5 276 1 131 3 91 1 49 1 72 1 
158 1 157 27 354 7 247 7 190 8 75 14 6 1 116 4 254 1 117 1 167 1 82 1 286 1 119 52 337 1 198 1 65 1 231 2 291 7 16 7 143 1 214 4 144 2 177 4 201 2 178 2 147 1 299 1 19 2 20 4 271 7 238 1 348 25 274 1 89 1 70 2 275 8 276 1 131 2 91 1 49 1 72 1 
106 1 173 1 30 1 159 1 233 1 134 1 192 1 193 1 296 1 184 1 
111 1 53 1 
106 1 173 1 159 1 284 1 54 1 134 1 193 1 130 1 184 1 
2 1 56 1 
79 1 11 1 73 1 
35 1 93 1 173 1 25 1 159 1 233 1 134 1 192 1 193 1 362 1 296 1 297 1 106 1 80 1 324 1 47 2 259 1 184 1 
35 1 93 1 173 1 25 1 159 1 233 1 134 1 192 1 193 1 362 1 296 1 297 1 106 1 80 1 324 1 47 2 259 1 184 1 
35 1 93 1 173 1 25 1 159 1 233 1 134 1 192 1 193 1 362 1 296 1 297 1 106 1 80 1 324 1 47 2 259 1 184 1 
79 1 2 1 56 1 
79 1 2 1 56 1 
11 1 73 1 
79 1 11 1 73 1 
260 1 322 1 
156 2 111 1 25 1 159 1 53 1 134 1 193 1 333 1 363 1 80 1 256 2 288 1 140 2 172 2 35 1 260 1 173 1 342 1 322 1 106 1 42 1 376 2 324 1 181 1 47 1 184 1 304 1 
156 2 157 1 328 1 308 1 280 1 358 2 95 1 221 1 253 2 114 2 116 2 119 2 211 2 212 1 9 1 370 1 140 2 120 1 172 2 12 1 123 1 321 1 213 1 231 1 144 1 201 1 298 1 202 1 348 1 70 1 204 1 
102 1 218 1 213 1 343 1 142 1 293 2 191 1 358 2 221 1 313 1 253 2 129 1 350 1 211 2 353 1 380 1 186 1 369 1 71 1 
218 1 343 1 213 1 142 1 293 2 191 1 358 1 310 1 221 1 313 1 253 1 129 1 350 1 211 1 380 1 186 1 369 1 
122 1 112 1 213 1 343 1 280 2 358 1 235 1 264 1 221 2 40 1 253 1 225 1 335 1 269 1 195 1 273 1 211 1 85 1 9 2 71 1 
218 1 343 1 213 1 142 1 293 2 191 1 358 1 221 1 313 1 253 1 129 1 350 1 211 1 353 1 380 1 186 1 369 1 71 1 
325 1 
182 1 373 1 361 1 153 1 317 1 297 1 277 1 
25 1 356 1 361 1 208 1 27 1 166 1 168 1 137 1 60 1 317 1 35 1 230 1 39 1 175 1 297 2 301 1 182 1 
94 2 52 1 330 1 190 2 280 1 221 2 96 2 3 2 195 1 226 6 137 3 9 6 101 3 230 3 199 1 291 2 103 2 297 7 301 12 148 1 354 2 25 5 356 6 160 2 247 2 358 1 361 8 208 5 163 6 253 1 166 3 366 2 211 1 317 1 121 2 35 5 213 1 39 3 40 1 175 3 182 7 45 2 275 2 92 1 327 2 
354 2 52 1 205 1 132 1 25 1 356 3 247 2 190 2 361 8 208 1 57 1 163 5 166 2 366 1 226 5 137 2 286 1 337 1 317 2 35 1 230 2 291 2 214 1 39 2 175 1 297 5 20 1 301 6 182 5 302 2 275 2 131 1 276 1 49 1 91 1 
156 1 205 1 113 1 25 1 246 1 74 1 190 1 361 2 210 1 282 1 166 1 117 1 256 1 137 1 8 1 368 1 140 1 172 1 198 1 35 1 230 1 65 1 39 1 18 1 376 1 182 2 302 2 275 2 
230 1 39 1 373 1 361 1 297 1 166 1 137 1 182 1 317 1 277 1 
354 2 291 2 356 5 247 2 190 2 361 5 163 5 297 5 301 10 226 5 182 5 45 1 275 2 
35 1 25 1 208 1 175 1 317 1 297 1 
112 1 52 1 25 1 248 1 219 1 280 2 358 2 361 1 221 2 208 2 253 2 225 1 166 1 335 1 195 2 366 1 137 1 211 2 9 2 35 1 122 1 230 1 213 1 39 1 264 1 40 1 175 1 269 1 21 1 182 1 
156 3 358 1 280 1 95 1 221 1 333 1 253 1 209 1 116 2 195 1 256 2 119 1 211 1 368 1 86 1 9 1 140 2 370 1 172 3 371 1 229 1 123 1 231 1 213 1 144 1 40 1 201 1 18 2 376 2 348 1 70 1 306 1 
230 1 52 1 356 1 39 1 361 1 163 1 297 2 166 1 301 2 366 1 137 1 182 1 317 1 
159 1 134 1 23 1 
159 1 133 1 134 1 192 1 322 1 
159 1 134 1 23 1 
159 1 134 1 23 1 
159 1 134 1 242 1 
159 1 134 1 242 1 
159 1 134 1 242 1 
159 1 134 1 
173 1 193 1 
198 1 157 4 65 1 231 2 190 1 16 2 144 2 75 3 201 2 6 1 116 4 254 1 117 1 271 1 167 1 348 4 70 2 119 8 275 1 72 1 
198 1 157 3 65 1 16 2 190 1 75 2 6 1 117 1 167 1 348 3 119 6 275 1 153 1 72 1 
64 1 354 1 157 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 201 1 116 2 271 1 348 2 70 1 119 4 275 1 
157 3 354 1 291 1 16 1 190 1 247 1 214 1 75 2 19 1 20 2 271 1 348 4 119 7 275 1 131 1 
155 1 354 2 157 11 247 2 190 3 75 9 6 1 116 4 254 2 117 2 167 1 119 23 198 2 65 1 291 2 174 1 231 2 214 2 16 5 144 2 201 2 178 1 19 1 20 2 271 4 348 12 70 2 275 3 72 1 
20 1 348 1 119 1 
157 1 214 1 119 1 
64 1 354 1 157 3 231 1 291 1 247 1 190 1 16 2 144 1 75 3 201 1 116 2 271 1 348 3 70 1 119 6 45 1 275 1 
354 2 157 6 291 2 231 1 16 1 190 2 247 2 214 1 144 1 75 2 201 1 116 2 20 1 271 1 238 1 348 6 70 1 286 1 119 12 337 1 275 2 276 1 131 1 91 1 49 1 
198 1 157 3 65 1 190 1 16 1 75 2 117 1 271 1 348 3 119 6 275 1 
198 1 155 1 157 1 231 1 16 1 144 1 75 2 201 1 116 2 254 1 117 1 271 1 167 1 348 2 70 1 119 3 72 1 
198 2 157 5 65 1 231 1 113 1 16 3 190 2 144 1 75 5 201 1 116 2 117 2 271 2 238 1 348 5 70 1 119 10 275 2 
157 2 231 1 291 1 144 1 75 1 201 1 116 2 271 1 238 1 70 1 119 2 275 1 
354 1 157 2 231 1 291 1 16 1 190 1 247 1 144 1 75 2 201 1 116 2 271 1 348 2 238 1 70 1 119 4 275 1 
155 1 198 1 157 1 231 3 16 1 144 3 75 2 201 3 314 1 116 6 254 1 117 1 271 1 348 2 238 1 70 3 119 3 
155 1 157 16 354 3 247 3 190 5 75 12 6 1 314 1 116 10 254 2 117 3 167 1 119 34 171 1 198 3 64 1 65 2 231 5 291 3 214 3 16 7 144 5 201 5 19 1 20 4 271 5 348 18 203 1 238 1 70 5 275 5 131 1 48 1 72 1 
157 4 190 1 75 2 6 1 116 2 117 1 167 1 119 8 198 1 65 1 231 1 214 1 16 2 144 1 201 1 20 1 348 4 238 1 70 1 275 1 131 1 276 1 72 1 
157 6 354 1 190 1 75 3 6 1 116 4 117 1 167 1 119 11 198 1 64 1 65 1 231 2 291 1 16 2 214 1 144 2 201 2 19 1 20 2 271 1 348 5 238 1 70 2 275 2 131 1 276 1 72 1 
157 9 354 2 247 2 190 3 75 4 6 1 116 6 254 1 117 1 167 1 119 19 286 1 337 1 198 1 64 1 65 1 231 3 291 2 214 1 16 3 144 3 201 3 20 1 271 1 348 10 238 1 70 3 275 3 131 1 276 1 49 1 91 1 72 1 
157 10 354 2 247 1 190 2 75 5 6 1 116 6 254 1 117 1 167 1 119 17 286 1 337 1 198 1 64 1 65 1 231 3 291 2 214 1 16 3 144 3 201 3 20 1 271 2 348 7 238 1 70 3 275 3 131 1 276 1 49 1 91 1 72 1 
157 4 190 1 75 2 6 1 116 2 117 1 167 1 119 8 198 1 65 1 231 1 214 1 16 2 144 1 201 1 20 1 348 4 238 1 70 1 275 1 131 1 276 1 72 1 
354 2 157 6 291 2 231 1 16 1 190 2 247 2 214 1 144 1 75 2 201 1 116 2 20 1 271 1 238 1 348 6 70 1 286 1 119 12 337 1 275 2 276 1 131 1 91 1 49 1 
157 10 354 2 247 1 190 2 75 5 6 1 116 8 254 2 117 1 167 1 286 1 119 18 337 1 198 1 64 1 65 1 231 4 291 2 214 1 16 3 144 4 201 4 20 1 271 2 348 8 238 1 70 4 275 3 131 1 276 1 49 1 91 1 72 1 
157 9 354 3 247 2 190 2 75 6 116 8 314 1 254 2 286 1 119 16 337 1 231 4 291 3 214 1 16 3 144 4 201 4 20 1 271 3 348 7 238 1 70 4 275 3 131 1 276 1 49 1 91 1 
198 3 157 3 65 1 190 1 16 3 75 6 117 3 167 2 271 3 348 4 119 7 275 1 72 1 
157 10 354 2 247 1 190 2 75 4 6 1 116 8 314 1 254 2 117 1 167 1 286 1 119 18 337 1 198 1 65 1 231 4 291 2 214 1 16 3 144 4 201 4 20 1 271 1 348 8 238 1 70 4 275 3 131 1 276 1 49 1 91 1 72 1 
156 1 270 1 234 1 333 1 251 1 140 1 172 1 
156 1 290 1 234 1 200 1 333 1 251 1 311 1 164 1 180 1 270 1 140 1 172 1 
335 1 195 1 280 1 264 1 358 1 211 1 153 1 9 1 253 1 
156 2 229 1 213 1 280 1 358 1 40 1 221 1 333 1 253 1 115 1 209 1 376 1 256 1 195 1 211 1 9 1 140 1 172 2 
156 2 229 1 213 1 246 1 294 1 280 2 358 1 40 2 221 1 250 1 333 1 253 1 115 1 209 1 376 1 256 2 138 1 211 1 197 1 9 3 140 2 62 1 172 2 
156 2 229 1 213 1 246 1 294 1 280 2 358 2 40 2 221 1 250 1 333 1 253 2 115 1 268 1 376 1 256 2 43 1 138 1 211 2 197 1 9 3 140 2 62 1 172 2 
35 2 94 1 25 2 213 1 280 1 358 3 103 1 40 1 221 1 250 1 208 1 253 3 297 1 268 1 195 1 81 1 211 3 367 1 317 1 197 1 9 4 62 1 101 1 
35 2 94 1 25 2 213 1 160 1 280 1 358 3 103 1 40 1 221 1 250 1 208 1 253 3 297 1 268 1 195 1 211 3 317 1 197 1 9 4 62 1 101 1 
213 1 358 1 211 1 360 1 221 1 253 1 
217 1 102 1 12 1 122 1 112 1 218 1 213 2 358 7 161 1 280 2 360 1 40 1 221 3 253 7 114 1 334 1 195 2 378 1 211 6 92 1 9 3 
328 1 190 1 95 2 280 1 331 1 221 1 333 2 6 1 9 1 140 1 198 1 102 1 229 1 65 1 231 2 16 2 144 2 201 2 202 1 348 3 70 2 151 1 150 1 72 1 156 2 157 3 24 1 358 1 75 2 28 1 253 1 115 1 209 1 116 4 117 1 256 1 167 1 211 1 119 6 86 1 370 2 172 2 371 1 213 1 40 1 376 1 275 1 
94 1 25 3 160 1 219 1 358 1 361 1 208 2 96 1 253 1 3 1 166 2 195 1 137 2 211 1 288 1 317 1 9 2 101 1 35 3 230 2 373 1 39 2 103 1 175 1 297 1 182 1 277 1 327 1 
102 1 213 1 103 1 358 2 280 1 360 1 40 1 221 2 253 2 148 1 211 2 92 1 9 2 
102 1 122 1 112 1 213 1 358 2 264 1 280 2 221 2 40 1 253 2 225 1 335 1 269 1 195 1 211 2 9 2 
122 1 112 1 372 1 213 1 358 2 280 1 250 1 40 1 221 2 253 2 225 1 269 1 211 2 9 1 
213 1 195 1 293 1 191 1 358 1 211 1 221 1 313 1 186 1 253 1 
102 1 12 1 218 1 213 1 358 2 280 1 221 1 253 2 298 1 211 2 9 1 
102 1 122 1 112 1 12 1 213 2 264 1 358 3 280 3 40 1 221 3 253 3 334 1 225 1 335 1 269 1 195 1 378 1 211 2 9 4 
102 1 122 1 112 1 12 1 213 2 264 1 358 3 280 3 40 1 221 3 253 3 225 1 335 1 269 1 195 1 378 1 7 1 211 2 9 4 
156 2 229 1 213 1 280 1 358 1 40 1 221 1 333 1 253 1 115 1 376 1 256 1 195 1 43 1 211 1 9 1 140 1 172 2 
122 1 112 1 213 1 358 1 161 1 280 1 250 1 40 1 221 2 253 1 211 1 92 1 9 1 
283 1 336 1 22 1 333 1 104 1 
156 1 94 1 25 2 74 1 246 2 333 1 364 1 283 2 282 1 256 1 336 2 8 1 138 1 32 1 288 1 317 1 368 1 140 1 228 1 172 1 35 2 261 1 294 1 18 1 104 1 297 1 376 1 22 2 352 1 
156 1 321 1 104 1 283 1 22 1 212 1 140 1 120 1 172 1 
32 1 104 1 364 1 
279 1 220 1 152 1 153 1 
68 1 344 1 329 1 279 1 220 1 152 1 222 1 
97 1 338 1 222 1 
68 3 344 1 329 1 239 1 279 1 359 2 220 1 152 1 222 3 154 1 374 1 365 1 
10 1 68 2 344 1 329 1 279 1 220 1 152 1 216 1 222 2 
329 1 344 1 293 1 332 1 222 1 313 1 224 1 68 1 152 1 154 1 369 1 
68 1 344 1 329 1 220 1 152 1 222 1 154 1 
68 1 344 1 329 1 279 1 220 2 222 1 154 1 
245 1 329 2 344 2 220 1 222 2 77 1 68 2 99 1 152 1 154 1 
10 2 377 1 68 3 232 1 344 1 329 1 279 1 220 1 152 2 222 3 154 1 50 1 224 1 
10 1 293 2 329 1 344 1 279 1 220 1 222 2 313 1 194 1 68 2 152 1 154 1 380 1 186 1 369 1 
10 2 377 1 68 4 344 2 329 2 279 1 220 1 152 2 216 1 222 4 154 1 224 1 289 1 
68 1 344 1 329 1 279 1 220 1 152 1 222 1 154 1 
10 2 329 1 344 1 359 1 279 2 220 2 222 4 374 1 365 1 224 1 87 1 68 4 377 1 152 3 
10 1 68 2 59 1 189 1 344 1 329 1 279 1 220 1 152 1 185 1 222 2 154 1 
329 1 344 1 359 2 279 1 220 1 222 3 374 2 365 1 68 3 152 1 183 1 154 1 
36 2 300 1 124 1 152 2 
68 1 344 1 329 1 263 1 222 1 154 1 
10 1 68 2 344 1 329 1 279 1 220 1 152 1 222 2 154 1 50 1 
340 1 
68 1 344 1 329 1 279 1 220 1 152 1 222 1 154 1 
10 1 329 1 344 1 359 1 279 1 220 1 222 3 68 3 152 1 154 1 50 1 
87 1 377 1 152 1 224 1 
220 1 152 1 

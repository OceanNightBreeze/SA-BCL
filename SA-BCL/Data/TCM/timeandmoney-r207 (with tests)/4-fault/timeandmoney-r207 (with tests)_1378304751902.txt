#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
57 1 185 1 110 1 186 3 188 1 26 9 258 2 160 1 30 1 117 2 216 1 315 2 71 1 343 1 344 2 220 6 365 2 244 1 346 1 322 4 349 2 37 1 179 1 128 9 18 1 101 1 228 5 302 2 
57 1 185 1 110 1 186 3 188 1 26 9 258 2 160 1 30 1 117 2 216 1 315 2 71 1 343 1 344 2 220 6 365 2 244 1 346 1 322 4 349 2 37 1 179 1 128 9 18 1 101 1 228 5 302 2 
57 1 185 1 110 1 186 4 188 1 26 10 258 2 160 1 30 1 117 2 216 1 315 2 71 1 343 1 344 2 220 7 365 2 244 1 346 1 322 5 349 2 37 1 179 1 128 10 18 1 101 1 228 6 302 2 
57 1 185 1 110 1 186 2 188 1 26 7 258 1 160 1 30 1 117 2 216 1 315 2 71 1 343 1 344 2 220 4 365 2 244 1 346 1 322 3 349 2 37 1 179 1 128 7 18 1 228 4 302 2 
365 1 185 1 186 1 244 1 346 1 26 4 322 2 258 2 349 1 128 4 179 1 117 1 101 1 228 3 302 1 71 1 344 1 220 3 
365 1 109 1 185 1 244 1 62 1 26 2 349 1 128 2 18 1 117 1 228 1 216 1 315 1 355 1 71 1 344 1 
365 2 185 1 186 1 244 1 26 3 322 1 349 2 37 1 128 3 228 2 315 1 71 1 220 1 
185 1 110 1 186 3 26 9 258 2 30 1 117 1 315 1 71 1 194 1 220 7 146 1 344 1 365 2 244 1 346 1 322 4 37 1 349 2 128 9 179 1 101 1 228 5 302 1 
185 1 110 1 186 3 26 9 258 2 30 1 117 1 315 1 71 1 194 1 220 7 146 1 344 1 365 2 244 1 346 1 322 4 37 1 349 2 128 9 179 1 101 1 228 5 302 1 
250 1 19 1 10 1 
10 1 172 2 295 1 
247 1 174 2 104 1 233 2 36 2 238 2 276 2 65 2 
247 1 43 1 59 1 4 1 5 1 233 2 28 1 238 3 47 1 65 2 8 1 336 1 337 1 261 1 143 2 340 1 97 1 145 2 219 1 292 2 265 1 124 1 368 1 174 2 266 2 36 2 79 1 350 1 178 1 269 1 227 1 202 2 372 1 104 1 131 1 230 1 276 3 
99 1 174 1 277 1 20 1 104 1 233 1 36 1 238 1 276 1 65 1 
250 1 89 1 209 1 36 1 294 1 238 1 297 1 91 1 313 1 20 1 10 1 354 1 378 1 276 1 
250 1 174 1 89 1 233 1 36 1 294 1 238 1 65 1 297 2 91 1 313 2 20 1 10 1 378 1 276 1 
313 1 270 1 121 1 12 1 297 1 
250 1 313 2 307 1 270 1 10 1 12 1 64 1 297 2 
313 1 270 1 297 1 
174 1 277 1 233 1 36 1 12 1 238 1 297 1 65 1 99 1 283 1 313 1 20 1 104 1 276 1 
10 1 
327 1 250 1 313 2 307 1 270 1 10 1 12 1 297 2 
250 1 232 2 307 1 114 1 323 1 348 1 12 2 45 2 297 5 63 2 38 1 16 1 313 5 68 1 270 2 289 1 240 1 10 1 105 1 
247 1 19 1 
247 2 317 1 98 1 174 1 233 1 36 2 238 2 65 1 276 2 
122 1 331 1 56 1 
247 1 43 1 292 1 265 1 124 1 79 1 238 1 28 1 337 1 227 1 202 1 169 1 372 1 340 1 145 1 276 1 
247 1 317 1 264 2 174 4 76 1 189 1 233 4 176 1 36 5 238 5 65 1 287 1 354 1 276 5 
174 2 277 1 20 1 233 2 177 1 36 2 238 2 276 2 
264 1 43 1 124 1 265 1 292 1 174 1 331 1 76 1 233 1 36 1 79 1 28 1 238 2 337 1 227 1 202 1 372 1 340 1 145 1 276 2 
247 1 264 1 174 3 233 3 36 3 238 3 65 1 276 3 
174 1 277 1 20 1 233 1 36 1 238 1 276 1 
317 1 98 1 174 1 20 1 233 1 36 1 238 1 276 1 65 1 
247 1 43 1 89 1 4 1 233 3 28 1 238 4 47 1 65 2 8 1 336 1 337 1 91 1 313 1 261 1 288 1 143 1 340 1 145 1 219 1 317 1 264 1 124 1 265 1 292 1 368 1 174 3 266 2 53 1 76 1 36 3 294 1 79 1 297 1 178 1 227 1 202 1 372 1 20 1 104 1 378 1 131 1 230 1 276 4 
247 1 264 1 174 1 287 1 354 1 233 1 36 2 238 2 276 2 
317 1 264 2 174 3 89 1 76 1 53 1 233 3 36 3 294 1 238 3 65 1 297 1 127 1 91 1 313 1 20 1 10 1 378 1 276 3 
317 1 264 1 174 2 331 1 233 2 36 2 238 2 65 1 56 1 276 2 
247 1 292 1 265 1 124 1 43 1 79 1 238 1 28 1 337 1 227 1 202 1 372 1 340 1 145 1 276 1 
247 1 292 1 124 1 43 1 79 1 238 1 28 1 225 1 337 1 202 1 372 1 340 1 145 1 276 1 379 1 
133 1 155 1 111 1 207 1 2 1 331 2 4 1 312 1 47 1 8 1 336 1 143 4 316 1 219 1 122 2 147 1 368 2 266 2 178 1 269 2 226 1 201 1 205 1 56 2 
91 1 174 1 20 1 233 1 36 1 177 1 238 1 276 1 
152 1 85 1 
152 1 85 1 
351 1 137 1 
351 1 137 1 
351 1 137 1 
152 1 293 1 85 1 
285 1 152 1 85 1 
351 1 152 2 93 1 85 2 137 1 90 1 
152 1 293 1 85 1 
152 1 293 1 85 1 
152 1 75 1 85 1 
152 1 75 1 85 1 
152 1 75 1 85 1 
247 1 195 1 174 2 243 1 150 1 233 2 36 2 190 1 358 1 54 1 238 2 297 1 180 1 167 1 130 1 181 1 285 1 313 1 339 1 152 1 353 1 96 1 85 1 276 2 
22 2 278 1 150 2 190 3 358 1 90 1 213 1 82 1 297 2 167 2 299 1 130 2 313 2 152 2 353 2 170 1 10 1 85 2 21 1 
117 1 302 1 344 1 
109 1 117 1 344 1 
109 1 249 1 117 3 223 1 302 2 193 1 
109 1 249 1 117 2 302 1 193 1 78 1 
109 1 249 1 117 2 302 1 193 2 
183 1 42 1 250 1 207 1 232 1 277 1 307 1 24 1 114 1 233 1 210 1 280 1 25 2 238 1 45 1 65 1 63 1 283 1 313 5 286 1 240 1 10 1 172 1 174 1 36 1 323 2 54 1 12 4 297 5 99 1 83 1 226 1 270 1 84 1 20 1 104 1 276 1 
183 1 0 2 42 1 329 1 250 1 207 1 232 1 307 1 277 1 24 1 114 1 233 1 210 1 280 1 45 1 238 1 63 1 65 1 283 1 313 5 286 1 192 1 240 1 10 1 172 1 121 2 174 1 36 1 323 2 54 1 12 4 297 5 99 1 226 1 270 3 20 1 104 1 276 1 
183 1 42 2 250 1 232 1 207 1 2 1 280 1 25 1 210 2 45 1 63 1 313 3 286 1 316 1 10 3 240 3 172 4 54 1 323 2 295 2 12 2 297 3 83 1 16 1 226 1 84 1 
183 2 42 4 250 1 208 1 232 1 207 2 2 2 210 4 280 1 25 2 45 1 63 1 313 4 286 1 316 2 10 4 240 5 172 7 221 1 54 2 323 4 295 3 12 3 297 4 16 1 83 1 226 2 324 1 84 1 
43 1 151 1 19 1 
43 1 13 1 
134 1 
43 1 79 1 28 1 
43 1 341 1 
43 1 28 1 
360 1 215 1 151 2 43 3 79 1 28 1 
328 1 147 2 368 3 1 2 175 1 34 1 158 1 267 2 312 4 162 1 269 3 226 1 301 1 143 6 229 1 316 1 291 2 
328 1 147 2 368 3 1 2 175 1 34 1 158 1 267 2 312 4 162 1 269 3 226 1 301 1 143 6 229 1 316 1 291 2 
328 1 147 2 368 3 1 2 175 1 34 1 158 1 267 2 312 4 162 1 163 1 269 3 226 1 301 1 143 6 229 1 316 1 291 2 
269 1 175 1 301 1 34 2 143 1 158 1 55 1 
328 1 147 3 1 2 368 4 175 1 332 1 34 1 266 4 267 1 139 1 312 4 162 1 47 2 8 2 336 2 269 4 226 1 301 1 229 1 143 8 316 1 290 1 291 2 219 2 
248 1 109 1 185 1 254 1 308 1 26 2 117 2 315 1 145 1 262 1 71 1 220 1 344 1 365 1 292 1 124 1 223 1 244 1 369 1 197 1 125 1 35 1 224 1 349 1 128 2 202 1 228 1 372 1 302 1 374 1 
248 1 109 1 254 1 187 1 44 1 26 3 117 2 315 1 145 1 262 1 71 1 344 1 220 2 365 1 292 1 124 1 319 1 223 1 244 1 369 1 125 1 35 1 224 1 349 1 128 3 202 1 228 1 372 1 302 1 374 1 
248 1 109 1 254 1 187 1 44 1 26 2 117 2 315 1 145 1 71 1 220 2 344 1 292 1 124 1 223 1 244 1 369 1 35 1 224 1 128 2 202 1 228 1 372 1 374 1 302 1 
365 1 248 2 231 1 124 1 43 1 292 1 319 1 369 2 254 2 320 1 310 1 26 1 28 1 349 1 335 1 165 1 128 1 337 1 100 1 202 1 372 1 315 2 145 1 
248 1 109 1 185 1 254 1 187 1 308 1 26 1 117 2 315 1 145 1 262 1 344 1 365 1 292 1 124 1 223 1 369 1 125 1 35 1 224 1 349 1 128 1 202 1 372 1 302 1 374 1 
218 1 
231 1 43 1 88 2 330 1 232 1 3 2 89 1 281 1 45 1 238 1 335 1 337 2 91 1 286 1 10 2 240 2 95 1 145 2 292 2 52 4 149 1 200 1 294 1 295 2 14 1 297 5 202 2 204 1 20 1 354 1 250 1 60 1 112 2 307 3 356 1 114 1 209 1 359 2 212 2 28 1 63 1 313 5 171 1 120 2 172 2 318 2 124 1 36 1 323 2 39 1 270 6 372 1 378 1 86 1 276 1 
327 1 60 1 307 1 89 1 209 1 212 1 238 1 91 1 313 3 171 1 52 2 149 1 36 1 200 1 294 1 297 3 39 1 270 2 20 1 354 1 378 1 276 1 
327 1 60 1 250 1 307 1 89 1 209 1 359 1 238 1 91 1 313 3 171 1 10 1 52 3 149 1 36 1 200 1 294 1 297 3 39 1 270 1 20 1 354 1 378 1 276 1 
327 1 60 1 250 1 307 1 89 1 3 1 209 1 212 1 359 1 238 1 91 1 313 3 171 1 10 1 52 3 149 1 36 1 200 1 294 1 297 3 39 1 270 2 20 1 354 1 378 1 276 1 
327 1 330 1 88 2 232 1 3 4 89 1 238 1 45 1 91 1 94 1 10 5 240 1 52 6 149 1 294 1 200 1 295 2 297 5 14 1 20 1 354 1 58 1 60 1 250 5 112 2 307 3 114 1 209 1 212 4 359 4 63 1 313 5 171 1 120 2 72 1 318 2 36 1 323 1 39 1 270 7 272 1 378 1 274 1 276 1 
330 1 88 2 232 1 89 1 3 2 238 1 45 1 91 1 240 1 10 2 52 4 149 1 294 1 200 1 295 2 297 4 14 1 20 1 354 1 60 1 250 1 112 2 307 2 114 1 209 1 212 2 359 2 63 1 313 4 171 1 120 2 172 2 318 2 36 1 323 1 39 1 270 4 378 1 86 1 276 1 
58 1 250 1 88 2 330 1 60 1 112 2 232 1 307 2 3 2 89 1 114 1 209 1 359 2 212 2 45 1 238 1 63 1 91 1 313 4 10 1 240 1 171 1 120 2 72 1 318 2 52 4 149 1 36 1 200 1 294 1 323 1 295 2 14 1 297 4 39 1 270 4 20 1 272 1 354 1 378 1 276 1 
58 1 250 1 88 2 330 1 60 1 112 2 232 1 307 2 3 2 89 1 114 1 209 1 359 2 212 2 45 1 238 1 63 1 91 1 313 4 10 1 240 1 171 1 120 2 72 1 318 2 52 4 149 1 36 1 200 1 294 1 323 1 295 2 14 1 297 4 39 1 270 4 20 1 272 1 354 1 378 1 276 1 
58 1 250 1 88 2 60 1 112 2 232 1 307 2 3 2 89 1 114 1 209 1 359 2 212 2 237 1 45 1 238 1 46 2 63 1 91 1 313 4 10 1 240 1 171 1 172 2 148 1 52 4 149 1 198 2 36 1 200 1 294 1 323 1 14 1 297 4 39 1 270 4 20 1 376 1 354 1 378 1 276 1 
58 1 250 1 88 2 330 1 60 1 112 2 232 1 307 2 114 1 89 1 3 3 209 1 212 3 359 3 45 1 238 1 63 1 91 1 313 4 10 1 240 1 171 1 120 2 72 1 318 2 52 5 149 1 36 1 200 1 294 1 323 1 295 2 14 1 297 4 39 1 270 5 20 1 272 1 354 1 378 1 274 1 276 1 
58 1 250 1 88 2 330 1 60 1 112 2 232 1 307 2 114 1 89 1 3 3 209 1 212 3 359 3 45 1 238 1 63 1 91 1 313 4 10 1 240 1 171 1 120 2 72 1 318 2 52 5 149 1 36 1 200 1 294 1 323 1 295 2 14 1 297 4 39 1 270 5 20 1 272 1 354 1 378 1 274 1 276 1 
250 1 88 2 60 1 112 2 232 1 307 2 3 2 114 1 89 1 209 1 359 2 212 2 45 1 238 1 46 2 63 1 91 1 313 4 10 1 240 1 171 1 172 2 52 4 149 1 198 2 36 1 200 1 294 1 323 1 14 1 297 4 39 1 270 4 20 1 354 1 376 1 378 1 86 1 276 1 
247 2 328 1 147 2 368 3 1 2 4 1 266 2 312 2 47 1 162 1 178 1 8 1 336 1 269 2 226 1 201 1 19 1 143 5 229 1 316 1 291 2 219 1 
247 1 183 2 207 2 2 1 331 11 4 2 312 2 47 2 214 1 8 2 336 2 284 1 118 1 92 3 143 14 316 1 217 1 97 1 219 2 147 1 122 11 173 1 368 6 266 4 267 1 80 3 178 1 269 8 226 2 203 1 131 1 275 1 56 4 
247 1 43 1 4 1 233 1 234 1 159 1 28 1 238 2 47 1 8 1 337 1 336 1 169 1 143 2 340 1 97 1 145 1 241 1 219 1 264 1 124 1 265 1 292 1 368 1 174 1 76 1 266 2 36 1 79 1 178 1 269 1 227 1 202 1 372 1 131 1 56 1 275 1 276 2 
183 2 328 1 43 2 1 2 2 2 331 6 187 1 4 3 233 1 238 3 47 3 8 3 337 1 336 3 143 19 340 2 97 1 291 2 145 3 147 4 51 1 292 3 298 1 202 3 352 1 56 6 247 2 207 2 115 2 27 2 312 8 28 2 162 1 261 2 316 3 219 3 122 6 264 1 265 2 124 2 368 10 174 1 266 6 76 1 36 1 267 4 268 2 79 2 178 3 269 9 226 3 227 2 372 2 229 1 375 2 131 1 275 1 276 3 
231 1 206 1 43 3 113 1 187 1 4 2 233 1 5 2 238 1 28 2 47 2 8 2 335 1 337 2 336 2 49 1 143 2 144 1 97 1 145 7 219 2 264 1 124 2 292 8 368 1 174 1 197 1 266 4 77 1 36 1 178 2 269 1 201 1 300 1 202 8 271 1 372 2 131 1 276 1 
183 1 207 1 2 1 331 1 4 1 233 1 312 1 238 1 65 1 47 1 8 1 336 1 314 1 143 3 316 1 219 1 147 1 122 1 317 1 368 2 174 1 266 2 36 1 178 1 269 1 226 1 56 1 275 1 276 1 
133 1 122 1 207 1 331 1 4 1 266 2 267 1 312 1 47 1 178 1 8 1 336 1 269 2 201 1 226 1 143 2 56 1 219 1 
147 1 122 1 368 2 111 1 2 1 331 1 4 1 266 2 312 1 47 1 178 1 8 1 336 1 201 1 143 2 316 1 56 1 219 1 
183 1 207 1 2 1 331 2 4 1 312 2 47 1 8 1 336 1 143 4 316 1 219 1 122 2 147 1 368 2 266 2 267 1 178 1 269 2 226 1 201 1 56 2 
133 1 122 1 207 1 331 1 4 1 266 2 267 1 312 1 47 1 178 1 8 1 336 1 269 2 226 1 300 1 143 2 56 1 219 1 
147 1 122 1 368 2 111 1 2 1 331 1 4 1 266 2 312 1 47 1 178 1 8 1 336 1 300 1 143 2 316 1 56 1 219 1 
183 1 207 1 2 1 331 2 4 1 312 2 47 1 8 1 336 1 143 4 316 1 219 1 122 2 147 1 368 2 266 2 267 1 178 1 269 2 226 1 300 1 56 2 
183 1 207 1 2 1 331 2 4 1 312 2 47 1 8 1 336 1 143 4 316 1 219 1 122 2 147 1 368 2 266 2 267 1 178 1 269 2 226 1 56 2 
247 1 43 1 4 1 28 1 238 1 47 1 8 1 337 1 336 1 261 1 143 2 340 1 97 1 145 1 219 1 124 1 265 1 292 1 368 1 266 2 79 1 178 1 269 1 227 1 202 1 372 1 131 1 276 1 
247 1 43 1 4 1 28 1 238 1 47 1 8 1 337 1 336 1 239 1 143 2 340 1 97 1 145 1 219 1 124 1 292 1 368 1 266 2 79 1 225 1 178 1 269 1 202 1 372 1 131 1 379 1 276 1 
183 1 207 1 2 1 331 2 4 1 312 2 47 1 8 1 336 1 143 4 316 1 219 1 122 2 147 1 368 2 266 2 267 1 178 1 269 2 226 1 275 1 56 2 
183 1 43 1 207 1 2 1 331 2 4 1 312 2 28 1 238 1 47 1 8 1 336 1 261 1 143 4 316 1 340 1 145 1 219 1 147 1 122 2 124 1 265 1 292 1 368 2 197 1 266 2 267 1 79 1 268 1 178 1 269 2 226 1 227 1 202 1 372 1 56 2 276 1 
183 1 207 1 2 1 331 1 4 1 233 1 211 1 312 1 238 1 65 1 47 1 8 1 336 1 143 3 316 1 219 1 317 1 122 1 368 1 174 1 266 2 36 1 267 1 178 1 269 2 226 1 275 1 56 1 276 1 
183 3 135 1 305 2 207 3 2 3 332 1 138 1 257 1 312 6 47 2 140 1 214 1 66 2 8 2 336 2 92 1 69 1 143 19 316 3 217 1 364 1 219 2 147 3 368 10 266 4 267 3 80 2 269 9 226 3 303 1 
183 3 135 2 305 1 207 3 23 1 2 2 332 1 333 1 7 1 138 1 139 2 312 4 47 3 140 1 66 4 8 3 336 3 92 2 69 2 32 1 143 26 316 2 217 2 364 1 219 3 242 1 147 2 368 12 266 6 347 1 267 2 80 2 269 14 226 3 
183 4 328 1 135 2 305 1 1 2 207 4 23 1 2 4 332 1 333 1 7 1 138 1 257 1 139 1 312 10 162 1 47 3 140 1 214 1 66 4 8 3 336 3 168 1 92 3 69 1 32 1 143 43 316 5 217 3 291 2 364 1 219 3 242 1 147 5 368 23 266 6 347 1 267 5 80 4 269 20 226 5 229 1 
183 4 328 1 135 2 305 1 1 2 207 4 23 1 2 3 332 1 333 1 7 1 138 1 257 1 139 2 312 8 162 1 47 4 140 1 214 1 66 4 8 4 336 4 168 1 92 3 69 1 32 1 143 38 316 4 217 3 291 2 364 1 219 4 242 1 147 5 368 19 266 8 347 1 267 3 80 4 269 19 226 5 229 1 
183 7 328 1 135 1 305 1 1 2 207 7 23 1 2 7 332 1 333 1 7 1 138 1 139 1 312 15 162 1 47 2 140 1 214 2 66 4 8 2 336 2 92 4 69 1 32 1 143 52 316 8 217 2 291 2 364 1 219 2 242 1 147 8 173 2 368 26 266 4 347 1 267 7 80 4 269 26 226 8 229 1 
167 1 130 1 152 1 353 1 170 1 150 1 85 1 90 1 82 1 48 1 
285 1 243 1 
167 1 304 1 130 1 152 1 357 1 353 1 150 1 85 1 107 1 
293 1 6 1 
93 1 75 1 199 1 
22 1 278 1 150 1 190 2 358 1 90 1 213 1 82 1 297 1 167 1 299 1 130 1 313 1 152 1 353 1 170 1 10 1 85 1 
22 1 278 1 150 1 190 2 358 1 90 1 213 1 82 1 297 1 167 1 299 1 130 1 313 1 152 1 353 1 170 1 10 1 85 1 
22 1 278 1 150 1 190 2 358 1 90 1 213 1 82 1 297 1 167 1 299 1 130 1 313 1 152 1 353 1 170 1 10 1 85 1 
93 1 293 1 6 1 
93 1 293 1 6 1 
75 1 199 1 
93 1 75 1 199 1 
180 1 181 1 
247 1 22 1 233 2 190 1 334 1 238 2 213 1 167 1 313 1 285 1 339 1 96 1 195 1 174 2 243 1 150 1 36 2 54 1 12 1 297 1 180 1 130 1 181 1 152 1 353 1 85 1 276 2 
43 1 306 1 113 1 4 1 5 2 28 1 238 2 47 1 8 1 336 1 9 1 361 1 143 2 97 1 145 2 219 1 124 1 292 2 33 1 368 1 266 2 77 1 36 2 178 1 269 1 202 2 372 1 273 1 131 1 275 1 276 2 
109 1 124 1 292 2 223 1 252 1 369 1 197 1 246 1 125 1 187 1 224 1 117 2 202 2 372 1 302 1 374 1 377 1 145 2 344 1 
109 1 292 1 124 1 223 1 369 1 125 1 187 1 224 1 117 2 202 1 182 1 372 1 302 1 374 1 377 1 145 1 344 1 
231 1 124 1 43 1 292 1 252 1 369 1 28 1 335 1 337 1 165 1 202 1 102 1 372 1 145 1 
109 1 292 1 124 1 223 1 252 1 369 1 246 1 125 1 187 1 224 1 117 2 202 1 372 1 302 1 374 1 377 1 145 1 344 1 
67 1 
38 1 250 1 68 1 19 1 240 1 10 1 323 1 
330 1 250 1 232 1 307 1 114 1 45 1 63 1 313 1 240 1 10 2 120 1 172 1 318 1 323 1 295 1 297 1 270 1 
183 2 42 6 43 6 232 4 2 2 235 1 45 4 337 1 286 2 240 9 10 8 145 3 292 3 197 1 295 6 13 3 297 5 17 1 151 2 202 3 250 2 61 2 207 2 356 1 307 3 114 4 210 6 27 2 28 1 161 1 63 4 164 1 215 1 260 2 313 5 68 1 316 2 172 12 263 2 366 2 124 1 73 2 321 1 79 1 323 8 38 1 126 2 226 2 325 2 270 5 372 2 378 2 
183 2 42 5 250 2 232 2 207 2 356 1 307 1 23 1 2 2 114 2 255 1 333 1 210 5 7 1 45 2 63 2 260 1 338 1 313 1 92 1 286 1 32 1 240 8 10 5 316 2 172 6 217 1 242 1 80 1 323 5 295 3 297 1 226 2 325 2 270 1 
328 1 1 1 232 1 277 1 114 1 233 1 238 1 45 1 63 1 65 1 260 1 283 1 313 1 316 1 240 2 291 1 72 1 174 1 36 1 323 2 297 1 99 1 226 2 325 2 20 1 104 1 106 1 276 1 
250 1 232 1 114 1 323 1 45 1 63 1 38 1 68 1 10 1 240 1 
183 2 42 5 207 2 2 2 210 5 27 1 323 5 295 5 260 1 226 2 325 2 10 5 316 2 240 5 172 10 
250 1 313 1 307 1 270 1 10 1 297 1 
231 1 43 1 232 2 356 2 307 2 114 1 236 1 28 1 45 2 161 2 63 2 164 1 335 1 337 2 166 1 313 3 286 2 95 1 240 2 145 4 124 1 292 4 323 2 297 3 16 1 202 4 204 1 270 4 372 1 
247 1 43 1 4 1 233 2 238 3 28 1 47 1 65 2 8 1 337 1 336 1 261 1 143 1 340 1 145 1 219 1 292 1 265 1 124 1 368 1 174 2 266 2 36 2 79 1 178 1 227 1 202 1 372 1 104 1 131 1 230 1 276 3 
42 2 250 2 232 1 356 1 175 1 114 1 210 2 323 2 295 2 45 1 63 1 286 1 240 1 10 4 172 4 
253 1 353 1 150 1 
181 1 353 1 170 1 150 1 256 1 
253 1 353 1 150 1 
253 1 353 1 150 1 
353 1 150 1 342 1 
353 1 150 1 342 1 
353 1 150 1 342 1 
353 1 150 1 
152 1 85 1 
328 1 147 2 368 5 1 2 266 4 267 2 312 4 139 1 47 2 162 1 8 2 336 2 269 4 226 1 143 9 229 1 316 1 291 2 219 2 
147 2 328 1 368 3 1 2 312 2 162 1 269 2 226 1 19 1 229 1 143 5 316 1 291 2 
183 1 147 1 368 2 251 1 207 1 2 1 266 2 267 1 312 2 47 1 8 1 336 1 269 2 226 1 143 4 316 1 219 1 
183 1 147 1 368 4 207 1 2 1 267 1 80 2 312 2 214 1 269 3 226 1 92 1 143 7 316 1 217 1 
183 2 328 1 1 3 207 2 2 2 312 9 139 2 162 1 214 1 47 2 8 2 336 2 92 2 118 1 143 22 316 3 291 3 219 2 147 5 123 1 173 1 368 12 266 4 267 4 80 2 269 10 226 3 229 1 
368 1 143 1 80 1 
269 1 92 1 143 1 
183 1 147 2 368 3 251 1 207 1 2 1 266 2 267 1 27 1 312 3 47 1 8 1 336 1 269 3 226 1 143 6 316 1 219 1 
183 2 207 2 23 1 2 2 332 1 333 1 7 1 312 2 47 1 8 1 336 1 92 1 143 12 32 1 316 2 217 1 219 1 242 1 147 1 368 6 266 2 267 1 80 1 269 6 226 2 
328 1 147 1 368 2 1 1 312 1 269 2 226 1 143 4 316 1 291 1 
147 1 123 1 1 1 368 2 266 2 267 1 312 2 139 1 162 1 47 1 8 1 336 1 269 1 143 3 229 1 291 1 219 1 
147 2 328 1 1 2 368 3 312 2 269 2 226 1 143 5 316 1 106 1 291 2 
207 1 332 1 266 2 267 1 312 1 47 1 8 1 336 1 269 2 226 1 143 2 219 1 
183 1 147 1 368 2 207 1 2 1 332 1 266 2 267 1 312 2 47 1 8 1 336 1 269 2 226 1 143 4 316 1 219 1 
123 1 147 1 368 2 1 1 332 1 266 6 267 1 139 1 257 1 312 2 47 3 8 3 336 3 269 1 143 3 291 1 219 3 
183 3 328 2 1 3 251 1 207 3 2 3 332 1 139 2 257 1 312 12 162 1 47 5 214 1 8 5 336 5 92 3 143 35 316 5 217 1 291 3 219 5 123 1 147 6 368 19 74 1 266 10 267 6 80 4 129 1 269 16 226 5 103 1 229 1 
328 1 1 2 23 1 332 1 312 2 47 1 162 1 8 1 336 1 92 1 143 7 316 1 217 1 291 2 219 1 147 2 368 4 266 2 80 1 269 3 226 1 229 1 
183 1 328 1 1 2 251 1 207 1 23 1 332 1 312 3 162 1 47 2 214 1 8 2 336 2 92 1 143 10 316 1 217 1 291 2 219 2 147 2 368 5 266 4 267 1 80 2 269 5 226 2 229 1 
183 2 328 1 1 2 251 1 207 2 23 1 2 2 332 1 333 1 7 1 312 4 139 1 162 1 47 3 8 3 336 3 92 1 32 1 143 18 316 3 217 1 291 2 219 3 242 1 147 3 368 10 266 6 267 1 80 1 269 8 226 3 229 1 
183 2 328 1 1 2 251 1 207 2 23 1 2 1 332 1 333 1 7 1 139 1 312 6 162 1 47 3 8 3 336 3 92 1 143 16 32 1 316 2 217 1 291 2 219 3 242 1 147 3 368 7 266 6 267 3 80 1 269 9 226 3 229 1 
328 1 1 2 23 1 332 1 312 2 47 1 162 1 8 1 336 1 92 1 143 7 316 1 217 1 291 2 219 1 147 2 368 4 266 2 80 1 269 3 226 1 229 1 
183 2 207 2 23 1 2 2 332 1 333 1 7 1 312 2 47 1 8 1 336 1 92 1 143 12 32 1 316 2 217 1 219 1 242 1 147 1 368 6 266 2 267 1 80 1 269 6 226 2 
183 2 328 1 1 2 251 1 207 2 23 1 2 1 332 1 333 1 7 1 312 6 139 2 162 1 47 4 8 4 336 4 92 1 32 1 143 17 316 2 217 1 291 2 219 4 242 1 147 3 368 8 266 8 267 3 80 1 269 9 226 3 229 1 
183 3 207 3 23 1 2 2 332 1 333 1 7 1 257 1 312 6 139 2 47 4 8 4 336 4 92 1 32 1 143 16 316 2 217 1 219 4 242 1 147 3 368 7 266 8 267 3 80 1 269 9 226 3 
147 2 328 1 368 4 1 2 267 2 312 4 162 2 269 3 226 1 143 7 229 1 316 1 291 2 
183 2 328 1 1 2 207 2 23 1 2 1 332 1 333 1 7 1 257 1 312 4 139 2 162 1 47 4 8 4 336 4 92 1 32 1 143 17 316 2 217 1 291 2 219 4 242 1 147 3 368 8 266 8 267 1 80 1 269 9 226 3 229 1 
247 1 287 1 354 1 36 1 363 1 238 1 276 1 
247 1 279 1 36 1 370 1 238 1 287 1 40 1 153 1 354 1 41 1 363 1 276 1 
335 1 231 1 337 1 124 1 43 1 292 1 202 1 19 1 372 1 145 1 28 1 
247 1 264 1 43 1 292 1 265 1 124 1 174 1 233 1 36 1 79 1 28 1 238 2 337 1 202 1 372 1 340 1 145 1 276 2 
247 1 43 3 233 2 238 2 28 2 161 1 91 1 340 1 341 1 145 1 50 1 264 1 124 1 265 1 292 1 174 1 36 2 294 1 79 2 202 1 372 1 20 1 276 2 
247 1 43 3 233 2 238 2 28 2 161 1 29 1 91 1 340 1 341 1 145 2 50 1 264 1 124 1 292 2 174 1 36 2 294 1 79 2 202 2 372 1 20 1 379 1 276 2 
50 1 292 3 43 4 124 1 250 1 136 1 79 1 28 1 297 2 161 1 13 1 29 1 337 1 151 1 313 2 202 3 270 1 372 1 10 1 378 1 341 1 132 1 145 3 
43 2 61 1 250 1 277 1 233 1 238 1 161 1 65 1 283 1 313 2 10 1 145 1 292 1 174 1 36 1 13 1 297 2 99 1 151 1 202 1 270 1 20 1 104 1 378 1 276 1 
124 1 292 1 206 1 202 1 372 1 145 1 
206 1 292 7 43 3 222 1 124 2 367 1 113 1 197 1 187 1 156 1 5 1 79 1 28 2 337 2 215 1 49 1 202 7 271 1 372 3 144 1 145 6 
247 2 328 1 43 1 1 2 4 2 233 1 312 2 28 1 238 2 162 1 47 2 8 2 336 2 261 1 143 5 316 1 340 1 291 2 145 1 219 2 147 2 264 1 124 1 292 1 265 1 368 3 174 1 197 1 266 4 36 1 79 1 268 1 178 2 269 2 226 1 227 1 202 1 372 1 229 1 375 1 273 1 275 1 276 2 
43 2 250 1 61 1 232 2 307 1 114 2 45 2 63 2 164 1 337 1 313 3 68 1 240 1 10 1 145 1 263 1 366 1 292 1 323 1 12 1 297 3 13 1 38 1 126 1 151 1 202 1 270 2 378 1 
206 1 292 2 43 2 124 1 197 1 79 1 28 1 17 1 215 1 151 1 202 2 372 2 145 2 
231 1 292 4 43 1 124 1 197 1 28 1 29 1 335 1 337 1 202 4 31 1 372 1 145 4 
292 2 43 1 222 1 124 1 156 1 79 1 282 1 28 1 161 1 298 1 202 2 119 1 372 2 145 2 
109 1 337 1 124 1 292 1 117 1 202 1 372 1 224 1 145 1 344 1 
292 2 43 1 124 1 33 1 113 1 197 1 187 1 28 1 202 2 372 1 145 2 
231 1 292 5 43 3 124 2 113 1 197 1 28 2 161 1 335 1 337 1 49 1 202 5 31 1 372 2 144 1 145 4 
231 1 292 5 43 3 124 2 113 1 197 1 28 2 161 1 335 1 337 1 259 1 49 1 202 5 31 1 372 2 145 4 
247 1 264 1 43 1 292 1 124 1 174 1 233 1 36 1 79 1 28 1 238 2 337 1 202 1 372 1 340 1 145 1 276 2 379 1 
292 1 43 1 222 1 124 1 367 1 156 1 79 1 28 1 161 1 215 1 202 1 372 2 145 1 
247 1 196 1 184 1 373 1 296 1 
247 1 196 2 184 1 250 1 89 1 53 1 157 1 309 1 311 1 294 1 12 1 297 2 296 2 91 1 313 2 373 2 20 1 10 1 378 1 
9 1 196 1 184 1 361 1 306 1 36 1 238 1 276 1 296 1 
184 1 309 1 311 1 
228 1 244 1 19 1 71 1 
365 1 128 1 228 1 244 1 26 1 71 1 349 1 
248 1 315 1 26 1 
365 1 185 1 245 1 244 1 26 3 349 1 128 3 371 1 228 1 216 2 70 1 71 1 
365 1 128 2 228 1 244 1 26 2 258 1 71 1 220 1 349 1 
365 1 185 1 26 1 322 1 349 1 128 1 179 1 117 1 228 1 302 1 344 1 
365 1 128 1 185 1 228 1 26 1 71 1 349 1 
365 1 128 1 185 1 244 1 26 1 71 2 349 1 
365 2 108 1 128 2 185 1 228 1 154 1 362 1 26 2 71 1 349 2 
365 1 128 3 30 1 185 1 110 1 186 1 228 2 244 1 322 1 26 3 71 1 220 2 349 1 
365 1 109 1 185 1 223 1 244 1 26 2 349 1 128 2 191 1 117 2 228 1 302 1 71 1 344 1 220 1 
365 2 128 4 185 1 186 1 101 1 228 2 244 1 322 1 26 4 258 1 71 1 220 2 349 2 
365 1 128 1 185 1 228 1 244 1 26 1 71 1 349 1 
365 1 186 1 244 2 26 4 322 1 81 1 349 1 128 4 371 1 228 3 216 1 70 1 71 2 220 2 
365 1 128 2 185 1 228 1 244 1 326 1 26 2 71 1 220 1 146 1 116 1 349 1 
365 1 128 3 15 1 185 1 371 2 228 1 244 1 216 2 70 1 26 3 71 1 349 1 
141 1 345 2 228 2 142 1 
365 1 128 1 185 1 11 1 26 1 349 1 
365 1 128 2 185 1 110 1 228 1 244 1 26 2 71 1 220 1 349 1 
87 1 
365 1 128 1 185 1 228 1 244 1 26 1 71 1 349 1 
365 1 185 1 110 1 244 1 26 3 349 1 128 3 228 1 216 1 71 1 220 1 
186 1 228 1 322 1 81 1 
228 1 71 1 

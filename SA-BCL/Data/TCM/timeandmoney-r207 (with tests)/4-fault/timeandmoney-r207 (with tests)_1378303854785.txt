#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 300 152 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 2 179 3 98 1 208 2 242 1 103 1 289 2 291 1 372 1 310 1 221 3 351 1 326 1 
179 9 332 1 86 1 28 1 336 1 208 2 133 1 310 6 2 1 139 2 11 2 96 2 98 3 79 1 288 1 242 2 103 1 289 5 291 1 372 1 221 9 151 1 176 1 376 2 351 1 377 2 326 4 328 1 
179 9 332 1 86 1 28 1 336 1 208 2 133 1 310 6 2 1 139 2 11 2 96 2 98 3 79 1 288 1 242 2 103 1 289 5 291 1 372 1 221 9 151 1 176 1 376 2 351 1 377 2 326 4 328 1 
179 10 332 1 86 1 28 1 336 1 208 2 133 1 310 7 2 1 139 2 11 2 96 2 98 4 79 1 288 1 242 2 103 1 289 6 291 1 372 1 221 10 151 1 176 1 376 2 351 1 377 2 326 5 328 1 
179 7 332 1 86 1 28 1 336 1 208 2 133 1 310 4 2 1 139 1 11 2 96 2 98 2 79 1 288 1 242 2 103 1 289 4 291 1 372 1 221 7 151 1 376 2 351 1 377 2 326 3 328 1 
98 1 96 1 179 4 332 1 208 1 103 1 133 1 289 3 291 1 310 3 221 4 176 1 376 1 351 1 139 2 326 2 377 1 11 1 
96 1 179 2 86 1 208 1 242 1 289 1 103 1 291 1 221 2 151 1 83 1 313 1 376 1 351 1 95 1 11 1 
179 9 28 1 332 1 333 1 208 2 133 1 310 7 139 2 11 1 98 3 96 2 79 1 242 1 103 1 289 5 291 1 372 1 170 1 221 9 376 1 176 1 351 1 326 4 377 1 
179 9 28 1 332 1 333 1 208 2 133 1 310 7 139 2 11 1 98 3 96 2 79 1 242 1 103 1 289 5 291 1 372 1 170 1 221 9 376 1 176 1 351 1 326 4 377 1 
266 1 62 1 113 1 211 1 117 1 77 1 52 1 188 1 136 1 253 1 69 1 142 1 240 1 264 1 
277 1 
117 1 277 1 266 2 317 1 120 1 113 2 304 1 172 1 
277 1 266 5 317 1 113 5 194 1 267 1 48 2 356 1 260 1 270 1 117 2 347 1 296 1 348 2 120 1 276 1 364 1 304 2 71 2 
78 1 277 1 317 1 
277 1 9 1 284 2 
62 2 188 2 253 2 371 1 240 2 142 2 69 2 264 1 
89 2 29 2 308 1 181 1 32 1 185 2 259 1 344 1 37 1 188 2 94 1 362 2 240 3 142 3 264 1 287 1 167 1 62 2 125 1 318 1 63 1 371 1 65 1 246 1 222 1 173 1 129 1 199 1 200 2 375 1 107 1 225 1 253 2 69 2 178 1 26 1 229 1 
62 1 77 1 188 1 52 1 136 1 253 1 240 1 142 1 69 1 264 1 
277 1 113 1 339 1 184 1 211 1 161 1 77 2 188 1 136 1 240 2 142 2 264 1 61 1 266 1 62 2 317 1 174 1 272 1 52 1 253 1 69 1 
277 1 113 2 339 1 184 1 211 1 77 2 188 2 136 1 240 2 142 2 264 1 61 1 266 2 62 2 317 1 272 1 52 1 253 2 69 2 
117 1 266 1 113 1 53 1 304 1 
117 1 277 1 266 2 317 1 120 1 113 2 238 1 304 1 
266 1 113 1 304 1 
62 2 371 2 343 1 188 1 253 1 254 1 142 2 240 2 69 1 
14 1 283 1 183 1 
89 1 125 1 308 1 371 1 222 1 129 1 199 1 213 1 200 1 37 1 94 1 362 1 240 1 142 1 26 1 229 1 
78 1 371 1 
27 1 89 1 125 1 62 1 308 1 222 1 129 1 199 1 200 1 37 1 188 1 253 1 94 1 362 1 283 1 142 2 240 2 26 1 204 1 229 1 
27 1 62 3 188 3 253 3 371 1 69 1 240 3 142 3 
62 1 77 1 188 1 136 1 253 1 240 1 142 1 
343 1 62 1 77 1 188 1 253 1 254 1 240 1 142 1 69 1 
331 1 89 1 339 1 184 1 185 1 341 1 344 1 188 3 94 1 142 4 240 4 61 1 287 1 62 3 65 1 197 1 246 1 199 1 200 1 107 1 253 3 254 1 69 2 26 1 204 1 27 1 113 1 29 2 308 1 32 1 259 1 37 1 77 2 362 1 264 1 266 1 125 1 371 1 222 1 129 1 173 1 272 1 375 1 225 1 229 1 
161 1 27 1 62 2 188 1 253 1 371 1 240 2 142 2 301 1 
27 2 60 1 61 1 277 1 266 1 62 3 113 1 339 1 184 1 341 1 272 1 77 1 188 3 253 3 254 1 69 1 142 3 240 3 204 1 
27 1 14 1 62 2 188 2 253 2 254 1 283 1 240 2 142 2 69 1 
89 1 125 1 308 1 371 1 222 1 129 1 199 1 200 1 37 1 94 1 362 1 240 1 142 1 26 1 229 1 
89 1 125 1 308 1 371 1 222 1 129 1 199 1 200 1 94 1 362 1 240 1 142 1 352 1 164 1 229 1 
230 1 29 2 1 1 181 2 183 2 185 4 357 1 259 1 283 2 165 1 14 2 15 1 218 1 148 1 65 1 169 1 246 1 173 1 375 1 107 2 225 1 303 1 380 1 327 1 
236 1 62 1 77 1 188 1 253 1 339 1 240 1 142 1 
27 2 62 5 371 1 234 1 3 1 161 1 188 4 253 4 254 1 142 5 240 5 69 1 301 1 204 1 
236 1 62 2 77 1 188 2 136 1 253 2 240 2 142 2 
146 1 243 1 355 1 
50 1 76 1 146 2 243 2 190 1 70 1 
146 1 243 1 
146 1 243 1 
76 1 70 1 
76 1 70 1 
76 1 70 1 
146 1 243 1 205 1 
146 1 243 1 205 1 
146 1 243 1 205 1 
146 1 243 1 206 1 
146 1 243 1 206 1 
146 1 243 1 206 1 
329 1 277 1 266 2 126 2 243 2 146 2 160 2 113 2 369 1 18 2 319 2 220 2 281 1 295 1 374 3 262 1 189 1 190 1 285 1 
160 1 113 1 73 1 355 1 281 1 188 2 142 2 240 2 121 1 123 1 41 1 99 1 266 1 62 2 146 1 243 1 126 1 18 1 371 1 220 1 249 1 374 1 68 1 253 2 
150 1 135 2 376 2 313 1 377 1 
376 1 377 1 11 1 
376 1 313 1 11 1 
135 1 150 1 101 1 376 3 313 1 377 2 
135 1 150 1 376 2 313 1 377 1 111 1 
156 1 277 2 278 1 113 5 260 2 117 4 4 1 120 1 162 2 141 1 9 1 284 3 123 1 215 1 41 1 166 1 99 1 266 5 15 1 317 1 193 2 267 3 48 1 169 1 19 2 296 1 250 1 348 1 303 1 304 1 327 1 71 1 
277 5 278 3 188 1 136 1 140 1 9 3 142 1 240 1 284 9 99 4 15 3 62 1 194 1 193 6 19 6 294 1 250 1 296 1 348 2 253 1 69 1 353 1 303 3 304 5 71 2 156 2 113 8 31 4 211 1 260 6 212 1 117 6 77 1 120 1 264 1 166 2 266 8 317 1 44 1 267 8 48 2 169 3 321 1 52 1 53 4 327 3 
156 1 277 3 278 1 113 3 260 2 117 2 4 1 162 1 9 2 284 4 215 1 166 1 99 1 266 3 317 1 15 1 194 1 193 2 267 3 48 1 169 1 19 2 348 1 303 1 71 1 327 1 
277 4 278 2 4 1 188 1 136 1 9 3 140 1 240 1 142 1 284 7 99 2 15 2 62 1 194 1 193 4 19 4 348 1 253 1 69 1 303 2 71 1 156 1 113 3 260 4 211 1 117 2 212 1 77 1 162 1 215 1 264 1 166 1 266 3 317 1 267 5 48 1 169 2 321 1 52 1 327 2 
51 1 
78 1 147 1 222 1 
373 1 222 1 
308 1 222 1 
147 2 308 1 94 1 163 1 222 3 286 1 
308 1 94 1 222 1 
10 1 222 1 
165 2 100 1 15 1 90 1 218 3 290 1 181 4 185 7 49 1 107 3 252 1 153 1 138 1 25 1 303 1 255 1 241 1 58 2 
278 3 29 2 90 1 181 16 115 3 185 31 5 1 119 1 138 1 57 1 241 2 58 3 165 5 217 4 100 2 43 1 15 4 218 10 290 1 65 1 169 3 246 1 173 1 49 5 107 15 252 2 323 1 225 1 108 1 153 1 131 1 303 4 255 2 327 3 
165 3 100 1 15 1 29 4 90 1 218 4 219 1 181 5 65 2 185 9 246 2 173 2 35 1 49 1 323 1 107 4 252 1 225 2 153 1 138 1 303 1 255 1 241 1 58 2 
165 2 100 1 15 1 90 1 218 3 290 1 181 4 185 7 49 1 107 3 252 1 153 1 138 1 303 1 255 1 241 1 58 2 
165 2 100 1 15 1 90 1 218 3 290 1 181 4 185 7 49 1 107 3 252 1 153 1 138 1 303 1 255 1 241 1 58 2 
179 1 89 1 208 1 308 1 358 1 237 2 362 1 345 1 12 2 96 1 125 1 242 2 45 1 17 1 370 1 221 1 222 1 129 1 200 1 274 2 23 1 299 1 229 1 
179 1 89 1 208 1 54 1 36 1 237 1 313 1 362 1 315 1 11 1 216 1 12 1 96 1 242 1 125 1 101 1 103 1 221 1 171 1 200 1 106 1 274 1 376 2 202 1 377 1 229 1 
179 2 89 1 208 1 54 1 310 1 36 1 237 1 313 1 362 1 315 1 11 1 216 1 12 1 96 1 242 1 125 1 101 1 289 1 103 1 291 1 221 2 248 1 200 1 106 1 274 1 376 2 351 1 202 1 377 1 229 1 
179 3 180 1 89 1 208 1 54 1 310 2 237 1 313 1 362 1 315 1 11 1 216 1 12 1 96 1 101 1 242 1 125 1 289 1 291 1 221 3 171 1 200 1 106 1 274 1 376 2 351 1 202 1 299 1 377 1 229 1 
179 2 180 1 89 1 310 2 237 1 313 1 362 1 315 1 11 1 12 1 242 1 125 1 101 1 289 1 291 1 221 2 171 1 200 1 106 1 274 1 376 2 351 1 202 1 377 1 229 1 
306 1 
277 3 89 2 338 1 182 2 339 1 184 1 92 1 9 2 142 1 240 1 284 2 61 1 145 1 62 1 198 1 104 1 296 1 200 2 348 1 154 2 23 1 24 1 298 2 302 2 304 6 71 1 354 2 157 1 156 1 113 5 308 1 260 2 161 1 360 1 120 3 77 1 362 2 266 5 125 1 317 2 45 1 267 2 168 2 48 1 47 4 222 1 129 2 174 1 271 2 272 1 224 1 324 1 325 1 378 1 229 1 
277 2 113 3 338 1 339 1 184 1 161 1 120 1 77 1 240 1 142 1 61 1 266 3 62 1 317 2 47 2 198 1 172 1 104 1 174 1 271 1 272 1 224 1 378 1 304 2 
61 1 277 2 266 2 317 2 62 1 113 2 338 1 47 3 339 1 184 1 198 1 104 1 161 1 174 1 272 1 224 1 77 1 142 1 240 1 302 1 378 1 
277 2 113 3 338 1 339 1 182 1 184 1 161 1 120 1 77 1 240 1 142 1 61 1 266 3 62 1 317 2 47 3 198 1 172 1 104 1 174 1 271 1 272 1 224 1 302 1 378 1 304 2 
277 4 231 1 338 1 339 1 182 4 184 1 340 1 188 1 92 1 136 1 9 2 240 2 142 2 61 1 144 1 62 2 198 1 104 1 296 1 348 1 253 1 154 2 298 2 69 1 302 3 304 7 71 1 157 1 354 2 113 5 211 1 260 1 161 1 77 2 120 3 122 1 264 1 266 5 317 4 267 1 168 2 47 5 48 1 172 1 81 1 174 1 271 4 272 1 224 1 52 1 378 1 
277 4 338 1 339 1 182 2 184 1 92 1 9 2 240 1 142 1 284 2 61 1 145 1 62 1 198 1 104 1 296 1 348 1 154 2 298 2 302 2 304 4 71 1 157 1 354 2 113 4 260 1 161 1 77 1 120 2 266 4 317 3 267 1 168 2 47 4 48 1 174 1 271 2 272 1 224 1 378 1 
354 2 157 1 277 3 231 1 113 4 338 1 182 2 339 1 184 1 260 1 161 1 120 2 92 1 77 1 9 2 240 1 142 1 61 1 144 1 266 4 62 1 317 3 267 1 168 2 48 1 47 4 198 1 104 1 81 1 174 1 296 1 271 2 348 1 272 1 224 1 154 2 298 2 302 2 378 1 304 4 71 1 
354 2 157 1 277 3 231 1 113 4 338 1 182 2 339 1 184 1 260 1 161 1 120 2 92 1 77 1 9 2 240 1 142 1 61 1 144 1 266 4 62 1 317 3 267 1 168 2 48 1 47 4 198 1 104 1 81 1 174 1 296 1 271 2 348 1 272 1 224 1 154 2 298 2 302 2 378 1 304 4 71 1 
157 1 277 3 209 1 113 4 233 1 338 1 182 2 339 1 184 1 260 1 161 1 120 2 77 1 282 2 240 1 142 1 284 2 61 1 144 1 266 4 62 1 317 3 267 1 168 2 245 1 48 1 47 4 198 1 104 1 174 1 296 1 271 2 348 1 272 1 224 1 154 2 302 2 203 2 378 1 304 4 71 1 
354 2 157 1 277 3 231 1 113 4 338 1 339 1 182 3 184 1 260 1 161 1 120 2 92 1 77 1 9 2 240 1 142 1 122 1 61 1 144 1 266 4 62 1 317 3 267 1 168 2 48 1 47 5 198 1 104 1 81 1 296 1 174 1 348 1 271 3 272 1 224 1 154 2 298 2 302 3 378 1 304 5 71 1 
354 2 157 1 277 3 231 1 113 4 338 1 339 1 182 3 184 1 260 1 161 1 120 2 92 1 77 1 9 2 240 1 142 1 122 1 61 1 144 1 266 4 62 1 317 3 267 1 168 2 48 1 47 5 198 1 104 1 81 1 296 1 174 1 348 1 271 3 272 1 224 1 154 2 298 2 302 3 378 1 304 5 71 1 
157 1 277 3 113 4 338 1 182 2 339 1 184 1 260 1 161 1 120 2 77 1 282 2 142 1 240 1 284 2 61 1 145 1 266 4 62 1 317 3 267 1 168 2 245 1 48 1 47 4 198 1 104 1 174 1 296 1 271 2 348 1 272 1 224 1 154 2 302 2 203 2 378 1 304 4 71 1 
0 1 27 1 89 8 29 4 1 1 308 2 181 1 55 1 185 2 259 2 74 1 344 1 188 1 362 8 240 1 142 1 62 1 125 2 45 1 318 1 63 2 46 1 65 2 246 2 222 3 171 1 247 1 248 1 129 2 173 2 200 7 375 2 22 1 201 1 107 1 225 2 253 1 23 1 229 2 
278 1 29 2 181 1 33 1 183 1 185 3 259 1 188 1 283 1 142 1 240 1 165 1 14 1 62 1 15 1 218 1 65 1 169 1 246 1 128 1 173 1 375 1 107 2 225 1 253 1 254 1 69 1 303 1 327 1 
165 2 78 1 14 1 15 1 29 2 90 1 1 1 218 2 371 2 181 3 65 1 183 1 185 6 246 1 259 1 173 1 375 1 107 3 225 1 153 1 138 1 283 1 303 1 255 1 58 1 241 1 
278 2 29 4 181 8 33 1 115 3 183 11 185 14 259 2 344 1 314 1 363 1 283 11 57 1 165 1 217 3 14 4 15 1 318 1 218 2 196 1 371 1 65 2 169 1 246 2 173 2 80 1 49 1 375 1 107 6 225 2 108 1 303 2 327 2 
27 1 89 1 29 2 308 1 181 1 33 1 210 1 185 2 259 1 213 1 344 1 37 1 188 1 94 1 362 1 240 2 142 2 14 1 125 1 62 1 244 1 318 1 371 1 65 1 246 1 222 1 129 1 173 1 199 1 200 1 375 1 107 1 225 1 253 1 26 1 84 1 204 1 229 1 
89 3 278 2 232 2 90 1 181 10 183 7 185 20 344 1 188 1 138 1 94 2 142 3 240 3 283 7 58 1 241 1 14 7 15 3 62 1 65 3 246 3 199 2 200 3 107 10 153 1 253 1 26 2 303 3 255 1 204 1 155 2 27 1 159 2 29 6 308 2 32 2 33 1 259 3 118 1 37 2 362 3 165 4 316 2 42 1 125 2 318 1 218 8 371 2 169 2 222 2 171 1 320 1 129 1 173 3 49 4 375 3 225 3 229 2 327 2 
14 1 230 1 29 2 1 1 218 1 65 1 181 2 183 1 185 2 246 1 259 1 173 1 49 1 375 1 225 1 283 1 303 1 327 1 
165 1 14 1 15 1 29 2 1 1 218 1 65 1 169 1 183 1 185 2 246 1 259 1 173 1 375 1 107 2 225 1 283 1 380 1 
278 1 29 2 1 1 181 2 183 2 185 4 259 1 283 2 165 1 14 2 15 1 218 2 65 1 169 1 246 1 173 1 49 1 375 1 107 2 225 1 303 1 327 1 
14 1 230 1 29 2 218 1 65 1 181 2 183 1 55 1 185 2 246 1 259 1 173 1 49 1 375 1 225 1 283 1 303 1 327 1 
165 1 14 1 15 1 29 2 218 1 65 1 169 1 183 1 55 1 185 2 246 1 259 1 173 1 375 1 107 2 225 1 283 1 380 1 
278 1 29 2 181 2 55 1 183 2 185 4 259 1 283 2 165 1 14 2 15 1 218 2 65 1 169 1 246 1 173 1 49 1 375 1 107 2 225 1 303 1 327 1 
165 1 14 2 278 1 15 1 29 2 218 2 65 1 181 2 169 1 183 2 246 1 185 4 259 1 173 1 49 1 375 1 107 2 225 1 283 2 303 1 327 1 
89 1 29 2 308 1 181 1 32 1 185 2 259 1 344 1 37 1 94 1 362 1 142 1 240 1 125 1 318 1 371 1 65 1 246 1 222 1 129 1 173 1 199 1 200 1 375 1 107 1 225 1 26 1 229 1 
89 1 29 2 308 1 181 1 185 2 259 1 344 1 94 1 362 1 142 1 240 1 164 1 125 1 318 1 64 1 371 1 65 1 246 1 222 1 129 1 173 1 199 1 200 1 375 1 107 1 225 1 352 1 229 1 
278 1 29 2 181 2 33 1 183 2 185 4 259 1 283 2 165 1 14 2 15 1 218 2 65 1 169 1 246 1 173 1 49 1 375 1 107 2 225 1 303 1 327 1 
89 1 278 1 29 2 308 1 181 2 32 1 183 2 185 4 259 1 37 1 94 1 362 1 283 2 142 1 240 1 165 1 316 1 14 2 15 1 125 1 218 2 65 1 169 1 246 1 222 1 248 1 173 1 199 1 200 1 49 1 375 1 107 2 225 1 26 1 303 1 327 1 229 1 
278 1 29 2 181 2 33 1 183 1 185 3 259 1 134 1 188 1 142 1 240 1 283 1 14 1 15 1 62 1 218 1 65 1 169 1 246 1 173 1 49 1 375 1 107 1 225 1 253 1 254 1 69 1 303 1 327 1 
330 1 278 3 29 4 30 1 258 1 181 9 115 1 185 19 35 1 137 1 57 1 365 1 165 3 217 2 15 3 218 6 65 2 169 3 246 2 173 2 105 2 175 1 49 3 107 10 152 1 225 2 108 1 300 2 303 3 327 3 
334 1 278 3 29 6 30 2 258 2 181 13 91 1 115 2 185 24 35 1 137 1 57 2 40 1 265 1 165 1 367 1 217 2 15 2 16 1 218 2 65 3 169 2 246 3 173 3 105 3 49 1 175 1 323 2 107 11 152 1 225 3 300 1 303 3 327 3 
330 1 334 1 278 4 29 6 30 2 258 1 181 15 91 1 115 3 185 32 35 1 137 1 40 1 57 3 265 1 367 1 165 2 217 4 15 4 16 1 218 5 65 3 169 4 149 1 246 3 173 3 105 3 175 1 49 3 323 1 107 17 152 1 225 3 108 1 300 1 303 4 327 4 
330 1 334 1 278 4 29 8 30 2 258 1 181 17 91 1 115 3 185 33 35 1 137 1 40 1 57 3 265 1 367 1 165 3 217 4 15 3 16 1 218 6 65 4 169 3 149 1 246 4 173 4 105 4 175 1 49 3 323 2 107 16 152 1 225 4 108 1 300 1 303 4 327 4 
334 1 278 6 29 4 90 1 30 1 258 1 181 24 91 1 115 4 185 46 35 1 138 1 137 1 40 1 57 2 58 1 241 1 265 1 367 1 165 6 217 4 15 7 16 1 218 12 196 2 65 2 169 6 246 2 173 2 105 3 175 1 49 6 323 1 107 22 152 1 225 2 108 2 153 1 300 1 303 7 255 1 327 6 
262 1 160 1 146 1 243 1 126 1 18 1 38 1 190 1 220 1 295 1 
355 1 121 1 
349 1 350 1 160 1 146 1 243 1 126 1 18 1 346 1 220 1 
329 1 277 1 266 1 113 1 126 1 243 1 146 1 160 1 369 1 18 1 319 1 220 1 281 1 295 1 374 2 262 1 190 1 285 1 
329 1 277 1 266 1 113 1 126 1 243 1 146 1 160 1 369 1 18 1 319 1 220 1 281 1 295 1 374 2 262 1 190 1 285 1 
329 1 277 1 266 1 113 1 126 1 243 1 146 1 160 1 369 1 18 1 319 1 220 1 281 1 295 1 374 2 262 1 190 1 285 1 
13 1 50 1 205 1 
13 1 50 1 205 1 
82 1 206 1 
50 1 82 1 206 1 
68 1 73 1 
329 1 113 1 160 1 114 1 73 1 355 1 117 1 188 2 240 2 142 2 121 1 123 1 41 1 99 1 266 1 62 2 146 1 243 1 126 1 319 1 18 1 371 1 220 1 249 1 374 1 68 1 253 2 
13 1 205 1 
50 1 82 1 206 1 
89 2 29 2 308 1 181 1 33 1 116 1 185 2 259 1 74 1 344 1 93 1 362 2 240 2 142 2 125 1 62 2 102 1 318 1 63 2 46 1 65 1 246 1 222 1 173 1 200 2 375 1 107 1 225 1 177 1 109 1 229 1 
89 1 125 1 45 1 308 1 222 1 20 1 129 1 200 1 186 1 23 1 362 1 345 1 229 1 12 1 
89 1 101 1 125 1 132 1 20 1 171 1 200 1 376 2 313 1 362 1 202 1 377 1 214 1 315 1 11 1 216 1 12 1 229 1 
89 2 101 1 125 1 132 1 20 1 171 1 248 1 200 2 376 2 313 1 362 2 202 1 377 1 214 1 315 1 11 1 216 1 229 1 12 1 
89 1 101 1 125 1 132 1 171 1 200 1 322 1 376 2 313 1 362 1 202 1 377 1 315 1 11 1 216 1 12 1 229 1 
75 1 
277 1 317 1 267 1 48 1 270 1 260 1 296 1 348 1 276 1 71 1 
277 5 335 1 278 2 232 1 15 2 193 5 267 5 169 2 19 5 260 5 359 2 9 5 284 10 303 2 327 2 
277 1 266 1 317 1 113 1 120 1 304 1 
156 2 158 2 89 4 113 3 308 1 260 2 312 1 360 1 120 2 263 1 362 4 266 3 125 1 194 1 45 1 267 2 48 2 222 1 129 2 296 1 200 4 348 2 273 1 324 1 23 1 24 2 304 4 229 1 71 2 
78 1 277 1 317 1 267 1 276 1 260 1 270 1 
354 1 277 2 113 1 260 1 92 1 120 1 9 1 284 1 266 1 317 1 267 1 48 1 296 1 348 1 298 1 304 1 71 1 
305 1 156 1 277 3 278 1 89 1 232 1 113 2 308 1 260 3 34 1 359 1 120 1 361 1 94 1 362 1 9 3 284 6 286 1 368 1 366 1 266 2 15 1 125 2 193 3 267 4 147 1 195 1 48 2 169 1 19 3 222 4 129 1 200 1 296 2 373 2 348 2 272 1 303 1 304 2 85 1 327 1 71 2 229 1 
277 4 278 2 113 1 91 1 115 1 260 4 359 1 120 1 9 3 284 6 57 1 40 1 265 1 367 1 217 1 266 1 15 2 317 1 193 5 267 7 16 1 48 2 169 2 19 5 296 2 348 2 275 1 303 2 304 1 71 2 327 2 
335 1 113 1 337 1 90 1 260 2 211 1 359 2 77 1 188 1 136 1 240 1 142 1 264 1 241 1 266 1 15 1 62 1 267 2 48 1 81 1 296 1 348 1 52 1 253 1 69 1 303 2 255 1 71 1 
89 1 29 2 308 1 32 1 185 1 259 1 344 1 37 1 188 2 94 1 362 1 240 3 142 3 264 1 287 1 62 2 125 1 371 1 65 1 246 1 222 1 173 1 129 1 199 1 200 1 375 1 107 1 225 1 253 2 69 2 26 1 229 1 
156 1 277 4 317 2 193 2 267 1 48 1 19 2 260 2 296 1 348 1 24 1 9 2 284 4 58 1 71 1 
67 1 262 1 68 1 160 1 18 1 
160 1 18 1 280 1 
160 1 18 1 280 1 
160 1 18 1 280 1 
160 1 18 1 268 1 
160 1 18 1 268 1 
160 1 18 1 268 1 
160 1 18 1 
146 1 243 1 
165 3 15 2 29 2 337 1 90 1 218 5 65 1 181 5 246 1 185 10 173 1 35 1 49 2 107 5 225 1 303 2 255 2 241 2 
29 2 218 1 65 1 181 2 246 1 185 2 173 1 35 1 49 1 225 1 303 1 327 1 
165 1 278 1 15 1 29 2 218 2 65 1 181 2 169 1 246 1 185 4 173 1 35 1 49 1 107 2 225 1 303 1 327 1 
330 1 165 1 29 6 309 1 218 2 65 3 181 1 185 3 246 3 173 3 35 1 49 1 323 1 107 2 225 3 255 1 241 1 
330 1 278 3 29 10 90 2 309 1 181 16 115 3 185 34 235 1 35 1 5 1 119 1 138 1 57 1 58 1 241 3 165 7 217 4 43 1 15 5 218 12 65 5 169 3 246 5 173 5 49 5 323 2 107 18 225 5 108 1 153 1 303 5 255 3 327 3 
165 2 15 1 29 4 90 1 218 3 181 4 65 2 185 8 246 2 173 2 49 1 107 4 323 1 225 2 153 1 138 1 303 1 255 1 58 1 241 1 
78 1 165 2 15 1 90 1 218 2 181 3 185 6 107 3 153 1 138 1 303 1 255 1 58 1 241 1 
165 1 278 1 15 1 29 2 218 2 65 1 181 2 169 1 246 1 185 4 173 1 235 1 49 1 107 2 225 1 303 1 327 1 
165 1 217 2 278 1 15 1 218 2 181 3 169 1 115 1 185 7 49 1 107 4 108 1 57 1 303 1 327 1 
278 2 29 4 90 1 309 1 181 11 115 2 185 23 138 1 363 1 58 1 241 2 165 5 217 2 15 3 218 9 196 1 65 2 169 2 246 2 173 2 49 4 107 12 323 2 108 1 225 2 153 1 303 3 255 2 327 2 
217 1 107 1 185 1 
181 1 115 1 185 1 
165 2 278 1 232 1 15 1 29 2 218 3 65 1 181 3 169 1 246 1 185 6 173 1 235 1 49 1 107 3 225 1 303 1 327 1 
278 2 29 2 181 6 115 1 91 1 185 12 35 1 57 1 40 1 367 1 165 1 265 1 217 1 15 2 16 1 218 2 65 1 169 2 246 1 173 1 49 1 107 6 225 1 303 2 327 2 
165 1 15 1 90 1 218 2 181 3 185 6 49 1 107 3 303 1 255 1 241 1 
165 1 29 2 218 2 309 1 181 1 65 1 185 3 246 1 173 1 49 1 107 2 323 1 225 1 153 1 138 1 255 1 241 1 
29 2 90 1 181 4 115 1 185 8 35 1 138 1 57 1 58 1 241 1 367 1 165 2 217 1 15 1 218 2 65 1 246 1 173 1 107 4 225 1 153 1 303 1 255 1 
278 1 29 4 90 1 181 6 115 1 185 11 35 1 235 1 138 1 57 1 58 1 241 1 165 2 367 1 217 2 15 1 218 3 65 2 246 2 173 2 49 1 107 5 225 2 108 1 153 1 303 2 255 1 327 1 
278 2 29 6 181 6 91 1 115 1 185 13 235 1 35 1 57 1 40 1 367 1 165 1 265 1 217 1 15 2 16 1 218 2 65 3 169 2 246 3 173 3 49 1 107 7 323 1 225 3 303 2 327 2 
278 2 29 6 181 7 115 1 91 1 185 11 235 1 35 1 57 1 40 1 367 1 165 1 265 1 217 1 15 1 16 1 218 2 65 3 169 1 246 3 173 3 49 1 323 1 107 4 225 3 303 2 327 2 
29 2 90 1 181 4 115 1 185 8 35 1 138 1 57 1 58 1 241 1 367 1 165 2 217 1 15 1 218 2 65 1 246 1 173 1 107 4 225 1 153 1 303 1 255 1 
278 2 29 2 181 6 115 1 91 1 185 12 35 1 57 1 40 1 367 1 165 1 265 1 217 1 15 2 16 1 218 2 65 1 169 2 246 1 173 1 49 1 107 6 225 1 303 2 327 2 
278 2 29 8 181 7 91 1 115 1 185 12 235 1 35 1 57 1 40 1 265 1 367 1 165 1 217 1 15 1 16 1 218 2 65 4 169 1 246 4 173 4 49 1 107 5 323 2 225 4 303 2 327 2 
330 1 278 2 29 8 181 7 91 1 115 1 185 12 35 1 57 1 40 1 265 1 367 1 165 2 217 1 15 1 16 1 218 4 65 4 169 1 246 4 173 4 49 2 107 5 323 2 225 4 303 2 327 2 
165 3 15 1 90 1 218 6 181 3 185 7 49 3 107 4 153 1 138 2 303 1 255 3 241 3 
330 1 278 2 29 8 181 7 91 1 115 1 185 12 35 1 57 1 40 1 265 1 367 1 165 1 217 1 15 1 16 1 218 2 65 4 169 1 246 4 173 4 49 1 107 5 323 2 225 4 303 2 327 2 
161 1 62 1 371 1 240 1 142 1 292 1 301 1 
62 1 371 1 292 1 66 1 269 1 56 1 21 1 161 1 8 1 142 1 240 1 301 1 
89 4 125 1 257 1 45 1 308 1 222 1 129 1 248 1 200 4 223 1 23 1 362 4 229 1 
42 1 158 1 89 2 125 2 72 1 308 1 222 1 200 2 251 1 311 1 94 1 362 2 39 1 229 1 
200 1 89 1 125 1 376 1 313 1 202 1 362 1 11 1 229 1 129 1 
89 2 125 1 308 1 222 1 248 1 171 1 200 2 74 1 93 1 362 2 229 1 
158 1 89 5 125 2 45 1 308 2 222 3 129 1 248 1 247 1 200 4 74 1 223 1 22 1 23 1 362 5 229 2 
124 1 158 1 89 5 125 2 45 1 308 2 222 3 129 1 248 1 200 4 74 1 223 1 22 1 23 1 362 5 229 2 
78 1 200 1 89 1 125 1 45 1 23 1 308 1 362 1 222 1 229 1 129 1 
27 1 89 1 125 1 62 1 308 1 371 1 222 1 129 1 199 1 200 1 37 1 188 1 253 1 94 1 362 1 142 2 240 2 229 1 
27 1 61 1 158 1 89 1 125 1 62 2 308 2 371 1 339 1 222 3 199 1 200 1 187 1 37 1 77 1 188 1 253 2 94 2 362 1 142 2 240 2 10 1 229 1 
27 1 61 1 158 1 89 2 125 1 62 2 257 1 308 2 371 1 339 1 222 3 199 1 200 2 187 1 77 1 188 1 253 2 94 2 362 2 142 2 240 2 352 1 10 1 229 1 
277 1 158 1 89 1 113 2 308 1 211 1 187 1 77 1 188 1 136 1 94 1 362 1 240 1 142 1 10 1 264 1 59 1 266 2 62 1 125 1 317 1 147 1 293 1 222 4 373 1 200 1 272 1 52 1 253 1 69 1 304 1 229 1 
277 1 158 1 89 1 113 2 308 1 211 1 34 1 187 1 77 1 188 1 136 1 94 1 362 1 240 1 142 1 10 1 264 1 266 2 62 1 125 1 317 1 147 1 222 4 373 1 200 1 272 1 52 1 253 1 69 1 304 1 229 1 
0 1 200 1 89 1 125 1 362 1 229 1 
0 1 112 1 89 7 125 3 63 1 308 2 222 3 171 1 247 1 248 1 129 2 200 6 74 1 251 1 311 1 22 1 201 1 94 1 362 7 286 1 229 2 
27 1 159 1 89 1 29 4 90 1 308 1 181 3 32 1 33 1 183 1 185 6 259 2 37 1 188 1 138 1 94 1 362 1 283 1 240 2 142 2 58 1 241 1 165 2 316 1 14 1 15 1 125 1 62 1 218 2 371 2 65 2 246 2 222 1 173 2 248 1 199 1 200 1 375 2 107 3 225 2 153 1 177 1 253 1 26 1 303 1 255 1 229 1 
277 2 335 1 89 1 337 1 90 1 188 1 136 1 240 1 142 1 241 1 15 2 62 1 147 1 296 2 200 1 348 2 253 1 69 1 303 2 304 2 255 1 71 2 305 1 113 3 34 1 260 5 211 1 117 1 359 2 77 1 120 1 362 1 264 1 366 1 266 3 317 2 267 4 48 2 222 2 129 1 270 1 373 1 272 1 273 1 52 1 276 1 85 1 
0 1 89 2 125 2 147 1 195 1 308 1 222 2 248 1 200 2 94 1 362 2 286 1 229 1 
27 1 89 1 125 1 62 1 308 1 371 1 222 1 129 1 199 1 200 1 188 1 253 1 94 1 362 1 142 2 240 2 352 1 229 1 
112 1 158 1 89 1 125 2 308 1 222 1 200 1 251 1 311 1 94 1 362 1 286 1 229 1 
88 1 102 1 62 1 116 1 261 1 109 1 226 1 142 1 240 1 
87 1 226 1 127 1 
261 1 88 1 7 1 371 1 226 1 
87 1 277 1 88 1 113 2 339 1 184 1 341 1 211 1 117 1 261 1 188 1 77 2 136 1 7 1 240 1 142 1 264 1 61 1 266 2 62 1 317 1 127 1 272 1 52 1 253 1 69 1 226 1 110 1 
179 1 96 1 208 1 289 1 103 1 351 1 291 1 221 1 
179 4 96 1 98 1 208 1 289 3 291 2 310 2 221 4 151 1 351 2 239 1 191 1 326 1 227 1 
96 1 179 2 208 1 289 1 103 1 310 1 291 1 170 1 221 2 6 1 351 1 207 1 
96 1 179 3 208 1 289 1 103 1 291 1 221 3 151 2 351 1 239 2 143 1 191 1 
289 2 279 1 379 2 228 1 
179 1 96 1 192 1 208 1 103 1 221 1 
179 2 96 1 28 1 208 1 289 1 103 1 351 1 291 1 310 1 221 2 
256 1 
179 1 96 1 208 1 289 1 103 1 351 1 291 1 221 1 
78 1 289 1 351 1 291 1 
179 1 96 1 208 1 289 1 351 1 291 1 221 1 
242 1 274 1 221 1 
96 1 179 3 208 1 289 1 103 1 291 1 221 3 297 1 151 2 351 1 239 1 191 1 
179 2 96 1 208 1 289 1 351 1 139 1 291 1 310 1 221 2 
179 1 96 1 332 1 208 1 376 1 289 1 103 1 377 1 326 1 11 1 221 1 
179 1 96 1 208 1 289 1 103 1 351 1 221 1 
179 1 96 1 208 1 103 1 351 2 291 1 221 1 
96 2 179 2 97 1 208 2 289 1 103 1 307 1 221 2 342 1 351 1 
96 1 179 3 98 1 79 1 28 1 208 1 103 1 289 2 291 1 310 2 221 3 351 1 326 1 
96 1 179 2 208 1 101 1 289 1 103 1 291 1 310 1 221 2 130 1 313 1 376 2 351 1 377 1 11 1 
96 2 179 4 98 1 208 2 103 1 289 2 291 1 310 2 221 4 176 1 351 1 139 1 326 1 
96 1 179 3 28 1 208 1 103 1 289 1 310 1 291 1 221 3 151 1 351 1 
98 1 289 1 326 1 227 1 
289 1 351 1 

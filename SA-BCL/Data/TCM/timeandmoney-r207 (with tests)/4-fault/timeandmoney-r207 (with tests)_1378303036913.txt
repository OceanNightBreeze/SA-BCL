#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 167 107 263 218 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 173 28 247 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 173 379 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 173 28 247 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 173 379 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 173 28 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 173 154 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 5 148 2 176 4 72 2 6 2 54 1 228 1 260 1 29 1 8 1 204 1 56 1 343 6 322 1 81 3 86 2 161 1 37 1 114 2 87 1 268 9 288 1 271 2 91 1 20 1 45 2 94 1 381 9 
99 5 148 2 176 4 72 2 6 2 54 1 228 1 260 1 29 1 8 1 204 1 56 1 343 6 322 1 81 3 86 2 161 1 37 1 114 2 87 1 268 9 288 1 271 2 91 1 20 1 45 2 94 1 381 9 
99 6 148 2 176 5 72 2 6 2 54 1 228 1 260 1 29 1 8 1 204 1 56 1 343 7 322 1 81 4 86 2 161 1 37 1 114 2 87 1 268 10 288 1 271 2 91 1 20 1 45 2 94 1 381 10 
99 4 148 2 176 3 72 1 6 2 54 1 228 1 260 1 29 1 8 1 204 1 343 4 322 1 81 2 86 2 161 1 37 1 114 2 87 1 268 7 288 1 271 2 91 1 20 1 45 2 94 1 381 7 
343 3 81 1 99 3 148 1 176 2 161 1 86 1 72 2 37 1 114 1 268 4 288 1 271 1 54 1 260 1 45 1 56 1 381 4 
145 1 99 1 305 1 148 1 161 1 86 1 37 1 114 1 268 2 6 1 116 1 271 1 91 1 260 1 8 1 381 2 
343 1 81 1 99 2 176 1 161 1 86 2 37 1 114 2 268 3 6 1 260 1 94 1 381 3 
99 5 148 1 176 4 72 2 6 1 54 1 260 1 29 1 338 1 56 1 343 7 81 3 86 2 161 1 37 1 114 2 268 9 288 1 271 1 20 1 45 1 94 1 331 1 381 9 
99 5 148 1 176 4 72 2 6 1 54 1 260 1 29 1 338 1 56 1 343 7 81 3 86 2 161 1 37 1 114 2 268 9 288 1 271 1 20 1 45 1 94 1 331 1 381 9 
350 1 47 1 267 1 
167 2 278 1 350 1 
342 2 133 2 1 1 137 2 122 1 376 2 377 2 225 2 
196 1 1 1 70 1 122 1 223 1 225 2 50 2 149 2 51 1 103 1 336 1 282 1 74 1 365 2 30 1 342 2 133 3 235 2 14 1 137 2 59 1 112 1 184 1 139 1 210 1 242 2 308 1 140 1 289 1 117 1 186 1 19 1 376 2 248 1 377 3 355 1 380 1 
342 1 133 1 12 1 137 1 122 1 372 1 376 1 377 1 225 1 232 1 
133 1 254 1 315 1 136 1 372 1 350 1 225 1 317 1 200 1 40 1 41 1 21 1 377 1 47 1 
342 1 133 1 254 1 137 1 136 2 372 1 350 1 225 1 317 1 40 1 41 2 21 1 376 1 377 1 47 1 
333 1 185 1 41 1 304 1 136 1 
212 1 333 1 185 1 41 2 136 2 82 1 350 1 47 1 
185 1 41 1 136 1 
342 1 133 1 12 1 333 1 41 1 137 1 122 1 136 1 372 1 376 1 377 1 225 1 316 1 232 1 
350 1 
17 1 212 1 333 1 185 1 41 2 136 2 350 1 47 1 
333 2 57 2 312 1 334 1 136 5 123 1 350 1 266 1 25 2 38 1 39 2 212 1 185 2 41 5 189 1 7 1 31 1 47 1 216 1 
133 2 137 1 223 1 225 1 50 1 149 1 184 1 139 1 308 1 289 1 117 1 186 1 244 1 319 1 365 1 299 1 248 1 376 1 377 2 380 1 
1 1 267 1 
342 1 133 2 1 1 175 1 98 1 137 1 372 1 225 2 376 1 377 2 95 1 
44 1 299 1 296 1 
133 1 310 1 1 1 50 1 149 1 184 1 223 1 139 1 308 1 289 1 117 1 186 1 365 1 248 1 377 1 380 1 
342 1 133 3 244 1 1 1 137 3 376 3 377 3 225 3 
133 1 137 1 372 1 376 1 377 1 225 1 232 1 
342 1 133 1 98 1 137 1 372 1 225 1 376 1 377 1 95 1 
219 1 1 1 254 1 122 1 223 1 225 3 50 1 149 1 336 1 317 1 74 1 319 1 365 1 30 1 342 2 133 4 235 2 14 1 137 3 136 1 372 1 59 1 112 1 184 1 139 1 210 1 242 1 308 1 140 1 289 1 117 1 40 1 186 1 244 1 19 1 41 1 21 1 248 1 376 3 377 4 171 1 355 1 380 1 95 1 
133 2 244 1 1 1 315 1 137 1 376 1 272 1 377 2 225 2 
342 1 133 3 254 1 136 1 137 3 372 1 350 1 101 1 225 3 317 1 40 1 244 2 41 1 319 1 21 1 376 3 377 3 171 1 95 1 
342 1 133 2 137 2 225 2 244 1 44 1 376 2 299 1 377 2 95 1 
133 1 1 1 50 1 149 1 184 1 223 1 139 1 308 1 289 1 117 1 186 1 365 1 248 1 377 1 380 1 
133 1 1 1 50 1 149 1 223 1 139 1 308 1 289 1 117 1 18 1 190 1 365 1 248 1 377 1 380 1 
70 2 296 2 104 1 336 1 362 1 106 1 229 1 299 2 235 2 371 1 349 1 159 1 59 2 112 1 241 1 210 1 115 1 242 4 140 1 90 1 19 1 354 1 44 2 355 1 
133 1 137 1 372 1 21 1 376 1 377 1 225 1 217 1 
342 1 133 5 1 1 315 1 137 4 83 1 225 5 244 2 319 1 291 1 376 4 272 1 377 5 95 1 
133 2 137 2 372 1 376 2 377 2 225 2 217 1 232 1 
158 1 165 1 
158 1 165 1 
329 1 251 1 
329 1 251 1 
329 1 251 1 
158 1 205 1 165 1 
275 1 158 1 165 1 
155 1 329 1 158 2 138 1 251 1 165 2 
158 1 205 1 165 1 
158 1 205 1 165 1 
227 1 158 1 165 1 
227 1 158 1 165 1 
227 1 158 1 165 1 
96 3 69 2 136 2 158 2 147 1 350 1 85 1 84 1 224 1 138 1 164 2 165 2 326 1 352 2 141 2 41 2 201 1 9 1 121 2 
294 1 96 1 275 1 69 1 1 1 225 2 26 1 76 1 133 2 303 1 368 1 137 2 136 1 323 1 158 1 165 1 164 1 326 1 141 1 41 1 376 2 377 2 93 1 121 1 
271 1 148 1 45 1 
271 1 305 1 148 1 
270 1 305 1 45 2 148 3 124 1 292 1 
270 1 360 1 305 1 45 1 148 2 124 1 
270 1 305 1 45 1 148 2 124 2 
294 1 333 4 68 1 357 1 278 1 123 3 24 2 25 1 104 1 226 2 151 1 106 1 229 1 152 1 57 1 234 1 345 2 303 1 368 1 136 5 371 1 350 2 39 1 38 1 167 3 212 1 185 1 41 5 142 1 92 1 47 1 216 2 
333 7 357 2 313 1 221 1 278 3 123 8 361 5 24 6 25 2 104 3 151 1 106 3 229 3 366 1 129 1 152 3 57 2 345 6 303 4 304 5 136 9 371 3 350 5 16 1 38 1 39 2 167 9 212 1 185 6 189 1 41 9 142 2 191 1 47 1 216 6 
333 2 68 1 357 1 278 2 123 3 25 1 24 2 104 1 226 1 106 1 229 1 57 1 152 1 345 2 303 1 136 3 371 1 350 3 39 1 167 4 41 3 189 1 142 1 92 1 47 1 216 2 
333 3 68 1 357 1 221 1 278 3 123 5 24 4 25 1 104 2 226 2 106 2 229 2 366 1 57 1 152 2 345 4 303 2 136 4 371 2 350 4 16 1 39 1 167 7 41 4 189 1 142 1 92 1 47 1 216 4 
308 1 188 1 267 1 
308 1 239 1 
245 1 
308 1 380 1 
308 3 134 1 188 2 223 1 380 1 351 1 
308 1 223 1 380 1 
308 1 207 1 
320 2 302 1 220 1 70 4 371 1 59 3 241 2 257 1 150 1 318 1 242 7 362 3 353 1 327 1 106 1 119 1 55 1 
320 2 302 1 220 1 70 4 371 1 59 3 241 2 257 1 150 1 318 1 242 7 362 3 353 1 327 1 106 1 119 1 55 1 
320 2 302 1 220 1 70 4 371 1 59 3 241 2 257 1 150 1 318 1 242 7 362 3 353 1 327 1 106 1 119 1 55 1 193 1 
274 1 311 1 70 16 220 2 257 2 336 1 104 3 318 2 150 5 362 10 106 4 229 3 55 1 75 1 261 1 320 3 152 3 302 1 235 2 35 1 36 1 371 4 59 15 112 1 373 1 241 5 210 1 242 31 353 1 327 2 290 3 119 1 46 4 355 1 
320 2 302 1 235 4 220 1 70 5 371 1 59 4 241 3 112 2 307 1 257 1 210 2 336 2 150 1 318 1 242 9 362 4 327 1 89 1 106 1 119 1 55 1 355 2 261 1 
255 1 99 1 197 1 277 1 148 2 149 1 50 1 6 1 365 1 260 1 130 1 341 1 343 1 344 1 305 1 86 1 161 1 163 1 15 1 37 1 114 1 268 2 289 1 271 1 45 1 248 1 330 1 48 1 381 2 292 1 
255 1 99 1 197 1 277 1 148 2 149 1 50 1 6 1 365 1 260 1 340 1 341 1 343 2 344 1 135 1 348 1 305 1 86 1 163 1 15 1 37 1 114 1 268 3 289 1 271 1 45 1 248 1 330 1 292 1 381 3 
255 1 99 1 197 1 148 2 149 1 50 1 6 1 365 1 260 1 341 1 343 2 135 1 348 1 305 1 163 1 15 1 37 1 268 2 289 1 271 1 248 1 45 1 330 1 381 2 292 1 
194 1 255 2 197 2 160 1 256 1 50 1 149 1 86 1 139 1 114 1 308 1 289 1 6 2 268 1 363 1 259 1 365 1 248 1 340 1 380 1 381 1 341 2 262 1 
255 1 197 1 277 1 148 2 149 1 50 1 6 1 365 1 341 1 344 1 348 1 305 1 86 1 161 1 163 1 15 1 114 1 268 1 289 1 271 1 45 1 248 1 330 1 48 1 381 1 292 1 
49 1 
253 1 97 2 254 1 4 2 50 2 149 2 53 1 200 1 298 1 107 1 11 1 57 1 153 1 160 1 350 2 162 1 166 1 308 1 167 2 212 3 169 4 21 1 216 2 174 2 359 2 315 1 278 2 123 2 225 1 25 1 317 1 363 1 178 1 365 2 284 2 79 1 133 1 236 2 237 1 287 2 136 5 372 1 139 2 325 1 38 1 39 1 185 6 289 1 40 1 41 5 142 1 248 1 377 1 47 1 380 1 
133 1 153 1 253 1 254 1 287 1 136 3 315 1 372 1 225 1 162 1 17 1 317 1 212 1 185 2 53 1 169 2 200 1 40 1 41 3 21 1 377 1 79 1 
253 1 254 1 315 1 225 1 317 1 53 1 200 1 79 1 133 1 153 1 236 1 136 3 372 1 350 1 162 1 17 1 212 1 185 1 40 1 169 3 41 3 21 1 377 1 47 1 
174 1 253 1 254 1 315 1 225 1 317 1 53 1 200 1 79 1 133 1 153 1 236 1 136 3 287 1 372 1 350 1 162 1 17 1 212 1 185 2 40 1 169 3 41 3 21 1 377 1 47 1 
253 1 254 1 97 2 4 2 53 1 200 1 107 1 11 1 57 1 263 1 153 1 350 5 162 1 17 1 212 3 169 6 269 1 309 1 21 1 216 1 174 4 359 2 315 1 123 1 278 2 225 1 25 1 317 1 283 1 284 2 79 1 133 1 233 1 236 4 287 4 136 5 372 1 38 1 39 1 185 7 40 1 41 5 377 1 47 5 
253 1 254 1 97 2 4 2 53 1 200 1 107 1 11 1 57 1 153 1 350 2 162 1 167 2 212 2 169 4 21 1 216 1 174 2 359 2 315 1 123 1 278 2 225 1 25 1 317 1 284 2 79 1 133 1 236 2 136 4 287 2 237 1 372 1 38 1 39 1 185 4 40 1 41 4 377 1 47 1 
174 2 253 1 359 2 97 2 254 1 315 1 278 2 123 1 4 2 225 1 25 1 317 1 53 1 200 1 283 1 284 2 107 1 79 1 11 1 263 1 133 1 57 1 153 1 233 1 236 2 287 2 136 4 372 1 350 1 162 1 39 1 38 1 212 2 185 4 40 1 169 4 41 4 21 1 377 1 47 1 216 1 
174 2 253 1 359 2 97 2 254 1 315 1 278 2 123 1 4 2 225 1 25 1 317 1 53 1 200 1 283 1 284 2 107 1 79 1 11 1 263 1 133 1 57 1 153 1 233 1 236 2 287 2 136 4 372 1 350 1 162 1 39 1 38 1 212 2 185 4 40 1 169 4 41 4 21 1 377 1 47 1 216 1 
218 1 253 1 97 1 254 1 315 1 198 1 123 1 4 1 225 1 25 1 317 1 53 1 200 1 107 1 79 1 263 1 133 1 57 1 153 1 136 2 372 1 183 1 162 1 39 1 38 1 167 1 40 1 169 2 65 1 41 2 21 1 377 1 216 1 
174 3 253 1 359 2 97 2 254 1 315 1 278 2 123 1 4 2 225 1 25 1 317 1 53 1 200 1 283 1 284 2 107 1 79 1 11 1 263 1 57 1 133 1 153 1 233 1 236 3 136 4 287 3 372 1 350 1 162 1 39 1 38 1 212 2 185 5 40 1 169 5 269 1 41 4 21 1 377 1 47 1 216 1 
174 3 253 1 359 2 97 2 254 1 315 1 278 2 123 1 4 2 225 1 25 1 317 1 53 1 200 1 283 1 284 2 107 1 79 1 11 1 263 1 57 1 133 1 153 1 233 1 236 3 136 4 287 3 372 1 350 1 162 1 39 1 38 1 212 2 185 5 40 1 169 5 269 1 41 4 21 1 377 1 47 1 216 1 
174 2 253 1 97 2 254 1 315 1 198 2 123 1 4 2 225 1 25 1 317 1 53 1 200 1 258 2 107 1 79 1 57 1 133 1 153 1 236 2 237 1 287 2 136 4 372 1 350 1 162 1 39 1 38 1 212 2 167 2 185 4 40 1 169 4 41 4 65 1 21 1 377 1 47 1 216 1 
320 1 302 1 1 2 235 2 70 3 371 1 296 1 59 3 241 2 112 1 267 1 257 1 210 1 336 1 242 6 115 1 362 2 140 1 327 1 106 1 19 1 119 1 44 1 55 1 299 1 355 1 
67 1 311 1 196 1 1 1 70 8 296 11 336 2 104 1 150 1 362 2 74 1 106 2 229 2 299 11 80 1 152 2 346 1 235 4 209 1 371 1 59 6 241 1 112 2 373 1 210 2 242 14 140 1 290 3 19 2 44 4 46 3 355 2 66 1 
310 1 1 1 196 1 70 1 223 1 149 1 50 1 225 1 336 1 319 1 74 1 365 1 133 2 235 2 209 1 137 1 59 1 112 1 184 1 139 1 113 1 62 1 210 1 308 1 242 2 289 1 140 1 117 1 186 1 244 1 19 1 44 1 248 1 376 1 377 2 249 1 355 1 380 1 
1 2 196 1 296 7 3 2 149 3 50 3 257 1 336 3 104 2 150 4 106 3 55 1 299 7 152 2 302 1 13 2 348 1 209 1 59 10 112 3 210 3 63 1 308 2 117 2 19 3 64 2 119 1 355 3 70 10 225 1 223 2 362 8 74 1 319 1 229 2 365 3 30 2 32 1 320 1 133 3 235 6 137 1 371 3 241 4 184 2 139 1 242 20 140 3 289 2 327 1 244 1 186 2 187 2 44 7 376 1 248 2 377 3 250 1 380 2 
314 1 196 1 70 1 146 1 223 1 225 1 149 4 50 4 336 2 282 1 28 1 363 1 74 1 365 4 206 1 130 1 133 1 235 4 137 1 59 1 160 1 112 2 139 2 210 2 115 1 308 3 242 2 289 2 140 2 244 1 19 2 247 1 376 1 248 3 377 1 172 1 173 1 355 2 380 3 252 1 293 1 
70 1 296 1 225 1 336 1 104 1 362 1 281 1 106 1 229 1 299 1 342 1 133 1 152 1 235 2 209 1 137 1 371 1 59 2 241 1 112 1 210 1 242 3 140 1 19 1 44 1 376 1 377 1 355 1 95 1 
235 2 70 2 296 1 159 1 112 1 210 1 336 1 150 1 242 2 115 1 362 1 140 1 19 1 106 1 44 1 229 1 299 1 355 1 
235 2 349 1 371 1 296 1 59 2 241 1 112 1 210 1 336 1 104 1 242 2 115 1 362 1 140 1 19 1 44 1 299 1 355 1 
70 2 296 2 336 1 104 1 150 1 362 2 106 1 229 1 299 2 152 1 235 2 371 1 59 2 112 1 241 1 210 1 115 1 242 4 140 1 19 1 44 2 355 1 
235 2 70 2 296 1 159 1 112 1 210 1 336 1 150 1 242 2 362 1 140 1 19 1 106 1 44 1 229 1 299 1 355 1 293 1 
235 2 349 1 371 1 296 1 59 2 241 1 112 1 210 1 336 1 104 1 242 2 362 1 140 1 19 1 44 1 299 1 355 1 293 1 
70 2 296 2 336 1 104 1 150 1 362 2 106 1 229 1 299 2 152 1 235 2 371 1 59 2 112 1 241 1 210 1 242 4 140 1 19 1 44 2 355 1 293 1 
70 2 296 2 336 1 104 1 150 1 362 2 106 1 229 1 299 2 152 1 235 2 371 1 59 2 112 1 241 1 210 1 242 4 140 1 19 1 44 2 355 1 
196 1 1 1 70 1 223 1 149 1 50 1 336 1 74 1 365 1 30 1 133 1 235 2 59 1 112 1 184 1 139 1 210 1 242 2 308 1 289 1 140 1 117 1 186 1 19 1 248 1 377 1 355 1 380 1 
196 1 1 1 70 1 100 1 223 1 149 1 50 1 336 1 74 1 365 1 133 1 235 2 59 1 112 1 139 1 210 1 242 2 308 1 289 1 140 1 117 1 18 1 19 1 190 1 248 1 377 1 355 1 380 1 
70 2 296 2 336 1 104 1 150 1 362 2 106 1 229 1 299 2 152 1 235 2 209 1 371 1 59 2 112 1 241 1 210 1 242 4 140 1 19 1 44 2 355 1 
70 2 296 2 223 1 149 1 50 1 104 1 336 1 150 1 362 2 106 1 229 1 365 1 299 2 30 1 130 1 133 1 152 1 235 2 371 1 59 2 241 1 112 1 184 1 210 1 242 4 308 1 289 1 140 1 117 1 186 1 187 1 19 1 44 2 248 1 377 1 355 1 380 1 
70 2 296 1 225 1 104 1 336 1 150 1 362 1 106 1 229 1 299 1 108 1 342 1 133 1 152 1 235 2 209 1 137 1 371 1 59 1 112 1 210 1 242 3 140 1 19 1 44 1 376 1 377 1 355 1 95 1 
273 1 311 1 70 9 336 2 104 3 150 3 362 6 106 3 229 3 230 2 10 2 109 1 301 1 152 3 286 1 157 1 235 4 238 1 371 3 111 1 59 10 241 3 112 2 373 1 307 1 210 2 242 19 290 1 46 2 355 2 
273 1 311 2 195 1 70 14 336 3 104 2 52 1 150 2 362 4 106 3 229 3 181 1 230 4 128 1 261 2 10 1 109 1 301 2 152 3 321 1 157 2 235 6 371 2 240 1 59 12 111 1 241 2 112 3 307 1 210 3 242 26 290 2 46 2 355 3 
273 1 311 3 195 1 70 20 257 1 336 3 104 4 52 1 150 4 362 8 106 5 229 4 55 1 181 1 230 4 128 1 261 1 10 1 109 1 320 1 301 1 152 4 33 1 286 1 302 1 321 1 157 2 235 6 371 5 240 1 111 1 59 21 241 4 112 3 373 1 307 1 210 3 242 41 327 1 290 3 119 1 46 4 355 3 
273 1 311 3 195 1 70 20 257 1 336 4 104 3 52 1 150 3 362 7 106 5 229 4 55 1 181 1 230 4 128 1 261 2 10 1 109 1 320 1 301 1 152 4 33 1 286 1 302 1 321 1 157 2 235 8 371 4 240 1 111 1 59 18 241 4 112 4 373 1 307 1 210 4 242 38 327 1 290 3 119 1 46 4 355 4 
273 1 311 2 195 1 70 27 257 1 336 2 104 7 52 1 150 7 362 14 106 8 229 7 55 1 181 1 230 4 128 1 261 1 10 1 109 1 320 1 301 1 152 7 302 1 321 1 157 1 235 4 371 8 240 1 111 1 59 25 241 7 112 2 373 2 307 1 210 2 242 52 327 1 290 4 119 1 46 4 355 2 66 2 
141 1 69 1 201 1 158 1 224 1 22 1 138 1 165 1 164 1 121 1 
275 1 26 1 
141 1 69 1 347 1 42 1 158 1 222 1 165 1 164 1 121 1 
96 2 69 1 136 1 158 1 350 1 85 1 84 1 224 1 138 1 164 1 165 1 326 1 352 1 141 1 41 1 201 1 9 1 121 1 
96 2 69 1 136 1 158 1 350 1 85 1 84 1 224 1 138 1 164 1 165 1 326 1 352 1 141 1 41 1 201 1 9 1 121 1 
96 2 69 1 136 1 158 1 350 1 85 1 84 1 224 1 138 1 164 1 165 1 326 1 352 1 141 1 41 1 201 1 9 1 121 1 
155 1 205 1 102 1 
155 1 205 1 102 1 
227 1 105 1 
227 1 155 1 105 1 
76 1 93 1 
294 1 333 1 96 1 275 1 69 1 1 1 225 2 26 1 76 1 339 1 133 2 303 1 368 1 136 1 323 1 137 2 158 1 84 1 165 1 164 1 352 1 141 1 41 1 376 2 377 2 93 1 121 1 
205 1 102 1 
227 1 155 1 105 1 
314 1 196 1 70 1 146 1 223 1 149 2 225 2 50 2 280 1 336 1 282 2 74 1 365 2 206 1 133 2 34 1 264 1 235 2 209 1 59 1 112 1 210 1 308 2 242 2 289 1 140 1 118 1 19 1 248 2 377 2 172 1 173 1 379 1 355 1 380 2 252 1 
58 1 344 1 348 1 255 1 71 1 305 1 295 1 148 2 50 2 149 2 163 1 15 1 289 1 271 1 365 2 45 1 248 1 130 1 292 1 
58 1 344 1 348 1 255 1 305 1 148 2 50 1 149 1 163 1 15 1 337 1 289 1 271 1 365 1 45 1 248 1 292 1 
255 1 295 1 160 1 256 1 50 1 149 1 139 1 308 1 289 1 363 1 365 1 248 1 231 1 380 1 
58 1 344 1 348 1 255 1 71 1 305 1 295 1 148 2 50 1 149 1 163 1 15 1 289 1 271 1 365 1 45 1 248 1 292 1 
243 1 
334 1 123 1 350 1 47 1 266 1 267 1 216 1 
359 1 278 1 123 1 25 1 284 1 11 1 57 1 136 1 350 2 39 1 38 1 167 1 212 1 185 1 41 1 47 1 216 1 
334 1 50 3 149 3 104 2 106 2 207 2 57 4 152 2 13 2 345 6 350 8 266 1 308 10 212 3 167 12 213 2 215 1 216 8 123 9 278 6 223 3 23 2 25 4 24 6 317 2 125 2 229 2 365 3 77 2 130 1 78 1 131 2 285 2 134 1 369 2 136 5 371 2 239 3 139 1 325 1 38 4 39 4 289 3 185 5 188 2 41 5 43 1 246 2 142 2 248 4 143 1 192 1 47 2 380 3 
311 1 195 1 335 1 123 8 278 3 24 5 25 2 104 2 106 2 229 2 181 1 128 1 131 1 57 2 152 2 345 5 321 1 369 2 136 1 371 2 240 1 350 5 325 1 211 1 39 2 38 2 212 1 167 6 185 1 290 1 41 1 142 1 46 1 47 2 216 5 
122 1 123 2 2 1 225 1 316 1 257 1 25 1 106 2 283 1 55 1 131 1 232 1 342 1 133 1 57 1 12 1 369 2 136 1 137 1 372 1 371 1 39 1 38 1 327 1 41 1 376 1 377 1 216 2 
57 1 334 1 123 1 350 1 266 1 25 1 38 1 39 1 47 1 216 1 
152 2 13 1 345 5 369 2 371 2 278 5 123 5 350 5 24 5 104 2 167 10 106 2 229 2 131 1 216 5 
212 1 185 1 41 1 136 1 350 1 47 1 
123 2 149 4 50 4 25 2 5 1 363 1 178 1 365 4 78 1 57 2 370 1 136 3 160 1 139 2 308 1 166 1 39 2 38 1 325 2 212 2 289 1 185 4 189 1 41 3 142 2 248 1 192 2 380 1 216 2 
1 1 122 1 149 1 50 1 225 2 223 1 336 1 74 1 365 1 30 1 342 2 133 3 235 2 14 1 137 2 59 1 112 1 184 1 139 1 210 1 242 1 308 1 289 1 140 1 117 1 186 1 19 1 376 2 248 1 377 3 355 1 380 1 
320 1 57 1 345 2 278 2 123 1 350 4 24 2 25 1 38 1 39 1 325 1 167 4 142 1 47 2 216 2 
141 1 60 1 121 1 
141 1 201 1 76 1 182 1 121 1 
141 1 60 1 121 1 
141 1 60 1 121 1 
73 1 141 1 121 1 
73 1 141 1 121 1 
73 1 141 1 121 1 
141 1 121 1 
158 1 165 1 
320 1 302 1 235 4 70 4 371 1 59 4 241 2 112 2 257 1 210 2 336 2 242 8 150 1 362 3 327 1 106 1 119 1 55 1 355 2 261 1 
320 1 302 1 70 3 371 1 59 3 241 2 267 1 257 1 242 6 362 2 327 1 106 1 119 1 55 1 
152 1 235 2 70 2 371 1 59 2 241 1 112 1 104 1 210 1 336 1 242 4 150 1 362 2 170 1 106 1 229 1 355 1 
152 1 311 1 70 3 371 1 59 4 241 1 373 1 104 1 242 7 150 1 362 2 290 1 106 1 229 1 46 2 
70 11 257 2 104 2 336 2 150 4 362 9 106 3 229 2 55 1 127 1 261 2 320 1 152 2 302 1 346 1 235 4 371 3 59 12 373 1 241 5 112 2 210 2 242 23 327 2 290 2 119 1 46 2 355 2 66 1 
242 1 59 1 46 1 
242 1 290 1 70 1 
152 1 13 1 235 2 70 3 371 1 59 3 112 1 241 2 336 1 210 1 104 1 242 6 150 1 362 3 170 1 106 1 229 1 355 1 
311 1 195 1 70 6 336 1 104 2 150 1 362 2 106 2 229 2 181 1 128 1 152 2 321 1 235 2 371 2 240 1 59 6 112 1 241 1 307 1 210 1 242 12 290 1 46 1 355 1 
70 3 371 1 59 3 241 1 257 1 242 6 150 1 362 2 327 1 106 1 55 1 
302 1 235 2 70 1 59 2 241 1 112 1 257 1 210 1 336 1 150 1 242 3 362 2 327 1 119 1 127 1 355 1 261 1 
235 2 70 5 371 2 59 5 112 1 2 1 241 3 307 1 257 2 336 1 210 1 150 2 242 10 362 5 327 2 106 2 55 1 355 1 
235 2 70 2 112 1 307 1 210 1 336 1 242 2 150 1 362 1 106 1 229 1 355 1 
152 1 235 2 70 2 371 1 59 2 241 1 112 1 307 1 104 1 210 1 336 1 242 4 150 1 362 2 106 1 229 1 355 1 
286 1 235 6 70 1 59 2 112 3 241 1 307 1 257 1 210 3 336 3 242 3 150 1 362 2 327 1 127 1 355 3 261 1 
274 1 311 1 70 14 257 2 336 4 104 3 150 5 362 10 106 4 229 3 55 1 75 1 261 1 320 1 152 3 302 1 286 1 235 8 36 1 371 4 59 15 112 4 373 1 241 5 307 1 210 4 242 29 170 1 327 2 290 3 119 1 46 4 355 4 
320 1 302 1 311 1 235 2 70 4 371 1 240 1 59 4 241 2 112 1 307 1 257 1 210 1 336 1 242 8 362 2 327 1 290 1 106 1 119 1 55 1 46 1 355 1 
311 1 70 6 257 1 336 2 150 1 362 3 106 2 229 1 55 1 320 1 152 1 302 1 235 4 371 1 240 1 59 5 241 2 112 2 373 1 307 1 210 2 242 11 170 1 327 1 290 1 119 1 46 2 355 2 
311 1 195 1 70 9 257 1 336 3 104 2 150 1 362 4 106 3 229 2 55 1 181 1 128 1 261 1 320 1 152 2 302 1 321 1 235 6 371 3 240 1 59 10 112 3 241 3 307 1 210 3 242 19 170 1 327 1 290 1 119 1 46 1 355 3 
311 1 195 1 70 10 257 1 336 3 104 1 150 2 362 5 106 3 229 2 55 1 181 1 128 1 261 1 320 1 152 2 302 1 321 1 235 6 371 2 240 1 59 7 112 3 241 3 307 1 210 3 242 17 170 1 327 1 290 1 119 1 46 1 355 3 
320 1 302 1 311 1 235 2 70 4 371 1 240 1 59 4 241 2 112 1 307 1 257 1 210 1 336 1 242 8 362 2 327 1 290 1 106 1 119 1 55 1 46 1 355 1 
311 1 195 1 70 6 336 1 104 2 150 1 362 2 106 2 229 2 181 1 128 1 152 2 321 1 235 2 371 2 240 1 59 6 112 1 241 1 307 1 210 1 242 12 290 1 46 1 355 1 
311 1 195 1 70 10 257 1 336 4 104 1 150 2 362 5 106 3 229 2 55 1 181 1 128 1 261 2 320 1 152 2 302 1 321 1 235 8 371 2 240 1 59 8 112 4 241 3 307 1 210 4 242 18 170 1 327 1 290 1 119 1 46 1 355 4 
311 1 195 1 70 9 336 4 104 2 150 3 362 6 106 3 229 3 181 1 128 1 261 2 152 3 286 1 321 1 235 8 371 2 240 1 59 7 112 4 241 3 307 1 210 4 242 16 290 1 46 1 355 4 
302 2 70 3 371 1 59 4 241 3 257 3 242 7 150 3 362 6 327 3 106 1 119 1 55 1 
311 1 195 1 70 10 257 1 336 4 104 1 150 1 362 4 106 3 229 2 55 1 181 1 128 1 261 2 320 1 152 2 302 1 286 1 321 1 235 8 371 2 240 1 59 8 112 4 241 3 307 1 210 4 242 18 327 1 290 1 119 1 46 1 355 4 
133 1 375 1 1 1 315 1 377 1 272 1 225 1 
133 1 356 1 1 1 315 1 225 1 177 1 375 1 179 1 272 1 377 1 120 1 300 1 
308 1 289 1 363 1 365 1 248 1 160 1 149 1 50 1 267 1 380 1 139 1 
133 2 1 1 137 1 223 1 225 1 50 1 149 1 139 1 308 1 289 1 117 1 244 1 186 1 365 1 248 1 376 1 377 2 380 1 
1 1 254 1 149 1 50 1 225 2 223 2 125 1 365 1 207 1 133 2 137 2 372 1 308 3 289 1 117 1 186 1 244 1 21 1 376 1 248 1 377 2 192 1 380 2 
1 1 254 1 279 1 149 2 50 2 225 2 223 2 125 1 365 2 207 1 133 2 137 2 372 1 308 3 289 1 117 1 244 1 190 1 21 1 376 1 248 1 377 2 192 1 380 2 
132 1 276 1 136 2 239 1 279 1 350 1 223 1 50 3 149 3 139 1 317 1 308 4 185 1 289 1 125 1 41 2 188 1 365 3 248 1 207 1 47 1 192 1 380 1 
136 2 239 1 279 1 350 1 223 1 50 3 149 3 139 1 317 1 308 4 185 1 289 1 125 1 41 2 188 1 365 3 248 1 77 1 207 1 47 1 192 1 380 1 
289 1 365 1 248 1 149 1 50 1 332 1 
134 1 358 1 146 2 50 3 149 3 223 2 139 2 308 3 289 2 28 1 247 1 365 3 248 4 172 1 206 2 173 1 130 1 380 3 252 1 
1 2 70 3 296 1 223 1 225 1 50 1 149 1 257 1 336 2 362 2 106 1 55 1 365 1 299 1 30 1 130 1 320 1 133 2 302 1 34 1 235 4 209 1 137 1 371 1 59 3 241 2 112 2 184 1 210 2 242 6 308 1 289 1 140 2 117 1 327 1 244 1 186 1 19 2 64 1 187 1 119 1 44 1 248 1 376 1 377 2 355 2 380 1 
333 1 334 1 123 1 50 1 149 1 25 2 317 1 365 1 77 1 78 1 285 1 57 2 136 3 239 1 350 1 266 1 139 1 39 2 38 2 308 2 212 1 185 2 41 3 188 1 246 1 213 1 47 1 216 1 
134 1 50 2 149 2 223 1 308 2 289 1 188 1 43 1 365 2 248 2 130 1 380 1 332 1 
279 1 160 1 50 4 149 4 139 1 308 1 289 1 363 1 328 1 365 4 248 1 130 1 380 1 
146 1 50 2 149 2 223 1 308 1 289 1 365 2 248 2 206 1 172 1 250 1 192 1 380 1 252 1 
289 1 271 1 305 1 365 1 148 1 248 1 149 1 50 1 15 1 139 1 
348 1 146 1 50 2 149 2 223 1 308 2 289 1 365 2 248 2 206 1 172 1 130 1 379 1 173 1 380 2 252 1 
146 1 50 2 149 2 223 1 139 1 308 2 289 1 28 1 365 2 248 2 206 1 172 1 130 1 173 1 380 2 252 1 
154 1 146 1 50 2 149 2 223 1 139 1 308 2 289 1 365 2 248 2 206 1 172 1 130 1 173 1 380 2 252 1 
133 2 1 1 137 1 223 1 225 1 50 1 149 1 139 1 308 1 289 1 117 1 244 1 190 1 365 1 248 1 376 1 377 2 380 1 
134 1 358 1 146 1 50 1 149 1 223 1 308 1 289 1 365 1 248 2 206 1 192 1 380 1 
88 1 1 1 208 1 374 1 61 1 
333 1 0 1 1 1 254 1 208 2 136 2 372 1 350 1 374 1 61 2 317 1 297 1 88 2 40 1 41 2 21 1 203 1 171 1 47 1 
133 1 88 1 118 1 264 1 377 1 225 1 374 1 280 1 61 1 
297 1 203 1 374 1 
99 1 260 1 267 1 37 1 
268 1 99 1 260 1 86 1 381 1 37 1 114 1 
6 1 268 1 341 1 
156 1 99 1 161 1 86 1 114 1 37 1 268 3 126 1 260 1 202 1 8 2 381 3 
343 1 268 2 99 1 260 1 86 1 72 1 381 2 37 1 114 1 
268 1 271 1 54 1 99 1 148 1 45 1 176 1 86 1 161 1 381 1 114 1 
268 1 99 1 86 1 161 1 381 1 37 1 114 1 
268 1 260 1 86 1 161 1 381 1 37 2 114 1 
99 1 306 1 161 1 86 2 37 1 324 1 114 2 199 1 268 2 381 2 
343 2 81 1 99 2 176 1 161 1 86 1 37 1 114 1 268 3 20 1 260 1 29 1 381 3 
343 1 99 1 305 1 148 2 161 1 86 1 37 1 114 1 268 2 27 1 271 1 260 1 45 1 381 2 292 1 
343 2 81 1 99 2 176 1 161 1 86 2 72 1 37 1 114 2 268 4 260 1 56 1 381 4 
268 1 99 1 260 1 86 1 161 1 381 1 37 1 114 1 
343 2 81 1 99 3 176 1 86 1 37 2 114 1 268 4 364 1 126 1 260 2 8 1 202 1 381 4 
343 1 367 1 99 1 161 1 86 1 37 1 114 1 268 2 180 1 260 1 338 1 381 2 
268 3 99 1 126 1 260 1 8 2 202 2 378 1 86 1 161 1 381 3 37 1 114 1 
110 1 168 1 99 2 265 2 
268 1 214 1 86 1 161 1 381 1 114 1 
343 1 268 2 99 1 260 1 29 1 86 1 161 1 381 2 37 1 114 1 
144 1 
268 1 99 1 260 1 86 1 161 1 381 1 37 1 114 1 
343 1 268 3 99 1 29 1 260 1 8 1 86 1 161 1 381 3 37 1 114 1 
81 1 364 1 99 1 176 1 
99 1 37 1 

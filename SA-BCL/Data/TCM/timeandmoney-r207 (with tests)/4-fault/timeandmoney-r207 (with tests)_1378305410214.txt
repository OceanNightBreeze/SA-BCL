#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (57,89,157) 14 340 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (57,89,157) 14 340 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (57,89,157) 14 (210,266,323) 258 213 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (242,336) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (57,89,157) 14 340 131 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (57,89,157) 14 340 131 245 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
163 1 24 1 256 1 214 2 72 1 257 1 118 2 299 6 52 1 166 1 341 1 75 3 122 2 97 5 285 1 346 1 219 2 56 1 29 2 347 1 100 1 194 9 80 1 197 2 332 2 66 4 182 1 161 9 
163 1 24 1 256 1 214 2 72 1 257 1 299 6 118 2 52 1 166 1 341 1 75 3 122 2 97 5 285 1 346 1 219 2 56 1 29 2 347 1 100 1 194 9 80 1 197 2 332 2 66 4 182 1 161 9 
163 1 24 1 256 1 214 2 72 1 257 1 299 7 118 2 52 1 166 1 341 1 75 4 122 2 97 6 285 1 346 1 219 2 56 1 29 2 347 1 100 1 194 10 80 1 197 2 332 2 66 5 182 1 161 10 
163 1 24 1 214 2 72 1 257 1 299 4 118 1 52 1 166 1 341 1 75 2 122 2 97 4 285 1 346 1 219 2 56 1 29 2 347 1 100 1 194 7 80 1 197 2 332 2 66 3 182 1 161 7 
24 1 197 1 256 1 214 1 72 1 118 2 299 3 257 1 52 1 332 1 75 1 122 1 66 2 97 3 346 1 219 1 161 4 194 4 
138 1 24 1 263 1 197 1 214 1 72 1 52 1 332 1 122 1 97 1 285 1 161 2 347 1 29 1 18 1 194 2 
80 1 24 1 197 2 72 1 299 1 52 1 332 2 75 1 66 1 97 2 161 3 29 1 194 3 
163 1 24 1 256 1 214 1 72 1 299 7 118 2 257 1 52 1 166 1 75 3 122 1 97 5 346 1 219 1 29 1 194 9 80 1 197 2 332 2 334 1 66 4 161 9 272 1 
163 1 24 1 256 1 214 1 72 1 299 7 118 2 257 1 52 1 166 1 75 3 122 1 97 5 346 1 219 1 29 1 194 9 80 1 197 2 332 2 334 1 66 4 161 9 272 1 
262 1 61 1 333 1 
331 1 69 2 333 1 
89 2 350 2 290 1 199 1 279 2 57 2 171 2 157 2 
114 1 94 1 113 2 22 1 71 2 255 1 51 1 117 1 25 1 119 1 279 3 76 2 57 2 7 1 171 2 220 1 305 1 102 2 196 2 173 1 350 2 306 1 351 1 290 1 10 1 178 1 199 1 201 1 157 2 134 1 180 1 89 3 68 1 91 1 237 1 338 1 111 1 
304 1 89 1 350 1 186 1 244 1 199 1 279 1 57 1 171 1 157 1 
14 1 57 1 323 1 
304 1 350 1 210 2 262 1 129 1 279 1 266 1 333 1 157 1 89 1 158 1 125 1 57 1 162 2 171 1 
311 1 210 1 78 1 41 1 162 1 
223 1 210 2 262 1 78 1 41 1 162 2 121 1 333 1 
210 1 41 1 162 1 
304 1 210 1 350 1 186 1 144 1 199 1 279 1 157 1 89 1 78 1 244 1 57 1 162 1 171 1 
333 1 
210 2 262 1 78 1 41 1 162 2 121 1 208 1 333 1 
81 1 210 5 262 1 41 2 104 1 120 1 300 1 121 1 333 1 250 1 4 1 284 1 78 2 313 2 217 2 5 1 126 2 162 5 172 1 
61 1 290 1 
350 1 290 2 279 2 132 1 157 1 89 2 57 2 171 1 101 1 
354 1 179 1 242 1 
113 1 22 1 71 1 117 1 290 1 178 1 10 1 119 1 279 1 73 1 76 1 180 1 89 1 68 1 338 1 111 1 
89 3 350 3 290 1 360 1 279 3 57 3 171 1 157 3 
304 1 89 1 350 1 186 1 279 1 57 1 157 1 
304 1 89 1 350 1 279 1 57 1 132 1 171 1 157 1 101 1 
210 1 113 1 22 1 71 1 255 1 51 1 117 1 119 1 279 4 343 1 76 1 125 1 57 3 7 1 171 2 220 1 101 1 304 1 102 1 196 2 173 1 350 3 351 1 129 1 290 1 10 1 178 1 199 1 266 1 201 1 64 1 157 3 134 1 180 1 89 4 158 1 107 1 68 1 91 1 360 1 237 1 338 1 162 1 111 1 
89 1 350 1 14 1 360 1 340 1 279 1 57 2 157 1 
304 1 210 1 350 3 129 1 279 3 266 1 333 1 157 3 343 1 96 1 89 3 158 1 107 1 125 1 360 2 57 3 171 1 162 1 101 1 
350 2 279 2 179 1 242 1 157 2 89 2 360 1 57 2 171 1 101 1 
113 1 22 1 71 1 117 1 290 1 178 1 10 1 119 1 279 1 76 1 180 1 89 1 68 1 338 1 111 1 
349 1 113 1 71 1 103 1 117 1 290 1 10 1 119 1 279 1 76 1 180 1 89 1 68 1 338 1 111 1 
320 1 25 2 27 1 242 2 301 1 28 1 7 1 220 2 196 2 173 1 102 4 328 1 351 1 354 2 11 1 179 2 267 1 357 1 201 1 134 1 336 1 234 1 358 1 91 1 
304 1 89 1 350 1 158 1 279 1 57 1 157 1 280 1 
350 1 113 1 22 1 71 1 117 1 10 1 178 1 119 1 279 2 179 1 157 1 180 1 343 1 76 1 89 2 68 1 360 1 338 1 57 1 111 1 
350 4 290 1 340 1 279 4 157 4 343 1 89 4 123 1 106 1 14 1 360 2 57 5 171 1 101 1 
304 1 89 2 350 2 186 1 279 2 57 2 280 1 157 2 
221 1 268 1 
221 1 268 1 
326 1 230 1 
326 1 230 1 
326 1 230 1 
221 1 36 1 268 1 
221 1 36 1 268 1 
167 1 221 1 268 1 
221 2 259 1 268 2 198 1 326 1 230 1 
221 1 36 1 268 1 
221 1 268 1 270 1 
221 1 268 1 270 1 
221 1 268 1 270 1 
221 2 210 2 37 2 296 2 198 1 264 2 154 2 246 1 145 1 87 1 133 1 333 1 243 1 335 3 268 2 204 1 6 2 162 2 195 1 
210 1 141 1 279 2 74 1 167 1 6 1 57 2 8 1 221 1 350 2 222 1 37 1 153 1 290 1 264 1 154 1 246 1 156 1 157 2 231 1 335 1 89 2 268 1 162 1 
122 1 214 1 219 1 
122 1 214 1 18 1 
316 1 219 2 214 3 169 1 291 1 18 1 
316 1 39 1 219 1 214 2 169 1 18 1 
316 1 219 1 214 2 169 2 18 1 
50 1 93 1 210 5 141 1 300 1 27 1 121 1 191 1 28 1 217 1 78 4 4 3 126 1 79 1 288 2 262 1 38 1 329 1 41 1 42 1 331 1 11 1 104 2 356 2 156 1 357 1 333 2 231 1 313 1 69 3 162 5 112 2 
0 1 93 2 210 9 300 1 27 3 121 1 191 2 28 3 78 7 217 2 4 8 126 2 128 1 60 1 59 1 288 6 262 1 38 3 329 1 41 6 331 3 11 3 104 6 356 6 357 3 333 5 311 5 231 4 250 1 313 2 48 5 185 1 69 9 49 1 162 9 
93 1 210 3 27 1 191 1 28 1 78 2 217 1 4 3 126 1 79 1 288 2 262 1 38 1 42 1 331 2 11 1 104 2 356 2 357 1 333 3 231 1 250 1 313 1 69 4 162 3 112 1 
0 1 93 1 210 4 27 2 191 1 28 2 217 1 4 5 78 3 126 1 79 1 60 1 288 4 262 1 38 2 42 1 331 3 11 2 104 4 356 4 357 2 333 4 231 2 250 1 313 1 69 7 49 1 162 4 112 2 
61 1 68 1 159 1 
239 1 68 1 
310 1 
68 1 117 1 
95 1 211 1 159 2 68 3 117 1 10 1 
68 1 117 1 10 1 
68 1 294 1 
35 2 102 7 277 1 25 4 267 2 27 1 229 1 12 1 342 1 28 1 358 3 251 1 148 1 70 1 220 3 9 1 110 1 
35 2 102 7 277 1 25 4 267 2 27 1 229 1 12 1 342 1 28 1 358 3 251 1 148 1 70 1 220 3 9 1 110 1 
35 2 102 7 277 1 25 4 267 2 27 1 229 1 12 1 342 1 28 1 358 3 251 1 148 1 70 1 274 1 220 3 9 1 110 1 
277 1 25 16 215 3 53 1 27 4 342 1 77 1 283 1 28 4 216 1 148 2 7 1 9 2 220 15 99 1 196 2 102 31 35 3 82 1 351 1 38 3 11 3 43 1 267 5 229 1 357 3 201 1 12 5 358 10 251 2 91 1 70 1 110 2 253 4 
277 1 25 5 53 1 27 1 342 1 28 1 148 1 7 2 220 4 9 1 196 4 102 9 35 2 351 2 267 3 229 1 201 2 12 1 249 1 358 4 251 1 91 2 109 1 110 1 
113 1 24 1 71 1 214 2 72 1 299 1 119 1 52 1 122 1 76 1 97 1 147 1 219 1 29 1 194 2 31 1 34 1 83 1 175 1 197 1 227 1 332 1 291 1 233 1 180 1 47 1 136 1 161 2 18 1 19 1 
113 1 24 1 71 1 214 2 72 1 299 2 119 1 122 1 76 1 97 1 325 1 147 1 219 1 29 1 194 3 31 1 34 1 260 1 83 1 175 1 197 1 227 1 332 1 291 1 233 1 180 1 161 3 207 1 18 1 19 1 
113 1 24 1 71 1 214 2 72 1 299 2 119 1 76 1 122 1 97 1 325 1 147 1 219 1 29 1 194 2 34 1 175 1 227 1 291 1 233 1 180 1 161 2 207 1 18 1 19 1 
34 2 113 1 318 1 260 1 71 1 117 1 176 1 309 1 197 1 62 1 119 1 332 1 227 2 180 1 233 2 76 1 3 1 68 1 338 1 29 2 161 1 137 1 194 1 
113 1 71 1 214 2 119 1 52 1 122 1 76 1 147 1 219 1 29 1 194 1 31 1 34 1 83 1 175 1 197 1 227 1 332 1 291 1 233 1 180 1 47 1 161 1 207 1 18 1 19 1 
359 1 
275 1 113 2 210 2 71 2 213 1 117 1 119 1 323 1 300 1 121 1 258 1 76 2 191 1 146 1 217 1 4 1 126 1 57 1 352 1 353 1 41 2 62 1 63 1 104 1 180 1 14 1 313 1 68 1 338 2 162 2 137 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 2 352 1 353 1 14 1 213 1 41 1 57 1 323 1 162 2 121 1 208 1 
210 1 353 1 352 1 213 1 300 1 323 1 258 1 14 1 313 1 217 1 126 1 57 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
258 1 210 1 352 1 353 1 14 1 213 1 57 1 323 1 162 1 
210 1 353 1 352 1 213 1 300 1 323 1 258 1 14 1 313 1 217 1 126 1 57 1 162 1 
277 1 25 3 242 1 27 1 301 1 342 1 28 1 148 1 7 1 9 1 220 3 196 2 173 1 102 6 35 1 351 1 61 1 354 1 290 2 179 1 267 2 229 1 201 1 134 1 358 2 91 1 
209 1 115 1 51 1 25 8 215 3 242 4 27 1 28 2 7 2 99 1 220 6 196 4 173 1 102 14 306 1 82 1 351 2 38 2 354 11 40 1 290 1 177 1 11 2 267 1 179 11 357 1 201 2 12 1 134 2 358 2 15 1 91 2 253 3 
102 1 196 2 173 1 350 1 306 1 351 1 177 1 25 1 279 1 242 1 201 1 157 1 134 1 343 1 282 1 89 1 360 1 91 1 57 1 7 1 339 1 
277 1 51 1 279 3 242 7 148 1 57 1 7 3 9 1 196 6 102 20 151 1 290 2 10 2 11 2 201 3 157 1 12 4 68 2 338 1 207 1 111 2 113 3 22 2 71 3 164 2 255 2 117 2 25 10 119 2 27 3 342 1 76 3 343 1 28 3 220 10 35 1 173 3 350 1 306 1 351 3 84 2 38 2 354 7 177 1 130 2 178 2 267 4 179 7 229 1 357 2 45 1 134 3 180 2 89 3 358 8 271 1 360 1 91 3 273 2 
20 1 113 8 319 1 71 7 143 1 51 1 117 2 25 1 119 2 279 1 301 1 76 8 127 1 57 1 7 2 220 1 305 2 196 4 173 2 102 2 350 1 306 1 351 2 62 1 157 1 201 2 134 2 293 1 180 2 89 1 105 1 68 3 360 1 338 2 91 2 136 1 314 1 207 1 137 1 
25 1 279 1 242 1 27 1 28 1 57 1 171 1 7 1 220 2 101 1 196 2 173 1 102 3 350 1 351 1 38 1 354 1 177 1 11 1 267 1 179 1 357 1 201 1 157 1 134 1 89 1 358 1 91 1 295 1 
102 2 173 1 196 2 351 1 354 1 25 2 11 1 179 1 242 1 301 1 201 1 12 1 134 1 234 1 28 1 358 1 91 1 7 1 
102 2 173 1 196 2 328 1 351 1 354 1 267 1 179 1 242 1 357 1 27 1 301 1 201 1 134 1 358 1 91 1 7 1 220 2 
25 2 242 2 27 1 301 1 28 1 7 1 220 2 196 2 173 1 102 4 351 1 38 1 354 2 11 1 179 2 267 1 357 1 201 1 12 1 134 1 358 2 91 1 
102 2 173 1 196 2 351 1 354 1 25 2 11 1 179 1 242 1 201 1 12 1 134 1 105 1 234 1 28 1 358 1 91 1 7 1 
102 2 173 1 196 2 328 1 351 1 354 1 267 1 179 1 242 1 357 1 27 1 201 1 134 1 105 1 358 1 91 1 7 1 220 2 
25 2 242 2 27 1 28 1 7 1 220 2 196 2 173 1 102 4 351 1 38 1 354 2 11 1 179 2 267 1 357 1 201 1 12 1 134 1 105 1 358 2 91 1 
25 2 242 2 27 1 28 1 7 1 220 2 102 4 196 2 173 1 351 1 38 1 354 2 11 1 179 2 267 1 357 1 201 1 12 1 134 1 358 2 91 1 
113 1 22 1 71 1 255 1 117 1 51 1 25 1 119 1 279 1 76 1 7 1 220 1 102 2 173 1 196 2 306 1 351 1 290 1 10 1 178 1 201 1 134 1 180 1 89 1 68 1 338 1 91 1 111 1 
317 1 113 1 71 1 117 1 51 1 25 1 119 1 279 1 76 1 7 1 220 1 349 1 102 2 173 1 196 2 306 1 351 1 103 1 290 1 10 1 201 1 134 1 180 1 89 1 68 1 338 1 91 1 111 1 
25 2 242 2 27 1 28 1 7 1 220 2 196 2 173 1 102 4 351 1 38 1 354 2 177 1 11 1 179 2 267 1 357 1 201 1 12 1 134 1 358 2 91 1 
113 1 22 1 71 1 255 1 117 1 25 2 119 1 279 1 27 1 242 2 76 1 28 1 7 1 220 2 102 4 173 1 196 2 351 1 38 1 354 2 10 1 178 1 130 1 11 1 267 1 179 2 357 1 201 1 12 1 134 1 180 1 89 1 358 2 68 1 91 1 136 1 111 1 
25 2 279 1 27 1 242 1 28 1 57 1 171 1 7 1 220 1 101 1 348 1 196 2 173 1 102 3 350 1 351 1 38 1 354 1 177 1 11 1 179 1 357 1 201 1 157 1 12 1 134 1 89 1 358 1 91 1 
1 2 321 1 25 9 215 1 27 3 28 3 7 2 99 1 30 1 220 10 150 1 33 1 196 4 102 19 82 1 351 2 38 3 11 3 267 3 228 2 155 1 357 3 201 2 12 3 135 1 358 6 91 2 109 1 17 1 253 2 
1 1 254 1 321 2 25 14 298 1 215 2 53 2 2 1 27 2 28 3 98 1 7 3 220 12 30 1 99 2 33 2 196 6 102 26 351 3 38 3 11 3 86 1 267 2 228 4 155 1 357 2 201 3 12 2 135 1 183 1 358 4 91 3 109 1 253 2 
1 1 321 1 277 1 2 1 53 1 98 1 148 1 7 3 99 3 9 1 102 41 196 6 11 4 155 1 201 3 12 4 109 1 17 1 253 4 254 1 25 20 298 1 215 3 27 5 342 1 28 5 220 21 30 1 33 2 32 1 35 1 82 1 351 3 38 4 86 1 267 4 357 4 228 4 229 1 183 1 135 1 358 8 91 3 
1 1 254 1 277 1 321 1 298 1 25 20 215 3 53 2 2 1 27 4 342 1 28 5 148 1 98 1 7 4 9 1 99 3 30 1 220 18 32 1 33 2 35 1 196 8 102 38 82 1 351 4 38 4 11 4 86 1 267 4 229 1 228 4 155 1 357 3 201 4 12 3 135 1 183 1 358 7 91 4 109 1 17 1 253 4 
1 1 254 1 277 1 321 1 298 1 25 27 215 4 53 1 2 1 27 8 342 1 28 8 148 1 98 1 7 2 9 1 99 2 30 1 220 25 33 1 35 1 196 4 102 52 82 2 351 2 38 7 40 2 11 7 86 1 267 7 229 1 228 4 155 1 357 7 201 2 12 7 135 1 183 1 358 14 91 2 109 1 253 4 
243 1 189 1 221 1 37 1 268 1 198 1 204 1 264 1 6 1 154 1 
167 1 153 1 
221 1 37 1 268 1 55 1 90 1 264 1 6 1 154 1 327 1 
221 1 210 1 37 1 296 1 198 1 264 1 246 1 154 1 145 1 87 1 333 1 243 1 335 2 268 1 204 1 6 1 162 1 195 1 
221 1 210 1 37 1 296 1 198 1 264 1 246 1 154 1 145 1 87 1 333 1 243 1 335 2 268 1 204 1 6 1 162 1 195 1 
221 1 210 1 37 1 296 1 198 1 264 1 246 1 154 1 145 1 87 1 333 1 243 1 335 2 268 1 204 1 6 1 162 1 195 1 
259 1 36 1 193 1 
259 1 36 1 193 1 
270 1 286 1 
259 1 270 1 286 1 
74 1 8 1 
210 1 296 1 141 1 279 2 74 1 167 1 78 1 6 1 57 2 8 1 221 1 222 1 350 2 37 1 153 1 290 1 264 1 154 1 87 1 156 1 157 2 231 1 335 1 89 2 268 1 160 1 162 1 
36 1 193 1 
259 1 270 1 286 1 
113 2 71 2 143 1 117 1 116 1 51 1 25 1 119 1 26 1 279 2 76 2 127 1 57 2 7 1 220 1 305 2 173 1 196 2 102 2 306 1 351 1 307 1 177 1 292 1 201 1 134 1 180 1 89 2 67 1 68 1 91 1 
92 1 113 2 71 2 214 2 119 1 291 1 202 1 122 1 180 1 76 2 233 1 147 1 219 1 136 1 58 1 207 1 18 1 31 1 19 1 
92 1 113 1 71 1 214 2 119 1 291 1 122 1 76 1 233 1 180 1 124 1 147 1 219 1 207 1 18 1 31 1 19 1 
315 1 113 1 318 1 71 1 117 1 62 1 119 1 202 1 180 1 76 1 233 1 68 1 338 1 137 1 
92 1 113 1 71 1 214 2 119 1 291 1 202 1 122 1 76 1 233 1 180 1 147 1 219 1 58 1 207 1 18 1 31 1 19 1 
261 1 
81 1 262 1 61 1 4 1 284 1 104 1 333 1 
210 1 297 1 300 1 121 1 4 1 217 1 126 1 170 1 262 1 41 1 331 1 104 1 333 2 88 1 313 1 69 1 162 1 
239 3 139 2 140 2 187 2 241 1 54 2 95 1 324 2 146 1 191 2 284 1 4 9 149 1 288 6 10 3 331 6 11 2 104 8 333 8 108 1 68 10 159 2 294 2 338 1 69 12 206 2 162 5 113 3 210 5 71 3 117 3 119 4 300 4 121 3 27 2 76 3 28 2 217 4 345 1 126 4 218 2 81 1 262 2 38 2 129 2 41 5 356 6 357 2 180 3 235 1 313 4 136 1 238 2 273 2 
210 1 254 1 298 1 215 1 2 1 300 2 121 1 54 2 27 2 281 1 324 1 146 1 191 1 28 2 4 8 217 2 126 2 99 1 288 5 262 2 38 2 225 1 41 1 331 3 11 2 86 1 104 5 356 5 357 2 333 5 183 1 313 2 69 6 162 1 253 1 
210 1 186 1 277 1 278 1 144 1 279 1 300 1 54 2 27 1 324 1 28 2 217 1 4 2 126 1 244 1 148 1 57 1 171 1 9 1 304 1 350 1 85 1 199 1 104 2 157 1 89 1 313 1 162 1 
81 1 262 1 104 1 300 1 333 1 284 1 313 1 217 1 4 1 126 1 
288 5 38 2 11 2 331 5 104 5 356 5 54 2 357 2 27 2 333 5 324 1 28 2 4 5 69 10 273 1 
210 1 262 1 41 1 162 1 121 1 333 1 
275 1 113 4 210 3 71 4 117 1 119 1 241 2 300 1 121 2 76 4 191 2 146 2 217 2 4 2 126 2 149 1 41 4 62 1 200 1 63 1 104 2 180 1 337 1 250 1 313 2 68 1 338 2 162 3 137 1 
113 1 22 1 71 1 255 1 51 1 117 1 119 1 279 3 76 1 57 2 7 1 171 2 220 1 102 1 196 2 173 1 350 2 351 1 290 1 178 1 10 1 199 1 201 1 157 2 134 1 180 1 89 3 68 1 338 1 237 1 91 1 111 1 
35 1 288 2 262 2 331 2 104 2 356 2 300 1 333 4 191 1 146 1 313 1 217 1 4 1 126 1 69 4 
302 1 37 1 154 1 
302 1 37 1 154 1 
243 1 37 1 154 1 16 1 74 1 
302 1 37 1 154 1 
37 1 154 1 205 1 
37 1 154 1 205 1 
37 1 154 1 205 1 
37 1 154 1 
221 1 268 1 
35 1 102 8 196 4 351 2 277 1 25 4 53 1 267 2 27 1 229 1 201 2 12 1 342 1 28 1 358 3 91 2 148 1 7 2 220 4 9 1 
35 1 102 6 61 1 277 1 25 3 267 2 229 1 27 1 342 1 28 1 358 2 148 1 220 3 9 1 
196 2 102 4 351 1 38 1 25 2 11 1 267 1 27 1 357 1 201 1 12 1 28 1 358 2 91 1 361 1 7 1 220 2 
102 7 82 1 38 1 25 3 215 1 11 1 267 1 27 1 357 1 12 1 28 1 358 2 99 1 220 4 253 2 
21 1 115 1 277 1 25 11 215 2 53 2 27 3 342 1 28 3 148 2 7 2 9 2 220 12 35 1 102 23 196 4 82 1 351 2 38 2 40 1 11 2 267 5 229 1 357 2 201 2 12 4 358 9 91 2 253 2 
102 1 220 1 253 1 
102 1 25 1 215 1 
196 2 102 6 351 1 38 1 25 3 11 1 267 2 357 1 27 1 201 1 12 1 28 1 358 3 91 1 361 1 7 1 273 1 220 3 
254 1 25 6 298 1 215 1 2 1 27 2 28 2 7 1 220 6 99 1 102 12 196 2 351 1 38 2 11 2 86 1 267 1 357 2 201 1 12 1 183 1 358 2 91 1 109 1 253 1 
102 6 277 1 25 3 267 1 27 1 12 1 28 1 358 2 148 1 220 3 9 1 
102 3 196 2 21 1 351 1 25 1 53 1 267 1 229 1 201 1 12 1 342 1 358 2 148 1 91 1 7 1 9 1 220 2 
196 2 102 10 351 1 277 1 278 1 25 5 267 3 27 2 201 1 12 2 28 2 358 5 91 1 109 1 148 2 7 1 9 2 220 5 
196 2 102 2 351 1 25 2 11 1 201 1 12 1 28 1 358 1 109 1 91 1 7 1 
196 2 102 4 351 1 38 1 25 2 11 1 267 1 27 1 357 1 201 1 12 1 28 1 358 2 109 1 91 1 7 1 220 2 
102 3 196 6 21 1 351 3 25 1 53 1 267 1 201 3 12 1 358 2 109 1 91 3 148 1 17 1 7 3 220 2 9 1 
21 1 277 2 25 16 215 3 53 2 27 5 342 1 77 1 28 5 216 1 148 3 7 5 9 3 220 18 99 1 35 1 196 10 102 34 82 1 351 5 38 3 43 1 11 3 267 7 229 1 357 3 201 5 12 5 358 12 91 5 109 1 361 1 17 1 253 4 
277 1 25 4 215 1 27 1 342 1 28 1 148 1 7 1 220 4 99 1 9 1 35 1 102 8 196 2 351 1 86 1 267 2 229 1 201 1 358 2 91 1 109 1 253 1 
277 1 25 6 215 1 27 1 342 1 28 2 148 1 7 2 9 1 220 5 99 1 35 1 102 11 196 4 82 1 351 2 38 1 11 1 86 1 267 2 229 1 201 2 12 1 358 3 109 1 91 2 361 1 253 2 
254 1 277 1 25 9 298 1 215 1 2 1 53 1 27 3 342 1 28 3 148 1 7 3 9 1 220 10 99 1 35 1 102 19 196 6 351 3 38 2 11 2 86 1 267 3 229 1 357 2 201 3 12 1 183 1 358 4 91 3 109 1 361 1 253 1 
254 1 277 1 25 10 298 1 215 1 53 1 2 1 27 2 342 1 28 3 148 1 7 3 9 1 220 7 99 1 35 1 102 17 196 6 351 3 38 2 11 2 86 1 267 3 229 1 357 1 201 3 12 2 183 1 358 5 91 3 109 1 361 1 253 1 
277 1 25 4 215 1 27 1 342 1 28 1 148 1 7 1 220 4 99 1 9 1 35 1 102 8 196 2 351 1 86 1 267 2 229 1 201 1 358 2 91 1 109 1 253 1 
254 1 25 6 298 1 215 1 2 1 27 2 28 2 7 1 220 6 99 1 102 12 196 2 351 1 38 2 11 2 86 1 267 1 357 2 201 1 12 1 183 1 358 2 91 1 109 1 253 1 
254 1 277 1 25 10 298 1 215 1 2 1 53 2 27 2 342 1 28 3 148 1 7 4 9 1 220 8 99 1 35 1 102 18 196 8 351 4 38 2 11 2 86 1 267 3 229 1 357 1 201 4 12 2 183 1 358 5 91 4 109 1 361 1 253 1 
254 1 25 9 298 1 215 1 2 1 53 2 27 2 28 3 7 4 220 7 99 1 102 16 196 8 351 4 38 3 11 3 86 1 267 3 357 2 201 4 12 3 183 1 358 6 109 1 91 4 17 1 253 1 
102 7 277 1 25 3 267 3 27 1 229 2 12 3 342 1 28 1 358 6 148 3 220 4 9 3 
254 1 277 1 25 10 298 1 215 1 2 1 53 2 27 2 342 1 28 3 148 1 7 4 9 1 220 8 99 1 35 1 102 18 196 8 351 4 38 2 11 2 86 1 267 3 229 1 357 1 201 4 12 1 183 1 358 4 109 1 91 4 17 1 253 1 
14 1 57 1 340 1 131 1 
232 1 174 1 14 1 289 1 245 1 44 1 57 1 340 1 131 1 
180 1 76 1 113 1 61 1 71 1 68 1 117 1 62 1 119 1 338 1 137 1 
350 1 113 1 71 1 117 1 290 1 10 1 178 1 119 1 279 2 157 1 76 1 180 1 89 2 68 1 360 1 338 1 57 1 111 1 
304 1 350 1 113 1 71 1 117 2 290 1 10 2 178 1 119 1 279 2 241 1 157 2 76 1 180 1 89 2 158 1 68 3 125 1 294 1 360 1 57 2 238 1 111 1 
304 1 350 1 113 2 71 2 103 1 117 2 290 1 10 2 119 1 279 2 241 1 157 2 65 1 76 2 180 1 89 2 158 1 68 3 125 1 294 1 360 1 57 2 238 1 111 1 
239 1 210 2 113 3 262 1 71 3 129 1 117 1 41 1 10 1 119 1 165 1 241 1 333 1 65 1 76 3 180 1 168 1 68 4 159 1 294 1 338 1 238 1 162 2 
239 1 210 2 113 3 262 1 71 3 129 1 117 1 41 1 10 1 119 1 241 1 333 1 65 1 76 3 180 1 68 4 159 1 294 1 338 1 238 1 162 2 206 1 
180 1 76 1 293 1 113 1 71 1 119 1 
305 1 20 1 113 7 319 1 71 6 143 1 240 1 117 2 10 1 322 1 119 3 95 1 293 1 76 7 190 1 180 2 68 3 338 2 136 1 314 1 207 1 
277 1 279 2 242 1 148 1 57 1 7 2 9 1 196 4 102 6 290 2 10 1 201 2 157 1 67 1 68 1 111 1 113 1 22 1 164 1 71 1 255 1 117 1 25 3 119 1 27 1 76 1 342 1 28 1 220 3 173 2 35 1 350 1 351 2 354 1 177 1 178 1 130 1 267 2 179 1 229 1 134 2 180 1 89 2 358 2 360 1 91 2 136 1 
239 1 210 3 113 1 140 1 139 1 71 1 300 2 121 1 76 1 4 1 284 1 217 2 78 1 126 2 218 1 149 1 81 1 262 1 129 1 41 2 104 1 333 1 313 2 68 2 159 1 338 1 162 3 206 1 
113 2 71 2 117 1 10 1 119 2 95 1 293 1 76 2 180 1 108 1 159 1 68 2 136 1 
113 4 71 4 117 1 62 1 119 1 65 1 76 4 180 1 312 1 68 1 338 1 136 1 137 1 
113 2 287 1 71 2 240 1 117 1 10 1 322 1 119 2 241 1 76 2 180 1 68 1 236 1 271 1 
122 1 180 1 76 1 113 1 71 1 214 1 119 1 338 1 18 1 19 1 
180 1 76 2 113 2 71 2 143 1 68 1 117 1 119 1 26 1 136 1 207 1 
20 1 113 5 319 1 71 4 143 1 117 2 62 1 119 2 241 1 76 5 180 2 312 1 68 3 338 1 136 1 137 1 
113 5 319 1 142 1 71 4 143 1 117 2 62 1 119 2 241 1 76 5 180 2 312 1 68 3 338 1 136 1 137 1 
350 1 113 1 71 1 103 1 117 1 290 1 10 1 119 1 279 2 157 1 76 1 180 1 89 2 68 1 360 1 338 1 57 1 111 1 
113 1 71 1 240 1 117 1 10 1 322 1 119 2 241 1 95 1 76 1 190 1 180 1 68 1 
248 1 344 1 152 1 308 1 290 1 
304 1 276 1 210 2 262 1 152 2 308 2 129 1 290 1 266 1 333 1 248 1 247 1 158 1 344 2 269 1 107 1 78 1 125 1 162 2 
152 1 307 1 116 1 279 1 292 1 248 1 89 1 344 1 57 1 
276 1 248 1 269 1 
97 1 24 1 61 1 72 1 
97 1 24 1 197 1 72 1 161 1 332 1 194 1 
29 1 227 1 161 1 
97 1 24 1 212 1 285 2 226 1 197 1 72 1 265 1 161 3 332 1 52 1 194 3 
97 1 24 1 197 1 72 1 299 1 118 1 161 2 332 1 194 2 
197 1 214 1 257 1 52 1 332 1 66 1 122 1 97 1 219 1 161 1 194 1 
97 1 197 1 72 1 161 1 332 1 52 1 194 1 
24 1 197 1 72 2 161 1 332 1 52 1 194 1 
97 1 197 2 330 1 355 1 72 1 161 2 332 2 52 1 303 1 194 2 
163 1 24 1 197 1 72 1 299 2 52 1 332 1 166 1 75 1 66 1 97 2 161 3 194 3 
24 1 197 1 214 2 72 1 299 1 52 1 332 1 291 1 122 1 97 1 184 1 219 1 161 2 18 1 194 2 
24 1 197 2 256 1 72 1 118 1 299 2 52 1 332 2 75 1 66 1 97 2 161 4 194 4 
97 1 24 1 197 1 72 1 161 1 332 1 52 1 194 1 
24 2 226 1 197 1 265 1 72 2 299 2 332 1 75 1 66 1 181 1 97 3 285 1 161 4 194 4 
23 1 24 1 197 1 72 1 299 1 52 1 332 1 334 1 46 1 97 1 161 2 194 2 
24 1 226 1 224 1 197 1 265 2 72 1 52 1 332 1 97 1 285 2 161 3 194 3 
97 2 13 1 252 1 188 2 
192 1 197 1 161 1 332 1 52 1 194 1 
97 1 163 1 24 1 197 1 72 1 299 1 161 2 332 1 52 1 194 2 
203 1 
97 1 24 1 197 1 72 1 161 1 332 1 52 1 194 1 
163 1 24 1 197 1 299 1 72 1 52 1 332 1 97 1 285 1 161 3 194 3 
75 1 66 1 181 1 97 1 
97 1 72 1 

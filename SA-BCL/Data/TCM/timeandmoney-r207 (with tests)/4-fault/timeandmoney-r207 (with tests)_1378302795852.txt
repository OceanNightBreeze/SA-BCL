#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 356 129 323 246 226 60 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (86,155) 291 356 129 323 138 183 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 356 129 323 246 366 336 190 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 356 129 323 246 366 336 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 356 129 323 246 366 336 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 356 129 323 246 366 336 190 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 356 129 323 246 226 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 356 129 323 246 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 356 129 323 246 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 356 129 323 138 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
369 1 119 1 74 1 3 2 87 1 20 1 147 1 30 2 241 1 173 2 175 3 200 1 32 3 
98 2 262 1 119 4 74 3 3 5 48 1 144 1 267 2 30 2 147 1 241 6 173 2 243 1 198 2 175 9 200 1 32 9 345 1 319 1 320 2 369 2 15 1 179 1 87 1 20 1 258 1 358 1 260 1 
98 2 262 1 119 4 74 3 3 5 48 1 144 1 267 2 30 2 147 1 241 6 173 2 243 1 198 2 175 9 200 1 32 9 345 1 319 1 320 2 369 2 15 1 179 1 87 1 20 1 258 1 358 1 260 1 
98 2 262 1 119 5 74 4 3 6 48 1 144 1 267 2 30 2 147 1 241 7 173 2 243 1 198 2 175 10 200 1 32 10 345 1 319 1 320 2 369 2 15 1 179 1 87 1 20 1 258 1 358 1 260 1 
98 2 262 1 119 3 74 2 3 4 48 1 144 1 267 2 30 2 147 1 241 4 173 2 243 1 198 1 175 7 200 1 32 7 345 1 319 1 320 2 369 2 179 1 87 1 20 1 258 1 358 1 260 1 
320 1 98 1 15 1 119 2 74 1 3 3 48 1 267 1 20 1 147 1 30 1 241 3 173 1 198 2 175 4 200 1 32 4 345 1 
320 1 369 1 71 1 3 1 221 1 179 1 267 1 20 1 147 1 30 1 173 1 22 1 175 2 200 1 32 2 319 1 
98 1 262 1 119 4 74 3 166 1 3 5 48 1 267 1 241 7 30 2 147 1 173 2 198 2 175 9 200 1 32 9 345 1 320 1 369 1 15 1 87 1 40 1 20 1 258 1 
98 1 262 1 119 4 74 3 166 1 3 5 48 1 267 1 241 7 30 2 147 1 173 2 198 2 175 9 200 1 32 9 345 1 320 1 369 1 15 1 87 1 40 1 20 1 258 1 
140 1 334 1 164 1 14 1 191 1 57 1 201 1 203 1 133 1 169 1 149 1 271 1 284 1 219 1 
130 1 
334 2 13 1 191 1 274 1 130 1 149 2 265 1 100 1 
334 5 322 1 191 2 55 2 274 2 130 1 311 1 265 1 28 2 100 1 157 1 208 1 134 1 305 1 359 2 149 5 70 1 343 1 296 1 
130 1 100 1 295 1 
130 1 75 2 37 1 
140 2 164 2 252 1 201 2 271 1 284 2 219 2 169 2 
140 2 164 2 77 1 339 1 194 1 169 3 239 1 81 2 341 2 271 1 127 1 298 1 219 3 321 1 252 1 84 1 372 1 202 1 201 2 131 1 353 1 108 1 18 1 204 1 65 1 160 1 89 2 41 1 21 1 114 1 332 1 93 1 284 2 163 2 211 1 212 2 285 1 
140 1 164 1 14 1 201 1 203 1 271 1 284 1 133 1 219 1 169 1 
140 1 334 1 164 1 312 1 100 1 169 2 365 1 149 1 269 1 271 1 219 2 14 2 350 1 130 1 57 1 201 1 203 1 253 1 133 1 302 1 284 2 
140 2 334 2 164 2 14 2 130 1 57 1 201 2 312 1 203 1 100 1 133 1 302 1 169 2 365 1 269 1 149 2 271 1 284 2 219 2 
334 1 26 1 191 1 274 1 149 1 
334 2 191 1 274 1 130 1 149 2 265 1 283 1 100 1 
334 1 274 1 149 1 
140 1 164 1 252 2 201 1 85 1 169 2 284 2 115 1 219 2 
25 1 86 1 291 1 
321 1 252 1 372 1 289 1 204 1 339 1 169 1 160 1 81 1 114 1 93 1 211 1 163 1 127 1 212 1 219 1 
321 1 164 1 372 1 201 1 86 1 288 1 204 1 339 1 169 2 160 1 171 1 81 1 114 1 93 1 284 1 211 1 163 1 127 1 212 1 219 2 
252 1 295 1 
140 1 164 3 252 1 201 3 288 1 284 3 219 3 169 3 
164 1 14 1 201 1 284 1 133 1 219 1 169 1 
140 1 164 1 14 1 201 1 85 1 284 1 115 1 219 1 169 1 
140 2 334 1 288 1 339 1 194 1 239 1 149 1 341 2 298 1 14 2 252 1 201 3 202 1 353 1 18 1 302 1 204 1 65 1 160 1 114 1 163 1 211 1 115 1 212 1 164 3 361 1 312 1 169 4 365 1 171 1 125 1 81 1 269 1 271 1 127 1 219 4 321 1 84 1 372 1 35 1 89 1 332 1 284 3 93 1 285 1 
164 1 252 1 201 1 288 1 253 1 245 1 284 2 219 2 169 2 
140 1 334 1 164 3 14 1 349 1 130 1 201 3 312 1 35 1 288 2 302 1 169 3 365 1 171 1 149 1 269 1 115 1 284 3 219 3 
140 1 164 2 25 1 201 2 86 1 288 1 284 2 115 1 219 2 169 2 
321 1 252 1 372 1 204 1 339 1 169 1 160 1 81 1 114 1 211 1 163 1 127 1 93 1 212 1 219 1 
321 1 252 1 204 1 339 1 169 1 8 1 160 1 81 1 104 1 114 1 211 1 163 1 93 1 212 1 219 1 
25 2 2 1 314 1 77 2 291 2 216 1 194 1 239 1 80 1 341 2 128 1 298 1 370 1 155 1 202 2 86 2 353 1 62 1 356 1 65 1 89 4 112 1 332 1 187 1 
273 1 164 1 14 1 312 1 201 1 284 1 219 1 169 1 
140 1 164 4 252 1 266 1 201 4 288 2 253 1 363 1 169 5 171 1 245 1 284 5 115 1 219 5 
273 1 164 2 14 1 201 2 284 2 133 1 219 2 169 2 
374 1 90 1 330 1 
374 2 250 1 90 2 69 1 338 1 347 1 
374 1 90 1 
374 1 90 1 
69 1 338 1 
69 1 338 1 
69 1 338 1 
374 1 220 1 90 1 
374 1 220 1 90 1 
374 1 220 1 90 1 
374 1 90 1 286 1 
374 1 90 1 286 1 
374 1 90 1 286 1 
334 2 248 1 16 1 130 1 34 1 76 2 59 2 168 1 326 2 374 2 170 2 240 1 90 2 149 2 282 1 368 2 11 3 139 1 347 1 
96 1 164 2 334 1 76 1 99 1 169 2 170 1 149 1 153 1 11 1 219 2 252 1 16 1 201 2 59 1 132 1 61 1 326 1 374 1 159 1 182 1 90 1 330 1 284 2 
39 1 66 2 98 1 71 1 267 2 
320 1 98 1 267 1 
320 1 71 1 267 1 
66 1 39 1 98 2 71 1 10 1 267 3 
66 1 39 1 98 1 257 1 71 1 267 2 
213 1 334 5 191 4 75 3 265 1 28 1 49 2 100 1 122 1 316 1 80 1 126 1 149 5 343 3 128 1 129 1 55 1 274 1 130 2 132 1 61 1 37 1 356 1 208 2 159 1 305 1 227 2 359 1 186 1 137 1 187 1 259 2 
334 1 191 1 149 1 351 1 
213 1 334 3 191 2 75 4 28 1 49 2 100 1 122 1 316 1 80 1 126 1 149 3 343 3 128 1 322 1 129 1 55 1 130 3 61 1 37 2 356 1 208 2 359 1 227 2 187 1 259 1 
334 4 213 1 191 3 75 7 28 1 49 4 100 1 122 1 316 1 80 2 126 1 149 4 244 1 343 5 128 2 322 1 129 2 55 1 130 4 61 2 37 3 224 1 356 2 255 1 208 4 227 4 359 1 187 2 259 2 
79 1 
9 1 93 1 295 1 
29 1 93 1 
321 1 93 1 
195 1 321 1 160 1 9 2 17 1 93 3 
321 1 160 1 93 1 
93 1 180 1 
232 1 202 3 314 3 362 1 167 1 62 2 145 2 77 4 233 1 205 1 7 1 256 1 89 7 318 1 42 1 187 1 128 1 117 1 
129 1 323 1 202 1 58 1 47 1 60 1 145 1 77 4 356 1 205 2 256 1 226 1 89 5 128 1 246 1 
232 1 314 4 362 1 77 5 145 2 167 1 292 1 194 2 239 2 7 1 341 4 318 1 128 1 324 1 202 4 62 3 158 1 205 1 65 2 256 1 89 9 332 2 187 1 117 1 
232 1 202 3 314 3 362 1 167 1 62 2 145 2 77 4 233 1 205 1 7 1 256 1 89 7 318 1 187 1 128 1 117 1 
232 1 202 3 314 3 362 1 167 1 62 2 145 2 77 4 233 1 205 1 7 1 256 1 89 7 318 1 187 1 128 1 117 1 
0 1 146 1 339 1 30 1 81 1 173 1 218 1 175 1 32 1 369 2 321 1 54 2 64 2 38 1 161 1 92 1 360 2 114 1 185 1 163 1 211 1 93 1 212 1 
98 1 71 1 165 1 192 1 339 1 267 2 30 1 147 1 81 1 173 1 151 1 10 1 175 1 32 1 320 1 369 1 54 1 249 1 325 1 222 1 64 1 304 1 360 1 114 1 163 1 212 1 
98 1 71 1 192 1 3 1 339 1 267 2 241 1 30 1 147 1 81 1 173 1 367 1 151 1 10 1 175 2 200 1 32 2 320 1 369 1 54 1 249 1 325 1 222 1 64 1 304 1 20 1 360 1 114 1 163 1 212 1 
98 1 71 1 165 1 192 1 3 1 235 1 146 1 339 1 267 2 30 1 241 2 81 1 173 1 151 1 10 1 175 3 200 1 32 3 320 1 369 1 54 1 249 1 222 1 64 1 304 1 20 1 360 1 114 1 163 1 212 1 
71 1 98 1 165 1 3 1 235 1 339 1 267 2 241 2 81 1 151 1 10 1 175 2 200 1 32 2 320 1 369 1 54 1 249 1 222 1 64 1 20 1 360 1 114 1 163 1 212 1 
181 1 
229 2 0 1 334 5 100 2 236 1 50 2 339 1 238 1 149 5 343 2 152 1 247 1 301 2 55 1 56 1 14 1 156 1 350 1 253 1 302 1 208 2 305 1 111 1 210 1 359 1 114 1 211 2 163 2 212 2 310 1 118 4 75 2 265 3 312 1 28 1 315 1 122 1 78 1 217 2 169 1 365 1 123 2 124 1 81 2 269 1 219 1 321 1 178 2 274 6 130 3 373 2 37 2 92 1 93 1 284 1 
334 3 118 2 265 1 312 1 100 2 78 1 236 1 169 1 365 1 238 1 149 3 269 1 219 1 13 1 56 1 14 1 156 1 274 2 350 1 130 2 373 1 253 1 302 1 284 1 
229 1 334 2 156 1 118 3 14 1 56 1 130 2 350 1 312 1 100 2 253 1 302 1 236 1 78 1 169 1 238 1 365 1 269 1 149 2 284 1 219 1 
229 1 334 3 118 3 265 1 312 1 100 2 78 1 236 1 169 1 365 1 238 1 149 3 269 1 219 1 13 1 56 1 14 1 156 1 178 1 274 2 350 1 130 2 373 1 253 1 302 1 284 1 
229 3 140 1 334 5 100 4 236 1 50 2 238 1 149 5 343 1 247 1 301 2 156 1 14 2 13 1 56 1 55 1 350 1 201 1 57 1 203 1 354 1 253 1 355 1 302 1 254 1 208 1 305 1 359 1 113 1 164 1 118 5 312 1 265 3 28 1 78 1 169 2 217 2 365 1 123 2 124 1 31 1 269 1 271 1 219 2 274 7 178 4 130 4 373 4 133 1 37 2 284 2 
229 2 334 4 100 3 236 1 50 2 238 1 149 4 343 1 247 1 301 2 14 1 55 1 56 1 156 1 350 1 253 1 302 1 208 1 305 1 111 1 359 1 118 4 312 1 75 2 265 2 28 1 78 1 169 1 217 2 365 1 123 2 124 1 269 1 219 1 274 4 178 2 130 4 373 2 37 2 284 1 
229 2 334 4 118 4 265 2 312 1 28 1 100 3 78 1 236 1 50 2 217 2 169 1 365 1 238 1 123 2 124 1 31 1 149 4 269 1 343 1 219 1 247 1 301 2 56 1 14 1 156 1 55 1 178 2 274 4 350 1 130 3 373 2 354 1 253 1 302 1 37 2 208 1 305 1 359 1 113 1 284 1 
229 2 334 4 118 4 265 2 312 1 28 1 100 3 78 1 236 1 50 2 217 2 169 1 365 1 238 1 123 2 124 1 31 1 149 4 269 1 343 1 219 1 247 1 301 2 56 1 14 1 156 1 55 1 178 2 274 4 350 1 130 3 373 2 354 1 253 1 302 1 37 2 208 1 305 1 359 1 113 1 284 1 
229 2 44 1 334 4 118 4 265 2 75 2 312 1 28 1 121 1 100 3 78 1 236 1 237 1 169 1 365 1 238 1 123 2 149 4 269 1 343 1 219 1 105 2 247 1 301 2 56 1 14 1 156 1 55 1 178 2 274 4 350 1 130 3 373 2 354 1 253 1 302 1 208 1 305 1 359 1 284 1 94 2 
229 3 334 4 118 5 265 2 312 1 28 1 100 3 78 1 236 1 50 2 217 2 169 1 365 1 238 1 123 2 124 1 31 1 149 4 269 1 343 1 219 1 247 1 301 2 55 1 56 1 14 1 156 1 178 3 274 5 350 1 130 3 373 3 354 1 253 1 302 1 37 2 254 1 208 1 305 1 359 1 113 1 284 1 
229 3 334 4 118 5 265 2 312 1 28 1 100 3 78 1 236 1 50 2 217 2 169 1 365 1 238 1 123 2 124 1 31 1 149 4 269 1 343 1 219 1 247 1 301 2 55 1 56 1 14 1 156 1 178 3 274 5 350 1 130 3 373 3 354 1 253 1 302 1 37 2 254 1 208 1 305 1 359 1 113 1 284 1 
229 2 44 1 334 4 100 3 236 1 238 1 149 4 343 1 247 1 105 2 301 2 14 1 55 1 56 1 156 1 350 1 253 1 302 1 208 1 305 1 111 1 359 1 118 4 312 1 75 2 265 2 28 1 78 1 169 1 365 1 123 2 269 1 219 1 274 4 178 2 130 3 373 2 284 1 94 2 
164 1 0 1 165 1 46 1 288 1 77 1 339 2 169 1 194 2 239 2 81 7 341 4 367 1 270 1 219 1 298 2 176 1 370 1 321 2 84 1 201 1 202 1 353 2 108 2 65 2 357 1 89 2 41 1 327 1 92 1 135 1 114 2 332 2 284 1 93 3 163 8 211 2 212 8 189 1 
140 1 164 1 25 1 314 1 77 1 291 1 194 1 169 1 239 1 101 1 80 1 341 2 128 1 298 1 219 1 129 1 371 1 201 1 202 2 86 1 353 1 62 1 356 1 65 1 89 3 332 1 115 1 284 1 187 1 
232 1 25 1 314 2 362 1 77 3 145 1 291 1 194 1 239 1 7 1 318 1 341 2 295 1 128 1 298 1 370 1 252 2 202 3 86 1 353 1 62 2 65 1 89 6 332 1 187 1 117 1 
129 1 323 1 371 1 58 1 202 1 86 4 47 1 353 1 77 3 291 4 356 1 194 1 65 1 239 1 89 4 183 1 341 2 332 1 138 1 128 1 298 1 
164 1 25 1 288 1 289 1 77 1 339 1 169 2 194 1 239 1 102 1 171 1 81 1 341 2 127 1 298 1 219 2 321 1 252 1 371 1 84 1 372 1 201 1 202 1 353 1 204 1 65 1 277 1 306 1 160 1 89 2 41 1 114 1 332 1 93 1 163 1 211 1 284 1 212 1 
232 1 142 1 288 1 193 2 145 1 291 7 339 2 194 3 239 3 7 1 341 6 344 2 298 3 252 2 202 10 201 1 353 3 62 4 18 2 204 2 207 2 356 2 65 3 160 2 114 2 163 3 211 1 309 1 212 3 117 1 164 1 25 7 72 2 165 1 314 8 362 1 77 10 167 4 169 3 171 1 81 3 80 2 318 1 127 2 128 3 219 3 33 1 321 2 129 2 84 1 371 1 372 2 86 7 89 20 41 1 332 3 284 1 93 2 187 3 
370 1 25 1 314 1 86 1 353 1 167 1 77 2 291 1 216 1 194 1 356 1 65 1 239 1 89 2 341 2 332 1 128 1 298 1 
370 1 25 1 202 2 314 1 86 1 353 1 62 1 291 1 194 1 65 1 239 1 89 2 112 1 80 1 341 2 332 1 187 1 298 1 
25 2 314 2 77 2 167 1 291 2 194 1 239 1 80 1 341 2 128 1 298 1 370 1 129 1 202 2 86 2 353 1 62 1 356 1 65 1 89 4 332 1 187 1 
25 1 314 1 86 1 353 1 167 1 77 2 291 1 216 1 194 1 356 1 65 1 239 1 357 1 89 2 341 2 332 1 128 1 298 1 
25 1 202 2 314 1 86 1 353 1 62 1 291 1 194 1 65 1 239 1 357 1 89 2 112 1 80 1 341 2 332 1 187 1 298 1 
25 2 314 2 77 2 167 1 291 2 194 1 239 1 80 1 341 2 128 1 298 1 129 1 202 2 86 2 353 1 62 1 356 1 65 1 357 1 89 4 332 1 187 1 
25 2 314 2 77 2 167 1 291 2 194 1 239 1 80 1 341 2 128 1 298 1 129 1 202 2 86 2 353 1 62 1 356 1 65 1 89 4 332 1 187 1 
77 1 339 1 169 1 194 1 239 1 81 1 341 2 127 1 219 1 298 1 321 1 252 1 84 1 372 1 202 1 353 1 18 1 204 1 65 1 160 1 89 2 41 1 114 1 332 1 163 1 211 1 93 1 212 1 
261 1 77 1 339 1 169 1 194 1 239 1 8 1 81 1 104 1 341 2 219 1 298 1 321 1 252 1 84 1 202 1 353 1 204 1 65 1 160 1 89 2 41 1 114 1 332 1 163 1 211 1 93 1 212 1 
25 2 314 2 77 2 167 1 291 2 194 1 239 1 80 1 341 2 128 1 298 1 129 1 371 1 202 2 86 2 353 1 62 1 356 1 65 1 89 4 332 1 187 1 
25 2 314 2 167 1 77 2 291 2 339 1 169 1 194 1 239 1 80 1 81 1 341 2 367 1 127 1 128 1 219 1 298 1 321 1 129 1 372 1 202 2 86 2 353 1 62 1 18 1 204 1 356 1 207 1 65 1 160 1 89 4 114 1 332 1 163 1 93 1 187 1 212 1 
140 1 164 1 25 1 314 1 167 1 77 2 291 1 194 1 169 1 239 1 80 1 341 2 297 1 128 1 298 1 219 1 129 1 371 1 202 1 201 1 86 1 353 1 356 1 65 1 89 3 332 1 115 1 284 1 187 1 
129 1 336 1 27 1 323 1 58 1 202 2 47 1 77 4 292 1 356 1 194 2 65 2 239 2 209 1 89 6 51 1 366 1 341 4 332 2 128 1 190 1 246 1 
336 2 263 1 27 4 314 4 47 2 167 2 77 14 292 1 194 3 239 3 317 1 366 2 51 1 80 2 341 6 82 1 294 1 199 1 128 3 246 2 106 1 129 3 324 2 202 12 58 2 352 1 36 1 62 2 356 3 65 3 89 26 332 3 187 2 190 1 
129 1 336 1 27 1 323 1 58 1 202 2 47 1 77 4 292 1 356 1 194 2 65 2 239 2 209 1 89 6 51 1 366 1 341 4 332 2 128 1 190 1 246 1 
129 1 336 1 27 1 323 1 58 1 202 2 47 1 77 4 292 1 356 1 194 2 65 2 239 2 209 1 89 6 51 1 366 1 341 4 332 2 128 1 190 1 246 1 
232 1 336 1 27 1 314 1 47 1 362 1 145 1 77 7 292 1 194 1 239 1 7 1 366 1 51 1 341 2 318 1 128 2 246 1 129 1 323 1 202 4 58 1 62 1 356 1 65 1 89 11 332 1 187 1 117 1 190 1 
374 1 170 1 90 1 76 1 282 1 107 1 59 1 139 1 326 1 347 1 
96 1 330 1 
374 1 170 1 90 1 328 1 174 1 76 1 59 1 23 1 326 1 
334 1 248 1 16 1 130 1 76 1 59 1 168 1 326 1 374 1 170 1 240 1 90 1 149 1 282 1 368 1 11 2 139 1 347 1 
334 1 248 1 16 1 130 1 76 1 59 1 168 1 326 1 374 1 170 1 240 1 90 1 149 1 282 1 368 1 11 2 139 1 347 1 
334 1 248 1 16 1 130 1 76 1 59 1 168 1 326 1 374 1 170 1 240 1 90 1 149 1 282 1 368 1 11 2 139 1 347 1 
154 1 250 1 220 1 
154 1 250 1 220 1 
337 1 286 1 
250 1 337 1 286 1 
99 1 153 1 
96 1 334 1 164 2 191 1 1 1 76 1 99 1 169 2 170 1 149 1 368 1 153 1 219 2 11 1 248 1 252 1 201 2 59 1 132 1 61 1 326 1 374 1 159 1 182 1 90 1 330 1 284 2 
154 1 220 1 
250 1 337 1 286 1 
141 1 46 1 77 1 339 1 169 2 194 1 239 1 148 1 81 2 341 2 298 1 219 2 176 1 321 1 251 1 371 1 84 1 202 1 353 1 108 2 303 1 65 1 67 1 89 2 41 1 114 1 332 1 93 1 163 2 284 2 212 2 
300 1 321 1 0 1 276 1 339 1 81 1 92 1 114 1 360 1 185 1 93 1 211 1 163 1 212 1 
320 1 300 1 98 1 71 1 165 1 222 1 339 1 267 2 304 1 196 1 81 1 103 1 360 1 151 1 114 1 10 1 163 1 212 1 
320 1 300 1 98 1 71 1 165 1 222 1 339 1 267 2 304 1 196 1 81 2 103 1 114 1 360 1 367 1 151 1 10 1 163 2 212 2 
320 1 231 1 98 1 71 1 165 1 222 1 339 1 267 2 304 1 81 1 103 1 360 1 151 1 114 1 10 1 163 1 212 1 
53 1 
55 1 130 1 28 1 100 1 134 1 208 1 305 1 359 1 70 1 343 1 
129 2 130 5 75 10 193 1 49 5 88 2 356 2 37 5 208 5 19 1 227 5 80 2 343 5 128 2 187 2 
334 1 274 1 130 1 149 1 265 1 100 1 
287 2 334 3 0 1 265 2 28 2 315 2 143 1 122 2 339 1 197 1 81 4 149 3 343 2 322 1 321 1 55 2 274 4 206 1 208 2 305 1 210 1 359 2 92 1 114 1 93 1 163 4 211 2 212 4 310 1 
130 1 70 1 343 1 100 1 295 1 208 1 134 1 
334 1 75 1 265 1 28 1 100 1 50 1 217 1 124 1 149 1 343 1 55 1 274 1 130 2 37 1 208 1 305 1 359 1 
334 2 193 1 49 3 234 1 339 2 5 1 195 1 6 1 149 2 52 1 9 1 343 4 55 2 356 1 208 3 305 2 160 1 359 2 68 1 114 1 211 1 163 1 212 1 265 1 75 6 28 2 29 2 122 1 81 1 80 1 269 1 128 1 321 1 129 1 274 2 130 3 223 1 37 3 88 1 278 1 227 3 93 4 187 1 
334 1 263 1 265 1 75 6 47 1 28 2 315 1 49 5 122 1 100 2 4 1 80 2 149 1 343 8 294 1 128 2 246 1 106 1 129 2 55 2 274 1 130 5 58 1 352 1 36 1 88 2 37 3 356 2 208 5 19 1 305 2 227 5 359 2 331 1 187 2 
140 1 232 1 334 1 164 1 28 1 169 1 7 1 31 1 149 1 343 2 271 1 128 2 219 1 14 1 55 1 57 1 201 1 203 1 133 1 88 2 208 2 19 1 305 1 359 1 281 1 284 1 187 1 117 1 
140 2 164 2 339 1 194 1 169 3 239 1 81 1 341 2 271 1 127 1 219 3 298 1 321 1 252 1 84 1 372 1 202 1 201 2 353 1 18 1 204 1 65 1 160 1 89 1 114 1 332 1 163 1 211 1 284 2 93 1 212 1 285 1 
55 1 130 4 75 4 28 1 315 1 49 2 145 1 122 1 100 2 37 2 208 2 305 1 227 2 359 1 343 1 
275 1 76 1 282 1 59 1 153 1 
313 1 76 1 59 1 
313 1 76 1 59 1 
313 1 76 1 59 1 
225 1 76 1 59 1 
225 1 76 1 59 1 
225 1 76 1 59 1 
76 1 59 1 
374 1 90 1 
232 2 202 5 314 5 62 3 167 2 77 5 292 1 194 1 65 1 239 1 7 1 89 10 341 2 281 1 332 1 128 2 187 2 117 2 
314 1 77 2 167 1 292 1 194 1 356 1 65 1 239 1 89 2 341 2 332 1 128 1 
129 1 202 2 314 2 62 1 77 2 167 1 292 1 194 1 356 1 65 1 239 1 89 4 80 1 341 2 332 1 187 1 128 1 
232 1 324 1 202 2 314 2 62 1 167 1 77 1 292 1 194 3 65 3 239 3 209 1 89 3 341 6 332 3 117 1 95 1 
232 1 45 1 264 1 47 3 314 5 362 1 145 1 77 13 167 2 292 1 194 4 239 4 7 1 80 2 318 1 341 8 128 4 12 1 246 1 129 3 324 1 323 1 202 11 58 3 62 3 356 3 65 4 226 1 209 1 89 24 332 4 187 3 117 1 
232 1 47 1 314 2 362 1 145 1 77 4 292 1 194 1 239 1 7 1 341 2 318 1 128 1 246 1 106 1 58 1 202 4 62 2 65 1 89 8 332 1 187 1 117 1 
106 1 129 1 323 1 58 1 202 1 47 1 77 3 292 1 356 1 194 2 65 2 239 2 89 4 341 4 332 2 128 1 12 1 246 1 
232 1 263 1 47 1 314 4 362 1 145 1 167 1 77 9 292 1 194 3 239 3 7 1 80 2 318 1 341 6 294 1 128 3 12 1 246 1 106 1 129 2 324 1 58 1 202 10 352 1 36 1 62 3 356 2 65 3 89 19 332 3 187 3 117 1 
232 1 263 1 47 1 314 5 362 1 145 1 167 2 77 10 292 1 194 3 239 3 7 1 80 1 318 1 341 6 294 1 128 3 12 1 246 1 106 1 129 2 324 1 58 1 202 7 352 1 36 1 62 3 356 2 65 3 89 17 332 3 187 2 117 1 
232 1 47 1 314 2 362 1 145 1 77 4 292 1 194 1 239 1 7 1 341 2 318 1 128 1 246 1 106 1 58 1 202 4 62 2 65 1 89 8 332 1 187 1 117 1 
263 1 47 1 314 2 167 1 77 6 292 1 194 1 239 1 80 2 341 2 294 1 128 2 246 1 106 1 129 2 58 1 202 6 352 1 36 1 62 1 356 2 65 1 89 12 332 1 187 2 
232 1 263 1 47 1 314 5 362 1 145 1 167 2 77 10 292 1 194 4 239 4 7 1 80 1 318 1 341 8 294 1 128 3 12 1 246 1 106 1 129 2 324 2 202 8 58 1 352 1 36 1 62 3 356 2 65 4 89 18 332 4 187 2 117 1 
263 1 47 1 314 6 167 3 77 9 292 1 194 4 239 4 80 2 341 8 294 1 128 3 246 1 106 1 129 3 324 2 202 7 58 1 352 1 36 1 62 3 356 3 65 4 209 1 89 16 332 4 187 2 
232 3 202 4 314 6 362 2 62 3 167 3 77 3 7 1 89 7 318 1 187 1 128 1 117 3 
232 1 263 1 47 1 314 4 362 1 145 1 167 1 77 10 292 1 194 4 239 4 7 1 80 1 318 1 341 8 294 1 128 3 246 1 106 1 129 2 324 2 202 8 58 1 352 1 36 1 62 3 356 2 65 4 209 1 89 18 332 4 187 2 117 1 
232 1 324 1 202 4 314 3 362 1 145 1 77 4 167 1 62 2 194 2 65 2 239 2 7 1 89 8 341 4 318 1 332 2 187 1 128 1 117 1 
232 1 202 3 314 2 362 1 145 1 62 2 77 3 7 1 89 6 318 1 295 1 128 1 187 1 117 1 
129 1 202 2 314 2 62 1 77 2 167 1 194 1 356 1 65 1 239 1 89 4 80 1 341 2 332 1 187 1 128 1 12 1 
129 1 89 4 323 1 58 1 202 1 47 1 77 3 128 1 356 1 246 1 
129 1 89 4 323 1 58 1 202 1 47 1 77 3 138 1 128 1 356 1 
89 1 202 1 47 1 
89 1 58 1 77 1 
129 1 202 3 314 3 193 1 77 3 167 1 62 2 194 1 356 1 65 1 239 1 89 6 80 1 341 2 332 1 128 1 187 1 12 1 
263 1 47 1 314 2 167 1 77 6 292 1 194 1 239 1 80 2 341 2 294 1 128 2 246 1 106 1 129 2 58 1 202 6 352 1 36 1 62 1 356 2 65 1 89 12 332 1 187 2 
232 1 202 3 314 2 77 3 62 1 167 1 7 1 89 6 128 1 187 1 117 1 
232 1 324 1 202 2 314 2 362 1 77 1 167 1 62 1 194 1 65 1 239 1 89 3 341 2 318 1 332 1 117 1 95 1 
252 1 308 1 284 1 253 1 245 1 219 1 169 1 
348 1 252 1 253 1 169 1 109 1 268 1 184 1 308 1 245 1 284 1 219 1 24 1 
335 1 0 1 321 1 339 1 81 4 92 1 367 1 114 1 211 1 163 4 93 1 212 4 43 1 
287 1 321 1 142 1 339 2 279 1 160 1 340 1 81 2 342 1 162 1 114 1 163 2 93 1 212 2 
320 1 71 1 81 1 114 1 151 1 163 1 211 1 212 1 339 1 267 1 
321 1 165 1 46 1 339 1 303 1 81 2 367 1 114 1 163 2 93 1 212 2 
287 1 0 1 321 2 46 1 339 2 81 4 327 1 92 1 367 1 114 2 211 1 163 5 93 3 212 5 189 1 43 1 
333 1 287 1 0 1 321 2 46 1 339 2 81 4 92 1 367 1 114 2 211 1 163 5 93 3 212 5 189 1 43 1 
321 1 0 1 81 1 92 1 114 1 93 1 163 1 211 1 295 1 212 1 339 1 
321 1 164 1 252 1 372 1 201 1 288 1 204 1 339 1 169 2 160 1 81 1 114 1 93 1 284 1 211 1 163 1 212 1 219 2 
287 1 164 1 214 1 312 1 288 1 339 1 169 2 81 1 219 2 321 2 14 1 252 1 372 1 201 2 204 1 302 1 180 1 160 2 114 1 163 1 284 2 93 3 212 1 
287 1 335 1 164 1 214 1 312 1 288 1 339 1 169 2 8 1 81 2 219 2 321 2 14 1 252 1 201 2 204 1 302 1 180 1 160 2 114 1 163 2 284 2 93 3 212 2 
140 1 287 1 164 1 334 2 214 1 29 1 100 1 339 1 169 1 81 1 149 2 269 1 9 1 271 1 219 1 321 1 14 1 274 1 130 1 201 1 57 1 203 1 133 1 180 1 110 1 160 1 280 1 114 1 284 1 93 4 163 1 212 1 
140 1 287 1 164 1 334 2 214 1 29 1 100 1 339 1 169 1 81 1 149 2 269 1 9 1 271 1 219 1 321 1 14 1 274 1 130 1 201 1 57 1 203 1 133 1 223 1 180 1 160 1 114 1 284 1 93 4 163 1 212 1 
81 1 114 1 270 1 163 1 212 1 339 1 
321 2 165 1 46 1 120 1 108 1 339 3 195 1 279 1 160 1 340 1 81 6 327 1 367 1 135 1 114 2 270 1 211 2 163 7 93 3 212 7 189 1 
232 1 164 1 25 1 72 1 314 2 362 1 288 1 145 1 77 3 291 1 339 1 169 2 194 2 239 2 7 1 81 1 318 1 341 4 367 1 127 1 128 1 298 2 219 2 321 1 252 2 371 1 372 1 202 3 201 1 86 1 353 2 62 2 18 1 204 1 207 1 65 2 67 1 160 1 89 6 114 1 332 2 93 1 284 1 163 1 187 1 212 1 117 1 
140 1 334 3 232 1 191 1 100 2 6 1 7 1 149 3 9 1 52 1 343 4 14 1 55 2 57 1 201 1 203 1 206 1 208 5 19 1 305 2 359 2 70 1 211 1 163 1 212 1 117 1 164 1 265 1 28 2 29 1 169 1 81 1 269 1 271 1 128 2 219 1 274 2 130 2 133 1 223 1 88 2 134 1 278 1 281 1 93 2 284 1 187 2 
321 1 234 1 339 2 195 1 160 1 81 2 9 1 367 1 114 1 270 1 163 2 93 2 212 2 
321 1 164 1 252 1 201 1 288 1 204 1 339 1 169 2 160 1 8 1 81 1 114 1 93 1 284 1 211 1 163 1 212 1 219 2 
287 1 321 1 120 1 339 2 195 1 279 1 160 1 340 1 81 1 114 1 163 1 93 1 212 1 
307 1 252 1 215 1 136 1 188 1 
140 1 164 1 334 2 191 1 215 1 312 1 100 1 364 1 169 1 365 1 172 1 149 2 269 1 271 1 219 1 299 1 14 2 130 1 201 1 57 1 35 1 203 1 133 1 302 1 307 1 136 1 284 1 188 1 
251 1 141 1 215 1 169 1 148 1 136 1 284 1 188 1 219 1 
172 1 215 1 364 1 
20 1 30 1 147 1 173 1 3 1 175 1 200 1 32 1 
230 1 119 1 74 1 3 3 20 2 241 2 30 1 173 1 175 4 200 2 32 4 346 1 228 1 319 1 
166 1 3 1 63 1 290 1 20 1 147 1 30 1 241 1 173 1 175 2 32 2 200 1 
3 1 20 1 147 1 30 1 173 1 175 3 32 3 272 1 200 1 228 1 346 2 319 2 
91 1 73 1 3 2 83 2 
30 1 147 1 173 1 175 1 116 1 32 1 
20 1 241 1 30 1 147 1 262 1 173 1 3 1 175 2 200 1 32 2 
329 1 
20 1 30 1 147 1 173 1 3 1 175 1 200 1 32 1 
20 1 3 1 200 1 295 1 
20 1 30 1 173 1 3 1 175 1 200 1 32 1 
369 1 54 1 175 1 
97 1 3 1 20 1 147 1 30 1 173 1 175 3 32 3 200 1 228 1 346 1 319 2 
20 1 241 1 30 1 173 1 3 1 198 1 175 2 200 1 32 2 
320 1 98 1 119 1 3 1 48 1 267 1 147 1 30 1 173 1 175 1 32 1 
20 1 30 1 147 1 173 1 3 1 175 1 32 1 
20 2 30 1 147 1 173 1 175 1 200 1 32 1 
177 1 3 1 293 1 20 1 147 1 30 2 173 2 242 1 175 2 32 2 
262 1 119 1 74 1 3 2 20 1 147 1 30 1 258 1 241 2 173 1 175 3 200 1 32 3 
320 1 71 1 98 1 3 1 267 2 20 1 147 1 30 1 241 1 173 1 150 1 10 1 175 2 200 1 32 2 
15 1 119 1 74 1 3 2 20 1 147 1 30 2 241 2 173 2 198 1 175 4 200 1 32 4 
262 1 3 1 20 1 241 1 147 1 30 1 173 1 175 3 32 3 200 1 319 1 
230 1 119 1 74 1 3 1 
20 1 3 1 

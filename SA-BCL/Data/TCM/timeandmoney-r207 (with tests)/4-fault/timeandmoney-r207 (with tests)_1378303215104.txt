#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 245 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
260 1 232 1 284 5 177 9 116 2 317 9 287 6 266 2 268 1 187 4 59 2 366 1 166 1 127 1 35 2 368 1 247 2 170 1 373 1 191 1 215 1 250 1 350 1 333 1 192 1 222 2 221 3 138 2 
260 1 232 1 284 5 177 9 116 2 317 9 287 6 266 2 268 1 187 4 59 2 366 1 166 1 127 1 35 2 368 1 170 1 373 1 247 2 191 1 215 1 250 1 350 1 333 1 192 1 222 2 221 3 138 2 
260 1 232 1 284 6 177 10 116 2 317 10 287 7 266 2 268 1 187 5 59 2 366 1 166 1 127 1 35 2 368 1 170 1 373 1 247 2 191 1 215 1 250 1 350 1 333 1 192 1 222 2 221 4 138 2 
260 1 232 1 284 4 177 7 116 2 317 7 287 4 266 2 268 1 187 3 59 2 366 1 127 1 35 2 368 1 170 1 373 1 247 1 191 1 215 1 250 1 350 1 333 1 192 1 222 2 221 2 138 2 
366 1 166 1 35 1 368 1 284 3 177 4 247 2 116 1 215 1 317 4 287 3 192 1 266 1 268 1 221 1 222 1 187 2 59 1 
35 1 368 1 284 1 177 2 170 1 116 1 317 2 178 1 333 1 19 1 192 1 268 1 222 1 123 1 59 1 138 1 
368 1 284 2 177 3 116 2 191 1 317 3 287 1 192 1 268 1 221 1 187 1 59 2 138 1 
284 5 177 9 116 2 317 9 287 7 266 1 268 1 187 4 59 2 366 1 166 1 127 1 35 1 368 1 373 1 247 2 191 1 215 1 41 1 192 1 252 1 221 3 222 1 138 1 
284 5 177 9 116 2 317 9 287 7 266 1 268 1 187 4 59 2 366 1 166 1 127 1 35 1 368 1 373 1 247 2 191 1 215 1 41 1 192 1 252 1 221 3 222 1 138 1 
273 1 245 1 102 1 
85 2 188 1 102 1 
281 2 86 2 285 2 122 1 132 2 257 1 142 2 304 2 
113 1 281 3 114 1 1 1 357 1 262 2 285 2 92 1 142 2 160 1 3 2 362 1 181 1 75 1 207 1 163 1 184 1 122 1 60 1 147 1 272 1 37 1 344 1 105 1 214 1 132 2 216 1 304 2 217 2 42 2 347 1 86 3 111 2 224 1 24 1 257 1 154 1 
175 1 281 1 145 1 86 1 285 1 122 1 132 1 142 1 304 1 331 1 
281 1 273 1 338 1 93 1 132 1 331 1 180 1 68 1 86 1 239 1 76 1 102 1 33 1 258 1 
281 1 273 1 285 1 93 1 132 1 304 1 142 1 331 1 180 2 68 1 86 1 76 1 102 1 33 2 258 1 
180 1 320 1 278 1 33 1 46 1 
150 1 180 2 273 1 278 1 38 1 102 1 33 2 46 1 
180 1 33 1 46 1 
175 1 281 1 285 1 132 1 275 1 304 1 142 1 331 1 180 1 145 1 86 1 278 1 122 1 33 1 
102 1 
175 1 281 1 158 1 285 1 142 1 180 2 145 1 122 1 102 1 33 2 273 1 38 1 132 1 275 1 304 1 331 1 86 1 278 1 46 1 
196 1 175 1 281 1 285 1 142 1 4 2 180 5 119 2 145 1 182 2 122 1 102 1 33 5 165 1 82 1 273 1 129 2 38 1 213 1 16 1 132 1 275 1 40 1 304 1 331 1 151 1 251 2 152 1 194 1 86 1 172 1 278 2 135 1 376 4 23 2 379 1 256 4 46 2 
245 1 257 1 
281 2 285 1 132 2 304 1 142 1 86 2 44 1 54 1 257 2 
337 1 200 1 332 1 
281 1 140 1 272 1 262 1 344 1 214 1 105 1 42 1 3 1 362 1 181 1 86 1 75 1 184 1 224 1 257 1 
281 2 272 1 262 1 344 1 105 1 214 1 132 1 286 1 304 1 142 1 42 1 332 1 3 1 362 1 181 1 86 2 75 1 279 1 184 1 224 1 
281 3 86 3 285 1 132 3 286 1 257 1 142 3 304 3 
281 1 145 1 86 1 132 1 142 1 304 1 331 1 
281 1 86 1 44 1 54 1 285 1 132 1 142 1 304 1 331 1 
113 1 281 4 114 1 1 1 357 1 262 1 285 2 93 1 203 1 286 1 142 3 160 1 3 1 362 1 180 1 181 1 75 1 207 1 54 1 184 1 76 1 122 1 33 1 272 1 37 1 344 1 370 1 105 1 214 1 132 3 216 1 304 3 217 2 42 1 347 1 331 1 68 1 86 4 279 1 111 1 224 1 257 1 154 1 258 1 
281 2 86 2 338 1 233 1 132 2 286 1 257 1 142 1 304 1 
281 3 285 1 370 1 93 1 132 3 286 2 304 3 142 3 17 1 331 1 180 1 68 1 86 3 54 1 279 1 76 1 102 1 33 1 258 1 
337 1 281 2 285 1 132 2 286 1 304 2 142 2 332 1 86 2 54 1 
281 1 272 1 262 1 344 1 214 1 105 1 42 1 3 1 362 1 181 1 86 1 75 1 184 1 224 1 257 1 
281 1 272 1 89 1 262 1 214 1 105 1 42 1 3 1 362 1 181 1 86 1 184 1 225 1 224 1 257 1 
126 1 113 1 156 1 337 2 114 1 1 1 37 2 176 1 200 2 83 1 216 1 301 1 217 2 332 2 160 1 119 1 111 4 377 1 23 1 24 2 11 1 353 1 255 1 154 1 
281 1 68 1 86 1 173 1 132 1 142 1 304 1 331 1 
281 5 369 1 285 1 338 1 233 1 132 5 286 2 304 4 142 4 321 1 86 5 54 1 279 1 257 1 
281 2 173 1 145 1 86 2 132 2 142 2 304 2 331 1 
261 1 241 1 
261 1 241 1 
345 1 174 1 
345 1 174 1 
345 1 174 1 
261 1 318 1 241 1 
261 1 315 1 241 1 
271 1 261 2 6 1 345 1 174 1 241 2 
261 1 318 1 241 1 
261 1 318 1 241 1 
261 1 241 1 326 1 
261 1 241 1 326 1 
261 1 241 1 326 1 
312 1 34 3 261 2 343 1 171 2 234 2 276 1 236 2 117 1 219 2 180 2 335 1 6 1 294 1 102 1 33 2 341 1 241 2 58 2 
312 1 281 2 261 1 315 1 234 1 142 2 236 1 180 1 363 1 33 1 241 1 324 1 58 1 298 1 34 1 274 1 171 1 132 2 304 2 193 1 86 2 133 1 257 1 71 1 
266 1 35 1 222 1 
35 1 222 1 123 1 
98 1 266 2 20 1 222 3 123 1 352 1 
266 1 20 1 222 2 123 1 352 1 118 1 
266 1 20 1 222 2 123 1 352 2 
319 1 4 1 180 5 238 1 119 1 363 1 8 2 102 2 33 5 81 1 365 1 63 1 273 1 188 1 129 1 38 1 274 1 130 2 301 1 107 1 84 1 85 3 251 1 152 1 133 1 278 4 375 2 376 3 23 1 255 1 256 2 46 1 
259 1 228 1 141 1 288 5 319 2 292 1 180 9 238 1 4 2 119 3 320 5 55 1 102 5 33 9 365 2 273 1 188 3 129 2 274 4 38 1 299 1 130 6 40 1 301 3 107 3 85 9 152 1 251 2 278 7 375 6 376 8 23 3 255 3 256 6 46 6 
319 1 4 1 180 3 119 1 8 1 102 3 33 3 365 1 273 1 63 1 188 2 129 1 274 1 130 2 40 1 107 1 301 1 84 1 251 1 85 4 278 2 375 2 376 3 23 1 255 1 256 2 
259 1 319 1 292 1 4 1 180 4 119 2 55 1 8 2 102 4 33 4 365 1 273 1 63 1 188 3 129 1 274 2 130 4 40 1 107 2 301 2 84 1 85 7 251 1 278 3 375 4 376 5 23 2 255 2 256 4 
184 1 245 1 342 1 
184 1 202 1 
78 1 
184 1 105 1 
362 1 184 3 105 1 115 1 342 2 47 1 
362 1 184 1 105 1 
2 1 184 1 
356 1 270 1 230 1 37 3 213 1 204 1 360 2 205 1 151 1 119 1 135 1 111 7 377 2 185 1 23 1 24 4 11 3 
356 1 270 1 230 1 37 3 213 1 204 1 360 2 205 1 151 1 119 1 135 1 111 7 377 2 185 1 23 1 24 4 11 3 
80 1 356 1 270 1 230 1 37 3 213 1 204 1 360 2 205 1 151 1 119 1 135 1 111 7 377 2 185 1 23 1 24 4 11 3 
113 1 356 2 230 2 114 1 360 1 204 1 160 1 361 1 179 1 119 1 267 1 11 4 57 1 270 1 148 2 37 6 213 1 216 1 149 1 107 1 301 1 303 1 217 2 151 1 111 11 377 2 23 1 24 5 25 1 255 1 
113 2 356 1 230 1 114 2 37 4 316 1 213 1 216 2 303 1 204 1 360 2 217 4 205 1 160 2 151 1 119 1 135 1 111 9 185 1 377 3 87 1 23 1 24 5 11 4 
231 1 262 1 50 1 284 1 177 2 116 1 317 2 287 1 237 1 3 1 98 1 266 1 268 1 210 1 123 1 59 1 243 1 272 1 35 1 368 1 346 1 131 1 42 1 305 1 67 1 192 1 308 1 222 2 224 1 138 1 
231 1 262 1 50 1 284 1 177 3 116 1 317 3 287 2 237 1 74 1 98 1 3 1 266 1 268 1 210 1 212 1 123 1 59 1 243 1 272 1 35 1 36 1 346 1 131 1 42 1 192 1 308 1 222 2 224 1 138 1 
231 1 262 1 284 1 177 2 317 2 287 2 74 1 3 1 98 1 266 1 268 1 210 1 123 1 243 1 272 1 35 1 36 1 346 1 131 1 42 1 192 1 308 1 222 2 224 1 138 1 
272 1 199 1 231 2 262 1 177 1 346 2 105 1 116 1 317 1 42 1 3 1 181 1 21 1 340 1 323 1 208 1 184 1 210 2 164 1 212 1 224 1 138 2 59 1 
272 1 243 1 35 1 368 1 262 1 231 1 50 1 131 1 177 1 346 1 116 1 317 1 237 1 42 1 74 1 98 1 3 1 67 1 266 1 308 1 210 1 222 2 123 1 224 1 138 1 59 1 
162 1 
281 1 90 1 338 1 93 1 95 1 96 1 289 1 52 1 3 2 180 5 4 1 181 2 239 1 9 2 184 1 102 2 12 2 15 2 244 2 188 2 190 1 105 1 106 1 302 2 66 1 152 1 251 1 68 1 21 1 311 2 256 2 258 1 72 4 197 1 262 2 30 1 319 1 164 1 211 1 76 1 33 5 124 1 367 2 272 1 273 1 129 1 38 3 132 1 42 2 331 1 85 2 86 1 376 2 224 1 46 6 
72 2 281 1 158 1 338 1 93 1 95 1 96 1 289 1 180 3 239 1 76 1 211 1 33 3 124 1 244 1 38 1 132 1 331 1 68 1 86 1 46 2 258 1 
72 3 281 1 158 1 338 1 93 1 95 1 96 1 289 1 180 3 239 1 76 1 211 1 102 1 33 3 124 1 367 1 273 1 38 1 132 1 331 1 68 1 86 1 46 1 258 1 
72 3 281 1 158 1 338 1 93 1 95 1 96 1 289 1 180 3 239 1 76 1 211 1 33 3 124 1 367 1 244 1 38 1 132 1 331 1 68 1 86 1 311 1 46 2 258 1 
175 1 281 2 285 1 93 1 338 1 95 1 96 1 142 1 289 1 52 1 180 5 291 1 4 1 145 1 239 1 9 2 102 1 12 2 103 1 61 1 15 2 244 4 188 2 190 1 304 1 302 2 68 1 152 1 251 1 311 4 256 1 258 1 72 4 158 1 122 1 76 1 211 1 33 5 124 1 327 1 367 2 273 1 129 1 38 3 132 2 275 1 331 2 86 2 336 1 376 1 46 7 
281 1 93 1 338 1 95 1 96 1 289 1 52 1 180 4 4 1 239 1 9 2 102 2 12 2 15 2 244 2 188 2 190 1 302 2 68 1 152 1 251 1 311 2 256 1 258 1 72 4 197 1 76 1 211 1 33 4 124 1 367 2 273 1 129 1 38 2 132 1 331 1 85 2 86 1 376 1 46 4 
72 4 281 1 338 1 93 1 95 1 96 1 289 1 52 1 4 1 180 4 239 1 9 2 76 1 211 1 102 1 33 4 12 2 124 1 103 1 327 1 61 1 367 2 15 2 273 1 244 2 188 2 129 1 38 2 190 1 132 1 302 2 331 1 68 1 152 1 251 1 86 1 376 1 311 2 46 4 256 1 258 1 
72 4 281 1 338 1 93 1 95 1 96 1 289 1 52 1 4 1 180 4 239 1 9 2 76 1 211 1 102 1 33 4 12 2 124 1 103 1 327 1 61 1 367 2 15 2 273 1 244 2 188 2 129 1 38 2 190 1 132 1 302 2 331 1 68 1 152 1 251 1 86 1 376 1 311 2 46 4 256 1 258 1 
72 4 281 1 313 1 338 1 93 1 95 1 96 1 289 1 52 1 4 1 180 4 146 2 239 1 9 2 76 1 211 1 102 1 33 4 124 1 103 1 367 2 15 2 273 1 244 2 129 1 38 2 371 1 132 1 331 1 85 2 68 1 152 1 251 1 86 1 376 1 253 1 311 2 137 2 46 4 256 1 258 1 
72 5 281 1 338 1 93 1 95 1 96 1 289 1 52 1 4 1 180 4 291 1 239 1 9 2 76 1 211 1 102 1 33 4 12 2 124 1 103 1 327 1 61 1 367 3 15 2 273 1 244 3 188 2 129 1 38 2 190 1 132 1 302 2 331 1 251 1 152 1 68 1 86 1 376 1 311 3 256 1 46 5 258 1 
72 5 281 1 338 1 93 1 95 1 96 1 289 1 52 1 4 1 180 4 291 1 239 1 9 2 76 1 211 1 102 1 33 4 12 2 124 1 103 1 327 1 61 1 367 3 15 2 273 1 244 3 188 2 129 1 38 2 190 1 132 1 302 2 331 1 251 1 152 1 68 1 86 1 376 1 311 3 256 1 46 5 258 1 
281 1 93 1 338 1 95 1 96 1 289 1 52 1 180 4 4 1 146 2 239 1 9 2 102 1 15 2 244 2 68 1 152 1 251 1 253 1 311 2 256 1 258 1 72 4 197 1 76 1 211 1 33 4 124 1 367 2 273 1 129 1 38 2 132 1 331 1 85 2 86 1 376 1 137 2 46 4 
113 1 337 1 114 1 1 1 37 3 245 1 213 1 200 1 83 1 216 1 360 1 217 2 332 1 160 1 205 1 151 1 119 1 135 1 111 6 377 2 185 1 23 1 24 3 11 2 257 2 154 1 
113 2 337 4 230 1 114 2 282 1 1 1 200 11 97 1 160 2 361 3 119 1 207 1 11 2 125 1 147 1 128 1 148 3 37 6 246 1 149 1 216 2 107 2 301 2 217 4 332 11 111 14 377 1 23 2 24 8 25 1 255 1 257 1 154 2 
113 1 337 1 281 2 114 1 140 1 1 1 262 1 286 1 142 1 3 1 160 1 362 1 181 1 75 1 207 1 184 1 77 1 125 1 272 1 147 1 344 1 37 1 64 1 105 1 214 1 132 1 216 1 304 1 42 1 217 2 349 1 86 2 279 1 111 2 224 1 24 1 257 1 154 1 
281 3 337 7 230 4 1 3 49 1 286 1 142 1 3 3 181 1 184 2 10 2 185 1 56 1 11 8 147 1 344 2 105 2 304 1 107 2 301 2 347 2 109 1 151 1 111 20 23 3 24 10 255 2 257 2 154 3 155 2 113 3 114 3 262 3 200 7 360 1 74 1 205 1 160 3 362 2 119 3 322 2 75 2 207 1 125 1 272 2 37 10 213 1 372 2 214 2 132 1 216 3 42 3 217 6 332 7 86 3 135 1 279 1 377 4 224 2 
48 1 113 2 229 1 281 1 114 2 1 2 262 8 286 1 142 1 143 1 74 1 3 8 160 2 31 1 181 2 207 1 184 3 164 1 60 2 272 2 147 1 37 1 83 1 105 2 249 1 132 1 216 2 304 1 42 7 217 4 305 1 277 1 86 1 21 1 309 1 111 2 224 2 24 1 154 2 
113 1 337 1 281 1 114 1 1 1 285 1 200 1 142 1 160 1 119 1 183 1 54 1 11 1 125 1 37 2 132 1 216 1 304 1 107 1 301 1 217 2 332 1 86 1 111 3 377 1 23 1 24 1 255 1 154 1 
113 1 337 1 156 1 230 1 114 1 1 1 200 1 83 1 216 1 301 1 217 2 332 1 160 1 111 2 23 1 24 2 11 1 154 1 
113 1 337 1 114 1 1 1 37 2 200 1 83 1 216 1 217 2 332 1 160 1 119 1 111 2 377 1 11 1 353 1 255 1 154 1 
113 1 337 2 114 1 230 1 1 1 200 2 160 1 119 1 11 2 37 2 83 1 216 1 301 1 107 1 217 2 332 2 111 4 377 1 23 1 24 2 255 1 154 1 
113 1 337 1 156 1 230 1 114 1 1 1 200 1 216 1 301 1 217 2 332 1 160 1 277 1 111 2 23 1 24 2 11 1 154 1 
113 1 337 1 114 1 1 1 37 2 200 1 216 1 217 2 332 1 160 1 277 1 119 1 111 2 377 1 11 1 353 1 255 1 154 1 
113 1 337 2 114 1 230 1 1 1 200 2 160 1 119 1 11 2 37 2 216 1 301 1 107 1 217 2 332 2 277 1 111 4 377 1 23 1 24 2 255 1 154 1 
113 1 337 2 230 1 114 1 1 1 37 2 200 2 216 1 107 1 301 1 217 2 332 2 160 1 119 1 111 4 377 1 23 1 24 2 255 1 11 2 154 1 
113 1 281 1 114 1 1 1 262 1 3 1 160 1 362 1 181 1 75 1 207 1 184 1 147 1 272 1 344 1 37 1 105 1 214 1 216 1 42 1 217 2 347 1 86 1 111 2 224 1 24 1 257 1 154 1 
113 1 281 1 114 1 1 1 89 1 262 1 3 1 160 1 362 1 181 1 207 1 184 1 147 1 272 1 37 1 105 1 214 1 248 1 216 1 42 1 217 2 86 1 111 2 224 1 225 1 24 1 257 1 154 1 
113 1 337 2 114 1 230 1 1 1 200 2 160 1 119 1 11 2 125 1 37 2 216 1 301 1 107 1 217 2 332 2 111 4 377 1 23 1 24 2 255 1 154 1 
113 1 337 2 281 1 230 1 114 1 1 1 262 1 200 2 3 1 160 1 362 1 119 1 75 1 184 1 11 2 272 1 37 2 344 1 214 1 105 1 216 1 301 1 107 1 42 1 217 2 332 2 347 1 305 1 86 1 111 4 377 1 23 1 224 1 24 2 255 1 154 1 155 1 
113 1 281 1 337 1 230 1 114 1 1 1 285 1 200 1 142 1 160 1 119 1 54 1 364 1 11 1 125 1 37 1 132 1 216 1 304 1 107 1 301 1 217 2 332 1 86 1 111 3 23 1 24 2 255 1 154 1 
113 2 198 1 114 2 230 3 316 1 51 1 290 2 160 2 361 1 120 1 119 3 209 1 240 1 186 2 11 6 167 1 148 2 37 10 300 1 149 1 216 2 107 3 301 3 217 4 111 19 377 3 23 3 24 9 25 1 255 3 
113 3 230 2 114 3 316 1 290 4 160 3 361 2 119 2 120 2 5 1 209 1 240 1 186 1 11 4 104 1 167 2 148 2 37 12 300 1 216 3 149 2 303 2 107 3 301 3 217 6 220 1 110 1 111 26 377 2 23 3 112 1 24 14 280 1 255 2 
230 4 290 4 5 1 240 1 185 1 186 1 11 8 104 1 148 4 300 1 149 3 301 4 107 4 303 1 151 1 110 1 111 41 23 5 24 20 112 1 255 4 25 1 113 3 198 1 114 3 316 1 360 1 361 3 160 3 205 1 119 5 120 2 209 1 167 1 37 21 328 1 213 1 216 3 217 6 220 1 135 1 377 4 280 1 
113 4 198 1 114 4 230 3 316 1 360 1 290 4 205 1 160 4 361 3 120 2 119 4 5 1 209 1 240 1 186 1 185 1 11 7 104 1 167 1 148 4 328 1 37 18 213 1 300 1 149 3 216 4 303 2 107 4 301 4 217 8 151 1 220 1 110 1 135 1 111 38 377 4 23 5 112 1 280 1 24 20 25 1 255 3 
113 2 114 2 230 7 282 2 316 1 360 1 290 4 205 1 160 2 361 4 120 1 119 8 5 1 209 1 240 1 186 1 185 1 11 14 104 1 167 1 148 4 37 25 213 1 300 1 149 2 216 2 303 1 107 7 301 7 217 4 151 1 220 1 110 1 135 1 111 52 377 7 23 8 112 1 280 1 24 27 25 2 255 7 
355 1 261 1 6 1 171 1 341 1 234 1 241 1 276 1 58 1 236 1 
193 1 315 1 
206 1 261 1 171 1 264 1 234 1 241 1 235 1 58 1 236 1 
312 1 34 2 261 1 343 1 171 1 234 1 276 1 236 1 219 1 180 1 335 1 6 1 294 1 102 1 33 1 341 1 241 1 58 1 
312 1 34 2 261 1 343 1 171 1 234 1 276 1 236 1 219 1 180 1 335 1 6 1 294 1 102 1 33 1 341 1 241 1 58 1 
312 1 34 2 261 1 343 1 171 1 234 1 276 1 236 1 219 1 180 1 335 1 6 1 294 1 102 1 33 1 341 1 241 1 58 1 
271 1 351 1 318 1 
271 1 351 1 318 1 
136 1 326 1 
271 1 136 1 326 1 
324 1 298 1 
281 2 261 1 315 1 234 1 236 1 142 2 180 1 100 1 363 1 33 1 241 1 324 1 58 1 298 1 34 1 274 1 171 1 132 2 304 2 219 1 335 1 193 1 86 2 278 1 133 1 257 1 71 1 
351 1 318 1 
271 1 136 1 326 1 
113 1 281 2 114 1 1 1 262 2 143 1 3 2 99 1 160 1 161 1 207 1 184 1 242 1 60 2 125 1 272 1 147 1 37 1 105 1 132 2 216 1 217 2 42 2 330 1 86 2 309 1 310 1 111 2 224 1 24 1 154 1 
14 1 272 1 243 1 35 1 262 2 231 1 50 1 201 1 42 2 74 1 305 1 98 1 3 2 266 1 293 1 308 1 222 2 123 1 224 1 
243 1 272 1 35 1 262 1 231 1 50 1 42 1 74 1 98 1 3 1 266 1 293 1 308 1 101 1 222 2 123 1 224 1 
14 1 272 1 262 1 231 1 199 1 339 1 105 1 42 1 3 1 181 1 21 1 184 1 164 1 224 1 
14 1 272 1 243 1 35 1 262 1 231 1 50 1 201 1 42 1 74 1 98 1 3 1 266 1 293 1 308 1 222 2 123 1 224 1 
189 1 
245 1 379 1 165 1 
4 1 180 1 102 2 33 1 12 1 273 1 188 1 129 1 38 1 190 1 302 1 251 1 152 1 85 1 376 1 256 1 46 1 
175 1 139 2 0 2 281 1 91 1 285 1 94 2 142 1 3 1 4 4 180 5 181 1 145 1 182 4 184 6 102 8 342 2 62 1 188 6 16 1 105 1 304 1 107 2 301 2 151 1 152 4 251 4 70 1 23 4 255 2 256 11 258 2 196 3 262 1 202 3 29 1 30 1 319 2 362 1 119 4 122 1 33 5 165 1 79 2 272 2 273 2 129 4 38 3 213 1 169 2 130 6 372 2 132 1 275 1 42 1 331 1 85 12 86 1 135 1 375 6 376 12 224 1 379 1 46 5 47 1 
196 1 314 1 30 1 319 1 361 1 180 1 4 2 119 2 5 1 182 2 102 5 33 1 148 1 273 2 129 2 188 3 38 1 329 1 130 5 149 1 107 2 301 2 85 6 251 2 152 2 220 1 110 1 375 5 376 8 23 2 112 1 280 1 255 2 46 1 256 5 
196 1 175 1 281 1 285 1 142 1 4 1 180 1 119 1 145 1 182 2 122 1 33 1 61 1 129 1 213 1 16 1 132 1 275 1 304 1 331 1 151 1 251 1 152 1 86 1 135 1 376 2 23 2 256 2 
4 1 251 1 152 1 129 1 379 1 
196 1 188 5 130 5 372 1 107 2 301 2 85 10 119 2 182 2 375 5 376 5 102 5 23 2 255 2 256 5 
180 1 273 1 38 1 102 1 33 1 46 1 
91 1 262 4 30 2 319 2 3 4 144 1 4 2 180 3 181 2 32 1 184 1 164 1 33 3 272 1 129 2 38 2 105 1 40 1 106 1 42 4 66 1 43 2 251 2 152 1 21 1 376 2 224 1 46 4 256 2 
113 1 281 3 114 1 1 1 357 1 262 1 285 2 142 2 160 1 3 1 362 1 181 1 75 1 207 1 184 1 122 1 272 1 37 1 344 1 214 1 105 1 132 2 216 1 304 2 217 2 42 1 347 1 86 3 111 1 224 1 257 1 154 1 
273 2 188 2 129 1 130 2 30 1 360 1 319 1 4 1 85 4 152 1 251 1 375 2 376 1 102 4 256 2 
121 1 171 1 234 1 
171 1 324 1 234 1 276 1 354 1 
121 1 171 1 234 1 
121 1 171 1 234 1 
358 1 171 1 234 1 
358 1 171 1 234 1 
358 1 171 1 234 1 
171 1 234 1 
261 1 241 1 
113 2 230 1 114 2 37 4 213 1 216 2 303 1 360 1 217 4 160 2 205 1 151 1 119 1 135 1 111 8 377 2 185 1 23 1 24 4 11 3 
37 3 245 1 213 1 360 1 205 1 151 1 119 1 135 1 111 6 185 1 377 2 23 1 24 3 11 2 
113 1 114 1 230 1 37 2 216 1 107 1 301 1 217 2 160 1 334 1 119 1 111 4 377 1 23 1 24 2 255 1 11 2 
230 1 148 2 37 4 149 1 107 1 301 1 361 1 119 1 111 7 377 1 23 1 24 3 255 1 25 1 11 2 
113 2 230 4 114 2 282 1 360 1 205 1 361 2 160 2 119 3 267 1 185 1 11 9 148 2 37 12 213 2 246 1 216 2 301 2 107 2 303 2 217 4 151 2 135 1 111 23 377 5 23 3 24 11 25 1 255 2 
148 1 37 1 111 1 
361 1 111 1 24 1 
113 1 114 1 230 1 37 3 372 1 216 1 107 1 301 1 217 2 160 1 334 1 119 1 111 6 377 2 23 1 24 3 11 3 255 1 
113 1 230 1 114 1 316 1 361 1 160 1 119 2 5 1 11 2 148 1 37 6 149 1 216 1 107 2 301 2 217 2 110 1 220 1 111 12 377 1 23 2 280 1 24 6 112 1 255 2 
151 1 230 1 119 1 37 3 135 1 213 1 111 6 377 1 23 1 24 3 11 2 
113 1 230 1 114 1 37 2 213 1 216 1 303 1 217 2 205 1 160 1 151 1 267 1 111 3 377 1 185 1 24 1 11 2 
113 1 114 1 230 2 316 1 37 5 213 2 16 1 216 1 217 2 160 1 151 2 119 2 135 1 111 10 377 3 23 2 24 5 11 5 
113 1 114 1 230 1 316 1 216 1 301 1 217 2 160 1 111 2 23 1 24 2 11 1 
113 1 114 1 230 1 37 2 316 1 216 1 107 1 301 1 217 2 160 1 119 1 111 4 377 1 23 1 24 2 255 1 11 2 
113 3 198 1 114 3 230 1 37 2 316 1 213 1 216 3 303 1 217 6 160 3 151 1 267 1 111 3 377 1 24 1 11 2 
113 4 198 1 230 3 114 4 316 1 179 1 160 4 361 1 205 1 119 2 267 1 185 1 11 6 148 1 37 8 213 2 16 1 149 1 216 4 303 1 217 8 334 1 151 2 135 1 111 15 377 3 23 2 24 7 
113 1 114 1 316 1 360 1 361 1 160 1 205 1 119 1 185 1 11 2 148 1 37 4 213 1 149 1 216 1 217 2 151 1 135 1 111 8 377 2 23 1 280 1 24 4 
113 2 114 2 230 1 316 1 360 1 205 1 160 2 361 1 119 1 185 1 11 3 148 2 37 5 213 1 149 1 216 2 107 1 301 1 217 4 151 1 334 1 135 1 111 11 377 2 23 2 280 1 24 6 25 1 
113 3 230 1 114 3 316 1 360 1 205 1 361 1 160 3 119 3 5 1 185 1 11 4 148 1 37 10 213 1 149 1 216 3 107 2 301 2 303 1 217 6 151 1 334 1 220 1 110 1 135 1 111 19 377 3 23 3 280 1 24 9 112 1 255 2 
113 3 230 2 114 3 316 1 360 1 205 1 361 1 160 3 119 2 5 1 185 1 11 5 148 1 37 7 213 1 149 1 216 3 303 1 107 2 301 2 217 6 151 1 334 1 110 1 220 1 135 1 111 17 377 3 23 3 280 1 24 10 112 1 255 1 
113 1 114 1 316 1 360 1 361 1 160 1 205 1 119 1 185 1 11 2 148 1 37 4 213 1 149 1 216 1 217 2 151 1 135 1 111 8 377 2 23 1 280 1 24 4 
113 1 230 1 114 1 316 1 361 1 160 1 119 2 5 1 11 2 148 1 37 6 149 1 216 1 107 2 301 2 217 2 110 1 220 1 111 12 377 1 23 2 280 1 24 6 112 1 255 2 
113 4 230 2 114 4 316 1 360 1 205 1 160 4 361 1 119 2 5 1 185 1 11 5 148 1 37 8 213 1 149 1 216 4 107 2 301 2 303 2 217 8 151 1 334 1 220 1 110 1 135 1 111 18 377 3 23 3 112 1 280 1 24 10 255 1 
113 4 198 1 230 3 114 4 316 1 160 4 361 1 119 2 5 1 11 6 148 1 37 7 149 1 216 4 107 3 301 3 303 2 217 8 220 1 110 1 111 16 377 3 23 3 112 1 280 1 24 9 255 2 
230 3 37 4 213 3 205 2 151 3 119 1 135 1 111 7 185 1 377 3 23 1 24 3 11 6 
113 4 198 1 230 1 114 4 316 1 360 1 205 1 160 4 361 1 119 2 5 1 185 1 11 4 148 1 37 8 213 1 149 1 216 4 107 2 301 2 303 2 217 8 151 1 220 1 110 1 135 1 111 18 377 3 23 3 112 1 280 1 24 10 255 1 
281 1 86 1 338 1 233 1 132 1 257 1 18 1 
281 1 233 1 338 1 132 1 18 1 69 1 22 1 86 1 223 1 269 1 257 1 227 1 
3 1 181 1 272 1 21 1 262 1 184 1 245 1 164 1 224 1 105 1 42 1 
281 2 272 1 262 1 344 1 105 1 214 1 132 1 286 1 304 1 142 1 42 1 3 1 362 1 181 1 86 2 184 1 224 1 257 1 
281 2 272 1 2 1 262 1 344 1 93 1 105 2 214 1 132 2 286 1 304 1 142 2 42 1 331 1 43 1 3 1 362 2 68 1 86 2 53 1 184 3 224 1 257 1 
281 2 262 2 2 1 159 1 93 1 286 1 142 2 3 2 362 2 53 1 184 3 272 1 214 1 105 2 132 2 304 1 42 2 331 1 43 1 68 1 86 2 224 1 225 1 257 1 
272 1 273 1 2 1 262 3 159 1 65 1 105 1 202 1 42 3 43 1 3 3 362 1 180 2 181 1 53 1 184 4 102 1 254 1 33 2 224 1 46 1 342 1 258 1 
0 1 272 1 273 1 2 1 262 3 159 1 105 1 202 1 42 3 43 1 3 3 362 1 180 2 181 1 53 1 184 4 102 1 33 2 224 1 46 1 342 1 258 1 
3 1 272 1 262 1 224 1 249 1 42 1 
48 1 229 1 272 3 262 7 105 2 249 1 73 1 42 6 74 1 305 1 3 7 362 1 31 1 181 2 184 3 309 1 224 2 297 1 13 1 47 1 60 1 
337 1 281 2 1 2 286 1 142 1 3 1 184 1 185 1 11 2 344 1 105 1 304 1 347 1 305 1 151 1 310 1 111 6 23 1 24 3 257 2 154 2 155 1 113 2 114 2 262 1 200 1 360 1 160 2 205 1 362 1 119 1 75 1 322 1 125 1 272 1 37 3 213 1 214 1 132 1 216 2 42 1 217 4 332 1 86 2 135 1 377 2 224 1 
0 1 139 1 175 1 281 1 91 1 285 1 94 1 142 1 3 1 180 3 4 2 181 1 145 1 182 2 184 2 102 1 342 1 16 1 304 1 151 1 152 2 251 2 23 2 256 4 258 1 196 1 262 1 202 1 119 2 122 1 33 3 165 1 273 1 129 2 38 1 169 1 213 1 132 1 275 1 42 1 331 1 86 1 278 1 135 1 376 4 379 1 46 2 
3 2 362 1 272 2 70 1 262 2 184 2 224 1 105 1 249 1 342 1 47 1 42 2 305 1 
272 1 262 4 159 1 105 1 42 4 305 1 3 4 265 1 181 1 21 1 184 1 164 1 224 1 
272 2 262 2 105 1 42 2 43 1 109 1 3 2 362 1 184 1 224 1 297 1 13 1 88 1 153 1 
3 1 181 1 272 1 35 1 308 1 262 1 222 1 123 1 224 1 42 1 
272 1 262 2 105 1 42 2 305 1 74 1 330 1 3 2 184 1 309 1 224 1 
229 1 272 2 262 5 105 2 42 4 305 1 43 1 3 5 265 1 181 1 31 1 21 1 184 3 164 1 309 1 224 2 
272 2 262 5 105 2 42 4 305 1 43 1 3 5 265 1 181 1 31 1 21 1 134 1 184 3 164 1 309 1 224 2 
281 2 272 1 262 1 105 1 214 1 132 1 286 1 304 1 142 1 42 1 3 1 362 1 181 1 86 2 184 1 225 1 224 1 257 1 
272 2 262 1 105 1 73 1 42 1 43 1 3 1 362 1 184 1 224 1 297 1 13 1 47 1 
7 1 45 1 226 1 257 1 325 1 
26 1 273 1 370 1 93 1 331 1 348 1 180 2 68 1 278 1 7 2 45 1 76 1 102 1 378 1 33 2 226 2 257 1 325 2 258 1 
281 1 132 1 99 1 161 1 86 1 7 1 45 1 226 1 242 1 
348 1 45 1 378 1 
192 1 268 1 284 1 245 1 
192 1 268 1 284 1 177 1 116 1 317 1 59 1 
210 1 177 1 138 1 
368 1 284 1 177 3 27 1 28 1 116 1 39 1 317 3 333 2 192 1 268 1 59 1 
192 1 268 1 284 1 247 1 177 2 116 1 317 2 287 1 59 1 
366 1 35 1 368 1 284 1 177 1 116 1 317 1 266 1 187 1 222 1 59 1 
268 1 368 1 284 1 177 1 116 1 317 1 59 1 
192 1 268 2 368 1 177 1 116 1 317 1 59 1 
368 1 284 1 177 2 116 2 317 2 306 1 307 1 268 1 296 1 59 2 
127 1 368 1 284 2 177 3 373 1 116 1 317 3 287 2 192 1 268 1 221 1 187 1 59 1 
35 1 368 1 283 1 284 1 177 2 116 1 317 2 287 1 98 1 192 1 266 1 268 1 222 2 123 1 59 1 
166 1 368 1 284 2 177 4 247 1 116 2 317 4 287 2 192 1 268 1 221 1 187 1 59 2 
192 1 268 1 368 1 284 1 177 1 116 1 317 1 59 1 
284 3 177 4 28 1 39 1 116 1 317 4 287 2 333 1 192 2 195 1 268 2 221 1 187 1 59 1 
368 1 284 1 177 2 263 1 116 1 317 2 287 1 374 1 192 1 252 1 268 1 59 1 
333 2 192 1 268 1 368 1 284 1 359 1 177 3 28 1 39 2 116 1 317 3 59 1 
168 1 284 2 108 1 218 2 
368 1 295 1 177 1 116 1 317 1 59 1 
192 1 268 1 368 1 284 1 373 1 177 2 116 1 317 2 287 1 59 1 
157 1 
192 1 268 1 368 1 284 1 177 1 116 1 317 1 59 1 
368 1 284 1 177 3 373 1 116 1 317 3 287 1 333 1 192 1 268 1 59 1 
195 1 284 1 187 1 221 1 
268 1 284 1 

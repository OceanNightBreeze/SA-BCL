#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 263 29 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 263 29 72 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 51 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
86 1 87 1 213 5 127 1 59 2 153 1 302 1 280 1 110 3 182 1 161 1 42 1 71 2 16 4 235 7 44 1 353 1 21 9 356 1 82 1 293 9 104 1 295 2 121 1 
86 1 87 1 213 5 127 1 59 2 153 1 302 1 280 1 110 3 182 1 161 1 42 1 71 2 16 4 235 7 44 1 353 1 21 9 356 1 82 1 293 9 104 1 295 2 121 1 
87 2 86 1 188 1 213 5 28 1 127 2 59 2 153 1 302 1 280 1 110 3 229 1 182 1 161 2 137 1 139 1 42 2 71 2 16 4 235 6 353 1 21 9 82 1 104 1 293 9 295 2 24 1 121 1 
87 2 86 1 188 1 213 5 28 1 127 2 59 2 153 1 302 1 280 1 110 3 229 1 182 1 161 2 137 1 139 1 42 2 71 2 16 4 235 6 353 1 21 9 82 1 104 1 293 9 295 2 24 1 121 1 
87 2 86 1 188 1 213 6 28 1 127 2 59 2 153 1 302 1 280 1 110 4 229 1 182 1 161 2 137 1 139 1 42 2 71 2 16 5 235 7 353 1 21 10 82 1 104 1 293 10 295 2 24 1 121 1 
87 2 86 1 188 1 213 4 28 1 127 2 59 2 153 1 302 1 280 1 110 2 229 1 182 1 161 2 137 1 139 1 42 2 71 2 16 3 235 4 353 1 21 7 82 1 293 7 295 1 24 1 121 1 
87 1 213 3 182 1 161 1 127 1 71 1 59 1 16 2 235 3 153 1 280 1 353 1 21 4 82 1 110 1 104 1 293 4 295 2 
87 1 188 1 213 1 182 1 137 1 161 1 71 1 42 1 59 1 129 1 280 1 21 2 250 1 82 1 293 2 294 1 
213 2 182 1 71 2 42 1 59 2 16 1 235 1 302 1 280 1 21 3 82 1 293 3 110 1 
354 1 216 1 176 1 
186 1 10 2 216 1 
270 2 252 2 316 1 94 2 77 2 27 1 231 2 37 2 
143 1 1 1 316 1 107 1 89 1 337 2 27 1 218 1 152 2 60 1 221 1 93 1 94 2 249 2 304 2 35 1 37 2 111 1 252 3 134 2 39 1 112 1 181 1 138 1 231 2 164 1 166 1 234 1 270 3 204 1 289 1 116 1 101 1 77 2 273 1 241 1 83 1 
270 1 351 1 252 1 94 1 77 1 27 1 325 1 231 1 37 1 226 1 
53 1 347 1 178 1 252 1 56 1 216 1 255 1 113 1 98 1 270 1 94 1 305 1 176 1 226 1 
53 1 347 1 178 2 252 1 56 1 231 1 216 1 113 1 98 2 270 1 77 1 94 1 176 1 37 1 226 1 
329 1 236 1 178 1 171 1 98 1 
329 1 236 1 178 2 63 1 79 1 216 1 176 1 98 2 
329 1 178 1 98 1 
283 1 178 1 252 1 27 1 325 1 231 1 98 1 270 1 236 1 351 1 77 1 94 1 37 1 226 1 
216 1 
329 1 236 1 178 2 63 1 156 1 216 1 176 1 98 2 
178 5 187 1 2 1 4 1 146 1 126 1 349 2 216 1 299 2 149 1 98 5 236 2 257 1 329 2 207 1 63 1 141 1 49 2 176 1 
316 1 354 1 
252 2 316 2 231 1 270 2 74 1 94 2 77 1 259 1 37 1 
228 1 125 1 230 1 
143 1 1 1 252 1 134 1 39 1 316 1 181 1 89 1 107 1 164 1 270 1 221 1 101 1 281 1 249 1 304 1 
143 1 1 1 252 2 134 1 39 1 180 1 230 1 181 1 107 1 89 1 231 1 164 1 270 2 221 1 101 1 94 1 249 1 304 1 103 1 37 1 
270 3 252 3 316 1 77 1 94 3 231 3 103 1 37 3 
270 1 252 1 94 1 325 1 231 1 37 1 226 1 
270 1 74 1 252 1 94 1 77 1 259 1 231 1 37 1 226 1 
53 1 143 1 1 1 316 1 56 1 107 1 89 1 337 2 27 1 218 1 152 1 221 1 93 1 94 3 65 1 249 1 304 1 37 3 226 1 347 1 178 1 39 1 252 4 134 1 180 1 181 1 138 1 231 3 164 1 201 1 113 1 166 1 234 1 98 1 74 1 270 4 204 1 289 1 116 1 101 1 77 2 241 1 103 1 83 1 
270 2 252 2 316 1 94 2 231 1 305 1 103 1 37 1 243 1 
53 1 347 1 178 1 252 3 180 1 56 1 231 3 216 1 113 1 98 1 74 1 270 3 77 1 94 3 208 1 65 1 103 2 37 3 226 1 
270 2 74 1 252 2 125 1 230 1 94 2 77 1 231 2 103 1 37 2 
143 1 1 1 252 1 134 1 39 1 316 1 181 1 89 1 107 1 164 1 270 1 221 1 101 1 249 1 304 1 
1 1 252 1 134 1 316 1 181 1 89 1 107 1 57 1 164 1 270 1 221 1 9 1 101 1 249 1 304 1 
125 2 88 1 278 1 297 1 337 2 58 1 218 1 152 4 194 1 66 1 196 1 228 2 230 2 138 1 199 1 166 1 234 1 76 1 204 2 289 1 273 2 241 1 81 1 359 1 
270 1 252 1 56 1 94 1 231 1 37 1 50 1 226 1 
252 5 180 1 316 1 231 4 270 5 74 1 75 1 32 1 94 5 77 1 305 1 103 2 37 4 243 1 
270 2 252 2 94 2 325 1 231 2 50 1 37 2 226 1 
25 1 6 1 
25 1 6 1 
18 1 118 1 
18 1 118 1 
18 1 118 1 
25 1 222 1 6 1 
25 1 274 1 6 1 
25 2 18 1 118 1 115 1 11 1 6 2 
25 1 222 1 6 1 
25 1 222 1 6 1 
25 1 358 1 6 1 
25 1 358 1 6 1 
25 1 358 1 6 1 
25 1 263 1 105 1 321 1 29 1 6 1 
25 1 263 1 105 1 178 1 321 1 29 1 72 1 6 1 98 1 
87 1 161 1 127 1 
87 1 161 1 294 1 
192 1 87 3 169 1 41 1 127 2 294 1 
0 1 87 2 169 1 41 1 127 1 294 1 
87 2 169 2 41 1 127 1 294 1 
186 1 278 1 88 1 126 2 190 2 299 1 216 2 149 1 264 2 301 2 10 3 63 1 194 1 195 1 176 1 36 1 227 1 178 5 349 1 233 1 43 1 256 1 98 5 329 1 236 4 206 1 207 3 17 1 46 1 49 1 357 1 359 1 
186 3 4 1 278 3 88 3 147 1 126 6 190 6 171 5 216 5 299 2 149 1 151 1 264 6 10 9 63 1 343 5 194 3 176 1 36 2 177 1 178 9 349 2 233 4 256 3 98 9 329 6 236 7 206 1 207 8 19 1 49 2 355 1 357 2 359 3 122 1 
186 2 4 1 278 1 88 1 126 2 190 2 216 3 299 1 264 2 301 1 10 4 194 1 195 1 176 1 36 1 178 3 349 1 233 1 98 3 256 1 236 2 207 3 46 1 49 1 357 1 359 1 
186 3 4 1 278 2 88 2 126 4 190 4 216 4 299 1 151 1 264 4 301 2 10 7 194 2 195 1 176 1 36 1 178 4 349 1 233 2 98 4 256 2 236 3 207 5 46 1 19 1 49 1 355 1 357 1 359 2 
101 1 354 1 248 1 
271 1 101 1 
303 1 
101 1 107 1 
1 1 179 1 315 1 107 1 101 3 303 1 248 2 
1 1 101 1 107 1 
284 1 101 1 
267 1 333 2 124 1 12 1 3 1 88 1 58 3 204 3 279 1 61 1 152 7 184 1 47 1 273 4 291 1 194 1 196 2 
267 1 333 2 124 1 12 1 3 1 88 1 58 3 204 3 279 1 61 1 152 7 184 1 47 1 273 4 291 1 194 1 196 2 
267 1 333 2 124 1 12 1 3 1 88 1 217 1 58 3 204 3 279 1 61 1 152 7 184 1 47 1 291 1 273 4 194 1 196 2 
333 3 124 1 3 2 335 4 145 1 88 4 278 3 337 2 58 10 218 1 279 2 7 3 61 1 152 31 194 4 196 5 133 1 267 2 12 1 183 1 166 1 256 3 204 15 140 1 289 1 184 2 238 1 47 5 291 1 241 1 272 1 273 16 242 1 359 3 
333 2 3 1 88 1 337 4 58 4 218 2 150 1 279 1 152 9 61 1 194 1 196 3 133 1 267 1 12 1 166 2 328 1 204 4 289 2 184 1 47 1 241 2 273 5 291 1 
26 1 87 2 213 1 215 1 127 1 339 1 59 1 220 1 221 1 192 1 280 1 249 1 64 1 304 1 345 1 134 1 159 1 182 1 161 1 232 1 164 1 71 1 42 1 235 1 21 2 209 1 82 1 293 2 294 1 52 1 
26 1 87 2 213 1 127 1 339 1 191 1 59 1 220 1 221 1 192 1 249 1 64 1 304 1 345 1 134 1 198 1 182 1 161 1 232 1 164 1 71 1 42 1 235 2 20 1 21 3 209 1 82 1 293 3 294 1 52 1 
26 1 87 2 213 1 339 1 127 1 220 1 221 1 192 1 249 1 64 1 304 1 134 1 198 1 182 1 161 1 164 1 42 1 235 2 20 1 21 2 209 1 82 1 293 2 294 1 52 1 
54 1 26 2 134 1 285 1 181 1 107 1 136 1 164 1 191 1 42 2 71 1 30 1 59 1 220 2 221 1 31 1 101 1 157 1 249 1 21 1 304 1 293 1 52 2 
26 1 87 2 215 1 127 1 339 1 59 1 220 1 221 1 192 1 280 1 249 1 64 1 304 1 345 1 134 1 198 1 161 1 232 1 164 1 71 1 42 1 21 1 209 1 293 1 294 1 52 1 
142 1 
53 1 186 2 277 1 56 1 148 2 149 1 154 2 63 2 252 1 160 1 162 3 14 1 200 2 70 1 113 1 255 1 167 1 168 2 329 5 207 1 126 1 336 1 216 1 299 1 219 1 94 1 306 5 305 1 175 1 176 1 226 1 347 1 38 3 178 4 308 1 268 1 349 1 350 3 98 4 270 1 237 1 49 1 
53 1 186 2 56 1 277 1 336 1 126 1 148 2 216 1 299 1 149 1 219 1 154 2 63 2 94 1 305 1 306 5 176 1 175 1 226 1 347 1 308 1 178 4 38 3 252 1 268 1 160 1 349 1 14 1 162 3 200 2 350 3 70 1 255 1 113 1 167 1 98 4 168 2 270 1 329 5 207 1 237 1 49 1 
53 1 244 1 56 1 149 1 154 2 10 2 63 2 247 2 252 1 13 2 160 1 14 1 162 2 113 1 255 1 168 2 329 4 207 1 126 1 336 1 299 1 216 1 219 1 340 1 94 1 306 4 305 1 176 1 226 1 347 1 178 4 38 2 268 1 349 1 350 2 98 4 270 1 237 1 49 1 
244 1 54 1 53 1 186 2 56 1 107 1 148 2 149 1 154 2 10 2 63 3 249 2 252 1 160 1 162 2 14 1 200 2 164 1 255 1 113 1 168 2 329 6 207 2 262 1 212 1 214 1 126 2 336 1 216 2 299 1 30 1 219 1 221 1 94 1 304 2 305 1 306 4 176 1 36 1 225 1 175 1 226 1 347 1 38 2 178 5 134 2 268 1 181 2 349 1 350 2 98 5 270 1 101 1 237 1 49 1 
53 1 347 1 178 3 268 1 252 1 56 1 160 1 162 1 14 1 113 1 255 1 98 3 219 1 270 1 329 2 63 1 156 1 237 1 94 1 306 2 305 1 226 1 
53 1 56 1 216 1 219 1 94 1 156 1 63 1 305 1 306 3 176 1 226 1 347 1 178 3 38 1 252 1 268 1 160 1 14 1 255 1 113 1 98 3 270 1 329 1 237 1 
53 1 56 1 216 1 219 1 63 1 156 1 94 1 305 1 306 3 176 1 226 1 347 1 178 3 38 1 252 1 268 1 160 1 14 1 162 1 350 1 255 1 113 1 98 3 270 1 329 2 237 1 
314 1 53 1 186 2 56 1 277 1 148 2 149 1 154 2 156 1 63 3 252 1 160 1 162 4 14 1 200 2 70 1 113 1 255 1 167 1 168 2 329 7 207 1 126 1 336 1 216 5 299 1 219 1 94 1 306 6 305 1 176 5 175 1 226 1 347 1 178 5 38 4 308 1 268 1 349 1 350 4 98 5 270 1 237 1 49 1 
53 1 244 1 186 2 56 1 148 2 149 1 154 2 10 2 63 2 252 1 160 1 14 1 162 2 200 2 113 1 255 1 168 2 329 4 207 1 126 1 336 1 299 1 216 2 219 1 94 1 306 4 305 1 175 1 176 1 226 1 347 1 178 4 38 2 268 1 349 1 350 2 98 4 270 1 237 1 49 1 
53 1 186 2 56 1 336 1 126 1 148 2 216 1 299 1 149 1 219 1 154 2 63 2 94 1 305 1 306 4 176 1 175 1 226 1 347 1 38 2 178 4 308 1 252 1 268 1 160 1 349 1 162 2 14 1 350 2 200 2 70 1 255 1 113 1 167 1 98 4 168 2 270 1 329 4 207 1 237 1 49 1 
53 1 186 2 56 1 336 1 126 1 148 2 216 1 299 1 149 1 219 1 154 2 63 2 94 1 305 1 306 4 176 1 175 1 226 1 347 1 38 2 178 4 308 1 252 1 268 1 160 1 349 1 162 2 14 1 350 2 200 2 70 1 255 1 113 1 167 1 98 4 168 2 270 1 329 4 207 1 237 1 49 1 
53 1 210 1 56 1 336 1 126 1 216 1 299 1 149 1 219 1 340 1 154 2 10 2 63 2 94 1 247 2 305 1 306 4 176 1 226 1 347 1 38 2 178 4 13 2 252 1 268 1 160 1 96 1 349 1 162 2 14 1 350 2 70 1 255 1 113 1 98 4 168 2 270 1 329 4 207 1 237 1 49 1 
333 1 125 1 316 2 88 1 337 2 58 2 218 1 279 1 61 1 152 6 194 1 66 1 196 2 228 1 12 1 230 1 138 1 166 1 234 1 204 3 289 1 184 1 291 1 354 1 241 1 273 3 
55 1 125 4 316 1 335 3 88 2 278 1 337 4 58 2 218 2 7 3 246 1 152 14 341 1 194 1 196 1 228 11 112 1 230 11 138 1 97 1 183 1 166 2 234 2 99 1 256 2 204 6 289 2 47 1 272 1 241 2 273 8 83 1 359 2 
143 1 1 1 125 1 316 1 107 1 89 1 337 2 218 1 221 1 152 2 94 1 342 1 109 1 281 1 249 1 304 1 37 1 39 1 134 1 252 2 180 1 181 1 112 1 138 1 231 1 97 1 164 1 166 1 234 1 270 2 204 1 45 1 289 1 101 1 241 1 273 1 103 1 83 1 
143 2 1 2 316 2 278 2 107 2 58 8 279 1 61 1 152 20 194 3 249 3 196 4 198 1 12 1 252 3 112 1 254 1 164 2 166 3 256 2 204 10 289 3 116 2 291 1 83 1 296 2 333 1 85 2 334 1 125 7 88 3 89 2 337 6 300 1 218 3 221 2 94 1 130 2 223 2 304 3 37 1 228 7 134 3 39 2 180 1 181 1 230 7 138 3 231 1 97 1 234 3 270 3 184 1 101 2 47 4 241 3 273 10 103 1 359 2 
54 1 84 1 107 2 337 4 30 1 218 2 221 2 152 2 265 1 94 1 249 7 304 8 224 1 66 1 37 1 132 1 111 2 198 1 159 1 252 1 134 8 348 1 181 2 112 1 138 2 231 1 309 1 164 2 166 2 234 2 270 1 287 1 204 1 289 2 101 3 241 2 273 1 103 1 83 1 
125 1 88 1 278 1 337 2 58 1 218 1 152 3 193 1 94 1 194 1 37 1 196 1 228 1 252 1 230 1 138 1 231 1 97 1 166 1 234 1 256 1 74 1 270 1 204 2 289 1 77 1 241 1 273 1 359 1 
228 1 125 1 230 1 88 1 297 1 138 1 337 2 58 1 234 1 166 1 218 1 152 2 289 1 47 1 241 1 273 2 66 1 359 1 
228 1 125 1 230 1 278 1 138 1 337 2 199 1 58 1 234 1 166 1 218 1 204 2 152 2 289 1 241 1 194 1 66 1 196 1 
228 2 125 2 230 2 278 1 88 1 138 1 337 2 58 2 234 1 166 1 218 1 256 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 66 1 196 1 359 1 
228 1 348 1 125 1 230 1 88 1 297 1 138 1 337 2 58 1 234 1 166 1 218 1 152 2 289 1 47 1 241 1 273 2 359 1 
228 1 348 1 125 1 230 1 278 1 138 1 337 2 199 1 58 1 234 1 166 1 218 1 204 2 152 2 289 1 241 1 194 1 196 1 
228 2 348 1 125 2 230 2 278 1 88 1 138 1 337 2 58 2 234 1 166 1 218 1 256 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 196 1 359 1 
228 2 125 2 230 2 278 1 88 1 138 1 337 2 58 2 234 1 166 1 218 1 256 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 196 1 359 1 
143 1 1 1 316 1 107 1 89 1 337 2 218 1 152 2 221 1 249 1 304 1 39 1 134 1 252 1 112 1 181 1 138 1 164 1 234 1 166 1 270 1 204 1 116 1 289 1 101 1 273 1 241 1 83 1 
1 1 316 1 107 1 89 1 337 2 57 1 218 1 152 2 221 1 9 1 249 1 304 1 134 1 252 1 112 1 181 1 138 1 164 1 234 1 166 1 270 1 204 1 330 1 289 1 101 1 273 1 241 1 83 1 
228 2 125 2 230 2 278 1 88 1 138 1 337 2 97 1 58 2 234 1 166 1 218 1 256 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 196 1 359 1 
143 1 1 1 125 2 278 1 88 1 89 1 107 1 337 2 58 2 218 1 152 4 221 1 130 1 194 1 249 1 304 1 196 1 228 2 39 1 134 1 159 1 252 1 230 2 138 1 164 1 234 1 166 1 256 1 270 1 204 2 116 1 289 1 101 1 47 1 273 2 241 1 359 1 
211 1 125 1 278 1 88 1 337 2 58 1 218 1 152 3 94 1 194 1 37 1 228 1 252 1 230 1 138 1 231 1 97 1 166 1 234 1 256 1 74 1 270 1 204 1 289 1 77 1 47 1 241 1 273 2 359 1 
123 1 333 1 335 4 245 1 88 5 278 4 337 6 317 2 338 1 58 8 218 3 150 1 279 1 7 3 61 1 8 1 152 41 131 1 194 5 344 1 346 1 95 1 196 4 282 1 158 1 133 1 67 1 12 1 40 1 324 4 183 1 166 3 256 4 204 21 289 3 184 1 47 4 291 1 272 3 241 3 273 20 261 1 359 4 
123 1 333 1 335 4 245 1 88 5 278 3 337 8 317 2 338 1 58 7 218 4 150 1 279 1 7 3 61 1 8 1 152 38 131 1 194 4 344 1 346 1 95 1 196 4 282 1 158 1 133 2 67 1 12 1 40 1 324 4 183 1 166 4 256 4 204 18 289 4 184 1 47 3 291 1 272 3 241 4 273 20 261 1 359 4 
123 1 333 1 335 4 88 8 278 7 337 4 317 1 338 1 58 14 218 2 150 1 279 1 7 4 61 1 8 1 152 52 131 1 194 8 344 1 346 1 95 1 196 7 158 1 133 1 67 1 12 1 40 1 324 4 183 2 166 2 99 2 256 7 204 25 289 2 184 1 47 7 291 1 272 2 241 2 273 27 261 1 359 7 
335 2 245 1 88 3 278 3 337 4 317 1 338 1 58 6 218 2 150 1 7 1 152 19 194 3 266 1 95 1 346 2 196 3 40 1 324 2 183 1 166 2 256 3 204 10 289 2 47 3 272 1 241 2 273 9 261 1 359 3 
123 1 335 2 88 3 278 2 337 6 317 2 338 2 58 4 218 3 150 1 7 2 8 1 152 26 131 1 194 2 344 1 346 1 95 1 196 2 158 1 133 2 67 1 40 1 324 4 166 3 256 3 204 12 289 3 47 2 241 3 273 14 272 2 261 1 359 3 
84 1 107 1 337 2 218 1 221 1 152 2 265 1 94 2 249 2 304 2 111 2 134 2 252 2 112 1 135 1 138 1 97 1 164 1 234 1 166 1 270 2 204 1 289 1 101 1 78 1 241 1 273 1 312 1 22 1 80 1 83 1 
87 2 198 1 134 2 159 1 161 1 69 1 127 1 164 1 339 1 203 1 220 1 221 1 92 1 192 1 249 2 304 2 209 1 345 1 294 1 
87 2 198 1 134 1 161 1 127 1 339 1 164 1 203 1 220 1 221 1 192 1 33 1 249 1 304 1 209 1 345 1 294 1 
54 1 134 1 251 1 181 1 285 1 107 1 164 1 30 1 220 1 221 1 92 1 101 1 249 1 304 1 
87 2 198 1 134 1 161 1 69 1 127 1 164 1 339 1 203 1 220 1 92 1 221 1 192 1 249 1 304 1 209 1 345 1 294 1 
48 1 
143 1 1 1 316 1 89 1 107 1 337 2 27 1 218 1 152 1 221 1 93 1 94 2 249 1 304 1 37 2 134 1 252 3 39 1 181 1 138 1 231 2 164 1 166 1 234 1 270 3 204 1 116 1 289 1 101 1 77 2 241 1 83 1 
333 1 186 2 212 1 126 2 190 2 349 1 299 1 216 4 149 1 264 2 207 1 10 4 49 1 36 1 176 2 
187 1 207 1 126 1 141 1 354 1 216 1 176 1 
186 1 126 1 148 1 299 1 216 2 149 1 10 1 63 1 175 1 176 1 178 1 349 1 200 1 98 1 329 1 207 1 49 1 
53 2 276 1 1 3 186 6 187 1 278 2 107 3 190 6 108 1 149 4 62 2 10 12 63 3 249 3 248 2 194 2 323 2 159 1 284 2 163 1 164 4 256 2 205 2 329 5 207 9 331 2 292 2 212 1 88 2 126 8 298 2 299 4 216 8 264 6 221 3 173 1 223 2 304 3 176 2 36 2 178 5 134 3 179 1 181 1 349 4 269 2 98 5 271 3 100 1 352 2 101 10 141 1 49 4 359 2 
123 1 186 3 212 1 335 1 88 2 278 2 126 5 190 5 299 2 216 5 149 2 264 5 7 1 8 1 62 2 10 6 63 1 131 1 194 2 344 1 36 1 176 2 323 1 67 1 178 1 349 2 98 1 256 2 327 1 329 1 207 8 290 1 272 1 49 2 359 2 
88 2 126 2 27 1 299 1 149 1 279 1 61 1 62 2 94 1 194 1 37 1 226 1 323 1 283 1 308 1 178 1 252 1 349 1 325 1 231 1 98 1 270 1 351 1 207 2 184 1 77 1 310 1 49 1 
187 1 126 1 349 1 299 1 216 1 149 1 207 1 141 1 49 1 176 1 
323 1 186 5 88 2 278 2 126 5 190 5 216 5 256 2 264 5 62 2 207 5 10 10 223 1 194 2 359 2 
329 1 178 1 63 1 216 1 176 1 98 1 
54 1 332 1 276 1 144 1 212 2 4 1 214 1 107 1 126 2 299 2 149 1 30 1 221 1 63 2 249 4 304 4 225 1 36 2 178 3 134 4 181 2 349 2 163 2 164 1 98 3 329 4 207 2 101 1 49 2 
263 1 321 1 
263 1 321 1 
263 1 321 1 
263 1 321 1 
263 1 321 1 
263 1 321 1 
263 1 321 1 
263 1 321 1 
25 1 6 1 
333 1 335 1 88 1 337 2 58 2 218 1 150 1 7 1 279 1 152 8 61 1 194 1 344 1 196 2 12 1 166 1 204 4 289 1 184 1 272 1 241 1 273 4 291 1 
333 1 335 2 88 2 337 4 58 3 218 2 150 1 279 1 7 1 61 1 152 11 194 1 344 1 196 2 68 1 12 1 183 1 166 2 256 1 204 5 289 2 184 1 47 1 291 1 272 1 241 2 273 6 359 1 
123 1 333 1 335 1 88 3 278 2 337 6 58 4 218 3 150 1 279 1 7 1 61 1 152 19 8 1 131 1 194 3 344 1 196 3 67 1 133 1 68 1 12 1 166 3 256 2 204 10 289 3 184 1 47 1 291 1 272 1 241 3 273 9 359 2 
123 1 333 1 335 1 88 3 278 1 337 6 58 5 218 3 150 1 279 1 7 1 61 1 152 17 8 1 194 2 131 1 344 1 196 3 133 1 67 1 68 1 12 1 166 3 256 2 204 7 289 3 184 1 47 2 291 1 272 1 241 3 273 10 359 2 
333 1 335 1 88 1 337 2 58 2 218 1 150 1 7 1 279 1 152 8 61 1 194 1 344 1 196 2 12 1 166 1 204 4 289 1 184 1 272 1 241 1 273 4 291 1 
123 1 335 1 88 2 278 2 337 2 58 2 218 1 150 1 7 1 152 12 8 1 194 2 131 1 344 1 196 1 67 1 166 1 256 2 204 6 289 1 47 1 272 1 241 1 273 6 359 2 
123 1 333 1 335 1 88 3 278 1 337 8 58 5 218 4 150 1 279 1 7 1 61 1 8 1 152 18 131 1 194 2 344 1 196 3 67 1 133 2 68 1 12 1 166 4 256 2 204 8 289 4 184 1 47 2 291 1 272 1 241 4 273 10 359 2 
123 1 335 1 245 1 88 3 278 2 337 8 58 6 218 4 150 1 7 1 8 1 152 16 131 1 194 2 344 1 196 3 67 1 133 2 166 4 256 3 204 7 289 4 47 3 272 1 241 4 273 9 359 3 
12 1 88 1 58 6 204 4 279 3 152 7 61 1 184 3 47 3 291 2 273 3 194 1 196 3 
123 1 333 1 335 1 245 1 88 3 278 1 337 8 58 4 218 4 150 1 279 1 7 1 61 1 8 1 152 18 131 1 194 2 344 1 196 3 67 1 133 2 12 1 166 4 256 2 204 8 289 4 184 1 47 1 291 1 272 1 241 4 273 10 359 2 
133 1 333 1 12 1 88 1 337 4 58 3 166 2 218 2 204 4 279 1 61 1 152 8 289 2 184 1 47 1 273 4 241 2 291 1 194 1 196 2 
333 1 12 1 88 1 58 2 204 3 279 1 61 1 152 6 184 1 354 1 291 1 273 3 194 1 196 2 
68 1 278 1 88 1 337 2 58 2 166 1 218 1 256 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 196 1 359 1 
335 2 278 1 88 1 183 1 58 2 256 1 204 4 7 1 152 7 47 1 272 1 273 3 194 1 196 1 359 1 
333 1 335 2 88 3 278 2 337 4 58 9 218 2 279 2 7 2 61 1 152 23 246 1 194 3 196 5 133 2 12 1 183 1 166 2 256 2 99 1 204 12 289 2 184 2 47 4 291 1 273 11 241 2 102 1 359 2 
204 1 152 1 335 1 
7 1 152 1 273 1 
68 1 88 1 278 1 337 2 166 1 58 3 218 1 256 1 204 3 152 6 289 1 47 1 241 1 273 3 223 1 194 1 196 2 359 1 
123 1 335 1 88 2 278 2 337 2 58 2 218 1 150 1 7 1 152 12 8 1 194 2 131 1 344 1 196 1 67 1 166 1 256 2 204 6 289 1 47 1 272 1 241 1 273 6 359 2 
88 1 58 2 204 3 279 1 61 1 152 6 184 1 47 1 273 3 194 1 196 1 
133 1 12 1 337 2 58 2 166 1 218 1 279 1 204 2 152 3 289 1 184 1 47 1 273 1 291 1 241 1 102 1 196 1 
88 2 337 2 166 1 58 5 218 1 150 1 279 2 204 5 152 10 61 1 289 1 184 2 310 1 47 2 241 1 273 5 194 2 196 3 
88 1 337 2 166 1 58 1 218 1 150 1 152 2 289 1 47 1 241 1 273 2 359 1 
278 1 88 1 337 2 58 2 166 1 218 1 256 1 150 1 204 2 152 4 289 1 47 1 241 1 273 2 194 1 196 1 359 1 
133 1 245 1 337 6 166 3 58 2 218 3 150 1 204 2 279 1 152 3 289 3 184 1 47 1 241 3 273 1 102 1 196 1 
333 1 145 1 335 4 245 1 88 5 278 3 337 10 58 12 218 5 150 1 279 3 7 3 61 2 152 34 194 5 196 7 133 2 68 1 12 1 183 1 166 5 256 3 204 18 140 1 289 5 184 3 47 5 291 1 272 1 241 5 273 16 102 1 242 1 359 3 
270 1 252 1 316 1 320 1 94 1 305 1 243 1 
252 1 316 1 5 1 286 1 270 1 155 1 320 1 94 1 240 1 305 1 120 1 243 1 
54 1 221 1 134 1 101 1 181 1 107 1 354 1 249 1 304 1 164 1 30 1 
143 1 1 1 252 2 134 1 316 1 181 1 107 1 89 1 231 1 164 1 270 2 221 1 101 1 94 1 249 1 304 1 103 1 37 1 
143 1 1 2 316 1 56 1 89 1 107 2 298 1 221 1 94 2 249 1 304 1 37 1 226 1 134 1 252 2 284 1 231 2 163 1 164 1 113 1 270 2 101 3 103 1 
1 2 316 1 56 1 89 1 107 2 57 1 298 1 221 1 94 2 249 2 304 2 37 1 226 1 134 2 252 2 284 1 231 2 163 1 164 1 113 1 202 1 270 2 101 3 103 1 
53 1 1 1 178 2 134 3 284 1 181 1 107 1 253 1 163 1 298 1 164 1 326 1 216 1 98 2 202 1 271 1 329 1 221 1 101 4 249 3 248 1 304 3 176 1 
53 1 1 1 178 2 134 3 284 1 181 1 107 1 163 1 298 1 164 1 216 1 98 2 202 1 205 1 271 1 329 1 221 1 101 4 249 3 248 1 304 3 176 1 
221 1 134 1 249 1 304 1 164 1 224 1 
132 1 111 1 84 1 275 1 1 1 198 1 159 1 106 1 134 7 179 1 181 2 107 2 309 1 164 3 287 1 221 2 101 3 249 6 304 7 23 1 224 1 
333 1 143 1 1 1 85 1 125 1 316 2 88 1 107 1 89 1 337 4 58 2 218 2 279 1 152 6 61 1 221 1 94 1 130 1 194 1 249 1 304 1 37 1 196 2 228 1 12 1 252 2 159 1 134 1 39 1 230 1 135 1 138 2 231 1 97 1 164 1 166 2 234 2 270 2 204 3 289 2 116 1 184 1 101 1 273 3 291 1 241 2 103 1 
53 1 276 1 187 1 126 1 216 1 299 2 149 2 63 1 249 1 248 1 304 1 176 1 178 3 134 1 181 1 349 2 98 3 269 1 236 1 205 1 271 1 329 2 207 1 101 2 331 1 141 1 49 2 292 1 
1 1 159 1 134 2 179 1 107 1 108 1 164 2 221 1 101 2 248 1 249 2 304 2 224 1 
54 1 134 4 159 1 181 1 107 1 164 1 30 1 202 1 221 1 101 1 170 1 249 4 304 4 
275 1 1 1 106 1 134 2 107 1 163 1 164 2 300 1 319 1 221 1 101 1 249 2 304 2 174 1 
221 1 87 1 134 1 181 1 161 1 249 1 209 1 304 1 164 1 294 1 
84 1 159 1 134 2 198 1 107 1 164 1 221 1 101 1 78 1 249 2 304 2 
54 1 84 1 134 5 159 1 181 1 107 2 163 1 309 1 164 2 30 1 287 1 221 2 101 3 170 1 249 4 304 5 
54 1 84 1 134 5 159 1 181 1 107 2 163 1 309 1 164 2 128 1 30 1 221 2 101 3 170 1 249 4 304 5 
1 1 252 2 134 1 316 1 181 1 107 1 89 1 231 1 164 1 57 1 270 2 221 1 101 1 94 1 249 1 304 1 103 1 37 1 
275 1 1 1 106 1 134 1 179 1 107 1 163 1 164 2 221 1 101 1 249 1 304 1 23 1 
252 1 189 1 270 1 258 1 94 1 312 1 322 1 80 1 22 1 
53 1 347 1 56 1 189 1 113 1 258 1 239 1 65 1 322 1 313 1 51 1 226 1 
258 1 316 1 189 1 313 1 322 1 
236 1 178 1 258 1 239 1 91 1 51 1 98 1 
235 1 86 1 213 1 182 1 137 1 280 1 21 3 82 1 293 3 71 1 59 1 
213 1 110 1 185 1 16 1 
213 1 82 1 
213 1 182 1 354 1 82 1 
213 1 182 1 21 1 82 1 293 1 71 1 59 1 
21 1 42 1 52 1 
213 1 182 1 90 1 137 2 318 1 71 1 165 1 59 1 280 1 21 3 293 3 82 1 
235 1 213 1 182 1 21 2 82 1 293 2 71 1 295 1 59 1 
87 1 213 1 161 1 353 1 280 1 21 1 127 1 293 1 71 1 16 1 59 1 
213 1 280 1 21 1 82 1 293 1 71 1 59 1 
182 1 280 1 21 1 82 2 293 1 71 1 59 1 
213 1 15 1 71 2 59 2 280 1 311 1 21 2 34 1 82 1 293 2 
86 1 213 2 182 1 71 1 59 1 16 1 235 2 280 1 21 3 82 1 293 3 110 1 121 1 
87 2 213 1 182 1 161 1 127 1 71 1 59 1 235 1 192 1 172 1 280 1 21 2 82 1 293 2 294 1 
213 2 182 1 71 2 59 2 16 1 235 2 280 1 21 4 82 1 293 4 104 1 110 1 295 1 
213 1 182 1 280 1 21 1 82 1 293 1 71 1 59 1 
213 3 182 2 137 1 90 1 71 1 165 1 59 1 16 1 235 2 21 4 82 2 293 4 110 1 185 1 
213 1 182 1 71 1 59 1 73 1 235 1 44 1 280 1 21 2 260 1 82 1 293 2 
307 1 213 1 182 1 90 1 137 2 71 1 165 2 59 1 280 1 21 3 293 3 82 1 
288 1 213 2 119 1 197 2 
280 1 21 1 114 1 293 1 71 1 59 1 
235 1 86 1 213 1 182 1 280 1 21 2 82 1 293 2 71 1 59 1 
117 1 
213 1 182 1 280 1 21 1 82 1 293 1 71 1 59 1 

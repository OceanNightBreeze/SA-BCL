#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 179 298 355 271 (112,248) (112,248) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 179 298 355 271 (112,248) (112,248) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 179 298 355 271 (112,248) (112,248) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 179 298 355 271 (112,248) (112,248) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (134,193) (134,193) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 179 298 355 271 113 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 179 298 355 271 113 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,220,241) (138,191,374) (138,191,374) (138,191,374) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (119,220,241) (138,191,374) (138,191,374) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (119,220,241) (138,191,374) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (119,220,241) (138,191,374) (138,191,374) (138,191,374) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 2 38 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 238 64 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 365 72 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 137 365 72 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 137 365 351 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 365 72 93 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 365 72 93 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,220,241) (119,220,241) (119,220,241) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (119,220,241) (119,220,241) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (119,220,241) (119,220,241) (119,220,241) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 2 38 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 179 298 355 271 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
298 2 172 1 299 1 158 1 315 1 355 2 214 1 271 1 227 1 332 2 112 1 3 2 168 2 357 1 307 1 248 1 95 4 335 1 97 4 179 2 180 1 196 1 
298 2 172 1 299 1 158 1 315 1 355 2 214 1 271 1 227 1 332 2 112 1 3 2 168 2 357 1 307 1 248 1 95 4 335 1 97 4 179 2 180 1 196 1 
298 2 172 1 299 1 158 1 315 1 355 2 214 1 271 1 227 1 332 2 112 1 3 2 168 2 357 1 307 1 248 1 95 4 335 1 97 4 179 2 180 1 196 1 
298 2 172 1 299 1 158 1 315 1 355 2 214 1 271 1 227 1 332 2 112 1 3 2 168 2 357 1 307 1 248 1 95 4 335 1 97 4 179 2 180 1 196 1 
298 2 158 1 52 1 78 2 22 1 355 1 214 1 36 1 332 1 306 1 168 1 357 3 307 1 95 4 204 1 335 1 97 4 179 3 
3 1 172 1 94 1 168 1 134 1 95 1 335 1 97 1 193 1 332 1 
298 1 52 1 355 1 227 1 332 2 3 1 168 2 357 1 95 3 204 1 335 1 97 3 179 2 
298 2 355 2 271 1 227 1 332 2 280 1 3 1 168 2 357 2 95 4 113 1 335 1 97 4 179 2 180 1 
298 2 355 2 271 1 227 1 332 2 280 1 3 1 168 2 357 2 95 4 113 1 335 1 97 4 179 2 180 1 
51 1 259 1 124 1 
293 1 259 1 165 2 
23 2 55 2 347 2 301 2 120 1 256 2 370 2 47 1 
185 1 301 3 229 1 159 1 255 1 256 2 131 1 330 2 69 1 188 1 23 3 55 2 25 1 98 2 358 1 57 1 287 1 216 2 10 2 75 1 173 1 120 1 121 1 240 1 319 1 123 2 79 1 270 1 347 2 41 1 151 1 369 1 154 1 370 2 43 1 47 1 274 1 
23 1 55 1 347 1 326 1 301 1 4 1 256 1 370 1 47 1 166 1 
301 1 353 1 51 1 212 1 259 1 37 1 166 1 55 1 23 1 26 1 373 1 16 1 311 1 375 1 
301 1 353 2 51 1 256 1 212 1 259 1 37 1 166 1 55 1 23 1 347 1 26 1 370 1 373 1 16 2 
254 1 353 1 317 1 223 1 16 1 
254 1 326 1 353 1 301 1 51 1 256 1 259 1 166 1 55 1 23 1 4 1 340 1 142 1 223 1 347 1 370 1 205 1 16 1 47 1 
254 1 353 1 16 1 
326 1 353 1 301 1 256 1 223 1 166 1 55 1 23 1 347 1 4 1 370 1 205 1 16 1 47 1 
259 1 
254 1 326 1 353 1 301 1 51 1 256 1 259 1 166 1 55 1 23 1 4 1 142 1 223 1 347 1 370 1 205 1 251 1 16 1 47 1 
156 1 326 1 254 2 301 1 353 4 20 1 161 1 256 1 68 2 51 2 259 2 166 1 23 1 55 1 24 2 215 1 4 1 236 2 237 4 116 2 56 1 58 1 31 1 359 2 122 1 142 1 344 2 223 2 144 1 291 5 347 1 15 1 84 1 370 1 205 1 16 4 47 1 18 1 
120 1 124 1 
253 1 301 2 210 1 120 2 256 1 55 2 23 2 347 1 370 1 
203 1 89 1 201 1 
301 1 229 1 159 1 120 1 219 1 330 1 69 1 319 1 240 1 23 1 151 1 369 1 98 1 43 1 57 1 216 1 
159 1 229 1 301 2 11 1 256 1 330 1 240 1 319 1 69 1 278 1 201 1 55 1 23 2 151 1 369 1 370 1 98 1 43 1 57 1 216 1 
23 3 55 3 347 1 301 3 120 1 11 1 256 3 370 3 
23 1 55 1 326 1 301 1 256 1 370 1 166 1 
23 1 55 1 253 1 347 1 301 1 210 1 256 1 370 1 166 1 
159 1 229 1 301 4 353 1 255 1 210 1 256 3 212 1 131 1 330 1 69 1 278 1 188 1 166 1 23 4 55 3 26 1 98 1 358 1 57 1 287 1 216 1 10 1 75 1 173 1 120 1 11 1 121 1 240 1 319 1 123 2 270 1 37 1 41 1 245 1 347 2 151 1 367 1 369 1 370 3 373 1 43 1 16 1 47 1 
23 2 55 2 301 2 62 1 120 1 11 1 256 1 370 1 375 1 
353 1 301 3 210 1 11 2 256 3 212 1 278 1 356 1 259 1 166 1 37 1 55 3 23 3 347 1 26 1 367 1 370 3 373 1 16 1 
301 2 210 1 11 1 256 2 201 1 55 2 23 2 347 1 203 1 370 2 
301 1 229 1 159 1 120 1 330 1 69 1 319 1 240 1 23 1 151 1 369 1 98 1 43 1 57 1 216 1 
301 1 159 1 120 1 231 1 330 1 69 1 319 1 240 1 23 1 150 1 151 1 369 1 98 1 43 1 216 1 
90 1 89 2 302 1 68 1 188 1 358 1 287 2 359 1 75 1 10 4 173 1 140 1 362 1 121 1 199 1 226 1 123 2 270 1 107 1 201 2 65 1 203 2 127 1 274 2 
23 1 55 1 301 1 256 1 370 1 206 1 373 1 166 1 
301 5 62 1 210 1 11 2 120 1 256 4 278 1 55 5 23 5 347 1 370 4 117 1 375 1 183 1 
23 2 55 2 326 1 301 2 256 2 370 2 206 1 166 1 
91 1 242 1 
91 1 242 1 
157 1 70 1 
157 1 70 1 
157 1 70 1 
334 1 91 1 242 1 
334 1 91 1 242 1 
91 1 277 1 242 1 
157 1 91 2 342 1 242 2 17 1 70 1 
334 1 91 1 242 1 
91 1 242 1 323 1 
91 1 242 1 323 1 
91 1 242 1 323 1 
0 1 128 1 34 2 50 1 353 2 130 2 91 2 109 1 103 1 276 3 257 2 242 2 304 1 259 1 324 2 16 2 169 1 17 1 32 2 
0 1 48 1 353 1 301 2 91 1 130 1 256 2 276 1 277 1 257 1 164 1 55 2 23 2 217 1 32 1 267 1 34 1 120 1 12 1 242 1 370 2 16 1 296 1 88 1 
158 1 307 1 214 1 
94 1 
94 1 
94 1 
94 1 
254 1 90 1 20 1 353 4 327 1 68 1 51 1 164 1 305 1 259 1 165 1 236 1 116 1 237 3 30 1 359 1 267 1 60 1 174 2 12 1 35 1 142 1 343 1 344 1 223 4 291 1 349 1 352 1 16 4 127 1 208 1 
254 6 90 3 275 5 353 8 20 1 327 2 68 3 51 1 164 4 305 3 259 5 165 9 235 1 236 2 116 2 237 8 136 1 359 3 314 1 197 1 60 2 317 5 35 1 142 1 223 7 344 2 106 1 291 6 293 3 349 6 86 1 352 6 16 8 18 1 127 3 
90 1 353 3 327 1 51 1 68 1 164 1 305 1 259 3 165 4 236 1 116 1 237 3 359 1 60 1 174 1 343 1 223 2 344 1 291 2 293 2 349 2 352 2 16 3 208 1 18 1 127 1 
90 2 353 4 327 1 51 1 68 2 164 2 305 2 259 4 165 7 236 1 116 1 237 5 136 1 359 2 197 1 60 1 174 2 343 1 344 1 223 3 291 4 293 3 349 4 352 4 86 1 16 4 18 1 208 1 127 2 
262 1 369 1 124 1 
369 1 228 1 
115 1 
151 1 369 1 
339 1 262 2 151 1 369 3 102 1 240 1 
151 1 369 1 240 1 
369 1 292 1 
10 7 300 1 161 1 68 1 199 2 354 1 145 2 80 1 65 3 247 1 84 1 27 1 5 1 287 3 58 1 359 1 274 4 
10 7 300 1 161 1 68 1 199 2 354 1 145 2 80 1 65 3 247 1 84 1 27 1 5 1 287 3 58 1 359 1 274 4 
10 7 300 1 161 1 68 1 199 2 354 1 321 1 145 2 80 1 65 3 247 1 84 1 27 1 5 1 287 3 58 1 359 1 274 4 
300 2 90 3 161 2 68 4 354 1 305 3 27 5 358 1 266 3 5 1 58 2 287 15 99 4 359 4 75 1 10 31 173 1 61 1 121 1 176 1 199 5 320 1 123 2 145 3 80 1 247 2 65 10 84 1 178 1 249 1 295 1 325 1 127 3 274 16 
300 1 161 1 68 1 354 1 27 1 358 2 287 4 58 1 359 1 9 1 75 2 10 9 173 2 121 2 364 1 199 3 320 1 123 4 145 2 80 1 247 1 65 4 84 1 274 5 
119 1 198 1 232 1 330 1 319 1 332 1 40 1 3 1 94 1 168 1 95 1 335 1 294 1 250 1 191 1 97 1 98 1 138 1 43 1 374 1 216 1 7 1 
119 1 232 1 110 1 330 1 319 1 332 1 40 1 3 1 94 1 168 1 357 1 95 2 294 1 250 1 191 1 97 2 98 1 138 1 43 1 286 1 216 1 7 1 8 1 
119 1 110 1 330 1 319 1 40 1 3 1 94 1 357 1 95 1 294 1 250 1 191 1 97 1 98 1 43 1 216 1 7 1 8 1 
330 1 69 1 213 1 260 1 332 1 3 2 168 1 95 1 97 1 98 1 118 1 74 1 7 2 216 1 286 1 319 1 105 1 151 1 294 2 250 2 369 1 43 1 46 1 
119 1 232 1 330 1 319 1 332 1 40 1 3 1 94 1 168 1 95 1 335 1 294 1 250 1 191 1 97 1 98 1 138 1 43 1 374 1 216 1 7 1 8 1 
63 1 
60 1 254 2 353 1 20 1 142 1 330 1 69 1 187 1 344 1 291 1 2 1 38 1 236 1 237 1 116 1 98 1 16 1 216 1 
254 2 301 1 353 2 212 1 166 1 23 1 55 1 282 1 135 1 26 1 29 1 311 1 341 2 238 1 142 1 239 1 81 1 37 1 373 1 16 2 251 1 375 1 
209 1 254 1 301 1 353 2 212 1 51 1 259 1 166 1 23 1 55 1 282 1 135 1 26 1 29 1 311 1 341 3 239 1 142 1 81 1 37 1 373 1 16 2 251 1 375 1 
209 1 254 2 301 1 353 2 212 1 166 1 23 1 55 1 282 1 135 1 26 1 29 1 311 1 341 3 238 1 142 1 239 1 64 1 81 1 37 1 373 1 16 2 251 1 375 1 
254 1 353 1 142 1 251 1 16 1 
209 1 254 2 20 1 353 2 301 1 212 1 165 1 166 1 55 1 23 1 282 1 135 1 263 1 26 1 236 1 237 1 116 1 137 1 29 1 311 1 289 2 341 3 238 1 142 1 77 2 239 1 269 1 344 1 64 1 146 2 200 1 81 1 291 1 37 1 293 1 373 1 16 2 375 1 
209 1 254 2 301 1 353 2 20 1 212 1 111 1 166 1 23 1 55 1 263 1 282 1 135 1 26 1 236 1 237 1 116 1 72 1 137 1 29 1 311 1 289 2 341 3 238 1 142 1 77 2 365 1 239 1 344 1 64 1 146 2 200 1 81 1 291 1 37 1 293 1 373 1 16 2 375 1 
254 2 301 1 353 2 20 1 212 1 111 1 166 1 23 1 55 1 263 1 282 1 135 1 26 1 236 1 237 1 116 1 72 1 137 1 29 1 311 1 289 1 341 2 238 1 142 1 77 1 365 1 239 1 344 1 64 1 146 1 200 1 81 1 291 1 37 1 293 1 373 1 16 2 375 1 
254 2 301 1 353 2 20 1 212 1 165 1 166 1 23 1 55 1 333 1 282 1 135 1 26 1 236 1 237 1 116 1 137 1 29 1 194 1 311 1 361 1 289 1 341 2 238 1 142 1 365 1 239 1 344 1 64 1 146 1 81 1 291 1 37 1 14 1 351 1 373 1 16 2 375 1 
209 2 254 3 20 1 301 1 353 2 212 1 111 1 93 1 166 1 23 1 55 1 263 1 282 1 135 1 26 1 236 1 237 1 116 1 72 1 137 1 29 1 311 1 289 2 341 4 238 2 142 1 77 2 365 1 239 1 344 1 64 2 146 2 200 1 81 1 291 1 37 1 293 1 373 1 16 2 375 1 
209 2 254 3 20 1 301 1 353 2 212 1 111 1 93 1 166 1 23 1 55 1 263 1 282 1 135 1 26 1 236 1 237 1 116 1 72 1 137 1 29 1 311 1 289 2 341 4 238 2 142 1 77 2 365 1 239 1 344 1 64 2 146 2 200 1 81 1 291 1 37 1 293 1 373 1 16 2 375 1 
209 1 254 2 20 1 353 2 301 1 212 1 165 1 166 1 55 1 23 1 333 1 282 1 135 1 26 1 236 1 237 1 116 1 137 1 29 1 311 1 361 2 289 2 341 3 238 1 142 1 239 1 269 1 344 1 64 1 146 2 81 1 291 1 37 1 14 1 373 1 16 2 375 1 
89 1 161 1 68 1 354 1 188 1 358 1 58 1 287 3 359 1 75 1 10 6 173 1 120 2 121 1 199 2 123 2 145 1 270 1 80 1 107 1 201 1 124 1 65 2 203 1 84 1 274 3 
185 1 89 11 90 1 255 1 68 2 305 2 189 1 188 1 27 1 358 2 266 3 6 1 287 6 99 3 359 1 75 2 10 14 59 1 173 2 120 1 121 2 224 1 199 1 123 4 270 2 201 11 65 2 203 4 249 1 325 1 126 1 127 2 274 8 
159 1 229 1 301 2 185 1 255 1 330 1 256 1 69 1 278 1 188 1 23 2 55 1 98 1 358 1 57 1 6 1 216 1 287 1 171 1 75 1 10 2 173 1 120 1 219 1 11 1 141 1 121 1 240 1 319 1 123 2 270 1 203 1 151 1 369 1 42 1 370 1 43 1 274 1 
49 1 185 1 229 2 89 7 90 2 330 3 278 1 188 3 55 1 98 3 6 1 57 2 58 1 287 10 8 1 10 20 11 1 100 2 240 2 199 4 104 1 145 1 201 7 149 1 65 8 203 7 151 2 297 2 301 3 159 2 255 1 211 2 161 1 256 1 68 3 69 1 354 1 305 2 23 3 27 4 358 3 216 3 170 2 359 3 75 3 173 3 120 2 121 3 319 2 123 6 270 3 80 1 41 2 84 1 369 2 370 1 43 2 127 2 274 10 
301 1 185 1 255 1 256 1 330 7 163 1 69 2 213 1 258 1 188 2 23 1 55 1 133 1 98 8 358 2 216 8 287 1 8 1 75 2 10 2 173 2 33 1 198 1 11 1 121 2 319 2 243 1 123 4 270 2 105 1 107 1 151 2 368 1 369 3 370 1 85 1 154 2 43 2 274 1 
89 1 301 1 90 1 210 1 256 1 68 1 305 1 188 1 55 1 23 1 358 1 6 1 287 2 359 1 75 1 10 3 173 1 121 1 199 1 123 2 270 1 201 1 83 1 347 1 65 1 203 1 370 1 127 1 274 1 
10 2 75 1 173 1 89 1 302 1 121 1 68 1 123 2 270 1 107 1 188 1 201 1 65 1 203 1 27 1 358 1 127 1 274 2 
10 2 75 1 173 1 89 1 90 1 121 1 199 1 123 2 226 1 270 1 107 1 188 1 201 1 65 1 203 1 358 1 287 2 359 1 
10 4 75 1 173 1 90 1 89 2 121 1 68 1 199 1 123 2 270 1 305 1 107 1 188 1 201 2 65 2 203 2 27 1 358 1 287 2 127 1 359 1 274 2 
10 2 75 1 173 1 89 1 302 1 121 1 68 1 123 2 270 1 188 1 201 1 65 1 203 1 27 1 85 1 358 1 127 1 274 2 
10 2 75 1 173 1 89 1 90 1 121 1 199 1 123 2 226 1 270 1 188 1 201 1 65 1 203 1 85 1 358 1 287 2 359 1 
10 4 75 1 173 1 90 1 89 2 121 1 68 1 199 1 123 2 270 1 305 1 188 1 201 2 65 2 203 2 27 1 85 1 358 1 287 2 127 1 359 1 274 2 
75 1 10 4 173 1 90 1 89 2 121 1 68 1 199 1 123 2 270 1 305 1 188 1 201 2 65 2 203 2 27 1 358 1 287 2 127 1 359 1 274 2 
185 1 159 1 229 1 301 1 255 1 330 1 69 1 188 1 23 1 98 1 358 1 57 1 216 1 287 1 10 2 75 1 173 1 120 1 121 1 240 1 319 1 123 2 270 1 41 1 151 1 369 1 43 1 274 1 
185 1 159 1 301 1 1 1 255 1 231 1 330 1 69 1 188 1 23 1 98 1 358 1 216 1 287 1 10 2 75 1 173 1 120 1 121 1 240 1 319 1 123 2 270 1 151 1 150 1 369 1 43 1 274 1 
10 4 75 1 173 1 90 1 89 2 121 1 68 1 199 1 123 2 270 1 305 1 188 1 201 2 65 2 203 2 27 1 358 1 6 1 287 2 127 1 359 1 274 2 
90 1 89 2 159 1 229 1 301 1 68 1 330 1 305 1 188 1 23 1 27 1 98 1 358 1 57 1 287 2 216 1 359 1 10 4 75 1 173 1 198 1 121 1 240 1 319 1 199 1 123 2 270 1 201 2 41 1 65 2 203 2 151 1 369 1 43 1 297 1 127 1 274 2 
90 1 301 1 89 1 210 1 256 1 68 1 305 1 188 1 55 1 23 1 27 1 358 1 6 1 287 1 359 1 75 1 10 3 173 1 121 1 123 2 270 1 201 1 347 1 65 1 203 1 153 1 370 1 127 1 274 2 
90 3 68 3 331 1 186 1 305 3 167 1 308 1 27 3 358 2 284 1 266 1 309 2 287 10 99 2 359 3 75 2 10 19 173 2 290 1 121 2 364 1 199 3 225 2 123 4 65 6 249 1 325 1 45 1 127 3 274 9 
90 2 68 3 331 1 186 2 305 3 53 1 167 1 27 2 308 1 358 3 265 1 266 2 195 1 338 1 287 12 309 4 99 2 359 2 75 3 10 26 173 3 290 2 121 3 364 1 320 2 199 2 225 1 123 6 272 1 65 4 249 2 127 3 274 14 19 1 
90 4 331 1 186 2 53 1 195 1 287 21 338 1 58 1 99 4 10 41 290 1 199 4 13 1 145 1 65 8 249 3 19 1 161 1 68 5 354 1 305 4 167 1 27 4 308 1 358 3 265 1 266 3 309 4 359 5 75 3 173 3 121 3 364 1 320 1 123 6 225 1 80 1 272 1 84 1 325 1 45 1 127 4 274 20 
90 3 161 1 68 5 331 1 186 2 354 1 305 4 53 1 167 1 308 1 27 3 358 4 265 1 266 3 195 1 58 1 338 1 309 4 287 18 99 4 359 4 75 4 10 38 173 4 290 1 121 4 364 1 13 1 320 2 199 4 225 1 145 1 123 8 80 1 272 1 65 7 84 1 249 3 325 1 45 1 127 4 19 1 274 20 
90 7 161 1 68 8 331 1 186 1 354 1 305 7 53 1 189 2 167 1 308 1 27 7 358 2 265 1 266 4 195 1 58 1 338 1 309 4 287 25 99 4 359 8 75 2 10 52 173 2 290 1 121 2 364 1 320 1 199 7 225 1 145 1 123 4 80 1 272 1 65 14 84 1 249 2 325 2 127 7 19 1 274 27 
218 1 34 1 130 1 91 1 162 1 257 1 242 1 264 1 313 1 32 1 
277 1 217 1 
34 1 152 1 91 1 130 1 242 1 257 1 312 1 288 1 32 1 
0 1 128 1 34 1 50 1 353 1 130 1 91 1 109 1 103 1 276 2 257 1 242 1 259 1 324 1 16 1 169 1 17 1 32 1 
0 1 128 1 34 1 50 1 353 1 130 1 91 1 109 1 103 1 276 2 257 1 242 1 259 1 324 1 16 1 169 1 17 1 32 1 
0 1 128 1 34 1 50 1 353 1 130 1 91 1 109 1 103 1 276 2 257 1 242 1 259 1 324 1 16 1 169 1 17 1 32 1 
334 1 342 1 54 1 
334 1 342 1 54 1 
155 1 323 1 
342 1 155 1 323 1 
296 1 88 1 
48 1 50 1 301 2 353 1 91 1 130 1 256 2 276 1 277 1 257 1 164 1 23 2 55 2 217 1 32 1 267 1 34 1 120 1 12 1 223 1 177 1 242 1 324 1 370 2 16 1 296 1 88 1 
334 1 54 1 
342 1 155 1 323 1 
230 1 301 2 185 1 255 1 163 1 330 2 258 1 188 1 261 1 23 2 55 2 98 2 358 1 6 1 216 2 287 1 75 1 10 2 173 1 121 1 319 1 123 2 270 1 148 1 151 1 369 1 154 2 125 1 43 1 44 1 274 1 
119 1 198 1 220 1 330 2 232 1 319 1 241 1 143 1 40 1 94 1 250 1 98 2 43 1 216 2 8 1 
40 1 94 1 119 1 250 1 220 1 232 1 98 1 330 1 319 1 73 1 43 1 216 1 8 1 
76 1 330 1 319 1 69 1 143 1 213 1 260 1 105 1 151 1 250 1 369 1 98 1 43 1 216 1 
40 1 94 1 119 1 250 1 220 1 232 1 98 1 330 1 319 1 241 1 43 1 143 1 216 1 8 1 
285 1 
237 1 51 1 56 1 144 1 259 1 291 1 124 1 
254 1 20 1 51 1 142 1 77 1 344 1 259 1 200 1 165 1 291 1 293 1 263 1 236 1 116 1 237 1 
90 1 330 1 329 1 236 2 237 4 98 1 60 1 339 1 100 1 142 1 240 1 344 2 291 3 293 3 349 3 151 1 350 1 66 1 352 3 16 1 252 1 254 2 20 2 353 1 68 1 69 1 305 1 259 3 165 6 24 1 262 1 26 1 116 2 216 1 359 1 175 1 319 2 39 1 369 4 228 2 43 1 182 1 127 1 
326 1 90 2 51 2 187 1 53 1 281 1 55 1 4 1 236 2 237 8 338 1 99 1 60 1 142 1 344 2 291 5 293 3 347 1 349 5 15 1 249 1 352 5 205 1 19 1 254 1 301 1 20 2 68 2 256 1 305 2 259 5 165 6 166 1 23 1 24 2 116 2 265 1 266 1 359 2 366 1 272 1 370 1 127 2 47 1 
326 1 301 1 20 1 353 1 161 1 68 2 256 1 111 1 166 1 23 1 24 2 55 1 4 1 236 1 116 1 237 2 58 1 31 1 359 1 344 1 291 2 347 1 15 1 84 1 370 1 205 1 16 1 47 1 
20 1 51 1 344 1 144 1 259 1 291 1 236 1 116 1 237 1 56 1 
90 2 100 1 68 2 305 2 259 5 165 10 291 5 24 2 293 5 15 1 349 5 237 5 352 5 127 2 359 2 
326 1 254 1 301 1 256 1 142 1 51 1 259 1 166 1 23 1 55 1 347 1 4 1 370 1 205 1 47 1 
60 1 254 2 20 1 142 1 330 1 69 1 187 1 344 1 291 1 38 1 2 1 236 1 237 1 116 1 98 1 216 1 273 1 
301 3 229 1 159 1 255 1 330 1 256 2 131 1 69 1 188 1 23 3 55 2 98 1 358 1 57 1 287 1 216 1 10 1 75 1 173 1 120 1 121 1 319 1 240 1 123 2 270 1 347 2 41 1 151 1 369 1 370 2 43 1 47 1 
60 1 20 1 51 2 344 1 187 1 145 1 259 4 165 4 291 2 293 2 349 2 236 1 116 1 237 1 352 2 
34 1 28 1 32 1 
34 1 28 1 32 1 
34 1 109 1 279 1 88 1 32 1 
34 1 28 1 32 1 
34 1 132 1 32 1 
34 1 132 1 32 1 
34 1 132 1 32 1 
34 1 32 1 
91 1 242 1 
10 8 75 2 173 2 121 2 161 1 68 1 199 2 320 1 354 1 145 1 123 4 80 1 65 3 84 1 27 1 358 2 287 4 58 1 359 1 274 4 
10 6 161 1 68 1 354 1 199 2 145 1 80 1 124 1 65 2 84 1 287 3 58 1 274 3 359 1 
75 1 10 4 173 1 90 1 121 1 68 1 199 1 123 2 322 1 305 1 65 2 27 1 358 1 287 2 127 1 359 1 274 2 
10 7 90 1 68 1 199 1 305 1 65 2 249 1 27 1 325 1 266 1 287 4 99 2 127 1 359 1 274 3 
90 2 67 1 161 2 68 3 354 1 305 2 189 1 27 4 358 2 266 2 58 2 287 12 99 2 359 3 10 23 75 2 173 2 121 2 199 5 320 2 145 1 123 4 80 1 65 9 84 1 325 1 126 1 127 2 274 11 
10 1 287 1 99 1 
10 1 266 1 274 1 
75 1 10 6 173 1 90 1 121 1 100 1 68 1 199 2 123 2 322 1 305 1 65 3 27 1 358 1 287 3 127 1 274 3 359 1 
90 2 68 2 305 2 53 1 27 1 358 1 265 1 266 1 287 6 338 1 99 1 359 2 10 12 75 1 173 1 121 1 364 1 199 1 123 2 272 1 65 2 249 1 127 2 274 6 19 1 
10 6 161 1 68 1 199 1 65 2 84 1 27 1 287 3 58 1 274 3 359 1 
10 3 75 1 173 1 67 1 161 1 121 1 199 1 354 1 320 1 123 2 80 1 65 2 27 1 358 1 58 1 287 2 274 1 
75 1 10 10 173 1 121 1 161 2 364 1 68 2 199 3 123 2 65 5 84 1 27 2 358 1 31 1 58 2 287 5 274 5 359 2 
75 1 10 2 173 1 121 1 364 1 68 1 123 2 65 1 27 1 358 1 127 1 274 2 
75 1 10 4 173 1 90 1 121 1 364 1 68 1 199 1 123 2 305 1 65 2 27 1 358 1 287 2 127 1 359 1 274 2 
10 3 75 3 173 3 67 1 121 3 161 1 364 1 320 1 199 1 123 6 65 2 27 1 358 3 45 1 287 2 58 1 274 1 
67 1 90 3 161 3 68 5 354 1 305 3 27 5 358 5 266 3 58 3 287 18 99 4 359 5 75 5 10 34 173 5 61 1 121 5 364 1 320 2 199 7 145 1 123 10 322 1 80 1 65 12 84 2 178 1 249 1 295 1 325 1 45 1 127 3 274 16 
161 1 68 1 354 1 358 1 266 1 287 4 58 1 99 1 359 1 10 8 75 1 173 1 121 1 364 1 199 2 145 1 123 2 80 1 272 1 65 2 84 1 249 1 274 4 
161 1 68 2 354 1 305 1 27 1 358 2 266 1 58 1 287 5 99 2 359 1 10 11 75 2 173 2 121 2 364 1 199 2 145 1 123 4 322 1 80 1 272 1 65 3 84 1 249 1 325 1 127 1 274 6 
90 2 161 1 68 3 354 1 305 2 53 1 27 1 358 3 265 1 266 1 58 1 338 1 287 10 99 1 359 3 10 19 75 3 173 3 121 3 364 1 199 3 320 1 145 1 123 6 322 1 80 1 272 1 65 4 84 1 249 1 127 2 274 9 19 1 
90 1 161 1 68 3 354 1 305 2 53 1 27 2 358 3 265 1 266 1 58 1 287 7 338 1 99 1 359 2 10 17 75 3 173 3 121 3 364 1 320 1 199 3 145 1 123 6 322 1 80 1 272 1 65 5 84 1 249 1 127 2 274 10 19 1 
161 1 68 1 354 1 358 1 266 1 287 4 58 1 99 1 359 1 10 8 75 1 173 1 121 1 364 1 199 2 145 1 123 2 80 1 272 1 65 2 84 1 249 1 274 4 
90 2 68 2 305 2 53 1 27 1 358 1 265 1 266 1 287 6 338 1 99 1 359 2 10 12 75 1 173 1 121 1 364 1 199 1 123 2 272 1 65 2 249 1 127 2 274 6 19 1 
90 1 161 1 68 3 354 1 305 2 53 1 27 2 358 4 265 1 266 1 58 1 338 1 287 8 99 1 359 2 10 18 75 4 173 4 121 4 364 1 199 3 320 2 145 1 123 8 322 1 80 1 272 1 65 5 84 1 249 1 127 2 274 10 19 1 
90 2 68 3 305 3 53 1 27 3 358 4 265 1 266 1 338 1 287 7 99 1 359 2 10 16 75 4 173 4 121 4 364 1 199 3 320 2 123 8 272 1 65 6 249 1 45 1 127 3 274 9 19 1 
10 7 161 3 68 1 354 2 199 3 80 1 65 6 84 1 27 3 287 4 58 3 359 1 274 3 
90 1 161 1 68 3 354 1 305 2 53 1 27 1 358 4 265 1 266 1 58 1 338 1 287 8 99 1 359 2 10 18 75 4 173 4 121 4 364 1 199 3 320 2 145 1 123 8 80 1 272 1 65 4 84 1 249 1 45 1 127 2 274 10 19 1 
23 1 55 1 301 1 62 1 120 1 318 1 375 1 
301 1 268 1 62 1 120 1 21 1 318 1 244 1 71 1 55 1 23 1 192 1 375 1 
151 1 369 1 98 1 330 1 319 1 69 1 43 1 213 1 105 1 216 1 124 1 
159 1 301 2 229 1 120 1 11 1 256 1 330 1 240 1 319 1 69 1 55 1 23 2 151 1 369 1 370 1 98 1 43 1 216 1 
229 1 301 2 159 1 330 1 256 2 212 1 166 1 23 2 55 2 98 1 216 1 120 1 11 1 319 1 240 2 292 1 151 2 369 3 370 1 371 1 373 1 43 1 87 1 
301 2 159 1 231 1 330 2 256 2 212 1 166 1 23 2 55 2 98 2 216 2 120 1 11 1 319 1 240 2 292 1 202 1 151 2 369 3 370 1 371 1 373 1 43 1 87 1 
254 1 353 2 316 1 51 1 330 3 69 1 240 1 319 1 259 1 147 1 292 1 202 1 262 1 26 1 151 1 369 4 98 3 371 1 16 2 228 1 43 1 216 3 87 1 
254 1 353 2 51 1 330 3 69 1 240 1 319 1 259 1 292 1 202 1 262 1 26 1 151 1 369 4 98 3 371 1 66 1 16 2 228 1 43 1 216 3 87 1 
33 1 98 1 330 1 319 1 43 1 216 1 
339 1 33 1 198 1 92 1 330 6 69 2 222 1 240 1 319 3 258 1 243 1 133 1 151 2 368 1 369 3 154 1 98 7 181 1 43 2 216 7 8 1 
89 1 159 1 301 2 229 1 211 1 161 1 68 1 256 1 330 1 354 1 188 2 261 1 23 2 55 1 98 1 358 2 6 1 57 1 287 3 58 1 216 1 359 1 10 6 75 2 173 2 120 2 11 1 198 1 121 2 240 1 319 1 199 2 145 1 123 4 270 2 80 1 201 1 41 1 65 2 203 1 84 1 151 1 369 1 370 1 43 1 297 1 274 3 
326 1 329 1 330 1 51 2 55 1 4 1 236 2 237 4 98 1 56 1 58 1 142 1 344 2 144 1 291 5 347 1 15 1 66 1 205 1 16 2 252 1 254 2 301 1 353 2 20 2 161 1 68 2 256 1 69 1 259 2 166 1 24 2 23 1 262 1 26 1 116 2 216 1 31 1 359 2 223 1 39 1 84 1 369 2 370 1 228 1 47 1 273 1 
339 1 33 1 198 1 330 2 240 1 319 2 262 1 350 1 151 1 369 2 98 2 43 1 216 2 
198 1 330 4 319 1 69 1 233 1 213 1 105 1 202 1 151 1 369 1 98 4 43 1 216 4 
92 1 330 2 221 1 101 1 240 1 319 2 149 1 151 1 369 1 98 2 181 1 43 1 216 2 87 1 
40 1 94 1 98 1 330 1 319 1 69 1 43 1 216 1 
198 1 330 2 319 1 258 1 148 1 151 1 369 1 98 2 43 1 216 2 8 1 
198 1 330 4 69 1 319 2 233 1 213 1 258 1 105 1 133 1 151 2 368 1 369 3 98 5 43 2 216 5 87 1 
198 1 330 4 69 1 319 2 233 1 213 1 258 1 105 1 348 1 151 2 368 1 369 3 98 5 43 2 216 5 87 1 
159 1 301 2 120 1 11 1 231 1 256 1 330 1 240 1 319 1 69 1 55 1 23 2 151 1 369 1 370 1 98 1 43 1 216 1 
339 1 92 1 330 1 222 1 240 1 319 2 151 1 369 1 98 1 181 1 43 1 216 1 87 1 
190 1 120 1 310 1 345 1 82 1 
353 2 129 1 120 1 51 1 212 1 223 1 259 1 234 1 345 2 166 1 82 1 37 1 190 2 26 1 283 1 367 1 373 1 16 2 310 2 
230 1 301 1 345 1 82 1 190 1 55 1 23 1 125 1 44 1 
129 1 283 1 82 1 
204 1 179 1 52 1 124 1 
168 1 95 1 204 1 97 1 179 1 52 1 332 1 
3 1 95 1 294 1 
299 2 52 1 332 1 168 1 246 1 95 3 335 1 204 1 97 3 179 1 372 1 207 1 
168 1 357 1 95 2 204 1 97 2 179 1 52 1 78 1 332 1 
298 1 168 1 158 1 307 1 95 1 335 1 97 1 179 1 22 1 214 1 332 1 
168 1 95 1 204 1 335 1 97 1 179 1 332 1 
168 1 95 1 204 2 335 1 97 1 52 1 332 1 
363 1 332 2 168 2 95 2 204 1 335 1 97 2 96 1 179 1 336 1 
298 1 168 1 95 1 335 1 97 1 179 1 180 1 355 1 271 1 332 1 
168 1 94 1 95 1 335 1 303 1 97 1 332 1 
298 1 52 1 78 1 355 1 36 1 332 2 168 2 357 2 95 4 204 1 335 1 97 4 179 2 
168 1 95 1 204 1 335 1 97 1 179 1 52 1 332 1 
298 1 299 1 52 2 355 1 332 1 246 1 168 1 357 2 95 4 204 2 114 1 97 4 179 3 207 1 
184 1 52 1 332 1 280 1 168 1 346 1 357 1 95 2 204 1 335 1 97 2 179 1 
299 2 52 1 332 1 246 1 168 1 95 3 335 1 204 1 97 3 179 1 207 2 139 1 
108 2 360 1 328 1 179 2 
168 1 95 1 335 1 97 1 337 1 332 1 
52 1 332 1 168 1 95 1 335 1 204 1 114 1 97 1 180 1 
160 1 
168 1 95 1 204 1 335 1 97 1 179 1 52 1 332 1 
168 1 299 1 95 2 204 1 335 1 97 2 179 1 180 1 52 1 332 1 
298 1 114 1 179 1 355 1 
204 1 179 1 

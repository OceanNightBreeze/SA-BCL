#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 (256,343) (256,343) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 (256,343) (256,343) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 (256,343) (256,343) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 (256,343) (256,343) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 186 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 214 186 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 118 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (52,115,145,273) (52,115,145,273) 276 344 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 203 1 249 1 273 2 21 1 52 2 130 2 339 1 145 3 263 1 315 3 265 1 64 1 
115 4 78 1 270 1 203 1 249 2 365 1 334 1 273 2 21 2 82 1 12 1 71 1 52 2 130 2 276 1 214 1 339 2 145 7 297 1 256 1 263 1 343 1 315 6 209 1 
115 4 78 1 270 1 203 1 249 2 365 1 334 1 273 2 21 2 82 1 12 1 71 1 52 2 130 2 276 1 214 1 339 2 145 7 297 1 256 1 263 1 343 1 315 6 209 1 
115 4 78 1 270 1 203 1 249 2 365 1 334 1 273 2 21 2 82 1 12 1 71 1 52 2 130 2 276 1 214 1 339 2 145 7 297 1 256 1 263 1 343 1 315 6 209 1 
115 4 78 1 270 1 203 1 249 2 365 1 334 1 273 2 21 2 82 1 12 1 71 1 52 2 130 2 276 1 214 1 339 2 145 7 297 1 256 1 263 1 343 1 315 6 209 1 
115 1 145 2 273 1 263 1 315 1 52 1 276 1 214 1 
270 1 156 1 365 1 273 1 21 1 71 1 52 1 130 1 145 2 54 1 297 1 263 1 315 2 265 1 64 1 201 1 
115 5 78 1 203 1 249 2 334 1 273 2 21 1 52 2 130 2 276 1 214 1 339 2 145 7 181 1 263 1 315 6 186 1 
115 5 78 1 203 1 249 2 334 1 273 2 21 1 52 2 130 2 276 1 214 1 339 2 145 7 181 1 263 1 315 6 186 1 
1 1 362 1 348 1 81 1 22 1 2 1 368 1 274 1 23 1 108 1 151 1 90 1 380 1 373 1 
111 1 
147 1 362 2 140 1 111 1 50 1 2 2 228 1 373 1 
374 1 362 5 140 1 66 1 11 2 237 2 324 1 367 1 2 5 147 1 98 1 111 1 310 1 17 1 316 1 331 1 373 2 267 2 228 2 
140 1 111 1 250 1 
111 1 99 2 29 1 
108 2 308 1 348 2 90 2 81 2 274 2 368 1 380 2 
174 2 222 2 261 1 157 1 105 2 335 1 81 2 368 1 369 1 108 3 308 1 242 1 55 1 244 1 162 1 135 2 90 2 9 1 314 1 32 1 208 1 165 1 348 3 68 1 92 1 325 1 142 1 274 2 143 1 328 1 122 1 170 1 195 1 153 1 357 2 18 1 380 2 
108 1 1 1 348 1 90 1 81 1 22 1 274 1 368 1 23 1 380 1 
348 1 362 1 140 1 376 1 81 1 22 1 2 1 230 1 4 1 352 1 108 1 370 1 26 1 111 1 
348 1 362 2 140 1 81 1 22 1 2 2 274 1 230 1 4 1 108 1 370 1 26 1 111 1 90 1 380 1 
362 1 336 1 2 1 228 1 373 1 
243 1 147 1 362 2 140 1 111 1 2 2 228 1 373 1 
362 1 2 1 228 1 
348 2 304 1 81 2 274 1 108 2 308 2 90 1 220 1 380 1 
279 1 212 1 372 1 
174 1 348 1 222 1 157 1 105 1 325 1 369 1 108 1 308 1 55 1 244 1 153 1 27 1 314 1 208 1 18 1 
308 1 250 1 
174 1 348 2 222 1 157 1 105 1 81 1 325 1 212 1 53 1 369 1 108 2 244 1 55 1 153 1 90 1 314 1 61 1 18 1 380 1 208 1 
348 5 292 1 117 1 81 5 274 1 53 1 352 1 108 5 6 1 308 1 90 4 61 2 380 4 220 1 
108 2 348 2 90 2 81 2 22 1 23 1 380 2 258 1 
108 3 308 1 348 3 90 3 81 3 274 1 61 1 380 3 
108 1 348 1 90 1 81 1 22 1 23 1 380 1 
108 1 348 1 304 1 90 1 81 1 22 1 274 1 380 1 220 1 
174 1 362 1 222 1 157 1 105 1 335 1 81 3 22 1 2 1 368 1 53 1 369 1 4 1 108 4 308 1 242 1 370 1 26 1 244 1 55 1 162 1 135 1 90 3 314 1 32 1 61 1 208 1 165 1 319 1 348 4 92 1 325 1 274 2 230 1 143 1 122 1 170 1 195 1 153 1 357 2 18 1 220 1 380 3 300 1 
352 1 108 2 308 1 348 2 117 1 90 1 81 2 61 1 380 1 
362 1 348 3 81 3 22 1 274 1 2 1 53 1 230 1 107 1 4 1 108 3 26 1 370 1 111 1 90 3 61 2 220 1 380 3 319 1 
108 2 348 2 90 2 81 2 279 1 212 1 274 1 61 1 380 2 220 1 
174 1 348 1 222 1 157 1 105 1 325 1 369 1 108 1 308 1 55 1 244 1 153 1 314 1 208 1 18 1 
174 1 348 1 222 1 105 1 239 1 325 1 369 1 108 1 308 1 244 1 182 1 153 1 314 1 208 1 18 1 
335 1 106 1 5 1 242 1 135 4 226 1 290 1 165 1 372 2 268 1 138 1 92 1 212 2 70 1 253 1 143 1 328 2 42 1 122 2 195 1 357 2 359 1 279 2 360 1 
108 1 348 1 90 1 81 1 22 1 380 1 230 1 258 1 
233 1 137 1 225 1 
271 1 233 2 323 1 252 1 225 2 96 1 
233 1 225 1 
233 1 225 1 
252 1 96 1 
252 1 96 1 
252 1 96 1 
15 1 233 1 225 1 
15 1 233 1 225 1 
15 1 233 1 225 1 
311 1 233 1 225 1 
311 1 233 1 225 1 
311 1 233 1 225 1 
332 1 46 1 362 1 177 1 81 2 2 1 160 1 225 1 108 2 308 1 342 1 110 1 163 1 90 2 137 1 348 2 93 1 231 1 171 1 355 1 233 1 358 1 257 1 380 2 
332 2 362 2 271 1 79 1 177 1 364 2 2 2 225 2 160 3 85 1 231 2 133 1 171 2 111 1 233 2 199 1 257 2 299 1 187 1 
54 1 365 2 326 2 209 1 132 1 
270 1 365 1 209 1 
54 1 270 1 365 1 
54 1 139 1 365 3 326 1 132 1 209 2 
54 1 365 2 326 1 338 1 132 1 209 1 
46 1 362 5 221 1 237 1 158 2 2 5 367 3 24 1 342 1 309 1 111 2 58 1 245 1 29 1 226 1 227 2 316 1 267 1 228 1 373 4 268 1 374 2 140 1 11 1 93 1 253 1 147 1 42 1 255 1 99 3 200 1 298 2 
0 5 362 9 237 2 336 5 2 9 367 8 307 1 340 1 309 1 111 5 58 2 88 1 245 3 29 3 226 3 227 6 316 1 228 6 373 7 267 2 268 3 374 6 269 1 140 1 11 2 13 1 93 4 253 3 147 1 42 3 99 9 200 2 298 6 125 1 331 1 
362 3 221 1 237 1 158 1 2 3 367 3 111 3 58 1 245 1 29 2 226 1 227 2 373 2 267 1 268 1 374 2 140 1 11 1 93 1 253 1 42 1 255 1 99 4 200 1 298 2 331 1 
362 4 221 1 237 1 158 2 2 4 367 5 340 1 111 4 58 1 245 2 29 3 226 2 227 4 267 1 373 3 268 2 374 4 140 1 269 1 11 1 13 1 93 2 253 2 42 2 255 1 99 7 200 1 298 4 331 1 
116 1 
153 1 152 1 250 1 
153 1 128 1 
153 1 314 1 18 1 
153 1 312 1 
153 1 18 1 
188 1 152 2 153 3 80 1 314 1 18 1 
268 1 36 1 138 3 236 1 333 1 70 2 41 1 144 2 328 4 278 1 122 3 56 1 135 7 124 1 226 1 19 1 35 1 361 1 
172 1 333 1 335 1 178 1 205 1 288 1 109 3 56 1 135 31 245 3 226 4 246 1 35 2 165 1 36 5 268 4 138 10 70 5 378 4 14 1 253 3 143 1 328 16 144 3 41 2 278 1 42 3 122 15 195 1 124 1 357 2 197 1 19 2 361 2 
333 1 335 2 366 1 56 1 135 9 226 1 246 1 165 2 35 1 268 1 36 1 37 1 138 4 70 3 143 2 328 5 144 2 41 1 122 4 195 2 124 1 357 4 19 1 361 1 
268 1 36 1 138 3 333 1 70 2 41 1 144 2 328 4 278 1 122 3 56 1 135 7 124 1 226 1 19 1 35 1 361 1 
268 1 36 1 138 3 333 1 70 2 41 1 144 2 328 4 278 1 122 3 56 1 135 7 124 1 226 1 19 1 35 1 361 1 
174 1 155 1 222 1 291 2 223 1 168 1 21 2 273 1 105 1 325 1 52 1 369 1 145 1 97 1 216 1 262 1 86 2 153 1 345 1 315 1 18 1 208 1 330 2 
174 1 139 1 222 1 291 1 270 1 301 1 365 2 21 1 273 1 105 1 238 1 325 1 72 1 159 1 52 1 369 1 54 1 145 1 215 1 207 1 86 1 263 1 100 1 315 1 330 1 209 1 
174 1 222 1 301 1 365 2 105 1 21 1 238 1 52 1 159 1 130 1 369 1 54 1 86 1 207 1 263 1 315 2 265 1 64 1 209 1 115 1 291 1 139 1 270 1 272 1 273 1 325 1 72 1 145 2 100 1 330 1 
282 1 174 1 222 1 301 1 365 2 105 1 21 1 238 1 52 1 130 1 369 1 54 1 86 1 207 1 315 3 265 1 64 1 209 1 115 2 139 1 291 1 270 1 168 1 273 1 325 1 72 1 145 3 215 1 100 1 330 1 
282 1 174 1 222 1 301 1 365 2 21 1 105 1 238 1 130 1 369 1 54 1 86 1 207 1 315 2 265 1 64 1 209 1 115 2 291 1 139 1 270 1 325 1 145 2 215 1 330 1 
240 1 
48 2 284 1 285 1 237 1 105 2 2 5 3 1 161 2 4 1 108 1 111 2 345 1 208 2 348 1 167 1 11 1 119 1 352 1 354 2 216 1 18 1 174 2 362 5 222 2 303 1 363 1 20 2 81 1 22 1 367 2 179 1 369 1 370 1 26 1 184 1 89 2 29 2 264 1 33 2 316 1 228 6 267 1 374 2 140 1 376 1 325 1 230 1 277 1 147 3 99 2 153 1 329 1 198 2 200 1 154 4 
48 1 362 3 285 1 363 1 50 1 81 1 22 1 2 3 4 1 108 1 370 1 26 1 184 1 228 2 348 1 376 1 230 1 352 1 119 1 147 1 329 1 154 2 
362 3 285 1 363 1 20 1 50 1 81 1 22 1 2 3 4 1 108 1 370 1 26 1 111 1 184 1 228 1 348 1 140 1 376 1 230 1 352 1 119 1 147 1 329 1 154 3 
48 1 362 3 285 1 363 1 20 1 50 1 81 1 22 1 2 3 4 1 108 1 370 1 26 1 111 1 184 1 89 1 228 2 348 1 140 1 376 1 230 1 352 1 119 1 147 1 329 1 154 3 
48 4 362 5 285 1 363 1 20 4 237 1 50 1 287 1 81 1 22 1 367 1 179 1 2 5 161 2 4 1 108 1 370 1 26 1 111 5 184 1 89 4 29 2 33 2 316 1 63 1 267 1 228 7 347 1 374 1 348 1 140 5 376 1 167 1 11 1 294 1 230 1 352 1 119 1 147 3 354 2 194 1 329 1 198 2 154 6 
48 2 285 1 284 1 237 1 2 4 4 1 161 2 108 1 111 2 348 1 11 1 167 1 352 1 119 1 354 2 362 4 363 1 20 2 81 1 22 1 179 1 367 1 26 1 370 1 184 1 89 2 29 2 316 1 33 2 267 1 228 4 374 1 140 1 376 1 230 1 147 2 99 2 329 1 198 2 154 4 
48 2 362 4 285 1 363 1 20 2 237 1 81 1 22 1 367 1 179 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 2 29 2 33 2 63 1 316 1 228 4 267 1 347 1 374 1 348 1 140 1 376 1 167 1 11 1 230 1 352 1 119 1 147 2 354 2 194 1 329 1 198 2 154 4 
48 2 362 4 285 1 363 1 20 2 237 1 81 1 22 1 367 1 179 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 2 29 2 33 2 63 1 316 1 228 4 267 1 347 1 374 1 348 1 140 1 376 1 167 1 11 1 230 1 352 1 119 1 147 2 354 2 194 1 329 1 198 2 154 4 
48 2 362 4 175 2 285 1 363 1 20 2 237 1 81 1 22 1 367 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 2 30 1 316 1 317 2 228 4 267 1 347 1 374 1 348 1 140 1 376 1 167 1 11 1 69 1 213 1 230 1 352 1 119 1 147 2 354 2 99 2 329 1 154 4 
48 3 362 4 285 1 363 1 20 3 237 1 81 1 287 1 22 1 367 1 179 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 3 29 2 33 2 316 1 63 1 267 1 228 5 347 1 374 1 348 1 140 1 376 1 167 1 11 1 230 1 352 1 119 1 147 2 354 2 194 1 329 1 198 2 154 5 
48 3 362 4 285 1 363 1 20 3 237 1 81 1 287 1 22 1 367 1 179 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 3 29 2 33 2 316 1 63 1 267 1 228 5 347 1 374 1 348 1 140 1 376 1 167 1 11 1 230 1 352 1 119 1 147 2 354 2 194 1 329 1 198 2 154 5 
48 2 362 4 284 1 175 2 285 1 363 1 20 2 237 1 81 1 22 1 367 1 2 4 161 2 4 1 108 1 370 1 26 1 111 1 184 1 89 2 316 1 317 2 228 4 267 1 374 1 348 1 140 1 376 1 167 1 11 1 213 1 230 1 119 1 352 1 147 2 354 2 99 2 329 1 154 4 
174 8 222 7 105 8 106 1 81 1 335 2 369 2 108 1 242 2 162 1 135 2 90 1 9 2 345 1 61 1 208 2 165 2 114 1 348 1 91 1 293 1 375 1 272 1 349 1 92 2 350 1 325 2 142 1 327 1 143 2 328 1 215 1 122 1 216 1 195 2 153 3 357 4 380 1 18 2 
335 1 81 1 108 1 242 1 135 3 8 1 90 1 245 1 226 1 372 1 165 1 268 1 348 1 138 1 92 1 70 1 212 1 274 1 253 1 143 1 328 1 42 1 122 2 195 1 16 1 357 2 279 1 380 1 220 1 
333 1 335 1 106 1 242 1 308 2 56 1 135 6 226 1 165 1 35 1 372 1 268 1 138 2 250 1 92 1 212 1 70 2 143 1 328 3 144 1 122 3 195 1 124 1 357 2 279 1 361 1 
173 1 176 1 335 2 178 1 84 1 308 1 242 1 109 3 162 1 135 14 8 1 245 2 226 2 165 2 372 11 36 1 268 1 138 2 67 1 92 2 142 1 70 1 212 11 378 3 253 1 143 2 328 8 42 2 122 6 195 2 357 4 197 1 279 4 
174 1 222 1 157 1 51 1 105 1 335 1 81 1 53 1 369 1 108 2 308 1 242 1 244 1 55 1 162 1 27 1 135 2 8 1 90 1 314 1 61 1 208 1 165 1 318 1 348 2 92 1 325 1 142 1 275 1 143 1 328 1 122 1 195 1 153 1 357 2 279 1 18 1 380 1 
333 1 103 1 157 2 105 3 335 3 53 1 108 3 242 3 55 2 244 2 56 1 162 1 57 1 8 1 245 2 61 1 208 1 165 3 348 3 70 4 212 7 253 2 215 1 122 10 123 2 124 1 356 2 357 6 18 2 361 1 174 3 222 3 81 1 369 2 308 2 135 20 90 1 226 3 314 2 32 2 35 1 372 7 268 3 36 4 138 8 141 1 92 3 325 2 142 1 40 2 143 3 144 1 328 10 42 2 195 3 153 2 43 2 279 7 380 1 
36 1 138 1 106 1 92 1 335 1 212 1 143 1 242 1 328 2 42 1 195 1 135 2 357 2 359 1 226 1 279 1 372 1 165 1 
268 1 138 1 106 1 92 1 335 1 70 1 212 1 253 1 143 1 242 1 122 2 195 1 135 2 357 2 279 1 360 1 372 1 165 1 
335 1 106 1 242 1 135 4 245 1 226 1 165 1 372 2 36 1 268 1 138 2 92 1 212 2 70 1 253 1 143 1 328 2 42 1 122 2 195 1 357 2 279 2 
36 1 138 1 349 1 92 1 335 1 212 1 143 1 242 1 328 2 42 1 195 1 135 2 357 2 359 1 226 1 279 1 372 1 165 1 
268 1 138 1 349 1 92 1 335 1 70 1 212 1 253 1 143 1 242 1 122 2 195 1 135 2 357 2 279 1 360 1 372 1 165 1 
335 1 242 1 135 4 245 1 226 1 165 1 372 2 36 1 268 1 138 2 349 1 92 1 212 2 70 1 253 1 143 1 328 2 42 1 122 2 195 1 357 2 279 2 
335 1 242 1 135 4 245 1 226 1 165 1 372 2 36 1 268 1 138 2 92 1 212 2 70 1 253 1 143 1 328 2 42 1 122 2 195 1 357 2 279 2 
174 1 222 1 157 1 105 1 335 1 369 1 108 1 308 1 242 1 244 1 55 1 162 1 135 2 314 1 32 1 208 1 165 1 348 1 92 1 325 1 142 1 143 1 328 1 122 1 195 1 153 1 357 2 18 1 
174 1 222 1 105 1 335 1 239 1 369 1 108 1 308 1 242 1 244 1 162 1 182 1 135 2 314 1 208 1 165 1 348 1 92 1 325 1 142 1 143 1 328 1 150 1 122 1 195 1 153 1 357 2 18 1 
335 1 242 1 135 4 245 1 8 1 226 1 165 1 372 2 36 1 268 1 138 2 92 1 212 2 70 1 253 1 143 1 328 2 42 1 122 2 195 1 357 2 279 2 
174 1 222 1 157 1 105 1 335 1 369 1 108 1 242 1 244 1 55 1 135 4 245 1 226 1 314 1 32 1 372 2 165 1 268 1 36 1 348 1 138 2 272 1 92 1 325 1 70 1 212 2 253 1 40 1 143 1 328 2 42 1 122 2 195 1 153 1 357 2 279 2 18 1 
335 1 81 1 108 1 242 1 135 3 8 1 90 1 245 1 226 1 165 1 372 1 268 1 36 1 348 1 138 1 166 1 92 1 274 1 212 1 253 1 143 1 328 2 42 1 122 1 195 1 357 2 279 1 380 1 220 1 
302 2 335 2 178 1 204 1 341 1 109 1 135 19 245 3 226 3 346 1 165 2 320 1 248 1 36 3 268 3 37 1 138 6 70 3 378 2 39 2 253 3 143 2 328 9 42 3 122 10 195 2 357 4 197 1 76 1 280 1 
302 4 335 3 178 2 204 2 341 2 109 2 28 1 135 26 245 3 246 2 226 3 165 3 36 2 268 2 320 1 248 1 210 1 138 4 37 1 211 1 377 1 190 1 70 2 378 2 39 1 253 2 143 3 328 14 353 1 42 3 122 12 195 3 357 6 280 1 
283 1 333 1 302 4 335 3 178 3 204 1 341 2 109 3 56 1 28 1 135 41 245 4 246 1 226 5 35 1 165 3 320 1 248 1 36 4 268 5 210 1 37 1 138 8 211 1 377 1 190 1 70 4 378 4 39 1 253 4 143 3 144 1 328 20 353 1 42 4 122 21 195 3 124 1 357 6 197 1 76 1 280 1 361 1 
283 1 333 1 302 4 335 4 178 3 204 1 341 2 109 3 56 1 28 1 135 38 245 4 246 2 226 5 35 1 165 4 320 1 248 1 36 3 268 4 210 1 37 1 138 7 211 1 377 1 190 1 70 4 378 4 39 1 253 3 143 4 144 1 328 20 353 1 42 4 122 18 195 4 124 1 357 8 197 1 76 1 280 1 361 1 
333 1 302 4 335 2 178 2 204 1 84 1 341 1 109 3 56 1 28 1 135 42 245 5 246 1 226 6 35 1 165 2 268 6 320 1 248 1 36 5 210 1 37 1 138 10 211 1 377 1 190 1 70 5 378 3 39 1 253 5 143 2 144 1 328 22 353 1 42 5 122 20 195 2 124 1 357 4 197 1 280 1 361 1 
332 1 231 1 271 1 133 1 171 1 233 1 257 1 10 1 225 1 187 1 
355 1 137 1 
332 1 231 1 169 1 171 1 233 1 257 1 94 1 225 1 296 1 
15 1 232 1 
311 1 183 1 323 1 
332 1 362 1 271 1 79 1 177 1 364 1 2 1 225 1 160 2 85 1 231 1 133 1 171 1 111 1 233 1 257 1 299 1 187 1 
332 1 362 1 271 1 79 1 177 1 364 1 2 1 225 1 160 2 85 1 231 1 133 1 171 1 111 1 233 1 257 1 299 1 187 1 
332 1 362 1 271 1 79 1 177 1 364 1 2 1 225 1 160 2 85 1 231 1 133 1 171 1 111 1 233 1 257 1 299 1 187 1 
15 1 232 1 323 1 
15 1 232 1 323 1 
311 1 183 1 
311 1 183 1 323 1 
110 1 358 1 
332 1 46 1 362 1 364 1 81 2 2 1 225 1 160 1 108 2 308 1 342 1 110 1 163 1 90 2 59 1 137 1 373 1 348 2 93 1 231 1 171 1 355 1 233 1 358 1 257 1 299 1 380 2 
47 1 174 2 222 2 104 1 105 2 335 1 81 2 369 1 108 2 242 1 162 1 135 2 8 1 9 2 165 1 348 2 92 1 251 1 350 1 325 1 142 1 327 1 143 1 328 1 122 1 195 1 153 1 196 1 357 2 18 1 126 1 
174 1 222 1 223 1 105 1 325 1 369 1 289 1 148 1 216 1 86 1 153 1 345 1 18 1 208 1 
174 1 139 1 222 1 270 1 301 1 365 2 105 1 238 1 325 1 369 1 289 1 54 1 215 1 86 1 217 1 100 1 209 1 101 1 
174 2 139 1 222 2 270 1 272 1 301 1 365 2 105 2 238 1 325 1 369 1 289 1 54 1 215 1 86 1 217 1 100 1 209 1 101 1 
174 1 139 1 222 1 270 1 301 1 365 2 105 1 238 1 325 1 369 1 54 1 215 1 146 1 86 1 100 1 209 1 101 1 
286 1 
374 1 140 1 66 1 11 1 237 1 324 1 367 1 111 1 316 1 267 1 
268 2 374 5 367 5 180 2 253 2 379 1 42 2 99 10 111 5 43 1 245 2 226 2 29 5 227 5 298 5 
362 1 147 1 140 1 111 1 2 1 228 1 
174 4 362 3 222 4 202 2 303 1 237 2 224 1 105 4 367 2 2 3 3 1 369 1 264 2 345 1 31 1 316 1 208 2 267 2 228 4 65 1 374 2 11 2 325 1 147 2 216 1 153 1 200 2 18 1 331 1 
374 1 140 1 111 1 66 1 250 1 324 1 367 1 
362 1 237 1 367 1 179 1 2 1 111 2 29 1 33 1 316 1 267 1 228 1 374 1 140 1 11 1 147 1 99 1 198 1 
202 1 237 4 105 3 337 1 2 5 111 8 245 2 208 1 66 1 11 4 253 2 75 2 298 6 18 3 174 3 362 5 222 3 128 3 224 1 80 1 367 9 180 2 25 2 369 4 131 2 26 2 371 2 312 2 29 6 226 2 264 1 227 6 314 3 316 4 34 2 267 4 228 5 268 2 374 8 140 2 272 1 191 1 324 1 325 3 229 2 95 1 379 2 147 3 42 2 99 12 153 10 152 2 43 2 200 2 
362 1 237 2 178 1 2 1 367 8 180 2 109 1 111 5 28 1 245 2 29 3 226 2 264 1 227 5 316 2 247 1 228 1 267 2 268 2 374 5 210 1 140 2 377 1 190 1 11 2 378 1 253 2 379 1 73 1 147 1 353 1 42 2 99 6 200 1 298 5 
1 1 362 1 237 1 81 1 22 1 2 1 367 2 368 1 23 1 180 2 108 1 56 1 7 1 90 1 226 2 316 1 35 1 267 1 268 1 348 1 374 2 11 1 274 1 379 1 194 1 151 1 380 1 361 1 
174 1 222 1 157 1 105 1 81 2 335 1 368 1 369 1 108 3 308 1 242 1 55 1 244 1 162 1 135 1 90 2 314 1 32 1 208 1 165 1 348 3 92 1 325 1 274 2 143 1 122 1 170 1 195 1 153 1 357 2 380 2 18 1 
374 2 140 2 11 1 237 1 367 1 144 1 99 4 111 4 29 2 200 1 227 2 264 1 298 2 316 1 267 1 
171 1 110 1 83 1 257 1 187 1 
171 1 127 1 257 1 
171 1 127 1 257 1 
171 1 127 1 257 1 
193 1 171 1 257 1 
193 1 171 1 257 1 
193 1 171 1 257 1 
171 1 257 1 
233 1 225 1 
36 2 268 2 37 1 138 5 335 1 70 3 143 1 328 5 122 5 56 1 195 1 7 1 135 10 357 2 226 2 165 1 361 2 35 2 
36 1 37 1 138 1 335 1 143 1 328 2 42 1 195 1 135 2 357 2 226 1 165 1 
268 1 36 1 138 2 37 1 335 1 70 1 253 1 143 1 328 2 42 1 122 2 195 1 135 4 357 2 245 1 226 1 165 1 
36 1 37 1 138 2 335 3 70 1 254 1 143 3 328 1 122 2 195 3 135 3 357 6 246 1 76 1 165 3 361 1 35 1 
172 1 333 1 335 5 178 1 205 1 288 1 109 3 56 2 135 34 87 1 245 3 246 2 226 5 35 3 165 5 36 5 268 5 37 1 138 12 70 7 378 4 254 1 253 3 143 5 144 1 328 16 42 3 122 18 195 5 124 1 357 10 197 1 76 1 361 3 
268 1 36 1 138 3 333 1 335 2 70 2 143 2 144 1 328 4 56 1 122 4 195 2 135 8 124 1 357 4 226 1 246 1 165 2 361 1 35 1 
268 1 138 2 333 1 250 1 70 2 144 1 328 3 122 3 56 1 135 6 124 1 226 1 361 1 35 1 
268 1 36 1 138 2 335 1 70 1 253 1 143 1 328 2 42 1 122 2 195 1 135 4 87 1 357 2 245 1 226 1 165 1 
328 1 109 1 122 1 135 2 178 1 378 1 
173 1 333 1 335 1 84 1 109 2 56 2 7 1 135 25 245 2 226 5 246 1 35 2 165 1 268 5 36 4 138 8 70 4 378 2 253 2 143 1 144 1 328 13 42 2 122 12 195 1 124 1 357 2 197 1 361 2 
122 1 135 1 378 1 
328 1 109 1 135 1 
36 1 268 1 138 3 335 1 70 2 253 1 143 1 328 3 42 1 122 3 195 1 135 6 87 1 43 1 357 2 245 1 226 1 165 1 
335 1 178 1 109 1 135 12 28 1 245 2 226 2 165 1 36 1 268 2 210 1 37 1 138 2 190 1 377 1 70 1 378 1 253 2 143 1 328 6 353 1 42 2 122 6 195 1 357 2 
268 1 36 1 138 2 70 1 328 3 56 1 122 3 135 6 226 1 361 1 35 1 
36 1 138 2 333 1 335 1 70 1 254 1 143 1 328 1 122 2 195 1 135 3 124 1 357 2 246 1 35 1 361 1 165 1 
333 1 335 1 178 1 109 1 56 1 135 8 226 1 165 1 35 1 268 1 37 1 138 2 190 1 70 2 378 1 143 1 144 1 328 4 122 4 195 1 124 1 357 2 361 1 
333 1 335 2 178 1 109 1 56 1 135 11 87 1 245 1 226 2 35 1 165 2 268 1 36 1 37 1 138 3 190 1 70 2 378 2 143 2 144 1 328 6 42 1 122 5 195 2 124 1 357 4 197 1 361 1 
333 1 335 3 178 1 109 1 56 1 28 1 135 19 87 1 245 2 226 3 246 1 35 1 165 3 36 1 268 3 210 1 37 1 138 4 190 1 377 1 70 3 378 1 253 2 143 3 144 1 328 9 353 1 42 2 122 10 195 3 124 1 357 6 361 1 
333 1 335 3 178 1 109 1 56 1 135 17 28 1 87 1 245 2 246 1 226 3 35 1 165 3 36 2 268 2 210 1 37 1 138 5 190 1 377 1 70 3 378 1 253 1 143 3 144 1 328 10 353 1 42 2 122 7 195 3 124 1 357 6 361 1 
333 1 335 1 178 1 109 1 56 1 135 8 226 1 165 1 35 1 268 1 37 1 138 2 190 1 70 2 378 1 143 1 144 1 328 4 122 4 195 1 124 1 357 2 361 1 
335 1 178 1 109 1 135 12 28 1 245 2 226 2 165 1 36 1 268 2 210 1 37 1 138 2 190 1 377 1 70 1 378 1 253 2 143 1 328 6 353 1 42 2 122 6 195 1 357 2 
333 1 335 4 178 1 109 1 56 1 28 1 135 18 87 1 245 2 226 3 246 2 35 1 165 4 36 2 268 2 210 1 37 1 138 5 377 1 190 1 70 3 378 1 253 1 143 4 144 1 328 10 353 1 42 2 122 8 195 4 124 1 357 8 361 1 
335 4 178 1 109 1 28 1 135 16 245 3 226 3 246 2 165 4 36 3 268 2 210 1 37 1 138 6 377 1 190 1 70 3 378 1 253 2 143 4 328 9 353 1 42 3 122 7 195 4 357 8 76 1 
268 1 36 3 138 6 333 2 70 3 328 3 122 4 56 1 135 7 124 1 226 1 361 3 35 3 
333 1 335 4 178 1 109 1 56 1 28 1 135 18 245 2 226 3 246 2 35 1 165 4 36 1 268 2 210 1 37 1 138 4 377 1 190 1 70 3 378 1 253 1 143 4 144 1 328 10 353 1 42 2 122 8 195 4 124 1 357 8 76 1 361 1 
108 1 352 1 308 1 348 1 134 1 117 1 81 1 
235 1 348 1 259 1 117 1 305 1 81 1 352 1 108 1 308 1 134 1 136 1 281 1 
174 4 222 4 272 1 105 4 325 1 38 1 369 1 216 1 153 1 45 1 345 1 208 1 18 1 
174 2 222 2 189 1 202 1 105 2 129 1 325 1 369 2 149 1 57 1 153 1 314 1 18 1 164 1 
54 1 174 1 222 1 270 1 365 1 105 1 238 1 325 1 208 1 369 1 
174 2 215 1 222 2 272 1 153 1 104 1 105 2 325 1 18 1 327 1 369 1 
174 5 222 4 293 1 202 1 272 1 105 5 325 2 327 1 369 2 216 1 153 3 45 1 345 1 208 1 18 2 114 1 
174 5 222 4 293 1 202 1 272 1 105 5 325 2 192 1 327 1 369 2 216 1 153 3 45 1 345 1 208 1 18 2 
174 1 222 1 216 1 153 1 250 1 105 1 325 1 345 1 18 1 208 1 369 1 
174 1 348 2 222 1 157 1 105 1 81 1 325 1 369 1 108 2 308 1 244 1 153 1 90 1 314 1 61 1 18 1 380 1 208 1 
174 1 348 2 222 1 202 1 157 1 105 1 81 2 229 1 22 1 325 1 230 1 369 1 4 1 108 2 308 1 244 1 153 3 312 1 90 2 314 2 61 1 18 2 380 1 
174 2 348 2 222 2 202 1 105 2 81 2 229 1 22 1 325 1 38 1 230 1 369 1 4 1 108 2 308 1 244 1 182 1 153 3 312 1 90 2 314 2 61 1 18 2 380 1 
174 3 362 2 222 3 49 1 202 1 128 1 105 3 2 2 306 1 369 1 26 1 111 1 312 1 314 1 208 1 228 1 140 1 325 1 229 1 38 1 152 1 153 4 18 1 
174 3 362 2 140 1 222 3 202 1 128 1 105 3 229 1 325 1 2 2 38 1 369 1 131 1 26 1 111 1 153 4 152 1 312 1 314 1 208 1 18 1 228 1 
174 1 222 1 91 1 105 1 325 1 369 1 
174 7 91 1 222 6 293 1 375 1 272 1 80 1 105 7 129 1 325 2 327 1 369 3 215 1 149 1 153 3 44 1 9 1 314 1 208 2 18 2 114 1 
47 1 333 1 157 1 105 1 335 2 108 2 242 2 55 1 244 1 56 1 8 1 61 1 165 2 348 2 70 2 212 1 122 3 123 1 124 1 357 4 18 1 361 1 174 1 222 1 81 1 369 1 308 2 135 6 90 1 226 1 314 1 32 1 35 1 372 1 268 1 138 2 272 1 92 2 325 1 40 1 143 2 328 3 144 1 195 2 153 1 279 1 380 1 
174 1 362 3 222 1 128 1 237 2 224 1 105 1 367 1 2 3 25 1 131 1 26 1 371 1 111 1 208 1 316 2 267 2 373 1 228 2 374 1 140 1 66 1 11 2 324 1 147 1 153 2 152 1 75 1 
174 2 91 1 222 2 272 1 80 1 105 2 337 1 325 1 369 2 152 1 153 2 314 1 18 1 
174 1 348 2 222 1 105 1 81 1 325 1 369 1 108 2 308 1 244 1 182 1 153 1 90 1 314 1 61 1 18 1 380 1 208 1 
174 1 222 1 202 1 80 1 105 1 129 1 325 1 369 2 149 1 153 1 44 1 314 1 18 1 
348 1 251 1 81 1 351 1 108 1 120 1 196 1 62 1 126 1 
26 1 370 1 120 1 118 1 22 1 351 1 219 1 62 1 230 1 266 1 4 1 319 1 
308 1 120 1 351 1 62 1 266 1 
362 1 321 1 118 1 2 1 219 1 62 1 373 1 
145 1 273 1 263 1 315 1 265 1 52 1 130 1 64 1 
115 2 260 1 249 1 273 1 71 1 52 1 130 3 339 1 145 4 60 1 315 4 265 2 64 2 381 1 
115 1 273 1 52 1 130 1 206 1 145 2 181 1 263 1 315 2 218 1 265 1 64 1 
145 3 260 1 273 1 263 1 60 2 315 3 265 1 71 2 185 1 52 1 130 1 64 1 
322 2 102 1 112 1 130 2 
145 1 273 1 263 1 315 1 52 1 113 1 
115 1 145 2 334 1 273 1 263 1 315 2 265 1 52 1 130 1 64 1 
74 1 
145 1 273 1 263 1 315 1 265 1 52 1 130 1 64 1 
250 1 265 1 130 1 64 1 
145 1 273 1 315 1 265 1 52 1 130 1 64 1 
21 1 315 1 330 1 
260 1 273 1 52 1 71 2 130 1 145 3 234 1 263 1 60 1 315 3 265 1 64 1 
115 1 145 2 273 1 315 1 52 1 276 1 
339 1 145 1 270 1 365 1 273 1 263 1 315 1 52 1 130 1 209 1 241 1 
145 1 273 1 263 1 315 1 52 1 130 1 64 1 
145 1 273 1 263 1 315 1 265 1 52 1 64 2 
145 2 121 1 273 2 313 1 263 1 295 1 315 2 52 2 130 1 64 1 
115 2 78 1 249 1 273 1 334 1 52 1 130 2 339 1 145 3 263 1 315 3 265 1 64 1 
115 1 77 1 139 1 270 1 365 2 273 1 52 1 130 1 54 1 145 2 263 1 315 2 265 1 64 1 209 1 
115 1 145 2 273 1 344 1 263 1 315 1 52 1 276 1 
115 1 145 3 334 1 273 1 263 1 315 3 265 1 71 1 52 1 130 1 64 1 
339 1 249 1 130 1 381 1 
130 1 64 1 

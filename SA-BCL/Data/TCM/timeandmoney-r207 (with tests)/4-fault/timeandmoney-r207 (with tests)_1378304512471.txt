#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 13 (34,323) (34,323) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 13 (34,323) (34,323) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 13 (34,323) (34,323) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 13 (34,323) (34,323) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
337 1 295 1 77 2 34 1 48 1 241 1 55 1 297 2 319 1 133 1 24 1 344 1 323 1 382 1 13 1 203 1 
337 1 295 1 77 2 34 1 48 1 241 1 55 1 297 2 319 1 133 1 24 1 344 1 323 1 382 1 13 1 203 1 
337 1 295 1 77 2 34 1 48 1 241 1 55 1 297 2 319 1 133 1 24 1 344 1 323 1 382 1 13 1 203 1 
337 1 295 1 77 2 34 1 48 1 241 1 55 1 297 2 319 1 133 1 24 1 344 1 323 1 382 1 13 1 203 1 
130 1 337 1 74 2 1 1 107 3 77 4 48 1 241 1 55 1 297 4 319 1 369 3 329 1 309 1 255 2 331 1 13 1 203 1 
130 1 337 1 52 1 191 1 107 1 295 1 77 2 48 1 154 1 55 1 297 2 241 1 319 1 329 1 344 1 382 1 
130 1 337 2 261 1 74 1 1 1 107 2 77 3 55 2 297 3 319 1 369 1 329 1 382 1 
337 2 120 1 74 4 1 3 77 9 297 9 55 2 319 1 369 7 373 1 255 2 13 1 203 1 130 1 261 1 107 5 48 1 241 1 329 1 214 1 309 1 331 1 382 1 30 1 
337 2 120 1 74 4 1 3 77 9 297 9 55 2 319 1 369 7 373 1 255 2 13 1 203 1 130 1 261 1 107 5 48 1 241 1 329 1 214 1 309 1 331 1 382 1 30 1 
176 1 158 1 73 1 
251 1 200 2 73 1 
35 2 17 2 228 2 277 1 332 2 100 1 292 2 15 2 
363 1 316 1 166 1 5 1 100 1 253 1 35 3 299 1 144 1 228 2 277 1 38 1 65 2 231 1 324 1 39 2 279 1 258 1 15 2 348 2 43 1 17 3 205 1 46 1 281 2 47 1 282 1 86 1 306 1 379 1 111 2 87 1 51 2 266 1 217 2 332 3 357 1 268 2 360 1 291 1 292 3 
35 1 144 1 17 1 228 1 325 1 332 1 100 1 138 1 292 1 15 1 
248 1 223 1 35 1 144 1 26 1 114 1 158 1 324 1 375 1 332 1 73 1 260 1 292 1 291 1 
17 1 248 2 223 1 35 1 228 1 144 1 26 1 114 2 158 1 324 1 332 1 73 1 15 1 292 1 291 1 
174 1 114 1 248 1 147 1 341 1 
174 1 114 2 248 2 158 1 180 1 147 1 73 1 361 1 
174 1 114 1 248 1 
17 1 248 1 100 1 35 1 144 1 228 1 114 1 147 1 325 1 332 1 138 1 347 1 15 1 292 1 
73 1 
174 1 114 2 135 1 248 2 158 1 147 1 73 1 361 1 
16 1 174 2 248 5 83 2 121 1 366 1 212 1 114 5 289 1 330 2 158 1 147 2 182 1 71 2 128 1 12 1 73 1 41 1 361 1 
316 1 35 2 228 1 144 1 278 1 65 1 231 1 324 1 103 1 258 1 279 1 67 1 17 2 281 1 282 1 111 2 51 1 266 1 357 1 332 2 217 2 268 2 292 2 291 1 
176 1 277 1 
17 1 340 1 35 2 228 1 229 1 277 2 332 2 292 2 15 1 
197 1 278 1 186 1 
17 1 281 1 282 1 316 1 342 1 35 1 111 2 144 1 277 1 65 1 51 1 231 1 324 1 266 1 279 1 258 1 332 1 217 2 357 1 268 2 292 1 291 1 
35 3 17 3 228 3 277 1 332 3 67 1 15 1 292 3 
35 1 144 1 17 1 228 1 332 1 138 1 292 1 
35 1 144 1 17 1 228 1 229 1 332 1 340 1 292 1 15 1 
248 1 363 1 223 1 339 1 316 1 166 1 5 1 100 1 168 1 35 4 299 1 228 3 144 2 277 1 229 1 231 1 65 1 324 2 39 2 279 1 258 1 103 1 67 1 15 2 348 1 43 1 17 4 205 1 281 1 47 1 282 1 306 1 379 1 111 2 87 1 26 1 114 1 51 1 266 1 217 2 332 4 357 1 268 2 292 4 291 2 
35 2 17 1 228 1 277 1 375 1 332 2 67 1 110 1 292 2 
17 3 248 1 339 1 223 1 315 1 35 3 144 1 228 3 229 1 26 1 114 1 324 1 103 1 332 3 67 2 73 1 15 1 292 3 291 1 
17 2 35 2 228 2 229 1 278 1 332 2 67 1 186 1 15 1 292 2 
17 1 281 1 282 1 316 1 35 1 111 2 144 1 277 1 65 1 51 1 231 1 324 1 266 1 279 1 258 1 332 1 357 1 217 2 268 2 292 1 291 1 
17 1 281 1 85 1 316 1 165 1 35 1 111 2 144 1 277 1 65 1 51 1 231 1 324 1 279 1 258 1 332 1 357 1 217 2 268 2 292 1 291 1 
31 1 99 1 363 1 166 1 274 1 6 1 225 1 195 1 299 1 197 2 38 2 278 2 126 1 39 2 43 1 348 4 205 1 47 2 306 1 327 1 109 1 355 1 356 1 186 2 
35 1 353 1 144 1 17 1 228 1 332 1 291 1 292 1 
17 4 317 1 110 1 35 5 228 4 229 1 277 1 375 1 103 1 332 5 302 1 67 2 292 5 15 1 
353 1 35 2 144 1 17 2 228 2 332 2 138 1 292 2 
283 1 187 1 
283 1 187 1 
32 1 254 1 
32 1 254 1 
32 1 254 1 
145 1 283 1 187 1 
305 1 283 1 187 1 
336 1 32 1 283 2 246 1 254 1 187 2 
145 1 283 1 187 1 
145 1 283 1 187 1 
283 1 307 1 187 1 
283 1 307 1 187 1 
283 1 307 1 187 1 
334 2 336 1 222 2 312 1 45 1 248 2 313 2 283 2 273 2 367 1 156 1 114 2 50 1 201 2 73 1 173 3 95 1 96 1 187 2 
334 1 222 1 248 1 249 1 273 1 367 1 35 2 228 2 277 1 371 1 256 1 201 1 173 1 17 2 326 1 305 1 237 1 283 1 208 1 243 1 114 1 332 2 187 1 292 2 
48 1 241 1 203 1 
191 1 48 1 241 1 
191 1 153 1 262 1 48 3 240 1 203 2 
169 1 191 1 262 1 48 2 240 1 203 1 
191 1 262 1 48 2 240 2 203 1 
31 1 141 1 248 5 121 2 249 1 251 1 274 1 193 2 226 1 195 1 147 4 200 3 128 1 129 2 280 2 12 3 174 1 83 1 206 1 237 1 327 1 208 1 213 1 177 1 114 5 330 1 158 1 71 1 267 1 73 2 361 1 293 1 
31 3 0 1 141 2 248 9 121 6 251 3 164 1 274 3 341 5 226 2 195 3 147 7 200 9 128 1 129 6 233 1 280 6 12 8 41 1 174 6 83 2 84 5 327 3 208 4 177 1 114 9 330 2 158 1 71 2 29 1 72 1 73 5 93 1 361 1 293 3 
31 1 141 1 248 3 121 2 251 2 274 1 193 1 226 1 195 1 147 2 200 4 129 2 12 3 280 2 41 1 206 1 83 1 327 1 208 1 114 3 330 1 158 1 71 1 267 1 73 3 293 1 
31 2 141 1 248 4 121 4 251 3 274 2 193 2 226 1 195 2 147 3 200 7 129 4 233 1 280 4 12 5 41 1 83 1 206 1 327 2 208 2 114 4 330 1 158 1 71 1 72 1 267 1 73 4 93 1 293 2 
176 1 217 1 81 1 
284 1 217 1 
345 1 
111 1 217 1 
111 1 265 1 217 3 118 1 268 1 81 2 
111 1 217 1 268 1 
365 1 217 1 
31 3 348 14 163 1 47 6 378 1 78 1 327 3 155 1 225 4 210 2 167 2 178 2 125 1 38 8 172 1 290 2 356 5 220 1 
31 3 348 14 163 1 47 6 378 3 78 1 327 3 155 1 225 4 210 2 167 2 178 2 125 1 38 8 172 1 290 2 356 7 220 1 
31 3 163 1 78 1 225 4 167 2 38 8 125 1 172 1 348 14 152 1 47 6 378 1 327 3 155 1 210 2 178 2 290 2 356 5 220 1 
140 3 31 6 163 1 363 1 78 1 274 3 225 7 167 2 195 3 299 1 276 1 124 1 36 1 370 1 38 21 125 2 172 1 39 2 66 4 43 1 348 40 205 1 47 19 378 7 327 6 155 1 20 1 285 1 210 3 352 1 178 3 290 3 356 14 220 2 293 3 
31 3 221 1 163 1 363 2 225 5 8 1 167 2 299 2 370 1 38 9 125 1 172 1 39 4 43 2 348 16 205 2 47 7 378 2 327 3 155 1 210 2 178 2 290 2 356 7 220 1 
337 1 53 1 191 1 77 2 296 1 143 1 297 2 55 1 319 1 369 1 65 1 231 1 258 1 105 1 42 1 203 1 130 1 150 1 68 1 281 1 107 1 153 1 48 2 241 1 329 1 157 1 179 1 51 1 381 1 382 1 
337 1 53 1 191 1 77 3 296 1 143 1 297 3 55 1 369 2 65 1 231 1 258 1 105 1 42 1 203 1 130 1 150 1 281 1 107 1 153 1 48 2 241 1 329 1 288 1 157 1 179 1 51 1 215 1 219 1 382 1 
53 1 191 1 77 2 143 1 297 2 369 2 65 1 231 1 258 1 105 1 203 1 130 1 150 1 281 1 107 1 153 1 48 2 241 1 329 1 288 1 157 1 179 1 51 1 215 1 382 1 
337 1 314 1 77 1 297 1 55 1 63 1 199 1 65 1 231 1 10 1 258 1 148 1 150 2 281 1 308 1 111 1 157 2 179 2 51 1 357 1 217 1 219 1 382 2 
337 1 53 1 191 1 77 1 296 1 143 1 297 1 55 1 319 1 65 1 231 1 258 1 105 1 42 1 203 1 150 1 68 1 281 1 153 1 48 2 241 1 288 1 157 1 179 1 51 1 382 1 
189 1 
141 1 248 5 251 2 298 1 343 1 144 1 199 1 9 1 65 2 101 1 102 2 200 2 258 1 12 2 260 1 349 2 111 1 70 2 112 1 26 1 114 5 158 1 116 1 310 1 71 1 357 2 217 1 73 2 361 3 162 1 75 2 314 1 121 2 223 1 318 2 227 2 35 1 37 1 231 1 324 1 128 1 375 1 174 6 235 4 83 1 281 2 328 1 244 1 330 1 51 2 332 1 245 2 185 1 292 1 291 1 
248 3 223 1 35 1 144 1 37 1 101 1 324 1 375 1 260 1 235 2 174 2 349 1 112 1 26 1 244 1 114 3 135 1 332 1 185 1 361 1 292 1 291 1 
248 3 223 1 35 1 227 1 144 1 37 1 101 1 324 1 375 1 260 1 174 1 235 3 112 1 26 1 244 1 114 3 135 1 158 1 332 1 185 1 73 1 361 1 292 1 291 1 
248 3 75 1 223 1 35 1 227 1 144 1 37 1 101 1 324 1 375 1 260 1 235 3 174 2 349 1 112 1 26 1 244 1 114 3 135 1 158 1 332 1 185 1 73 1 361 1 292 1 291 1 
335 1 248 5 251 2 194 1 343 1 144 1 101 1 102 2 12 1 303 1 260 1 349 4 209 1 112 1 70 2 26 1 114 5 158 5 310 1 71 1 73 5 361 3 75 4 223 1 121 1 272 1 318 2 35 1 227 4 37 1 324 1 128 1 375 1 235 6 174 7 83 1 244 1 135 1 330 1 332 1 245 2 185 1 291 1 292 1 
248 4 251 2 343 1 144 1 101 1 200 2 102 2 12 1 260 1 349 2 112 1 70 2 26 1 114 4 158 1 310 1 71 1 73 2 361 2 162 1 75 2 223 1 121 1 318 2 35 1 227 2 37 1 324 1 128 1 375 1 235 4 174 4 83 1 244 1 330 1 332 1 245 2 185 1 291 1 292 1 
248 4 75 2 272 1 121 1 223 1 251 2 318 2 194 1 227 2 343 1 35 1 144 1 37 1 101 1 102 2 324 1 128 1 375 1 12 1 260 1 174 4 235 4 349 2 83 1 209 1 70 2 112 1 26 1 244 1 114 4 330 1 158 1 310 1 71 1 332 1 245 2 73 1 185 1 361 2 292 1 291 1 
248 4 75 2 272 1 121 1 223 1 251 2 318 2 194 1 227 2 343 1 35 1 144 1 37 1 101 1 102 2 324 1 128 1 375 1 12 1 260 1 174 4 235 4 349 2 83 1 209 1 70 2 112 1 26 1 244 1 114 4 330 1 158 1 310 1 71 1 332 1 245 2 73 1 185 1 361 2 292 1 291 1 
248 4 75 2 272 1 121 1 223 1 318 2 224 1 227 2 343 1 35 1 144 1 37 1 101 1 200 2 324 1 128 1 375 1 12 1 259 1 260 1 151 1 174 4 235 4 349 2 83 1 70 2 112 1 26 1 244 1 114 4 330 1 158 1 160 2 91 2 71 1 332 1 73 1 185 1 361 2 292 1 291 1 
335 1 248 4 75 3 272 1 121 1 223 1 251 2 318 2 194 1 343 1 35 1 227 3 144 1 37 1 101 1 102 2 324 1 128 1 375 1 12 1 260 1 235 5 174 5 83 1 349 3 209 1 70 2 112 1 26 1 244 1 114 4 330 1 158 1 310 1 71 1 332 1 245 2 73 1 185 1 361 2 292 1 291 1 
335 1 248 4 75 3 272 1 121 1 223 1 251 2 318 2 194 1 343 1 35 1 227 3 144 1 37 1 101 1 102 2 324 1 128 1 375 1 12 1 260 1 235 5 174 5 83 1 349 3 209 1 70 2 112 1 26 1 244 1 114 4 330 1 158 1 310 1 71 1 332 1 245 2 73 1 185 1 361 2 292 1 291 1 
248 4 343 1 144 1 101 1 200 2 12 1 259 1 260 1 349 2 112 1 70 2 26 1 114 4 158 1 71 1 160 2 73 1 361 2 162 1 75 2 223 1 121 1 318 2 35 1 227 2 37 1 324 1 128 1 375 1 235 4 174 4 83 1 244 1 330 1 91 2 332 1 185 1 291 1 292 1 
31 1 348 5 43 1 163 1 205 1 47 2 363 1 306 1 327 1 166 1 6 1 155 1 225 2 210 1 167 1 299 1 176 1 277 2 178 1 38 3 290 1 39 2 356 2 
140 3 31 1 363 2 2 1 192 1 166 1 274 1 225 1 195 2 299 2 197 11 124 1 277 1 278 11 38 8 66 3 39 4 43 2 348 14 19 1 205 2 47 6 86 1 378 1 306 2 327 2 49 1 379 1 20 1 287 1 356 2 293 2 186 4 
363 1 316 1 54 1 166 1 368 1 342 1 35 2 144 1 228 1 299 1 277 1 38 1 231 1 65 1 324 1 232 1 279 1 258 1 103 1 39 2 67 1 43 1 17 2 348 2 205 1 281 1 282 1 47 1 86 1 306 1 379 1 287 1 111 2 51 1 266 1 217 2 357 1 332 2 268 2 291 1 186 1 292 2 
59 2 195 2 196 1 299 3 144 3 197 6 65 1 103 1 258 2 67 1 17 3 348 27 205 3 207 2 306 3 155 1 210 2 111 4 266 2 356 7 357 1 217 4 268 4 359 2 31 5 163 1 363 3 316 2 166 3 274 2 225 6 167 2 35 3 170 1 228 1 277 3 38 14 278 6 172 1 231 2 374 1 324 2 39 6 279 2 43 3 281 1 47 13 282 2 86 1 378 1 327 5 379 1 287 1 87 2 178 2 51 1 136 2 290 1 332 3 292 3 291 2 186 6 293 2 
271 1 363 2 314 1 166 2 6 1 57 1 35 1 123 1 228 1 299 2 230 1 38 1 199 1 231 2 65 7 258 2 39 4 67 1 17 1 43 2 304 1 348 2 205 2 281 8 46 2 47 1 86 1 306 2 379 1 111 2 288 1 381 1 51 8 181 1 183 1 332 1 217 3 357 2 292 1 
31 1 363 1 166 1 274 1 225 1 35 1 195 1 197 1 228 1 299 1 229 1 278 1 38 1 39 2 15 1 43 1 17 1 348 3 205 1 47 2 306 1 327 1 287 1 27 1 356 1 332 1 186 1 292 1 293 1 
348 2 43 1 205 1 99 1 363 1 378 1 306 1 166 1 327 1 6 1 195 1 197 1 299 1 278 1 38 2 39 2 356 1 186 1 
31 1 348 2 43 1 205 1 363 1 47 2 306 1 166 1 6 1 274 1 225 1 197 1 299 1 278 1 355 1 39 2 356 1 186 1 
31 1 363 1 166 1 6 1 274 1 225 1 195 1 299 1 197 2 38 2 278 2 39 2 43 1 348 4 205 1 47 2 378 1 306 1 327 1 356 2 293 1 186 2 
348 2 43 1 205 1 99 1 363 1 378 1 306 1 166 1 327 1 195 1 197 1 299 1 278 1 38 2 181 1 39 2 356 1 186 1 
31 1 348 2 43 1 205 1 363 1 47 2 306 1 166 1 274 1 225 1 197 1 299 1 278 1 181 1 355 1 39 2 356 1 186 1 
31 1 363 1 166 1 274 1 225 1 195 1 299 1 197 2 38 2 278 2 39 2 43 1 348 4 205 1 47 2 378 1 306 1 327 1 181 1 356 2 293 1 186 2 
31 1 43 1 348 4 205 1 47 2 363 1 378 1 306 1 166 1 327 1 274 1 225 1 195 1 197 2 299 1 278 2 38 2 39 2 356 2 186 2 293 1 
363 1 316 1 166 1 35 1 299 1 144 1 277 1 38 1 231 1 65 1 324 1 39 2 258 1 279 1 348 2 43 1 17 1 205 1 281 1 47 1 282 1 86 1 306 1 379 1 111 2 87 1 51 1 266 1 357 1 217 2 332 1 268 2 291 1 292 1 
363 1 316 1 165 1 166 1 35 1 299 1 144 1 277 1 38 1 231 1 65 1 324 1 39 2 258 1 279 1 348 2 43 1 17 1 205 1 281 1 47 1 86 1 85 1 306 1 379 1 111 2 354 1 51 1 357 1 217 2 332 1 268 2 291 1 292 1 
31 1 363 1 166 1 274 1 225 1 195 1 299 1 197 2 38 2 278 2 39 2 43 1 348 4 205 1 47 2 378 1 306 1 327 1 287 1 356 2 293 1 186 2 
31 1 363 1 316 1 166 1 274 1 225 1 195 1 35 1 197 2 299 1 144 1 278 2 38 2 231 1 65 1 324 1 39 2 258 1 279 1 348 4 43 1 17 1 205 1 281 1 47 2 282 1 378 1 207 1 306 1 327 1 111 2 87 1 51 1 381 1 266 1 356 2 217 2 332 1 268 2 186 2 293 1 291 1 292 1 
31 1 363 1 166 1 274 1 35 1 195 1 228 1 299 1 197 1 229 1 38 2 278 1 39 2 15 1 43 1 17 1 348 3 205 1 47 1 378 1 306 1 327 1 286 1 287 1 356 1 332 1 292 1 293 1 186 1 
140 1 31 3 363 2 3 1 79 1 274 3 225 3 8 1 195 3 299 2 124 1 38 9 66 2 39 4 40 1 14 2 43 2 348 19 205 2 47 10 378 3 327 3 20 1 211 1 134 1 89 2 356 6 333 1 161 1 293 3 
31 2 140 2 362 1 363 3 3 1 79 2 274 2 225 2 8 1 195 3 299 3 124 2 370 2 38 14 127 1 39 6 66 2 11 1 40 1 14 1 43 3 348 26 205 3 47 12 378 2 327 3 242 1 23 1 134 2 89 4 90 1 356 4 333 1 293 3 
362 1 140 3 31 5 163 1 363 3 122 1 3 1 79 2 274 4 225 4 8 1 167 1 195 4 299 3 124 3 370 1 38 20 127 1 66 4 39 6 11 1 40 1 14 1 43 3 348 41 205 3 47 21 378 4 327 5 155 1 242 1 20 1 211 1 210 1 23 1 178 1 134 1 89 4 90 1 290 1 356 8 333 1 293 4 
362 1 140 3 31 4 163 1 363 4 122 1 3 1 79 2 274 3 225 4 8 1 167 1 195 4 299 4 124 3 370 2 38 20 127 1 66 4 39 8 11 1 40 1 14 1 43 4 348 38 205 4 47 18 378 3 327 5 155 1 242 1 20 1 211 1 210 1 23 1 178 1 134 1 89 4 90 1 290 1 356 7 333 1 293 4 
362 1 140 4 31 8 163 1 363 2 3 1 79 1 274 7 225 7 8 1 167 1 195 7 299 2 124 2 370 1 38 27 127 1 66 4 39 4 11 1 40 1 14 1 43 2 348 52 205 2 47 25 378 7 327 8 155 1 49 2 242 1 20 2 210 1 23 1 178 1 134 1 89 4 90 1 290 1 356 14 333 1 293 7 
334 1 336 1 222 1 312 1 283 1 201 1 273 1 69 1 95 1 187 1 
371 1 305 1 
334 1 204 1 222 1 250 1 283 1 201 1 273 1 275 1 187 1 
334 1 336 1 222 1 312 1 45 1 248 1 313 1 283 1 273 1 367 1 156 1 114 1 50 1 201 1 73 1 173 2 95 1 187 1 
334 1 336 1 222 1 312 1 45 1 248 1 313 1 283 1 273 1 367 1 156 1 114 1 50 1 201 1 73 1 173 2 95 1 187 1 
334 1 336 1 222 1 312 1 45 1 248 1 313 1 283 1 273 1 367 1 156 1 114 1 50 1 201 1 73 1 173 2 95 1 187 1 
18 1 145 1 246 1 
18 1 145 1 246 1 
64 1 307 1 
64 1 246 1 307 1 
243 1 256 1 
334 1 222 1 313 1 248 1 249 1 273 1 35 2 228 2 277 1 371 1 147 1 256 1 201 1 173 1 17 2 326 1 45 1 305 1 237 1 283 1 208 1 243 1 114 1 332 2 358 1 187 1 292 2 
18 1 145 1 
64 1 246 1 307 1 
363 1 33 1 166 1 56 1 57 1 35 2 61 1 299 1 300 1 38 1 231 1 65 2 258 1 39 2 43 1 304 1 348 2 205 1 281 2 46 2 47 1 86 1 306 1 379 1 21 1 287 1 111 1 51 2 217 1 332 2 292 2 
281 2 98 1 53 1 191 1 153 1 239 1 48 2 241 1 288 1 157 1 231 1 65 2 51 2 381 1 258 1 105 1 82 1 42 1 203 1 
281 1 53 1 191 1 153 1 48 2 241 1 288 1 157 1 65 1 51 1 231 1 258 1 105 1 82 1 42 1 203 1 139 1 
281 1 314 1 239 1 238 1 111 1 157 1 199 1 231 1 65 1 51 1 258 1 148 1 217 1 357 1 
281 1 98 1 53 1 191 1 153 1 239 1 48 2 241 1 288 1 157 1 65 1 51 1 231 1 258 1 105 1 82 1 42 1 203 1 
149 1 
176 1 289 1 158 1 121 1 12 1 366 1 73 1 
248 1 121 1 251 1 200 1 102 1 128 1 12 1 174 1 83 1 114 1 330 1 158 1 310 1 71 1 245 1 73 2 361 1 
188 1 141 2 142 1 247 2 248 5 251 6 59 2 60 1 195 2 198 2 65 3 200 12 258 4 12 9 346 2 351 2 111 3 26 2 114 5 158 2 71 4 217 10 357 1 118 1 268 3 73 8 361 3 31 2 270 2 121 8 365 2 366 1 274 2 81 2 231 3 128 4 279 2 129 6 280 6 236 2 174 5 83 4 281 3 131 1 284 3 328 1 327 2 88 2 289 1 330 4 381 1 51 3 92 1 293 2 
362 1 140 1 31 2 141 1 248 1 121 5 251 3 274 2 195 2 320 1 198 1 124 1 146 1 200 6 127 1 128 2 129 5 66 1 280 5 12 8 11 1 346 2 174 1 83 2 328 1 327 2 242 1 114 1 330 2 158 2 90 1 71 2 73 5 361 1 293 2 
31 1 248 1 121 2 100 1 35 1 167 1 144 1 228 1 198 1 172 1 128 1 325 1 12 2 346 2 347 1 15 1 17 1 83 1 327 2 209 1 210 1 178 1 114 1 330 1 71 1 332 1 138 1 292 1 
83 1 121 1 366 1 289 1 330 1 158 1 71 1 128 1 12 1 73 1 
31 2 121 5 251 5 327 2 274 2 59 1 195 2 198 1 200 10 129 5 280 5 12 5 346 2 73 5 293 2 
114 1 174 1 248 1 158 1 73 1 361 1 
141 2 248 3 314 1 121 2 298 1 60 1 199 1 231 1 9 1 65 4 128 1 258 1 12 2 41 1 106 1 174 4 83 2 281 4 131 2 328 2 132 1 111 1 114 3 330 2 51 4 71 2 217 1 357 2 361 2 
363 1 316 1 166 1 5 1 100 1 35 3 299 1 228 2 144 1 277 1 65 1 231 1 324 1 39 2 279 1 258 1 15 2 348 1 43 1 17 3 205 1 281 1 47 1 282 1 306 1 379 1 111 2 87 1 51 1 266 1 357 1 332 3 217 2 268 2 292 3 291 1 
141 1 83 1 121 2 251 2 328 1 330 1 158 2 290 1 200 4 71 1 128 1 129 2 280 2 12 1 73 4 
334 1 273 1 94 1 
334 1 312 1 62 1 256 1 273 1 
334 1 273 1 94 1 
334 1 273 1 94 1 
334 1 364 1 273 1 
334 1 364 1 273 1 
334 1 364 1 273 1 
334 1 273 1 
283 1 187 1 
31 3 163 1 363 2 225 4 167 2 299 2 370 1 38 9 172 1 39 4 43 2 348 17 205 2 47 8 378 3 327 3 155 1 210 2 178 2 290 1 356 7 
31 1 163 1 348 5 47 2 327 1 155 1 210 1 225 2 167 1 176 1 178 1 38 3 290 1 356 2 
31 1 43 1 348 4 205 1 47 2 363 1 378 1 327 1 274 1 225 1 195 1 299 1 38 2 216 1 39 2 356 2 293 1 
31 1 140 1 348 7 47 4 378 1 327 1 274 1 20 1 225 1 195 1 124 1 38 3 66 2 356 2 293 1 
31 5 140 2 163 1 363 1 192 1 274 2 225 5 167 2 195 2 299 1 370 1 38 13 172 1 66 2 39 2 348 25 43 1 205 1 47 12 378 2 327 5 155 1 49 1 20 1 210 2 178 2 290 1 356 7 293 2 
348 1 47 1 66 1 
140 1 348 1 38 1 
31 1 43 1 348 6 205 1 363 1 47 3 378 1 327 1 274 1 225 2 59 1 195 1 299 1 38 3 216 1 39 2 356 3 293 1 
140 1 362 1 31 2 363 1 274 2 225 1 8 1 195 2 299 1 124 1 38 6 127 1 66 1 39 2 11 1 348 12 43 1 205 1 47 6 378 1 327 2 242 1 90 1 356 2 293 2 
31 1 167 1 348 6 178 1 38 3 47 3 378 1 356 2 327 1 225 1 210 1 
348 3 43 1 163 1 205 1 47 2 363 1 378 1 155 1 225 1 210 1 299 1 178 1 370 1 38 1 39 2 356 2 104 1 
31 2 43 1 348 10 205 1 363 1 47 5 378 2 327 2 210 2 225 3 8 1 167 1 299 1 178 2 38 5 172 1 39 2 356 5 
43 1 348 2 205 1 363 1 378 1 327 1 8 1 195 1 299 1 38 2 39 2 356 1 
31 1 43 1 348 4 205 1 47 2 363 1 378 1 327 1 274 1 225 1 8 1 195 1 299 1 38 2 39 2 356 2 293 1 
348 3 43 3 205 3 47 2 363 3 378 1 211 1 210 1 225 1 8 1 299 3 178 1 370 1 38 1 39 6 356 2 104 1 
140 3 31 5 163 1 363 4 274 2 225 5 8 1 167 2 195 2 299 4 276 1 124 1 36 1 370 1 38 16 172 1 66 3 39 8 43 4 348 31 205 4 47 15 378 4 327 5 155 1 285 1 210 2 211 1 178 2 290 1 216 1 356 9 293 2 
31 3 140 1 362 1 163 1 363 1 225 4 8 1 167 2 299 1 124 1 38 8 172 1 66 1 39 2 348 15 43 1 205 1 47 7 378 1 327 3 155 1 210 2 178 2 290 1 356 5 
31 3 362 1 140 1 163 1 363 2 225 4 8 1 167 2 195 1 299 2 124 1 38 10 172 1 66 2 39 4 348 18 43 2 205 2 47 8 378 2 327 4 155 1 20 1 210 2 178 2 290 1 216 1 356 6 293 1 
140 1 362 1 31 5 163 1 363 3 274 2 225 5 8 1 167 2 195 2 299 3 124 1 370 1 38 13 172 1 127 1 66 1 39 6 11 1 348 26 43 3 205 3 47 13 378 2 327 5 155 1 242 1 210 2 178 2 90 1 290 1 216 1 356 7 293 2 
140 1 362 1 31 4 163 1 363 3 274 1 225 5 8 1 167 2 195 2 299 3 124 1 370 1 38 14 172 1 127 1 66 1 39 6 11 1 348 24 43 3 205 3 47 10 378 4 327 5 155 1 242 1 210 2 178 2 90 1 290 1 216 1 356 9 293 2 
31 3 140 1 362 1 163 1 363 1 225 4 8 1 167 2 299 1 124 1 38 8 172 1 66 1 39 2 348 15 43 1 205 1 47 7 378 1 327 3 155 1 210 2 178 2 290 1 356 5 
140 1 362 1 31 2 363 1 274 2 225 1 8 1 195 2 299 1 124 1 38 6 127 1 66 1 39 2 11 1 348 12 43 1 205 1 47 6 378 1 327 2 242 1 90 1 356 2 293 2 
362 1 140 1 31 4 163 1 363 4 274 1 225 5 8 1 167 2 195 2 299 4 124 1 370 2 38 14 172 1 127 1 66 1 39 8 11 1 348 25 43 4 205 4 47 11 378 2 327 5 155 1 242 1 210 2 178 2 90 1 290 1 216 1 356 7 293 2 
362 1 140 1 31 2 363 4 274 2 225 3 8 1 195 3 299 4 124 1 370 2 38 9 127 1 66 1 39 8 11 1 348 16 43 4 205 4 47 7 378 3 327 3 242 1 211 1 90 1 356 6 293 3 
31 1 348 7 163 1 47 4 378 3 327 1 155 2 210 3 225 3 167 1 178 3 38 3 356 6 
362 1 140 1 31 4 163 1 363 4 274 1 225 5 8 1 167 2 195 2 299 4 124 1 370 2 38 14 172 1 127 1 66 1 39 8 11 1 348 25 43 4 205 4 47 11 378 2 327 5 155 1 242 1 210 2 211 1 178 2 90 1 290 1 356 7 293 2 
35 1 277 1 375 1 332 1 110 1 22 1 292 1 
338 1 76 1 263 1 110 1 22 1 35 1 277 1 257 1 202 1 375 1 332 1 292 1 
111 1 176 1 199 1 281 1 314 1 231 1 51 1 65 1 258 1 217 1 357 1 
17 2 281 1 316 1 111 2 35 2 144 1 228 1 277 1 65 1 51 1 231 1 324 1 266 1 279 1 258 1 217 2 332 2 357 1 67 1 268 2 291 1 292 2 
316 1 35 2 228 1 144 1 277 1 231 1 65 1 374 1 258 1 67 1 17 1 281 1 131 1 111 1 51 1 266 1 332 2 217 1 268 1 292 1 
316 1 165 1 35 2 228 1 144 1 277 1 231 1 65 1 374 1 258 1 67 1 17 1 281 1 131 1 111 1 51 1 332 2 217 1 268 1 292 1 
174 1 248 2 281 3 365 1 131 1 284 1 108 1 81 1 111 1 25 1 26 1 114 2 158 1 65 3 51 3 231 1 301 1 279 1 258 1 357 1 217 4 73 1 268 1 
236 1 174 1 248 2 281 3 365 1 131 1 284 1 81 1 111 1 26 1 114 2 158 1 65 3 51 3 231 1 301 1 279 1 258 1 357 1 217 4 73 1 268 1 
281 1 231 1 51 1 65 1 183 1 258 1 
119 1 46 1 281 7 271 1 57 1 111 2 123 1 288 1 322 1 230 1 381 1 65 6 51 7 231 2 183 1 258 3 357 2 118 1 217 3 234 1 268 1 
299 2 144 2 65 1 258 1 67 1 17 2 348 13 205 2 207 1 306 2 155 1 21 1 210 2 111 2 266 1 217 2 356 5 268 2 31 3 163 1 363 2 316 1 166 2 225 4 35 2 167 2 228 1 277 3 38 7 172 1 231 1 374 1 324 1 39 4 279 1 43 2 281 1 282 1 47 6 378 1 327 3 287 1 87 1 178 2 136 1 51 1 381 1 290 1 332 2 292 2 291 1 
248 3 270 1 121 1 366 1 81 1 60 1 147 1 65 1 128 2 12 1 236 1 174 2 281 1 83 2 284 1 351 1 88 1 26 1 114 3 289 1 330 2 158 1 51 1 71 2 357 1 217 2 73 1 361 1 
142 1 281 2 81 1 111 1 381 1 65 2 51 2 231 1 183 1 258 2 118 1 217 2 268 1 
190 1 281 4 314 1 111 1 199 1 65 4 51 4 381 1 231 1 301 1 258 1 357 1 217 1 
119 1 281 2 131 1 264 1 111 1 322 1 115 1 65 2 51 2 231 1 28 1 258 2 217 1 268 1 
281 1 53 1 191 1 231 1 51 1 65 1 48 1 258 1 357 1 241 1 
111 1 61 1 288 1 281 2 231 1 51 2 65 2 381 1 258 1 217 1 57 1 
190 1 281 5 314 1 131 1 57 1 111 2 123 1 230 1 199 1 65 4 51 5 381 1 231 2 258 2 357 1 217 3 
190 1 281 5 314 1 131 1 57 1 111 2 123 1 321 1 199 1 65 4 51 5 381 1 231 2 258 2 357 1 217 3 
17 2 281 1 316 1 165 1 111 2 35 2 144 1 228 1 277 1 65 1 51 1 231 1 324 1 279 1 258 1 217 2 332 2 357 1 67 1 268 2 291 1 292 2 
119 1 281 1 131 1 111 1 322 1 65 1 51 1 231 1 258 2 118 1 217 1 234 1 268 1 
277 1 372 1 380 1 294 1 350 1 
248 2 376 1 339 1 223 1 294 2 350 1 7 1 144 1 277 1 26 1 114 2 372 2 158 1 147 1 380 2 324 1 73 1 291 1 269 1 
33 1 294 1 350 1 56 1 35 1 372 1 300 1 332 1 292 1 
350 1 7 1 269 1 
130 1 176 1 329 1 107 1 
130 1 337 1 329 1 107 1 77 1 297 1 55 1 
150 1 77 1 382 1 
337 1 130 1 107 1 295 2 77 3 377 1 55 1 297 3 319 1 175 1 113 1 329 1 
369 1 130 1 337 1 329 1 255 1 107 1 77 2 297 2 55 1 
337 1 74 1 107 1 77 1 48 1 55 1 297 1 241 1 319 1 309 1 203 1 
130 1 337 1 107 1 77 1 297 1 55 1 319 1 
130 2 337 1 329 1 77 1 297 1 55 1 319 1 
130 1 337 2 107 1 77 2 55 2 297 2 319 1 80 1 218 1 184 1 
130 1 337 1 120 1 74 1 1 1 107 2 77 3 55 1 297 3 319 1 369 2 329 1 373 1 
130 1 337 1 191 1 107 1 153 1 77 2 48 2 55 1 297 2 241 1 319 1 369 1 329 1 137 1 203 1 
130 1 337 2 74 1 1 1 107 2 77 4 55 2 297 4 319 1 369 2 329 1 255 1 331 1 
130 1 337 1 329 1 107 1 77 1 297 1 55 1 319 1 
130 2 337 1 74 1 1 1 295 1 107 3 377 1 77 4 297 4 55 1 58 1 369 2 113 1 329 2 
130 1 337 1 107 1 77 2 252 1 55 1 297 2 319 1 369 1 329 1 214 1 159 1 
311 1 337 1 130 1 107 1 295 2 77 3 377 2 55 1 297 3 319 1 113 1 329 1 
117 1 171 1 107 2 4 2 
97 1 337 1 77 1 297 1 55 1 319 1 
369 1 130 1 337 1 329 1 120 1 107 1 77 2 297 2 55 1 319 1 
44 1 
130 1 337 1 329 1 107 1 77 1 297 1 55 1 319 1 
337 1 130 1 120 1 295 1 107 1 77 3 55 1 297 3 319 1 369 1 329 1 
74 1 1 1 107 1 58 1 
130 1 107 1 

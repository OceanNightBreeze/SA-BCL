#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (116,278) 322 (140,343) (140,343) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (116,278) 322 (140,343) (140,343) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (116,278) 322 (140,343) (140,343) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (116,278) 322 (140,343) (140,343) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 59 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 308 53 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 308 320 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 311 130 106 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 308 300 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 59 353 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 308 283 324 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 308 320 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 260 78 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 308 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 308 117 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 308 117 39 302 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 117 39 302 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 117 39 91 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 260 78 114 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 260 78 114 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 308 117 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (202,252) 211 3 (271,349) 132 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 308 224 187 8 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 308 283 324 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 121 131 (47,161) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 121 (202,252) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (202,252) 211 3 (271,349) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 1 181 1 265 1 322 1 244 1 328 1 74 1 343 1 278 1 13 1 143 1 
140 1 181 1 265 1 322 1 244 1 328 1 74 1 343 1 278 1 13 1 143 1 
140 1 181 1 265 1 322 1 244 1 328 1 74 1 343 1 278 1 13 1 143 1 
140 1 181 1 265 1 322 1 244 1 328 1 74 1 343 1 278 1 13 1 143 1 
119 1 244 1 74 1 328 4 16 1 143 4 312 1 262 1 265 1 232 1 9 1 98 2 166 3 280 3 341 1 178 1 294 1 293 2 
181 1 244 1 118 1 119 1 74 1 328 2 107 1 143 2 312 1 250 1 313 1 262 1 265 1 280 1 13 1 178 1 
244 1 74 2 328 3 16 1 143 3 312 1 262 1 265 2 166 1 13 1 280 2 293 1 116 1 
342 1 119 1 244 1 74 2 328 9 16 3 143 9 155 1 312 1 262 1 265 2 232 1 9 1 98 2 166 7 341 1 280 5 92 1 13 1 178 1 294 1 100 1 293 4 116 1 
342 1 119 1 244 1 74 2 328 9 16 3 143 9 155 1 312 1 262 1 265 2 232 1 9 1 98 2 166 7 341 1 280 5 92 1 13 1 178 1 294 1 100 1 293 4 116 1 
125 1 159 1 195 1 
159 1 5 2 237 1 
65 1 327 1 306 2 231 2 183 2 247 2 218 2 153 2 
1 1 326 1 49 2 327 1 236 1 120 1 218 3 96 1 348 1 52 1 147 1 76 1 221 1 151 1 198 1 153 2 296 1 15 2 182 1 105 1 202 1 61 1 183 2 247 2 64 1 42 1 86 1 251 1 65 1 88 1 321 2 306 3 231 2 160 2 90 1 282 2 168 1 
327 1 306 1 231 1 183 1 338 1 247 1 99 1 84 1 218 1 153 1 
81 1 103 1 102 1 247 1 218 1 195 1 185 1 159 1 67 1 306 1 338 1 57 1 225 1 281 1 
81 2 102 1 183 1 247 1 218 1 195 1 185 2 159 1 67 1 231 1 306 1 338 1 225 1 281 1 153 1 
81 1 59 1 133 1 108 1 185 1 
81 1 53 1 133 1 308 1 108 1 185 1 
81 1 108 1 185 1 
81 1 327 1 183 1 247 1 133 1 84 1 218 1 185 1 231 1 306 1 338 1 99 1 325 1 153 1 
159 1 
81 1 133 1 308 1 108 1 320 1 185 1 
81 3 311 1 347 1 130 1 89 1 106 1 133 2 56 1 63 1 108 1 185 3 
65 1 125 1 
183 1 247 2 218 2 315 1 65 2 306 2 231 1 54 1 153 1 
206 1 20 1 259 1 
296 1 49 1 15 1 202 1 120 1 64 1 218 1 42 1 65 1 348 1 306 1 147 1 76 1 150 1 151 1 282 1 
296 1 49 1 15 1 120 1 202 1 245 1 183 1 247 1 64 1 218 2 42 1 261 1 348 1 306 2 147 1 206 1 76 1 151 1 282 1 153 1 
101 1 245 2 183 4 247 5 123 1 218 5 261 1 156 1 65 1 306 5 231 1 54 1 57 1 153 4 
306 2 183 2 338 1 247 2 99 1 344 1 218 2 153 2 
65 1 231 1 306 3 245 1 183 3 247 3 218 3 153 3 
306 1 183 1 338 1 247 1 99 1 218 1 153 1 
306 1 231 1 54 1 183 1 338 1 247 1 218 1 153 1 315 1 
1 1 49 1 327 1 120 1 218 4 261 1 52 1 348 1 54 1 147 1 76 1 151 1 225 1 153 3 296 1 81 1 15 1 182 1 102 1 105 1 202 1 61 1 245 1 183 3 247 3 64 1 42 1 86 1 185 1 251 1 65 1 230 1 88 1 67 1 321 2 231 2 306 4 160 1 338 1 90 1 71 1 281 1 282 1 168 1 
65 1 156 1 306 2 245 1 183 1 247 2 57 1 218 2 153 1 
81 1 102 1 245 2 183 3 247 3 218 3 185 1 261 1 346 1 159 1 67 1 231 1 306 3 54 1 338 1 71 1 281 1 225 1 153 3 
245 1 183 2 247 2 259 1 218 2 231 1 306 2 54 1 206 1 153 2 
296 1 49 1 15 1 202 1 120 1 64 1 218 1 42 1 65 1 348 1 306 1 147 1 76 1 151 1 282 1 
296 1 49 1 15 1 120 1 213 1 64 1 218 1 65 1 348 1 306 1 161 1 147 1 76 1 151 1 282 1 
255 1 1 1 285 1 284 1 259 2 96 2 34 1 319 1 182 1 105 1 333 1 86 2 229 1 43 1 88 1 321 2 110 1 160 4 190 1 206 2 90 1 20 2 167 1 168 1 
102 1 306 1 183 1 338 1 247 1 344 1 218 1 153 1 
69 1 371 1 
69 1 371 1 
122 1 286 1 
122 1 286 1 
122 1 286 1 
220 1 69 1 371 1 
220 1 69 1 371 1 
69 1 371 1 184 1 
256 1 122 1 69 2 286 1 80 1 371 2 
220 1 69 1 371 1 
197 1 69 1 371 1 
197 1 69 1 371 1 
197 1 69 1 371 1 
210 1 81 1 257 1 301 1 203 1 183 2 247 2 75 1 218 2 184 1 185 1 65 1 264 1 136 1 306 2 163 1 332 1 69 1 11 1 267 1 371 1 115 1 153 2 37 1 
81 2 256 1 358 1 301 2 203 2 51 1 75 1 314 1 185 2 135 1 159 1 69 2 277 1 11 2 48 2 309 1 371 2 115 3 37 2 
119 1 341 1 178 1 
119 1 178 1 313 1 
26 1 119 3 19 1 341 2 139 1 313 1 
26 1 119 2 19 1 341 1 70 1 313 1 
26 2 119 2 19 1 341 1 313 1 
81 1 300 1 133 1 308 1 108 1 185 1 
81 2 186 1 59 1 133 2 152 1 108 1 353 1 185 2 
235 2 124 1 5 4 237 2 7 1 195 1 264 1 347 1 219 2 56 1 14 1 81 3 129 3 133 2 41 1 333 1 63 1 185 3 159 3 110 1 89 1 164 1 190 1 46 2 113 1 167 1 
235 4 5 7 124 2 237 3 7 1 195 1 144 1 330 1 264 2 347 1 219 4 317 1 56 1 14 1 81 4 129 5 41 1 133 3 333 2 63 1 185 4 159 4 110 2 46 4 89 1 164 2 190 2 113 1 167 2 
125 1 146 1 76 1 
76 1 228 1 
239 1 
147 1 76 1 151 1 
126 1 76 1 
147 1 76 1 
146 2 275 1 147 1 76 3 151 1 21 1 
194 1 246 2 226 1 141 1 285 3 333 1 85 1 249 1 86 3 96 4 43 2 44 1 160 7 190 1 276 1 175 1 369 1 
194 1 246 2 226 1 141 1 285 3 333 1 85 1 249 1 86 3 96 4 43 2 44 1 160 7 190 1 276 1 175 1 369 1 
194 1 246 2 226 1 141 1 285 3 333 1 85 1 249 1 86 3 96 4 43 2 44 1 160 7 190 1 276 1 175 1 369 1 355 1 
0 1 1 1 194 1 141 5 285 10 96 16 145 1 175 2 223 1 352 1 38 4 182 1 298 1 60 3 105 1 360 1 226 1 246 3 249 2 85 2 333 4 86 15 87 1 43 5 44 1 88 1 321 2 110 3 160 31 276 2 164 3 190 4 369 1 167 3 
1 2 194 1 285 4 141 1 96 5 175 1 223 1 182 2 105 2 246 2 333 1 249 1 85 1 86 4 204 1 43 3 88 2 44 1 321 4 160 9 190 1 276 1 111 1 369 1 
49 1 119 2 120 1 328 2 74 1 27 1 95 1 143 2 312 1 313 1 262 1 265 1 148 1 35 1 149 1 13 1 178 1 269 1 15 1 200 1 244 1 83 1 64 1 109 1 367 1 166 1 280 1 341 1 282 1 139 1 
49 1 119 2 120 1 328 3 74 1 27 1 95 1 258 1 143 3 312 1 329 1 313 1 262 1 265 1 148 1 35 1 36 1 13 1 178 1 269 1 15 1 83 1 64 1 109 1 367 1 166 2 280 1 341 1 282 1 139 1 
49 1 119 2 120 1 328 2 27 1 95 1 143 2 312 1 329 1 313 1 262 1 148 1 35 1 36 1 13 1 178 1 15 1 83 1 64 1 109 1 166 2 280 1 341 1 282 1 139 1 
73 1 49 1 15 1 120 1 83 2 74 1 328 1 361 1 258 1 95 2 143 1 64 1 265 1 348 1 196 1 305 1 147 1 337 1 35 2 76 1 368 1 13 2 282 1 
49 1 119 2 120 1 328 1 74 1 27 1 95 1 143 1 313 1 265 1 148 1 35 1 149 1 36 1 13 1 178 1 269 1 15 1 244 1 83 1 64 1 109 1 367 1 341 1 282 1 139 1 
79 1 
81 1 49 1 15 1 235 1 129 1 212 1 108 2 185 1 347 1 188 1 348 1 89 1 113 1 56 1 308 1 282 1 324 1 283 1 
81 2 193 1 102 1 103 1 247 1 108 1 260 1 218 1 185 2 303 2 291 1 67 1 173 1 306 1 350 1 338 1 57 1 281 1 225 1 24 1 
81 2 193 1 102 1 103 1 247 1 108 1 320 1 218 1 195 1 185 2 303 3 134 1 291 1 159 1 67 1 173 1 306 1 350 1 338 1 308 1 57 1 281 1 225 1 24 1 
81 2 193 1 102 1 103 1 247 1 108 1 260 1 218 1 185 2 303 2 291 1 67 1 173 1 306 1 350 1 338 1 57 1 78 1 281 1 225 1 24 1 
81 1 308 1 108 1 320 1 185 1 
193 1 235 1 142 1 4 1 5 1 237 1 218 1 291 1 347 1 173 1 350 1 56 1 57 1 225 1 81 2 103 1 102 1 129 1 247 1 272 1 108 1 185 2 303 2 188 1 67 1 363 1 306 1 89 1 165 1 338 1 308 1 281 1 117 1 24 1 
193 1 235 1 142 1 4 1 237 1 218 1 291 1 347 1 173 1 350 1 56 1 57 1 225 1 81 2 39 1 103 1 102 1 129 1 247 1 302 1 272 1 108 1 185 2 303 2 67 1 188 1 363 1 306 1 89 1 165 1 338 1 68 1 308 1 281 1 117 1 24 1 
193 1 235 1 142 1 4 1 237 1 218 1 291 1 347 1 173 1 350 1 56 1 57 1 225 1 81 2 39 1 103 1 102 1 129 1 247 1 302 1 272 1 108 1 185 2 303 2 67 1 188 1 363 1 306 1 89 1 165 1 338 1 68 1 308 1 281 1 117 1 24 1 
193 1 235 1 50 1 142 1 5 1 218 1 291 1 347 1 173 1 33 1 350 1 55 1 56 1 57 1 225 1 81 2 39 1 103 1 102 1 129 1 270 1 247 1 108 1 185 2 303 2 67 1 188 1 363 1 306 1 89 1 338 1 91 1 308 1 281 1 117 1 24 1 
81 2 193 1 102 1 103 1 247 1 108 1 260 1 218 1 185 2 303 2 291 1 67 1 173 1 306 1 350 1 338 1 114 1 57 1 78 1 281 1 225 1 24 1 
81 2 193 1 102 1 103 1 247 1 108 1 260 1 218 1 185 2 303 2 291 1 67 1 173 1 306 1 350 1 338 1 114 1 57 1 78 1 281 1 225 1 24 1 
193 1 235 1 50 1 142 1 5 1 218 1 291 1 347 1 173 1 350 1 55 1 56 1 57 1 225 1 81 2 103 1 102 1 129 1 270 1 247 1 108 1 185 2 303 2 188 1 67 1 363 1 306 1 89 1 338 1 308 1 281 1 117 1 24 1 
1 1 194 1 285 2 259 1 96 3 125 1 34 1 175 1 182 1 105 1 246 1 333 1 86 3 65 2 43 2 44 1 88 1 321 2 160 6 276 1 190 1 206 1 90 1 20 1 369 1 168 1 
1 2 94 1 28 1 141 1 285 2 29 1 259 4 96 8 145 1 221 1 240 1 38 3 182 2 105 2 60 3 61 1 360 1 333 1 86 6 65 1 43 1 88 2 321 4 110 2 160 14 164 2 190 2 206 11 90 2 20 11 233 1 167 1 168 1 
49 1 1 1 2 1 120 1 259 1 218 2 261 1 96 1 348 1 147 1 174 1 176 1 76 1 151 1 150 1 221 1 153 1 296 1 15 1 182 1 202 1 105 1 245 1 61 1 183 1 247 1 64 1 42 1 86 1 65 1 88 1 306 2 321 2 160 2 90 1 233 1 282 1 168 1 
49 3 1 3 194 1 141 4 285 8 96 10 52 2 147 2 151 2 153 1 296 2 15 3 243 2 105 3 202 2 61 1 245 1 62 2 246 1 247 1 333 3 64 2 65 2 306 3 334 2 110 2 160 20 164 2 206 7 207 1 20 7 167 2 168 3 120 2 217 1 259 7 218 3 261 1 348 1 175 1 177 1 76 2 36 1 221 1 182 3 183 1 271 2 42 2 86 10 43 4 44 1 88 3 321 6 276 1 190 3 90 3 233 1 369 1 282 3 
49 7 1 2 326 2 73 1 120 2 31 1 218 1 96 1 348 2 34 1 147 2 76 3 12 1 36 1 221 1 268 1 153 1 357 1 200 1 15 8 182 2 105 2 245 1 61 1 183 1 247 1 361 1 64 2 86 1 66 1 304 1 88 2 306 1 321 4 160 2 90 2 72 1 282 8 168 2 
1 1 25 1 285 1 259 1 218 1 96 1 54 1 153 1 182 1 105 1 183 1 247 1 333 1 86 2 43 1 88 1 231 1 321 2 306 1 110 1 160 3 164 1 190 1 206 1 20 1 90 1 233 1 167 1 168 1 
1 1 319 1 182 1 105 1 285 1 141 1 259 1 96 2 88 1 321 2 110 1 160 2 34 1 190 1 206 1 20 1 90 1 168 1 
1 1 182 1 105 1 285 1 333 1 259 1 86 2 229 1 43 1 88 1 321 2 160 2 34 1 206 1 20 1 90 1 167 1 168 1 
1 1 141 1 285 2 259 2 96 2 34 1 182 1 105 1 333 1 86 2 43 1 88 1 110 1 321 2 160 4 190 1 164 1 206 2 90 1 20 2 167 1 168 1 
1 1 319 1 182 1 105 1 285 1 141 1 259 1 96 2 88 1 321 2 110 1 160 2 190 1 206 1 20 1 12 1 90 1 168 1 
1 1 182 1 105 1 285 1 333 1 259 1 86 2 229 1 43 1 88 1 321 2 160 2 206 1 20 1 12 1 90 1 167 1 168 1 
1 1 141 1 285 2 259 2 96 2 12 1 182 1 105 1 333 1 86 2 43 1 88 1 110 1 321 2 160 4 190 1 164 1 206 2 90 1 20 2 167 1 168 1 
1 1 141 1 285 2 259 2 96 2 182 1 105 1 333 1 86 2 43 1 88 1 110 1 321 2 160 4 190 1 164 1 206 2 90 1 20 2 167 1 168 1 
49 1 1 1 120 1 218 1 96 1 52 1 348 1 147 1 76 1 221 1 151 1 296 1 15 1 182 1 202 1 105 1 61 1 64 1 42 1 86 1 65 1 88 1 306 1 321 2 160 2 90 1 282 1 168 1 
49 1 1 1 191 1 120 1 213 1 218 1 96 1 348 1 147 1 76 1 221 1 151 1 296 1 15 1 182 1 105 1 61 1 64 1 86 1 65 1 88 1 306 1 321 2 160 2 161 1 90 1 282 1 168 1 
1 1 141 1 285 2 259 2 96 2 182 1 105 1 333 1 86 2 43 1 88 1 110 1 321 2 160 4 190 1 164 1 206 2 90 1 20 2 233 1 167 1 168 1 
49 1 1 1 120 1 285 2 141 1 259 2 218 1 96 2 52 1 147 1 76 1 151 1 296 1 15 1 200 1 243 1 182 1 202 1 105 1 333 1 64 1 42 1 86 2 43 1 88 1 110 1 306 1 321 2 160 4 190 1 164 1 206 2 20 2 90 1 282 1 167 1 168 1 
1 1 285 1 141 1 216 1 259 1 218 1 96 2 54 1 153 1 182 1 105 1 183 1 247 1 333 1 86 1 88 1 231 1 321 2 306 1 110 1 160 3 164 1 190 1 206 1 90 1 20 1 233 1 167 1 168 1 
310 1 1 2 141 3 285 6 6 1 288 1 96 9 145 1 316 1 331 1 297 2 38 2 82 1 182 2 105 2 60 1 360 1 333 3 86 10 204 1 43 3 88 2 321 4 110 3 160 19 365 2 164 3 190 3 208 1 167 3 
310 1 1 3 141 2 171 1 285 4 215 1 288 2 96 14 8 1 145 2 331 1 223 2 154 1 297 1 82 2 38 2 182 3 105 3 60 2 248 1 333 2 86 12 204 1 43 2 88 3 187 1 321 6 110 3 160 26 365 4 164 3 190 3 208 1 167 2 
310 1 1 3 194 1 171 1 141 4 285 8 215 1 288 1 8 1 96 20 145 3 316 1 331 1 175 1 223 1 154 1 297 1 38 4 82 2 182 3 105 3 60 3 360 1 246 1 248 1 333 5 86 21 204 1 43 4 44 1 187 1 88 3 321 6 110 4 45 1 160 41 365 4 276 1 164 4 190 5 208 1 369 1 167 4 
310 1 1 4 194 1 171 1 141 3 285 7 215 1 288 1 8 1 96 20 145 3 316 1 331 1 175 1 223 2 154 1 297 1 38 4 82 2 182 4 105 4 60 3 360 1 246 1 248 1 333 4 86 18 204 1 43 4 44 1 187 1 88 4 321 8 110 4 45 1 160 38 365 4 276 1 164 4 190 5 208 1 369 1 167 3 
310 1 1 2 194 1 171 1 141 7 285 14 29 2 215 1 288 1 8 1 96 27 145 2 331 1 175 1 223 1 154 1 297 1 38 4 82 1 182 2 105 2 60 4 360 2 246 1 248 1 333 8 86 25 204 1 43 7 44 1 187 1 88 2 321 4 110 7 160 52 365 4 276 1 164 7 190 8 208 1 369 1 167 7 
256 1 157 1 358 1 203 1 301 1 69 1 11 1 371 1 314 1 37 1 
163 1 184 1 
189 1 203 1 301 1 339 1 69 1 11 1 371 1 356 1 37 1 
220 1 336 1 
197 1 214 1 80 1 
81 1 256 1 358 1 301 1 203 1 75 1 314 1 185 1 135 1 159 1 69 1 277 1 11 1 48 1 309 1 371 1 115 2 37 1 
81 1 256 1 358 1 301 1 203 1 75 1 314 1 185 1 135 1 159 1 69 1 277 1 11 1 48 1 309 1 371 1 115 2 37 1 
81 1 256 1 358 1 301 1 203 1 75 1 314 1 185 1 135 1 159 1 69 1 277 1 11 1 48 1 309 1 371 1 115 2 37 1 
220 1 336 1 80 1 
220 1 336 1 80 1 
197 1 214 1 
197 1 214 1 80 1 
136 1 267 1 
210 1 257 1 218 2 264 1 292 1 332 1 11 1 267 1 153 2 37 1 81 1 203 1 301 1 183 2 247 2 133 1 185 1 184 1 65 1 135 1 306 2 136 1 163 1 69 1 48 1 371 1 115 1 
1 1 326 2 49 2 192 1 120 1 31 1 289 1 218 2 290 1 96 1 147 1 76 1 221 1 58 1 357 1 15 2 182 1 105 1 61 1 247 2 64 1 86 1 88 1 364 1 306 2 321 2 160 2 90 1 233 1 282 2 168 1 
49 2 180 1 15 2 200 1 119 2 120 1 27 1 64 1 313 1 109 1 205 1 10 1 35 1 367 1 36 1 341 1 178 1 282 2 139 1 
49 1 15 1 119 2 120 1 27 1 64 1 313 1 109 1 10 1 35 1 367 1 36 1 341 1 178 1 282 1 139 1 199 1 
49 1 73 1 15 1 120 1 361 1 64 1 348 1 205 1 305 1 147 1 35 1 76 1 282 1 23 1 
49 1 180 1 15 1 119 2 120 1 27 1 64 1 313 1 109 1 205 1 10 1 35 1 367 1 36 1 341 1 178 1 282 1 139 1 
345 1 
128 1 125 1 159 1 129 1 235 1 253 1 195 1 
129 1 235 1 4 1 5 1 272 1 237 1 108 1 347 1 188 1 89 1 165 1 56 1 308 1 
49 1 211 1 120 1 3 1 347 1 348 1 146 1 349 1 147 1 76 4 56 1 151 1 15 1 104 1 129 1 132 1 108 1 64 2 228 2 188 1 252 1 275 1 89 1 113 1 282 1 
235 2 5 6 215 1 237 3 195 1 8 1 145 1 347 1 219 4 56 1 224 1 38 1 129 5 60 1 362 1 333 1 108 1 188 1 159 4 187 1 110 1 46 4 89 1 164 1 190 1 308 1 167 1 
327 1 235 2 218 1 347 1 175 1 99 1 56 1 153 1 295 1 81 1 129 2 183 1 247 1 362 2 84 1 333 1 185 1 188 1 306 1 231 1 276 1 89 1 190 2 338 1 68 1 138 1 369 1 325 1 
128 1 235 1 129 1 195 1 347 1 188 1 159 1 89 1 253 1 56 1 
235 5 129 5 62 1 362 2 5 10 237 5 333 2 159 5 110 2 219 5 164 2 190 2 46 5 167 2 295 1 
308 1 108 1 
49 1 15 1 235 1 129 1 212 1 108 2 347 1 348 1 188 1 89 1 366 1 113 1 56 1 308 1 282 1 324 1 283 1 
1 1 49 1 327 1 120 1 218 3 348 1 52 1 147 1 76 1 151 1 153 2 296 1 15 1 182 1 202 1 105 1 61 1 183 2 247 2 64 1 42 1 86 1 251 1 65 1 88 1 321 2 306 3 231 2 160 1 90 1 282 1 168 1 
235 2 129 1 246 1 212 1 5 4 237 2 195 2 347 1 188 1 159 4 219 2 46 2 89 1 113 1 56 1 
203 1 170 1 37 1 
203 1 170 1 37 1 
136 1 203 1 314 1 263 1 37 1 
203 1 170 1 37 1 
203 1 22 1 37 1 
203 1 22 1 37 1 
203 1 22 1 37 1 
203 1 37 1 
69 1 371 1 
1 2 182 2 105 2 194 1 246 1 141 1 285 3 333 1 86 4 96 4 43 2 88 2 44 1 321 4 160 8 190 1 276 1 175 1 223 1 369 1 
194 1 246 1 285 2 333 1 86 3 96 3 43 2 125 1 44 1 160 6 276 1 190 1 175 1 369 1 
1 1 182 1 105 1 285 2 141 1 333 1 287 1 86 2 96 2 43 1 88 1 321 2 110 1 160 4 164 1 190 1 167 1 
38 2 60 1 360 1 141 1 285 2 333 1 86 4 96 3 43 1 145 1 110 1 160 7 164 1 190 1 167 1 
1 1 194 1 285 6 141 2 29 1 96 10 175 2 223 1 240 1 38 2 182 1 60 2 105 1 360 1 246 1 333 3 86 10 43 4 44 1 88 1 110 2 321 2 160 20 276 2 190 3 164 2 369 1 167 2 
38 1 160 1 86 1 
96 1 160 1 60 1 
1 1 182 1 105 1 62 1 141 1 285 3 333 1 287 1 86 3 96 3 43 2 88 1 321 2 110 1 160 6 164 1 190 1 167 1 
1 1 141 1 285 2 171 1 215 1 8 1 96 6 145 1 154 1 38 1 182 1 60 1 105 1 333 2 86 6 204 1 43 1 88 1 187 1 321 2 110 2 160 12 164 2 190 2 167 2 
285 2 141 1 333 1 86 3 96 3 43 1 160 6 190 1 276 1 175 1 369 1 
1 1 182 1 359 1 105 1 194 1 141 1 285 2 86 2 96 1 43 1 88 1 44 1 321 2 160 3 276 1 175 1 223 1 
1 1 182 1 105 1 285 5 141 2 333 2 86 5 204 1 96 5 43 3 88 1 321 2 160 10 276 2 190 2 175 2 138 1 369 1 
1 1 182 1 105 1 141 1 285 1 204 1 96 2 88 1 321 2 110 1 160 2 190 1 
1 1 182 1 105 1 285 2 141 1 333 1 86 2 204 1 96 2 43 1 88 1 321 2 110 1 160 4 164 1 190 1 167 1 
1 3 182 3 359 1 105 3 285 2 141 1 86 2 204 1 96 1 43 1 316 1 88 3 321 6 160 3 276 1 175 1 223 1 
0 1 1 5 194 1 141 5 285 12 287 1 96 16 145 1 316 1 175 3 223 2 352 1 38 4 182 5 359 1 105 5 60 3 360 1 246 1 333 5 86 18 87 1 204 1 43 7 44 1 88 5 321 10 110 3 160 34 276 3 164 3 190 5 369 2 167 3 
1 1 194 1 285 2 8 1 96 4 145 1 175 1 38 1 182 1 60 1 105 1 246 1 333 1 86 4 204 1 43 2 88 1 44 1 321 2 160 8 190 1 276 1 369 1 
1 2 194 1 141 1 285 3 287 1 8 1 96 6 145 1 175 1 38 2 182 2 105 2 60 1 360 1 246 1 333 1 86 5 204 1 43 2 44 1 88 2 321 4 110 1 160 11 276 1 164 1 190 2 369 1 
1 3 194 1 141 1 171 1 285 4 215 1 287 1 8 1 96 9 145 1 175 1 223 1 154 1 38 1 182 3 60 1 105 3 246 1 333 3 86 10 204 1 43 3 44 1 88 3 187 1 321 6 110 2 160 19 276 1 164 2 190 3 369 1 167 2 
1 3 194 1 141 2 285 5 171 1 215 1 287 1 8 1 96 10 145 1 175 1 223 1 154 1 38 1 182 3 60 1 105 3 246 1 333 2 86 7 204 1 43 3 44 1 88 3 187 1 321 6 110 2 160 17 276 1 164 2 190 3 369 1 167 1 
1 1 194 1 285 2 8 1 96 4 145 1 175 1 38 1 182 1 60 1 105 1 246 1 333 1 86 4 204 1 43 2 88 1 44 1 321 2 160 8 190 1 276 1 369 1 
1 1 141 1 285 2 171 1 215 1 8 1 96 6 145 1 154 1 38 1 182 1 60 1 105 1 333 2 86 6 204 1 43 1 88 1 187 1 321 2 110 2 160 12 164 2 190 2 167 2 
1 4 194 1 141 2 171 1 285 5 215 1 287 1 8 1 96 10 145 1 175 1 223 2 154 1 38 1 182 4 105 4 60 1 246 1 333 2 86 8 204 1 43 3 44 1 88 4 187 1 321 8 110 2 160 18 276 1 164 2 190 3 369 1 167 1 
1 4 141 3 171 1 285 6 215 1 8 1 96 9 145 1 316 1 223 2 154 1 38 1 182 4 105 4 60 1 333 2 86 7 204 1 43 3 88 4 187 1 321 8 110 3 160 16 164 3 190 3 167 2 
194 2 285 6 141 3 333 1 86 4 96 3 43 3 44 1 160 7 276 3 190 1 175 3 369 1 
1 4 194 1 141 1 171 1 285 4 215 1 8 1 96 10 145 1 316 1 175 1 223 2 154 1 38 1 182 4 105 4 60 1 246 1 333 2 86 8 204 1 43 3 44 1 88 4 187 1 321 8 110 2 160 18 276 1 164 2 190 3 369 1 167 1 
65 1 156 1 306 1 162 1 247 1 57 1 218 1 
299 1 201 1 247 1 218 1 32 1 65 1 156 1 158 1 18 1 306 1 162 1 57 1 
73 1 49 1 125 1 15 1 348 1 120 1 147 1 361 1 76 1 64 1 282 1 
296 1 49 1 15 1 202 1 120 1 245 1 183 1 247 1 64 1 218 2 65 1 348 1 306 2 147 1 76 1 151 1 282 1 153 1 
296 1 49 1 15 1 102 1 202 1 120 1 121 1 245 1 183 1 247 2 172 1 64 1 218 2 65 1 67 1 306 2 126 1 147 2 338 1 76 3 151 2 282 1 153 2 
49 2 120 1 121 1 172 1 218 2 126 1 147 2 76 3 151 2 153 2 296 1 15 2 102 1 245 1 183 1 247 2 64 1 65 1 67 1 306 2 335 1 161 1 338 1 282 2 
81 1 49 1 15 1 120 1 121 1 131 1 172 1 64 1 228 1 108 1 185 1 146 1 126 1 147 1 47 1 76 4 151 1 282 1 
81 1 49 1 15 1 120 1 121 1 172 1 64 1 228 1 108 1 185 1 252 1 146 1 126 1 147 1 76 4 151 1 282 1 
49 1 15 1 66 1 120 1 64 1 282 1 
326 1 49 6 200 1 15 7 120 2 31 1 64 3 66 1 304 1 348 2 275 1 323 1 147 2 127 1 76 3 36 1 151 1 72 1 268 1 282 7 354 1 
1 2 49 1 120 1 194 1 285 2 259 1 218 2 96 3 52 1 147 1 175 1 76 1 151 1 58 1 153 1 296 1 200 1 15 1 182 2 243 1 105 2 202 1 245 1 246 1 183 1 247 1 271 1 333 1 64 1 42 1 86 3 65 2 43 2 44 1 88 2 306 2 321 4 160 6 190 1 276 1 206 1 20 1 90 2 233 1 369 1 282 1 168 2 
81 1 49 1 15 1 211 1 3 1 133 1 108 1 228 1 185 1 347 1 188 1 348 1 146 1 252 1 349 1 89 1 366 1 76 2 56 1 282 1 
49 2 200 1 15 2 104 1 120 1 64 2 66 1 146 1 275 1 147 1 76 2 151 1 282 2 
49 4 73 1 15 4 200 1 169 1 120 1 361 1 64 1 348 1 335 1 147 1 76 1 282 4 
49 2 15 2 242 1 120 1 172 1 217 1 64 2 147 1 127 1 76 1 151 1 282 2 354 1 179 1 
109 1 49 1 15 1 348 1 119 1 120 1 178 1 64 1 282 1 313 1 
49 2 200 1 15 2 120 1 31 1 64 1 364 1 147 1 76 1 36 1 282 2 
73 1 49 4 15 5 200 1 169 1 120 2 361 1 172 1 31 1 64 2 304 1 348 1 147 2 76 3 282 5 268 1 
73 1 49 4 15 5 200 1 169 1 120 2 361 1 172 1 31 1 64 2 304 1 348 1 137 1 147 2 76 3 282 5 
296 1 49 1 15 1 120 1 245 1 183 1 247 1 64 1 218 2 65 1 348 1 306 2 161 1 147 1 76 1 151 1 282 1 153 1 
49 1 15 1 120 1 172 1 64 2 275 1 323 1 147 1 127 1 76 1 151 1 282 1 354 1 
65 1 40 1 318 1 77 1 93 1 
81 2 102 1 40 1 133 1 195 1 185 2 65 1 159 1 67 1 307 1 338 1 112 1 279 1 318 2 77 2 71 1 281 1 225 1 93 2 
192 1 40 1 247 1 289 1 218 1 290 1 306 1 77 1 93 1 
307 1 112 1 40 1 
125 1 280 1 312 1 262 1 
265 1 328 1 74 1 280 1 143 1 312 1 262 1 
328 1 95 1 13 1 
244 1 227 1 74 1 328 3 107 2 143 3 312 1 262 1 265 1 97 1 340 1 280 1 
265 1 328 2 74 1 98 1 166 1 280 1 143 2 312 1 262 1 
265 1 119 1 244 1 9 1 328 1 74 1 341 1 280 1 143 1 178 1 293 1 
265 1 244 1 328 1 74 1 280 1 143 1 262 1 
265 1 244 1 328 1 74 1 143 1 312 1 262 2 
244 1 74 2 328 2 30 1 143 2 262 1 273 1 274 1 265 2 280 1 
342 1 265 1 244 1 328 3 74 1 16 1 166 2 280 2 143 3 312 1 293 1 100 1 262 1 
119 2 244 1 74 1 328 2 143 2 312 1 313 1 262 1 265 1 166 1 280 1 341 1 178 1 139 1 254 1 
265 2 244 1 328 4 74 2 16 1 98 1 166 2 280 2 143 4 312 1 293 1 294 1 262 1 
265 1 244 1 328 1 74 1 280 1 143 1 312 1 262 1 
328 4 74 1 16 1 107 1 143 4 312 2 262 2 97 1 265 1 266 1 340 1 166 2 280 3 293 1 
244 1 74 1 328 2 143 2 312 1 262 1 265 1 166 1 222 1 280 1 92 1 370 1 
244 1 74 1 328 3 107 2 143 3 312 1 262 1 238 1 97 1 265 1 340 2 280 1 
351 2 241 1 280 2 234 1 
265 1 244 1 328 1 74 1 17 1 143 1 
265 1 244 1 328 2 74 1 166 1 280 1 143 2 312 1 100 1 262 1 
209 1 
265 1 244 1 328 1 74 1 280 1 143 1 312 1 262 1 
244 1 74 1 328 3 107 1 143 3 312 1 262 1 265 1 166 1 280 1 100 1 
266 1 16 1 280 1 293 1 
280 1 262 1 

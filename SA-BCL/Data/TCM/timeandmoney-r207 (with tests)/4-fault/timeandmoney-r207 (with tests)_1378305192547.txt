#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 40 (42,319,357) (42,319,357) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 40 (42,319,357) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (79,361) (65,226,287) (42,319,357) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (265,352) (170,171) (170,171) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 40 (42,319,357) (42,319,357) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 147 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 40 (65,226,287) (65,226,287) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 40 (65,226,287) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (265,352) (265,352) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 40 (65,226,287) (65,226,287) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 147 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
18 2 306 2 53 1 308 1 115 9 237 1 270 1 56 1 223 1 248 1 373 1 295 2 9 1 277 2 106 4 146 1 322 1 78 1 323 1 109 9 280 1 151 2 183 6 212 2 325 3 15 1 155 5 215 2 
18 2 306 2 53 1 308 1 115 9 237 1 270 1 56 1 223 1 248 1 373 1 295 2 9 1 277 2 106 4 146 1 322 1 78 1 323 1 109 9 280 1 151 2 183 6 212 2 325 3 15 1 155 5 215 2 
18 2 306 2 53 1 308 1 115 10 237 1 270 1 56 1 223 1 248 1 373 1 295 2 9 1 277 2 106 5 146 1 322 1 78 1 323 1 109 10 280 1 151 2 183 7 212 2 325 4 15 1 155 6 215 2 
18 2 306 2 53 1 308 1 115 7 237 1 270 1 56 1 223 1 248 1 373 1 295 2 9 1 277 2 106 3 146 1 322 1 78 1 109 7 280 1 151 1 183 4 212 2 325 2 15 1 155 4 215 2 
373 1 18 1 306 1 9 1 277 1 53 1 115 4 106 2 78 1 323 1 109 4 151 2 183 3 325 1 212 1 248 1 155 3 215 1 
114 1 373 1 18 1 99 1 295 1 9 1 277 1 115 2 78 1 280 1 109 2 212 1 223 1 155 1 215 1 302 1 
373 1 295 1 9 1 277 2 115 3 237 1 106 1 78 1 109 3 183 1 325 1 155 2 215 2 
18 1 306 1 53 1 115 9 237 1 239 1 248 1 351 1 373 1 295 1 9 1 277 2 106 4 322 1 78 1 109 9 323 1 151 2 183 7 325 3 212 1 15 1 155 5 215 2 
18 1 306 1 53 1 115 9 237 1 239 1 248 1 351 1 373 1 295 1 9 1 277 2 106 4 322 1 78 1 109 9 323 1 151 2 183 7 325 3 212 1 15 1 155 5 215 2 
4 1 219 1 107 1 
4 1 240 2 358 1 
314 1 13 2 1 2 47 2 375 2 381 1 198 2 24 2 
87 1 282 2 1 2 91 1 264 1 236 1 310 1 217 1 191 2 24 2 94 2 25 1 137 1 26 1 70 1 122 2 95 2 30 1 198 3 199 1 314 1 202 1 250 1 316 1 276 1 375 2 298 1 38 1 321 1 13 3 230 1 181 1 45 1 47 2 380 1 381 1 133 1 
13 1 243 1 1 1 47 1 375 1 196 1 381 1 349 1 198 1 24 1 
32 1 50 1 251 1 24 1 355 1 4 1 219 1 13 1 14 1 246 1 196 1 124 1 198 1 82 1 
32 1 251 2 1 1 375 1 24 1 355 1 4 1 219 1 13 1 14 1 47 1 246 1 196 1 124 2 198 1 
356 1 251 1 127 1 20 1 124 1 
356 1 61 1 4 1 219 1 251 2 20 1 124 2 162 1 
251 1 20 1 124 1 
200 1 251 1 1 1 375 1 24 1 356 1 13 1 243 1 47 1 196 1 124 1 349 1 381 1 198 1 
4 1 
356 1 61 1 4 1 219 1 331 1 251 2 20 1 124 2 
136 2 251 5 334 2 20 2 362 1 340 1 356 2 120 2 268 1 61 1 4 1 219 1 148 1 184 1 48 1 124 5 371 1 372 1 158 1 
314 1 107 1 
314 2 1 1 375 1 24 2 13 2 47 1 167 1 198 2 249 1 
72 1 175 1 370 1 
314 1 250 1 38 1 310 1 191 1 94 1 13 1 25 1 181 1 70 1 122 1 211 1 45 1 30 1 198 1 133 1 
58 1 250 1 1 1 175 1 38 1 310 1 191 1 339 1 24 1 94 1 25 1 13 2 181 1 70 1 122 1 45 1 47 1 30 1 133 1 198 2 
314 1 58 1 59 1 1 4 375 1 68 1 339 2 24 5 13 5 44 1 47 4 167 1 198 5 82 1 
13 2 243 1 1 2 47 2 104 1 196 1 198 2 24 2 
314 1 13 3 1 3 47 3 375 1 198 3 339 1 24 3 
13 1 243 1 1 1 47 1 196 1 198 1 24 1 
13 1 1 1 47 1 375 1 196 1 167 1 198 1 249 1 24 1 
87 1 282 1 1 3 91 1 264 1 236 1 310 1 217 1 191 1 24 3 339 1 94 1 25 1 137 1 366 1 70 1 122 1 95 2 246 1 196 1 124 1 30 1 167 1 198 4 32 1 314 1 202 1 250 1 58 1 251 1 316 1 276 1 298 1 375 2 38 1 355 1 13 4 181 1 182 1 45 1 14 1 47 3 381 1 133 1 
314 1 13 2 59 1 1 1 47 1 198 2 82 1 24 2 339 1 
32 1 58 1 251 1 1 3 375 1 339 2 24 3 355 1 4 1 13 3 241 1 182 1 14 1 47 3 246 1 124 1 196 1 167 1 198 3 
72 1 1 2 375 1 175 1 339 1 24 2 13 2 47 2 167 1 198 2 
314 1 250 1 38 1 310 1 191 1 94 1 13 1 25 1 181 1 122 1 70 1 45 1 30 1 198 1 133 1 
314 1 336 1 310 1 191 1 94 1 13 1 25 1 181 1 122 1 70 1 45 1 213 1 30 1 198 1 133 1 
87 1 282 4 52 1 264 1 160 1 236 1 22 1 118 1 55 1 137 1 95 2 222 1 247 1 370 2 199 2 98 1 202 1 72 2 276 1 316 2 175 2 258 1 231 1 81 1 
13 1 1 1 47 1 246 1 104 1 196 1 198 1 24 1 
263 1 159 1 
263 1 159 1 
369 1 117 1 
369 1 117 1 
369 1 117 1 
269 1 263 1 159 1 
269 1 263 1 159 1 
103 1 263 1 159 1 
71 1 111 1 263 2 159 2 369 1 117 1 
269 1 263 1 159 1 
263 1 159 1 307 1 
263 1 159 1 307 1 
263 1 159 1 307 1 
84 1 1 2 263 1 159 1 21 1 24 2 290 1 289 1 346 1 192 1 194 1 347 1 124 1 198 2 314 1 201 1 315 1 251 1 103 1 318 1 105 1 13 2 130 1 47 2 
71 1 201 2 35 1 251 2 315 3 159 2 263 2 318 2 288 1 21 2 12 1 4 1 27 1 346 2 367 1 152 2 112 1 347 1 124 2 
18 1 306 1 212 1 
18 1 212 1 302 1 
361 1 306 2 212 3 156 1 338 1 302 1 
306 1 79 1 212 2 156 1 338 1 302 1 
306 1 212 2 338 1 156 2 302 1 
83 2 136 1 334 1 283 2 52 1 286 1 20 1 362 2 22 1 120 1 290 1 240 3 219 1 4 2 192 1 194 1 247 1 124 5 125 1 224 2 34 1 251 5 374 1 39 1 356 4 61 1 148 1 358 1 131 1 184 3 80 1 81 1 
83 6 136 2 334 2 52 3 89 1 286 1 20 6 362 6 22 3 120 2 121 5 240 9 219 1 4 5 192 4 247 3 124 9 371 1 224 6 57 1 172 1 34 2 251 9 127 5 73 1 356 7 61 1 148 1 358 3 131 3 184 8 80 2 328 1 214 1 81 3 
83 2 136 1 334 1 283 1 52 1 362 2 22 1 120 1 219 1 4 3 240 4 192 1 247 1 124 3 125 1 371 1 224 2 34 1 251 3 39 1 356 2 358 2 131 1 184 3 80 1 81 1 
83 4 136 1 334 1 283 2 52 2 89 1 362 4 22 2 120 1 219 1 4 4 240 7 192 2 247 2 124 4 371 1 125 1 224 4 57 1 172 1 34 1 251 4 39 1 356 3 358 3 131 2 184 5 80 1 81 2 
333 1 70 1 107 1 
43 1 70 1 
297 1 
70 1 45 1 310 1 
70 1 256 1 
70 1 310 1 
333 2 70 3 45 1 326 1 139 1 310 1 
98 2 0 1 142 1 203 1 282 7 51 1 316 3 52 1 22 1 77 1 180 1 363 1 222 3 244 1 96 1 113 2 199 4 
98 2 0 1 142 1 203 1 282 7 51 1 316 3 52 1 22 1 77 1 180 1 363 1 222 3 244 1 96 1 113 2 199 4 
98 2 0 1 142 1 203 1 282 7 51 1 316 3 52 1 22 1 77 1 180 1 363 1 222 3 244 1 96 1 260 1 113 2 199 4 
0 1 87 1 282 31 51 1 67 1 52 4 190 1 22 4 363 5 364 3 137 1 95 2 244 2 222 10 96 1 166 1 247 3 199 16 98 5 202 1 203 1 142 2 205 1 276 1 316 15 77 2 180 2 149 4 150 1 210 1 131 3 154 1 113 3 81 3 
0 1 87 2 88 1 282 9 67 1 51 1 52 1 22 1 363 1 137 2 95 4 222 4 244 1 96 1 199 5 98 3 202 2 142 1 276 2 316 4 77 1 180 1 360 1 113 2 
85 1 295 1 277 1 60 1 75 1 319 1 115 1 191 1 40 1 94 1 78 1 108 1 109 1 357 1 122 1 215 1 
31 1 261 1 185 1 85 1 295 1 277 1 75 1 319 1 115 2 191 1 40 1 94 1 108 1 109 2 122 1 183 1 215 1 
31 1 185 1 85 1 361 1 295 1 75 1 287 1 115 1 10 1 191 1 94 1 42 1 25 1 108 1 181 1 109 1 122 1 183 1 212 1 302 1 
171 1 85 2 261 1 86 1 295 2 277 1 75 2 265 1 115 1 191 1 94 1 108 2 109 1 122 1 30 1 215 1 170 1 
185 1 85 1 295 1 277 1 75 1 319 1 115 1 191 1 40 1 94 1 78 1 108 1 109 1 357 1 122 1 215 1 
163 1 
50 1 136 1 332 1 334 1 187 4 337 2 92 2 191 2 2 1 94 2 3 1 342 1 4 2 240 2 246 1 196 1 141 2 198 1 100 1 251 5 101 2 252 2 8 1 299 1 355 1 61 3 148 1 13 1 358 2 14 1 20 6 69 1 310 1 362 2 24 1 267 1 120 1 219 1 365 1 25 1 122 2 70 1 124 5 30 2 169 1 32 1 274 1 34 1 320 1 227 1 76 2 178 2 181 1 184 2 82 1 
50 1 332 1 331 1 187 2 20 2 24 1 342 1 246 1 124 3 196 1 198 1 32 1 251 3 299 1 320 1 227 1 76 1 355 1 61 1 13 1 14 1 82 1 
50 1 332 1 331 1 187 3 20 1 24 1 342 1 219 1 4 1 246 1 124 3 196 1 198 1 32 1 251 3 101 1 299 1 320 1 227 1 355 1 61 1 13 1 14 1 82 1 
50 1 331 1 332 1 187 3 20 2 24 1 342 1 219 1 4 1 246 1 124 3 196 1 198 1 141 1 32 1 251 3 101 1 299 1 320 1 227 1 76 1 355 1 61 1 13 1 14 1 82 1 
50 1 136 1 332 1 331 1 334 1 187 6 285 1 337 2 69 1 20 7 92 2 362 1 24 1 313 1 120 1 342 1 4 5 219 5 246 1 124 5 196 1 272 1 198 1 141 4 32 1 33 1 100 1 251 5 252 2 101 4 299 1 320 1 227 1 76 4 178 2 355 1 61 3 148 1 13 1 358 2 14 1 184 1 303 1 82 1 
50 1 136 1 332 1 334 1 187 4 337 2 92 2 342 1 3 1 240 2 4 2 246 1 196 1 198 1 141 2 251 4 100 1 252 2 101 2 299 1 355 1 61 2 148 1 13 1 14 1 358 2 69 1 20 4 362 1 24 1 120 1 219 1 124 4 32 1 227 1 320 1 76 2 178 2 184 1 82 1 
50 1 136 1 332 1 334 1 187 4 337 2 20 4 69 1 92 2 362 1 24 1 313 1 120 1 342 1 4 1 219 1 246 1 124 4 196 1 141 2 198 1 32 1 33 1 100 1 251 4 101 2 252 2 299 1 320 1 227 1 76 2 178 2 355 1 61 2 148 1 13 1 358 2 14 1 184 1 303 1 82 1 
50 1 136 1 332 1 334 1 187 4 337 2 20 4 69 1 92 2 362 1 24 1 313 1 120 1 342 1 4 1 219 1 246 1 124 4 196 1 141 2 198 1 32 1 33 1 100 1 251 4 101 2 252 2 299 1 320 1 227 1 76 2 178 2 355 1 61 2 148 1 13 1 358 2 14 1 184 1 303 1 82 1 
135 2 50 1 136 1 332 1 334 1 187 4 20 4 362 1 24 1 313 1 120 1 342 1 4 1 219 1 240 2 343 1 246 1 124 4 196 1 141 2 198 1 32 1 100 1 251 4 101 2 252 2 254 2 299 1 320 1 227 1 76 2 178 2 355 1 61 2 148 1 13 1 379 1 14 1 184 1 46 1 82 1 
50 1 136 1 332 1 334 1 187 5 337 2 69 1 20 5 92 2 362 1 24 1 313 1 120 1 342 1 4 1 219 1 246 1 124 4 196 1 198 1 272 1 141 3 32 1 33 1 100 1 251 4 252 2 101 3 299 1 320 1 227 1 76 3 178 2 355 1 61 2 148 1 13 1 358 2 14 1 184 1 303 1 82 1 
50 1 136 1 332 1 334 1 187 5 337 2 69 1 20 5 92 2 362 1 24 1 313 1 120 1 342 1 4 1 219 1 246 1 124 4 196 1 198 1 272 1 141 3 32 1 33 1 100 1 251 4 252 2 101 3 299 1 320 1 227 1 76 3 178 2 355 1 61 2 148 1 13 1 358 2 14 1 184 1 303 1 82 1 
135 2 50 1 136 1 332 1 334 1 187 4 20 4 362 1 24 1 120 1 3 1 342 1 4 1 219 1 240 2 246 1 124 4 196 1 141 2 198 1 32 1 100 1 251 4 101 2 252 2 254 2 299 1 320 1 227 1 76 2 178 2 355 1 61 2 148 1 13 1 379 1 14 1 184 1 82 1 
0 1 87 1 282 6 51 1 52 1 264 1 236 1 22 1 137 1 95 2 244 1 222 2 96 1 370 1 199 3 98 2 202 1 314 2 72 1 276 1 316 3 175 1 107 1 77 1 258 1 113 1 
87 2 282 14 52 2 91 1 264 2 236 1 22 1 341 1 363 1 364 3 137 2 95 4 222 2 166 1 247 1 370 11 199 8 98 1 314 1 202 2 205 1 72 4 296 1 316 6 276 2 175 11 145 1 11 1 129 1 230 1 149 3 131 2 81 2 
87 1 282 2 1 1 264 1 91 1 310 1 236 1 191 1 24 1 339 1 94 1 25 1 137 1 70 1 122 1 95 2 30 1 293 1 198 2 199 1 314 1 202 1 250 1 58 1 72 1 276 1 316 1 38 1 128 1 257 1 129 1 13 2 181 1 230 1 45 1 211 1 47 1 133 1 
185 1 0 1 87 3 234 1 282 20 51 1 52 3 1 1 91 1 236 3 191 3 93 2 339 1 94 3 137 3 95 6 244 1 96 1 247 2 198 3 199 10 98 4 202 3 58 1 250 2 298 2 208 2 301 1 13 3 113 1 17 2 264 3 310 2 22 3 24 1 363 4 25 2 122 3 70 2 222 8 30 1 370 7 314 2 173 1 72 7 316 10 276 3 174 2 175 7 38 2 77 1 129 1 230 1 181 2 45 2 131 2 47 1 133 2 81 2 
87 2 282 2 1 1 264 2 91 1 236 2 310 1 191 3 24 1 339 1 94 3 25 1 137 2 26 1 70 1 122 3 95 4 348 1 30 1 198 1 169 1 199 1 202 2 276 2 316 1 8 1 60 1 179 1 147 1 13 1 181 1 230 1 258 1 47 1 
87 1 282 3 52 1 1 1 264 1 236 1 22 1 24 1 137 1 95 2 222 1 247 1 370 1 167 1 198 1 199 1 98 1 202 1 72 1 276 1 316 2 175 1 375 1 143 1 129 1 13 1 131 1 47 1 81 1 
87 1 202 1 282 2 72 1 276 1 52 1 175 1 264 1 236 1 118 1 363 1 137 1 258 1 95 2 222 1 370 1 81 1 199 2 
98 1 87 1 202 1 282 2 72 1 276 1 316 2 175 1 264 1 236 1 160 1 22 1 137 1 258 1 95 2 222 1 247 1 370 1 
87 1 282 4 52 1 264 1 236 1 22 1 363 1 137 1 95 2 222 2 247 1 370 2 199 2 98 1 202 1 72 2 276 1 316 2 175 2 131 1 258 1 81 1 
87 1 202 1 282 2 72 1 276 1 52 1 175 1 264 1 236 1 118 1 363 1 137 1 95 2 222 1 348 1 370 1 81 1 199 2 
98 1 87 1 202 1 282 2 72 1 276 1 316 2 175 1 264 1 236 1 160 1 22 1 137 1 95 2 222 1 348 1 247 1 370 1 
87 1 282 4 52 1 264 1 236 1 22 1 363 1 137 1 95 2 222 2 348 1 247 1 370 2 199 2 98 1 202 1 72 2 276 1 316 2 175 2 131 1 81 1 
98 1 87 1 202 1 282 4 72 2 316 2 276 1 52 1 175 2 264 1 236 1 22 1 363 1 137 1 131 1 95 2 222 2 247 1 370 2 81 1 199 2 
87 1 282 2 264 1 91 1 310 1 236 1 191 1 94 1 25 1 137 1 122 1 70 1 95 2 30 1 198 1 199 1 314 1 202 1 250 1 276 1 316 1 298 1 38 1 13 1 230 1 181 1 45 1 133 1 
87 1 66 1 282 2 336 1 264 1 91 1 310 1 236 1 191 1 94 1 25 1 137 1 122 1 70 1 95 2 30 1 198 1 199 1 314 1 202 1 276 1 316 1 13 1 230 1 181 1 45 1 213 1 133 1 
87 1 282 4 52 1 264 1 236 1 22 1 363 1 137 1 95 2 222 2 247 1 370 2 199 2 98 1 202 1 72 2 276 1 316 2 175 2 129 1 131 1 81 1 
87 1 282 4 52 1 264 1 310 1 236 1 93 1 191 1 22 1 94 1 363 1 25 1 137 1 122 1 70 1 95 2 222 2 247 1 370 2 198 1 199 2 98 1 202 1 250 1 72 2 316 2 276 1 60 1 175 2 298 1 38 1 13 1 181 1 45 1 131 1 81 1 133 1 
87 1 282 3 52 1 1 1 264 1 236 1 22 1 24 1 363 1 137 1 95 2 222 1 247 1 195 1 167 1 370 1 198 1 199 2 202 1 72 1 316 1 276 1 375 1 175 1 129 1 13 1 131 1 47 1 81 1 
87 2 284 1 282 19 335 1 52 3 90 1 22 3 291 1 363 3 364 1 137 2 165 2 123 1 95 4 222 6 29 1 166 1 247 3 199 9 98 3 202 2 205 1 276 2 316 10 255 1 41 2 149 2 131 3 360 1 81 3 
87 3 284 1 282 26 67 2 335 1 52 3 90 2 22 2 363 2 364 2 137 3 165 1 95 6 222 4 29 1 166 2 247 2 6 1 273 1 199 14 98 2 202 3 316 12 276 3 255 2 41 4 149 2 324 1 131 3 259 1 62 1 360 1 157 1 81 3 
0 1 87 3 282 41 284 1 51 1 52 5 335 1 90 2 291 1 137 3 95 6 244 1 96 1 247 4 6 1 199 20 98 4 202 3 205 1 255 1 149 4 259 1 62 1 360 1 113 1 157 1 67 1 22 5 23 1 363 4 364 3 165 1 222 8 166 3 29 1 273 1 316 21 276 3 77 1 41 4 131 4 324 1 81 4 
0 1 87 4 284 1 282 38 51 1 67 2 335 1 52 5 90 2 22 4 23 1 291 1 363 3 364 3 137 4 165 1 95 8 244 1 222 7 29 1 96 1 166 3 247 3 6 1 273 1 199 20 98 4 202 4 205 1 276 4 316 18 77 1 255 1 41 4 149 4 324 1 131 4 259 1 62 1 360 1 113 1 157 1 81 4 
0 1 87 2 284 1 282 52 51 1 67 1 335 1 52 8 90 1 22 8 363 7 364 4 137 2 165 1 95 4 244 1 222 14 29 1 96 1 166 2 247 7 6 1 273 1 199 27 98 7 202 2 205 2 276 2 316 25 145 2 77 1 255 1 41 4 149 4 324 1 131 7 259 1 62 1 360 1 113 1 157 1 81 7 
71 1 12 1 378 1 201 1 27 1 346 1 318 1 263 1 159 1 21 1 
84 1 103 1 
201 1 346 1 318 1 263 1 159 1 161 1 144 1 197 1 21 1 
269 1 329 1 
134 1 111 1 307 1 
71 1 201 1 35 1 251 1 315 2 159 1 263 1 318 1 288 1 21 1 12 1 4 1 27 1 346 1 367 1 152 1 347 1 124 1 
71 1 201 1 35 1 251 1 315 2 159 1 263 1 318 1 288 1 21 1 12 1 4 1 27 1 346 1 367 1 152 1 347 1 124 1 
71 1 201 1 35 1 251 1 315 2 159 1 263 1 318 1 288 1 21 1 12 1 4 1 27 1 346 1 367 1 152 1 347 1 124 1 
269 1 111 1 329 1 
269 1 111 1 329 1 
134 1 307 1 
134 1 111 1 307 1 
289 1 130 1 
84 1 1 2 263 1 159 1 288 1 311 1 21 1 24 2 290 1 289 1 346 1 192 1 194 1 124 1 198 2 314 1 201 1 251 1 315 1 103 1 318 1 105 1 356 1 13 2 130 1 152 1 47 2 
87 1 282 2 264 1 91 1 310 1 236 1 191 2 24 2 94 2 25 1 137 1 26 2 70 1 122 2 95 2 28 1 140 1 126 1 292 1 198 2 199 1 202 1 276 1 316 1 228 1 179 1 129 1 13 2 181 1 230 1 16 1 
94 2 65 1 85 1 185 1 226 1 122 2 60 1 233 1 191 2 40 1 
94 1 65 1 85 1 185 1 122 1 132 1 191 1 40 1 
94 1 85 1 352 1 122 1 265 1 30 1 233 1 191 1 
94 1 65 1 85 1 185 1 226 1 122 1 233 1 191 1 40 1 
54 1 
268 1 4 1 219 1 184 1 362 1 107 1 340 1 
136 1 334 1 337 1 69 1 20 1 92 1 362 1 120 1 240 1 4 2 219 1 124 1 251 1 61 1 148 1 358 1 184 1 
83 6 136 4 333 2 334 4 52 2 189 2 238 1 191 3 340 1 94 3 240 12 4 8 345 1 5 1 247 2 7 2 294 2 251 5 102 2 60 1 256 2 300 1 61 3 148 4 358 6 17 2 304 2 305 2 20 5 310 3 362 8 22 2 120 4 218 2 268 1 219 2 365 1 25 4 70 10 122 3 30 1 124 5 224 6 32 2 34 2 376 1 229 2 43 3 181 3 45 3 131 2 184 9 326 1 81 2 
83 5 305 1 136 2 334 2 52 2 20 1 362 5 22 2 120 2 240 6 4 5 219 2 365 1 364 1 166 1 247 2 6 1 124 1 7 2 224 5 34 1 251 1 354 1 61 1 148 2 149 1 358 3 324 1 131 2 184 8 259 1 62 1 232 1 157 1 81 2 
305 1 136 1 334 1 216 1 51 1 52 2 1 1 362 2 22 1 24 1 120 1 243 1 244 1 196 1 124 1 349 1 198 1 7 2 33 1 200 1 251 1 375 1 77 1 148 1 13 1 184 2 47 1 381 1 
136 1 334 1 362 1 340 1 120 1 268 1 148 1 219 1 4 1 184 1 
83 5 305 1 52 2 362 5 22 2 240 10 4 5 131 2 358 5 184 5 247 2 17 1 7 2 81 2 224 5 
61 1 4 1 219 1 251 1 20 1 124 1 
136 2 334 2 20 4 310 1 362 2 191 4 2 1 120 2 94 4 25 1 365 2 5 2 70 1 122 4 138 1 30 2 124 3 371 1 169 1 274 1 34 2 251 3 8 1 376 1 61 2 148 1 181 1 184 2 49 1 
87 1 282 1 1 2 91 1 264 1 310 1 236 1 191 1 217 1 24 2 94 1 25 1 137 1 122 1 70 1 95 2 30 1 198 3 314 1 202 1 250 1 316 1 276 1 375 2 298 1 38 1 13 3 181 1 45 1 47 2 381 1 133 1 
83 2 136 1 34 1 334 1 362 2 120 1 240 4 148 1 219 2 4 4 365 1 358 2 184 1 113 1 224 2 
206 1 346 1 318 1 
206 1 346 1 318 1 
27 1 130 1 346 1 193 1 318 1 
206 1 346 1 318 1 
346 1 318 1 327 1 
346 1 318 1 327 1 
346 1 318 1 327 1 
346 1 318 1 
263 1 159 1 
98 2 0 1 87 2 202 2 282 8 51 1 67 1 52 1 316 4 276 2 22 1 77 1 363 1 137 2 95 4 222 3 244 1 96 1 113 1 199 4 
0 1 98 2 282 6 51 1 316 3 52 1 107 1 77 1 22 1 244 1 222 2 96 1 113 1 199 3 
98 1 87 1 202 1 36 1 282 4 316 2 276 1 52 1 22 1 363 1 137 1 131 1 95 2 222 2 247 1 81 1 199 2 
98 1 282 7 205 1 316 4 52 1 22 1 363 1 364 1 149 2 131 1 222 2 166 1 247 1 81 1 199 3 
0 1 87 2 282 23 51 1 67 2 52 3 22 3 363 4 364 2 137 2 95 4 244 2 222 9 96 1 247 2 199 11 98 5 202 2 205 1 316 12 276 2 317 1 11 1 145 1 77 2 149 2 131 2 113 1 81 2 
282 1 149 1 316 1 
364 1 282 1 199 1 
98 2 202 1 87 1 36 1 282 6 276 1 316 3 52 1 22 1 363 1 137 1 131 1 95 2 222 3 247 1 17 1 81 1 199 3 
98 1 87 1 202 1 282 12 52 2 276 1 316 6 22 2 363 1 364 1 137 1 149 1 131 2 324 1 259 1 95 2 222 2 62 1 360 1 166 1 247 2 6 1 157 1 81 2 199 6 
98 1 363 1 282 6 51 1 316 3 52 1 222 2 244 1 77 1 22 1 199 3 
98 1 0 1 87 1 202 1 282 3 67 1 316 2 276 1 317 1 77 1 363 1 137 1 95 2 222 2 244 1 96 1 199 1 
98 3 202 1 87 1 282 10 216 1 51 1 276 1 316 5 52 2 77 2 22 2 363 2 137 1 95 2 244 2 222 5 360 1 199 5 
87 1 202 1 282 2 276 1 52 1 363 1 137 1 95 2 222 1 360 1 81 1 199 2 
98 1 87 1 202 1 282 4 316 2 276 1 52 1 22 1 363 1 137 1 131 1 95 2 222 2 360 1 247 1 81 1 199 2 
98 1 87 3 202 3 282 3 67 1 316 2 276 3 317 1 77 1 291 1 363 1 137 3 95 6 244 1 222 2 360 1 199 1 
0 1 87 5 282 34 51 2 67 2 52 5 190 1 22 5 291 1 363 5 364 3 137 5 95 10 244 3 222 12 96 1 166 1 247 3 199 16 98 7 202 5 36 1 205 1 316 18 276 5 317 1 77 3 149 4 210 1 131 3 154 1 360 1 113 1 81 3 
0 1 87 1 282 8 51 1 52 1 22 1 364 1 137 1 95 2 244 1 222 2 166 1 96 1 199 4 98 2 202 1 316 4 276 1 77 1 149 1 62 1 360 1 113 1 
0 1 87 2 282 11 51 1 52 2 22 1 363 1 364 1 137 2 95 4 244 1 222 3 96 1 166 1 199 6 98 2 202 2 36 1 205 1 316 5 276 2 77 1 149 2 131 1 62 1 360 1 113 1 81 1 
0 1 87 3 282 19 51 1 67 1 52 3 22 3 363 1 364 1 137 3 95 6 244 1 222 4 96 1 166 1 247 2 6 1 199 9 98 3 202 3 36 1 316 10 276 3 77 1 149 1 324 1 131 2 259 1 62 1 360 1 113 1 81 2 157 1 
0 1 87 3 282 17 51 1 67 1 52 3 22 2 363 2 364 1 137 3 95 6 244 1 222 5 96 1 166 1 247 1 6 1 199 10 98 3 202 3 36 1 316 7 276 3 77 1 149 1 324 1 131 2 259 1 62 1 360 1 113 1 81 2 157 1 
0 1 87 1 282 8 51 1 52 1 22 1 364 1 137 1 95 2 244 1 222 2 166 1 96 1 199 4 98 2 202 1 316 4 276 1 77 1 149 1 62 1 360 1 113 1 
98 1 87 1 202 1 282 12 52 2 276 1 316 6 22 2 363 1 364 1 137 1 149 1 131 2 324 1 259 1 95 2 222 2 62 1 360 1 166 1 247 2 6 1 157 1 81 2 199 6 
0 1 87 4 282 18 51 1 67 2 52 3 22 2 363 2 364 1 137 4 95 8 244 1 222 5 96 1 166 1 247 1 6 1 199 10 98 3 202 4 36 1 316 8 276 4 77 1 149 1 324 1 131 2 259 1 62 1 360 1 113 1 157 1 81 2 
87 4 282 16 67 2 52 3 22 2 291 1 363 3 364 1 137 4 95 8 222 6 166 1 247 2 6 1 199 9 98 3 202 4 316 7 276 4 149 1 324 1 131 3 259 1 62 1 360 1 157 1 81 3 
0 1 98 3 282 7 51 1 316 4 52 1 22 1 77 3 363 3 244 3 222 6 96 2 199 3 
0 1 87 4 282 18 51 1 67 2 52 3 22 2 291 1 363 1 364 1 137 4 95 8 244 1 222 4 96 1 166 1 247 1 6 1 199 10 98 3 202 4 316 8 276 4 77 1 149 1 324 1 131 2 259 1 62 1 360 1 113 1 157 1 81 2 
314 1 13 1 59 1 350 1 198 1 24 1 82 1 
314 1 253 1 59 1 19 1 188 1 116 1 24 1 279 1 13 1 350 1 198 1 82 1 
94 1 25 1 181 1 70 1 122 1 8 1 310 1 30 1 107 1 191 1 169 1 
314 1 1 1 38 1 310 1 191 1 339 1 24 1 94 1 25 1 13 2 181 1 70 1 122 1 45 1 47 1 30 1 133 1 198 2 
314 1 294 1 1 1 38 1 310 2 191 1 256 1 339 1 24 2 94 1 25 1 13 2 181 1 70 3 5 1 122 1 14 1 45 2 47 2 246 1 196 1 133 1 198 2 
1 1 310 2 191 2 24 2 339 1 94 2 25 1 122 2 5 1 70 3 245 1 246 1 196 1 198 2 314 1 294 1 256 1 13 2 181 1 45 2 14 1 47 2 213 1 133 1 
32 1 294 1 333 1 251 2 20 1 310 1 191 3 256 1 94 3 4 1 219 1 43 1 25 1 344 1 181 1 5 1 122 3 70 4 45 1 153 1 245 1 30 1 124 2 
32 1 294 1 333 1 251 2 20 1 310 1 191 3 256 1 94 3 4 1 219 1 43 1 25 1 181 1 5 1 122 3 70 4 45 1 245 1 30 1 124 2 304 1 
94 1 25 1 181 1 122 1 359 1 191 1 
60 1 353 1 310 1 191 2 119 1 94 2 147 1 25 2 181 1 122 2 70 1 45 1 221 1 326 1 30 1 
0 1 87 2 282 6 51 1 52 1 1 1 264 2 310 1 236 2 191 1 93 1 22 1 24 1 339 1 94 1 25 1 137 2 70 1 122 1 95 4 222 2 244 1 96 1 370 1 126 1 198 2 199 3 98 2 314 2 202 2 250 1 72 1 316 3 276 2 60 1 175 1 298 1 38 1 208 1 77 1 129 1 13 2 181 1 45 1 47 1 113 1 133 1 
136 2 333 1 334 2 20 2 362 1 189 1 191 1 340 1 120 2 94 1 268 1 4 1 219 1 122 1 70 2 30 1 124 3 32 1 251 3 102 1 376 1 356 1 61 1 229 1 148 2 43 1 184 1 304 1 
333 1 60 1 310 1 191 2 94 2 25 2 345 1 181 1 122 2 70 2 45 1 359 1 326 1 
8 1 60 1 310 1 177 1 191 4 94 4 25 1 181 1 122 4 70 1 245 1 30 1 169 1 
235 1 309 1 310 1 191 2 119 1 94 2 301 1 25 2 181 1 5 1 122 2 70 1 45 1 221 1 
94 1 18 1 25 1 181 1 122 1 212 1 10 1 30 1 191 1 302 1 
94 2 185 1 25 1 181 1 70 1 122 2 60 1 310 1 16 1 228 1 191 2 
8 1 60 1 310 2 177 1 191 4 228 1 94 5 164 1 25 2 181 2 5 1 122 5 70 3 30 1 169 1 330 1 
8 1 60 1 266 1 310 2 177 1 191 4 228 1 94 5 25 2 181 2 5 1 122 5 70 3 30 1 169 1 330 1 
314 1 1 1 310 1 191 1 339 1 24 1 94 1 25 1 13 2 181 1 70 1 122 1 45 1 47 1 213 1 30 1 133 1 198 2 
353 1 310 1 191 1 119 1 94 1 25 2 181 1 5 1 122 1 70 1 45 1 221 1 326 1 
225 1 314 1 368 1 275 1 176 1 
32 1 97 1 225 1 314 1 251 2 207 1 275 2 176 2 356 1 355 1 4 1 219 1 182 1 242 1 14 1 368 2 246 1 196 1 124 2 
225 1 13 1 275 1 28 1 140 1 176 1 292 1 198 1 24 1 
97 1 225 1 207 1 
373 1 9 1 155 1 107 1 
373 1 109 1 9 1 277 1 115 1 155 1 215 1 
109 1 295 1 75 1 
373 1 9 1 277 1 262 1 115 3 377 1 78 1 109 3 280 2 110 1 155 1 215 1 
373 1 109 2 151 1 9 1 183 1 277 1 115 2 155 1 215 1 
18 1 306 1 277 1 115 1 106 1 78 1 109 1 212 1 248 1 155 1 215 1 
78 1 109 1 9 1 277 1 115 1 155 1 215 1 
373 1 78 1 109 1 9 2 277 1 115 1 215 1 
64 1 78 1 109 2 9 1 277 2 271 1 115 2 155 1 215 2 168 1 
373 1 9 1 277 1 115 3 106 1 322 1 78 1 109 3 183 2 325 1 15 1 155 2 215 1 
373 1 361 1 18 1 306 1 9 1 277 1 115 2 78 1 109 2 220 1 183 1 212 2 155 1 215 1 302 1 
373 1 9 1 277 2 115 4 106 1 78 1 109 4 323 1 151 1 183 2 325 1 155 2 215 2 
373 1 78 1 109 1 9 1 277 1 115 1 155 1 215 1 
373 2 9 2 262 1 277 1 115 4 377 1 106 1 280 1 109 4 183 2 325 1 63 1 155 3 215 1 
351 1 373 1 78 1 204 1 109 2 9 1 183 1 186 1 277 1 115 2 155 1 215 1 
373 1 9 1 262 1 277 1 115 3 377 2 312 1 78 1 109 3 280 2 155 1 215 1 
281 1 37 1 278 2 155 2 
78 1 109 1 277 1 74 1 115 1 215 1 
322 1 373 1 78 1 109 2 9 1 183 1 277 1 115 2 155 1 215 1 
209 1 
373 1 78 1 109 1 9 1 277 1 115 1 155 1 215 1 
373 1 9 1 277 1 115 3 322 1 78 1 109 3 280 1 183 1 155 1 215 1 
325 1 63 1 155 1 106 1 
9 1 155 1 

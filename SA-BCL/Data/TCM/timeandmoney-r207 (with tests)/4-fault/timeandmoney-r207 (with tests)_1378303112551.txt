#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 133 142 49 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
179 1 284 2 94 1 180 1 364 6 363 1 155 1 156 1 250 2 22 1 368 1 7 1 136 1 256 2 164 1 322 2 258 2 323 5 57 9 139 4 169 3 31 1 380 1 63 1 13 2 351 9 333 2 120 1 
179 1 284 2 94 1 180 1 364 6 363 1 155 1 156 1 250 2 22 1 368 1 7 1 136 1 256 2 164 1 322 2 258 2 323 5 57 9 139 4 169 3 31 1 380 1 63 1 13 2 351 9 120 1 333 2 
179 1 284 2 94 1 180 1 364 7 363 1 155 1 156 1 250 2 22 1 368 1 7 1 136 1 256 2 164 1 322 2 258 2 323 6 57 10 139 5 169 4 31 1 380 1 63 1 13 2 351 10 120 1 333 2 
179 1 284 2 94 1 180 1 364 4 363 1 155 1 156 1 250 2 22 1 368 1 7 1 256 2 164 1 322 2 258 2 323 4 57 7 139 3 169 2 31 1 380 1 63 1 13 2 351 7 120 1 333 1 
136 1 256 1 179 1 284 1 322 1 323 3 258 1 57 4 180 1 364 3 139 2 169 1 380 1 22 1 13 1 351 4 7 1 333 2 
256 1 298 1 322 1 43 1 284 1 323 1 94 1 57 2 180 1 380 1 250 1 63 1 13 1 128 1 351 2 7 1 
322 2 323 2 57 3 180 1 139 1 364 1 169 1 380 1 250 1 13 2 351 3 368 1 7 1 
136 1 256 1 179 1 66 1 284 1 322 2 258 1 323 5 57 9 180 1 340 1 363 1 364 7 139 4 31 1 169 3 380 1 250 1 22 1 13 2 351 9 368 1 7 1 333 2 
136 1 256 1 179 1 66 1 284 1 322 2 258 1 323 5 57 9 180 1 340 1 363 1 364 7 139 4 31 1 169 3 380 1 250 1 22 1 13 2 351 9 368 1 7 1 333 2 
145 1 17 1 362 1 
362 1 370 1 173 2 
255 2 379 2 86 1 346 1 36 2 196 2 260 2 175 2 
310 1 283 1 312 1 337 1 286 2 1 1 125 1 154 1 182 1 228 1 74 1 131 1 100 1 186 1 135 1 255 2 162 1 189 1 346 1 234 1 260 3 376 2 235 1 349 2 212 1 379 2 305 1 144 1 85 2 12 1 86 1 115 1 65 2 36 2 196 2 217 1 175 3 
255 1 379 1 123 1 346 1 36 1 196 1 260 1 345 1 274 1 175 1 
123 1 17 1 269 1 260 1 362 1 95 1 247 1 110 1 213 1 36 1 350 1 77 1 175 1 101 1 
255 1 123 1 17 1 269 2 260 1 362 1 95 1 247 1 379 1 213 1 36 1 196 1 350 1 175 1 101 2 
359 1 269 1 332 1 59 1 101 1 
17 1 64 1 359 1 269 2 362 1 332 1 205 1 101 2 
359 1 269 1 101 1 
255 1 123 1 346 1 269 1 260 1 379 1 36 1 196 1 6 1 345 1 332 1 274 1 175 1 101 1 
362 1 
17 1 359 1 87 1 269 2 362 1 332 1 205 1 101 2 
142 1 49 1 150 1 93 1 33 1 269 3 133 1 332 2 249 1 101 3 
145 1 86 1 
255 1 335 1 260 2 379 1 86 2 265 1 36 2 196 1 175 2 
276 1 0 1 118 1 
310 1 162 1 189 1 260 1 235 1 376 1 152 1 154 1 212 1 182 1 144 1 85 1 86 1 65 1 186 1 175 1 
310 1 276 1 162 1 189 1 260 2 235 1 376 1 154 1 212 1 182 1 379 1 144 1 85 1 307 1 65 1 36 1 132 1 196 1 186 1 175 2 
255 1 335 1 336 1 260 5 379 4 86 1 307 1 36 5 132 2 196 4 77 1 216 1 174 1 175 5 
379 2 123 1 231 1 36 2 196 2 260 2 274 1 175 2 
255 1 379 3 86 1 36 3 132 1 196 3 260 3 175 3 
379 1 123 1 36 1 196 1 260 1 274 1 175 1 
255 1 335 1 379 1 123 1 265 1 36 1 196 1 260 1 175 1 
310 1 335 1 283 1 42 1 123 1 312 1 337 1 286 2 269 1 95 1 247 1 1 1 154 1 182 1 252 1 228 1 132 1 186 1 135 1 101 1 255 2 162 1 189 1 346 1 234 1 260 4 235 1 376 1 349 1 212 1 379 3 305 1 144 1 12 1 85 1 86 1 307 1 213 1 65 1 36 3 196 3 350 1 217 1 175 4 
379 1 86 1 336 1 36 2 196 1 132 1 77 1 260 2 175 2 
255 1 335 1 123 1 269 1 260 3 362 1 95 1 247 1 290 1 379 3 252 1 213 1 307 1 36 3 132 2 196 3 350 1 175 3 101 1 
255 1 335 1 276 1 260 2 379 2 36 2 132 1 118 1 196 2 175 2 
310 1 162 1 189 1 260 1 235 1 376 1 154 1 212 1 182 1 144 1 85 1 86 1 65 1 186 1 175 1 
189 1 83 1 260 1 235 1 376 1 154 1 212 1 182 1 144 1 85 1 86 1 158 1 65 1 186 1 175 1 
220 1 283 2 0 2 312 1 337 1 286 2 339 1 1 1 125 2 291 1 253 1 318 1 135 1 102 1 276 2 325 1 349 4 378 1 194 1 305 1 118 2 217 1 39 1 355 1 
379 1 123 1 36 1 231 1 196 1 260 1 95 1 175 1 
348 1 153 1 
348 1 153 1 
331 1 26 1 
331 1 26 1 
331 1 26 1 
62 1 348 1 153 1 
160 1 348 1 153 1 
331 1 352 1 348 2 153 2 26 1 377 1 
62 1 348 1 153 1 
62 1 348 1 153 1 
236 1 348 1 153 1 
236 1 348 1 153 1 
236 1 348 1 153 1 
356 1 200 1 269 1 245 1 153 1 288 1 225 1 184 1 160 1 317 1 295 1 101 1 257 1 260 2 348 1 60 1 192 1 211 1 379 2 86 1 36 2 196 2 175 2 354 1 
356 2 163 1 208 2 269 2 151 1 362 1 348 2 153 2 60 1 377 1 211 2 113 1 381 1 159 1 184 2 52 1 295 2 101 2 354 3 
256 1 284 1 258 1 
256 1 284 1 43 1 
168 1 105 1 284 3 43 1 258 2 109 1 
105 1 284 2 43 1 258 1 109 1 297 1 
105 1 284 2 43 1 258 1 109 2 
150 1 220 1 17 1 359 1 269 5 362 2 46 2 288 1 124 1 249 1 225 1 291 1 76 2 204 2 370 1 80 1 205 1 101 5 102 1 257 1 374 1 138 1 325 1 10 1 84 1 33 1 237 3 172 2 173 3 241 1 332 4 149 1 
311 5 150 2 93 1 220 3 17 1 359 6 269 9 362 5 46 6 124 3 225 4 249 2 291 3 229 1 76 6 370 3 369 1 80 2 101 9 205 1 102 3 103 1 104 1 347 1 374 1 191 1 325 3 59 5 33 2 237 8 172 6 173 9 241 1 332 7 149 2 
150 1 93 1 220 1 17 1 269 3 362 3 46 2 249 1 225 1 124 1 291 1 204 1 76 2 370 2 80 1 101 3 102 1 138 1 325 1 84 1 33 1 237 3 172 2 173 4 332 2 149 1 
150 1 93 1 220 2 17 1 269 4 362 4 46 4 249 1 225 2 124 2 291 2 204 2 76 4 370 3 80 1 101 4 102 2 103 1 104 1 347 1 138 1 325 2 84 1 33 1 237 5 172 4 173 7 332 3 149 1 
189 1 145 1 25 1 
189 1 166 1 
210 1 
212 1 189 1 154 1 
189 1 96 1 
212 1 189 1 
212 1 157 1 189 3 25 2 301 1 154 1 
206 1 283 3 220 1 300 1 9 1 325 1 349 7 289 1 140 1 125 4 226 1 3 1 253 3 39 2 178 1 232 1 40 2 
206 1 283 3 220 1 300 1 9 1 325 1 349 7 289 1 140 1 125 4 226 1 3 1 253 3 39 2 178 1 232 1 40 2 
206 1 283 3 220 1 201 1 300 1 9 1 325 1 349 7 289 1 140 1 125 4 226 1 3 1 253 3 39 2 178 1 232 1 40 2 
282 1 283 15 220 4 312 1 337 1 286 2 1 1 289 1 20 1 125 16 124 3 226 1 366 1 291 3 3 2 367 1 253 10 316 3 185 1 232 2 135 1 102 3 206 1 9 1 300 2 58 4 325 4 349 31 140 2 279 1 308 1 39 5 40 3 178 5 
282 1 220 1 283 4 312 2 337 2 286 4 1 2 289 1 125 5 3 1 253 4 53 1 232 1 135 2 206 1 9 1 300 1 325 1 349 9 140 1 39 3 243 1 40 2 178 1 
92 1 43 1 284 2 180 1 364 1 71 1 273 1 250 1 182 1 203 1 344 1 75 1 4 1 7 1 256 1 373 1 322 1 323 1 258 1 57 2 376 1 30 1 302 1 168 1 380 1 144 1 85 1 13 1 65 1 351 2 
92 1 43 1 284 2 180 1 364 2 71 1 273 1 250 1 182 1 343 1 203 1 4 1 7 1 371 1 256 1 373 1 322 1 323 1 258 1 57 3 376 1 30 1 302 1 168 1 144 1 85 1 263 1 13 1 65 1 351 3 
92 1 43 1 284 2 180 1 364 2 250 1 273 1 182 1 343 1 203 1 4 1 7 1 373 1 256 1 323 1 258 1 57 2 376 1 30 1 168 1 144 1 85 1 263 1 65 1 351 2 
92 2 18 1 248 1 182 1 273 2 250 2 371 1 137 1 233 1 189 1 322 1 108 1 107 1 57 1 376 1 235 1 30 2 212 1 144 1 85 1 13 1 65 1 351 1 
92 1 43 1 284 2 71 1 273 1 250 1 182 1 203 1 75 1 4 1 256 1 373 1 322 1 258 1 57 1 376 1 30 1 302 1 168 1 380 1 144 1 85 1 263 1 13 1 65 1 351 1 
285 1 
150 1 95 1 247 1 248 1 249 1 251 2 50 1 294 2 205 3 101 5 165 2 207 1 260 1 110 1 212 1 213 1 65 2 350 1 173 2 353 1 175 1 123 1 17 1 358 1 359 6 269 5 362 2 313 1 361 1 272 1 315 1 182 1 21 1 183 1 76 2 77 1 370 2 78 1 80 1 137 1 189 1 374 1 27 2 235 2 376 2 193 4 141 2 144 1 85 2 237 2 33 1 34 2 36 1 329 1 281 2 
123 1 269 3 359 2 95 1 247 1 315 1 21 1 77 1 50 1 78 1 101 3 205 1 260 1 110 1 193 2 213 1 36 1 350 1 87 1 353 1 175 1 281 1 
123 1 17 1 359 1 269 3 95 1 362 1 247 1 315 1 21 1 77 1 50 1 78 1 101 3 205 1 165 1 260 1 110 1 193 3 213 1 36 1 350 1 87 1 353 1 175 1 
123 1 17 1 269 3 359 2 95 1 362 1 247 1 315 1 21 1 77 1 50 1 78 1 205 1 101 3 165 1 27 1 260 1 110 1 193 3 213 1 36 1 87 1 350 1 353 1 175 1 281 1 
41 1 150 1 95 1 247 1 47 1 249 1 251 2 50 1 294 2 101 5 205 3 165 4 260 1 110 1 213 1 350 1 353 1 175 1 123 1 17 5 269 5 359 7 270 1 362 5 313 1 224 1 315 1 21 1 77 1 76 1 370 2 78 1 374 1 27 4 193 6 141 2 33 1 237 1 147 1 36 1 329 1 34 2 87 1 281 4 
150 1 95 1 247 1 249 1 251 2 50 1 294 2 101 4 205 2 165 2 260 1 110 1 213 1 350 1 173 2 353 1 175 1 123 1 17 1 269 4 359 4 313 1 362 2 315 1 21 1 183 1 77 1 76 1 370 2 78 1 374 1 27 2 193 4 141 2 33 1 237 1 329 1 36 1 34 2 281 2 
41 1 150 1 123 1 17 1 359 4 269 4 270 1 362 1 313 1 95 1 247 1 249 1 315 1 251 2 21 1 76 1 77 1 50 1 370 2 294 2 78 1 205 2 101 4 165 2 374 1 27 2 260 1 110 1 193 4 141 2 237 1 213 1 33 1 147 1 34 2 329 1 36 1 350 1 353 1 281 2 175 1 
41 1 150 1 123 1 17 1 359 4 269 4 270 1 362 1 313 1 95 1 247 1 249 1 315 1 251 2 21 1 76 1 77 1 50 1 370 2 294 2 78 1 205 2 101 4 165 2 374 1 27 2 260 1 110 1 193 4 141 2 237 1 213 1 33 1 147 1 34 2 329 1 36 1 350 1 353 1 281 2 175 1 
150 1 122 2 123 1 17 1 359 4 269 4 362 1 313 1 95 1 247 1 249 1 315 1 127 2 251 2 21 1 129 1 23 1 76 1 77 1 50 1 294 2 78 1 205 2 101 4 165 2 374 1 27 2 260 1 110 1 193 4 326 1 237 1 213 1 33 1 147 1 36 1 350 1 173 2 353 1 281 2 175 1 
41 1 150 1 123 1 17 1 269 4 359 5 270 1 362 1 313 1 95 1 247 1 249 1 224 1 315 1 251 2 21 1 76 1 77 1 50 1 370 2 294 2 78 1 205 2 101 4 165 3 374 1 27 3 260 1 110 1 193 5 141 2 237 1 33 1 213 1 147 1 34 2 329 1 36 1 350 1 353 1 175 1 281 3 
41 1 150 1 123 1 17 1 269 4 359 5 270 1 362 1 313 1 95 1 247 1 249 1 224 1 315 1 251 2 21 1 76 1 77 1 50 1 370 2 294 2 78 1 205 2 101 4 165 3 374 1 27 3 260 1 110 1 193 5 141 2 237 1 33 1 213 1 147 1 34 2 329 1 36 1 350 1 353 1 175 1 281 3 
150 1 95 1 247 1 249 1 251 2 50 1 294 2 101 4 205 2 165 2 260 1 110 1 213 1 350 1 173 2 353 1 175 1 122 2 123 1 17 1 269 4 359 4 313 1 362 1 315 1 127 2 21 1 129 1 183 1 77 1 76 1 78 1 374 1 27 2 193 4 33 1 237 1 36 1 281 2 
220 1 283 3 0 1 312 1 337 1 286 2 1 1 289 1 125 3 253 2 232 1 135 1 276 1 206 1 9 1 300 1 325 1 349 6 194 1 305 1 145 1 86 2 118 1 217 1 39 2 40 1 
283 6 0 11 220 2 312 2 337 2 286 4 341 1 1 2 125 8 124 2 366 1 99 1 291 2 228 1 230 1 253 2 316 3 135 2 102 1 276 11 259 1 8 1 58 3 325 1 349 14 305 1 279 1 86 1 115 1 118 4 217 2 39 1 178 1 
310 1 198 1 283 1 312 1 68 1 337 1 286 2 152 1 1 1 154 1 125 1 182 1 228 1 132 1 186 1 135 1 162 1 189 1 8 1 260 2 376 1 235 1 349 2 212 1 379 1 144 1 305 1 85 1 86 1 114 1 307 1 115 1 65 1 36 1 118 1 196 1 217 1 175 2 
283 10 0 7 337 3 286 6 287 1 1 3 289 1 154 2 291 2 253 8 296 2 102 2 162 2 206 1 56 1 300 1 9 1 8 1 209 2 260 3 349 20 262 2 61 1 212 2 305 3 263 1 12 2 115 1 307 1 65 3 118 7 217 3 175 3 178 4 310 2 121 2 220 3 312 3 124 2 125 10 182 2 228 1 132 1 186 2 232 1 135 3 276 7 189 2 376 3 235 1 325 3 379 1 144 2 85 3 86 2 36 1 196 1 39 4 40 1 
283 1 312 2 337 2 286 4 360 1 1 2 125 1 248 1 365 1 182 2 228 1 344 1 132 1 100 2 135 2 137 1 189 3 324 1 260 1 376 8 235 2 349 2 111 1 212 2 194 1 379 1 144 2 305 2 263 1 85 8 115 1 65 7 36 1 196 1 38 1 217 2 89 1 175 1 91 1 
255 1 335 1 379 1 36 1 196 1 260 1 29 1 175 1 
276 1 0 1 220 1 312 1 337 1 286 2 349 2 1 1 125 2 194 1 305 1 291 1 253 1 118 1 217 1 178 1 135 1 355 1 
102 1 276 1 0 1 283 2 312 1 337 1 286 2 339 1 325 1 349 2 1 1 194 1 305 1 253 1 118 1 217 1 39 1 135 1 
220 1 0 2 283 2 312 1 337 1 286 2 1 1 125 2 124 1 291 1 253 2 135 1 102 1 276 2 325 1 349 4 194 1 305 1 118 2 217 1 39 1 178 1 
276 1 0 1 220 1 312 1 337 1 286 2 349 2 1 1 125 2 305 1 291 1 253 1 118 1 89 1 217 1 178 1 135 1 355 1 
102 1 276 1 0 1 283 2 312 1 337 1 286 2 339 1 325 1 349 2 1 1 305 1 253 1 118 1 89 1 217 1 39 1 135 1 
220 1 0 2 283 2 312 1 337 1 286 2 1 1 125 2 124 1 291 1 253 2 135 1 102 1 276 2 325 1 349 4 305 1 118 2 217 1 89 1 39 1 178 1 
102 1 276 2 283 2 0 2 220 1 312 1 337 1 286 2 325 1 1 1 349 4 124 1 125 2 305 1 291 1 253 2 118 2 217 1 39 1 178 1 135 1 
310 1 283 1 312 1 337 1 286 2 1 1 125 1 154 1 182 1 228 1 186 1 135 1 162 1 189 1 260 1 376 1 235 1 349 2 212 1 144 1 305 1 12 1 85 1 86 1 115 1 65 1 217 1 175 1 
283 1 312 1 337 1 286 2 1 1 125 1 154 1 126 1 182 1 158 1 228 1 186 1 135 1 189 1 83 1 260 1 376 1 235 1 349 2 212 1 144 1 305 1 85 1 86 1 115 1 65 1 217 1 175 1 
220 1 0 2 283 2 312 1 337 1 286 2 1 1 125 2 124 1 291 1 253 2 135 1 102 1 276 2 8 1 325 1 349 4 305 1 118 2 217 1 39 1 178 1 
310 1 121 1 283 2 0 2 220 1 312 1 337 1 286 2 1 1 125 2 154 1 124 1 182 1 291 1 253 2 344 1 186 1 135 1 102 1 276 2 162 1 189 1 260 1 376 1 325 1 349 4 212 1 144 1 305 1 12 1 85 1 65 1 118 2 217 1 39 1 178 1 175 1 
335 1 283 1 220 1 0 1 312 1 337 1 286 2 1 1 124 1 125 2 291 1 253 1 79 1 135 1 102 1 255 1 276 1 8 1 260 1 325 1 349 3 379 1 305 1 36 1 196 1 118 1 217 1 178 1 175 1 
244 1 283 10 220 3 312 2 337 2 286 4 1 2 72 1 125 9 124 3 366 1 291 3 253 6 316 1 135 2 102 3 82 1 190 1 58 2 325 3 349 19 279 1 146 1 116 2 35 1 215 1 88 2 39 3 243 1 178 3 
282 2 219 1 283 12 244 2 220 3 67 1 312 3 337 3 338 1 286 6 1 3 72 1 125 14 124 3 366 2 291 3 253 4 316 2 135 3 102 2 320 1 82 2 190 1 325 2 58 2 349 26 278 1 116 1 35 1 88 4 197 1 39 2 178 2 243 1 
282 1 283 21 244 1 337 3 286 6 338 1 1 3 289 1 291 4 253 8 102 4 206 1 9 1 300 1 58 4 349 41 116 1 178 4 219 1 220 5 312 3 67 1 124 4 125 20 72 1 366 3 316 3 232 1 135 3 320 1 82 2 190 1 325 5 278 1 143 1 279 1 146 1 35 1 88 4 197 1 39 4 243 1 40 1 
282 2 219 1 244 1 283 18 220 5 67 1 312 4 337 4 338 1 286 8 1 4 289 1 72 1 125 20 124 4 366 3 291 4 253 7 316 3 232 1 135 4 102 3 320 1 206 1 82 2 190 1 300 1 9 1 58 4 325 4 349 38 278 1 143 1 279 1 146 1 116 1 35 1 88 4 197 1 39 4 40 1 243 1 178 3 
282 1 219 1 244 1 283 25 220 8 67 1 312 2 337 2 338 1 286 4 341 2 1 2 289 1 72 1 125 27 124 7 366 2 291 7 253 14 316 4 232 1 135 2 102 7 320 1 206 1 82 1 190 1 300 1 9 1 58 4 325 8 349 52 278 1 279 2 116 1 35 1 88 4 197 1 39 7 40 1 243 1 178 7 
304 1 356 1 113 1 163 1 184 1 348 1 153 1 295 1 377 1 211 1 
245 1 160 1 
97 1 356 1 238 1 28 1 184 1 348 1 153 1 295 1 211 1 
62 1 112 1 
236 1 5 1 352 1 
356 1 163 1 208 1 269 1 151 1 362 1 348 1 153 1 60 1 377 1 211 1 113 1 381 1 159 1 184 1 295 1 101 1 354 2 
356 1 163 1 208 1 269 1 151 1 362 1 348 1 153 1 60 1 377 1 211 1 113 1 381 1 159 1 184 1 295 1 101 1 354 2 
356 1 163 1 208 1 269 1 151 1 362 1 348 1 153 1 60 1 377 1 211 1 113 1 381 1 159 1 184 1 295 1 101 1 354 2 
62 1 352 1 112 1 
62 1 352 1 112 1 
236 1 5 1 
236 1 5 1 352 1 
200 1 317 1 
356 1 357 1 200 1 269 1 245 1 153 1 288 1 225 1 159 1 184 1 160 1 317 1 295 1 101 1 257 1 208 1 260 2 348 1 192 1 211 1 379 2 86 1 36 2 196 2 332 1 175 2 354 1 
16 1 283 1 312 1 337 1 286 2 314 1 1 1 125 1 271 1 182 1 2 1 228 1 100 2 135 1 189 1 324 1 8 1 260 2 376 2 349 2 212 1 144 1 305 1 85 2 171 1 115 1 65 2 36 2 217 1 175 2 91 1 
188 1 256 1 373 1 199 1 284 2 43 1 258 1 376 2 45 1 30 1 302 1 168 1 182 1 144 1 203 1 263 1 85 2 65 2 344 1 
188 1 256 1 373 1 284 2 43 1 258 1 376 1 30 1 302 1 168 1 182 1 203 1 144 1 263 1 85 1 65 1 187 1 
137 1 372 1 189 1 233 1 235 1 376 1 45 1 30 1 248 1 212 1 182 1 144 1 85 1 65 1 
188 1 256 1 373 1 199 1 284 2 43 1 258 1 376 1 45 1 30 1 302 1 168 1 182 1 203 1 144 1 263 1 85 1 65 1 
48 1 
145 1 237 1 17 1 76 1 362 1 70 1 275 1 
150 1 17 1 374 1 269 1 359 1 362 2 249 1 141 1 33 1 237 1 329 1 34 1 76 1 173 1 370 1 101 1 205 1 
150 4 44 2 96 2 46 6 154 3 249 4 157 1 98 2 202 1 291 2 344 1 51 1 296 2 101 5 205 3 102 2 161 2 106 2 166 3 212 3 170 2 213 2 65 3 14 1 172 6 173 12 119 1 266 2 220 2 17 2 359 5 269 5 362 8 70 1 124 2 272 1 182 4 227 1 76 8 370 6 134 2 25 2 275 1 80 2 189 10 374 4 235 1 376 3 325 2 144 3 85 3 237 9 33 4 280 2 
150 2 219 1 220 2 17 2 338 1 269 1 359 1 362 5 46 5 249 2 124 2 272 1 366 1 291 2 76 5 370 3 316 1 80 1 101 1 205 1 102 2 320 1 374 2 58 1 325 2 278 1 195 1 237 8 33 2 172 5 240 1 197 1 173 6 266 2 280 1 
41 1 150 1 220 1 123 1 269 1 289 1 249 1 76 1 6 1 345 1 274 1 232 1 101 1 255 1 346 1 374 1 300 1 260 1 379 1 33 1 237 1 36 1 196 1 266 1 175 1 334 1 
150 1 237 1 17 1 33 1 374 1 76 1 362 1 70 1 275 1 249 1 
102 2 220 2 362 5 325 2 46 5 124 2 291 2 237 5 76 5 172 5 173 10 370 5 266 2 280 1 296 1 
17 1 269 1 359 1 362 1 101 1 205 1 
150 2 93 1 358 1 246 1 359 4 269 3 181 1 361 1 342 1 154 1 249 2 248 1 272 2 182 3 202 2 292 1 76 2 51 1 80 2 205 2 101 3 137 1 81 1 189 2 374 1 299 1 376 4 235 2 212 2 144 2 85 4 33 2 237 2 65 4 
310 1 283 1 312 1 337 1 286 2 1 1 154 1 182 1 228 1 186 1 135 1 255 2 162 1 189 1 346 1 234 1 260 3 376 1 235 1 349 1 212 1 379 2 144 1 305 1 85 1 12 1 86 1 65 1 36 2 196 2 217 1 175 3 
150 1 374 1 17 2 362 4 46 2 249 1 272 1 33 1 237 1 172 2 76 2 370 2 173 4 40 1 80 1 
327 1 295 1 211 1 
113 1 317 1 295 1 73 1 211 1 
327 1 295 1 211 1 
327 1 295 1 211 1 
328 1 295 1 211 1 
328 1 295 1 211 1 
328 1 295 1 211 1 
295 1 211 1 
348 1 153 1 
282 1 206 1 220 1 283 4 312 2 337 2 286 4 9 1 300 1 325 1 349 8 1 2 289 1 125 4 253 3 39 2 40 1 178 1 232 1 135 2 
206 1 283 3 220 1 9 1 300 1 325 1 349 6 289 1 125 3 145 1 253 2 39 2 40 1 232 1 
102 1 283 2 220 1 312 1 337 1 286 2 325 1 1 1 349 4 124 1 125 2 291 1 253 2 117 1 39 1 178 1 135 1 
102 1 283 4 220 1 325 1 58 2 349 7 125 3 124 1 279 1 366 1 291 1 253 2 316 1 39 1 178 1 
282 2 220 3 283 12 312 2 337 2 223 1 286 4 341 1 1 2 289 1 124 2 125 11 291 2 230 1 253 9 316 2 232 2 135 2 102 2 206 1 300 2 9 1 58 2 325 3 349 23 279 1 39 5 40 1 178 4 
283 1 58 1 349 1 
316 1 349 1 125 1 
102 1 283 3 220 1 312 1 337 1 286 2 325 1 1 1 349 6 124 1 125 3 291 1 117 1 253 3 296 1 39 2 178 1 135 1 
219 1 283 6 220 2 312 1 337 1 286 2 338 1 1 1 125 6 124 2 366 1 291 2 253 2 316 1 135 1 102 2 320 1 58 1 325 2 349 12 278 1 197 1 39 1 178 1 243 1 
220 1 283 3 300 1 325 1 349 6 289 1 125 3 253 2 39 1 232 1 178 1 
282 1 206 1 283 2 312 1 223 1 337 1 286 2 300 1 9 1 349 3 1 1 125 1 253 2 39 1 178 1 232 1 135 1 
220 1 283 3 300 1 325 1 349 5 289 1 125 2 253 1 39 1 232 1 334 1 
220 1 312 1 337 1 286 2 1 1 349 2 125 2 291 1 253 1 243 1 178 1 135 1 
102 1 283 2 220 1 312 1 337 1 286 2 325 1 1 1 349 4 124 1 125 2 291 1 253 2 39 1 243 1 178 1 135 1 
282 1 283 2 312 3 223 1 337 3 286 6 300 1 349 3 1 3 125 1 146 1 253 2 39 1 243 1 232 1 178 1 135 3 
282 2 283 18 220 5 312 5 223 1 337 5 286 10 1 5 289 2 20 1 125 16 124 3 366 1 291 3 367 1 253 12 316 3 232 3 135 5 102 3 206 1 300 3 9 1 58 4 325 5 349 34 279 1 146 1 308 1 117 1 39 7 40 1 243 1 178 5 
219 1 220 1 283 4 312 1 337 1 286 2 1 1 289 1 125 4 366 1 253 2 316 1 232 1 135 1 206 1 9 1 300 1 325 1 58 1 349 8 39 2 40 1 243 1 
219 1 283 5 220 2 312 2 337 2 286 4 1 2 289 1 125 6 124 1 366 1 291 1 253 3 316 1 232 1 135 2 206 1 300 1 9 1 325 1 58 2 349 11 279 1 117 1 39 2 40 1 243 1 178 1 
282 1 219 1 283 10 220 3 312 3 337 3 338 1 286 6 1 3 289 1 125 9 124 2 366 1 291 2 253 4 316 1 232 1 135 3 102 2 320 1 206 1 300 1 9 1 58 1 325 3 349 19 278 1 117 1 197 1 39 3 40 1 178 1 243 1 
282 1 219 1 283 7 220 3 312 3 337 3 286 6 338 1 1 3 289 1 125 10 124 2 366 1 291 2 253 5 316 1 232 1 135 3 102 1 320 1 206 1 300 1 9 1 58 1 325 2 349 17 278 1 117 1 197 1 39 3 40 1 178 2 243 1 
219 1 220 1 283 4 312 1 337 1 286 2 1 1 289 1 125 4 366 1 253 2 316 1 232 1 135 1 206 1 9 1 300 1 325 1 58 1 349 8 39 2 40 1 243 1 
219 1 283 6 220 2 312 1 337 1 286 2 338 1 1 1 125 6 124 2 366 1 291 2 253 2 316 1 135 1 102 2 320 1 58 1 325 2 349 12 278 1 197 1 39 1 178 1 243 1 
282 2 219 1 283 8 220 3 312 4 337 4 338 1 286 8 1 4 289 1 125 10 124 2 366 1 291 2 253 5 316 1 232 1 135 4 102 1 320 1 206 1 300 1 9 1 58 1 325 2 349 18 278 1 117 1 197 1 39 3 40 1 178 2 243 1 
282 2 219 1 283 7 220 3 312 4 337 4 338 1 286 8 1 4 125 9 124 3 366 1 291 3 253 6 316 1 135 4 102 2 320 1 58 1 325 2 349 16 278 1 146 1 197 1 39 3 178 3 243 1 
206 2 283 4 220 1 9 1 300 3 325 1 349 7 289 1 125 3 253 6 39 3 232 3 178 3 
282 2 219 1 283 8 220 3 312 4 337 4 338 1 286 8 1 4 289 1 125 10 124 2 366 1 291 2 253 4 316 1 232 1 135 4 102 1 320 1 206 1 300 1 9 1 58 1 325 2 349 18 278 1 146 1 197 1 39 3 40 1 178 1 243 1 
86 1 336 1 36 1 330 1 260 1 77 1 175 1 
336 1 260 1 86 1 214 1 239 1 36 1 37 1 24 1 330 1 77 1 267 1 175 1 
212 1 137 1 182 1 144 1 189 1 145 1 85 1 65 1 376 1 235 1 248 1 
162 1 189 1 260 2 235 1 376 1 154 1 212 1 182 1 379 1 144 1 85 1 86 1 65 1 36 1 132 1 196 1 186 1 175 2 
161 1 162 1 189 3 123 1 260 2 95 1 376 1 96 1 154 2 212 2 182 1 379 2 202 1 144 1 85 1 86 1 65 1 36 2 350 1 132 1 196 1 186 1 175 2 
123 1 95 1 96 1 154 2 182 1 202 1 158 1 132 1 186 1 161 1 189 3 260 2 261 1 376 2 212 2 379 2 144 1 85 2 86 1 65 2 36 2 196 1 350 1 175 2 
17 1 359 1 269 2 362 1 96 1 154 1 182 1 202 1 25 1 101 2 161 1 189 4 166 1 261 1 376 3 235 1 212 1 144 1 85 3 213 1 65 3 242 1 177 1 
161 1 189 4 17 1 166 1 269 2 359 1 261 1 235 1 362 1 376 3 44 1 96 1 154 1 212 1 182 1 202 1 144 1 85 3 213 1 65 3 25 1 101 2 
182 1 144 1 85 1 65 1 376 1 360 1 
189 3 375 1 360 1 235 2 376 7 181 1 111 1 342 1 154 1 365 1 212 2 157 1 182 3 144 2 263 1 85 7 65 6 344 1 100 1 38 1 91 1 
283 3 0 1 337 2 286 4 1 2 289 1 154 1 344 1 253 2 162 1 206 1 8 1 9 1 300 1 260 2 262 1 349 6 212 1 305 2 12 1 171 1 65 1 118 1 217 2 175 2 310 1 121 1 220 1 312 2 125 3 182 1 132 1 186 1 232 1 135 2 276 1 189 1 376 1 325 1 379 1 144 1 85 1 86 2 36 1 196 1 39 2 40 1 
150 2 17 1 269 3 359 2 362 1 44 1 70 1 249 2 76 1 51 1 134 1 25 1 275 1 101 3 205 1 189 2 106 1 374 2 166 1 235 1 376 1 170 1 85 1 237 1 33 2 213 1 65 1 332 1 
189 2 360 1 376 2 154 1 212 1 157 1 182 2 144 1 85 2 227 1 65 2 344 1 25 1 
137 1 189 1 261 1 235 1 376 4 248 1 212 1 182 1 144 1 85 4 65 4 344 1 176 1 
81 1 189 1 246 1 376 2 181 1 342 1 154 1 61 1 212 1 182 2 202 1 144 1 85 2 65 2 
256 1 182 1 144 1 203 1 85 1 284 1 43 1 65 1 376 1 235 1 
212 1 182 1 2 1 144 1 189 1 263 1 85 2 65 2 344 1 376 2 91 1 
137 1 189 3 235 1 376 5 248 1 111 1 212 2 365 1 182 2 202 1 144 2 85 5 65 4 344 1 176 1 91 1 
137 1 319 1 189 3 235 1 376 5 248 1 212 2 365 1 182 2 202 1 144 2 85 5 65 4 344 1 176 1 91 1 
189 1 260 2 235 1 376 1 154 1 212 1 182 1 379 1 144 1 85 1 86 1 158 1 65 1 36 1 132 1 196 1 186 1 175 2 
189 1 375 1 376 1 181 1 342 1 154 1 212 1 157 1 182 2 202 1 144 1 85 1 65 1 
86 1 221 1 32 1 15 1 90 1 
277 1 268 1 123 1 221 2 17 1 269 2 167 1 362 1 95 1 247 1 86 1 32 2 252 1 213 1 350 1 15 1 332 1 90 2 101 2 
16 1 260 1 314 1 271 1 32 1 36 1 15 1 90 1 175 1 
268 1 167 1 15 1 
145 1 323 1 180 1 7 1 
13 1 322 1 323 1 57 1 351 1 180 1 7 1 
250 1 92 1 351 1 
218 1 380 1 55 1 63 2 13 1 322 1 323 1 57 3 309 1 351 3 180 1 7 1 
13 1 322 1 323 1 57 2 351 2 180 1 7 1 364 1 333 1 
256 1 380 1 22 1 13 1 284 1 322 1 258 1 323 1 57 1 351 1 139 1 
380 1 13 1 322 1 323 1 57 1 351 1 7 1 
380 1 13 1 322 1 57 1 351 1 180 1 7 2 
54 1 322 2 69 1 323 1 57 2 11 1 380 1 13 2 351 2 7 1 
322 1 323 2 57 3 180 1 363 1 364 2 139 1 31 1 169 1 380 1 13 1 351 3 7 1 
256 1 222 1 43 1 284 2 322 1 323 1 258 1 57 2 180 1 364 1 168 1 380 1 13 1 351 2 7 1 
136 1 322 2 323 2 57 4 180 1 364 2 139 1 169 1 380 1 13 2 351 4 7 1 333 1 
380 1 13 1 322 1 323 1 57 1 351 1 180 1 7 1 
218 1 322 1 323 3 57 4 180 2 364 2 139 1 169 1 63 1 13 1 309 1 351 4 7 2 254 1 
321 1 322 1 323 1 57 2 180 1 340 1 364 1 380 1 13 1 306 1 351 2 7 1 
218 2 322 1 323 1 57 3 19 1 180 1 380 1 63 2 13 1 309 1 351 3 7 1 
264 2 130 1 293 1 323 2 
380 1 13 1 322 1 57 1 351 1 148 1 
31 1 380 1 13 1 322 1 323 1 57 2 351 2 180 1 7 1 364 1 
303 1 
380 1 13 1 322 1 323 1 57 1 351 1 180 1 7 1 
322 1 323 1 57 3 180 1 364 1 31 1 380 1 63 1 13 1 351 3 7 1 
169 1 323 1 139 1 254 1 
323 1 7 1 

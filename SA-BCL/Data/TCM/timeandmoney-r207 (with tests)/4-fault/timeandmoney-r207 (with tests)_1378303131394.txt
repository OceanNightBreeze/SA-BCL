#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 283 90 299 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 283 90 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 221 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
327 1 135 9 330 2 115 2 208 4 292 1 2 1 293 3 87 2 235 1 332 1 33 1 146 2 190 2 261 1 306 1 353 6 68 2 338 1 15 9 180 1 181 1 43 5 18 1 248 1 113 2 360 1 24 1 
327 1 135 9 330 2 115 2 208 4 292 1 2 1 293 3 87 2 235 1 332 1 33 1 146 2 190 2 261 1 306 1 353 6 68 2 338 1 15 9 180 1 181 1 43 5 18 1 248 1 113 2 360 1 24 1 
327 1 135 10 330 2 115 2 208 5 292 1 2 1 293 4 87 2 235 1 332 1 33 1 146 2 190 2 261 1 306 1 353 7 68 2 338 1 15 10 180 1 181 1 43 6 18 1 248 1 113 2 360 1 24 1 
327 1 135 7 330 2 115 2 208 3 292 1 2 1 293 2 87 1 235 1 332 1 33 1 146 2 190 2 261 1 306 1 353 4 68 2 338 1 15 7 181 1 43 4 18 1 248 1 113 2 360 1 24 1 
135 4 115 1 330 1 353 3 208 2 2 1 293 1 68 1 87 2 235 1 15 4 33 1 180 1 43 3 190 1 113 1 360 1 24 1 
135 2 330 1 115 1 13 1 68 1 235 1 332 1 15 2 33 1 93 1 43 1 190 1 146 1 261 1 360 1 25 1 
135 3 208 1 353 1 293 1 68 2 338 1 235 1 15 3 33 1 43 2 190 2 146 1 360 1 
135 9 208 4 292 1 330 1 115 1 2 1 293 3 51 1 87 2 235 1 33 1 146 1 190 2 300 1 353 7 338 1 68 2 15 9 180 1 43 5 18 1 113 1 360 1 24 1 
135 9 208 4 292 1 330 1 115 1 2 1 293 3 51 1 87 2 235 1 33 1 146 1 190 2 300 1 353 7 338 1 68 2 15 9 180 1 43 5 18 1 113 1 360 1 24 1 
116 1 315 1 60 1 
116 1 177 1 188 2 
184 1 311 2 164 2 333 2 12 2 253 2 61 1 183 2 
184 1 204 1 311 2 164 2 3 1 253 3 50 1 254 1 165 2 4 2 142 1 258 2 347 1 96 1 348 1 333 2 335 1 126 1 61 1 101 1 62 1 241 1 104 1 243 2 320 1 65 1 66 1 324 1 12 3 131 1 154 1 156 1 76 1 267 1 288 1 158 2 183 2 
94 1 184 1 132 1 311 1 164 1 333 1 12 1 253 1 229 1 183 1 
176 1 302 1 116 1 164 1 253 1 12 1 17 1 124 1 94 1 349 1 155 1 226 1 314 1 315 1 
176 1 311 1 116 1 164 1 253 1 12 1 17 1 124 1 94 1 333 1 226 2 155 2 314 1 315 1 183 1 
112 1 21 1 226 1 155 1 259 1 
305 1 112 1 21 1 116 1 226 2 155 2 209 1 315 1 
112 1 226 1 155 1 
184 1 311 1 164 1 253 1 12 1 94 1 132 1 21 1 333 1 155 1 226 1 148 1 229 1 183 1 
116 1 
129 1 112 1 21 1 116 1 226 2 155 2 209 1 315 1 
272 1 136 1 321 1 116 1 1 2 117 1 209 1 110 2 70 1 19 1 21 2 112 2 155 5 226 5 310 1 174 2 22 1 268 1 315 1 
60 1 61 1 
311 1 164 2 253 2 12 2 296 1 333 1 286 1 61 2 183 1 
34 1 342 1 16 1 
104 1 243 1 66 1 12 1 253 1 254 1 258 1 347 1 96 1 348 1 335 1 126 1 288 1 61 1 158 1 63 1 
104 1 243 1 311 1 66 1 164 1 253 2 12 2 109 1 254 1 258 1 96 1 347 1 348 1 333 1 335 1 126 1 288 1 158 1 342 1 193 1 
230 1 311 4 164 5 253 5 12 5 109 1 222 1 296 1 349 1 333 4 59 1 61 1 193 2 183 1 
94 1 311 2 164 2 333 2 12 2 253 2 52 1 229 1 
311 3 164 3 333 3 12 3 253 3 61 1 193 1 183 1 
94 1 311 1 164 1 333 1 12 1 253 1 229 1 
94 1 296 1 311 1 164 1 333 1 12 1 253 1 286 1 183 1 
184 1 311 3 164 3 3 1 253 4 254 1 165 2 4 1 142 1 124 1 94 1 258 1 96 1 347 1 296 1 348 1 333 3 335 1 126 1 314 1 61 1 101 1 193 1 241 1 104 1 176 1 243 1 320 1 65 1 66 1 324 1 12 4 109 1 265 1 131 1 17 1 199 1 155 1 226 1 76 1 267 1 288 1 158 1 183 2 
230 1 311 1 349 1 164 2 333 1 12 2 253 2 61 1 193 1 
176 1 311 3 116 1 164 3 253 3 12 3 109 1 67 1 199 1 17 1 94 1 124 1 296 1 333 3 226 1 155 1 314 1 193 2 183 1 
311 2 164 2 253 2 12 2 296 1 34 1 333 2 193 1 342 1 183 1 
104 1 243 1 66 1 12 1 253 1 254 1 258 1 347 1 96 1 348 1 126 1 335 1 288 1 61 1 158 1 
104 1 243 1 66 1 12 1 253 1 254 1 258 1 170 1 96 1 348 1 335 1 287 1 288 1 61 1 158 1 
270 1 162 1 49 1 3 1 50 2 236 1 165 2 4 4 120 1 239 1 34 2 101 2 241 1 127 1 65 1 152 1 324 1 131 1 16 2 71 1 339 1 267 1 341 1 342 2 
176 1 94 1 311 1 164 1 333 1 12 1 253 1 52 1 
232 1 37 1 
232 1 37 1 
264 1 173 1 
264 1 173 1 
264 1 173 1 
232 1 37 1 153 1 
168 1 232 1 37 1 
81 1 251 1 232 2 264 1 173 1 37 2 
232 1 37 1 153 1 
232 1 37 1 153 1 
232 1 215 1 37 1 
232 1 215 1 37 1 
232 1 215 1 37 1 
346 1 232 1 226 1 155 1 37 1 299 1 283 1 90 1 262 1 
346 1 232 1 37 1 283 1 90 1 262 1 
115 1 330 1 113 1 
93 1 115 1 330 1 
93 1 84 1 330 3 113 2 277 1 53 1 
93 1 84 1 330 2 113 1 277 1 356 1 
93 1 84 2 330 2 113 1 277 1 
270 1 136 2 1 1 116 2 49 1 209 1 118 1 188 3 31 1 122 1 239 1 123 1 212 1 172 1 298 1 174 1 336 1 315 1 127 1 130 2 322 1 177 1 110 1 285 2 70 1 19 3 112 1 21 4 225 1 226 5 155 5 289 2 
270 3 272 1 136 6 116 5 1 2 49 3 209 1 188 9 31 2 239 3 212 3 171 5 259 5 174 2 336 2 315 1 103 1 127 3 304 1 130 6 322 4 177 3 281 1 110 2 41 1 221 1 285 6 70 1 19 8 112 6 21 7 225 1 226 9 155 9 269 1 
270 1 184 1 272 1 136 2 311 1 164 1 116 3 1 1 253 1 49 1 31 1 188 4 122 1 123 1 239 1 94 1 212 1 333 1 148 1 174 1 336 1 315 1 127 1 322 1 130 2 177 2 12 1 110 1 285 2 132 1 19 3 21 2 226 3 155 3 289 1 229 1 183 1 
270 1 272 1 136 2 116 2 1 1 49 1 188 4 31 1 122 1 123 1 239 1 212 1 174 1 336 1 127 1 130 2 322 1 177 2 110 1 221 1 285 2 19 3 21 1 226 2 155 2 289 1 
335 1 60 1 166 1 
55 1 335 1 
260 1 
335 1 254 1 288 1 
150 1 335 1 
335 1 254 1 
218 1 207 1 335 3 254 1 288 1 166 2 
270 1 127 1 114 1 205 1 50 4 189 1 196 1 120 2 4 7 71 3 99 1 98 1 175 2 192 1 101 3 160 1 79 1 
270 1 127 1 114 1 205 1 50 4 189 1 196 1 120 2 4 7 71 3 99 1 98 1 175 2 192 1 101 3 160 1 79 1 
270 1 27 1 127 1 114 1 205 1 50 4 189 1 196 1 120 2 4 7 71 3 99 1 98 1 175 2 192 1 101 3 160 1 79 1 
270 4 30 1 114 2 205 2 49 3 3 1 50 16 189 1 165 2 4 31 120 5 274 1 239 3 91 3 212 3 98 1 99 5 175 3 192 1 101 15 241 1 127 4 303 1 151 4 324 1 244 1 11 1 196 2 131 1 71 10 228 1 290 1 160 2 79 1 
270 2 114 1 205 1 3 1 50 5 165 2 189 1 4 9 120 2 99 1 98 1 175 1 192 1 101 4 241 1 127 2 324 1 10 1 196 1 131 1 71 3 20 1 246 1 160 1 
135 2 138 1 206 1 115 1 330 2 235 1 53 1 6 1 257 1 33 1 258 1 93 1 58 1 190 1 146 1 318 1 104 1 243 1 66 1 353 1 195 1 307 1 68 1 15 2 111 1 43 1 75 1 113 1 360 1 158 1 
135 3 138 1 206 1 115 1 330 2 233 1 235 1 53 1 6 1 257 1 33 1 258 1 93 1 190 1 146 1 313 1 38 1 318 1 104 1 243 1 66 1 353 2 195 1 307 1 68 1 15 3 111 1 43 1 113 1 158 1 
135 2 138 1 206 1 330 2 115 1 233 1 235 1 53 1 6 1 257 1 33 1 258 1 93 1 146 1 313 1 318 1 104 1 243 1 66 1 353 2 195 1 15 2 43 1 113 1 158 1 
104 1 135 1 243 1 66 1 206 2 138 2 195 2 355 1 254 1 68 1 15 1 238 1 258 1 348 1 35 1 146 2 190 1 335 1 38 1 216 1 46 1 158 1 194 1 
135 1 138 1 206 1 115 1 330 2 233 1 53 1 6 1 257 1 258 1 93 1 190 1 146 1 318 1 104 1 243 1 66 1 195 1 307 1 68 1 15 1 111 1 75 1 113 1 360 1 158 1 
108 1 
161 2 291 4 116 2 1 1 164 1 209 3 253 1 331 2 294 2 254 1 5 2 258 2 124 1 7 1 335 1 174 1 301 1 176 1 302 1 66 1 177 2 12 1 17 1 70 1 19 2 223 1 226 5 23 2 26 1 231 2 136 2 186 1 85 1 188 2 31 1 92 2 94 1 348 2 97 1 349 1 35 1 314 1 100 1 315 1 194 1 316 1 104 1 242 1 243 2 110 1 42 1 112 6 155 5 158 2 159 1 
231 1 176 1 291 2 302 1 129 1 186 1 164 1 209 1 253 1 12 1 17 1 42 1 94 1 124 1 112 2 349 1 155 3 226 3 314 1 100 1 26 1 316 1 
291 3 186 1 164 1 116 1 253 1 209 1 331 1 124 1 94 1 349 1 314 1 100 1 315 1 316 1 176 1 302 1 129 1 12 1 17 1 42 1 112 1 226 3 155 3 26 1 
231 1 291 3 186 1 164 1 116 1 209 1 253 1 331 1 5 1 124 1 94 1 349 1 314 1 100 1 315 1 316 1 176 1 302 1 129 1 12 1 17 1 42 1 112 2 226 3 155 3 26 1 
161 2 291 6 163 1 164 1 116 5 1 1 253 1 209 3 331 4 294 2 5 4 124 1 174 1 176 1 302 1 129 1 177 2 12 1 308 1 17 1 70 1 19 1 223 1 226 5 23 2 26 1 231 4 136 1 186 1 275 1 92 2 94 1 349 1 97 1 314 1 100 1 278 1 315 5 316 1 110 1 42 1 200 1 112 7 155 5 
161 2 291 4 164 1 1 1 116 2 253 1 209 2 294 2 331 2 5 2 124 1 7 1 174 1 176 1 302 1 177 2 12 1 17 1 70 1 19 1 223 1 226 4 23 2 26 1 231 2 136 1 186 1 188 2 92 2 94 1 349 1 97 1 314 1 100 1 315 1 316 1 110 1 42 1 112 4 155 4 
231 2 161 2 291 4 136 1 186 1 163 1 116 1 164 1 1 1 209 2 253 1 331 2 294 2 5 2 92 2 124 1 94 1 97 1 349 1 314 1 174 1 100 1 315 1 316 1 176 1 302 1 177 2 12 1 110 1 308 1 17 1 200 1 42 1 70 1 19 1 112 4 223 1 226 4 155 4 23 2 26 1 
231 2 161 2 291 4 136 1 186 1 163 1 116 1 164 1 1 1 209 2 253 1 331 2 294 2 5 2 92 2 124 1 94 1 97 1 349 1 314 1 174 1 100 1 315 1 316 1 176 1 302 1 177 2 12 1 110 1 308 1 17 1 200 1 42 1 70 1 19 1 112 4 223 1 226 4 155 4 23 2 26 1 
231 2 161 2 291 4 48 1 136 1 186 1 116 1 164 1 1 1 209 2 253 1 188 2 331 2 294 2 5 2 124 1 94 1 97 1 349 1 314 1 174 1 100 1 315 1 316 1 279 1 263 2 176 1 302 1 12 1 197 1 110 1 198 2 17 1 200 1 42 1 70 1 19 1 112 4 226 4 155 4 26 1 
161 2 231 3 291 5 136 1 186 1 163 1 116 1 1 1 164 1 209 2 253 1 294 2 331 3 5 3 92 2 275 1 124 1 94 1 97 1 349 1 174 1 314 1 100 1 315 1 316 1 176 1 302 1 177 2 12 1 110 1 308 1 17 1 200 1 42 1 70 1 19 1 223 1 112 5 226 4 155 4 23 2 26 1 
161 2 231 3 291 5 136 1 186 1 163 1 116 1 1 1 164 1 209 2 253 1 294 2 331 3 5 3 92 2 275 1 124 1 94 1 97 1 349 1 174 1 314 1 100 1 315 1 316 1 176 1 302 1 177 2 12 1 110 1 308 1 17 1 200 1 42 1 70 1 19 1 223 1 112 5 226 4 155 4 23 2 26 1 
231 2 161 2 291 4 136 1 186 1 116 1 1 1 164 1 209 2 253 1 188 2 331 2 294 2 5 2 124 1 94 1 7 1 97 1 349 1 174 1 314 1 100 1 315 1 316 1 263 2 176 1 302 1 12 1 197 1 110 1 198 2 17 1 42 1 70 1 19 1 112 4 226 4 155 4 26 1 
270 1 127 1 114 1 65 1 324 1 3 1 50 3 189 1 196 1 165 2 4 6 120 2 131 1 16 1 71 2 34 1 98 1 175 1 267 1 60 1 192 1 61 2 101 3 341 1 342 1 241 1 
328 1 329 1 3 2 50 1 165 4 4 4 255 1 91 1 94 1 101 3 61 1 241 2 65 2 151 1 324 2 131 2 179 1 16 3 201 1 325 1 267 1 76 1 342 3 
204 1 329 1 311 1 164 1 3 1 253 2 50 1 254 1 165 2 4 2 237 1 258 1 57 1 96 1 347 1 348 1 34 1 333 1 335 1 126 1 61 1 101 1 193 1 63 1 241 1 104 1 243 1 65 1 66 1 324 1 107 1 12 2 109 1 131 1 267 1 76 1 288 1 158 1 
114 1 204 1 329 1 164 1 253 3 3 3 49 2 119 2 50 10 254 2 165 6 120 4 4 20 56 2 258 3 212 2 333 1 126 2 335 2 175 1 61 2 127 3 65 3 66 2 12 3 131 3 16 7 220 2 71 8 76 1 267 3 342 7 270 3 185 1 311 1 233 1 189 1 89 2 312 1 344 1 239 2 347 2 96 2 348 1 34 7 98 1 99 4 192 1 101 10 193 1 241 3 104 2 243 3 320 2 324 3 109 1 196 1 288 2 158 3 
204 1 0 1 311 1 164 1 253 1 3 2 233 1 50 1 254 2 165 4 4 2 121 1 167 1 258 7 348 2 350 1 333 1 58 1 35 1 335 3 276 1 101 1 193 1 194 1 241 2 104 2 128 1 243 8 65 2 66 2 324 2 12 1 131 2 284 1 154 2 267 2 76 1 341 1 158 8 
270 1 311 1 329 1 164 1 3 1 253 1 49 1 50 1 165 2 120 1 4 3 239 1 296 1 212 1 34 1 333 1 101 2 241 1 319 1 127 1 65 1 324 1 12 1 131 1 16 1 71 1 267 1 342 1 183 1 
127 1 65 1 152 1 324 1 3 1 50 2 165 2 4 2 131 1 16 1 239 1 71 1 34 1 99 1 267 1 341 1 342 1 241 1 
270 1 162 1 65 1 324 1 3 1 49 1 165 2 120 1 4 2 131 1 16 1 71 1 34 1 267 1 341 1 101 2 342 1 241 1 
270 1 127 1 65 1 324 1 49 1 3 1 50 2 165 2 120 1 4 4 131 1 16 2 239 1 71 2 212 1 34 2 99 1 267 1 101 2 341 1 342 2 241 1 
127 1 65 1 152 1 324 1 3 1 50 2 165 2 4 2 131 1 16 1 167 1 239 1 71 1 34 1 99 1 267 1 342 1 241 1 
270 1 162 1 65 1 324 1 3 1 49 1 165 2 120 1 4 2 131 1 16 1 167 1 71 1 34 1 267 1 101 2 342 1 241 1 
270 1 127 1 65 1 324 1 49 1 3 1 50 2 165 2 120 1 4 4 131 1 16 2 167 1 239 1 71 2 212 1 34 2 99 1 267 1 101 2 342 2 241 1 
270 1 127 1 65 1 324 1 49 1 3 1 50 2 165 2 120 1 131 1 4 4 16 2 239 1 71 2 212 1 34 2 99 1 267 1 101 2 342 2 241 1 
204 1 253 1 3 1 50 1 254 1 165 2 4 2 258 1 96 1 347 1 348 1 126 1 335 1 61 1 101 1 241 1 104 1 243 1 320 1 65 1 66 1 324 1 12 1 131 1 267 1 76 1 288 1 158 1 
204 1 253 1 3 1 50 1 254 1 165 2 4 2 258 1 96 1 170 1 348 1 335 1 61 1 101 1 241 1 104 1 243 1 65 1 66 1 324 1 12 1 131 1 287 1 267 1 76 1 288 1 77 1 158 1 
270 1 127 1 329 1 65 1 324 1 49 1 3 1 50 2 165 2 120 1 4 4 131 1 16 2 239 1 71 2 212 1 34 2 99 1 267 1 101 2 342 2 241 1 
270 1 49 1 253 1 3 1 50 2 119 1 254 1 165 2 120 1 4 4 239 1 258 1 96 1 347 1 212 1 34 2 99 1 58 1 126 1 335 1 101 2 241 1 104 1 127 1 243 1 320 1 65 1 66 1 324 1 12 1 131 1 16 2 71 2 267 1 288 1 158 1 342 2 
270 1 311 1 329 1 164 1 49 1 3 1 253 1 50 2 165 2 4 3 239 1 296 1 212 1 34 1 333 1 99 1 101 1 241 1 127 1 65 1 324 1 12 1 131 1 16 1 71 1 133 1 267 1 342 1 183 1 
270 3 83 2 139 1 3 2 49 3 50 9 165 4 120 3 4 19 239 3 91 1 297 1 212 3 214 1 36 1 99 3 101 10 241 2 127 3 303 1 282 1 151 2 324 2 244 1 131 2 71 6 246 1 73 1 157 1 250 2 
270 2 271 1 83 1 139 1 86 1 3 3 49 2 50 14 165 6 141 1 120 2 4 26 274 2 239 3 91 2 297 1 212 3 214 1 99 2 8 1 101 12 241 3 352 1 127 3 303 2 151 2 324 3 131 3 357 1 71 4 246 1 73 2 157 2 250 4 
114 1 49 4 3 3 50 20 165 6 4 41 120 4 212 4 297 1 214 1 175 1 8 1 127 5 303 3 131 3 71 8 73 1 270 5 271 1 83 1 139 1 86 1 189 1 141 1 274 1 239 4 91 3 99 4 98 1 36 1 192 1 101 21 102 1 241 3 352 1 151 4 244 1 324 3 196 1 357 1 246 1 157 2 250 4 
270 4 271 1 114 1 83 1 139 1 86 1 3 4 49 3 50 20 189 1 165 8 141 1 120 4 4 38 274 2 239 4 91 3 297 1 212 4 214 1 36 1 98 1 99 3 175 1 8 1 192 1 102 1 101 18 241 4 352 1 127 5 303 3 151 4 324 4 244 1 196 1 131 4 357 1 71 7 246 1 73 1 157 2 250 4 
270 8 271 1 114 1 83 1 139 1 86 1 3 2 49 7 50 27 189 1 165 4 141 1 120 7 4 52 274 1 239 7 91 4 297 1 212 7 214 1 98 1 99 7 175 1 8 1 351 2 192 1 101 25 241 2 352 1 127 8 303 2 151 4 324 2 244 2 196 1 131 2 357 1 71 14 246 1 73 1 157 1 250 4 
204 1 329 1 164 2 3 1 253 2 50 1 254 1 140 1 88 1 165 2 4 2 258 2 145 1 335 1 276 1 101 1 241 1 104 1 243 2 65 1 66 1 324 1 12 2 219 1 131 1 284 1 154 2 44 1 267 1 76 1 158 2 
104 1 243 2 66 1 115 1 330 2 195 1 233 1 354 1 32 1 53 1 111 1 6 1 257 1 93 1 258 2 326 1 58 1 113 1 158 2 
104 1 243 1 66 1 115 1 330 2 195 1 233 1 32 1 53 1 111 1 6 1 257 1 93 1 258 1 95 1 113 1 158 1 
104 1 243 1 66 1 195 1 355 1 254 1 345 1 258 1 348 1 326 1 35 1 335 1 158 1 194 1 
104 1 243 1 66 1 115 1 330 2 195 1 233 1 354 1 32 1 53 1 111 1 6 1 257 1 93 1 258 1 326 1 113 1 158 1 
143 1 
136 1 19 1 116 1 310 1 268 1 315 1 60 1 
136 1 1 1 116 2 209 1 188 1 92 1 174 1 315 1 177 1 110 1 70 1 19 1 223 1 112 1 155 1 226 1 23 1 
207 1 1 4 116 8 209 3 49 2 254 3 166 2 55 3 258 3 212 2 334 1 58 1 335 10 125 2 174 4 127 2 130 6 66 3 177 6 178 2 14 2 69 1 70 4 19 9 74 1 226 5 310 1 268 1 78 2 270 2 80 1 82 2 137 1 136 8 31 2 188 12 234 2 89 2 239 2 348 1 314 2 315 2 149 2 104 4 105 2 242 1 243 3 150 2 110 4 285 6 112 5 155 5 288 3 158 3 
47 1 270 2 136 5 252 1 1 2 116 5 86 1 209 1 49 2 31 1 188 6 141 1 239 2 91 1 212 2 174 2 8 1 149 2 315 2 352 1 127 2 242 1 130 5 303 1 151 1 177 3 178 1 110 2 357 1 285 5 70 2 19 8 112 1 226 1 155 1 
270 1 184 1 114 1 136 2 311 1 1 1 164 1 253 1 189 1 94 1 333 1 148 1 174 1 149 2 127 2 10 1 178 1 12 1 196 1 110 1 308 1 70 1 132 1 19 2 226 1 155 1 229 1 183 1 
136 1 1 1 116 1 110 1 70 1 19 1 310 1 174 1 268 1 315 1 
270 2 127 2 136 5 130 5 177 5 116 5 178 1 49 2 188 10 89 1 239 2 285 5 212 2 19 5 149 2 
112 1 116 1 226 1 155 1 209 1 315 1 
80 1 272 1 136 2 1 2 209 2 31 2 254 1 169 1 258 4 348 2 334 2 35 1 335 1 174 2 301 1 194 1 317 1 104 1 243 4 242 2 66 1 110 2 70 1 19 2 112 4 155 3 226 3 158 4 159 1 
184 1 311 2 164 2 253 3 3 1 254 1 165 2 4 1 142 1 258 1 347 1 96 1 348 1 333 2 126 1 335 1 61 1 101 1 241 1 104 1 243 1 320 1 65 1 66 1 324 1 12 3 131 1 76 1 267 1 288 1 158 1 183 2 
242 1 136 2 130 2 177 2 1 1 116 4 188 4 31 1 110 1 285 2 70 1 19 1 175 1 174 1 315 2 
346 1 283 1 
346 1 283 1 
346 1 283 1 
346 1 283 1 
346 1 283 1 
346 1 283 1 
346 1 283 1 
346 1 283 1 
232 1 37 1 
270 1 127 1 114 1 324 2 3 2 50 4 189 1 165 4 196 1 4 8 120 2 131 2 274 1 71 3 99 1 98 1 175 1 192 1 101 4 241 2 
270 1 127 1 114 1 50 3 196 1 189 1 120 2 4 6 71 2 98 1 175 1 60 1 192 1 101 3 
270 1 127 1 324 1 49 1 3 1 50 2 165 2 120 1 295 1 131 1 4 4 239 1 71 2 212 1 99 1 101 2 241 1 
270 1 127 1 303 1 151 2 244 1 49 1 50 3 120 1 4 7 239 1 91 1 71 2 212 1 99 1 101 4 
270 2 328 1 114 2 3 1 50 7 189 1 165 2 4 15 120 3 274 1 91 1 98 1 99 3 192 1 101 8 241 1 127 2 151 1 10 1 324 1 196 2 131 1 179 1 71 6 
151 1 4 1 101 1 
91 1 50 1 4 1 
270 1 127 1 324 1 3 1 49 1 50 3 165 2 131 1 295 1 4 6 120 2 89 1 239 1 71 3 212 1 99 1 101 3 241 1 
270 2 3 1 49 2 86 1 50 6 165 2 4 12 120 1 141 1 239 2 91 1 212 2 99 1 8 1 101 6 241 1 352 1 127 2 303 1 151 1 324 1 131 1 357 1 71 2 246 1 
270 1 127 1 114 1 50 3 189 1 196 1 4 6 120 1 71 2 99 1 101 3 
114 1 328 1 324 1 3 1 50 1 196 1 165 2 120 1 4 3 131 1 274 1 71 2 99 1 98 1 192 1 101 2 241 1 
270 2 127 2 114 2 324 1 10 1 3 1 50 5 165 2 196 2 189 1 131 1 120 3 4 10 71 5 246 1 99 2 101 5 241 1 
127 1 324 1 3 1 50 2 165 2 131 1 4 2 239 1 71 1 246 1 99 1 241 1 
270 1 127 1 324 1 49 1 3 1 50 2 165 2 120 1 131 1 4 4 239 1 71 2 212 1 246 1 99 1 101 2 241 1 
328 1 114 1 324 3 3 3 50 1 165 6 196 1 4 3 131 3 120 1 274 1 71 2 246 1 36 1 99 1 101 2 241 3 
270 5 30 1 114 3 328 1 3 5 49 3 50 16 189 2 165 10 295 1 4 34 120 7 274 2 239 3 91 3 212 3 98 1 36 1 99 5 175 1 192 1 101 18 241 5 127 5 303 1 151 4 11 1 324 5 244 1 196 3 131 5 71 12 246 1 290 1 
270 1 127 1 114 1 303 1 151 1 324 1 3 1 50 4 189 1 196 1 165 2 120 2 131 1 4 8 91 1 71 2 246 1 98 1 175 1 8 1 192 1 101 4 241 1 
270 1 114 1 3 2 50 6 189 1 165 4 120 2 4 11 295 1 239 1 91 1 212 1 98 1 99 1 175 1 8 1 192 1 101 5 241 2 127 2 303 1 151 2 324 2 244 1 196 1 131 2 71 3 246 1 
270 3 114 1 3 3 49 2 86 1 50 9 189 1 165 6 295 1 141 1 4 19 120 3 274 1 239 2 91 1 212 2 98 1 99 1 175 1 8 1 192 1 101 10 241 3 352 1 127 3 303 1 151 1 324 3 196 1 131 3 357 1 71 4 246 1 
270 2 114 1 3 3 49 1 86 1 50 10 189 1 165 6 295 1 4 17 120 3 141 1 274 1 239 2 91 1 212 2 98 1 99 2 175 1 8 1 192 1 101 7 241 3 352 1 127 3 303 1 151 1 324 3 196 1 131 3 357 1 71 5 246 1 
270 1 127 1 114 1 303 1 151 1 324 1 3 1 50 4 189 1 196 1 165 2 120 2 131 1 4 8 91 1 71 2 246 1 98 1 175 1 8 1 192 1 101 4 241 1 
270 2 3 1 49 2 86 1 50 6 165 2 4 12 120 1 141 1 239 2 91 1 212 2 99 1 8 1 101 6 241 1 352 1 127 2 303 1 151 1 324 1 131 1 357 1 71 2 246 1 
270 2 114 1 86 1 3 4 49 1 50 10 189 1 165 8 141 1 4 18 295 1 120 3 274 2 239 2 91 1 212 2 98 1 99 2 175 1 8 1 192 1 101 8 241 4 352 1 127 3 303 1 151 1 324 4 196 1 131 4 357 1 71 5 246 1 
270 2 86 1 3 4 49 2 50 9 165 8 141 1 4 16 120 3 274 2 239 3 91 1 212 3 99 3 36 1 8 1 101 7 241 4 352 1 127 3 303 1 151 1 324 4 131 4 357 1 71 6 246 1 
270 1 127 1 114 3 50 3 196 3 189 1 4 7 120 3 71 6 98 2 99 3 192 1 101 4 
270 2 114 1 86 1 3 4 49 1 50 10 189 1 165 8 141 1 4 18 120 3 274 2 239 2 91 1 212 2 98 1 99 1 36 1 175 1 8 1 192 1 101 8 241 4 352 1 127 3 303 1 151 1 324 4 196 1 131 4 357 1 71 4 246 1 
230 1 349 1 164 1 147 1 12 1 253 1 61 1 
64 1 230 1 164 1 253 1 12 1 273 1 202 1 349 1 224 1 147 1 191 1 61 1 
104 1 258 1 243 1 348 1 66 1 35 1 335 1 254 1 60 1 158 1 194 1 
104 1 243 1 311 1 66 1 164 1 253 2 12 2 254 1 258 1 96 1 347 1 348 1 333 1 335 1 288 1 61 1 158 1 193 1 
311 1 164 2 253 2 254 2 258 1 124 1 94 1 347 1 96 1 333 2 334 1 335 3 61 1 193 1 104 1 176 1 243 1 66 1 150 1 12 2 288 2 158 1 78 1 
29 1 311 1 164 2 253 2 254 2 258 2 124 1 94 1 96 1 333 2 334 1 335 3 61 1 193 1 104 1 176 1 243 2 66 1 150 1 12 2 287 1 288 2 158 2 78 1 
29 1 343 1 116 1 254 1 166 1 55 1 258 3 348 1 334 1 335 4 314 1 315 1 104 1 243 3 66 1 150 1 112 1 226 2 155 2 45 1 288 1 158 3 78 1 
104 1 29 1 243 3 150 1 66 1 116 1 254 1 14 1 166 1 55 1 258 3 348 1 112 1 155 2 226 2 334 1 335 4 314 1 315 1 288 1 158 3 78 1 
104 1 258 1 243 1 128 1 66 1 158 1 
104 3 128 1 243 7 0 1 207 1 66 2 233 1 254 2 266 1 121 1 284 1 154 1 258 6 348 2 182 1 350 1 58 1 335 3 359 1 288 1 158 7 
270 1 114 1 329 1 311 1 164 1 3 2 253 2 50 3 119 1 254 1 189 1 165 4 4 6 120 2 56 1 258 1 96 1 347 1 34 1 333 1 98 1 58 1 335 1 126 1 175 1 192 1 61 2 101 3 193 1 241 2 104 1 127 1 243 1 320 1 65 2 66 1 324 2 12 2 219 1 196 1 131 2 16 1 71 2 267 2 288 1 158 1 342 1 
80 1 136 1 116 1 1 2 209 1 234 1 166 1 55 1 258 1 348 1 125 1 335 2 174 2 314 1 315 1 105 1 243 1 110 2 14 1 70 2 19 1 21 1 112 2 226 3 155 3 310 1 268 1 158 1 
104 2 128 1 243 2 137 1 207 1 66 1 254 1 166 1 258 2 58 1 335 2 288 1 158 2 
104 1 29 1 243 4 66 1 254 1 258 4 348 1 309 1 58 1 35 1 335 1 158 4 194 1 
104 2 185 1 243 2 66 1 39 1 254 1 258 2 182 1 334 1 335 1 359 1 340 1 288 1 158 2 
104 1 257 1 93 1 258 1 243 1 348 1 66 1 115 1 330 1 158 1 
104 1 243 2 66 1 233 1 254 1 284 1 258 2 145 1 58 1 335 1 158 2 
104 2 243 5 0 1 66 2 254 2 284 1 121 1 258 4 348 1 309 1 334 1 35 1 58 1 335 3 158 5 194 1 
104 2 243 5 66 2 187 1 254 2 284 1 121 1 258 4 348 1 309 1 334 1 35 1 58 1 335 3 158 5 194 1 
104 1 243 1 311 1 66 1 164 1 253 2 12 2 254 1 258 1 96 1 348 1 333 1 335 1 287 1 288 1 61 1 158 1 193 1 
104 2 243 1 207 1 66 1 254 1 266 1 258 1 182 1 334 1 335 1 359 1 288 1 158 1 
240 1 203 1 323 1 245 1 61 1 
176 1 203 2 323 2 116 1 245 2 240 1 211 1 199 1 17 1 94 1 124 1 358 1 21 1 134 1 155 2 226 2 314 1 315 1 61 1 
240 1 203 1 44 1 323 1 164 1 12 1 253 1 140 1 88 1 
240 1 358 1 134 1 
33 1 43 1 235 1 60 1 
33 1 135 1 43 1 190 1 68 1 235 1 15 1 
138 1 146 1 15 1 
135 3 40 1 68 1 235 1 15 3 210 1 33 1 43 1 144 1 190 1 360 1 261 2 
33 1 135 2 43 1 353 1 190 1 87 1 68 1 235 1 15 2 
135 1 43 1 115 1 330 1 208 1 190 1 113 1 68 1 360 1 24 1 15 1 
33 1 135 1 43 1 190 1 68 1 360 1 15 1 
33 2 135 1 190 1 68 1 360 1 235 1 15 1 
217 1 135 2 337 1 68 2 15 2 33 1 72 1 43 1 190 2 360 1 
135 3 292 1 353 2 208 1 293 1 68 1 235 1 15 3 33 1 43 2 18 1 190 1 360 1 
135 2 330 2 106 1 115 1 353 1 68 1 235 1 53 1 15 2 33 1 93 1 43 1 190 1 113 1 360 1 
135 4 353 2 208 1 293 1 68 2 87 1 235 1 15 4 33 1 180 1 43 2 190 2 360 1 
33 1 135 1 43 1 190 1 68 1 360 1 235 1 15 1 
135 4 353 2 208 1 40 1 293 1 68 1 235 2 15 4 33 2 144 1 43 3 247 1 190 1 261 1 
135 2 353 1 68 1 235 1 15 2 33 1 43 1 190 1 360 1 227 1 249 1 300 1 
135 3 40 1 68 1 235 1 15 3 33 1 43 1 144 2 190 1 360 1 261 2 9 1 
43 2 280 1 213 2 54 1 
135 1 190 1 68 1 360 1 256 1 15 1 
33 1 135 2 43 1 353 1 292 1 190 1 68 1 360 1 235 1 15 2 
28 1 
33 1 135 1 43 1 190 1 68 1 360 1 235 1 15 1 
135 3 353 1 292 1 68 1 235 1 15 3 33 1 43 1 190 1 360 1 261 1 
43 1 208 1 247 1 293 1 
33 1 43 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 179 8 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 81 32 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 81 32 150 71 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 179 8 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 101 1 143 9 185 6 22 1 253 1 257 2 163 2 303 5 211 2 121 1 215 1 58 1 316 1 317 3 364 1 218 1 116 2 154 2 198 4 268 9 63 1 291 2 137 2 373 1 294 1 295 1 296 1 
41 1 101 1 143 9 185 6 22 1 253 1 257 2 163 2 303 5 211 2 121 1 215 1 58 1 316 1 317 3 364 1 218 1 116 2 154 2 198 4 268 9 63 1 291 2 137 2 373 1 294 1 295 1 296 1 
41 1 101 1 143 10 185 7 22 1 253 1 257 2 163 2 303 6 211 2 121 1 215 1 58 1 316 1 317 4 364 1 218 1 116 2 154 2 198 5 268 10 63 1 291 2 137 2 373 1 294 1 295 1 296 1 
41 1 101 1 143 7 185 4 253 1 257 1 163 2 303 4 211 2 121 1 215 1 58 1 316 1 317 2 364 1 218 1 116 2 154 2 198 3 268 7 63 1 291 2 137 2 373 1 294 1 295 1 296 1 
215 1 143 4 185 3 22 1 317 1 218 1 154 1 257 2 163 1 303 3 211 1 198 2 268 4 291 1 137 1 373 1 294 1 296 1 
101 1 143 2 154 1 116 1 303 1 211 1 134 1 359 1 268 2 291 1 137 1 373 1 294 1 295 1 296 1 297 1 
198 1 268 3 143 3 185 1 63 1 317 1 116 1 154 2 373 1 294 1 296 1 303 2 211 2 
215 1 143 9 185 7 22 1 175 1 218 1 364 1 317 3 154 2 116 1 257 2 163 1 303 5 211 2 198 4 268 9 63 1 291 1 121 1 137 1 373 1 65 1 294 1 296 1 
215 1 143 9 185 7 22 1 175 1 218 1 364 1 317 3 154 2 116 1 257 2 163 1 303 5 211 2 198 4 268 9 63 1 291 1 121 1 137 1 373 1 65 1 294 1 296 1 
161 1 312 1 363 1 
356 2 323 1 363 1 
160 2 105 2 369 1 172 2 96 1 308 2 288 2 355 2 
160 2 252 1 331 2 256 1 146 1 105 2 337 1 193 1 307 1 308 2 309 2 313 1 57 1 112 1 172 2 282 1 129 1 130 1 33 1 320 1 287 2 288 3 267 1 369 1 246 1 135 2 96 1 16 1 156 1 352 1 138 1 327 1 269 1 270 1 38 2 140 1 355 3 
160 1 105 1 369 1 172 1 361 1 308 1 19 1 288 1 251 1 355 1 
160 1 161 1 243 1 286 1 178 1 288 1 123 1 84 1 199 1 19 1 363 1 355 1 213 1 330 1 
160 1 161 1 172 1 286 1 178 1 288 1 105 1 308 1 199 2 84 1 19 1 363 1 355 1 213 1 330 2 
302 1 353 1 199 1 30 1 330 1 
161 1 302 1 79 1 353 1 25 1 199 2 363 1 330 2 
353 1 199 1 330 1 
160 1 172 1 302 1 319 1 288 1 369 1 105 1 361 1 308 1 199 1 19 1 251 1 330 1 355 1 
363 1 
161 1 302 1 79 1 29 1 353 1 199 2 363 1 330 2 
161 1 302 2 358 1 132 1 74 2 346 1 2 2 248 2 370 1 79 1 17 1 199 5 326 1 353 2 52 1 264 1 228 1 363 1 330 5 
96 1 312 1 
105 1 160 2 125 1 172 1 96 2 230 1 308 1 288 2 355 2 
186 1 254 1 99 1 
112 1 129 1 31 1 130 1 33 1 287 1 288 1 267 1 96 1 352 1 309 1 269 1 313 1 38 1 140 1 355 1 
160 1 112 1 186 1 129 1 130 1 33 1 76 1 287 1 288 2 267 1 105 1 261 1 352 1 308 1 309 1 269 1 313 1 38 1 140 1 355 2 
160 3 105 3 172 1 96 1 261 1 308 3 288 3 355 3 
160 1 105 1 308 1 19 1 288 1 251 1 355 1 
125 1 160 1 105 1 172 1 230 1 308 1 19 1 288 1 355 1 
160 3 252 1 331 1 230 1 23 1 146 1 76 1 105 3 193 1 261 1 308 3 309 1 84 1 313 1 213 1 57 1 112 1 85 1 172 2 129 1 130 1 286 1 33 1 178 1 320 1 287 1 288 4 267 1 369 1 246 1 135 2 96 1 156 1 352 1 138 1 199 1 327 1 269 1 270 1 19 1 38 1 140 1 355 4 330 1 
160 2 105 1 96 1 261 1 308 1 123 1 245 1 288 2 355 2 
160 3 172 1 85 1 230 1 88 1 286 1 178 1 76 1 288 3 105 3 261 2 308 3 199 1 84 1 19 1 363 1 330 1 355 3 213 1 
160 2 172 1 186 1 230 1 288 2 105 2 261 1 308 2 99 1 355 2 
112 1 129 1 130 1 33 1 287 1 288 1 267 1 96 1 352 1 309 1 269 1 38 1 313 1 140 1 355 1 
112 1 129 1 33 1 287 1 288 1 267 1 368 1 96 1 309 1 325 1 269 1 38 1 313 1 140 1 355 1 
252 1 331 3 186 1 254 1 24 1 208 1 146 2 337 1 360 1 166 1 280 1 82 1 81 1 57 1 365 1 93 1 320 1 118 1 135 2 138 1 327 1 182 1 270 1 99 1 
160 1 105 1 308 1 11 1 19 1 288 1 213 1 355 1 
160 5 172 1 230 1 76 1 245 1 288 5 105 4 224 1 96 1 261 2 308 4 123 1 55 1 355 5 
160 2 105 2 11 1 308 2 19 1 288 2 251 1 355 2 
244 1 5 1 
244 1 5 1 
152 1 122 1 
152 1 122 1 
152 1 122 1 
244 1 5 1 221 1 
259 1 244 1 5 1 
152 1 324 1 46 1 122 1 244 2 5 2 
244 1 5 1 221 1 
244 1 5 1 221 1 
220 1 244 1 5 1 
220 1 244 1 5 1 
220 1 244 1 5 1 
42 1 299 1 1 2 272 1 205 1 219 2 244 2 189 2 13 2 26 3 155 1 106 1 324 1 124 1 199 2 5 2 158 2 363 1 330 2 
160 2 1 1 176 1 219 1 131 1 244 1 344 1 288 2 189 1 13 1 26 1 222 1 335 1 105 2 259 1 106 1 96 1 308 2 199 1 98 1 226 1 5 1 355 2 330 1 
291 1 137 1 163 1 
134 1 291 1 137 1 
134 1 290 1 291 3 168 1 163 2 281 1 
134 1 291 2 168 1 339 1 163 1 281 1 
134 1 291 2 168 1 163 1 281 2 
356 1 161 1 302 4 73 1 74 1 2 1 335 1 278 1 235 1 27 1 166 1 79 1 81 1 83 1 237 1 363 1 341 1 91 2 176 1 318 1 32 1 93 1 132 1 344 1 118 1 248 1 370 3 353 1 199 5 228 1 330 5 
356 3 161 1 302 7 144 1 73 3 147 1 74 2 2 2 77 1 27 2 166 3 79 1 362 1 81 3 83 2 110 1 237 1 30 5 264 1 363 2 176 4 318 3 32 3 93 3 132 3 118 3 248 2 370 8 292 1 353 6 139 5 199 9 228 1 330 9 
356 2 161 1 302 2 73 1 74 1 2 1 235 1 27 1 166 1 83 1 81 1 264 1 363 2 341 1 176 1 91 1 318 1 32 1 132 1 93 1 118 1 323 1 248 1 370 3 199 3 330 3 
356 3 161 1 302 3 73 2 147 1 74 1 2 1 77 1 235 1 27 1 166 2 83 1 81 2 110 1 264 1 363 2 341 1 176 2 91 2 318 2 32 2 93 2 132 2 118 2 323 1 248 1 370 5 199 4 330 4 
238 1 312 1 313 1 
255 1 313 1 
56 1 
313 1 140 1 
112 1 334 1 238 2 54 1 313 3 140 1 
112 1 313 1 140 1 
372 1 313 1 
111 1 229 1 331 7 44 1 208 3 207 2 146 3 75 1 118 1 3 1 337 4 166 1 180 1 249 1 280 2 236 1 262 1 
111 1 229 1 331 7 44 1 208 3 207 2 146 3 75 1 118 1 3 1 337 4 166 1 180 1 249 1 280 2 236 1 262 1 
111 1 229 1 331 7 44 1 242 1 208 3 207 2 146 3 75 1 118 1 3 1 337 4 166 1 180 1 249 1 280 2 236 1 262 1 
229 2 252 1 331 28 44 1 207 3 208 6 75 1 146 15 148 1 3 2 336 1 337 13 166 4 107 1 236 2 280 4 262 1 4 1 81 3 57 1 111 1 173 4 128 1 342 1 32 3 93 3 118 4 180 2 135 2 249 2 138 1 374 1 66 3 270 1 
252 2 229 1 331 9 44 1 207 2 208 4 146 4 3 1 337 5 166 1 107 1 236 1 280 3 262 1 57 2 111 1 89 1 367 1 118 1 135 4 180 1 249 1 138 2 270 2 
143 2 185 1 357 1 274 1 163 1 303 1 211 1 260 1 309 1 53 1 239 1 154 1 116 1 197 1 12 1 33 1 287 1 267 1 134 1 268 2 62 1 290 1 291 2 137 1 373 1 157 1 294 1 296 1 38 1 141 1 
143 3 185 2 357 1 274 1 163 1 303 1 211 1 164 1 260 1 309 1 239 1 154 1 116 1 12 1 33 1 287 1 321 1 267 1 134 1 268 3 62 1 322 1 290 1 291 2 137 1 157 1 294 1 296 1 38 1 141 1 
143 2 185 2 357 1 274 1 163 1 303 1 164 1 260 1 309 1 239 1 116 1 12 1 33 1 287 1 267 1 134 1 268 2 322 1 290 1 291 2 137 1 157 1 294 1 296 1 38 1 
162 1 143 1 174 1 357 2 274 2 116 2 154 1 33 1 277 1 287 1 321 1 211 1 267 1 304 1 268 1 80 1 309 1 157 2 227 1 269 1 313 1 38 1 140 1 
143 1 357 1 274 1 116 1 154 1 12 1 163 1 33 1 287 1 211 1 267 1 134 1 62 1 268 1 260 1 322 1 290 1 291 2 309 1 137 1 373 1 157 1 53 1 239 1 38 1 141 1 
233 1 
8 1 45 1 132 1 74 1 287 1 2 1 179 1 248 1 79 1 309 1 353 2 199 2 269 1 38 1 228 1 330 2 
160 1 102 1 103 1 50 1 108 1 79 1 29 1 123 1 84 1 213 1 126 1 59 2 243 1 286 1 178 1 288 1 119 1 199 3 353 2 19 1 355 1 330 3 
160 1 161 1 333 1 103 1 50 1 108 1 29 1 79 1 123 1 84 1 213 1 363 1 126 1 59 3 243 1 286 1 178 1 288 1 119 1 353 1 199 3 19 1 355 1 330 3 
160 1 161 1 102 1 333 1 103 1 50 1 108 1 79 1 29 1 123 1 84 1 213 1 363 1 126 1 59 3 90 1 243 1 286 1 178 1 288 1 119 1 199 3 353 2 19 1 355 1 330 3 
102 4 333 4 231 1 103 1 2 1 50 1 108 1 240 2 59 6 243 1 286 1 288 1 248 1 351 2 119 1 199 5 353 7 18 1 19 1 67 1 355 1 20 1 160 1 161 5 68 1 74 1 78 1 29 1 79 3 123 1 84 1 311 2 213 1 363 5 126 1 90 4 132 1 178 1 323 2 370 1 371 2 183 1 228 1 330 5 
102 2 333 2 103 1 2 1 50 1 108 1 338 1 240 2 59 4 243 1 286 1 288 1 248 1 351 2 119 1 199 4 353 4 19 1 67 1 355 1 160 1 356 2 161 1 74 1 79 2 123 1 84 1 311 2 213 1 363 2 126 1 90 2 132 1 178 1 323 2 370 1 371 2 183 1 228 1 330 4 
160 1 161 1 68 1 102 2 333 2 103 1 74 1 2 1 50 1 78 1 108 1 79 2 123 1 84 1 311 2 363 1 213 1 126 1 240 2 59 4 90 2 243 1 132 1 286 1 178 1 288 1 323 2 248 1 351 2 370 1 119 1 371 2 353 4 199 4 183 1 19 1 67 1 228 1 355 1 330 4 20 1 
160 1 161 1 68 1 102 2 333 2 103 1 74 1 2 1 50 1 78 1 108 1 79 2 123 1 84 1 311 2 363 1 213 1 126 1 240 2 59 4 90 2 243 1 132 1 286 1 178 1 288 1 323 2 248 1 351 2 370 1 119 1 371 2 353 4 199 4 183 1 19 1 67 1 228 1 355 1 330 4 20 1 
356 2 159 1 160 1 161 1 102 2 333 2 103 1 74 1 2 1 50 1 78 1 108 1 79 2 123 1 84 1 311 2 363 1 213 1 126 1 153 1 59 4 90 2 243 1 366 2 132 1 286 1 178 1 288 1 133 2 248 1 351 2 370 1 119 1 250 1 353 4 199 4 183 1 19 1 228 1 355 1 330 4 
160 1 161 1 68 1 102 3 333 3 103 1 74 1 2 1 50 1 78 1 108 1 79 2 123 1 84 1 311 2 363 1 213 1 126 1 240 2 59 5 90 3 243 1 132 1 286 1 178 1 288 1 323 2 248 1 351 2 370 1 119 1 371 2 199 4 18 1 353 5 183 1 19 1 67 1 228 1 20 1 355 1 330 4 
160 1 161 1 68 1 102 3 333 3 103 1 74 1 2 1 50 1 78 1 108 1 79 2 123 1 84 1 311 2 363 1 213 1 126 1 240 2 59 5 90 3 243 1 132 1 286 1 178 1 288 1 323 2 248 1 351 2 370 1 119 1 371 2 199 4 18 1 353 5 183 1 19 1 67 1 228 1 20 1 355 1 330 4 
102 2 333 2 103 1 2 1 50 1 108 1 338 1 59 4 243 1 286 1 288 1 248 1 351 2 119 1 199 4 353 4 19 1 355 1 159 1 160 1 356 2 161 1 74 1 79 2 123 1 84 1 311 2 213 1 363 1 126 1 90 2 132 1 366 2 178 1 133 2 370 1 183 1 228 1 330 4 
252 1 229 1 331 6 186 1 44 1 254 1 208 2 207 1 146 3 3 1 337 3 166 1 280 2 262 1 82 1 312 1 57 1 111 1 320 1 118 1 135 2 96 2 138 1 327 1 99 1 270 1 
0 1 252 2 70 1 331 14 186 10 254 10 206 1 208 1 256 1 146 8 47 1 258 1 336 1 337 6 166 2 280 1 81 2 57 2 173 3 32 2 93 2 320 2 118 2 135 4 96 1 156 1 138 2 327 1 374 1 66 3 270 2 99 2 
160 1 252 1 331 2 188 1 104 1 256 1 146 1 76 1 258 1 105 1 337 1 261 1 309 1 308 1 313 1 57 1 112 1 129 1 130 1 31 1 33 1 287 1 320 1 288 2 267 1 135 2 96 1 352 1 156 1 138 1 327 1 269 1 202 1 38 1 99 1 270 1 140 1 355 2 
229 1 331 18 186 5 44 1 146 10 275 2 3 1 105 1 337 8 280 4 57 3 111 1 112 2 241 2 60 2 345 1 287 1 288 3 118 3 289 1 246 2 156 1 352 2 355 3 160 1 252 3 254 5 207 1 208 4 256 1 76 1 258 1 166 3 261 1 262 1 309 1 308 1 81 2 313 2 129 2 130 2 32 2 93 2 33 2 320 3 267 2 135 6 96 2 97 2 138 3 327 3 269 1 38 1 270 3 99 5 140 2 
160 1 43 1 142 1 252 2 331 2 256 1 146 1 105 1 337 1 304 1 279 1 261 1 263 1 308 1 309 8 310 1 80 1 82 1 313 3 57 2 92 1 197 1 33 2 287 8 320 2 288 1 267 2 322 1 135 4 16 2 156 1 138 2 327 2 269 2 38 7 270 2 375 1 140 2 355 1 
160 1 57 1 172 1 252 1 331 2 230 1 32 1 320 1 288 1 118 1 258 1 105 1 337 2 135 2 308 1 81 1 51 1 138 1 327 1 270 1 355 1 
57 1 252 1 331 1 24 1 320 1 118 1 337 1 135 2 82 1 138 1 81 1 327 1 270 1 
57 1 252 1 331 2 186 1 365 1 254 1 208 1 93 1 146 2 320 1 135 2 166 1 280 1 82 1 138 1 327 1 99 1 270 1 
252 1 331 3 186 1 254 1 208 1 146 2 337 1 166 1 280 1 81 1 82 1 57 1 32 1 93 1 320 1 118 1 135 2 138 1 327 1 270 1 99 1 
57 1 252 1 331 1 24 1 320 1 118 1 337 1 135 2 138 1 81 1 327 1 270 1 375 1 
57 1 252 1 331 2 186 1 365 1 254 1 208 1 93 1 146 2 320 1 135 2 166 1 280 1 138 1 327 1 99 1 270 1 375 1 
252 1 331 3 186 1 254 1 208 1 146 2 337 1 166 1 280 1 81 1 57 1 32 1 93 1 320 1 118 1 135 2 138 1 327 1 270 1 99 1 375 1 
252 1 331 3 186 1 254 1 208 1 146 2 337 1 166 1 280 1 81 1 57 1 32 1 93 1 320 1 118 1 135 2 138 1 327 1 270 1 99 1 
57 1 112 1 252 1 331 2 129 1 130 1 256 1 146 1 33 1 320 1 287 1 288 1 267 1 337 1 246 1 135 2 96 1 156 1 352 1 309 1 138 1 327 1 269 1 270 1 313 1 38 1 140 1 355 1 
57 1 112 1 252 1 331 2 129 1 285 1 256 1 146 1 33 1 320 1 287 1 288 1 267 1 368 1 337 1 135 2 96 1 156 1 309 1 138 1 325 1 327 1 269 1 270 1 313 1 38 1 140 1 355 1 
252 1 331 3 186 1 254 1 208 1 146 2 258 1 337 1 166 1 280 1 81 1 57 1 32 1 93 1 320 1 118 1 135 2 138 1 327 1 270 1 99 1 
252 1 331 3 186 1 254 1 208 1 146 2 337 1 166 1 280 1 309 1 81 1 313 1 57 1 112 1 241 1 129 1 130 1 197 1 32 1 93 1 33 1 287 1 320 1 288 1 118 1 267 1 246 1 135 2 352 1 138 1 327 1 99 1 38 1 270 1 140 1 355 1 
160 1 252 1 331 2 230 1 146 1 105 1 258 1 337 1 166 1 308 1 81 1 57 1 172 1 32 1 93 1 320 1 288 1 118 1 135 2 14 1 138 1 327 1 270 1 355 1 
21 1 252 2 331 11 204 1 72 1 208 2 146 7 212 1 336 1 337 4 166 2 280 2 81 2 340 1 57 2 173 2 196 1 10 1 343 1 32 2 93 2 367 1 118 2 135 4 138 2 374 1 66 1 270 2 
252 2 331 24 71 1 208 1 72 2 146 14 212 2 234 1 337 10 336 2 150 1 166 3 107 1 280 1 81 3 314 1 340 4 57 2 315 1 173 2 196 1 10 1 343 1 32 3 177 1 93 3 367 1 118 3 135 4 15 1 138 2 66 2 270 2 
21 1 252 2 331 13 72 1 208 1 146 8 212 1 336 1 337 5 166 2 280 1 81 2 340 2 57 2 173 2 196 1 10 1 343 1 32 2 93 2 367 1 118 2 135 4 15 1 138 2 374 1 66 1 270 2 
21 1 252 2 331 13 72 1 208 1 146 8 212 1 336 1 337 5 166 2 280 1 81 2 340 2 57 2 173 2 196 1 10 1 343 1 32 2 93 2 367 1 118 2 135 4 15 1 138 2 374 1 66 1 270 2 
229 1 252 1 70 2 331 42 71 1 44 1 207 1 72 1 208 6 146 24 3 1 234 1 212 1 150 1 336 2 337 18 166 8 280 6 262 1 81 7 314 1 340 3 57 1 111 1 315 1 173 4 196 1 10 1 343 1 32 7 177 1 93 7 367 1 118 8 135 2 15 1 138 1 374 2 66 4 270 1 
42 1 203 1 1 1 324 1 219 1 124 1 244 1 5 1 13 1 189 1 
259 1 98 1 
6 1 223 1 136 1 1 1 219 1 244 1 5 1 13 1 189 1 
42 1 299 1 1 1 272 1 205 1 219 1 244 1 189 1 13 1 26 2 106 1 324 1 124 1 199 1 5 1 158 1 363 1 330 1 
42 1 299 1 1 1 272 1 205 1 219 1 244 1 189 1 13 1 26 2 106 1 324 1 124 1 199 1 5 1 158 1 363 1 330 1 
42 1 299 1 1 1 272 1 205 1 219 1 244 1 189 1 13 1 26 2 106 1 324 1 124 1 199 1 5 1 158 1 363 1 330 1 
46 1 209 1 221 1 
46 1 209 1 221 1 
283 1 220 1 
283 1 46 1 220 1 
131 1 222 1 
160 2 1 1 302 1 272 1 189 1 26 1 335 1 105 2 259 1 308 2 5 1 86 1 176 1 219 1 131 1 244 1 344 1 288 2 13 1 222 1 96 1 199 1 98 1 226 1 158 1 355 2 330 1 
209 1 221 1 
283 1 46 1 220 1 
160 2 252 1 331 2 332 1 256 1 146 1 258 1 337 1 263 1 309 2 310 1 313 1 265 1 57 1 7 1 33 1 287 2 320 1 288 2 267 1 95 1 247 1 135 2 16 2 156 1 138 1 327 1 270 1 38 2 140 1 355 2 
197 1 163 1 33 1 287 2 94 1 267 1 134 1 322 1 260 1 290 1 291 2 309 2 137 1 157 1 170 1 239 1 38 2 40 1 141 1 
163 1 33 1 287 1 267 1 48 1 134 1 322 1 260 1 290 1 291 2 309 1 137 1 157 1 170 1 239 1 38 1 141 1 
216 1 174 1 33 1 287 1 267 1 304 1 309 1 80 1 157 1 269 1 313 1 38 1 140 1 40 1 
163 1 33 1 287 1 94 1 267 1 134 1 322 1 260 1 290 1 291 2 309 1 137 1 157 1 170 1 239 1 38 1 40 1 141 1 
266 1 
161 1 370 1 358 1 132 1 312 1 346 1 363 1 
356 1 161 1 240 1 74 1 132 1 2 1 248 1 323 1 370 1 79 1 371 1 199 1 353 1 228 1 67 1 330 1 363 2 
45 1 232 2 149 1 2 3 151 1 238 2 54 1 112 1 115 2 287 1 118 2 248 3 353 5 199 5 200 2 356 8 161 1 300 2 255 3 73 4 74 3 27 2 166 2 305 2 309 1 79 3 81 2 313 6 363 5 171 1 318 4 32 2 132 5 93 2 33 1 178 2 267 2 323 4 370 8 97 2 269 1 38 1 140 1 228 3 330 5 271 2 
356 4 173 1 71 1 318 3 32 1 73 3 132 3 74 1 2 1 118 1 234 1 150 1 336 1 323 2 248 1 370 2 81 1 66 1 228 1 363 2 
160 1 229 1 74 1 2 1 191 1 3 1 105 1 166 1 262 1 361 1 308 1 172 1 9 1 319 1 132 2 288 1 118 2 369 1 248 1 370 2 200 2 199 1 19 1 228 1 251 1 355 1 20 1 330 1 
161 1 358 1 74 1 132 1 346 1 2 1 248 1 370 1 228 1 363 1 
356 2 318 1 32 1 73 1 132 1 93 1 118 1 166 1 323 1 370 2 81 1 200 1 363 1 
161 1 79 1 199 1 353 1 363 1 330 1 
8 1 45 1 120 1 132 1 74 1 287 1 2 1 248 1 179 1 79 1 309 1 199 1 353 2 269 1 38 1 228 1 330 1 
160 2 252 1 331 1 146 1 105 2 193 1 309 1 308 2 313 1 57 1 172 2 112 1 129 1 130 1 33 1 287 1 320 1 288 3 267 1 369 1 246 1 135 2 96 1 156 1 352 1 138 1 327 1 269 1 270 1 38 1 140 1 355 3 
356 4 161 2 45 1 318 2 207 1 73 2 132 2 74 1 2 1 27 1 323 2 248 1 370 1 228 1 363 4 
306 1 13 1 189 1 
113 1 124 1 131 1 13 1 189 1 
306 1 13 1 189 1 
306 1 13 1 189 1 
328 1 13 1 189 1 
328 1 13 1 189 1 
328 1 13 1 189 1 
13 1 189 1 
244 1 5 1 
57 2 111 1 252 2 229 1 331 8 44 1 207 1 208 3 146 4 118 1 3 1 337 4 166 1 180 1 135 4 107 1 280 2 262 1 138 2 270 2 
111 1 229 1 331 6 44 1 207 1 208 2 146 3 118 1 3 1 337 3 166 1 280 2 262 1 312 1 
57 1 252 1 331 3 208 1 32 1 146 2 93 1 118 1 337 1 166 1 135 2 280 1 138 1 81 1 270 1 100 1 
173 2 331 6 208 1 32 1 146 4 93 1 118 1 336 1 337 2 166 1 280 1 81 1 374 1 66 1 
229 2 0 1 252 2 331 21 70 1 44 1 207 1 208 7 146 12 3 2 337 9 166 3 107 2 280 5 262 1 81 2 214 1 57 2 111 1 173 2 32 2 93 2 118 3 180 2 135 4 138 2 374 1 66 2 270 2 
331 1 173 1 146 1 
337 1 331 1 66 1 
57 1 252 1 331 5 208 2 32 1 146 3 93 1 118 1 337 2 135 2 166 1 280 2 97 1 138 1 81 1 270 1 100 1 
252 1 331 10 71 1 208 1 146 6 234 1 336 1 337 4 150 1 166 2 280 1 81 2 314 1 57 1 173 1 32 2 93 2 177 1 367 1 118 2 135 2 138 1 66 1 270 1 
229 1 331 6 208 2 146 3 118 1 3 1 337 3 166 1 180 1 280 1 262 1 
57 1 111 1 229 1 252 1 331 3 44 1 208 2 146 2 3 1 337 1 180 1 135 2 107 1 280 1 138 1 270 1 214 1 
57 1 252 1 229 2 331 10 208 5 146 5 367 1 191 1 118 2 3 2 337 5 135 2 180 2 166 2 280 3 262 1 138 1 270 1 
57 1 252 1 331 1 367 1 118 1 337 1 135 2 138 1 81 1 270 1 
57 1 252 1 331 3 208 1 32 1 146 2 93 1 367 1 118 1 337 1 166 1 135 2 280 1 138 1 81 1 270 1 
21 1 57 3 252 3 229 1 331 3 208 2 146 2 367 1 3 1 337 1 135 6 180 1 107 1 280 1 138 3 270 3 214 1 
21 1 229 3 252 5 331 33 44 1 207 1 208 8 146 19 148 1 3 3 336 1 337 14 166 5 107 2 280 5 262 2 4 1 81 3 214 1 57 5 111 1 128 1 173 4 32 3 93 3 367 1 118 5 180 3 135 10 138 5 374 1 66 3 270 5 100 1 
252 1 229 1 331 8 71 1 44 1 207 1 208 2 146 4 3 1 336 1 337 4 166 1 280 2 262 1 57 1 111 1 173 1 367 1 118 1 135 2 138 1 66 1 270 1 
252 2 331 18 70 1 71 1 208 3 146 11 234 1 336 1 337 7 150 1 166 4 280 3 81 4 314 1 57 2 173 2 32 4 177 1 93 4 367 1 118 4 135 4 138 2 374 1 66 2 270 2 100 1 
229 1 252 3 331 17 71 1 44 1 207 1 208 3 146 10 3 1 234 1 336 1 337 7 150 1 166 3 107 1 280 3 262 1 81 2 314 1 57 3 111 1 173 1 32 2 177 1 93 2 367 1 118 3 135 6 138 3 66 1 270 3 100 1 
252 2 331 10 71 1 208 1 146 6 234 1 336 1 337 4 150 1 166 2 280 1 81 2 314 1 57 2 173 1 32 2 93 2 177 1 367 1 118 2 135 4 138 2 66 1 270 2 100 1 
252 1 229 1 331 8 71 1 44 1 207 1 208 2 146 4 3 1 336 1 337 4 166 1 280 2 262 1 57 1 111 1 173 1 367 1 118 1 135 2 138 1 66 1 270 1 
252 1 331 10 71 1 208 1 146 6 234 1 336 1 337 4 150 1 166 2 280 1 81 2 314 1 57 1 173 1 32 2 93 2 177 1 367 1 118 2 135 2 138 1 66 1 270 1 
252 3 331 11 71 1 208 1 146 7 234 1 336 1 337 4 150 1 166 2 107 1 280 1 81 2 314 1 57 3 173 1 32 2 177 1 93 2 367 1 118 2 135 6 138 3 66 1 270 3 100 1 
21 1 252 3 331 11 71 1 208 2 146 7 234 1 336 1 337 4 150 1 166 2 107 1 280 2 81 2 314 1 57 3 173 1 32 2 177 1 93 2 367 1 118 2 135 6 138 3 66 1 270 3 
111 1 229 3 331 7 44 2 208 6 146 4 118 1 3 3 337 3 166 1 180 3 280 3 262 1 
21 1 252 3 331 11 71 1 208 1 146 7 234 1 336 1 337 4 150 1 166 2 107 1 280 1 81 2 314 1 57 3 173 1 32 2 177 1 93 2 367 1 118 2 135 6 138 3 66 1 270 3 
160 1 96 1 284 1 123 1 245 1 288 1 355 1 
160 1 69 1 217 1 87 1 284 1 61 1 245 1 288 1 349 1 96 1 123 1 355 1 
304 1 80 1 309 1 269 1 33 1 312 1 313 1 287 1 38 1 140 1 267 1 
160 1 112 1 129 1 33 1 287 1 288 2 267 1 105 1 96 1 261 1 352 1 308 1 309 1 269 1 313 1 38 1 140 1 355 2 
160 2 105 1 261 1 309 1 308 2 84 1 313 3 213 1 112 2 129 1 33 1 287 1 288 2 267 1 96 1 350 1 352 1 372 1 354 1 38 1 19 1 140 2 355 2 
160 2 105 1 261 1 309 2 308 2 84 1 313 3 213 1 112 2 129 1 33 1 287 2 288 2 267 1 96 1 350 1 225 1 325 1 372 1 354 1 38 2 19 1 140 2 355 2 
161 1 273 1 255 1 309 3 238 1 313 4 363 1 112 1 33 1 178 1 287 3 347 1 267 1 350 1 225 1 372 1 353 1 199 2 354 1 269 1 38 3 140 1 330 2 
161 1 112 1 115 1 255 1 178 1 33 1 287 3 267 1 350 1 225 1 309 3 372 1 199 2 353 1 269 1 354 1 238 1 38 3 313 4 140 1 363 1 330 2 
309 1 92 1 33 1 287 1 38 1 267 1 
112 1 43 1 142 1 92 1 197 1 33 2 287 7 267 3 322 1 279 1 16 1 28 1 167 1 263 1 309 7 269 2 54 1 38 6 313 3 329 1 140 2 
229 1 331 6 186 1 44 1 146 3 105 1 3 1 337 3 280 2 57 2 112 1 111 1 241 1 60 1 197 1 287 1 288 2 118 1 246 1 352 1 355 2 160 1 252 2 254 1 208 2 207 1 258 1 166 1 261 1 262 1 309 1 308 1 313 1 265 1 129 1 130 1 33 1 320 2 267 1 135 4 96 2 138 2 327 2 99 1 38 1 270 2 140 1 
161 1 300 1 302 1 358 1 120 1 255 1 232 1 74 2 2 2 305 1 309 1 79 1 238 1 313 2 363 1 115 1 132 1 178 1 346 1 287 1 248 2 370 1 199 3 353 2 269 1 38 1 228 2 330 3 
112 1 309 2 92 1 197 1 238 1 33 1 54 1 149 1 313 2 287 2 38 2 140 1 267 2 
301 1 197 1 33 1 287 4 267 1 304 1 225 1 309 4 80 1 269 1 38 4 313 1 140 1 
112 1 33 1 287 2 267 2 348 1 165 1 350 1 28 1 309 2 38 2 313 1 329 1 39 1 140 1 
134 1 260 1 291 1 309 1 137 1 269 1 33 1 287 1 38 1 267 1 
7 1 322 1 263 1 309 2 197 1 33 1 313 1 287 2 38 2 140 1 267 1 
43 1 301 1 197 1 33 2 287 5 267 2 304 1 279 1 350 1 80 1 309 5 263 1 269 1 38 4 313 3 140 2 
301 1 197 1 33 2 287 5 267 2 304 1 279 1 350 1 181 1 80 1 309 5 263 1 269 1 38 4 313 3 140 2 
160 1 112 1 129 1 33 1 287 1 288 2 267 1 105 1 96 1 261 1 308 1 309 1 325 1 269 1 313 1 38 1 140 1 355 2 
112 1 33 1 287 1 267 2 350 1 28 1 167 1 309 1 54 1 38 1 313 1 329 1 140 1 
160 1 95 1 298 1 36 1 247 1 332 1 288 1 355 1 190 1 
36 1 64 1 109 1 
298 1 36 1 96 1 117 1 190 1 
161 1 298 2 85 1 302 1 117 2 286 1 178 1 190 2 36 1 96 1 64 1 84 1 201 1 199 2 109 1 19 1 363 1 213 1 330 2 
294 1 296 1 312 1 303 1 
268 1 143 1 154 1 294 1 296 1 303 1 211 1 
143 1 274 1 116 1 
101 2 143 3 187 1 154 1 303 1 211 1 192 1 268 3 37 1 373 1 294 1 296 1 
268 2 143 2 185 1 154 1 257 1 294 1 296 1 303 1 211 1 
215 1 143 1 154 1 163 1 303 1 211 1 198 1 268 1 291 1 137 1 373 1 
268 1 143 1 154 1 373 1 294 1 303 1 211 1 
268 1 143 1 154 1 373 1 294 2 296 1 211 1 
143 2 154 2 303 1 34 1 211 2 35 1 268 2 194 1 373 1 294 1 
198 1 268 3 143 3 185 2 317 1 364 1 121 1 154 1 373 1 294 1 296 1 303 2 211 1 
143 2 185 1 114 1 154 1 163 1 303 1 211 1 134 1 268 2 290 1 291 2 137 1 373 1 294 1 296 1 
143 4 185 2 22 1 317 1 154 2 257 1 303 2 211 2 198 1 268 4 373 1 294 1 296 1 
268 1 143 1 154 1 373 1 294 1 296 1 303 1 211 1 
101 1 143 4 185 2 317 1 187 1 154 1 303 3 211 1 192 1 198 1 268 4 293 1 294 2 296 2 
49 1 268 2 143 2 185 1 175 1 169 1 154 1 373 1 294 1 296 1 303 1 211 1 
101 2 143 3 187 1 145 1 154 1 303 1 211 1 192 2 268 3 373 1 294 1 296 1 
127 2 276 1 303 2 195 1 
184 1 268 1 143 1 154 1 373 1 211 1 
268 2 143 2 185 1 121 1 154 1 373 1 294 1 296 1 303 1 211 1 
210 1 
268 1 143 1 154 1 373 1 294 1 296 1 303 1 211 1 
101 1 143 3 185 1 154 1 303 1 211 1 268 3 121 1 373 1 294 1 296 1 
198 1 317 1 293 1 303 1 
294 1 303 1 

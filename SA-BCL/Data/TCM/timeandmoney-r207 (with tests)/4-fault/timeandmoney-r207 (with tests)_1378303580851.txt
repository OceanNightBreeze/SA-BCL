#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 261 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 3 260 1 183 2 204 1 35 2 238 4 338 1 99 1 218 5 121 2 11 2 245 1 191 6 166 1 87 9 147 1 169 2 170 1 354 9 111 1 154 1 254 1 197 1 113 2 27 2 175 1 200 1 29 1 
176 3 260 1 183 2 204 1 35 2 238 4 338 1 99 1 218 5 121 2 11 2 245 1 191 6 166 1 87 9 147 1 169 2 170 1 354 9 111 1 154 1 254 1 197 1 113 2 27 2 175 1 200 1 29 1 
176 4 260 1 183 2 204 1 35 2 238 5 338 1 99 1 218 6 121 2 11 2 245 1 191 7 166 1 87 10 147 1 169 2 170 1 354 10 111 1 154 1 254 1 197 1 113 2 27 2 175 1 200 1 29 1 
176 2 260 1 183 2 204 1 35 2 238 3 338 1 99 1 218 4 121 2 11 1 191 4 166 1 87 7 147 1 169 2 170 1 354 7 111 1 154 1 254 1 197 1 113 2 27 2 175 1 200 1 29 1 
176 1 87 4 204 1 35 1 238 2 169 1 99 1 354 4 218 3 121 1 111 1 11 2 197 1 113 1 245 1 27 1 175 1 191 3 
87 2 160 1 260 1 183 1 35 1 169 1 280 1 99 1 354 2 218 1 121 1 111 1 154 1 13 1 27 1 175 1 
87 3 176 1 183 1 238 1 99 1 354 3 218 2 121 2 111 1 254 1 27 2 175 1 191 1 
176 3 183 1 204 1 238 4 35 1 99 1 218 5 121 2 11 2 245 1 250 1 191 7 87 9 43 1 147 1 169 1 170 1 354 9 111 1 254 1 197 1 113 1 27 2 175 1 
176 3 183 1 204 1 238 4 35 1 99 1 218 5 121 2 11 2 245 1 250 1 191 7 87 9 43 1 147 1 169 1 170 1 354 9 111 1 254 1 197 1 113 1 27 2 175 1 
144 1 305 1 256 1 
110 1 305 1 149 2 
37 2 135 2 258 2 137 2 25 2 174 1 171 2 15 1 
135 2 177 1 0 1 258 3 115 2 137 2 5 1 237 1 311 1 36 1 37 2 119 1 242 2 221 1 165 1 12 1 244 1 249 1 246 1 224 1 14 1 15 1 108 1 194 1 212 1 352 1 46 1 171 2 129 1 282 1 232 1 78 2 287 1 214 2 25 3 234 2 174 1 
37 1 135 1 258 1 210 1 137 1 25 1 337 1 60 1 171 1 15 1 
251 1 314 1 17 1 258 1 210 1 33 1 72 1 171 1 196 1 305 1 25 1 223 1 256 1 345 1 
314 2 135 1 258 1 137 1 210 1 33 2 72 1 171 1 37 1 196 1 305 1 25 1 223 1 256 1 345 1 
236 1 314 1 33 1 53 1 326 1 
314 2 333 1 33 2 305 1 256 1 207 1 53 1 326 1 
314 1 33 1 53 1 
314 1 135 1 258 1 210 1 33 1 137 1 337 1 60 1 62 1 171 1 37 1 25 1 326 1 15 1 
305 1 
314 2 33 2 305 1 256 1 207 1 40 1 53 1 326 1 
314 5 202 2 33 5 117 2 128 1 207 1 139 2 230 1 101 1 219 1 77 1 49 1 255 1 305 1 104 1 248 1 256 1 326 2 53 2 
144 1 174 1 
135 1 258 2 137 1 171 2 37 1 269 1 25 2 174 2 313 1 
146 1 211 1 343 1 
177 1 258 1 194 1 352 1 46 1 295 1 232 1 242 1 214 1 25 1 234 1 174 1 244 1 12 1 246 1 224 1 
177 1 349 1 258 2 137 1 194 1 45 1 211 1 352 1 46 1 171 1 37 1 232 1 242 1 214 1 25 2 234 1 12 1 244 1 224 1 246 1 
37 3 135 1 258 3 137 3 45 1 25 3 174 1 171 3 
37 1 258 1 210 1 137 1 25 1 60 1 171 1 
37 1 135 1 269 1 258 1 210 1 137 1 25 1 313 1 171 1 
177 1 135 2 0 1 158 1 258 4 115 1 137 3 33 1 5 1 237 1 311 1 37 3 242 1 221 1 165 1 186 1 223 1 12 1 244 1 313 1 249 1 224 1 246 1 14 1 345 1 15 1 314 1 349 1 210 1 108 1 194 1 45 1 212 1 352 1 46 1 72 1 171 3 196 1 232 1 78 2 214 1 25 4 234 1 174 1 
37 1 17 1 258 2 137 1 25 2 45 1 52 1 174 1 171 2 
314 1 135 1 158 1 349 1 258 3 33 1 210 1 137 3 45 2 72 1 171 3 37 3 196 1 79 1 305 1 25 3 223 1 313 1 345 1 
135 1 146 1 258 2 137 2 45 1 211 1 171 2 37 2 25 2 313 1 
177 1 258 1 194 1 46 1 352 1 232 1 242 1 214 1 25 1 234 1 174 1 244 1 12 1 246 1 224 1 
290 1 291 1 258 1 194 1 352 1 232 1 242 1 214 1 25 1 234 1 174 1 244 1 12 1 246 1 224 1 
328 1 178 1 146 2 115 4 259 1 167 1 108 2 211 2 212 1 206 1 279 1 237 1 91 1 311 1 340 1 129 2 321 1 78 2 165 1 221 1 343 2 114 1 249 1 143 1 
37 1 341 1 258 1 210 1 137 1 25 1 72 1 171 1 
37 4 135 1 17 1 349 1 258 5 272 1 137 4 25 5 45 2 52 1 174 1 313 1 171 5 229 1 
37 2 341 1 258 2 210 1 137 2 25 2 60 1 171 2 
44 1 222 1 
44 1 222 1 
268 1 127 1 
268 1 127 1 
268 1 127 1 
69 1 44 1 222 1 
44 1 222 1 264 1 
316 1 268 1 127 1 44 2 222 2 105 1 
69 1 44 1 222 1 
69 1 44 1 222 1 
203 1 44 1 222 1 
203 1 44 1 222 1 
203 1 44 1 222 1 
80 2 314 2 179 1 316 1 32 2 44 2 33 2 162 2 266 1 294 2 222 2 297 1 305 1 243 3 26 1 215 1 199 2 225 1 66 1 
80 1 258 2 32 1 137 2 33 1 162 1 264 1 37 2 120 1 294 1 222 1 243 1 344 1 123 1 225 1 124 1 314 1 90 1 44 1 171 2 302 1 173 1 25 2 174 1 
113 1 35 1 169 1 
13 1 35 1 169 1 
308 1 227 1 113 2 13 1 288 1 169 3 
308 1 113 1 13 1 288 1 359 1 169 2 
308 2 113 1 13 1 288 1 169 2 
202 1 259 1 33 5 206 1 117 1 8 2 139 1 207 1 312 1 101 1 103 1 140 2 273 2 123 1 124 1 314 5 107 1 167 1 149 3 91 1 110 1 283 1 231 1 77 3 173 1 49 2 305 2 24 1 358 1 256 1 53 1 326 4 
236 5 202 2 332 1 259 3 334 1 33 9 206 3 117 2 8 6 63 1 312 1 207 1 139 2 101 1 219 1 273 6 275 5 314 9 167 3 252 1 195 1 73 1 149 9 91 3 110 3 231 2 77 8 173 4 49 6 305 5 24 2 358 3 256 1 53 6 326 7 
202 1 259 1 33 3 206 1 117 1 8 2 139 1 219 1 103 1 140 1 273 2 314 3 107 1 167 1 149 4 91 1 110 2 231 1 77 3 173 1 49 2 305 3 24 1 358 1 256 1 326 2 
202 1 332 1 259 2 33 4 206 2 117 1 8 4 139 1 219 1 103 1 140 2 273 4 314 4 107 1 167 2 195 1 73 1 149 7 91 2 110 3 231 1 77 5 173 2 49 4 305 4 24 1 358 2 256 1 326 3 
144 1 352 1 133 1 
352 1 98 1 
55 1 
352 1 12 1 
96 1 194 1 293 1 352 3 12 1 133 2 
194 1 352 1 12 1 
136 1 352 1 
329 1 299 1 115 6 259 1 167 1 58 1 108 3 7 1 263 1 129 3 9 1 284 1 122 1 114 2 65 1 235 1 143 1 
329 1 299 1 115 6 259 1 167 1 58 1 108 3 7 1 263 1 129 3 9 1 284 1 122 1 114 2 65 1 235 1 143 1 
329 1 299 1 115 6 259 1 167 1 58 1 108 3 7 1 263 1 129 3 9 1 320 1 284 1 122 1 114 2 65 1 235 1 143 1 
327 1 329 1 115 30 259 4 58 5 205 1 206 3 7 1 311 1 263 2 102 1 9 2 122 2 220 4 342 1 221 1 165 1 187 1 65 2 249 1 298 1 143 4 299 1 145 1 167 4 108 15 91 3 129 15 284 1 78 2 155 3 358 3 114 9 235 2 
329 1 115 8 259 1 58 1 311 2 263 1 7 1 102 1 9 1 122 1 221 2 165 2 39 1 249 2 65 1 143 2 68 1 299 1 167 1 108 4 129 4 78 4 114 3 235 1 
3 1 183 1 310 1 35 1 99 1 218 1 121 1 83 1 242 1 13 1 246 1 224 1 191 1 87 2 348 1 89 1 192 1 227 1 350 1 169 2 354 2 111 1 355 1 285 1 214 1 234 1 113 1 324 1 27 1 175 1 
3 1 183 1 310 1 35 1 163 1 218 1 121 1 83 1 242 1 13 1 246 1 224 1 191 2 87 3 192 1 227 1 350 1 169 2 354 3 151 1 111 1 355 1 285 1 214 1 234 1 113 1 324 1 27 1 175 1 157 1 
3 1 183 1 310 1 35 1 163 1 218 1 83 1 242 1 13 1 246 1 224 1 191 2 87 2 227 1 350 1 169 2 354 2 151 1 111 1 285 1 214 1 234 1 113 1 324 1 175 1 
180 1 3 2 183 2 138 1 240 1 121 1 82 1 242 1 12 1 224 1 246 1 87 1 70 1 350 2 352 1 354 1 232 1 48 1 214 1 234 1 324 2 27 1 157 1 
87 1 192 1 89 1 227 1 3 1 183 1 350 1 310 1 35 1 169 2 99 1 354 1 151 1 121 1 355 1 83 1 285 1 242 1 214 1 234 1 113 1 13 1 324 1 224 1 246 1 27 1 
28 1 
201 1 289 1 202 1 258 1 33 3 34 1 117 1 139 1 207 1 101 1 81 1 242 2 223 1 12 1 224 1 246 1 142 1 345 1 251 1 314 3 17 1 210 1 70 1 352 1 228 1 72 1 171 1 196 1 232 2 77 1 48 1 214 2 49 1 25 1 234 2 24 1 53 2 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 3 289 1 17 1 258 1 210 1 33 3 34 1 72 1 207 1 171 1 81 1 196 1 25 1 223 1 345 1 40 1 53 1 
251 1 314 2 289 1 202 1 17 1 258 1 210 1 33 2 34 1 72 1 117 1 139 1 171 1 101 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 17 1 258 1 210 1 33 2 34 1 72 1 171 1 81 1 196 1 25 1 223 1 345 1 
251 1 314 2 289 1 202 1 17 1 258 1 210 1 33 2 34 1 72 1 117 1 139 1 171 1 101 1 81 1 196 1 25 1 223 1 345 1 
329 1 144 1 299 1 115 5 259 1 167 1 108 3 212 1 279 1 237 1 7 1 311 1 129 2 122 1 78 2 165 1 221 1 174 2 114 1 249 1 65 1 143 1 
327 1 0 1 115 14 259 1 58 1 336 1 205 1 6 1 206 1 237 2 311 2 267 1 220 3 221 2 165 2 343 11 249 2 143 1 146 4 167 2 108 6 71 1 211 11 212 1 91 2 129 8 78 4 287 1 155 3 358 2 174 1 114 2 325 1 
177 1 0 1 258 2 115 2 137 1 237 1 311 1 37 1 295 1 242 1 221 1 165 1 12 1 244 1 224 1 246 1 249 1 41 1 146 1 349 1 194 1 45 1 108 1 71 1 352 1 46 1 212 1 171 1 129 1 319 1 232 1 78 2 214 1 287 1 234 1 25 2 357 1 174 1 
177 2 0 1 258 3 259 3 137 1 58 4 4 2 7 1 311 3 221 3 12 2 65 1 224 2 14 2 143 3 16 2 146 6 108 10 194 2 71 1 151 1 232 1 78 6 287 1 234 3 25 3 114 7 329 1 115 19 116 1 206 2 237 3 37 1 164 2 122 1 242 3 296 1 165 3 343 6 244 2 249 3 246 2 299 1 349 1 167 3 45 1 168 1 211 6 212 3 46 2 352 2 91 2 171 1 129 9 214 3 51 2 358 2 174 2 
0 1 258 1 57 1 137 1 97 1 311 2 64 1 221 2 12 3 224 4 70 1 318 1 108 1 194 1 279 1 151 1 19 1 232 2 78 4 22 1 287 1 234 6 25 1 159 1 115 2 237 2 36 2 37 1 242 7 165 2 249 2 246 3 88 1 348 1 45 1 351 1 212 2 352 4 171 1 129 1 47 1 48 1 214 7 
135 1 258 1 115 3 259 1 137 1 206 1 237 1 311 1 37 1 221 1 165 1 343 1 313 1 249 1 143 1 146 1 167 1 108 2 211 1 71 1 212 1 91 1 171 1 129 1 78 2 25 1 358 1 114 1 216 1 
146 1 115 2 58 1 167 1 211 1 212 1 279 1 237 1 311 1 91 1 340 1 129 2 78 2 165 1 221 1 343 1 114 1 249 1 
178 1 146 1 115 2 259 1 108 2 211 1 212 1 206 1 279 1 237 1 311 1 78 2 165 1 221 1 343 1 114 1 249 1 143 1 
115 4 259 1 58 1 206 1 237 1 311 1 221 1 165 1 343 2 249 1 143 1 146 2 167 1 108 2 211 2 212 1 279 1 91 1 129 2 78 2 358 1 114 2 
146 1 115 2 58 1 167 1 211 1 212 1 237 1 311 1 91 1 340 1 129 2 19 1 78 2 165 1 221 1 343 1 114 1 249 1 
178 1 146 1 115 2 259 1 108 2 211 1 212 1 206 1 237 1 311 1 19 1 78 2 165 1 221 1 343 1 114 1 249 1 143 1 
115 4 259 1 58 1 206 1 237 1 311 1 221 1 165 1 343 2 249 1 143 1 146 2 167 1 108 2 211 2 212 1 91 1 129 2 19 1 78 2 358 1 114 2 
146 2 115 4 259 1 58 1 167 1 108 2 211 2 206 1 212 1 237 1 311 1 91 1 129 2 78 2 165 1 221 1 343 2 358 1 114 2 249 1 143 1 
177 1 0 1 258 1 115 2 237 1 311 1 242 1 165 1 221 1 12 1 244 1 224 1 246 1 249 1 14 1 194 1 108 1 46 1 352 1 212 1 129 1 232 1 78 2 287 1 214 1 234 1 25 1 174 1 
290 1 291 1 0 1 258 1 115 2 94 1 237 1 311 1 242 1 165 1 221 1 12 1 244 1 224 1 246 1 249 1 194 1 108 1 352 1 212 1 129 1 232 1 78 2 287 1 214 1 234 1 25 1 174 1 
115 4 259 1 58 1 206 1 237 1 311 1 221 1 165 1 343 2 249 1 143 1 146 2 167 1 108 2 71 1 211 2 212 1 91 1 129 2 78 2 358 1 114 2 
177 1 258 1 115 4 259 1 58 1 206 1 237 1 311 1 242 1 165 1 221 1 343 2 244 1 12 1 224 1 246 1 249 1 14 1 143 1 348 1 146 2 167 1 108 2 194 1 211 2 46 1 352 1 212 1 91 1 129 2 78 2 214 1 51 1 234 1 25 1 358 1 114 2 
135 1 258 1 115 3 259 1 58 1 137 1 206 1 237 1 311 1 37 1 221 1 165 1 343 1 313 1 249 1 146 1 167 1 108 1 71 1 211 1 212 1 91 1 171 1 353 1 129 2 78 2 25 1 358 1 114 1 
327 1 115 19 259 3 58 3 205 1 206 3 311 2 185 1 339 1 265 1 208 1 270 2 220 2 221 2 165 2 106 1 39 1 249 2 143 3 317 1 167 3 148 1 108 10 91 3 129 9 78 4 155 1 358 3 132 2 114 6 
327 2 134 1 115 26 259 2 58 2 335 1 206 2 262 1 311 3 339 1 265 1 208 2 102 2 270 1 220 2 221 3 165 3 84 1 106 2 39 1 249 3 143 2 347 1 167 3 108 12 148 1 91 3 129 14 78 6 155 2 50 1 358 3 114 4 132 4 
134 1 327 3 329 1 115 41 259 5 335 1 58 4 205 1 206 4 262 1 7 1 311 3 185 1 339 1 265 1 208 1 102 1 270 1 122 1 220 4 38 1 221 3 165 3 84 1 106 2 39 1 65 1 249 3 143 4 347 1 299 1 167 5 148 1 108 22 91 4 129 19 78 6 155 3 50 1 358 4 132 4 114 8 
134 1 327 3 329 1 115 38 259 4 335 1 58 3 205 1 206 3 262 1 7 1 311 4 185 1 339 1 265 1 208 1 102 2 270 1 122 1 220 4 38 1 221 4 165 4 84 1 106 2 39 1 65 1 249 4 143 4 347 1 299 1 167 5 148 1 108 19 91 4 129 19 78 8 155 3 50 1 358 4 132 4 114 7 
134 1 327 2 329 1 115 52 259 8 335 1 58 7 336 2 205 2 206 7 262 1 7 1 311 2 339 1 265 1 208 1 102 1 270 1 122 1 220 4 221 2 165 2 84 1 106 1 39 1 65 1 249 2 143 7 347 1 299 1 167 8 148 1 108 26 91 7 129 26 78 4 155 4 50 1 358 7 132 4 114 14 
80 1 294 1 316 1 32 1 44 1 222 1 26 1 190 1 162 1 66 1 
302 1 264 1 
80 1 294 1 56 1 32 1 44 1 222 1 233 1 188 1 162 1 
314 1 80 1 316 1 32 1 33 1 44 1 162 1 266 1 294 1 222 1 297 1 305 1 243 2 26 1 215 1 199 1 225 1 66 1 
314 1 80 1 316 1 32 1 33 1 44 1 162 1 266 1 294 1 222 1 297 1 305 1 243 2 26 1 215 1 199 1 225 1 66 1 
314 1 80 1 316 1 32 1 33 1 44 1 162 1 266 1 294 1 222 1 297 1 305 1 243 2 26 1 215 1 199 1 225 1 66 1 
69 1 271 1 105 1 
69 1 271 1 105 1 
203 1 309 1 
203 1 309 1 105 1 
120 1 90 1 
80 1 258 2 32 1 33 1 137 2 162 1 264 1 37 2 120 1 294 1 297 1 222 1 243 1 344 1 123 1 124 1 314 1 90 1 44 1 171 2 302 1 131 1 173 1 25 2 174 1 199 1 326 1 
69 1 271 1 
203 1 309 1 105 1 
30 1 0 1 258 2 115 2 57 1 237 1 311 1 36 2 242 2 165 1 221 1 12 1 224 1 246 1 249 1 318 1 108 1 71 1 301 1 352 1 212 1 171 2 129 1 78 2 214 2 287 1 25 2 234 2 156 1 306 1 54 1 
348 1 227 1 3 1 35 1 169 2 239 1 161 1 151 1 355 1 83 1 285 1 242 2 214 2 304 1 234 2 113 1 13 1 224 1 246 1 
227 1 3 1 35 1 169 2 151 1 75 1 355 1 83 1 285 1 242 1 214 1 304 1 234 1 113 1 13 1 246 1 224 1 
3 1 70 1 352 1 239 1 82 1 232 1 10 1 48 1 242 1 214 1 234 1 12 1 224 1 246 1 
227 1 3 1 35 1 169 2 239 1 161 1 151 1 355 1 83 1 285 1 242 1 214 1 304 1 234 1 113 1 13 1 224 1 246 1 
330 1 
230 1 144 1 77 1 49 1 255 1 305 1 256 1 
314 1 202 1 33 1 149 1 117 1 118 1 207 1 139 1 110 1 101 1 253 1 130 1 77 1 49 1 305 2 256 1 53 1 
126 1 202 1 96 1 194 1 352 2 261 1 117 1 139 1 98 1 101 1 232 1 242 1 214 1 234 1 12 1 224 2 246 1 
327 1 134 1 202 2 259 2 33 1 335 1 206 2 117 2 8 5 207 1 139 2 101 2 220 1 273 5 84 1 347 1 314 1 42 2 167 2 300 1 228 1 149 6 91 2 110 3 153 1 77 8 356 1 155 1 49 5 24 1 50 1 305 5 358 2 256 2 53 1 
135 1 202 1 258 1 31 1 259 1 33 1 137 1 337 1 60 1 117 1 7 1 139 1 62 1 37 1 101 1 122 1 65 1 15 1 314 1 42 2 210 1 167 2 171 1 153 1 77 2 303 1 49 2 25 1 
202 1 117 1 139 1 101 1 230 1 77 1 255 1 49 1 305 1 256 1 
42 2 259 2 167 2 4 1 206 2 149 10 91 2 8 5 110 5 153 1 77 5 49 5 273 5 305 5 358 2 
314 1 33 1 305 1 256 1 207 1 53 1 
201 1 202 2 95 1 33 3 59 1 117 2 139 2 207 2 101 1 219 1 242 4 274 1 12 1 224 1 246 1 142 1 314 3 70 1 352 1 228 2 150 2 232 2 77 2 48 1 214 4 49 2 234 4 24 2 53 4 
135 2 177 1 0 1 258 3 115 1 137 2 5 1 237 1 311 1 37 2 242 1 221 1 165 1 244 1 12 1 249 1 246 1 224 1 14 1 15 1 108 1 194 1 46 1 352 1 212 1 171 2 232 1 78 2 214 1 234 1 25 3 174 1 
202 1 228 1 149 4 117 1 8 2 139 1 110 2 101 1 9 1 77 1 273 2 49 2 24 1 305 4 256 2 
80 1 294 1 182 1 
120 1 80 1 292 1 294 1 26 1 
80 1 294 1 182 1 
80 1 294 1 182 1 
213 1 80 1 294 1 
213 1 80 1 294 1 
213 1 80 1 294 1 
80 1 294 1 
44 1 222 1 
329 1 299 1 115 7 259 1 167 1 58 1 108 4 7 1 311 2 129 3 102 1 122 1 78 4 165 2 221 2 114 2 249 2 65 1 143 1 
129 2 329 1 299 1 144 1 122 1 115 5 259 1 167 1 108 3 7 1 114 1 65 1 143 1 
115 4 259 1 167 1 58 1 108 2 206 1 311 1 91 1 129 2 78 2 165 1 221 1 358 1 114 2 277 1 249 1 143 1 
327 1 115 7 259 1 167 1 58 1 108 4 205 1 206 1 91 1 129 3 220 2 155 1 358 1 114 2 143 1 
329 1 115 22 259 3 58 4 336 1 205 1 206 2 7 1 311 2 102 2 267 1 122 2 220 2 165 2 221 2 65 2 249 2 143 4 299 1 167 3 108 12 91 2 281 1 129 10 78 4 155 2 358 2 114 8 
220 1 115 1 108 1 
129 1 115 1 155 1 
115 6 259 1 167 1 58 1 4 1 108 3 206 1 311 1 91 1 129 3 78 2 221 1 165 1 358 1 249 1 277 1 114 3 143 2 
327 1 134 1 115 12 259 2 58 1 335 1 206 2 311 1 220 1 221 1 165 1 84 1 39 1 249 1 143 1 347 1 167 2 108 6 91 2 129 6 78 2 155 1 50 1 358 2 114 2 
115 6 259 1 167 1 58 1 108 3 7 1 129 3 122 1 65 1 114 2 143 1 
329 1 299 1 115 3 58 1 108 2 311 1 281 1 129 1 102 1 122 1 78 2 165 1 221 1 114 2 65 1 249 1 143 1 
115 10 31 1 259 2 58 2 167 2 108 5 311 1 7 1 129 5 122 2 78 2 221 1 165 1 39 1 249 1 65 2 114 5 143 3 
115 2 167 1 58 1 311 1 91 1 129 2 78 2 165 1 221 1 39 1 249 1 114 1 
115 4 259 1 167 1 58 1 108 2 206 1 311 1 91 1 129 2 78 2 165 1 221 1 358 1 39 1 114 2 249 1 143 1 
115 3 58 1 108 2 311 3 281 1 185 1 129 1 102 1 122 1 78 6 165 3 221 3 39 1 249 3 65 1 114 2 143 1 
327 1 329 1 115 33 259 5 58 5 205 1 206 3 7 2 311 5 185 1 102 2 122 3 220 4 342 1 221 5 165 5 39 1 65 3 277 1 249 5 298 1 143 6 299 1 145 1 167 5 108 18 91 3 281 1 129 15 78 10 155 3 358 3 114 11 
327 1 329 1 299 1 115 7 259 1 167 1 108 4 7 1 311 1 129 3 122 1 220 1 78 2 155 1 165 1 221 1 84 1 39 1 114 1 65 1 249 1 143 1 
327 1 329 1 115 10 259 1 58 1 205 1 7 1 311 2 122 1 220 2 221 2 165 2 84 1 39 1 65 1 249 2 277 1 143 1 299 1 167 2 108 5 91 1 129 5 78 4 155 1 358 1 114 2 
327 1 134 1 329 1 115 18 259 3 58 1 335 1 206 2 7 1 311 3 102 1 122 1 220 1 221 3 165 3 84 1 39 1 65 1 277 1 249 3 143 2 347 1 299 1 167 3 108 10 91 2 129 8 78 6 155 1 50 1 358 2 114 3 
327 1 134 1 329 1 115 16 259 2 58 2 335 1 206 1 7 1 311 3 102 1 122 1 220 1 221 3 165 3 84 1 39 1 65 1 277 1 249 3 143 2 347 1 299 1 167 3 108 7 91 2 129 9 78 6 155 1 50 1 358 2 114 4 
327 1 329 1 299 1 115 7 259 1 167 1 108 4 7 1 311 1 129 3 122 1 220 1 78 2 155 1 165 1 221 1 84 1 39 1 114 1 65 1 249 1 143 1 
327 1 134 1 115 12 259 2 58 1 335 1 206 2 311 1 220 1 221 1 165 1 84 1 39 1 249 1 143 1 347 1 167 2 108 6 91 2 129 6 78 2 155 1 50 1 358 2 114 2 
327 1 134 1 329 1 115 17 259 2 58 2 335 1 206 1 7 1 311 4 102 2 122 1 220 1 221 4 165 4 84 1 39 1 65 1 277 1 249 4 143 2 347 1 299 1 167 3 108 8 91 2 129 9 78 8 155 1 50 1 358 2 114 4 
327 1 134 1 115 16 259 2 58 3 335 1 206 2 311 4 185 1 102 2 220 1 221 4 165 4 84 1 39 1 249 4 143 3 347 1 167 3 108 7 91 3 129 9 78 8 155 1 50 1 358 3 114 6 
329 1 299 1 115 10 31 1 259 2 58 4 167 2 108 5 7 2 129 5 9 1 122 4 65 4 114 9 143 5 
327 1 134 1 329 1 115 17 259 2 58 1 335 1 206 1 7 1 311 4 185 1 102 2 122 1 220 1 221 4 165 4 84 1 39 1 65 1 249 4 143 2 347 1 299 1 167 3 108 8 91 2 129 9 78 8 155 1 50 1 358 2 114 3 
226 1 17 1 258 1 25 1 52 1 174 1 171 1 
226 1 17 1 258 1 171 1 217 1 100 1 25 1 323 1 52 1 174 1 141 1 346 1 
144 1 232 1 48 1 214 1 242 1 70 1 234 1 352 1 12 1 224 1 246 1 
177 1 258 2 137 1 194 1 45 1 352 1 171 1 37 1 232 1 242 1 214 1 25 2 234 1 174 1 12 1 244 1 224 1 246 1 
177 1 136 1 258 2 137 1 37 2 242 1 223 1 244 1 12 2 246 1 224 1 210 1 45 1 194 2 352 3 72 1 171 2 150 1 214 1 23 1 234 1 25 2 174 1 
291 1 136 1 258 2 137 1 37 2 242 2 223 1 244 1 12 2 246 1 224 1 210 1 45 1 194 2 352 3 72 1 171 2 150 1 172 1 214 2 23 1 234 2 25 2 174 1 
136 1 33 2 98 1 242 3 12 1 246 1 224 1 247 1 314 2 18 1 194 1 352 4 150 1 196 1 232 1 172 1 214 3 23 1 234 3 305 1 256 1 133 1 53 1 
314 2 136 1 33 2 194 1 352 4 98 1 150 1 196 1 232 1 112 1 172 1 242 3 214 3 23 1 305 1 234 3 12 1 224 1 246 1 256 1 53 1 133 1 
214 1 242 1 1 1 234 1 224 1 246 1 
88 1 348 1 57 1 96 1 97 1 194 1 352 3 36 1 151 1 47 1 232 2 20 1 64 1 22 1 242 6 214 6 234 5 12 2 246 2 224 3 
329 1 177 1 258 2 115 5 259 1 137 1 237 2 7 1 311 2 37 1 122 1 242 1 221 2 165 2 12 1 244 1 65 1 224 1 246 1 249 2 14 1 143 1 16 1 348 1 299 1 167 1 108 3 194 1 45 1 71 1 352 1 212 2 46 1 171 1 129 2 78 4 214 1 25 2 234 1 51 1 174 2 114 1 306 1 
202 2 257 1 33 3 117 2 139 2 207 1 98 1 101 2 242 1 274 1 314 3 352 2 230 1 196 1 152 1 232 1 112 1 77 1 214 1 49 1 255 1 305 1 234 1 198 1 256 1 326 1 53 2 133 1 
126 1 348 1 96 1 214 2 242 2 1 1 194 1 234 2 352 2 12 1 224 2 246 1 133 1 
348 1 70 1 352 1 232 1 48 1 172 1 242 4 214 4 234 4 12 1 224 1 246 1 307 1 
159 1 116 1 194 1 351 1 352 1 150 1 64 1 22 1 242 2 214 2 234 2 12 1 246 1 224 2 
232 1 285 1 214 1 242 1 234 1 13 1 35 1 169 1 224 1 246 1 
348 1 57 1 352 1 151 1 242 2 214 2 234 2 12 1 246 1 224 1 54 1 
348 1 57 1 70 1 97 1 352 3 150 1 47 1 232 1 48 1 242 5 214 5 234 4 12 2 246 2 224 2 307 1 
67 1 348 1 57 1 70 1 97 1 352 3 150 1 232 1 48 1 242 5 214 5 234 4 12 2 246 2 224 2 307 1 
291 1 258 2 137 1 194 1 45 1 352 1 171 1 37 1 232 1 242 1 214 1 25 2 234 1 174 1 12 1 244 1 224 1 246 1 
96 1 194 1 352 1 150 1 20 1 64 1 22 1 242 1 214 1 234 1 12 1 246 1 224 2 
21 1 286 1 2 1 174 1 92 1 
314 2 93 1 158 1 210 1 2 1 33 2 72 1 92 2 196 1 209 1 21 2 286 2 305 1 223 1 174 1 256 1 345 1 85 1 326 1 
30 1 258 1 2 1 301 1 171 1 21 1 286 1 25 1 156 1 
93 1 209 1 2 1 
218 1 111 1 144 1 175 1 
354 1 218 1 87 1 121 1 111 1 27 1 175 1 
87 1 183 1 350 1 
87 3 331 1 61 1 99 1 354 3 218 1 121 1 111 1 154 2 241 1 27 1 175 1 
354 2 218 1 87 2 121 1 111 1 11 1 27 1 175 1 191 1 
354 1 99 1 218 1 87 1 121 1 197 1 113 1 35 1 238 1 169 1 27 1 
354 1 99 1 218 1 87 1 121 1 27 1 175 1 
354 1 99 1 87 1 121 1 111 1 27 1 175 2 
87 2 315 1 99 1 354 2 218 1 74 1 121 2 27 2 278 1 175 1 
87 3 176 1 147 1 238 1 170 1 99 1 354 3 218 2 121 1 111 1 27 1 175 1 191 2 
87 2 193 1 227 1 35 1 169 2 99 1 354 2 218 1 121 1 111 1 113 1 13 1 27 1 175 1 191 1 
87 4 176 1 238 1 99 1 354 4 218 2 121 2 111 1 11 1 245 1 27 2 175 1 191 2 
354 1 99 1 218 1 87 1 121 1 111 1 27 1 175 1 
87 4 176 1 181 1 61 1 238 1 354 4 218 3 121 1 111 2 154 1 241 1 27 1 175 2 191 2 
87 2 86 1 43 1 99 1 354 2 218 1 121 1 111 1 276 1 27 1 175 1 191 1 
87 3 61 2 99 1 354 3 218 1 121 1 111 1 154 2 76 1 241 1 27 1 175 1 
218 2 322 1 109 1 184 2 
125 1 354 1 99 1 87 1 121 1 27 1 
354 2 99 1 218 1 87 2 121 1 111 1 147 1 27 1 175 1 191 1 
189 1 
354 1 99 1 218 1 87 1 121 1 111 1 27 1 175 1 
87 3 147 1 99 1 354 3 218 1 121 1 111 1 154 1 27 1 191 1 175 1 
218 1 176 1 181 1 238 1 
218 1 175 1 

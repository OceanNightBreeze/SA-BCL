#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (87,205) (87,205) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (87,205) (87,205) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (87,205) (87,205) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (87,205) (87,205) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 247 185 (190,351) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 247 185 (0,55) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 1 146 1 62 1 87 1 334 1 157 1 368 2 38 1 5 2 183 1 168 1 171 1 230 1 205 1 20 1 
48 1 146 1 62 1 87 1 334 1 157 1 368 2 38 1 5 2 183 1 168 1 171 1 230 1 205 1 20 1 
48 1 146 1 62 1 87 1 334 1 157 1 368 2 38 1 5 2 183 1 168 1 171 1 230 1 205 1 20 1 
48 1 146 1 62 1 87 1 334 1 157 1 368 2 38 1 5 2 183 1 168 1 171 1 230 1 205 1 20 1 
245 2 155 1 48 1 111 3 234 1 146 1 147 1 62 1 368 4 138 1 269 1 42 3 215 1 5 4 168 1 171 1 230 1 379 2 
155 1 48 1 222 1 111 1 334 1 62 1 157 1 4 1 368 2 269 1 5 2 183 1 168 1 360 1 171 1 230 1 
269 1 371 1 155 1 42 1 48 1 5 3 111 2 183 1 147 1 379 1 230 2 171 2 368 3 
245 2 371 1 155 1 48 1 221 1 279 1 111 5 234 1 146 1 62 1 147 3 368 9 138 1 269 1 41 1 42 7 215 1 5 9 228 1 183 1 168 1 171 2 230 2 379 4 
245 2 371 1 155 1 48 1 221 1 279 1 111 5 234 1 146 1 62 1 147 3 368 9 138 1 269 1 41 1 42 7 215 1 5 9 228 1 183 1 168 1 171 2 230 2 379 4 
172 1 68 1 361 1 
231 1 68 1 151 2 
47 1 126 2 263 2 166 2 256 2 343 2 344 2 129 1 
47 1 73 1 118 1 340 1 303 2 278 1 343 2 345 1 344 2 252 1 50 1 325 2 126 2 125 2 255 1 256 3 129 1 56 1 331 1 185 1 333 1 86 1 263 2 293 1 372 1 64 1 374 1 66 1 67 1 163 1 190 1 166 3 18 2 276 1 169 1 218 2 219 1 
126 1 263 1 26 1 166 1 256 1 343 1 54 1 344 1 129 1 28 1 
263 1 12 1 3 1 101 1 308 1 68 1 256 1 166 1 106 1 227 1 196 1 257 1 28 1 361 1 
263 1 343 1 12 1 344 1 308 2 68 1 126 1 256 1 166 1 106 1 227 1 196 2 257 1 28 1 361 1 
180 1 208 1 196 1 366 1 308 1 
68 1 313 1 208 1 196 2 366 1 137 1 361 1 308 2 
196 1 366 1 308 1 
126 1 263 1 26 1 166 1 256 1 200 1 343 1 208 1 54 1 344 1 196 1 129 1 28 1 308 1 
68 1 
68 1 313 1 328 1 208 1 196 2 366 1 361 1 308 2 
108 1 199 1 352 2 11 2 265 1 78 1 208 2 366 2 14 2 308 5 68 1 376 1 192 1 313 1 196 5 91 1 241 1 361 1 288 1 
172 1 47 1 
47 2 263 2 343 1 344 1 367 1 126 1 256 2 166 2 359 1 
220 1 61 1 299 1 
47 1 340 1 278 1 293 1 134 1 50 1 374 1 67 1 190 1 125 1 255 1 166 1 256 1 18 1 218 1 185 1 
340 1 61 1 263 1 354 1 278 1 293 1 344 1 50 1 374 1 67 1 190 1 126 1 125 1 255 1 256 2 166 2 274 1 18 1 185 1 218 1 
47 1 126 3 263 3 166 3 256 3 343 1 274 1 344 3 
126 1 263 1 166 1 256 1 54 1 344 1 28 1 
126 1 263 1 166 1 256 1 343 1 344 1 359 1 367 1 28 1 
47 1 73 1 118 1 340 1 303 2 278 1 343 2 345 1 344 3 50 1 325 1 308 1 126 3 125 1 255 1 256 4 106 1 227 1 129 1 331 1 153 1 257 1 185 1 28 1 83 1 333 1 86 1 263 3 354 1 293 1 12 1 372 1 374 1 66 1 67 1 190 1 166 4 274 1 196 1 359 1 18 1 276 1 169 1 218 1 
47 1 126 1 263 2 166 2 256 2 344 1 274 1 3 1 9 1 
263 3 354 1 342 1 343 1 12 1 344 3 308 1 68 1 126 3 256 3 166 3 227 1 106 1 196 1 274 2 359 1 153 1 257 1 28 1 
220 1 263 2 61 1 343 1 344 2 126 2 256 2 166 2 274 1 359 1 
47 1 340 1 278 1 293 1 50 1 374 1 67 1 190 1 125 1 255 1 166 1 256 1 18 1 218 1 185 1 
289 1 47 1 340 1 0 1 278 1 293 1 50 1 374 1 125 1 255 1 166 1 256 1 18 1 218 1 185 1 
220 2 118 2 303 2 341 1 345 1 252 2 325 4 7 1 287 1 130 1 349 1 333 1 86 1 61 2 187 1 32 1 210 1 372 1 114 1 66 1 164 1 358 1 299 2 276 1 
126 1 263 1 166 1 256 1 106 1 344 1 28 1 29 1 
332 1 47 1 263 5 354 1 343 1 344 4 3 1 159 1 126 4 256 5 166 5 274 2 359 1 9 1 
126 2 263 2 166 2 256 2 54 1 344 2 28 1 29 1 
84 1 123 1 
84 1 123 1 
238 1 96 1 
238 1 96 1 
238 1 96 1 
84 1 123 1 378 1 
84 1 123 1 378 1 
84 1 281 1 123 1 
238 1 84 2 123 2 96 1 80 1 355 1 
84 1 123 1 378 1 
84 1 123 1 201 1 
84 1 123 1 201 1 
84 1 123 1 201 1 
84 2 244 2 173 2 262 1 77 2 175 2 356 3 209 1 189 1 308 2 268 1 68 1 123 2 80 1 140 1 196 2 19 1 321 2 198 1 
47 1 244 1 77 1 175 1 344 2 308 1 123 1 281 1 126 2 283 1 104 1 256 2 81 1 84 1 263 2 356 1 160 1 166 2 196 1 377 1 19 1 116 1 321 1 21 1 
146 1 168 1 62 1 
168 1 62 1 360 1 
204 1 365 1 146 2 168 3 242 1 360 1 
79 1 365 1 146 1 168 2 242 1 360 1 
146 1 365 1 168 2 242 2 360 1 
243 1 341 1 366 1 308 5 313 1 151 3 130 1 82 1 349 1 231 1 154 2 352 1 11 1 208 4 267 1 187 1 235 1 158 2 14 1 297 2 88 1 376 1 68 2 195 1 273 1 196 5 377 1 91 2 241 3 116 1 361 1 21 1 
46 1 174 1 341 3 2 1 223 5 366 6 369 1 308 9 313 1 151 9 180 5 130 3 349 3 259 1 231 3 154 6 132 1 352 2 11 2 265 1 208 7 267 1 187 3 235 3 158 6 14 2 88 2 68 5 376 1 273 2 196 9 91 6 241 8 361 1 21 4 
243 1 341 1 308 3 151 4 130 1 82 1 349 1 231 2 352 1 154 2 11 1 265 1 208 2 187 1 235 1 14 1 158 2 88 1 297 1 68 3 273 1 196 3 91 2 241 3 361 1 21 1 
243 1 46 1 341 2 369 1 308 4 151 7 130 2 82 1 349 2 259 1 231 3 154 4 352 1 11 1 265 1 208 3 187 2 235 2 158 4 14 1 88 1 297 2 68 4 273 1 196 4 91 4 241 5 361 1 21 2 
58 1 172 1 50 1 
6 1 50 1 
212 1 
255 1 50 1 
58 2 194 1 255 1 278 1 364 1 50 3 
255 1 278 1 50 1 
50 1 102 1 
95 1 118 3 76 1 75 1 187 1 110 2 34 1 210 2 135 1 252 4 325 7 178 1 358 3 89 1 301 1 229 1 130 1 
95 1 118 3 76 1 75 1 187 1 110 2 34 1 210 2 135 1 252 4 325 7 178 1 358 3 89 1 301 1 229 1 130 1 
95 1 118 3 76 1 75 1 187 1 110 2 34 1 210 2 135 1 252 4 325 7 178 1 358 3 89 1 301 1 229 1 130 1 143 1 
95 1 118 15 303 2 76 2 75 2 341 3 345 1 224 1 252 16 325 31 254 1 178 1 312 1 282 1 127 1 229 1 130 4 349 3 333 1 86 1 233 3 110 3 187 4 34 2 235 3 135 2 210 5 13 1 358 10 115 4 271 1 89 5 301 1 276 1 
118 4 303 4 75 1 76 1 345 2 51 1 252 5 325 9 178 1 229 1 130 1 333 2 86 2 187 1 110 2 34 1 210 3 13 1 135 1 296 1 358 4 89 1 301 1 276 2 
72 1 363 1 340 1 48 1 146 1 368 2 327 1 125 1 204 1 5 2 348 1 183 1 230 1 155 1 186 1 10 1 207 1 293 1 111 1 62 1 269 1 42 1 18 1 168 2 360 1 142 1 319 1 218 1 171 1 322 1 
363 1 340 1 74 1 248 1 146 1 368 3 327 1 125 1 204 1 5 3 348 1 183 1 230 1 155 1 186 1 60 1 10 1 293 1 111 1 62 1 269 1 42 2 18 1 168 2 360 1 142 1 319 1 218 1 171 1 322 1 
363 1 340 1 74 1 146 1 368 2 327 1 125 1 204 1 5 2 348 1 183 1 155 1 186 1 60 1 293 1 111 1 62 1 269 1 42 2 18 1 168 2 360 1 142 1 319 1 218 1 
370 1 340 1 264 1 186 2 248 1 293 1 50 1 253 1 368 1 374 1 162 1 125 1 255 1 5 1 183 2 18 1 275 1 57 1 142 2 171 1 230 1 218 1 319 2 
340 1 363 1 10 1 60 1 186 1 48 1 207 1 293 1 146 1 62 1 368 1 327 1 125 1 204 1 5 1 348 1 183 1 168 2 18 1 360 1 171 1 230 1 218 1 319 1 142 1 322 1 
23 1 
339 1 340 1 3 1 306 2 101 1 253 1 50 1 308 5 310 4 313 3 149 2 151 2 255 1 256 1 106 1 257 1 352 1 263 1 11 1 12 1 112 1 14 1 357 1 65 2 68 2 166 1 216 2 18 2 218 2 320 1 361 1 176 1 366 6 122 1 280 2 125 2 329 1 227 1 28 1 370 1 231 2 293 1 33 1 295 1 373 2 88 1 374 2 237 1 37 2 376 1 40 1 196 5 91 2 90 1 241 2 
339 1 3 1 176 1 101 1 366 2 308 3 310 2 313 1 328 1 256 1 329 1 106 1 227 1 257 1 28 1 263 1 12 1 33 1 65 1 40 1 166 1 196 3 
339 1 3 1 176 1 366 1 101 1 308 3 310 3 313 1 149 1 328 1 256 1 329 1 106 1 227 1 257 1 28 1 263 1 12 1 33 1 68 1 40 1 166 1 196 3 361 1 
339 1 3 1 176 1 101 1 306 1 366 2 308 3 310 3 313 1 149 1 328 1 256 1 329 1 106 1 227 1 257 1 28 1 263 1 12 1 33 1 65 1 68 1 40 1 166 1 196 3 361 1 
339 1 3 1 306 4 101 1 308 5 310 6 313 3 149 4 256 1 106 1 152 1 257 1 109 1 352 1 263 1 11 1 12 1 14 1 357 1 65 4 68 5 166 1 71 1 216 2 361 5 117 1 176 1 366 7 122 1 280 2 328 1 329 1 227 1 28 1 231 2 33 1 373 2 37 2 376 1 40 1 43 1 196 5 91 1 241 1 
339 1 176 1 3 1 306 2 366 4 101 1 122 1 308 4 280 2 310 4 313 2 149 2 151 2 329 1 256 1 106 1 227 1 257 1 28 1 231 2 352 1 263 1 11 1 12 1 33 1 112 1 14 1 373 2 357 1 65 2 37 2 68 2 376 1 40 1 166 1 196 4 216 2 91 1 241 1 361 1 
339 1 3 1 176 1 306 2 366 4 101 1 122 1 308 4 280 2 310 4 313 2 149 2 256 1 329 1 106 1 227 1 152 1 257 1 28 1 231 2 352 1 263 1 11 1 12 1 33 1 14 1 373 2 357 1 65 2 37 2 68 1 376 1 40 1 166 1 71 1 43 1 196 4 216 2 91 1 241 1 361 1 
339 1 3 1 176 1 306 2 366 4 101 1 122 1 308 4 280 2 310 4 313 2 149 2 256 1 329 1 106 1 227 1 152 1 257 1 28 1 231 2 352 1 263 1 11 1 12 1 33 1 14 1 373 2 357 1 65 2 37 2 68 1 376 1 40 1 166 1 71 1 43 1 196 4 216 2 91 1 241 1 361 1 
339 1 346 1 3 1 176 1 49 2 306 2 366 4 101 1 122 1 308 4 280 2 310 4 313 2 149 2 151 2 226 2 256 1 329 1 106 1 227 1 152 1 257 1 28 1 350 1 352 1 263 1 11 1 12 1 33 1 14 1 65 2 68 1 376 1 40 1 166 1 196 4 216 2 91 1 241 1 45 1 361 1 
339 1 3 1 176 1 101 1 306 3 366 5 122 1 308 4 280 2 310 5 313 2 149 3 256 1 329 1 106 1 227 1 152 1 257 1 28 1 231 2 109 1 352 1 263 1 11 1 12 1 33 1 14 1 373 2 357 1 65 3 37 2 68 1 376 1 40 1 166 1 71 1 43 1 196 4 216 2 91 1 241 1 361 1 
339 1 3 1 176 1 101 1 306 3 366 5 122 1 308 4 280 2 310 5 313 2 149 3 256 1 329 1 106 1 227 1 152 1 257 1 28 1 231 2 109 1 352 1 263 1 11 1 12 1 33 1 14 1 373 2 357 1 65 3 37 2 68 1 376 1 40 1 166 1 71 1 43 1 196 4 216 2 91 1 241 1 361 1 
339 1 176 1 3 1 49 2 306 2 366 4 101 1 122 1 308 4 280 2 310 4 313 2 149 2 151 2 226 2 329 1 256 1 106 1 227 1 257 1 28 1 352 1 263 1 11 1 12 1 33 1 112 1 14 1 65 2 68 1 376 1 40 1 166 1 196 4 216 2 91 1 241 1 45 1 361 1 
220 1 172 1 47 2 118 3 303 2 76 1 345 1 252 3 325 6 178 1 229 1 130 1 333 1 86 1 61 1 187 1 110 1 135 1 210 2 372 1 66 1 164 1 358 2 299 1 301 1 276 1 
220 4 47 1 73 1 118 6 303 4 341 2 345 2 252 8 325 14 254 1 284 1 56 1 130 1 349 1 333 2 86 2 232 1 61 11 233 3 187 2 235 2 210 1 372 1 113 1 336 1 66 2 358 2 271 1 89 1 115 3 299 11 276 2 94 1 
220 1 47 1 73 1 340 1 118 1 303 2 278 1 22 1 345 1 344 1 100 1 50 1 252 1 325 2 125 1 126 1 255 1 256 2 56 1 185 1 333 1 86 1 232 1 263 1 354 1 293 1 134 1 372 1 374 1 67 1 66 1 190 1 166 2 274 1 18 1 276 1 93 1 218 1 
47 2 302 2 340 2 303 6 341 2 344 1 345 3 50 2 252 10 255 2 256 3 56 1 349 2 60 1 263 1 61 7 354 1 110 1 316 1 210 4 66 3 67 2 358 8 166 3 274 1 18 3 276 3 218 3 220 7 73 1 118 10 76 1 278 2 325 20 178 1 25 2 179 1 125 3 126 1 229 1 331 2 130 3 185 2 333 3 232 1 86 3 133 1 293 2 187 3 235 2 135 1 372 3 374 1 139 2 190 2 299 7 89 4 300 2 301 1 
72 1 73 1 340 2 118 1 303 4 344 1 345 2 177 1 50 3 252 1 253 1 325 2 52 1 126 1 125 8 255 2 256 1 330 1 56 1 370 1 59 1 261 1 333 2 86 2 60 1 263 1 293 2 372 2 374 2 66 2 213 1 298 1 163 2 164 1 166 1 274 1 18 7 276 2 218 8 
220 1 118 2 303 2 341 1 343 1 344 1 345 1 252 1 325 3 126 1 256 1 184 1 130 1 349 1 333 1 86 1 232 1 61 1 263 1 187 1 235 1 210 1 372 1 66 1 358 1 299 1 166 1 359 1 276 1 
220 1 333 1 86 1 61 1 303 2 341 1 187 1 345 1 372 1 252 2 325 2 66 1 358 1 164 1 89 1 299 1 7 1 276 1 
220 1 333 1 86 1 118 2 61 1 303 2 345 1 210 1 372 1 325 2 66 1 114 1 358 1 164 1 299 1 276 1 130 1 349 1 
220 2 118 2 303 2 341 1 345 1 252 2 325 4 130 1 349 1 333 1 86 1 61 2 187 1 235 1 210 1 372 1 66 1 164 1 358 2 299 2 89 1 276 1 
220 1 333 1 86 1 61 1 303 2 341 1 187 1 345 1 372 1 252 2 325 2 213 1 66 1 358 1 89 1 299 1 7 1 276 1 
220 1 333 1 86 1 118 2 61 1 303 2 345 1 210 1 372 1 325 2 213 1 66 1 114 1 358 1 299 1 276 1 130 1 349 1 
220 2 118 2 303 2 341 1 345 1 252 2 325 4 130 1 349 1 333 1 86 1 61 2 187 1 235 1 210 1 372 1 66 1 213 1 358 2 299 2 89 1 276 1 
220 2 118 2 303 2 341 1 345 1 252 2 325 4 130 1 349 1 333 1 86 1 61 2 187 1 235 1 210 1 372 1 66 1 358 2 299 2 89 1 276 1 
47 1 73 1 340 1 118 1 303 2 278 1 345 1 252 1 50 1 325 2 125 1 255 1 256 1 56 1 331 1 185 1 333 1 86 1 293 1 372 1 374 1 67 1 66 1 190 1 166 1 18 1 276 1 218 1 
47 1 73 1 340 1 118 1 303 2 0 1 278 1 345 1 252 1 50 1 325 2 125 1 255 1 256 1 105 1 56 1 185 1 289 1 333 1 86 1 293 1 372 1 374 1 66 1 166 1 18 1 276 1 218 1 
220 2 118 2 303 2 341 1 345 1 252 2 325 4 130 1 349 1 333 1 86 1 232 1 61 2 187 1 235 1 210 1 372 1 66 1 358 2 299 2 89 1 276 1 
220 2 72 1 118 2 340 1 303 2 341 1 278 1 345 1 252 2 50 1 325 4 125 1 255 1 256 1 331 1 130 1 185 1 349 1 333 1 86 1 61 2 293 1 187 1 235 1 210 1 372 1 67 1 66 1 139 1 190 1 358 2 89 1 299 2 166 1 18 1 276 1 218 1 
220 1 118 1 303 2 341 1 343 1 344 1 345 1 24 1 252 2 325 3 126 1 256 1 130 1 349 1 333 1 86 1 232 1 263 1 61 1 187 1 235 1 372 1 66 1 358 1 89 1 166 1 299 1 359 1 276 1 
324 2 118 10 303 4 341 3 250 2 345 2 121 1 51 1 252 9 325 19 254 1 130 3 349 3 131 1 333 2 86 2 291 1 233 1 187 3 235 3 210 3 211 1 375 1 191 1 358 6 115 2 271 1 89 3 217 1 276 2 
118 12 324 4 362 1 303 6 341 3 250 1 345 3 121 2 51 1 252 14 325 26 311 1 130 2 349 2 131 1 290 1 333 3 86 3 291 2 233 2 187 3 235 3 13 2 210 2 211 1 375 1 358 4 89 2 271 2 115 2 69 1 167 1 44 1 276 3 
303 6 341 4 345 3 250 1 252 20 51 1 254 1 311 1 349 4 110 1 210 4 13 1 63 1 211 1 358 8 271 3 115 4 69 1 167 1 276 3 118 21 324 4 362 1 76 1 121 2 325 41 178 1 229 1 130 5 131 1 333 3 290 1 86 3 291 1 233 3 187 5 235 4 135 1 375 1 191 1 89 4 44 1 301 1 
362 1 324 4 118 18 303 8 76 1 341 4 250 1 345 4 121 2 51 1 252 20 325 38 254 1 178 1 311 1 229 1 130 4 349 3 131 1 290 1 333 4 86 4 291 1 233 3 110 1 187 5 235 4 63 1 135 1 13 2 210 4 211 1 375 1 191 1 358 7 115 4 271 3 89 3 69 1 167 1 44 1 301 1 276 4 
362 1 324 4 118 25 303 4 76 1 341 7 250 1 345 2 121 1 51 1 252 27 325 52 254 2 178 1 311 1 229 1 130 8 349 7 131 1 290 1 333 2 86 2 291 1 233 4 110 1 187 8 235 7 135 1 13 1 210 7 211 1 375 1 336 2 358 14 115 4 271 2 89 7 69 1 167 1 44 1 301 1 276 2 
84 1 123 1 244 1 77 1 80 1 175 1 209 1 141 1 189 1 321 1 
281 1 81 1 
85 1 84 1 123 1 244 1 353 1 77 1 70 1 175 1 321 1 
84 1 244 1 173 1 262 1 77 1 175 1 356 2 209 1 189 1 308 1 268 1 68 1 123 1 80 1 196 1 19 1 321 1 198 1 
84 1 244 1 173 1 262 1 77 1 175 1 356 2 209 1 189 1 308 1 268 1 68 1 123 1 80 1 196 1 19 1 321 1 198 1 
84 1 244 1 173 1 262 1 77 1 175 1 356 2 209 1 189 1 308 1 268 1 68 1 123 1 80 1 196 1 19 1 321 1 198 1 
355 1 202 1 378 1 
355 1 202 1 378 1 
201 1 35 1 
201 1 355 1 35 1 
283 1 104 1 
47 1 244 1 173 1 77 1 175 1 344 2 308 1 123 1 281 1 126 2 283 1 104 1 256 2 81 1 84 1 263 2 208 1 356 1 160 1 270 1 166 2 196 1 377 1 116 1 321 1 198 1 21 1 
202 1 378 1 
201 1 355 1 35 1 
73 1 340 1 118 1 303 2 98 1 345 1 177 1 50 1 252 1 325 2 203 1 125 2 255 1 256 2 128 1 56 1 261 1 333 1 86 1 232 1 263 2 293 1 188 1 372 1 66 1 239 1 163 2 166 2 18 2 276 1 218 2 
72 1 260 1 340 1 60 1 1 1 293 1 146 1 62 1 327 1 125 2 204 1 181 1 348 1 168 2 18 2 360 1 218 2 142 1 322 1 
260 1 340 1 60 1 145 1 293 1 146 1 62 1 327 1 125 1 204 1 348 1 168 2 18 1 360 1 218 1 142 1 322 1 
370 1 340 1 206 1 264 1 293 1 50 1 253 1 374 1 125 1 255 1 181 1 18 1 218 1 142 1 
260 1 340 1 60 1 1 1 293 1 146 1 62 1 327 1 125 1 204 1 181 1 348 1 168 2 18 1 360 1 218 1 142 1 322 1 
97 1 
108 1 172 1 68 1 78 1 91 1 241 1 361 1 
231 1 352 1 11 1 366 1 14 1 373 1 357 1 308 1 37 1 68 2 376 1 313 1 151 1 196 1 91 1 241 1 361 1 
340 4 247 2 341 2 251 1 50 10 102 2 308 5 313 3 103 1 255 3 151 12 6 3 349 2 108 1 58 2 352 4 351 2 154 6 11 4 156 2 14 4 158 6 68 8 15 1 165 1 18 3 218 3 170 2 361 2 72 1 278 3 78 1 366 5 125 3 227 2 182 1 130 2 231 6 292 2 293 3 187 2 235 2 136 2 88 2 374 1 237 1 376 4 194 1 240 2 196 5 300 2 91 8 241 9 380 2 
323 1 362 1 341 2 366 1 308 1 347 1 311 1 313 1 151 6 130 2 349 2 231 3 290 1 154 5 352 2 11 2 292 2 233 1 187 2 235 2 158 5 14 2 88 1 237 1 376 2 68 5 115 1 271 1 167 1 196 1 44 1 91 5 241 8 170 1 361 2 
76 1 304 1 200 1 343 1 344 1 308 1 178 1 126 1 26 1 256 1 54 1 129 1 130 1 28 1 352 1 263 1 11 1 292 2 187 2 135 1 14 1 376 1 166 1 71 1 196 1 91 2 241 2 170 1 
108 1 352 1 11 1 78 1 14 1 376 1 68 1 91 1 241 1 361 1 
231 5 154 5 292 2 341 2 187 2 235 2 158 5 68 5 151 10 300 1 91 5 241 5 130 2 170 1 349 2 
68 1 313 1 196 1 366 1 361 1 308 1 
340 1 119 1 366 4 50 1 253 1 308 3 125 4 313 2 103 2 255 1 370 1 352 2 11 2 265 1 293 1 14 2 88 2 374 2 237 2 376 1 15 1 196 3 90 1 18 4 91 2 337 1 241 2 320 1 218 4 
47 1 73 1 118 1 340 1 303 2 278 1 343 2 345 1 344 2 50 1 325 1 125 1 126 2 255 1 256 3 129 1 331 1 185 1 333 1 86 1 263 2 293 1 372 1 374 1 67 1 66 1 190 1 166 3 18 1 276 1 169 1 218 1 
231 2 154 2 352 1 11 1 110 1 158 2 14 1 88 1 237 1 376 1 68 4 151 4 91 2 241 1 361 2 
246 1 77 1 175 1 
246 1 77 1 175 1 
283 1 77 1 175 1 209 1 99 1 
246 1 77 1 175 1 
31 1 77 1 175 1 
31 1 77 1 175 1 
31 1 77 1 175 1 
77 1 175 1 
84 1 123 1 
333 2 118 4 86 2 303 4 76 1 110 1 187 1 345 2 210 2 13 1 135 1 252 4 325 8 178 1 358 3 89 1 301 1 276 2 229 1 130 1 
172 1 118 3 76 1 110 1 187 1 135 1 210 2 252 3 325 6 178 1 358 2 301 1 229 1 130 1 
333 1 118 2 86 1 303 2 341 1 120 1 187 1 345 1 235 1 210 1 252 2 325 4 358 2 89 1 276 1 130 1 349 1 
118 4 233 1 341 1 187 1 235 1 210 1 252 3 325 7 254 1 358 2 271 1 115 2 89 1 130 1 349 1 
118 12 303 4 76 2 341 2 345 2 252 11 325 23 254 1 178 1 314 1 229 1 130 3 349 2 333 2 86 2 233 2 110 1 187 3 235 2 135 2 210 5 13 2 113 1 336 1 358 9 89 4 115 2 301 1 276 2 
118 1 115 1 325 1 
233 1 252 1 325 1 
333 1 86 1 118 3 303 2 341 1 120 1 187 1 345 1 235 1 210 2 252 3 325 6 358 3 89 1 300 1 276 1 130 1 349 1 
118 6 362 1 303 2 341 2 345 1 51 1 252 6 325 12 311 1 130 2 349 2 333 1 290 1 86 1 233 1 187 2 235 2 210 1 358 2 89 1 115 1 271 1 167 1 44 1 276 1 
118 3 76 1 187 1 135 1 210 1 252 3 325 6 178 1 358 2 89 1 130 1 
333 1 118 2 86 1 303 2 76 1 345 1 210 1 135 1 13 1 252 1 325 3 314 1 358 2 89 1 301 1 276 1 229 1 
333 1 86 1 118 5 303 2 304 1 76 2 187 2 345 1 135 2 210 3 51 1 252 5 325 10 178 1 358 5 89 2 276 1 130 2 
333 1 86 1 303 2 341 1 187 1 345 1 51 1 252 2 325 2 358 1 89 1 276 1 
333 1 118 2 86 1 303 2 341 1 187 1 345 1 235 1 210 1 51 1 252 2 325 4 358 2 89 1 276 1 130 1 349 1 
333 3 118 2 86 3 303 6 76 1 345 3 13 1 135 1 210 1 51 1 252 1 325 3 191 1 314 1 358 2 89 1 276 3 
118 18 303 10 76 3 341 3 120 1 345 5 224 1 51 1 252 16 325 34 254 1 178 2 312 1 314 1 282 1 229 1 130 5 349 3 333 5 86 5 233 3 110 1 187 5 235 3 135 3 13 2 210 7 191 1 358 12 115 4 271 1 89 5 301 1 276 5 
118 4 362 1 303 2 76 1 345 1 51 1 252 4 325 8 178 1 229 1 130 1 333 1 86 1 233 1 110 1 187 1 135 1 210 2 358 2 115 1 271 1 301 1 276 1 
118 5 362 1 303 4 76 1 341 1 120 1 345 2 51 1 252 6 325 11 254 1 178 1 229 1 130 1 333 2 86 2 233 1 110 1 187 2 235 1 210 2 135 1 358 3 115 2 271 1 89 1 301 1 276 2 
118 10 362 1 303 6 76 1 341 2 120 1 345 3 51 1 252 9 325 19 178 1 311 1 229 1 130 3 349 2 290 1 333 3 86 3 233 1 110 1 187 3 235 2 135 1 210 3 13 1 358 4 89 1 115 1 271 1 167 1 44 1 301 1 276 3 
118 7 362 1 303 6 76 1 341 2 120 1 345 3 51 1 252 10 325 17 178 1 311 1 229 1 130 2 349 1 333 3 290 1 86 3 233 1 110 1 187 3 235 2 135 1 13 1 210 3 358 5 89 2 115 1 271 1 167 1 44 1 301 1 276 3 
118 4 362 1 303 2 76 1 345 1 51 1 252 4 325 8 178 1 229 1 130 1 333 1 86 1 233 1 110 1 187 1 135 1 210 2 358 2 115 1 271 1 301 1 276 1 
118 6 362 1 303 2 341 2 345 1 51 1 252 6 325 12 311 1 130 2 349 2 333 1 290 1 86 1 233 1 187 2 235 2 210 1 358 2 89 1 115 1 271 1 167 1 44 1 276 1 
118 8 362 1 303 8 76 1 341 2 120 1 345 4 51 1 252 10 325 18 178 1 311 1 229 1 130 2 349 1 290 1 333 4 86 4 233 1 110 1 187 3 235 2 135 1 210 3 13 2 358 5 89 2 115 1 271 1 167 1 44 1 301 1 276 4 
118 7 362 1 303 8 341 3 345 4 51 1 252 9 325 16 311 1 130 2 349 2 290 1 333 4 86 4 233 1 187 3 235 3 210 3 13 2 191 1 358 6 89 3 115 1 271 1 167 1 44 1 276 4 
118 4 76 3 187 1 135 3 210 3 252 3 325 7 178 1 358 6 89 3 301 2 229 1 130 1 
118 8 362 1 303 8 76 1 341 2 345 4 51 1 252 10 325 18 178 1 311 1 229 1 130 2 349 1 290 1 333 4 86 4 233 1 110 1 187 3 235 2 135 1 210 3 13 2 191 1 358 4 89 1 115 1 271 1 167 1 44 1 301 1 276 4 
47 1 263 1 166 1 256 1 3 1 9 1 335 1 
47 1 263 1 3 1 335 1 193 1 150 1 256 1 166 1 285 1 92 1 338 1 9 1 
370 1 172 1 340 1 125 1 255 1 293 1 18 1 218 1 50 1 253 1 374 1 
47 1 340 1 263 1 278 1 293 1 344 1 50 1 374 1 190 1 126 1 125 1 255 1 256 2 166 2 274 1 18 1 185 1 218 1 
340 1 263 1 247 1 278 2 293 1 344 1 102 1 50 3 190 1 126 1 125 1 255 2 103 1 256 1 166 1 274 1 18 1 185 1 218 1 
340 1 263 1 247 1 0 1 278 2 293 1 344 1 102 1 50 3 126 1 125 1 255 2 103 1 256 1 166 1 274 1 18 1 185 1 218 1 
340 1 247 1 278 1 366 1 50 4 102 1 309 1 308 2 125 3 103 1 255 1 227 1 6 1 55 1 58 1 293 1 374 1 68 1 39 1 196 2 18 3 218 3 361 1 
58 1 351 1 340 1 247 1 278 1 293 1 366 1 102 1 50 4 309 1 374 1 308 2 68 1 125 3 255 1 103 1 227 1 6 1 196 2 18 3 218 3 361 1 
59 1 340 1 125 1 293 1 18 1 218 1 
72 1 59 1 261 1 30 1 340 3 60 1 266 1 278 1 293 2 50 3 374 2 52 1 298 1 163 1 124 1 125 7 194 1 255 2 330 1 18 6 218 7 
302 1 47 2 340 1 303 4 344 1 345 2 50 1 252 3 255 1 256 2 263 1 61 1 110 1 210 2 67 1 66 2 358 2 166 2 274 1 18 1 276 2 218 1 220 1 72 1 118 3 76 1 278 1 325 6 178 1 125 1 126 1 331 1 229 1 130 1 185 1 333 2 232 1 86 2 293 1 187 1 135 1 372 2 139 1 190 1 239 1 299 1 301 1 
78 1 366 2 50 2 308 3 125 1 313 1 227 1 6 1 108 1 58 1 352 2 351 1 11 2 208 1 136 1 14 2 374 1 68 1 376 2 15 1 196 3 240 1 91 1 18 1 241 1 218 1 361 1 380 1 
72 1 58 1 59 1 340 2 278 1 293 1 50 2 125 2 194 1 255 1 182 1 18 2 218 2 
72 1 370 1 340 1 293 1 253 1 50 1 309 1 374 1 125 4 255 1 18 4 8 1 218 4 
30 1 340 2 278 1 293 1 148 1 50 1 124 1 179 1 125 2 103 1 255 1 18 2 107 1 218 2 
327 1 340 1 125 1 293 1 168 1 18 1 62 1 360 1 218 1 374 1 
72 1 203 1 261 1 340 1 125 2 60 1 255 1 293 1 18 2 218 2 50 1 
370 1 72 1 261 1 340 2 293 2 253 1 50 3 374 1 298 1 125 5 103 1 255 2 330 1 18 4 8 1 218 5 
370 1 72 1 261 1 340 2 293 2 253 1 50 3 374 1 125 5 103 1 255 2 330 1 18 4 8 1 218 5 197 1 
47 1 340 1 263 1 0 1 278 1 293 1 344 1 50 1 374 1 126 1 125 1 255 1 256 2 166 2 274 1 18 1 185 1 218 1 
30 1 340 2 266 1 278 1 293 1 50 1 124 1 125 1 194 1 103 1 255 1 18 1 218 1 
263 1 98 1 305 1 188 1 326 1 256 1 166 1 315 1 128 1 
315 1 294 1 307 1 
326 1 47 1 315 1 305 1 36 1 
47 1 12 1 208 1 305 2 294 1 307 1 36 2 308 2 326 2 68 1 227 1 106 1 315 1 27 1 196 2 153 1 257 1 28 1 361 1 
172 1 269 1 155 1 111 1 
269 1 155 1 5 1 111 1 230 1 171 1 368 1 
186 1 183 1 368 1 
155 1 48 1 111 1 157 2 368 3 161 1 269 1 16 1 5 3 171 1 230 1 258 1 
269 1 245 1 155 1 42 1 5 2 111 1 230 1 171 1 368 2 
48 1 111 1 146 1 62 1 368 1 138 1 5 1 168 1 171 1 230 1 379 1 
269 1 48 1 5 1 111 1 230 1 171 1 368 1 
269 2 155 1 48 1 5 1 230 1 171 1 368 1 
144 1 48 1 249 1 111 1 368 2 269 1 17 1 5 2 171 2 230 2 
269 1 155 1 42 2 48 1 5 3 111 2 228 1 279 1 147 1 379 1 230 1 171 1 368 3 
155 1 48 1 111 1 146 1 62 1 368 2 269 1 42 1 272 1 204 1 5 2 168 2 360 1 171 1 230 1 
245 1 155 1 48 1 111 2 234 1 147 1 368 4 269 1 42 2 5 4 171 2 230 2 379 1 
269 1 155 1 48 1 5 1 111 1 230 1 171 1 368 1 
155 2 111 3 147 1 157 1 368 4 161 1 269 2 214 1 42 2 5 4 171 1 230 1 379 1 258 1 
53 1 269 1 155 1 42 1 221 1 48 1 5 2 111 1 286 1 230 1 171 1 368 2 
161 2 269 1 155 1 48 1 225 1 5 3 111 1 157 2 230 1 171 1 368 3 258 1 
111 1 277 1 236 1 
48 1 5 1 230 1 171 1 368 1 318 1 
269 1 155 1 42 1 48 1 5 2 111 1 228 1 230 1 171 1 368 2 
317 1 
269 1 155 1 48 1 5 1 111 1 230 1 171 1 368 1 
155 1 48 1 111 1 157 1 368 3 269 1 42 1 5 3 228 1 171 1 230 1 
214 1 111 1 147 1 379 1 
269 1 111 1 

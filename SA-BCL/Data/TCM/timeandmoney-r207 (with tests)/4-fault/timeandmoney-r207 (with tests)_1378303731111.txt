#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 291 312 345 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (161,305) 365 174 24 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 291 92 225 171 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 291 331 225 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 291 92 225 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 291 92 225 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 291 92 225 171 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 291 312 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 291 331 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
249 1 288 2 46 9 47 2 337 2 202 3 315 1 316 2 268 1 269 5 209 1 322 1 183 2 259 1 228 1 230 1 37 1 233 2 187 4 261 9 275 2 85 1 59 1 191 1 146 1 88 1 265 1 246 6 
249 1 288 2 46 9 47 2 337 2 202 3 315 1 316 2 268 1 269 5 209 1 322 1 183 2 259 1 228 1 230 1 37 1 233 2 187 4 261 9 275 2 85 1 59 1 191 1 146 1 88 1 265 1 246 6 
249 1 288 2 46 10 47 2 337 2 202 4 315 1 316 2 268 1 269 6 209 1 322 1 183 2 259 1 228 1 230 1 37 1 233 2 187 5 261 10 275 2 85 1 59 1 191 1 146 1 88 1 265 1 246 7 
249 1 288 2 46 7 47 2 337 2 202 2 315 1 316 1 268 1 269 4 209 1 322 1 183 2 228 1 230 1 37 1 233 2 187 3 261 7 275 2 85 1 59 1 191 1 146 1 88 1 265 1 246 4 
183 1 259 1 249 1 288 1 46 4 233 1 187 2 202 1 337 1 261 4 275 1 316 2 268 1 269 3 88 1 209 1 246 3 265 1 
183 1 46 2 47 1 37 1 233 1 337 1 261 2 275 1 346 1 268 1 144 1 269 1 146 1 88 1 209 1 132 1 
183 2 46 3 47 1 187 1 202 1 261 3 275 2 268 1 85 1 269 2 88 1 209 1 246 1 
249 1 288 1 46 9 47 1 202 3 337 1 316 2 268 1 269 5 209 1 183 2 259 1 230 1 186 1 187 4 233 1 261 9 275 2 85 1 59 1 87 1 88 1 246 7 265 1 
249 1 288 1 46 9 47 1 202 3 337 1 316 2 268 1 269 5 209 1 183 2 259 1 230 1 186 1 187 4 233 1 261 9 275 2 85 1 59 1 87 1 88 1 246 7 265 1 
303 1 214 1 360 1 
299 1 45 2 214 1 
39 2 248 2 354 2 125 1 165 2 245 2 113 1 217 2 
117 1 148 1 248 2 354 2 311 1 149 1 333 1 44 1 355 1 123 1 125 1 198 1 23 1 217 3 295 2 270 1 226 1 157 1 135 2 101 1 163 2 165 2 273 1 13 1 234 1 39 2 142 1 141 1 58 1 108 1 213 1 329 1 173 1 111 2 245 3 113 1 281 2 
39 1 248 1 354 1 278 1 165 1 245 1 113 1 19 1 217 1 153 1 
368 1 48 1 313 1 217 1 338 1 153 1 39 1 328 1 179 1 303 1 7 1 114 1 245 1 214 1 
354 1 248 1 165 1 368 1 48 2 313 2 217 1 338 1 153 1 39 1 328 1 179 1 303 1 245 1 214 1 
262 1 1 1 48 1 313 1 283 1 
262 1 81 1 124 1 303 1 48 2 313 2 214 1 283 1 
262 1 48 1 313 1 
354 1 248 1 165 1 48 1 313 1 217 1 153 1 39 1 219 1 278 1 113 1 245 1 19 1 283 1 
214 1 
262 1 210 1 81 1 303 1 48 2 313 2 214 1 283 1 
216 1 138 1 81 1 103 2 48 5 200 2 126 1 313 5 358 1 371 1 235 1 50 1 262 2 155 2 303 1 40 1 214 1 133 1 283 2 
125 1 360 1 
354 1 248 1 260 1 165 1 125 2 217 2 39 2 245 2 96 1 
305 1 54 1 365 1 
181 1 149 1 44 1 101 1 163 1 125 1 198 1 13 1 217 1 141 1 142 1 295 1 213 1 111 1 245 1 226 1 
305 1 147 1 354 1 248 1 149 1 101 1 44 1 163 1 198 1 105 1 13 1 217 2 39 1 142 1 141 1 295 1 213 1 111 1 245 2 226 1 
147 1 39 3 248 3 354 3 165 1 125 1 245 3 217 3 
39 1 248 1 354 1 278 1 245 1 217 1 153 1 
39 1 248 1 354 1 260 1 165 1 245 1 217 1 96 1 153 1 
147 1 248 3 354 3 311 1 149 1 44 1 333 1 125 1 198 1 48 1 70 1 23 1 313 1 217 4 338 1 153 1 2 1 295 1 179 1 96 1 270 1 226 1 157 1 135 1 101 1 163 1 165 2 368 1 273 1 105 1 13 1 234 1 39 3 328 1 142 1 141 1 58 1 213 1 329 1 173 1 111 1 245 4 113 1 281 2 
147 1 39 2 248 1 354 1 75 1 125 1 7 1 245 2 217 2 
147 2 354 3 248 3 165 1 368 1 48 1 105 1 151 1 70 1 313 1 217 3 338 1 153 1 39 3 328 1 179 1 245 3 96 1 214 1 
147 1 305 1 354 2 248 2 54 1 165 1 217 2 39 2 245 2 96 1 
149 1 44 1 101 1 163 1 125 1 198 1 13 1 217 1 141 1 142 1 295 1 213 1 111 1 245 1 226 1 
149 1 44 1 101 1 163 1 125 1 13 1 217 1 142 1 295 1 213 1 111 1 245 1 352 1 156 1 226 1 
305 2 311 1 355 2 356 1 23 1 205 1 365 2 157 2 135 4 258 1 102 1 161 1 54 2 55 1 82 1 273 1 234 1 84 1 189 1 58 1 329 1 353 1 281 2 63 1 
39 1 257 1 248 1 354 1 368 1 245 1 217 1 153 1 
147 2 354 4 248 4 0 1 165 1 125 1 105 1 217 5 73 1 39 5 75 1 7 1 245 5 96 1 
257 1 39 2 248 2 354 2 278 1 245 2 217 2 153 1 
317 1 314 1 
317 1 314 1 
192 1 274 1 
192 1 274 1 
192 1 274 1 
317 1 28 1 314 1 
317 1 277 1 314 1 
74 1 317 2 192 1 110 1 274 1 314 2 
317 1 28 1 314 1 
317 1 28 1 314 1 
317 1 289 1 314 1 
317 1 289 1 314 1 
317 1 289 1 314 1 
160 2 122 2 104 1 48 2 176 2 167 2 313 2 325 3 314 2 74 1 317 2 339 1 319 1 170 1 279 1 31 1 264 1 77 2 214 1 
248 2 354 2 196 1 122 1 125 1 334 1 48 1 313 1 217 2 314 1 317 1 267 1 51 1 77 1 160 1 325 1 167 1 140 1 39 2 170 1 277 1 242 1 245 2 282 1 
288 1 233 1 337 1 
233 1 337 1 132 1 
361 1 288 2 22 1 337 3 132 1 215 1 
361 1 288 1 8 1 337 2 132 1 215 1 
361 2 288 1 337 2 132 1 215 1 
307 2 43 1 196 1 45 3 48 5 200 1 313 5 358 3 72 1 129 1 3 1 362 2 205 1 53 1 155 1 133 1 138 2 55 1 103 1 81 1 14 1 369 1 140 1 299 1 189 1 262 1 240 2 303 1 353 1 214 2 282 1 283 4 
307 6 196 4 1 5 45 9 48 9 200 2 313 9 358 8 152 1 129 3 3 1 362 6 205 3 53 2 93 1 155 2 296 1 222 1 133 1 162 1 138 6 55 3 81 1 103 2 14 2 235 1 299 3 189 3 107 1 262 6 303 1 353 3 214 5 284 5 283 7 
307 2 43 1 196 1 45 4 48 3 200 1 313 3 358 3 129 1 53 1 205 1 362 2 155 1 138 2 55 1 103 1 14 1 369 1 235 1 299 2 189 1 240 1 303 1 353 1 214 3 283 2 
307 4 43 1 196 2 45 7 48 4 200 1 313 4 358 5 152 1 129 2 362 4 53 1 205 2 155 1 222 1 138 4 55 2 103 1 14 1 369 1 235 1 299 3 189 2 107 1 240 2 303 1 353 2 214 4 283 3 
366 1 360 1 226 1 
347 1 226 1 
324 1 
101 1 226 1 
142 1 159 1 101 1 9 1 366 2 226 3 
142 1 101 1 226 1 
139 1 226 1 
120 1 355 5 335 1 318 1 205 2 131 1 221 1 157 4 271 2 135 9 99 1 158 2 79 1 258 4 102 3 237 1 189 2 372 1 
120 3 355 5 335 1 318 1 205 2 131 1 221 1 157 4 271 2 135 9 99 1 158 2 79 1 258 6 102 3 237 1 189 2 372 1 
120 1 355 5 335 1 336 1 318 1 205 2 131 1 221 1 157 4 271 2 135 9 99 1 158 2 79 1 258 4 102 3 237 1 189 2 372 1 
157 1 345 1 237 1 135 3 99 1 27 1 79 2 355 2 302 1 312 1 291 1 
120 2 355 6 335 1 23 2 252 1 318 1 205 2 131 1 157 5 271 2 135 11 99 1 158 2 79 1 258 6 102 4 273 2 234 2 237 1 189 2 372 1 241 1 329 2 115 1 281 4 
195 1 287 1 288 1 46 2 22 1 47 1 337 2 320 1 268 1 130 1 295 1 220 1 269 1 224 1 209 1 132 1 183 1 163 1 232 1 13 1 233 1 261 2 275 1 190 1 212 1 213 1 111 1 20 1 88 1 246 1 
195 1 287 1 288 1 22 1 46 3 197 1 47 1 337 2 320 1 268 1 130 1 295 1 269 1 364 1 224 1 132 1 183 1 163 1 56 1 13 1 233 1 261 3 275 1 190 1 212 1 213 1 111 1 20 1 88 1 246 2 
195 1 287 1 288 1 46 2 22 1 47 1 197 1 337 2 320 1 268 1 295 1 269 1 364 1 224 1 132 1 163 1 13 1 233 1 261 2 190 1 213 1 111 1 20 1 88 1 246 2 
182 1 195 2 183 1 149 1 101 1 163 1 290 1 46 1 47 2 13 1 56 1 357 1 261 1 38 1 275 1 204 1 320 2 190 2 295 1 213 1 243 1 111 1 226 1 
195 1 183 1 287 1 288 1 163 1 22 1 46 1 47 1 197 1 13 1 233 1 337 2 261 1 275 1 190 1 320 1 130 1 212 1 295 1 213 1 220 1 111 1 224 1 20 1 132 1 209 1 
341 1 
149 2 45 2 250 2 290 1 48 5 200 1 201 2 338 1 49 1 153 1 154 2 340 4 294 2 155 1 295 2 7 1 101 1 163 2 11 2 103 1 12 1 13 1 14 1 299 2 300 2 262 6 213 1 350 1 303 1 111 2 112 1 114 1 214 2 65 1 66 1 68 2 313 5 357 1 358 2 217 1 179 1 133 1 226 1 34 1 138 2 80 1 81 3 368 1 370 1 83 1 39 1 328 1 86 1 244 1 245 1 
66 1 48 3 313 3 217 1 338 1 49 1 153 1 154 1 340 2 179 1 7 1 210 1 368 1 81 1 83 1 39 1 328 1 262 2 112 1 245 1 114 1 244 1 
66 1 48 3 313 3 217 1 338 1 49 1 153 1 340 3 294 1 179 1 7 1 210 1 368 1 81 1 83 1 39 1 328 1 262 1 112 1 303 1 245 1 114 1 244 1 214 1 
66 1 48 3 68 1 313 3 217 1 338 1 49 1 153 1 154 1 340 3 294 1 179 1 7 1 210 1 81 1 368 1 83 1 39 1 328 1 262 2 112 1 303 1 245 1 114 1 244 1 214 1 
250 2 48 5 200 1 201 2 338 1 153 1 49 1 154 4 340 6 294 4 155 1 7 1 342 1 210 1 103 1 11 2 12 1 299 2 262 7 300 2 112 1 303 5 114 1 18 1 214 5 66 1 68 4 313 5 217 1 358 1 179 1 133 1 138 1 229 1 368 1 81 3 83 1 238 1 328 1 39 1 86 1 245 1 244 1 193 1 
45 2 250 2 48 4 200 1 201 2 338 1 153 1 49 1 154 2 340 4 294 2 155 1 7 1 103 1 11 2 12 1 299 2 300 2 262 4 112 1 303 1 114 1 214 2 65 1 66 1 68 2 313 4 217 1 358 1 179 1 133 1 138 1 368 1 81 2 83 1 328 1 39 1 86 1 245 1 244 1 
66 1 250 2 48 4 68 2 200 1 201 2 313 4 358 1 217 1 338 1 49 1 153 1 154 2 340 4 294 2 155 1 179 1 7 1 342 1 133 1 138 1 81 2 11 2 103 1 368 1 12 1 83 1 299 2 238 1 39 1 328 1 262 4 300 2 86 1 303 1 112 1 245 1 114 1 244 1 214 1 193 1 
66 1 250 2 48 4 68 2 200 1 201 2 313 4 358 1 217 1 338 1 49 1 153 1 154 2 340 4 294 2 155 1 179 1 7 1 342 1 133 1 138 1 81 2 11 2 103 1 368 1 12 1 83 1 299 2 238 1 39 1 328 1 262 4 300 2 86 1 303 1 112 1 245 1 114 1 244 1 214 1 193 1 
332 1 66 1 121 2 45 2 48 4 68 2 200 1 201 2 313 4 358 1 217 1 338 1 128 1 49 1 153 1 154 2 340 4 294 2 155 1 179 1 7 1 321 1 133 1 32 2 138 1 81 2 103 1 368 1 83 1 39 1 328 1 262 4 300 2 86 1 303 1 112 1 245 1 114 1 244 1 214 1 193 1 
66 1 250 2 48 4 200 1 68 3 201 2 313 4 358 1 217 1 338 1 49 1 153 1 154 3 340 5 294 3 155 1 179 1 7 1 133 1 342 1 138 1 81 2 11 2 103 1 368 1 12 1 83 1 299 2 238 1 39 1 328 1 300 2 262 5 86 1 303 1 112 1 245 1 114 1 244 1 18 1 214 1 193 1 
66 1 250 2 48 4 200 1 68 3 201 2 313 4 358 1 217 1 338 1 49 1 153 1 154 3 340 5 294 3 155 1 179 1 7 1 133 1 342 1 138 1 81 2 11 2 103 1 368 1 12 1 83 1 299 2 238 1 39 1 328 1 300 2 262 5 86 1 303 1 112 1 245 1 114 1 244 1 18 1 214 1 193 1 
65 1 332 1 66 1 121 2 45 2 48 4 68 2 200 1 201 2 313 4 358 1 217 1 338 1 49 1 153 1 154 2 340 4 294 2 155 1 179 1 7 1 133 1 32 2 138 1 81 2 103 1 368 1 83 1 39 1 328 1 262 4 300 2 86 1 303 1 112 1 114 1 244 1 245 1 214 1 
271 1 158 1 258 1 311 1 102 1 273 1 335 1 23 1 234 1 360 1 372 1 58 1 329 1 63 1 281 2 
305 3 157 1 135 2 311 1 355 1 174 1 273 1 23 1 234 1 24 1 27 1 58 1 302 1 329 1 223 1 365 3 281 2 
147 1 266 1 117 1 248 1 354 1 149 1 311 1 44 1 355 1 125 1 198 1 23 1 217 2 253 1 295 1 223 1 226 1 270 1 157 1 181 1 135 2 101 1 163 1 54 1 164 1 273 1 105 1 13 1 234 1 39 1 142 1 141 1 58 1 213 1 329 1 111 1 245 2 281 2 
147 1 248 1 91 1 149 1 333 2 44 2 335 1 198 2 153 1 205 4 295 1 157 11 158 2 258 6 101 2 102 5 163 1 54 6 55 2 105 1 13 2 298 1 344 2 58 3 213 2 111 1 353 2 305 6 117 1 306 2 308 1 354 1 120 1 311 3 355 11 125 1 23 3 217 3 318 1 129 2 131 1 223 1 365 6 270 1 226 2 271 2 135 22 272 2 273 3 234 3 39 1 189 4 141 2 142 2 372 1 329 3 245 3 280 2 281 6 
147 1 194 1 117 1 148 2 248 1 354 1 149 2 311 2 355 1 290 1 197 1 23 2 217 1 357 1 295 8 30 1 226 3 270 1 157 1 135 2 101 2 163 7 232 1 166 1 273 2 13 2 234 2 327 1 211 1 39 1 239 1 58 2 213 2 329 2 60 1 111 8 245 1 63 1 281 4 
305 1 354 1 248 1 311 1 355 1 23 1 217 1 52 1 129 1 205 1 223 1 365 1 96 1 157 2 135 3 258 1 102 1 54 1 55 1 165 1 273 1 234 1 39 1 189 1 58 1 329 1 245 1 353 1 281 2 
305 1 135 2 258 1 120 1 311 1 355 2 54 1 55 1 273 1 23 1 234 1 84 1 205 1 58 1 329 1 365 1 63 1 281 2 
305 1 157 2 135 2 258 1 311 1 102 1 54 1 82 1 273 1 23 1 234 1 189 1 58 1 329 1 365 1 353 1 63 1 281 2 
157 2 305 2 135 4 258 2 120 1 311 1 102 1 355 2 54 2 55 1 273 1 23 1 234 1 189 1 129 1 205 1 58 1 329 1 365 2 353 1 63 1 281 2 
305 1 135 2 258 1 120 1 311 1 355 2 54 1 55 1 166 1 273 1 23 1 234 1 84 1 205 1 58 1 329 1 365 1 281 2 
305 1 157 2 135 2 258 1 311 1 102 1 54 1 166 1 82 1 273 1 23 1 234 1 189 1 58 1 329 1 365 1 353 1 281 2 
157 2 305 2 135 4 258 2 120 1 311 1 102 1 355 2 54 2 55 1 166 1 273 1 23 1 234 1 189 1 129 1 205 1 58 1 329 1 365 2 353 1 281 2 
157 2 305 2 135 4 258 2 120 1 311 1 102 1 355 2 54 2 55 1 273 1 23 1 234 1 189 1 129 1 205 1 58 1 329 1 365 2 353 1 281 2 
117 1 149 1 311 1 44 1 333 1 355 1 125 1 198 1 23 1 217 1 295 1 226 1 270 1 157 1 135 2 101 1 163 1 273 1 13 1 234 1 142 1 141 1 58 1 213 1 329 1 111 1 245 1 281 2 
117 1 149 1 311 1 44 1 355 1 125 1 23 1 217 1 295 1 156 1 226 1 270 1 157 1 135 2 101 1 137 1 163 1 273 1 13 1 234 1 142 1 58 1 213 1 329 1 111 1 352 1 245 1 281 2 
157 2 305 2 135 4 258 2 120 1 311 1 102 1 355 2 54 2 55 1 273 1 23 1 234 1 189 1 129 1 205 1 58 1 329 1 223 1 365 2 353 1 281 2 
305 2 120 1 311 1 44 1 333 1 355 2 198 1 23 1 217 1 129 1 205 1 295 1 365 2 226 1 157 2 135 4 258 2 102 1 101 1 54 2 55 1 272 1 163 1 232 1 273 1 13 1 234 1 189 1 142 1 141 1 58 1 213 1 329 1 111 1 245 1 353 1 281 2 
305 1 354 1 248 1 120 1 311 1 355 2 23 1 217 1 129 1 205 1 223 1 365 1 96 1 157 1 135 3 258 1 55 1 54 1 165 1 273 1 234 1 189 1 39 1 301 1 58 1 329 1 245 1 353 1 281 2 
157 2 135 4 355 2 273 1 71 1 23 1 234 1 291 1 92 1 27 1 171 1 255 1 302 1 329 1 115 1 225 1 281 2 
331 1 157 4 135 8 355 4 273 1 71 1 23 1 234 1 291 2 92 2 27 2 171 1 302 2 329 1 255 2 115 1 225 2 281 2 
157 2 135 4 355 2 273 1 71 1 23 1 234 1 291 1 92 1 27 1 171 1 255 1 302 1 329 1 115 1 225 1 281 2 
157 2 135 4 355 2 273 1 71 1 23 1 234 1 291 1 92 1 27 1 171 1 255 1 302 1 329 1 115 1 225 1 281 2 
157 2 135 4 355 2 273 1 71 1 23 1 234 1 291 1 92 1 27 1 171 1 255 1 302 1 329 1 115 1 225 1 281 2 
74 1 134 1 317 1 160 1 122 1 279 1 264 1 167 1 77 1 314 1 
277 1 242 1 
317 1 256 1 285 1 160 1 184 1 122 1 167 1 77 1 314 1 
160 1 122 1 48 1 176 1 313 1 167 1 325 2 314 1 74 1 317 1 339 1 319 1 170 1 279 1 31 1 264 1 77 1 214 1 
160 1 122 1 48 1 176 1 313 1 167 1 325 2 314 1 74 1 317 1 339 1 319 1 170 1 279 1 31 1 264 1 77 1 214 1 
160 1 122 1 48 1 176 1 313 1 167 1 325 2 314 1 74 1 317 1 339 1 319 1 170 1 279 1 31 1 264 1 77 1 214 1 
28 1 5 1 110 1 
28 1 5 1 110 1 
289 1 69 1 
289 1 110 1 69 1 
267 1 334 1 
354 2 248 2 41 1 196 1 122 1 125 1 334 1 48 1 176 1 313 1 217 2 314 1 317 1 267 1 51 1 31 1 77 1 160 1 167 1 325 1 140 1 39 2 277 1 242 1 245 2 283 1 282 1 
28 1 5 1 
289 1 110 1 69 1 
39 1 67 1 6 1 76 1 245 1 217 1 
33 1 287 1 288 1 163 2 22 1 232 1 197 1 13 1 233 1 337 2 320 1 207 1 295 2 212 1 213 1 29 1 111 2 224 1 132 1 
33 1 287 1 288 1 163 1 22 1 197 1 13 1 233 1 337 2 320 1 295 1 212 1 109 1 213 1 111 1 224 1 132 1 
149 1 35 1 101 1 163 1 290 1 13 1 357 1 204 1 320 1 207 1 295 1 213 1 111 1 226 1 
33 1 287 1 288 1 163 1 22 1 197 1 13 1 233 1 337 2 320 1 207 1 295 1 212 1 213 1 29 1 111 1 224 1 132 1 
21 1 
216 1 138 1 303 1 358 1 214 1 360 1 371 1 
45 1 250 1 48 1 200 1 313 1 358 1 155 1 133 1 138 1 103 1 11 1 81 1 12 1 299 1 262 1 303 1 214 2 
149 1 45 12 48 5 200 4 292 2 338 2 205 2 155 4 295 3 94 2 159 1 101 3 163 3 55 2 103 4 13 3 14 2 299 6 347 3 262 5 16 1 213 4 17 1 350 1 303 2 111 3 351 2 353 2 214 8 306 2 216 1 118 2 307 6 119 2 175 2 313 5 358 9 129 2 362 6 178 1 363 2 366 2 226 10 133 4 323 1 36 1 138 8 139 2 232 1 81 3 231 2 371 1 189 2 142 3 
331 1 90 1 118 2 119 1 307 5 310 1 45 6 48 1 200 2 313 1 358 8 291 1 129 2 27 1 362 5 205 2 155 2 177 1 133 2 98 1 138 5 55 2 185 1 81 1 103 2 14 1 299 3 189 2 262 1 350 1 302 1 303 2 353 2 214 5 116 1 
118 2 119 1 354 1 248 1 48 1 200 1 313 1 217 1 358 2 153 1 318 1 219 1 205 2 155 1 131 1 133 1 342 1 271 1 158 1 138 2 103 1 165 1 189 1 39 1 278 1 245 1 113 1 19 1 
216 1 138 1 103 1 200 1 358 1 371 1 155 1 303 1 214 1 133 1 
306 1 118 2 119 1 307 5 138 5 45 10 55 2 358 5 299 5 189 2 129 2 205 2 362 5 353 2 214 5 
262 1 81 1 303 1 48 1 313 1 214 1 
149 2 290 1 48 3 200 2 313 3 358 2 357 1 155 2 295 4 226 1 133 1 34 1 10 1 36 2 101 1 80 1 138 2 163 4 103 2 81 2 13 1 14 2 235 1 262 4 348 1 16 1 213 1 350 2 111 4 
248 2 354 2 149 1 311 1 333 1 44 1 125 1 198 1 23 1 217 3 295 1 270 1 226 1 157 1 135 1 101 1 163 1 165 2 273 1 13 1 234 1 39 2 141 1 142 1 58 1 213 1 329 1 173 1 111 1 245 3 113 1 281 2 
99 1 307 2 45 4 138 2 103 1 200 1 14 1 358 1 299 2 362 2 155 1 350 1 303 2 214 4 133 1 
160 1 251 1 167 1 
297 1 160 1 279 1 334 1 167 1 
160 1 251 1 167 1 
160 1 251 1 167 1 
160 1 167 1 97 1 
160 1 167 1 97 1 
160 1 167 1 97 1 
160 1 167 1 
317 1 314 1 
120 3 355 6 335 1 23 2 318 1 205 2 131 1 157 6 271 2 158 2 135 12 258 6 102 3 273 2 234 2 189 2 372 1 241 1 329 2 281 4 
271 1 158 1 258 1 372 1 102 1 335 1 360 1 
157 2 135 4 258 2 120 1 102 1 355 2 55 1 273 1 23 1 234 1 189 1 26 1 129 1 205 1 329 1 353 1 281 2 
157 1 135 2 27 1 355 1 302 1 291 1 
157 1 135 2 27 1 355 1 302 1 174 1 
157 1 135 1 27 1 
135 1 355 1 302 1 
157 3 306 1 135 6 120 1 258 3 102 2 355 3 55 1 273 1 234 1 23 1 189 1 26 1 129 1 205 1 329 1 353 1 281 2 
157 1 331 1 135 2 27 1 355 1 302 1 329 1 273 1 234 1 23 1 291 1 115 1 281 2 
157 3 271 1 135 6 158 1 258 2 120 1 102 1 355 3 189 1 205 1 131 1 
78 1 157 2 271 1 158 1 135 3 120 1 258 2 102 1 355 1 273 1 335 1 23 1 234 1 372 1 241 1 329 1 281 2 
157 5 271 2 158 2 135 10 258 5 120 2 102 3 355 5 273 1 234 1 23 1 318 1 189 2 205 2 131 1 329 1 115 1 281 2 
135 2 120 1 258 1 355 2 55 1 273 1 23 1 234 1 205 1 329 1 115 1 281 2 
157 2 135 4 258 2 120 1 102 1 355 2 55 1 273 1 23 1 234 1 189 1 129 1 205 1 329 1 353 1 115 1 281 2 
78 1 89 1 157 2 271 1 135 3 158 1 258 2 120 1 102 1 355 1 273 3 23 3 234 3 241 1 329 3 115 1 281 6 
89 1 157 1 135 2 355 1 273 3 312 1 23 3 234 3 291 1 26 1 27 1 302 1 329 3 115 1 281 6 
157 1 331 1 135 2 27 1 355 1 302 1 329 1 273 1 234 1 23 1 291 1 115 1 281 2 
331 1 157 1 135 2 355 1 273 2 23 2 234 2 291 1 26 1 27 1 302 1 329 2 115 1 281 4 
331 1 120 2 310 1 355 10 335 1 23 3 291 1 318 1 26 1 129 2 27 1 205 4 131 1 177 1 157 11 271 2 98 1 158 2 135 21 258 6 102 4 55 2 273 3 234 3 189 4 372 1 241 1 302 1 329 3 353 2 115 1 116 1 281 6 
157 1 331 1 135 2 27 1 355 1 302 1 329 1 273 1 234 1 23 1 291 1 115 1 281 2 
157 1 331 1 135 2 27 1 355 1 302 1 329 1 273 1 234 1 23 1 291 1 115 1 281 2 
331 1 120 1 310 1 355 6 23 1 291 1 129 2 27 1 205 2 177 1 157 6 98 1 135 12 258 2 102 1 55 2 273 1 234 1 189 2 302 1 329 1 353 2 115 1 281 2 116 1 
331 1 157 1 135 2 355 1 273 2 23 2 234 2 291 1 26 1 27 1 302 1 329 2 115 1 281 4 
89 1 331 1 157 1 135 2 355 1 273 2 23 2 234 2 291 1 27 1 302 1 329 2 115 1 281 4 
157 3 271 3 135 5 158 3 258 6 120 3 102 3 355 2 335 1 189 1 318 1 205 1 372 1 131 1 
89 1 331 1 157 1 135 2 355 1 273 2 23 2 234 2 291 1 27 1 302 1 329 2 115 1 281 4 
39 1 75 1 125 1 7 1 245 1 217 1 15 1 
309 1 367 1 125 1 15 1 217 1 218 1 39 1 349 1 172 1 75 1 7 1 245 1 
149 1 101 1 295 1 213 1 163 1 290 1 111 1 13 1 357 1 360 1 226 1 
147 1 354 1 248 1 149 1 101 1 44 1 163 1 125 1 198 1 13 1 217 2 39 1 142 1 295 1 213 1 111 1 245 2 226 1 
147 1 248 2 354 1 44 1 125 1 198 1 217 2 153 1 295 1 363 1 226 3 36 1 101 2 163 1 139 1 368 1 13 1 39 2 328 1 142 2 213 1 111 1 245 2 
147 1 248 2 354 1 44 1 125 1 217 2 153 1 295 2 363 1 180 1 156 1 226 3 36 1 101 2 163 2 139 1 368 1 13 1 39 2 328 1 142 2 213 1 111 2 245 2 
149 1 48 2 313 2 359 1 338 1 295 3 363 1 180 1 366 1 226 4 36 1 101 1 163 3 139 1 13 1 347 1 262 1 142 1 213 1 111 3 303 1 62 1 214 1 
149 1 101 1 36 1 139 1 163 3 175 1 48 2 13 1 313 2 338 1 347 1 142 1 262 1 295 3 213 1 303 1 363 1 111 3 180 1 366 1 214 1 226 4 
295 1 213 1 163 1 111 1 60 1 13 1 
194 1 148 1 227 1 286 1 149 2 159 1 101 2 163 6 232 1 197 1 13 2 327 1 211 1 106 1 142 1 295 7 213 3 60 1 30 1 111 7 226 3 
147 1 248 1 91 1 333 1 44 1 198 1 335 1 150 1 153 1 205 2 295 1 157 4 158 2 258 4 101 1 102 3 163 1 13 1 58 2 213 1 111 1 354 1 120 1 311 2 355 4 125 1 23 2 217 2 318 1 131 1 223 1 226 1 271 2 135 8 272 1 232 1 273 2 234 2 39 1 189 2 141 1 142 1 372 1 329 2 245 2 280 1 281 4 
216 1 149 1 175 1 48 3 200 2 313 3 358 1 292 1 338 1 295 1 155 2 94 1 366 1 133 2 226 2 138 1 163 1 103 2 81 1 371 1 347 1 262 2 16 1 303 1 111 1 351 1 214 1 283 1 
159 1 101 1 163 2 232 1 13 1 142 1 295 2 17 1 213 2 60 1 111 2 366 1 226 2 
149 1 101 1 163 4 232 1 290 1 13 1 357 1 169 1 295 4 213 1 111 4 180 1 226 1 
247 1 286 1 36 1 101 1 163 2 13 1 127 1 106 1 142 1 263 1 295 2 213 2 111 2 226 1 
287 1 149 1 295 1 213 1 163 1 111 1 13 1 233 1 337 1 132 1 
211 1 101 1 295 2 213 1 163 2 232 1 197 1 111 2 13 1 304 1 226 1 
149 1 36 1 101 2 163 4 290 1 232 1 13 2 357 1 169 1 327 1 211 1 295 5 213 2 111 5 30 1 226 3 
149 1 36 1 101 2 163 4 290 1 232 1 13 2 357 1 326 1 169 1 211 1 295 5 213 2 111 5 30 1 226 3 
147 1 354 1 248 1 149 1 101 1 44 1 163 1 125 1 13 1 217 2 39 1 142 1 295 1 213 1 111 1 245 2 156 1 226 1 
227 1 286 1 159 1 36 1 101 1 163 1 13 1 106 1 142 1 295 1 213 2 111 1 226 1 
293 1 206 1 67 1 6 1 76 1 168 1 
203 1 293 1 208 1 
293 1 254 1 206 1 125 1 168 1 
125 1 368 1 199 1 48 2 70 1 313 2 338 1 153 1 168 2 293 1 203 1 328 1 206 2 254 2 179 1 303 1 208 1 214 1 283 1 
268 1 269 1 88 1 360 1 
183 1 268 1 269 1 46 1 88 1 261 1 275 1 
190 1 47 1 261 1 
183 1 136 1 46 3 37 2 261 3 275 1 276 1 268 1 269 1 145 1 209 1 88 1 
316 1 183 1 268 1 269 1 46 2 88 1 261 2 246 1 275 1 
183 1 288 1 269 1 46 1 233 1 187 1 337 1 261 1 209 1 265 1 275 1 
183 1 269 1 46 1 88 1 261 1 209 1 275 1 
183 1 268 1 46 1 88 2 261 1 209 1 275 1 
183 2 100 1 46 2 261 2 275 2 25 1 269 1 61 1 88 1 209 1 
183 1 46 3 230 1 187 1 202 1 261 3 275 1 268 1 59 1 269 2 88 1 209 1 246 2 
183 1 288 1 46 2 22 1 233 1 337 2 261 2 275 1 268 1 143 1 269 1 88 1 132 1 209 1 246 1 
183 2 259 1 46 4 187 1 202 1 261 4 275 2 316 1 268 1 269 2 88 1 209 1 246 2 
183 1 268 1 269 1 46 1 88 1 261 1 209 1 275 1 
183 1 46 4 37 1 187 1 202 1 261 4 275 1 276 1 268 2 269 3 145 1 88 2 330 1 246 2 
64 1 183 1 46 2 186 1 261 2 275 1 188 1 268 1 269 1 88 1 209 1 246 1 
183 1 46 3 37 2 261 3 275 1 276 1 236 1 268 1 269 1 145 2 209 1 88 1 
4 1 42 2 269 2 95 1 
183 1 46 1 343 1 261 1 209 1 275 1 
183 1 268 1 269 1 230 1 46 2 88 1 261 2 209 1 246 1 275 1 
57 1 
183 1 268 1 269 1 46 1 88 1 261 1 209 1 275 1 
183 1 46 3 230 1 37 1 261 3 275 1 268 1 269 1 209 1 88 1 246 1 
269 1 187 1 202 1 330 1 
269 1 88 1 

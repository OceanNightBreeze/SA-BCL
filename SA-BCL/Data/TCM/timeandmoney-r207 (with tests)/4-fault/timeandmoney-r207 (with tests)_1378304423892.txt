#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 328 346 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
294 1 53 1 311 1 297 3 341 1 77 1 27 2 301 2 216 1 145 2 50 1 162 3 60 1 
294 1 222 1 53 1 246 1 77 2 297 9 27 5 78 1 301 2 158 1 145 2 232 1 162 9 60 4 367 2 282 1 369 1 311 1 341 1 105 1 376 1 135 1 380 1 216 6 90 2 73 2 49 2 50 3 
294 1 222 1 53 1 246 1 77 2 297 9 27 5 78 1 301 2 158 1 145 2 232 1 162 9 60 4 367 2 282 1 369 1 311 1 341 1 105 1 376 1 135 1 380 1 216 6 90 2 73 2 49 2 50 3 
294 1 222 1 53 1 246 1 77 2 297 10 27 6 78 1 301 2 158 1 145 2 232 1 162 10 60 5 367 2 282 1 369 1 311 1 341 1 105 1 376 1 135 1 380 1 216 7 90 2 73 2 49 2 50 4 
294 1 222 1 53 1 246 1 77 2 297 7 27 4 78 1 301 2 158 1 145 2 232 1 162 7 60 3 367 2 282 1 311 1 341 1 105 1 376 1 135 1 380 1 216 4 90 1 73 2 49 2 50 2 
367 1 294 1 53 1 369 1 311 1 246 1 297 4 27 3 301 1 380 1 216 3 145 1 90 2 73 1 49 1 50 1 162 4 60 2 
367 1 294 1 53 1 311 1 297 2 77 1 27 1 78 1 143 1 301 1 145 1 158 1 265 1 279 1 49 1 162 2 
367 1 294 1 53 1 369 1 246 1 311 1 129 1 297 9 341 1 77 1 27 5 105 1 376 1 301 2 380 1 216 7 145 2 90 2 73 1 49 1 50 3 92 1 162 9 60 4 
367 1 294 1 53 1 369 1 246 1 311 1 129 1 297 9 341 1 77 1 27 5 105 1 376 1 301 2 380 1 216 7 145 2 90 2 73 1 49 1 50 3 92 1 162 9 60 4 
368 1 64 1 66 1 199 1 228 1 31 1 109 1 71 1 277 1 319 1 125 1 21 1 126 1 83 1 
168 1 
168 1 102 1 379 1 277 2 7 1 11 1 126 2 21 1 
295 1 244 2 102 2 37 1 85 2 2 1 179 1 254 1 168 1 46 1 379 1 277 5 188 1 123 1 59 2 11 1 21 2 126 5 309 1 
168 1 379 1 149 1 
168 1 374 1 197 2 
71 2 368 2 170 1 66 2 125 2 228 2 199 2 83 1 
153 1 354 2 223 1 299 1 30 1 228 2 199 2 178 2 230 1 252 2 55 1 57 2 125 2 335 1 280 1 161 1 83 1 234 1 61 1 310 1 368 2 337 1 338 1 207 1 208 1 66 3 213 1 237 1 289 1 71 3 215 1 137 1 170 1 187 1 318 1 321 1 221 2 
109 1 71 1 368 1 64 1 66 1 125 1 228 1 199 1 31 1 83 1 
205 1 175 1 142 1 3 1 66 1 109 1 168 1 379 1 71 1 186 1 277 1 190 1 125 1 126 1 
368 1 175 1 3 1 66 1 199 1 228 1 109 1 168 1 379 1 71 1 277 2 186 1 190 1 125 1 126 2 
102 1 25 1 277 1 126 1 21 1 
168 1 102 1 379 1 277 2 131 1 11 1 126 2 21 1 
102 1 277 1 126 1 
0 1 368 1 66 2 226 1 199 1 228 1 71 2 170 2 125 2 
342 1 113 1 268 1 
61 1 153 1 354 1 337 1 207 1 66 1 213 1 252 1 237 1 71 1 215 1 170 1 187 1 111 1 280 1 221 1 
170 1 149 1 
61 1 101 1 153 1 354 1 368 1 337 1 207 1 342 1 66 2 67 1 228 1 213 1 237 1 252 1 71 2 215 1 187 1 125 1 280 1 221 1 
71 3 368 3 170 1 66 3 67 1 199 1 125 3 228 3 
109 1 71 1 368 1 66 1 125 1 228 1 31 1 
109 1 71 1 368 1 0 1 66 1 226 1 125 1 228 1 199 1 
153 1 354 1 0 1 223 1 175 1 299 1 3 1 199 2 228 3 178 2 230 1 252 1 55 1 277 1 57 1 125 3 280 1 161 1 126 1 83 1 234 1 61 1 101 1 337 1 368 3 207 1 166 1 208 1 66 4 67 1 213 1 237 1 109 1 289 1 71 4 215 1 137 1 170 1 186 1 187 1 190 1 318 1 191 1 221 1 
71 2 368 1 170 1 142 1 119 1 66 2 67 1 125 2 228 1 
101 1 0 1 368 3 271 1 175 1 3 1 66 3 67 2 199 1 228 3 109 1 168 1 71 3 277 1 186 1 190 1 125 3 191 1 126 1 
71 2 368 2 0 1 342 1 66 2 67 1 125 2 228 2 199 1 268 1 
61 1 153 1 354 1 337 1 207 1 66 1 213 1 252 1 237 1 71 1 215 1 170 1 187 1 280 1 221 1 
61 1 153 1 354 1 284 1 207 1 66 1 213 1 252 1 237 1 71 1 170 1 187 1 266 1 280 1 221 1 
356 1 140 1 223 1 299 1 178 2 230 1 55 1 231 1 57 4 365 1 161 1 234 2 184 1 260 1 148 1 209 1 342 2 211 1 137 1 290 1 220 1 113 2 321 2 268 2 
109 1 71 1 368 1 186 1 66 1 125 1 228 1 45 1 
101 1 183 1 368 4 0 1 370 1 142 1 119 1 66 5 67 2 228 4 199 1 71 5 170 1 125 5 
109 1 71 2 368 2 66 2 125 2 228 2 31 1 45 1 
323 1 210 1 286 1 
75 1 139 1 26 1 210 2 286 2 212 1 
210 1 286 1 
210 1 286 1 
26 1 212 1 
26 1 212 1 
26 1 212 1 
210 1 42 1 286 1 
210 1 42 1 286 1 
210 1 42 1 286 1 
98 1 210 1 286 1 
98 1 210 1 286 1 
98 1 210 1 286 1 
24 1 173 1 54 1 357 2 229 1 199 1 228 1 31 1 277 2 125 1 366 2 336 2 181 1 126 2 83 1 163 2 368 1 64 1 66 1 210 2 286 2 109 1 71 1 72 1 48 1 217 1 242 2 319 1 
323 1 357 1 247 1 155 1 228 2 326 1 56 1 277 1 366 1 336 1 125 2 126 1 163 1 368 2 132 1 210 1 66 2 286 1 150 1 314 1 71 2 170 1 217 1 242 1 
367 2 143 1 248 1 73 1 291 2 
367 1 73 1 49 1 
367 1 143 1 49 1 
367 3 143 1 238 1 248 1 291 1 73 2 
367 2 143 1 248 1 291 1 73 1 82 1 
244 1 295 3 247 1 155 1 197 3 121 2 253 2 231 1 56 1 277 5 256 1 365 1 59 1 11 1 126 5 102 1 37 1 258 1 148 1 85 1 374 1 17 1 375 1 168 2 379 1 169 1 290 1 188 2 352 2 353 1 219 1 21 4 
25 5 244 2 295 8 247 4 117 1 197 9 179 1 121 6 253 6 33 1 231 3 277 9 256 1 8 1 365 3 59 2 126 9 11 1 102 6 37 1 258 2 312 1 148 3 85 2 374 3 214 1 375 2 168 5 379 1 316 5 290 3 188 6 353 3 293 1 21 7 
244 1 295 3 247 1 197 4 179 1 253 2 121 2 231 1 277 3 365 1 59 1 126 3 258 1 148 1 85 1 374 2 17 1 375 1 168 3 379 1 169 1 290 1 352 1 188 2 353 1 21 2 
244 1 295 5 247 2 117 1 197 7 179 1 121 4 253 4 33 1 231 2 277 4 8 1 365 2 59 1 126 4 258 1 148 2 85 1 374 3 17 1 375 1 168 4 379 1 169 1 290 2 352 2 188 4 353 2 21 3 
345 1 
187 1 118 1 149 1 
187 1 146 1 
153 1 187 1 
153 1 127 1 95 1 187 3 118 2 237 1 
153 1 187 1 237 1 
187 1 382 1 
234 3 22 1 140 2 260 3 1 1 104 1 344 1 107 1 348 1 231 1 239 1 34 1 57 7 334 1 365 1 321 4 270 2 35 1 
22 1 140 5 223 1 1 5 299 1 249 1 176 1 178 2 230 1 231 4 201 1 34 2 57 31 334 2 365 4 81 1 35 1 234 15 260 10 148 3 104 2 344 2 347 1 107 1 68 4 110 3 137 1 239 1 290 3 383 1 218 1 353 3 321 16 270 3 
22 1 140 3 223 2 1 1 299 2 176 1 178 4 230 2 5 1 231 1 34 1 57 9 334 1 365 1 35 1 234 4 260 4 104 1 344 1 137 2 239 1 240 1 321 5 270 2 
234 3 22 1 140 2 260 3 1 1 104 1 344 1 107 1 231 1 239 1 34 1 57 7 334 1 365 1 321 4 270 2 35 1 
234 3 22 1 140 2 260 3 1 1 104 1 344 1 107 1 231 1 239 1 34 1 57 7 334 1 365 1 321 4 270 2 35 1 
61 1 153 1 354 1 235 1 94 1 207 1 77 2 41 2 297 1 103 2 16 1 252 1 301 1 360 1 157 1 145 1 187 1 99 1 363 1 280 1 51 2 221 1 162 1 
367 2 61 1 23 1 354 1 245 1 207 1 311 1 225 1 77 1 297 1 103 1 41 1 86 1 252 1 143 1 327 1 301 1 238 1 332 1 145 1 73 1 49 1 202 1 51 1 221 1 162 1 
294 1 23 1 53 1 354 1 245 1 297 2 77 1 225 1 27 1 252 1 143 1 301 1 327 1 145 1 332 1 162 2 61 1 367 2 207 1 311 1 41 1 103 1 134 1 86 1 238 1 216 1 73 1 49 1 51 1 221 1 
294 1 23 1 53 1 354 1 245 1 297 3 77 1 27 1 252 1 143 1 301 1 327 1 145 1 332 1 363 1 202 1 162 3 61 1 367 2 207 1 41 1 103 1 86 1 238 1 216 2 73 1 49 1 51 1 112 1 221 1 
294 1 23 1 53 1 354 1 77 1 297 2 27 1 252 1 143 1 327 1 202 1 162 2 61 1 367 2 207 1 41 1 103 1 86 1 238 1 216 2 73 1 49 1 51 1 112 1 221 1 
196 1 
144 1 277 4 99 1 59 1 280 2 11 3 233 2 61 1 102 6 281 1 339 2 147 2 69 1 187 1 188 2 153 1 192 1 295 2 244 1 354 2 193 1 194 1 298 2 197 2 358 2 252 2 360 1 305 1 203 2 306 2 307 1 126 4 258 1 37 1 39 1 207 1 261 1 85 1 374 2 168 1 88 1 317 2 221 2 322 1 
281 1 102 2 193 1 147 1 69 1 144 1 88 1 277 2 7 1 11 1 126 2 
69 1 144 1 281 1 88 1 193 1 339 1 277 1 358 1 126 1 
281 1 102 2 193 1 339 1 147 1 358 1 69 1 144 1 88 1 317 1 277 2 7 1 11 1 126 2 
228 1 274 1 144 1 277 4 7 1 59 1 11 3 233 2 102 7 281 1 339 3 147 4 64 1 66 1 109 1 70 1 69 1 18 1 71 1 188 1 244 1 295 1 193 1 298 2 358 3 199 1 31 1 80 1 305 1 203 2 306 2 125 1 126 4 83 1 37 1 368 1 206 1 85 1 374 2 168 2 88 1 379 2 317 4 319 1 322 1 
244 1 295 1 193 1 298 2 358 2 197 2 144 1 277 3 305 1 203 2 306 2 59 1 11 2 126 3 233 2 102 4 281 1 37 1 39 1 339 2 147 2 85 1 374 2 69 1 168 2 379 1 88 1 317 2 188 1 322 1 
244 1 295 1 193 1 298 2 358 2 274 1 144 1 277 3 305 1 306 2 203 2 59 1 11 2 126 3 233 2 102 4 281 1 37 1 339 2 147 2 85 1 374 2 70 1 69 1 18 1 168 1 379 1 88 1 317 2 188 1 322 1 
244 1 295 1 193 1 298 2 358 2 274 1 144 1 277 3 305 1 306 2 203 2 59 1 11 2 126 3 233 2 102 4 281 1 37 1 339 2 147 2 85 1 374 2 70 1 69 1 18 1 168 1 379 1 88 1 317 2 188 1 322 1 
244 1 295 1 193 1 96 1 358 2 197 2 144 1 277 3 203 2 59 1 11 2 182 1 126 3 308 2 233 2 102 4 281 1 37 1 339 2 147 2 85 1 343 1 69 1 18 1 168 1 379 1 88 1 317 2 188 1 320 2 322 1 
244 1 295 1 193 1 298 2 358 3 274 1 144 1 277 3 80 1 305 1 306 2 203 2 59 1 11 2 126 3 233 2 102 5 281 1 37 1 339 3 147 3 85 1 374 2 18 1 69 1 70 1 168 1 379 1 88 1 317 3 188 1 322 1 
244 1 295 1 193 1 298 2 358 3 274 1 144 1 277 3 80 1 305 1 306 2 203 2 59 1 11 2 126 3 233 2 102 5 281 1 37 1 339 3 147 3 85 1 374 2 18 1 69 1 70 1 168 1 379 1 88 1 317 3 188 1 322 1 
244 1 295 1 193 1 358 2 197 2 144 1 277 3 203 2 59 1 11 2 126 3 233 2 308 2 102 4 281 1 37 1 39 1 339 2 147 2 85 1 343 1 69 1 168 1 379 1 88 1 317 2 188 1 320 2 322 1 
153 2 354 8 141 1 223 2 299 2 228 1 30 1 178 4 252 8 230 2 122 1 55 2 360 1 276 1 57 2 99 1 9 1 202 1 125 1 280 2 161 2 61 2 234 1 368 1 338 2 207 2 128 1 208 1 209 1 134 1 66 1 87 1 106 1 67 1 71 1 137 2 187 3 221 7 321 1 
0 1 140 1 116 1 223 1 299 1 199 1 228 1 178 2 230 1 55 1 231 1 57 3 365 1 125 1 161 1 234 2 368 1 259 1 260 1 148 1 342 1 66 1 71 1 137 1 290 1 353 1 113 1 268 1 321 1 
22 1 140 2 223 1 299 1 178 2 230 1 55 1 231 1 57 6 334 1 365 1 161 1 35 1 234 3 260 2 209 1 104 1 342 1 149 1 137 1 239 1 170 2 113 1 268 1 321 3 270 1 
140 1 324 1 116 1 223 2 1 1 299 2 30 1 178 4 251 1 120 1 230 2 55 1 231 1 57 14 365 2 161 2 234 6 208 1 260 2 148 1 236 1 342 11 347 1 68 3 110 3 137 2 170 1 290 2 218 1 353 2 113 11 321 8 268 4 
153 1 354 1 76 1 116 1 223 1 299 1 228 1 30 1 178 2 252 1 230 1 330 1 55 1 57 2 280 1 125 1 161 1 61 1 101 1 234 1 337 1 368 1 207 1 208 1 66 2 67 1 213 1 287 1 237 1 71 2 215 1 137 1 170 1 187 1 111 1 221 1 268 1 321 1 
140 4 223 3 1 4 228 1 178 6 230 3 329 2 55 3 231 3 57 20 334 1 280 1 234 10 101 1 61 2 62 1 337 2 148 2 104 1 66 3 342 7 67 1 237 2 71 3 350 1 239 1 290 2 19 1 187 2 351 2 353 2 113 7 22 1 153 2 354 3 355 2 116 1 299 3 30 1 252 3 79 2 202 1 365 3 125 1 161 3 35 1 368 1 207 2 208 1 260 8 213 2 215 2 137 3 170 2 318 2 221 3 268 7 321 10 270 1 
184 1 260 1 223 1 1 1 209 1 299 1 342 1 178 2 230 1 55 1 137 1 290 1 57 2 365 1 113 1 268 1 161 1 321 2 
234 2 140 1 260 1 223 1 148 1 209 1 299 1 342 1 211 1 178 2 230 1 55 1 231 1 137 1 57 2 113 1 268 1 161 1 
140 1 223 1 1 1 299 1 178 2 230 1 55 1 231 1 57 4 365 1 161 1 234 2 260 2 148 1 209 1 342 2 137 1 290 1 353 1 113 2 321 2 268 2 
184 1 260 1 223 1 1 1 299 1 342 1 178 2 230 1 55 1 137 1 290 1 57 2 9 1 365 1 113 1 268 1 161 1 321 2 
234 2 140 1 260 1 223 1 148 1 299 1 342 1 211 1 178 2 230 1 55 1 231 1 137 1 57 2 9 1 113 1 268 1 161 1 
140 1 223 1 1 1 299 1 178 2 230 1 55 1 231 1 57 4 9 1 365 1 161 1 234 2 260 2 148 1 342 2 137 1 290 1 353 1 113 2 321 2 268 2 
234 2 140 1 260 2 223 1 148 1 1 1 299 1 342 2 178 2 230 1 55 1 231 1 137 1 290 1 57 4 353 1 365 1 113 2 268 2 161 1 321 2 
153 1 354 1 223 1 299 1 30 1 178 2 252 1 230 1 55 1 57 2 280 1 161 1 61 1 234 1 337 1 207 1 208 1 66 1 213 1 237 1 71 1 215 1 137 1 170 1 187 1 318 1 321 1 221 1 
153 1 354 1 223 1 299 1 30 1 178 2 252 1 230 1 55 1 156 1 57 2 280 1 161 1 61 1 234 1 207 1 284 1 208 1 66 1 213 1 237 1 71 1 137 1 170 1 187 1 266 1 321 1 221 1 
116 1 140 1 223 1 1 1 299 1 178 2 230 1 55 1 231 1 57 4 365 1 161 1 234 2 260 2 148 1 342 2 137 1 290 1 353 1 113 2 321 2 268 2 
153 1 354 1 140 1 223 1 1 1 299 1 178 2 252 1 230 1 79 1 55 1 231 1 57 4 365 1 161 1 234 2 61 1 337 1 207 1 260 2 148 1 342 2 134 1 66 1 213 1 237 1 71 1 215 1 137 1 290 1 187 1 353 1 318 1 113 2 268 2 321 2 221 1 
0 1 116 1 223 1 1 1 299 1 199 1 228 1 178 2 230 1 55 1 231 1 57 3 365 1 125 1 161 1 234 1 368 1 260 1 148 1 66 1 342 1 151 1 71 1 137 1 290 1 353 1 113 1 321 2 268 1 
152 2 296 1 140 3 223 2 325 1 1 3 299 2 178 4 230 2 5 1 231 3 57 19 365 3 234 10 84 2 40 1 260 6 148 3 133 1 313 1 347 1 68 2 110 1 137 2 349 1 290 3 218 1 353 3 321 9 114 1 
152 4 296 2 140 2 223 3 1 2 325 1 299 3 176 2 178 6 230 3 5 1 231 2 255 1 57 26 365 3 234 12 84 1 38 1 40 1 14 1 260 4 148 2 313 1 347 2 108 1 68 2 110 2 137 3 349 2 290 3 381 1 353 3 321 14 269 1 
140 4 223 3 1 4 325 1 176 1 178 6 230 3 5 1 231 5 57 41 334 1 180 1 234 21 14 1 148 4 104 1 347 3 68 4 108 1 110 3 290 4 349 1 239 1 353 4 114 1 22 1 152 4 296 2 299 3 255 1 365 5 35 1 38 1 84 1 40 1 260 8 313 1 137 3 381 1 218 1 321 20 269 1 270 1 
22 1 152 4 296 2 140 4 223 4 325 1 1 3 299 4 176 2 178 8 230 4 5 1 231 4 255 1 57 38 334 1 365 5 180 1 35 1 234 18 84 1 38 1 40 1 14 1 260 7 148 3 104 1 313 1 347 3 108 1 68 4 110 3 137 4 239 1 349 1 290 4 381 1 218 1 353 4 269 1 321 20 114 1 270 1 
22 1 152 4 296 1 140 7 223 2 325 1 1 7 299 2 176 1 178 4 230 2 5 1 231 8 255 1 57 52 334 1 365 8 35 1 234 25 84 1 38 1 40 1 14 1 260 14 148 7 104 1 236 2 313 1 347 2 108 1 68 4 110 4 137 2 239 1 349 1 290 7 381 1 218 2 353 7 269 1 321 27 270 1 
75 1 288 1 163 1 357 1 285 1 210 1 286 1 177 1 336 1 242 1 
326 1 323 1 
163 1 357 1 210 1 286 1 74 1 336 1 242 1 204 1 100 1 
24 1 173 1 54 1 357 1 229 1 199 1 228 1 31 1 277 1 125 1 366 2 336 1 181 1 126 1 83 1 163 1 368 1 64 1 66 1 210 1 286 1 109 1 71 1 72 1 48 1 217 1 242 1 319 1 
24 1 173 1 54 1 357 1 229 1 199 1 228 1 31 1 277 1 125 1 366 2 336 1 181 1 126 1 83 1 163 1 368 1 64 1 66 1 210 1 286 1 109 1 71 1 72 1 48 1 217 1 242 1 319 1 
24 1 173 1 54 1 357 1 229 1 199 1 228 1 31 1 277 1 125 1 366 2 336 1 181 1 126 1 83 1 163 1 368 1 64 1 66 1 210 1 286 1 109 1 71 1 72 1 48 1 217 1 242 1 319 1 
139 1 42 1 160 1 
139 1 42 1 160 1 
98 1 333 1 
139 1 98 1 333 1 
132 1 150 1 
323 1 173 1 357 1 247 1 155 1 228 2 326 1 56 1 277 1 336 1 366 1 125 2 126 1 163 1 368 2 372 1 132 1 66 2 210 1 286 1 150 1 314 1 71 2 170 1 48 1 242 1 21 1 
42 1 160 1 
139 1 98 1 333 1 
153 1 354 2 116 1 223 1 299 1 30 1 178 2 252 2 230 1 55 1 276 1 57 2 125 2 161 1 61 1 12 1 234 1 164 1 338 2 207 1 128 1 208 1 66 2 71 2 137 1 187 1 171 1 172 1 241 1 321 1 221 2 
61 1 153 1 354 1 94 1 360 1 207 1 302 1 187 1 41 1 99 1 273 1 280 1 221 1 252 1 
367 2 61 1 23 1 354 1 245 1 207 1 41 1 86 1 273 1 43 1 252 1 143 1 238 1 73 1 49 1 202 1 20 1 221 1 
367 2 61 1 23 1 354 2 245 1 207 1 41 1 134 1 86 1 273 1 43 1 252 2 143 1 238 1 73 1 49 1 202 1 20 1 221 2 
367 2 61 1 23 1 354 1 245 1 207 1 41 1 86 1 43 1 252 1 143 1 4 1 238 1 73 1 49 1 202 1 221 1 
378 1 
244 1 295 1 37 1 85 1 46 1 168 1 379 1 123 1 188 1 59 1 
257 1 295 5 148 2 374 5 197 10 198 2 253 5 121 5 329 1 168 5 231 2 290 2 188 5 353 2 365 2 
168 1 102 1 379 1 277 1 126 1 11 1 
153 1 192 1 244 2 354 3 295 1 179 1 252 3 328 1 360 1 277 3 99 1 58 1 59 2 10 1 280 2 307 1 11 2 126 3 61 1 102 4 37 1 258 1 207 1 261 2 85 2 346 1 187 1 188 2 221 3 
295 1 168 1 46 1 379 1 188 1 123 1 149 1 
295 1 244 1 298 1 197 1 277 1 305 1 306 1 59 1 11 1 126 1 102 1 37 1 85 1 374 1 168 2 379 1 188 1 
95 1 224 1 3 2 329 2 6 1 231 2 277 5 58 1 146 3 10 1 59 4 280 1 11 3 61 3 102 5 148 2 237 3 290 2 187 10 188 8 353 2 153 3 295 9 244 4 354 3 300 2 118 2 29 1 28 2 197 12 198 2 252 3 253 6 121 6 123 1 159 2 365 2 126 5 257 2 258 2 37 4 371 2 207 4 261 1 262 2 85 4 374 6 134 1 315 2 46 1 168 8 379 2 382 2 221 3 
295 8 244 2 197 6 227 1 198 2 121 5 253 5 231 2 277 1 255 1 124 1 365 2 59 2 126 1 11 1 257 1 102 1 258 1 37 2 38 1 14 1 261 1 148 2 85 2 374 3 347 1 68 1 168 5 110 1 379 2 290 2 381 1 188 5 353 2 269 1 
22 1 244 1 295 2 198 2 199 1 228 1 31 1 231 1 277 1 334 1 365 2 59 1 125 1 126 1 83 1 257 1 37 1 368 1 85 1 64 1 104 1 66 1 109 1 70 1 377 1 71 1 188 2 319 1 
153 1 354 1 223 1 299 1 228 2 199 2 178 2 230 1 252 1 55 1 57 1 280 1 125 2 161 1 83 1 234 1 61 1 368 2 337 1 207 1 208 1 66 3 213 1 237 1 289 1 71 3 215 1 137 1 170 1 187 1 318 1 221 1 
244 1 295 1 37 1 258 1 261 1 85 1 374 2 197 4 253 2 121 2 168 4 379 2 188 2 59 1 270 1 
163 1 89 1 285 1 336 1 150 1 
163 1 267 1 336 1 
163 1 267 1 336 1 
163 1 267 1 336 1 
163 1 65 1 336 1 
163 1 65 1 336 1 
163 1 65 1 336 1 
163 1 336 1 
210 1 286 1 
234 5 22 1 140 3 223 1 260 5 1 2 299 1 104 2 178 2 230 1 377 1 5 1 231 2 137 1 57 10 334 2 365 2 321 5 
223 1 260 1 1 1 299 1 178 2 230 1 5 1 137 1 290 1 57 2 365 1 321 2 
234 2 140 1 260 2 223 1 148 1 1 1 299 1 178 2 230 1 5 1 231 1 137 1 290 1 57 4 353 1 365 1 321 2 
234 2 140 1 223 3 260 2 1 1 299 3 176 1 104 1 178 6 275 1 230 3 5 1 137 3 57 3 334 1 321 1 114 1 
22 2 93 1 140 7 223 5 1 5 299 5 176 2 178 10 275 1 230 5 5 1 231 5 201 1 57 34 334 3 81 1 365 5 35 1 234 18 260 12 148 3 104 3 347 1 68 4 110 3 137 5 239 1 290 3 383 1 218 1 353 3 321 16 270 1 114 1 
22 1 140 2 223 1 299 1 178 2 230 1 5 1 231 1 57 8 334 1 365 1 35 1 234 4 260 2 104 1 347 1 68 1 110 1 137 1 239 1 381 1 321 4 270 1 
22 1 93 1 140 2 223 2 1 1 299 2 178 4 230 2 5 1 231 1 57 11 334 1 365 2 35 1 234 5 260 3 104 1 347 1 68 2 110 1 137 2 239 1 290 1 381 1 218 1 353 1 321 6 270 1 
22 1 93 1 140 3 223 3 1 1 299 3 176 1 178 6 230 3 5 1 231 3 255 1 57 19 334 1 365 3 35 1 234 10 38 1 14 1 260 4 148 2 104 1 347 1 68 1 110 1 137 3 239 1 290 2 381 1 353 2 321 9 269 1 270 1 
22 1 93 1 140 3 223 3 1 2 299 3 176 1 178 6 230 3 5 1 231 2 255 1 57 17 334 1 365 3 35 1 234 7 38 1 14 1 260 5 148 1 104 1 347 1 68 1 110 1 137 3 239 1 290 2 381 1 353 2 321 10 269 1 270 1 
22 1 140 2 223 1 299 1 178 2 230 1 5 1 231 1 57 8 334 1 365 1 35 1 234 4 260 2 104 1 347 1 68 1 110 1 137 1 239 1 381 1 321 4 270 1 
140 1 223 1 1 1 299 1 178 2 230 1 5 1 231 2 255 1 57 12 365 2 234 6 38 1 14 1 260 2 148 2 347 1 68 1 110 1 137 1 290 2 381 1 353 2 321 6 269 1 
22 1 93 1 140 3 223 4 1 2 299 4 176 2 178 8 230 4 5 1 231 2 255 1 57 18 334 1 365 3 35 1 234 8 38 1 14 1 260 5 148 1 104 1 347 1 68 1 110 1 137 4 239 1 290 2 381 1 353 2 321 10 269 1 270 1 
140 3 223 4 1 3 299 4 176 2 178 8 230 4 5 1 231 2 255 1 57 16 365 3 234 7 38 1 14 1 260 6 148 2 347 1 68 1 110 1 137 4 290 3 381 1 353 3 321 9 269 1 114 1 
234 4 22 1 140 3 260 6 1 3 104 3 231 1 239 2 57 7 334 3 365 1 321 3 35 1 
22 1 140 3 223 4 1 1 299 4 176 2 178 8 230 4 5 1 231 2 255 1 57 18 334 1 365 3 35 1 234 8 38 1 14 1 260 4 148 1 104 1 347 1 68 1 110 1 137 4 239 1 290 2 381 1 353 2 321 10 269 1 270 1 114 1 
22 1 234 4 140 2 260 3 223 2 1 1 299 2 176 1 104 1 178 4 230 2 231 1 137 2 239 1 57 8 334 1 365 1 321 4 270 1 35 1 
234 3 22 1 140 2 260 2 104 1 149 1 231 1 239 1 57 6 334 1 365 1 321 3 270 1 35 1 
234 2 93 1 140 1 260 2 223 1 148 1 1 1 299 1 178 2 230 1 231 1 137 1 290 1 57 4 353 1 365 1 321 2 
234 4 140 1 260 2 148 1 1 1 347 1 68 2 110 1 231 1 290 1 57 7 218 1 353 1 365 1 321 3 
22 1 324 1 140 5 223 2 1 4 299 2 176 2 178 4 230 2 275 1 231 3 57 23 334 2 365 3 35 1 234 12 260 9 148 2 104 2 236 1 68 2 110 2 137 2 239 1 290 2 218 1 353 2 321 11 270 1 
234 1 57 1 68 1 
110 1 57 1 321 1 
93 1 234 3 140 2 223 1 260 3 1 1 148 1 299 1 178 2 230 1 329 1 231 1 137 1 290 1 57 6 353 1 365 1 321 3 
140 1 223 1 1 1 299 1 178 2 230 1 5 1 231 2 255 1 57 12 365 2 234 6 38 1 14 1 260 2 148 2 347 1 68 1 110 1 137 1 290 2 381 1 353 2 321 6 269 1 
22 1 234 3 140 1 260 2 1 1 104 1 231 1 57 6 334 1 365 1 321 3 
234 2 140 1 260 2 223 1 1 1 299 1 104 1 176 1 178 2 275 1 230 1 137 1 239 1 57 3 334 1 321 1 35 1 
71 1 170 1 142 1 189 1 66 1 119 1 125 1 
165 1 272 1 130 1 142 1 119 1 66 1 167 1 32 1 71 1 170 1 189 1 125 1 
61 1 153 1 354 4 207 1 134 1 44 1 252 4 360 1 187 1 99 1 364 1 280 1 221 4 
61 1 153 1 354 2 13 1 36 1 207 2 340 1 252 2 237 1 136 1 350 1 187 1 58 1 221 2 
367 1 143 1 61 1 23 1 354 1 207 1 49 1 280 1 221 1 252 1 
61 1 153 1 354 2 207 1 276 1 187 1 171 1 134 1 202 1 221 2 252 2 
61 2 153 2 354 5 207 2 134 1 87 1 252 5 122 1 360 1 276 1 187 3 99 1 364 1 58 1 280 1 221 4 
61 2 153 2 354 5 207 2 134 1 252 5 122 1 360 1 276 1 187 3 99 1 304 1 364 1 58 1 280 1 221 4 
61 1 153 1 354 1 360 1 207 1 187 1 99 1 149 1 280 1 221 1 252 1 
61 1 153 1 354 1 368 1 207 1 66 2 67 1 228 1 213 1 237 1 252 1 71 2 215 1 170 1 187 1 125 1 280 1 221 1 
153 2 354 1 228 2 252 1 58 1 125 2 61 1 368 1 371 1 207 1 66 2 67 1 213 1 237 2 109 1 71 2 215 1 170 1 186 1 187 3 382 1 190 1 221 1 
153 2 354 2 228 2 252 2 58 1 125 2 61 1 368 1 371 1 207 1 66 2 67 1 44 1 213 1 237 2 109 1 71 2 170 1 186 1 187 3 382 1 190 1 266 1 221 2 
61 1 153 1 354 3 102 1 371 1 207 1 3 1 118 1 44 1 237 1 252 3 168 1 264 1 379 1 277 2 382 1 187 4 58 1 146 1 280 1 126 2 221 3 138 1 
61 1 153 1 354 3 102 1 371 1 207 1 3 1 118 1 28 1 44 1 237 1 252 3 168 1 379 1 277 2 382 1 187 4 58 1 146 1 280 1 126 2 221 3 
61 1 354 1 207 1 141 1 221 1 252 1 
61 2 153 2 354 7 13 1 36 1 338 1 95 1 207 3 141 1 373 1 134 1 87 1 106 1 252 7 237 1 122 1 276 1 187 3 202 1 280 2 221 6 
140 2 223 2 228 1 178 4 230 2 55 2 231 1 57 6 334 1 12 1 61 1 234 3 337 1 104 1 66 2 342 1 67 1 237 1 71 2 239 1 187 1 113 1 22 1 153 1 354 1 355 1 116 1 299 2 252 1 79 1 365 1 125 1 161 2 35 1 368 1 207 1 260 2 134 1 213 1 215 1 137 2 170 2 318 1 268 1 221 1 321 3 270 1 
295 1 354 1 244 2 300 1 3 1 118 1 28 1 252 1 277 3 123 1 159 1 146 1 280 1 59 2 10 1 126 3 11 1 102 2 37 2 85 2 315 1 168 1 46 1 379 1 187 2 188 1 221 1 21 1 
61 1 153 1 354 2 95 1 207 2 141 1 224 1 134 1 118 1 252 2 237 1 187 2 221 2 
61 1 153 1 354 1 368 1 207 1 66 2 67 1 228 1 213 1 237 1 252 1 71 2 170 1 187 1 266 1 125 1 280 1 221 1 
61 1 153 1 354 1 13 1 36 1 95 1 207 2 373 1 252 1 237 1 187 1 58 1 221 1 
263 1 47 1 170 1 362 1 91 1 
175 1 3 1 200 1 109 1 263 1 168 1 379 1 47 2 170 1 186 1 277 2 361 1 362 2 190 1 278 1 91 2 191 1 21 1 126 2 
164 1 66 1 263 1 47 1 71 1 91 1 241 1 172 1 125 1 
263 1 361 1 200 1 
294 1 301 1 53 1 145 1 311 1 297 1 27 1 162 1 
294 2 53 2 15 1 297 4 27 3 250 1 78 1 97 1 301 1 216 2 145 1 50 1 162 4 60 1 
243 1 294 1 53 1 52 1 311 1 297 2 27 1 301 1 216 1 145 1 92 1 162 2 
294 1 53 1 311 1 15 1 297 3 154 1 27 1 250 2 78 2 301 1 145 1 162 3 
359 1 115 2 27 2 185 1 
301 1 145 1 311 1 195 1 297 1 162 1 
294 1 301 1 53 1 216 1 145 1 311 1 297 2 27 1 376 1 162 2 
331 1 
294 1 301 1 53 1 145 1 311 1 297 1 27 1 162 1 
294 1 53 1 27 1 149 1 
294 1 301 1 53 1 145 1 297 1 27 1 162 1 
77 1 51 1 162 1 
294 1 301 1 53 1 283 1 145 1 311 1 15 1 297 3 27 1 250 1 78 2 162 3 
294 1 301 1 53 1 216 1 145 1 90 1 297 2 27 1 162 2 
367 1 301 1 380 1 145 1 311 1 297 1 73 1 27 1 49 1 60 1 162 1 
301 1 53 1 145 1 311 1 297 1 27 1 162 1 
294 1 301 1 53 2 145 1 311 1 297 1 162 1 
301 2 53 1 145 2 311 1 63 1 174 1 297 2 27 1 292 1 162 2 
294 1 53 1 311 1 297 3 27 2 105 1 376 1 301 1 216 2 145 1 50 1 162 3 60 1 
367 2 294 1 53 1 311 1 297 2 27 1 143 1 301 1 238 1 216 1 145 1 303 1 73 1 49 1 162 2 
294 1 53 1 369 1 311 1 297 4 27 2 301 2 216 2 145 2 90 1 50 1 162 4 60 1 
294 1 301 1 53 1 216 1 145 1 311 1 297 3 27 1 78 1 376 1 162 3 
27 1 97 1 50 1 60 1 
53 1 27 1 

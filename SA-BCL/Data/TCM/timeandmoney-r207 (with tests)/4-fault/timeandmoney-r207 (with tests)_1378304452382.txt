#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 236 163 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 2 246 1 325 2 128 1 104 2 5 1 348 1 328 1 89 1 204 5 9 9 289 1 133 1 255 1 10 1 184 6 160 4 15 1 168 2 276 2 143 1 360 3 19 1 362 2 191 1 172 1 321 2 194 9 
126 2 246 1 325 2 128 1 104 2 5 1 348 1 328 1 89 1 204 5 9 9 289 1 133 1 255 1 10 1 184 6 160 4 15 1 168 2 276 2 143 1 360 3 362 2 19 1 191 1 172 1 321 2 194 9 
126 2 246 1 325 2 128 1 104 2 5 1 348 1 328 1 89 1 204 6 9 10 289 1 133 1 255 1 10 1 184 7 160 5 15 1 168 2 276 2 143 1 360 4 362 2 19 1 191 1 172 1 321 2 194 10 
126 2 246 1 325 1 104 2 5 1 348 1 328 1 89 1 204 4 9 7 289 1 133 1 255 1 10 1 184 4 160 3 15 1 168 2 276 2 143 1 360 2 362 2 19 1 191 1 172 1 321 2 194 7 
184 3 126 1 325 2 160 2 128 1 104 1 5 1 168 1 276 1 360 1 143 1 19 1 362 1 204 3 191 1 9 4 133 1 194 4 
174 1 255 1 125 1 126 1 104 1 168 1 276 1 328 1 19 1 77 1 204 1 191 1 9 2 321 1 133 1 194 2 
184 1 160 1 104 2 168 2 348 1 360 1 19 1 204 2 191 1 9 3 321 1 133 1 194 3 
184 7 126 1 325 2 160 4 128 1 5 1 104 2 168 2 348 1 276 1 143 1 360 3 89 1 362 1 19 1 204 5 251 1 191 1 172 1 9 9 321 1 133 1 194 9 93 1 
184 7 126 1 325 2 160 4 128 1 5 1 104 2 168 2 348 1 276 1 143 1 360 3 89 1 362 1 19 1 204 5 251 1 191 1 172 1 9 9 321 1 133 1 194 9 93 1 
357 1 175 1 140 1 
140 1 92 1 311 2 
173 1 315 2 207 2 60 1 208 2 265 2 169 2 322 2 
30 2 57 1 173 1 60 1 197 1 300 1 61 1 129 1 86 1 302 1 349 1 304 1 287 1 270 1 181 1 112 1 207 2 13 1 46 1 208 2 234 1 169 2 336 1 314 2 21 1 315 3 97 1 317 1 318 1 216 2 145 2 363 1 240 2 192 1 265 3 100 1 322 2 
173 1 31 1 315 1 207 1 54 1 208 1 199 1 265 1 169 1 322 1 
2 1 31 1 115 1 175 1 208 1 140 1 347 1 211 1 315 1 98 1 265 1 148 1 159 1 111 1 
31 1 207 1 115 1 175 1 208 1 140 1 347 1 211 2 169 1 315 1 98 1 265 1 159 1 111 2 322 1 
326 1 66 1 334 1 211 1 111 1 
223 1 326 1 175 1 66 1 140 1 211 2 355 1 111 2 
66 1 211 1 111 1 
173 1 31 1 207 1 326 1 208 1 199 1 211 1 169 1 350 1 315 1 54 1 265 1 111 1 322 1 
140 1 
173 1 31 1 207 1 247 1 326 1 175 1 208 1 199 1 211 2 140 1 169 1 350 1 315 1 54 1 66 1 265 1 355 1 322 1 111 2 
273 2 59 1 136 1 326 2 175 1 292 1 164 1 335 1 293 2 140 1 211 5 85 1 38 1 107 1 66 2 78 1 355 1 111 5 29 2 
268 1 207 1 13 1 35 1 300 1 129 1 208 1 166 1 302 1 336 1 314 1 287 1 97 1 315 2 145 1 363 1 240 1 181 1 265 2 322 1 
60 1 357 1 
207 1 43 1 60 2 208 2 169 1 312 1 315 2 265 2 322 1 
285 1 166 1 301 1 
60 1 13 1 300 1 129 1 302 1 336 1 314 1 287 1 315 1 97 1 145 1 363 1 240 1 181 1 265 1 206 1 
268 1 315 3 207 3 60 1 208 3 265 3 169 1 322 3 
31 1 315 1 207 1 54 1 208 1 265 1 322 1 
31 1 315 1 207 1 43 1 208 1 265 1 169 1 312 1 322 1 
30 1 268 1 173 1 31 1 60 1 197 1 35 1 300 1 129 1 61 1 347 1 86 1 302 1 349 1 287 1 8 1 270 1 181 1 159 1 112 1 111 1 207 3 13 1 115 1 46 1 208 3 48 1 234 1 211 1 169 2 312 1 336 1 314 1 97 1 315 4 317 1 216 2 145 1 98 1 363 1 240 1 265 4 100 1 322 3 
268 1 52 1 315 2 207 1 60 1 208 2 265 2 148 1 322 1 
268 2 31 1 207 3 35 1 115 1 208 3 140 1 211 1 347 1 169 1 312 1 142 1 8 1 315 3 98 1 265 3 159 1 111 1 322 3 
268 1 207 2 208 2 166 1 301 1 169 1 312 1 315 2 265 2 322 2 
60 1 13 1 300 1 129 1 302 1 336 1 314 1 287 1 315 1 97 1 145 1 240 1 363 1 181 1 265 1 
60 1 13 1 129 1 302 1 336 1 314 1 287 1 351 1 315 1 145 1 41 1 240 1 363 1 181 1 265 1 
30 4 197 1 285 2 86 1 301 2 349 1 269 1 224 1 270 1 112 1 11 1 306 1 46 1 234 2 166 2 209 1 188 1 144 1 120 1 21 2 216 2 99 1 26 1 323 1 
31 1 315 1 207 1 208 1 347 1 265 1 331 1 322 1 
268 2 207 4 60 1 35 1 208 5 309 1 169 1 312 1 52 1 315 5 296 1 265 5 148 1 322 4 
31 1 315 2 207 2 54 1 208 2 331 1 265 2 322 2 
33 1 47 1 
33 1 47 1 
249 1 34 1 
249 1 34 1 
249 1 34 1 
33 1 47 1 253 1 
33 1 47 1 253 1 
33 1 47 1 243 1 
249 1 33 2 34 1 231 1 47 2 154 1 
33 1 47 1 253 1 
299 1 33 1 47 1 
299 1 33 1 47 1 
299 1 33 1 47 1 
0 1 134 1 33 2 233 1 47 2 140 1 210 2 211 2 154 1 105 3 294 2 178 1 277 2 179 1 91 2 90 1 65 1 111 2 282 2 
60 1 33 1 105 1 6 1 39 1 91 1 90 1 67 1 111 1 113 1 114 1 207 2 12 1 208 2 47 1 210 1 211 1 212 1 294 1 277 1 315 2 265 2 243 1 322 2 
126 1 362 1 276 1 
126 1 125 1 276 1 
362 2 125 1 137 1 176 1 88 1 276 3 
362 1 125 1 137 1 16 1 88 1 276 2 
362 1 125 1 137 1 88 2 276 2 
81 1 324 1 326 4 175 1 153 1 36 2 201 2 224 1 271 1 252 1 66 1 92 1 355 1 111 5 113 1 114 1 273 1 306 1 12 1 230 1 292 2 293 1 164 1 211 5 140 2 311 3 120 1 99 1 78 3 27 2 29 1 267 1 
324 2 343 1 326 7 175 1 201 6 224 3 271 1 252 3 227 1 66 6 92 3 355 1 111 9 72 1 273 2 306 3 12 4 94 1 334 5 292 6 335 1 164 1 293 2 211 9 140 5 311 9 120 3 121 5 319 1 99 3 242 1 78 8 27 6 29 2 267 2 
81 1 324 1 326 2 175 1 153 1 36 1 201 2 224 1 252 1 92 2 111 3 273 1 306 1 12 1 292 2 293 1 335 1 140 3 211 3 311 4 120 1 99 1 78 3 27 2 29 1 267 1 
81 1 324 1 326 3 175 1 153 1 36 2 201 4 224 2 252 2 227 1 92 3 111 4 72 1 273 1 306 2 12 2 94 1 292 4 293 1 335 1 140 4 211 4 311 7 120 2 99 2 78 5 27 4 29 1 267 1 
64 1 357 1 363 1 
51 1 363 1 
23 1 
363 1 181 1 
287 1 64 2 73 1 363 3 181 1 109 1 
287 1 363 1 181 1 
344 1 363 1 
30 7 297 1 101 1 74 1 234 3 209 2 188 3 75 1 275 1 141 1 224 1 21 4 99 1 320 1 182 1 110 2 183 1 
30 7 297 1 101 1 74 1 234 3 209 2 188 3 75 1 275 1 141 1 224 1 21 4 99 1 320 1 182 1 110 2 183 1 
30 7 297 1 101 1 74 1 234 3 209 2 188 3 49 1 75 1 275 1 141 1 224 1 21 4 99 1 320 1 182 1 110 2 183 1 
30 31 297 1 101 5 197 1 83 1 152 1 86 1 202 1 349 1 224 4 270 1 252 3 330 1 110 3 182 2 183 1 305 1 306 3 229 3 74 2 186 1 234 15 167 4 209 5 188 10 275 1 75 2 141 1 120 3 21 16 216 2 295 1 99 4 320 2 
30 9 101 1 197 2 86 2 349 2 224 1 270 2 131 1 330 1 110 2 182 1 183 1 256 1 74 1 234 4 209 3 188 4 275 1 75 1 141 1 21 5 216 4 99 1 320 1 
126 1 125 1 102 1 104 1 129 1 176 1 222 1 303 1 156 1 204 1 9 2 133 1 332 1 184 1 168 1 276 2 336 1 314 1 362 1 119 1 19 1 338 1 191 1 145 1 240 1 147 1 321 1 266 1 194 2 80 1 
126 1 125 1 102 1 176 1 104 1 129 1 303 1 156 1 204 1 9 3 133 1 332 1 184 2 307 1 168 1 276 2 336 1 314 1 361 1 362 1 119 1 338 1 190 1 191 1 145 1 240 1 147 1 321 1 194 3 80 1 
125 1 126 1 102 1 129 1 176 1 156 1 204 1 9 2 133 1 332 1 184 2 276 2 336 1 314 1 361 1 119 1 362 1 190 1 191 1 145 1 240 1 147 1 321 1 194 2 80 1 
58 1 284 1 129 1 104 1 40 1 156 2 181 1 9 1 332 2 290 1 307 1 13 1 168 1 336 1 314 1 119 2 145 1 262 1 240 1 363 1 321 2 219 1 194 1 
126 1 125 1 102 1 104 1 129 1 176 1 222 1 303 1 156 1 9 1 332 1 168 1 276 2 336 1 314 1 362 1 119 1 19 1 338 1 190 1 145 1 240 1 147 1 321 1 194 1 80 1 
37 1 
31 1 2 1 284 1 324 1 129 1 347 1 226 1 66 2 181 1 288 1 159 1 355 1 111 3 273 1 13 2 115 1 163 1 14 1 208 1 261 1 292 1 293 1 164 1 211 3 310 1 336 1 236 1 314 2 315 1 340 1 145 2 98 1 363 1 240 2 265 1 148 1 78 1 219 1 29 1 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 247 1 115 1 163 1 261 1 208 1 347 1 211 3 310 1 236 1 315 1 340 1 98 1 66 1 265 1 159 1 355 1 148 1 111 3 
31 1 2 1 273 1 115 1 163 1 208 1 261 1 164 1 293 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 29 1 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 163 1 115 1 261 1 208 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 
31 1 2 1 273 1 115 1 163 1 208 1 261 1 164 1 293 1 347 1 211 2 310 1 236 1 315 1 340 1 98 1 265 1 159 1 148 1 111 2 29 1 
30 6 60 2 197 1 285 1 301 1 86 1 349 1 269 1 224 1 270 1 110 1 183 1 112 1 357 1 74 1 46 1 166 1 209 2 234 3 188 2 75 1 275 1 141 1 21 3 216 2 99 1 
30 14 101 1 60 1 197 2 285 11 152 1 200 1 86 2 301 4 177 1 349 2 224 1 270 2 252 2 112 2 305 1 258 1 306 1 229 3 46 1 209 1 234 6 167 3 166 11 188 2 120 2 21 8 317 1 318 1 339 1 216 4 25 1 99 2 
30 2 268 1 60 1 197 1 35 1 300 1 129 1 302 1 301 1 86 1 349 1 287 1 270 1 181 1 206 1 112 1 258 1 207 1 42 1 13 1 46 1 208 1 234 1 17 1 336 1 314 1 97 1 315 2 21 1 317 1 145 1 216 2 318 1 363 1 240 1 24 1 265 2 322 1 
245 1 101 4 60 2 197 3 285 7 61 2 287 2 252 2 110 1 112 3 207 1 258 1 161 1 13 1 259 2 74 1 208 1 209 4 166 7 75 1 336 2 120 2 21 10 216 6 265 3 79 1 30 20 268 1 35 1 300 2 129 2 86 3 302 2 301 7 349 3 224 3 270 3 181 2 183 1 306 2 45 2 46 3 234 10 188 8 275 1 141 1 314 3 190 1 315 3 97 2 317 1 316 2 318 1 145 3 146 2 240 3 363 2 99 3 322 1 
283 1 30 2 268 1 284 1 197 2 129 2 86 2 349 2 155 1 304 2 269 1 270 2 181 2 228 1 112 2 207 1 13 2 162 1 208 1 46 2 95 1 234 1 18 1 336 2 237 1 314 8 190 1 315 1 21 1 317 1 145 7 216 4 318 1 363 3 240 8 265 1 219 1 266 1 322 1 
30 3 197 1 285 1 301 1 86 1 349 1 224 1 270 1 252 1 112 1 258 1 207 1 306 1 46 1 208 1 209 1 166 1 234 2 188 1 169 1 312 1 120 1 315 1 21 1 216 2 99 1 265 1 322 1 342 1 
30 2 101 1 197 1 285 1 46 1 166 1 188 1 301 1 86 1 349 1 269 1 144 1 120 1 270 1 21 2 216 2 99 1 112 1 
30 2 11 1 306 1 197 1 285 1 46 1 209 1 166 1 234 2 188 1 301 1 86 1 349 1 269 1 224 1 270 1 216 2 112 1 
30 4 101 1 197 1 285 2 86 1 301 2 349 1 269 1 224 1 270 1 252 1 112 1 306 1 46 1 166 2 234 2 209 1 188 2 120 1 21 2 216 2 99 1 
30 2 283 1 101 1 197 1 285 1 46 1 166 1 188 1 301 1 86 1 349 1 144 1 120 1 270 1 21 2 216 2 99 1 112 1 
30 2 283 1 11 1 306 1 197 1 285 1 46 1 209 1 166 1 234 2 188 1 301 1 86 1 349 1 224 1 270 1 216 2 112 1 
283 1 30 4 101 1 197 1 285 2 86 1 301 2 349 1 224 1 270 1 252 1 112 1 306 1 46 1 166 2 234 2 209 1 188 2 120 1 21 2 216 2 99 1 
30 4 101 1 197 1 285 2 86 1 301 2 349 1 224 1 270 1 252 1 112 1 306 1 46 1 166 2 234 2 209 1 188 2 120 1 21 2 216 2 99 1 
30 2 60 1 197 1 300 1 129 1 61 1 302 1 86 1 349 1 287 1 270 1 181 1 112 1 13 1 46 1 234 1 336 1 314 1 21 1 97 1 315 1 317 1 318 1 145 1 216 2 240 1 363 1 265 1 
30 2 60 1 197 1 129 1 302 1 86 1 349 1 287 1 351 1 270 1 41 1 181 1 112 1 135 1 13 1 46 1 234 1 336 1 314 1 21 1 315 1 317 1 318 1 145 1 216 2 240 1 363 1 265 1 
30 4 101 1 197 1 285 2 86 1 301 2 349 1 224 1 270 1 252 1 112 1 258 1 306 1 46 1 166 2 234 2 209 1 188 2 120 1 21 2 216 2 99 1 
30 4 101 1 197 1 285 2 300 1 129 1 61 1 301 2 302 1 86 1 349 1 287 1 224 1 270 1 252 1 181 1 112 1 306 1 46 1 209 1 234 2 166 2 188 2 336 1 314 1 120 1 21 2 97 1 315 1 145 1 216 2 146 1 240 1 363 1 99 1 265 1 266 1 
30 3 101 1 197 1 285 1 86 1 301 1 349 1 106 1 224 1 270 1 252 1 112 1 258 1 207 1 306 1 46 1 208 1 234 1 166 1 188 1 169 1 312 1 120 1 315 1 21 2 216 2 99 1 265 1 322 1 
101 4 150 1 197 3 3 1 152 1 252 4 330 1 110 1 68 1 257 1 74 1 117 1 167 4 209 4 75 1 120 4 21 20 216 6 30 41 298 1 82 1 345 1 346 1 221 1 86 3 349 3 224 5 270 3 353 2 131 1 132 1 183 1 305 3 306 4 229 3 44 1 234 21 188 8 313 4 275 1 141 1 53 1 99 5 
30 38 298 1 150 1 101 3 3 1 197 4 82 1 345 1 152 1 346 1 221 1 86 4 349 4 224 4 270 4 353 2 252 4 131 1 330 2 110 1 132 1 68 1 183 1 305 3 257 1 306 3 229 3 74 1 44 1 117 1 209 4 167 4 234 18 188 7 75 1 275 1 313 4 141 1 120 4 53 1 21 20 216 8 99 5 
30 52 298 1 150 1 101 7 197 2 82 1 345 1 152 2 346 1 200 2 221 1 86 2 349 2 224 8 270 2 353 1 252 7 131 1 330 1 110 1 132 1 183 1 305 2 257 1 306 7 229 4 74 1 44 1 117 1 209 7 167 4 234 25 188 14 75 1 275 1 313 4 141 1 120 7 53 1 21 27 216 4 99 8 
30 19 298 1 150 1 101 3 197 2 82 1 152 1 346 2 86 2 349 2 224 3 270 2 353 1 252 3 131 1 68 1 305 1 306 3 229 1 209 3 167 2 234 10 188 6 313 2 120 3 53 1 21 9 280 1 216 4 99 3 
30 26 298 1 101 2 150 1 197 3 82 1 345 1 346 1 221 1 86 3 349 3 224 2 270 3 353 2 252 3 131 1 330 2 132 1 305 2 257 1 306 2 229 2 44 1 117 1 209 2 234 12 167 2 188 4 313 4 120 3 53 2 21 14 216 6 99 3 
0 1 294 1 277 1 91 1 33 1 4 1 233 1 47 1 210 1 154 1 
39 1 243 1 
337 1 294 1 277 1 91 1 33 1 263 1 108 1 47 1 210 1 
0 1 33 1 233 1 47 1 140 1 211 1 210 1 154 1 105 2 294 1 178 1 277 1 179 1 90 1 91 1 65 1 111 1 282 1 
0 1 33 1 233 1 47 1 140 1 211 1 210 1 154 1 105 2 294 1 178 1 277 1 179 1 90 1 91 1 65 1 111 1 282 1 
0 1 33 1 233 1 47 1 140 1 211 1 210 1 154 1 105 2 294 1 178 1 277 1 179 1 90 1 91 1 65 1 111 1 282 1 
55 1 231 1 253 1 
55 1 231 1 253 1 
70 1 299 1 
70 1 299 1 231 1 
6 1 212 1 
60 1 33 1 326 1 248 1 105 1 6 1 39 1 91 1 65 1 67 1 111 1 113 1 114 1 207 2 12 1 208 2 47 1 211 1 210 1 212 1 294 1 277 1 315 2 265 2 243 1 282 1 322 2 
55 1 253 1 
70 1 299 1 231 1 
30 2 127 1 220 1 197 1 129 1 86 1 349 1 304 2 270 1 157 1 181 1 228 1 112 1 258 1 291 1 138 1 46 1 208 2 95 1 234 1 336 1 314 2 315 2 21 1 317 1 216 2 318 1 145 2 363 1 240 2 265 2 
126 1 125 1 102 1 176 1 129 1 276 2 336 1 303 1 314 2 362 1 119 1 190 1 145 2 240 2 241 1 56 1 218 1 266 1 80 1 
126 1 125 1 102 1 176 1 129 1 139 1 276 2 303 1 336 1 314 1 362 1 119 1 190 1 145 1 240 1 241 1 80 1 
58 1 284 1 13 1 129 1 327 1 336 1 314 1 119 1 145 1 363 1 240 1 181 1 56 1 219 1 
126 1 125 1 102 1 176 1 129 1 276 2 303 1 336 1 314 1 362 1 119 1 190 1 145 1 240 1 241 1 56 1 218 1 80 1 
308 1 
38 1 107 1 357 1 175 1 292 1 140 1 78 1 
175 1 66 1 92 1 355 1 111 1 69 1 272 1 273 1 292 1 187 1 293 1 164 1 140 2 211 1 311 1 78 1 29 1 
1 2 324 2 151 2 286 1 201 6 107 1 287 3 64 2 329 2 252 2 66 5 109 1 288 1 159 2 111 5 13 1 292 8 164 4 293 4 211 5 336 3 214 2 120 2 170 1 122 2 264 1 78 9 27 6 266 1 29 4 344 2 175 2 129 4 84 1 38 1 224 2 181 3 92 6 355 3 273 4 306 2 358 2 45 2 140 8 311 12 51 3 314 3 189 1 279 2 145 3 363 10 240 3 99 2 193 2 
324 1 175 2 345 1 221 1 201 5 224 2 329 2 252 2 66 1 92 3 288 1 355 1 111 1 305 1 257 1 273 2 306 2 229 1 44 1 292 5 293 2 164 2 117 1 211 1 167 1 140 5 311 6 96 1 120 2 278 1 279 1 99 2 78 8 27 5 29 2 
173 1 31 1 199 1 350 1 224 1 180 1 329 2 183 1 111 1 185 1 273 1 207 1 74 1 292 2 208 1 293 1 164 1 211 1 169 1 75 1 315 1 279 1 54 1 99 2 265 1 78 2 29 1 322 1 
273 1 175 1 292 1 164 1 293 1 140 1 38 1 107 1 78 1 29 1 
306 2 45 1 292 5 140 5 201 5 311 10 120 2 224 2 279 1 329 2 252 2 99 2 92 5 78 5 27 5 
175 1 66 1 140 1 211 1 355 1 111 1 
284 1 324 2 196 1 129 1 226 1 352 1 66 4 181 1 288 2 355 2 111 3 273 2 13 2 14 1 292 2 335 1 293 2 164 1 211 3 336 1 314 4 170 1 145 4 363 1 240 4 264 2 78 2 219 1 29 2 
30 1 173 1 60 1 197 1 300 1 61 1 129 1 86 1 302 1 349 1 287 1 270 1 181 1 112 1 207 2 13 1 208 2 46 1 234 1 169 2 336 1 314 1 315 3 97 1 317 1 216 2 145 1 240 1 363 1 265 3 100 1 322 2 
324 1 273 1 175 2 292 2 164 1 293 1 140 4 201 2 311 4 92 2 288 1 110 1 78 1 27 2 29 1 
250 1 91 1 210 1 
250 1 91 1 210 1 
91 1 198 1 233 1 210 1 212 1 
250 1 91 1 210 1 
91 1 116 1 210 1 
91 1 116 1 210 1 
91 1 116 1 210 1 
91 1 210 1 
33 1 47 1 
30 8 305 1 257 1 197 1 229 1 74 1 209 2 167 1 234 4 188 2 86 1 75 1 275 1 141 1 349 1 224 1 21 4 270 1 216 2 131 1 99 1 110 1 183 1 
30 11 101 1 197 2 152 1 86 2 349 2 224 1 270 2 252 1 131 1 110 1 183 1 305 1 257 1 229 1 74 1 274 1 209 2 234 5 167 2 188 3 75 1 275 1 141 1 120 1 21 6 216 4 99 2 
30 19 101 1 197 3 345 1 221 1 86 3 349 3 224 3 270 3 252 2 131 1 330 1 110 1 183 1 305 1 257 1 306 2 229 1 74 1 44 1 274 1 117 1 234 10 167 1 209 3 188 4 75 1 275 1 141 1 120 2 21 9 216 6 99 3 
30 17 101 2 197 3 345 1 221 1 86 3 349 3 224 2 270 3 252 2 131 1 330 1 110 1 183 1 305 1 257 1 306 1 229 1 74 1 44 1 274 1 117 1 234 7 167 1 209 3 188 5 75 1 275 1 141 1 120 2 21 10 216 6 99 3 
30 8 305 1 257 1 197 1 229 1 74 1 209 2 167 1 234 4 188 2 86 1 75 1 275 1 141 1 349 1 224 1 21 4 270 1 216 2 131 1 99 1 110 1 183 1 
30 12 101 1 197 1 345 1 221 1 86 1 349 1 224 2 270 1 252 2 131 1 305 1 257 1 306 2 229 1 44 1 117 1 234 6 167 1 209 1 188 2 120 2 21 6 216 2 99 2 
30 18 101 2 197 4 345 1 221 1 86 4 349 4 224 2 270 4 252 2 131 1 330 2 110 1 183 1 305 1 257 1 306 1 229 1 74 1 44 1 274 1 117 1 234 8 167 1 209 3 188 5 75 1 275 1 141 1 120 2 21 10 216 8 99 3 
30 16 101 3 197 4 345 1 221 1 86 4 349 4 224 2 270 4 252 3 131 1 330 2 68 1 305 1 257 1 306 2 229 1 44 1 117 1 234 7 167 1 209 3 188 6 120 3 21 9 216 8 99 3 
30 7 101 3 74 3 234 4 209 3 188 6 275 1 75 3 141 2 224 1 21 3 99 1 183 1 
30 18 101 1 197 4 345 1 221 1 86 4 349 4 224 2 270 4 252 2 131 1 330 2 110 1 183 1 68 1 305 1 257 1 306 1 229 1 74 1 44 1 117 1 234 8 167 1 209 3 188 4 75 1 275 1 141 1 120 2 21 10 216 8 99 3 
30 8 101 1 197 2 74 1 234 4 209 2 188 3 86 2 275 1 75 1 349 2 141 1 224 1 21 4 270 2 216 4 99 1 330 1 110 1 183 1 
30 6 357 1 74 1 234 3 209 2 188 2 275 1 75 1 141 1 224 1 21 3 99 1 110 1 183 1 
30 4 101 1 306 1 197 1 274 1 209 1 234 2 188 2 86 1 349 1 120 1 224 1 270 1 21 2 216 2 252 1 99 1 
30 7 305 1 101 1 306 1 229 1 152 1 209 1 167 2 234 4 188 2 120 1 224 1 21 3 252 1 99 1 
30 23 149 1 101 4 197 2 152 1 200 1 86 2 177 1 349 2 224 3 270 2 252 2 330 2 110 1 183 1 306 2 229 2 74 2 234 12 167 2 209 5 188 9 75 2 275 1 141 1 120 2 21 11 216 4 99 3 
30 1 234 1 167 1 
30 1 21 1 229 1 
30 6 101 1 306 1 197 1 45 1 274 1 234 3 209 2 188 3 86 1 349 1 120 1 224 1 270 1 21 3 216 2 252 1 99 1 
30 12 101 1 197 1 345 1 221 1 86 1 349 1 224 2 270 1 252 2 131 1 305 1 257 1 306 2 229 1 44 1 117 1 234 6 167 1 209 1 188 2 120 2 21 6 216 2 99 2 
30 6 101 1 74 1 234 3 209 1 188 2 75 1 224 1 21 3 99 1 183 1 
149 1 30 3 101 1 197 1 74 1 209 1 234 2 188 2 86 1 75 1 275 1 141 1 349 1 21 1 270 1 216 2 330 1 
30 10 101 2 197 1 74 2 209 3 234 5 188 5 86 1 75 2 349 1 224 2 270 1 21 5 180 1 216 2 131 1 99 2 183 1 
30 2 101 1 197 1 188 1 86 1 349 1 120 1 270 1 21 2 216 2 131 1 99 1 
30 4 101 1 306 1 197 1 209 1 234 2 188 2 86 1 349 1 120 1 224 1 270 1 21 2 216 2 252 1 131 1 99 1 
149 1 30 3 101 1 197 3 74 1 234 2 209 1 188 2 86 3 75 1 349 3 270 3 21 1 216 6 131 1 330 1 68 1 
149 1 30 34 101 5 197 5 152 1 202 1 86 5 349 5 224 5 270 5 252 3 131 1 330 2 110 1 183 2 68 1 305 1 306 3 229 3 74 3 186 1 274 1 234 18 167 4 209 7 188 12 75 3 275 1 141 1 120 3 21 16 295 1 216 10 99 5 
52 1 315 1 60 1 208 1 265 1 148 1 87 1 
195 1 60 1 208 1 87 1 52 1 215 1 315 1 123 1 124 1 341 1 265 1 148 1 
314 1 284 1 357 1 145 1 13 1 363 1 240 1 129 1 181 1 219 1 336 1 
268 1 207 1 60 1 13 1 129 1 208 1 302 1 336 1 314 1 287 1 315 2 97 1 145 1 363 1 240 1 181 1 265 2 322 1 
268 1 31 1 207 2 60 1 344 1 151 1 129 1 208 2 347 1 302 1 336 1 314 1 287 2 315 2 97 1 145 1 98 1 363 3 240 1 181 2 265 2 264 1 322 1 
268 1 31 1 207 2 60 1 344 1 151 1 129 1 208 2 347 1 302 1 336 1 314 2 287 2 315 2 145 2 98 1 41 1 363 3 240 2 181 2 265 2 264 1 281 1 322 1 
356 1 13 1 344 1 175 1 151 1 129 1 140 1 211 2 336 1 51 1 314 3 287 1 64 1 217 1 145 3 240 3 363 4 66 1 181 1 264 1 159 1 281 1 111 2 
13 1 344 1 175 1 358 1 151 1 129 1 140 1 211 2 336 1 51 1 314 3 287 1 64 1 145 3 240 3 363 4 66 1 181 1 264 1 159 1 281 1 111 2 
314 1 145 1 162 1 240 1 129 1 336 1 
13 2 162 1 129 3 95 1 18 1 336 2 304 1 237 1 155 1 314 7 287 1 190 1 22 1 171 1 145 6 240 7 363 3 109 1 181 2 158 1 266 1 
60 2 197 2 285 1 61 1 287 1 110 1 112 2 207 1 258 1 259 1 74 1 208 1 209 2 166 1 75 1 336 1 21 3 216 4 265 2 266 1 30 6 268 1 300 1 129 1 301 1 86 2 302 1 349 2 224 1 270 2 181 1 183 1 138 1 46 2 234 3 188 2 275 1 141 1 314 1 97 1 315 2 145 1 146 1 240 1 363 1 99 1 322 1 
1 1 326 1 175 1 38 1 107 1 64 1 66 2 159 1 355 1 111 3 273 2 13 1 358 1 292 1 293 2 164 2 140 1 211 3 51 1 314 1 170 1 145 1 122 1 240 1 363 2 193 1 78 1 29 2 
162 1 129 2 286 1 336 1 314 2 287 1 64 1 145 2 240 2 363 2 109 1 181 1 266 1 
284 1 13 1 129 1 118 1 336 1 314 4 145 4 240 4 363 1 181 1 281 1 219 1 266 1 
129 2 336 1 314 2 213 1 238 1 287 1 171 1 145 2 240 2 363 1 181 1 264 1 158 1 79 1 
314 1 126 1 125 1 102 1 145 1 13 1 240 1 129 1 276 1 336 1 
314 2 127 1 190 1 145 2 363 1 240 2 129 1 181 1 95 1 336 1 266 1 
284 1 13 1 129 2 95 1 118 1 336 2 155 1 237 1 314 5 145 4 240 5 363 3 181 2 264 1 219 1 266 1 
284 1 13 1 129 2 95 1 118 1 336 2 237 1 314 5 145 4 240 5 363 3 181 2 264 1 219 1 266 1 244 1 
268 1 207 1 60 1 13 1 129 1 208 1 302 1 336 1 314 1 287 1 315 2 145 1 41 1 363 1 240 1 181 1 265 2 322 1 
129 2 336 1 314 1 287 1 22 1 171 1 145 1 240 1 363 1 109 1 181 1 264 1 158 1 
254 1 60 1 333 1 232 1 235 1 
254 1 31 1 60 1 333 2 326 1 115 1 175 1 232 2 140 1 347 1 211 2 62 1 235 2 8 1 239 1 98 1 205 1 159 1 111 2 
254 1 220 1 291 1 333 1 208 1 235 1 315 1 157 1 265 1 
254 1 205 1 62 1 
204 1 191 1 357 1 133 1 
204 1 191 1 104 1 9 1 168 1 133 1 194 1 
9 1 321 1 332 1 
328 2 71 1 19 1 225 1 204 1 191 1 104 1 9 3 168 1 133 1 203 1 194 3 
184 1 204 1 325 1 191 1 104 1 9 2 168 1 133 1 194 2 
126 1 160 1 104 1 168 1 276 1 143 1 19 1 362 1 204 1 9 1 194 1 
19 1 204 1 191 1 104 1 9 1 168 1 194 1 
19 1 191 2 104 1 9 1 168 1 133 1 194 1 
103 1 104 2 168 2 359 1 19 1 204 1 191 1 9 2 354 1 194 2 
184 2 160 1 104 1 168 1 360 1 89 1 19 1 204 2 191 1 172 1 9 3 133 1 194 3 
184 1 125 1 126 1 104 1 176 1 168 1 276 2 7 1 19 1 362 1 204 1 191 1 9 2 133 1 194 2 
184 2 325 1 160 1 104 2 128 1 168 2 360 1 19 1 204 2 191 1 9 4 133 1 194 4 
19 1 204 1 191 1 104 1 9 1 168 1 133 1 194 1 
71 1 184 2 160 1 104 1 168 1 203 1 360 1 328 1 20 1 204 3 191 2 9 4 133 2 194 4 
184 1 19 1 204 1 191 1 104 1 165 1 9 2 168 1 133 1 50 1 93 1 194 2 
71 1 104 1 168 1 203 2 328 2 130 1 19 1 204 1 191 1 9 3 133 1 194 3 
32 2 204 2 260 1 63 1 
19 1 104 1 9 1 168 1 28 1 194 1 
184 1 89 1 19 1 204 1 191 1 104 1 9 2 168 1 133 1 194 2 
76 1 
19 1 204 1 191 1 104 1 9 1 168 1 133 1 194 1 
184 1 104 1 168 1 328 1 89 1 19 1 204 1 191 1 9 3 133 1 194 3 
20 1 204 1 160 1 360 1 
204 1 191 1 

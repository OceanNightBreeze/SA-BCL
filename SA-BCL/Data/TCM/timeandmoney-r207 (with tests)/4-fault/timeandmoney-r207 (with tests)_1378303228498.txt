#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
57 1 282 1 259 3 306 4 80 1 81 1 266 9 289 2 226 9 290 2 271 1 313 1 42 2 165 1 98 1 141 5 125 6 349 2 70 2 251 1 214 1 252 2 296 1 144 1 104 1 298 1 109 2 131 1 
57 1 282 1 259 3 306 4 80 1 81 1 266 9 289 2 226 9 290 2 271 1 313 1 42 2 165 1 98 1 141 5 125 6 349 2 251 1 214 1 70 2 252 2 296 1 144 1 104 1 298 1 109 2 131 1 
57 1 282 1 259 4 306 5 80 1 81 1 266 10 289 2 226 10 290 2 271 1 313 1 42 2 165 1 98 1 141 6 125 7 349 2 251 1 214 1 70 2 252 2 296 1 144 1 104 1 298 1 109 2 131 1 
57 1 282 1 259 2 306 3 80 1 81 1 266 7 289 2 226 7 290 2 271 1 313 1 42 2 165 1 98 1 141 4 125 4 349 2 251 1 214 1 70 1 252 2 296 1 144 1 298 1 109 2 131 1 
98 1 57 1 259 1 125 3 141 3 306 2 214 1 70 2 252 1 289 1 266 4 104 1 298 1 290 1 226 4 109 1 313 1 42 1 
98 1 57 1 282 1 141 1 1 1 219 1 349 1 214 1 252 1 289 1 266 2 365 1 290 1 226 2 109 1 131 1 
98 1 57 1 259 1 125 1 141 2 306 1 226 3 290 2 349 1 214 1 165 1 266 3 289 2 
98 1 57 1 209 1 259 3 141 5 125 7 306 4 349 1 70 2 214 1 252 1 296 1 289 2 266 9 104 1 298 1 241 1 290 2 226 9 271 1 109 1 313 1 42 1 165 1 
98 1 57 1 209 1 259 3 141 5 125 7 306 4 349 1 70 2 214 1 252 1 296 1 289 2 266 9 104 1 298 1 241 1 290 2 226 9 271 1 109 1 313 1 42 1 165 1 
28 1 179 1 256 1 
28 1 133 2 2 1 
253 2 37 2 291 1 110 2 228 2 288 2 63 1 206 2 
193 2 238 1 335 1 305 1 30 1 285 1 288 2 5 1 343 2 224 1 37 2 312 1 291 1 205 1 40 1 62 1 63 1 64 1 206 2 315 1 168 1 14 1 228 3 183 2 19 1 253 2 184 1 255 1 186 1 376 1 330 1 147 1 379 1 110 3 148 1 76 2 26 2 
253 1 115 1 145 1 37 1 375 1 291 1 110 1 228 1 288 1 206 1 
28 1 167 1 212 1 228 1 229 1 86 1 179 1 73 1 92 1 37 1 107 1 375 1 110 1 151 1 
28 1 167 1 228 1 229 1 288 1 86 2 253 1 179 1 73 2 37 1 107 1 375 1 110 1 206 1 151 1 
279 1 73 1 216 1 257 1 86 1 
248 1 28 1 115 1 228 1 143 1 288 1 86 2 265 1 253 1 179 1 279 1 145 1 73 2 37 1 375 1 291 1 216 1 110 1 206 1 
73 1 216 1 86 1 
248 1 115 1 228 1 288 1 86 1 253 1 279 1 73 1 145 1 37 1 375 1 291 1 110 1 206 1 
28 1 
28 1 179 1 279 1 73 2 38 1 216 1 265 1 86 2 
28 1 320 1 138 2 166 1 304 1 78 1 48 1 265 1 86 5 278 1 179 1 279 2 73 5 39 1 216 2 60 2 333 1 301 1 112 2 
256 1 63 1 
65 1 228 2 353 1 288 1 253 1 37 2 110 2 206 1 63 2 
45 1 139 1 101 1 
335 1 30 1 14 1 285 1 264 1 228 1 343 1 183 1 19 1 184 1 224 1 110 1 148 1 379 1 63 1 26 1 
335 1 169 1 30 1 14 1 285 1 101 1 228 2 288 1 325 1 343 1 19 1 183 1 184 1 224 1 37 1 379 1 148 1 110 2 206 1 26 1 
253 1 169 1 37 3 110 3 228 3 288 3 63 1 206 3 
115 1 37 1 375 1 110 1 228 1 288 1 206 1 
253 1 65 1 37 1 375 1 110 1 228 1 353 1 288 1 206 1 
193 1 238 1 335 1 305 1 30 1 285 1 288 3 5 1 86 1 343 1 224 1 269 1 37 3 312 1 291 1 205 1 63 1 64 1 206 3 315 1 65 1 167 1 169 1 14 1 228 4 229 1 127 1 325 1 19 1 183 1 184 1 253 2 255 1 73 1 376 1 107 1 375 1 330 1 379 1 148 1 110 4 76 2 151 1 26 1 
113 1 92 1 169 1 37 2 110 2 228 2 288 1 63 1 206 1 
65 1 362 1 28 1 167 1 169 2 228 3 229 1 288 3 127 1 86 1 325 1 253 1 73 1 37 3 375 1 107 1 110 3 206 3 151 1 
45 1 65 1 169 1 101 1 228 2 288 2 253 1 37 2 110 2 206 2 
335 1 14 1 30 1 285 1 228 1 343 1 183 1 19 1 184 1 224 1 110 1 148 1 379 1 63 1 26 1 
335 1 30 1 285 1 228 1 343 1 183 1 19 1 224 1 225 1 233 1 110 1 148 1 379 1 63 1 26 1 
238 1 193 4 218 1 56 1 305 1 308 1 5 1 223 1 95 1 8 1 62 2 64 2 315 1 45 2 99 1 293 1 139 2 66 1 101 2 171 1 172 1 376 1 330 1 76 2 
167 1 37 1 375 1 110 1 228 1 288 1 206 1 75 1 
65 1 113 1 182 1 347 1 169 2 228 5 288 4 325 1 253 1 92 1 37 5 110 5 206 4 63 1 
115 1 37 2 375 1 110 2 228 2 288 2 206 2 75 1 
181 1 10 1 
181 1 10 1 
154 1 83 1 
154 1 83 1 
154 1 83 1 
368 1 181 1 10 1 
368 1 181 1 10 1 
232 1 181 1 10 1 
356 1 154 1 118 1 83 1 181 2 10 2 
368 1 181 1 10 1 
199 1 181 1 10 1 
199 1 181 1 10 1 
199 1 181 1 10 1 
28 1 263 1 135 1 136 3 275 2 86 2 73 2 118 1 105 1 231 2 270 1 108 2 192 1 10 2 181 2 164 1 163 2 272 1 121 2 
197 1 136 1 288 2 287 1 86 1 37 2 6 1 270 1 247 1 63 1 206 2 181 1 10 1 163 1 121 1 228 2 275 1 323 1 354 1 73 1 231 1 232 1 110 2 111 1 
109 1 42 1 252 1 
1 1 109 1 252 1 
1 1 196 1 54 1 294 1 42 2 252 3 
240 1 1 1 54 1 294 1 42 1 252 2 
1 1 54 2 294 1 42 1 252 2 
56 1 258 1 28 2 304 1 133 3 78 2 2 1 260 1 79 1 82 2 308 1 265 1 86 5 179 1 204 1 8 1 60 1 247 1 99 1 138 1 15 1 49 2 354 1 373 2 173 1 278 3 279 4 73 5 215 1 216 1 111 1 112 1 
56 3 28 5 304 1 133 9 78 6 2 3 220 5 79 2 363 1 308 3 86 9 265 1 33 1 179 1 204 2 8 3 247 4 60 2 61 1 162 1 99 3 138 2 47 1 49 6 295 1 373 6 173 1 278 8 279 7 73 9 215 3 216 6 257 5 301 1 112 2 
56 1 28 3 258 1 78 2 133 4 2 2 260 1 79 1 82 1 308 1 86 3 179 1 204 1 8 1 60 1 247 1 99 1 138 1 49 2 278 3 373 2 279 2 73 3 215 1 301 1 112 1 
56 2 28 4 258 1 133 7 78 4 2 3 260 1 79 1 363 1 82 2 308 2 86 4 179 1 33 1 204 1 8 2 60 1 247 2 99 2 138 1 47 1 49 4 373 4 278 5 279 3 73 4 215 2 301 1 112 1 
256 1 30 1 222 1 
30 1 51 1 
370 1 
30 1 379 1 
335 1 261 1 30 3 379 1 24 1 222 2 
335 1 30 1 379 1 
30 1 190 1 
193 7 292 1 99 1 338 1 58 1 350 1 308 1 198 1 69 1 200 1 103 1 172 3 95 2 378 2 62 4 64 3 236 1 
193 7 292 1 99 1 338 1 58 1 350 1 308 1 198 1 69 1 200 1 103 1 172 3 95 2 378 2 62 4 64 3 236 1 
193 7 292 1 99 1 338 1 58 1 350 1 308 1 198 1 69 1 200 1 103 1 172 3 187 1 95 2 378 2 62 4 64 3 236 1 
238 1 193 31 56 3 177 1 338 2 58 1 198 2 308 4 5 1 200 5 59 4 95 5 8 3 345 1 62 16 64 15 315 1 11 1 292 1 99 4 208 1 46 1 350 1 276 1 69 2 103 1 172 10 374 1 22 3 215 3 330 1 378 3 236 2 76 2 
238 2 193 9 338 1 58 1 308 1 198 1 5 2 200 1 159 1 95 3 62 5 64 4 315 2 273 1 99 1 208 1 350 1 69 1 172 4 103 1 330 2 378 2 236 1 76 4 
57 1 152 1 1 1 196 1 239 1 343 1 266 2 289 1 89 1 226 2 290 1 42 1 317 1 98 1 141 1 125 1 349 1 17 1 214 1 252 2 183 1 19 1 185 1 358 1 109 1 377 1 148 1 130 1 26 1 381 1 
27 1 57 1 152 1 1 1 196 1 239 1 343 1 266 3 289 1 89 1 90 1 226 3 290 1 42 1 317 1 98 1 141 1 125 2 349 1 17 1 18 1 252 2 183 1 19 1 109 1 377 1 148 1 130 1 26 1 381 1 
57 1 1 1 196 1 239 1 343 1 266 2 90 1 226 2 42 1 317 1 98 1 141 1 125 2 349 1 17 1 18 1 252 2 183 1 19 1 377 1 109 1 148 1 130 1 26 1 381 1 
27 1 153 1 284 1 30 1 285 1 239 2 343 1 266 1 289 1 226 1 290 1 160 1 348 1 349 2 297 1 183 1 19 1 21 1 377 2 148 1 379 1 130 2 26 1 
152 1 1 1 196 1 239 1 343 1 266 1 289 1 89 1 90 1 226 1 290 1 42 1 317 1 349 1 17 1 214 1 252 2 183 1 19 1 185 1 109 1 377 1 148 1 130 1 26 1 381 1 
67 1 
0 1 2 2 284 1 3 2 285 2 343 2 244 2 204 1 60 1 120 1 167 1 210 4 212 1 211 1 352 2 297 1 19 1 73 5 216 6 26 2 28 2 304 1 133 2 78 2 30 1 84 1 307 1 134 1 265 3 86 5 32 1 267 2 179 1 92 1 37 1 367 1 316 2 138 1 102 1 228 1 229 1 183 2 278 2 326 1 106 1 107 1 375 1 234 2 331 2 379 1 148 1 110 1 237 1 112 1 151 1 
167 1 0 1 210 2 211 1 212 1 102 1 228 1 229 1 265 1 86 3 73 3 326 1 92 1 38 1 244 1 37 1 216 2 375 1 107 1 110 1 120 1 151 1 
0 1 28 1 86 3 265 1 179 1 92 1 37 1 38 1 120 1 167 1 210 3 212 1 211 1 228 1 102 1 229 1 326 1 73 3 216 1 107 1 375 1 110 1 234 1 151 1 
0 1 28 1 265 1 86 3 267 1 179 1 92 1 38 1 37 1 244 1 120 1 167 1 210 3 212 1 211 1 228 1 102 1 229 1 326 1 73 3 107 1 375 1 216 2 110 1 234 1 151 1 
0 1 2 2 3 2 244 4 246 1 60 1 120 1 167 1 210 6 211 1 212 1 352 2 73 5 216 7 302 1 28 5 304 1 78 1 221 1 86 5 265 3 267 4 179 5 92 1 38 1 37 1 180 1 367 1 316 2 138 1 228 1 102 1 229 1 278 1 326 1 106 1 375 1 107 1 110 1 234 4 331 2 149 1 151 1 112 1 
0 1 2 2 3 2 244 2 60 1 120 1 167 1 210 4 211 1 212 1 352 2 73 4 216 4 28 2 304 1 78 1 133 2 86 4 265 2 267 2 32 1 179 1 92 1 37 1 367 1 316 2 138 1 228 1 102 1 229 1 278 1 326 1 106 1 375 1 107 1 110 1 331 2 234 2 151 1 112 1 
28 1 0 1 304 1 78 1 2 2 3 2 221 1 265 2 86 4 267 2 179 1 92 1 244 2 180 1 37 1 246 1 60 1 120 1 367 1 316 2 138 1 167 1 210 4 212 1 211 1 228 1 102 1 352 2 229 1 278 1 326 1 73 4 106 1 216 4 107 1 375 1 234 2 331 2 110 1 151 1 112 1 
28 1 0 1 304 1 78 1 2 2 3 2 221 1 265 2 86 4 267 2 179 1 92 1 244 2 180 1 37 1 246 1 60 1 120 1 367 1 316 2 138 1 167 1 210 4 212 1 211 1 228 1 102 1 352 2 229 1 278 1 326 1 73 4 106 1 216 4 107 1 375 1 234 2 331 2 110 1 151 1 112 1 
28 1 0 1 304 1 133 2 78 1 3 2 265 2 86 4 364 1 267 2 179 1 92 1 244 2 180 1 37 1 60 1 120 1 41 1 316 2 138 1 167 1 210 4 212 1 211 1 228 1 102 1 229 1 322 1 372 2 278 1 326 1 73 4 23 2 106 1 216 4 107 1 375 1 234 2 110 1 151 1 112 1 
28 1 0 1 304 1 78 1 2 2 3 2 221 1 265 2 86 4 267 3 179 1 92 1 180 1 37 1 244 3 246 1 60 1 120 1 367 1 316 2 138 1 167 1 210 5 212 1 211 1 228 1 102 1 352 2 229 1 278 1 326 1 73 4 106 1 107 1 375 1 216 5 331 2 110 1 234 3 149 1 112 1 151 1 
28 1 0 1 304 1 78 1 2 2 3 2 221 1 265 2 86 4 267 3 179 1 92 1 180 1 37 1 244 3 246 1 60 1 120 1 367 1 316 2 138 1 167 1 210 5 212 1 211 1 228 1 102 1 352 2 229 1 278 1 326 1 73 4 106 1 107 1 375 1 216 5 331 2 110 1 234 3 149 1 112 1 151 1 
0 1 3 2 244 2 60 1 120 1 167 1 210 4 211 1 212 1 73 4 23 2 216 4 28 1 304 1 78 1 133 2 86 4 265 2 364 1 267 2 32 1 179 1 92 1 37 1 316 2 138 1 228 1 102 1 229 1 372 2 278 1 326 1 106 1 375 1 107 1 110 1 234 2 151 1 112 1 
238 1 193 6 338 1 305 1 58 1 308 1 5 1 95 2 62 3 64 3 63 2 315 1 45 1 99 1 293 1 139 1 101 1 350 1 172 2 103 1 256 1 376 1 330 1 378 1 236 1 76 2 
238 2 193 14 56 2 177 1 305 2 308 2 5 2 200 1 312 1 95 1 59 3 8 1 62 8 63 1 64 6 315 2 11 1 45 4 99 1 100 1 139 11 213 1 101 11 230 1 172 2 22 3 215 2 376 1 330 2 147 1 235 1 176 1 76 4 
238 1 193 2 335 1 305 1 30 1 155 1 285 1 264 1 341 1 288 1 5 1 343 1 224 1 37 1 312 1 62 1 63 1 206 1 64 1 315 1 44 1 45 1 169 1 14 1 228 2 325 1 19 1 183 1 184 1 376 1 330 1 379 1 148 1 110 2 147 1 176 1 26 1 76 2 
238 3 193 20 56 2 338 1 335 2 114 2 58 1 285 1 288 1 5 3 343 3 200 4 344 1 8 2 62 10 63 2 64 10 206 1 169 1 14 2 350 1 128 1 19 2 172 8 20 1 255 2 215 2 176 1 26 3 76 6 305 3 30 2 308 3 224 2 90 1 37 1 312 1 95 4 315 3 43 2 45 7 99 3 139 7 101 7 228 3 324 2 325 1 103 1 183 3 52 2 184 2 376 3 330 3 378 1 147 1 110 3 148 2 379 2 236 1 
238 2 193 2 305 2 284 1 30 3 285 2 286 1 288 1 5 2 343 8 90 1 37 1 245 1 312 1 7 1 62 1 206 1 64 1 315 2 207 1 293 1 168 2 169 1 228 1 297 1 19 2 183 8 357 1 174 1 188 1 358 1 376 2 330 2 110 1 148 2 147 1 379 2 26 7 76 4 
238 1 193 3 56 1 305 1 308 1 288 1 5 1 268 1 37 1 95 1 8 1 62 1 206 1 64 2 315 1 45 1 65 1 99 1 139 1 101 1 228 1 172 1 253 1 215 1 376 1 330 1 110 1 176 1 76 2 
45 1 193 2 238 1 56 1 139 1 293 1 305 1 101 1 308 1 171 1 5 1 200 1 172 1 376 1 330 1 62 2 315 1 76 2 
45 1 193 2 238 1 99 1 139 1 293 1 305 1 66 1 101 1 5 1 172 1 95 1 376 1 330 1 8 1 64 2 315 1 76 2 
238 1 193 4 56 1 305 1 308 1 5 1 200 1 95 1 8 1 62 2 64 2 315 1 45 2 99 1 293 1 139 2 101 2 172 2 215 1 376 1 330 1 76 2 
45 1 193 2 238 1 56 1 139 1 305 1 101 1 308 1 171 1 5 1 200 1 172 1 7 1 376 1 330 1 62 2 315 1 76 2 
45 1 193 2 238 1 99 1 139 1 305 1 66 1 101 1 5 1 172 1 95 1 7 1 376 1 330 1 8 1 64 2 315 1 76 2 
238 1 193 4 56 1 305 1 308 1 5 1 200 1 7 1 95 1 8 1 62 2 64 2 315 1 45 2 99 1 139 2 101 2 172 2 215 1 376 1 330 1 76 2 
193 4 238 1 56 1 305 1 308 1 5 1 200 1 95 1 8 1 62 2 64 2 315 1 45 2 99 1 139 2 101 2 172 2 215 1 376 1 330 1 76 2 
193 2 238 1 335 1 305 1 30 1 285 1 5 1 343 1 224 1 312 1 62 1 63 1 64 1 315 1 14 1 228 1 19 1 183 1 184 1 255 1 376 1 330 1 147 1 379 1 148 1 110 1 26 1 76 2 
193 2 238 1 335 1 305 1 30 1 285 1 5 1 343 1 201 1 224 1 225 1 312 1 62 1 63 1 64 1 315 1 228 1 19 1 183 1 233 1 376 1 330 1 147 1 379 1 148 1 110 1 26 1 76 2 
238 1 193 4 56 1 305 1 308 1 5 1 200 1 95 1 8 1 62 2 64 2 315 1 45 2 99 1 139 2 101 2 172 2 215 1 376 1 330 1 176 1 76 2 
193 4 238 1 56 1 335 1 305 1 30 1 308 1 5 1 200 1 343 1 224 1 95 1 8 1 62 2 64 2 315 1 43 1 45 2 99 1 139 2 14 1 101 2 228 1 172 2 19 1 183 1 184 1 255 1 215 1 358 1 376 1 330 1 148 1 379 1 110 1 26 1 76 2 
238 1 193 3 56 1 305 1 308 1 288 1 5 1 200 1 37 1 8 1 62 2 64 1 206 1 315 1 65 1 45 1 99 1 139 1 101 1 228 1 172 1 253 1 72 1 215 1 376 1 330 1 110 1 176 1 76 2 
193 41 238 3 56 4 283 1 338 1 58 1 5 3 200 4 59 4 8 4 161 1 62 20 9 4 346 1 64 21 11 1 208 1 123 1 350 1 172 8 215 4 22 3 300 1 359 1 217 1 76 6 177 3 308 5 87 1 95 4 315 3 273 1 97 2 99 5 371 1 103 1 327 1 281 1 53 1 330 3 378 1 191 1 236 1 
238 4 193 38 56 4 177 3 283 1 338 1 58 1 308 5 5 4 87 1 200 3 95 4 59 4 8 3 161 1 346 1 9 4 62 20 64 18 315 4 11 1 97 2 273 1 208 2 99 4 123 1 350 1 371 1 103 1 172 7 22 3 215 4 300 1 327 1 53 1 281 1 359 1 330 4 378 1 191 1 236 1 217 1 76 8 
238 3 193 53 56 7 177 2 283 1 338 1 58 1 308 8 5 3 87 1 200 7 95 8 59 4 8 7 161 1 346 1 9 4 62 27 64 26 315 3 11 2 97 1 273 1 208 2 99 8 123 1 350 1 371 1 103 1 230 2 172 15 22 4 215 7 327 1 53 1 281 1 359 1 330 3 378 1 191 1 236 1 76 6 
238 2 193 19 56 3 177 1 308 3 5 2 87 2 200 3 95 3 59 2 8 3 9 2 62 9 64 10 315 2 11 1 97 1 273 1 99 3 123 1 371 1 172 6 22 1 215 3 327 1 330 2 191 1 217 1 77 1 76 4 
238 3 193 26 56 3 177 2 283 1 308 3 5 3 87 1 200 2 95 2 59 2 8 2 161 1 9 4 62 14 346 1 64 12 315 3 97 2 273 1 208 2 99 2 123 1 371 2 172 4 22 2 215 3 327 1 53 1 281 1 359 1 330 3 191 1 76 6 
118 1 105 1 231 1 275 1 181 1 10 1 164 1 163 1 71 1 121 1 
232 1 287 1 
34 1 156 1 231 1 170 1 275 1 181 1 10 1 163 1 121 1 
28 1 135 1 136 2 275 1 86 1 73 1 118 1 105 1 270 1 231 1 108 1 192 1 10 1 181 1 164 1 163 1 272 1 121 1 
28 1 135 1 136 2 275 1 86 1 73 1 118 1 105 1 270 1 231 1 108 1 192 1 10 1 181 1 164 1 163 1 272 1 121 1 
28 1 135 1 136 2 275 1 86 1 73 1 118 1 105 1 270 1 231 1 108 1 192 1 10 1 181 1 164 1 163 1 272 1 121 1 
356 1 368 1 94 1 
356 1 368 1 94 1 
274 1 199 1 
356 1 274 1 199 1 
6 1 197 1 
197 1 136 1 287 1 288 2 86 1 37 2 6 1 247 1 63 1 314 1 181 1 10 1 206 2 272 1 163 1 121 1 228 2 275 1 323 1 354 1 279 1 73 1 108 1 231 1 232 1 110 2 111 1 
368 1 94 1 
356 1 274 1 199 1 
238 1 193 2 305 1 30 1 5 1 343 2 309 1 203 1 116 1 37 2 312 1 62 1 64 1 315 1 207 1 12 1 168 2 228 2 19 1 183 2 357 1 376 1 330 1 148 1 379 1 110 2 332 1 147 1 176 1 76 2 26 2 
1 1 196 1 342 1 252 2 343 2 19 1 183 2 89 1 90 1 242 1 358 1 109 1 377 1 148 1 42 1 26 2 380 1 381 1 317 1 
1 1 196 1 31 1 252 2 343 1 183 1 19 1 89 1 90 1 242 1 109 1 377 1 148 1 42 1 26 1 381 1 317 1 
153 1 284 1 30 1 285 1 342 1 343 1 297 1 19 1 183 1 129 1 377 1 148 1 379 1 26 1 
1 1 196 1 342 1 252 2 343 1 183 1 19 1 89 1 90 1 242 1 109 1 377 1 148 1 42 1 26 1 380 1 381 1 317 1 
277 1 
278 1 28 1 179 1 320 1 256 1 78 1 48 1 
28 2 304 1 78 1 133 1 2 1 265 1 86 1 179 1 60 1 367 1 138 1 352 1 278 1 73 1 216 1 331 1 112 1 
334 1 56 2 335 3 114 2 2 6 285 1 4 2 343 3 204 2 60 4 8 2 126 2 351 2 19 3 254 2 73 5 299 2 215 2 358 1 216 5 24 1 26 3 28 8 304 4 133 12 78 8 30 10 134 1 308 2 222 2 86 5 265 3 179 2 311 2 137 1 318 1 99 2 320 1 138 4 48 1 142 2 49 6 50 1 229 2 51 3 183 3 278 9 373 6 189 1 328 2 148 4 379 3 190 2 112 4 
56 2 177 1 28 5 304 2 283 1 133 6 78 5 2 3 134 1 308 2 86 1 265 1 179 2 204 1 59 1 60 2 8 2 161 1 346 1 99 2 138 2 124 1 142 2 49 5 351 1 16 1 373 5 278 8 73 1 22 1 215 2 53 1 281 1 216 1 112 2 
304 1 115 1 338 1 78 2 308 2 288 1 86 1 37 1 246 1 291 1 60 1 206 1 96 1 248 1 99 1 138 1 142 2 351 1 228 1 103 1 253 1 278 2 73 1 145 1 375 1 110 1 236 1 112 1 
138 1 320 1 28 1 304 1 78 1 48 1 179 1 278 1 60 1 112 1 
56 2 99 2 28 5 114 1 78 5 133 10 2 5 142 2 49 5 351 1 308 2 373 5 278 5 215 2 8 2 
28 1 179 1 73 1 216 1 86 1 265 1 
334 2 304 1 78 2 284 1 30 1 285 2 84 1 134 2 178 1 265 2 86 3 343 4 204 2 60 2 138 2 297 1 19 1 183 4 278 2 73 3 189 1 216 4 55 1 148 1 379 1 301 1 237 1 112 2 26 4 
193 1 238 1 335 1 305 1 30 1 285 1 288 2 5 1 343 1 224 1 37 2 312 1 291 1 205 1 63 1 64 1 206 2 315 1 14 1 228 3 183 1 19 1 253 2 184 1 255 1 376 1 330 1 110 3 148 1 379 1 76 2 26 1 
138 1 28 4 304 1 133 4 78 2 2 2 49 2 134 1 373 2 278 1 179 2 204 1 60 1 378 1 112 1 
329 1 163 1 121 1 
329 1 163 1 121 1 
105 1 146 1 197 1 163 1 121 1 
329 1 163 1 121 1 
262 1 163 1 121 1 
262 1 163 1 121 1 
262 1 163 1 121 1 
163 1 121 1 
181 1 10 1 
193 8 238 1 177 1 338 1 58 1 308 1 5 1 59 1 95 2 161 1 62 4 64 4 315 1 273 1 99 1 350 1 172 2 103 1 22 1 330 1 378 1 236 1 76 2 
193 11 238 2 56 1 177 1 338 1 58 1 308 2 5 2 85 1 200 1 95 2 59 2 161 1 62 6 64 5 315 2 11 1 273 1 99 1 350 1 103 1 172 3 22 1 215 1 330 2 378 1 236 1 76 4 
193 19 238 3 56 2 177 1 283 1 338 1 58 1 308 3 85 1 5 3 200 1 59 1 95 3 8 2 161 1 62 9 346 1 64 10 315 3 273 1 99 3 208 1 350 1 103 1 172 4 22 1 215 2 53 1 281 1 330 3 378 1 236 1 76 6 
193 12 238 4 56 2 177 1 283 1 308 2 85 1 5 4 200 1 59 1 95 2 8 1 161 1 62 7 346 1 64 5 315 4 273 1 99 1 208 2 172 3 22 1 215 2 53 1 281 1 330 4 76 8 
193 8 238 1 177 1 338 1 58 1 308 1 5 1 59 1 95 2 161 1 62 4 64 4 315 1 273 1 99 1 350 1 172 2 103 1 22 1 330 1 378 1 236 1 76 2 
193 13 238 2 56 2 177 1 283 1 308 2 5 2 200 1 59 1 95 2 8 2 161 1 62 6 346 1 64 7 315 2 273 1 99 2 208 1 172 3 22 1 215 2 53 1 281 1 330 2 76 4 
193 18 238 4 56 2 177 1 283 1 338 1 58 1 308 3 85 1 5 4 200 2 59 1 95 3 8 1 161 1 62 10 346 1 64 8 315 4 273 1 99 2 208 2 350 1 103 1 172 5 22 1 215 2 53 1 281 1 330 4 378 1 236 1 76 8 
193 16 238 4 56 3 177 1 283 1 308 3 5 4 200 3 59 1 95 3 8 2 161 1 62 9 346 1 64 7 315 4 273 1 99 2 208 2 172 6 22 1 215 3 53 1 281 1 330 4 217 1 76 8 
193 7 99 1 338 3 58 1 350 2 308 1 200 3 172 6 103 1 95 3 62 3 64 4 236 3 
193 18 238 4 56 2 177 1 283 1 338 1 58 1 308 3 5 4 200 1 59 1 95 3 8 1 161 1 62 10 346 1 64 8 315 4 273 1 99 2 208 2 350 1 103 1 172 4 22 1 215 2 53 1 281 1 330 4 378 1 236 1 217 1 76 8 
193 8 238 2 99 1 208 1 338 1 58 1 350 1 308 1 5 2 200 1 103 1 172 3 95 2 330 2 378 1 62 4 64 4 236 1 315 2 76 4 
193 6 99 1 338 1 58 1 350 1 308 1 172 2 103 1 256 1 95 2 378 1 62 3 64 3 236 1 
238 1 193 4 99 1 56 1 308 1 85 1 5 1 200 1 172 2 215 1 95 1 8 1 330 1 62 2 64 2 315 1 76 2 
193 7 99 1 56 1 177 1 308 1 200 1 172 2 22 1 215 1 95 1 59 2 8 1 62 3 64 4 11 1 
193 23 238 2 56 2 338 2 58 1 308 3 5 2 200 4 202 1 59 2 95 5 8 2 62 11 64 12 315 2 11 1 99 3 208 2 350 1 103 1 172 9 230 1 215 2 22 2 330 2 378 1 235 1 236 2 76 4 
193 1 59 1 64 1 
193 1 22 1 62 1 
238 1 193 6 56 1 99 1 114 1 308 1 5 1 85 1 200 1 172 3 215 1 95 2 330 1 8 1 62 3 64 3 315 1 76 2 
193 13 238 2 56 2 177 1 283 1 308 2 5 2 200 1 59 1 95 2 8 2 161 1 62 6 346 1 64 7 315 2 273 1 99 2 208 1 172 3 22 1 215 2 53 1 281 1 330 2 76 4 
193 6 99 1 338 1 308 1 200 1 103 1 172 2 95 1 62 3 64 3 236 1 
193 3 238 1 208 1 338 1 58 1 350 1 5 1 200 1 172 2 202 1 95 1 330 1 62 1 236 1 64 2 315 1 76 2 
238 1 273 1 193 10 99 2 338 2 308 2 5 1 200 2 172 5 103 1 95 3 330 1 62 5 236 2 64 5 315 1 76 2 96 1 
273 1 238 1 193 2 56 1 308 1 5 1 200 1 172 1 330 1 62 2 315 1 76 2 
273 1 238 1 193 4 99 1 56 1 308 1 5 1 200 1 172 2 215 1 95 1 8 1 330 1 62 2 64 2 315 1 76 2 
193 3 273 1 238 3 208 1 338 1 5 3 200 1 172 2 202 1 95 1 330 3 62 1 64 2 236 1 217 1 315 3 76 6 
238 5 193 34 56 3 177 1 338 3 58 1 308 5 85 1 5 5 200 5 202 1 59 4 95 7 345 1 8 3 62 16 64 18 315 5 11 1 273 1 208 2 99 5 350 1 276 1 103 2 172 12 374 1 22 3 215 3 330 5 378 1 236 3 217 1 76 10 
355 1 113 1 92 1 37 1 110 1 228 1 63 1 
113 1 29 1 339 1 228 1 158 1 88 1 355 1 92 1 119 1 37 1 110 1 63 1 
256 1 284 1 30 1 285 1 148 1 379 1 297 1 343 1 19 1 183 1 26 1 
335 1 169 1 30 1 14 1 285 1 228 2 288 1 343 1 183 1 19 1 224 1 37 1 379 1 148 1 110 2 63 1 206 1 26 1 
334 1 335 2 30 3 288 2 343 1 224 1 37 2 63 1 206 1 167 1 169 1 14 1 228 2 19 1 183 1 299 1 375 1 110 2 148 1 379 2 190 1 26 1 151 1 
361 1 334 1 335 2 30 3 288 2 343 2 224 1 225 1 37 2 63 1 206 1 167 1 169 1 228 2 19 1 183 2 299 1 375 1 110 2 148 1 379 2 190 1 26 2 151 1 
361 1 334 1 28 1 335 1 194 1 30 4 285 1 229 1 250 1 86 2 222 1 343 3 51 1 183 3 19 1 179 1 299 1 73 2 216 1 379 1 148 1 190 1 26 3 
361 1 334 1 28 1 335 1 30 4 285 1 229 1 86 2 222 1 343 3 51 1 183 3 19 1 179 1 299 1 73 2 311 1 216 1 379 1 148 1 190 1 26 3 
174 1 148 1 343 1 19 1 183 1 26 1 
122 1 168 1 335 1 195 1 30 3 285 2 286 1 343 7 183 7 19 2 357 1 90 1 174 1 188 1 243 1 358 1 245 1 379 2 148 3 24 1 26 6 
193 6 238 2 338 1 335 1 305 2 58 1 30 1 308 1 288 1 5 2 343 1 224 1 116 1 37 1 95 2 62 3 63 2 64 3 206 1 315 2 43 1 45 1 99 1 139 1 169 1 14 1 101 1 350 1 228 2 103 1 172 2 19 1 183 1 52 1 184 1 255 1 358 1 376 2 330 2 378 1 379 1 148 1 110 2 236 1 176 1 76 4 26 1 
28 1 304 2 78 1 30 2 285 1 86 3 4 1 222 1 265 1 343 1 179 1 311 1 60 2 320 1 138 2 126 1 48 1 229 1 51 1 183 1 254 1 278 1 279 1 73 3 189 1 216 2 26 1 112 2 
335 1 30 2 222 1 343 2 183 2 19 1 174 1 358 1 379 1 148 2 24 1 137 1 26 2 
361 1 284 1 30 1 285 1 343 4 297 1 183 4 19 1 358 1 148 1 379 1 150 1 26 4 
334 1 122 1 335 1 195 1 30 1 128 1 343 2 183 2 19 1 175 1 280 1 379 1 148 2 26 2 
1 1 285 1 109 1 148 1 252 1 343 1 19 1 317 1 183 1 26 1 
357 1 309 1 90 1 30 1 358 1 148 1 379 1 343 2 19 1 183 2 26 2 
334 1 284 1 30 3 285 1 286 1 297 1 343 5 183 5 19 2 357 1 188 1 358 1 379 2 148 2 150 1 26 4 
334 1 284 1 30 3 285 1 297 1 343 5 183 5 19 2 357 1 36 1 188 1 358 1 379 2 148 2 150 1 26 4 
335 1 169 1 30 1 285 1 228 2 288 1 343 1 183 1 19 1 224 1 225 1 37 1 379 1 148 1 110 2 63 1 206 1 26 1 
334 1 122 1 335 1 195 1 30 1 343 1 183 1 19 1 243 1 379 1 148 2 24 1 26 1 
35 1 336 1 117 1 25 1 63 1 
28 1 167 1 336 2 229 1 127 1 86 2 157 1 179 1 35 1 279 1 91 1 73 2 117 2 375 1 107 1 25 2 63 1 74 1 151 1 
12 1 336 1 228 1 203 1 35 1 117 1 37 1 332 1 110 1 
35 1 157 1 74 1 
98 1 57 1 256 1 141 1 
98 1 57 1 141 1 226 1 290 1 266 1 289 1 
226 1 349 1 239 1 
98 1 132 1 57 1 282 2 141 1 226 3 290 1 366 1 340 1 214 1 266 3 289 1 
98 1 57 1 141 1 125 1 226 2 290 1 70 1 266 2 289 1 
141 1 306 1 226 1 290 1 109 1 313 1 42 1 214 1 252 1 266 1 289 1 
57 1 141 1 226 1 290 1 214 1 266 1 289 1 
98 1 57 2 226 1 290 1 214 1 266 1 289 1 
319 1 57 1 141 1 337 1 214 1 289 2 266 2 290 2 226 2 93 1 
98 1 57 1 259 1 141 2 125 2 306 1 226 3 290 1 271 1 214 1 296 1 266 3 289 1 
98 1 57 1 141 1 1 1 125 1 196 1 214 1 252 2 289 1 266 2 290 1 226 2 109 1 42 1 303 1 
98 1 57 1 259 1 125 2 141 2 306 1 214 1 70 1 289 2 266 4 104 1 290 2 226 4 
98 1 57 1 141 1 226 1 290 1 214 1 266 1 289 1 
132 1 98 2 282 1 57 2 259 1 125 2 141 3 306 1 227 1 340 1 266 4 289 1 226 4 290 1 
98 1 57 1 209 1 141 1 249 1 140 1 125 1 214 1 289 1 266 2 290 1 226 2 
132 2 98 1 282 2 57 1 141 1 340 1 214 1 289 1 266 3 310 1 290 1 226 3 
141 2 369 1 13 1 321 2 
226 1 290 1 360 1 214 1 266 1 289 1 
98 1 57 1 141 1 125 1 226 2 290 1 214 1 296 1 266 2 289 1 
68 1 
98 1 57 1 141 1 226 1 290 1 214 1 266 1 289 1 
98 1 282 1 57 1 125 1 141 1 214 1 296 1 289 1 266 3 290 1 226 3 
259 1 141 1 306 1 227 1 
57 1 141 1 

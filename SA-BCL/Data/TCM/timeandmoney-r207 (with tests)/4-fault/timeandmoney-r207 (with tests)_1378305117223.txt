#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 43 332 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 371 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 333 1 225 2 0 1 336 1 276 2 186 4 359 1 89 1 342 1 136 1 59 5 209 1 210 1 61 1 256 1 191 1 299 2 9 2 10 1 323 2 119 2 326 3 352 6 266 9 99 2 309 9 268 1 
74 1 333 1 225 2 0 1 336 1 276 2 186 4 359 1 89 1 342 1 136 1 59 5 209 1 210 1 61 1 256 1 191 1 299 2 9 2 10 1 323 2 119 2 326 3 352 6 266 9 99 2 309 9 268 1 
74 1 333 1 225 2 0 1 336 1 276 2 186 5 359 1 89 1 342 1 136 1 59 6 209 1 210 1 61 1 256 1 191 1 299 2 9 2 10 1 323 2 119 2 326 4 352 7 266 10 99 2 309 10 268 1 
74 1 333 1 225 2 0 1 336 1 276 2 186 3 359 1 89 1 342 1 136 1 59 4 209 1 210 1 61 1 191 1 299 2 9 2 10 1 323 2 119 1 326 2 352 4 266 7 99 2 309 7 268 1 
74 1 61 1 256 1 9 1 225 1 0 1 323 1 336 1 276 1 119 2 326 1 352 3 186 2 266 4 99 1 342 1 309 4 59 3 
74 1 191 1 9 1 299 1 336 1 323 1 276 1 266 2 99 1 112 1 342 1 59 1 136 1 309 2 167 1 293 1 
74 1 333 1 9 2 299 1 336 1 326 1 352 1 186 1 266 3 99 2 342 1 309 3 59 2 
74 1 333 1 225 1 0 1 336 1 276 1 186 4 359 1 87 1 342 1 361 1 59 5 61 1 256 1 299 1 9 2 323 1 119 2 326 3 352 7 266 9 99 2 309 9 268 1 
74 1 333 1 225 1 0 1 336 1 276 1 186 4 359 1 87 1 342 1 361 1 59 5 61 1 256 1 299 1 9 2 323 1 119 2 326 3 352 7 266 9 99 2 309 9 268 1 
258 1 368 1 123 1 
190 1 133 2 368 1 
337 2 198 2 274 2 327 2 56 2 369 1 2 1 196 2 
274 3 223 1 78 1 79 1 2 1 206 1 337 2 314 1 316 1 109 2 56 2 111 2 5 1 63 1 140 2 367 1 369 1 238 1 192 1 260 1 196 2 373 2 350 1 240 1 174 1 198 3 218 1 327 2 353 2 148 1 199 1 375 1 328 1 17 1 41 1 42 1 354 1 
337 1 131 1 198 1 274 1 327 1 366 1 56 1 58 1 2 1 196 1 
274 1 368 1 34 1 46 1 213 1 131 1 198 1 163 1 327 1 252 1 330 1 221 1 179 1 123 1 
274 2 366 1 368 1 46 1 213 2 2 1 195 1 196 2 337 2 131 2 198 2 163 1 327 2 252 2 56 2 58 1 330 1 221 1 123 1 
252 1 213 1 22 1 43 1 
296 1 116 1 368 1 252 2 213 2 22 1 275 1 123 1 
116 1 252 1 213 1 
274 1 366 1 22 1 213 1 2 1 195 1 196 1 337 1 131 1 198 1 327 1 252 1 56 1 58 1 
368 1 
296 1 116 1 120 1 368 1 252 2 213 2 22 1 123 1 
222 1 296 1 116 2 118 2 142 2 368 1 127 1 22 2 213 5 106 1 302 2 324 1 12 1 132 1 71 1 252 5 208 1 362 1 123 1 
30 1 274 2 140 1 367 1 128 1 260 1 196 1 373 1 350 1 240 1 314 1 198 2 327 1 148 1 353 1 199 1 56 1 152 1 42 1 354 1 
258 1 369 1 
337 1 315 1 203 1 198 2 274 2 327 2 56 1 369 2 196 1 
96 1 237 1 152 1 
274 1 140 1 367 1 369 1 260 1 373 1 240 1 350 1 314 1 198 1 353 1 148 1 199 1 97 1 42 1 354 1 
337 1 30 1 198 3 274 3 327 3 56 3 369 1 196 3 
131 1 198 1 274 1 327 1 56 1 58 1 196 1 
337 1 131 1 315 1 198 1 203 1 274 1 327 1 56 1 196 1 
203 1 274 4 78 1 79 1 46 1 128 1 2 1 206 1 314 1 337 2 131 1 163 1 227 1 109 1 228 1 56 3 252 1 111 2 5 1 30 1 140 1 367 1 369 1 213 1 238 1 192 1 260 1 196 3 373 1 350 1 240 1 198 4 218 1 327 3 148 1 353 1 199 1 375 1 328 1 17 1 42 1 330 1 221 1 354 1 
198 2 30 1 297 1 274 2 327 2 56 1 369 1 179 1 196 1 
272 1 203 1 30 2 274 3 368 1 213 1 46 1 128 1 196 3 337 1 131 1 163 1 198 3 327 3 252 1 56 3 228 1 330 1 221 1 
30 1 203 1 274 2 196 2 96 1 337 1 198 2 327 2 56 2 152 1 
274 1 140 1 367 1 369 1 260 1 373 1 240 1 350 1 314 1 198 1 353 1 148 1 199 1 42 1 354 1 
6 1 274 1 140 1 367 1 369 1 260 1 373 1 240 1 350 1 198 1 353 1 37 1 199 1 42 1 354 1 
78 1 79 1 248 1 340 1 109 4 111 2 27 1 187 1 188 1 5 2 343 1 63 2 237 2 238 1 239 1 216 1 96 2 13 1 38 1 375 1 328 1 17 1 152 2 45 1 
131 1 198 1 274 1 327 1 56 1 46 1 4 1 196 1 
273 1 30 2 203 1 297 1 274 5 369 1 128 1 196 4 337 1 198 5 327 5 56 4 175 1 179 1 
131 1 198 2 274 2 327 2 56 2 4 1 58 1 196 2 
80 1 255 1 
80 1 255 1 
29 1 40 1 
29 1 40 1 
29 1 40 1 
80 1 255 1 160 1 
338 1 80 1 255 1 
29 1 170 1 3 1 40 1 80 2 255 2 
80 1 255 1 160 1 
80 1 255 1 160 1 
110 1 80 1 255 1 
110 1 80 1 255 1 
110 1 80 1 255 1 
138 3 117 1 257 2 170 1 368 1 288 1 213 2 312 1 48 2 80 2 171 2 68 1 146 1 164 2 252 2 150 1 39 2 135 1 255 2 
274 2 288 1 80 1 48 1 247 1 338 1 164 1 56 2 252 1 26 1 255 1 138 1 31 1 369 1 213 1 300 1 171 1 196 2 172 1 198 2 327 2 98 1 39 1 219 1 
225 1 323 1 276 1 
323 1 167 1 276 1 
351 1 185 1 225 2 246 1 323 3 167 1 
263 1 351 1 185 1 225 1 323 2 167 1 
351 1 185 2 225 1 323 2 167 1 
125 2 156 1 22 4 311 1 158 1 106 3 247 1 340 1 132 1 133 3 252 5 168 2 364 1 296 1 365 2 190 1 116 1 8 1 142 1 118 1 368 2 213 5 302 1 216 1 194 1 324 2 13 1 147 1 98 1 219 1 38 1 123 1 
332 1 252 2 15 1 213 2 22 2 215 1 43 1 
125 2 156 1 22 2 311 1 106 3 247 1 340 1 133 4 252 3 168 2 364 1 365 1 190 2 142 1 118 1 368 3 213 3 302 1 194 1 216 1 324 2 12 1 13 1 147 1 38 1 123 1 
181 1 125 4 156 1 22 3 311 1 106 5 247 2 340 2 133 7 252 4 165 1 168 4 364 1 365 2 190 3 142 1 118 1 368 4 213 4 302 1 194 1 216 2 324 4 12 1 13 2 147 2 38 2 201 1 123 1 
258 1 32 1 260 1 
306 1 260 1 
62 1 
199 1 260 1 
180 1 32 2 199 1 33 1 260 3 350 1 
199 1 260 1 350 1 
90 1 260 1 
5 3 343 3 63 4 66 1 35 1 347 2 249 1 83 1 13 1 340 1 339 1 109 7 376 1 178 1 241 1 233 1 45 2 
5 3 343 3 63 4 66 1 35 1 347 2 249 1 83 1 13 1 340 1 339 1 109 7 376 1 178 1 241 1 233 1 45 2 
5 3 343 3 63 4 66 1 35 1 205 1 347 2 249 1 83 1 13 1 340 1 339 1 109 7 376 1 178 1 241 1 233 1 45 2 
243 1 310 4 78 1 79 1 249 1 83 2 183 1 339 1 340 4 109 31 111 2 229 1 233 1 294 3 5 15 343 10 63 16 35 2 66 5 93 1 347 3 216 3 13 4 147 3 307 1 376 1 375 1 151 1 38 3 17 1 329 1 178 2 241 2 45 5 
78 2 79 2 83 1 249 1 340 1 339 1 109 9 111 4 5 4 343 4 63 5 345 1 35 1 66 1 93 1 347 2 13 1 14 1 375 2 376 1 17 2 241 1 178 1 45 3 
74 1 204 1 225 1 246 1 336 1 276 1 360 1 342 1 59 1 114 1 167 1 344 1 140 1 367 1 9 1 299 1 373 1 323 2 262 1 352 1 353 1 266 2 121 1 99 1 220 1 377 1 42 1 309 2 154 1 44 1 
74 1 204 1 225 1 246 1 335 1 276 1 360 1 342 1 59 1 234 1 167 1 344 1 140 1 367 1 9 1 299 1 373 1 323 2 143 1 262 1 352 2 353 1 266 3 121 1 99 1 220 1 377 1 42 1 309 3 44 1 
74 1 204 1 225 1 246 1 335 1 276 1 360 1 342 1 59 1 167 1 344 1 140 1 367 1 299 1 373 1 323 2 143 1 262 1 352 2 353 1 266 2 121 1 220 1 42 1 309 2 
129 1 360 2 234 1 139 1 140 1 367 1 9 1 299 2 370 1 260 1 373 1 67 1 353 1 149 1 266 1 199 1 121 2 99 1 200 1 220 2 42 1 309 1 354 1 
204 1 225 1 246 1 335 1 336 1 276 1 360 1 167 1 344 1 140 1 367 1 9 1 299 1 373 1 323 2 262 1 353 1 266 1 121 1 99 1 220 1 377 1 42 1 309 1 154 1 44 1 
251 1 
156 1 105 2 46 1 106 2 49 1 163 1 252 5 57 2 115 1 296 3 116 6 211 1 118 1 65 2 213 5 302 1 304 2 260 1 67 1 11 1 353 2 308 1 176 1 122 4 221 1 179 1 354 2 123 1 274 1 20 1 226 2 131 1 132 1 133 2 277 2 86 1 25 1 190 2 139 1 141 1 140 2 142 1 321 1 368 2 367 1 285 2 34 1 373 2 324 2 198 1 327 1 199 1 100 1 42 1 330 1 
296 1 116 2 274 1 20 1 46 1 213 3 34 1 226 1 49 1 11 1 131 1 163 1 198 1 120 1 327 1 252 3 100 1 308 1 122 2 221 1 330 1 179 1 
274 1 20 1 46 1 49 1 131 1 163 1 252 3 296 1 116 1 368 1 34 1 213 3 285 1 11 1 198 1 327 1 120 1 100 1 308 1 122 3 330 1 221 1 179 1 123 1 
274 1 20 1 46 1 226 1 49 1 131 1 163 1 252 3 57 1 296 1 116 2 368 1 34 1 213 3 285 1 11 1 198 1 120 1 327 1 100 1 308 1 122 3 330 1 221 1 179 1 123 1 
46 1 105 2 334 1 159 1 106 1 49 1 163 1 252 5 57 4 296 3 116 7 118 1 213 5 65 2 302 1 304 2 11 1 120 1 308 1 122 6 221 1 179 1 269 1 123 5 274 1 20 1 226 4 131 1 132 1 277 2 86 1 231 1 279 1 190 2 142 1 321 1 368 5 34 1 285 4 324 1 198 1 327 1 100 1 330 1 
274 1 20 1 105 2 46 1 106 1 226 2 49 1 131 1 163 1 132 1 133 2 277 2 86 1 252 4 25 1 57 2 296 2 116 4 190 2 142 1 118 1 321 1 368 2 285 2 65 2 34 1 213 4 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 4 330 1 221 1 179 1 123 1 
274 1 20 1 105 2 46 1 334 1 106 1 159 1 226 2 49 1 131 1 163 1 132 1 277 2 86 1 252 4 57 2 279 1 296 2 116 4 190 2 321 1 118 1 142 1 368 1 285 2 65 2 34 1 213 4 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 4 330 1 221 1 179 1 123 1 
274 1 20 1 105 2 46 1 334 1 106 1 159 1 226 2 49 1 131 1 163 1 132 1 277 2 86 1 252 4 57 2 279 1 296 2 116 4 190 2 321 1 118 1 142 1 368 1 285 2 65 2 34 1 213 4 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 4 330 1 221 1 179 1 123 1 
274 1 20 1 105 2 46 1 106 1 226 2 49 1 184 2 131 1 163 1 132 1 133 2 86 1 252 4 254 1 57 2 279 1 28 1 296 2 116 4 118 1 142 1 368 1 285 2 34 1 213 4 302 1 304 2 324 1 11 1 198 1 327 1 217 1 100 1 308 1 122 4 330 1 221 1 179 1 123 1 202 2 
274 1 20 1 105 2 46 1 334 1 106 1 159 1 226 3 49 1 131 1 163 1 132 1 277 2 86 1 252 4 231 1 279 1 57 3 296 2 190 2 116 5 321 1 142 1 118 1 368 1 65 2 34 1 213 4 285 3 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 5 330 1 221 1 179 1 123 1 
274 1 20 1 105 2 46 1 334 1 106 1 159 1 226 3 49 1 131 1 163 1 132 1 277 2 86 1 252 4 231 1 279 1 57 3 296 2 190 2 116 5 321 1 142 1 118 1 368 1 65 2 34 1 213 4 285 3 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 5 330 1 221 1 179 1 123 1 
274 1 20 1 105 2 46 1 106 1 226 2 49 1 184 2 131 1 163 1 132 1 133 2 86 1 252 4 25 1 57 2 28 1 296 2 116 4 142 1 118 1 368 1 285 2 34 1 213 4 302 1 304 2 324 1 11 1 198 1 327 1 100 1 308 1 122 4 330 1 221 1 179 1 123 1 202 2 
5 3 343 2 63 3 258 1 78 1 369 2 79 1 237 1 238 1 347 1 96 1 249 1 248 1 83 1 13 1 340 1 339 1 109 6 328 1 375 1 376 1 111 2 17 1 152 1 178 1 45 2 
310 3 78 2 103 1 79 2 1 1 162 1 183 1 340 2 316 1 109 14 111 4 294 3 343 2 5 6 63 8 369 1 284 1 66 1 237 11 238 2 216 2 96 4 13 1 218 1 147 2 151 1 375 2 328 1 38 1 16 1 17 2 152 11 45 1 
274 2 103 1 78 1 224 1 79 1 128 1 314 1 291 1 316 1 109 2 55 1 56 1 111 2 30 1 5 1 140 1 63 1 367 1 369 1 238 1 260 1 373 1 196 1 350 1 240 1 96 1 198 2 327 1 218 1 148 1 353 1 199 1 97 1 375 1 328 1 17 1 42 1 354 1 
104 1 103 1 335 1 249 1 339 1 340 3 54 1 109 20 56 1 111 6 5 10 343 8 63 10 212 2 66 4 347 1 260 2 216 2 350 2 13 3 218 1 353 3 17 3 178 1 354 1 274 3 77 1 78 3 79 3 128 1 314 2 83 1 316 1 30 1 140 3 367 2 369 2 237 7 238 3 192 2 372 2 193 2 373 3 196 1 240 2 96 7 198 3 327 1 147 2 148 2 199 2 376 1 328 3 375 3 38 2 42 2 152 7 155 2 45 4 
274 1 78 2 79 2 335 1 290 1 248 1 316 1 109 2 253 1 56 1 111 4 292 1 114 1 235 1 169 1 30 1 5 1 139 1 140 8 63 1 64 1 367 2 238 2 260 3 196 1 373 7 67 1 174 2 198 1 327 1 218 1 353 8 199 2 375 2 328 2 17 2 42 2 18 1 354 2 
203 1 274 1 126 1 78 1 103 1 79 1 337 1 340 1 109 3 56 1 111 2 343 1 5 2 63 1 237 1 238 1 216 1 196 1 96 1 198 1 13 1 327 1 147 1 375 1 328 1 38 1 17 1 152 1 45 1 
343 1 63 2 78 1 79 1 66 1 237 1 238 1 216 1 96 1 248 1 340 1 109 2 328 1 375 1 111 2 17 1 152 1 27 1 
188 1 343 1 5 2 78 1 79 1 237 1 238 1 96 1 248 1 13 1 109 2 328 1 375 1 38 1 111 2 17 1 152 1 45 1 
78 1 79 1 248 1 340 1 109 4 111 2 343 2 5 2 63 2 237 2 66 1 238 1 216 1 96 2 13 1 147 1 375 1 328 1 38 1 17 1 152 2 45 1 
235 1 343 1 63 2 78 1 79 1 66 1 237 1 238 1 216 1 96 1 340 1 109 2 328 1 375 1 111 2 17 1 152 1 27 1 
235 1 188 1 343 1 5 2 78 1 79 1 237 1 238 1 96 1 13 1 109 2 328 1 375 1 38 1 111 2 17 1 152 1 45 1 
78 1 79 1 340 1 109 4 111 2 235 1 343 2 5 2 63 2 237 2 66 1 238 1 216 1 96 2 13 1 147 1 375 1 328 1 38 1 17 1 152 2 45 1 
5 2 343 2 63 2 78 1 79 1 66 1 237 2 238 1 216 1 96 2 13 1 340 1 147 1 109 4 38 1 328 1 375 1 111 2 17 1 152 2 45 1 
274 1 78 1 79 1 314 1 316 1 109 2 111 2 5 1 63 1 140 1 367 1 369 1 192 1 238 1 260 1 373 1 350 1 240 1 198 1 218 1 148 1 353 1 199 1 328 1 375 1 17 1 42 1 354 1 
274 1 78 1 79 1 316 1 109 2 111 2 6 1 5 1 63 1 140 1 367 1 369 1 238 1 260 1 373 1 350 1 240 1 198 1 218 1 37 1 353 1 199 1 328 1 375 1 17 1 42 1 354 1 331 1 
78 1 103 1 79 1 340 1 109 4 111 2 343 2 5 2 63 2 237 2 66 1 238 1 216 1 96 2 13 1 147 1 375 1 328 1 38 1 17 1 152 2 45 1 
274 1 78 1 79 1 314 1 340 1 109 4 111 2 114 1 5 2 343 2 63 2 140 1 367 1 66 1 237 2 192 1 238 1 216 1 260 1 373 1 350 1 240 1 96 2 198 1 13 1 147 1 148 1 353 1 199 1 38 1 328 1 375 1 17 1 152 2 42 1 155 1 45 1 
203 1 274 1 78 1 103 1 79 1 337 1 340 1 109 3 56 1 111 2 5 1 343 1 63 2 66 1 237 1 238 1 216 1 196 1 348 1 96 1 198 1 13 1 327 1 147 1 38 1 375 1 328 1 17 1 152 1 
310 4 78 3 79 3 289 1 107 1 249 1 83 1 52 1 183 1 339 1 340 5 358 1 53 1 109 41 318 4 278 1 111 6 113 1 134 1 280 1 294 3 295 1 282 1 5 21 343 8 298 1 63 20 322 2 93 1 66 4 347 1 216 4 14 1 13 5 147 4 72 1 376 1 151 3 375 3 38 4 17 3 178 1 45 4 
310 4 78 4 79 4 289 1 107 1 249 1 83 1 52 1 183 1 339 1 340 5 358 1 53 1 109 38 318 4 278 1 111 8 113 1 134 1 280 1 294 3 295 1 282 1 5 18 343 7 298 1 63 20 322 2 93 2 66 3 347 1 216 4 14 1 13 4 147 4 72 1 376 1 151 3 375 4 38 3 17 4 178 1 45 4 
310 4 78 2 79 2 289 1 107 1 1 2 249 1 83 1 52 1 183 2 339 1 340 8 358 1 53 1 109 52 318 4 278 1 111 4 113 1 134 1 280 1 294 4 5 25 343 14 298 1 63 27 322 1 93 1 66 7 347 1 216 7 14 1 13 8 147 7 72 1 376 1 151 2 375 2 38 7 17 2 178 1 45 7 
76 1 310 2 78 2 79 2 52 1 183 1 340 3 109 19 318 2 278 1 111 4 134 1 294 1 282 1 5 10 343 6 298 2 63 9 322 1 66 3 216 3 14 1 13 3 147 3 72 1 151 1 375 2 38 3 17 2 45 3 
310 2 78 3 79 3 289 1 107 1 52 1 340 3 53 1 358 1 109 26 318 4 278 2 111 6 113 1 134 1 280 1 294 2 343 4 5 12 298 1 63 14 322 2 66 2 93 2 216 3 13 2 14 1 147 3 72 1 375 3 151 2 38 2 17 3 45 2 
117 1 170 1 164 1 150 1 88 1 39 1 80 1 48 1 255 1 171 1 
172 1 338 1 
281 1 374 1 265 1 164 1 39 1 80 1 48 1 255 1 171 1 
138 2 117 1 257 1 170 1 368 1 288 1 213 1 312 1 48 1 80 1 171 1 146 1 164 1 252 1 150 1 39 1 135 1 255 1 
138 2 117 1 257 1 170 1 368 1 288 1 213 1 312 1 48 1 80 1 171 1 146 1 164 1 252 1 150 1 39 1 135 1 255 1 
138 2 117 1 257 1 170 1 368 1 288 1 213 1 312 1 48 1 80 1 171 1 146 1 164 1 252 1 150 1 39 1 135 1 255 1 
197 1 3 1 160 1 
197 1 3 1 160 1 
110 1 166 1 
110 1 3 1 166 1 
31 1 300 1 
274 2 22 1 80 1 48 1 247 1 338 1 84 1 164 1 252 1 56 2 26 1 255 1 138 1 31 1 257 1 369 1 213 1 300 1 171 1 196 2 172 1 198 2 146 1 327 2 98 1 39 1 219 1 
197 1 160 1 
110 1 3 1 166 1 
274 2 103 1 78 1 355 1 79 1 316 1 109 2 111 2 292 1 232 1 5 1 140 2 63 1 367 1 259 1 238 1 260 1 373 2 173 1 174 2 198 2 327 2 218 1 353 2 199 1 328 1 375 1 17 1 177 1 42 1 18 1 
204 1 344 1 140 2 367 1 225 1 182 1 246 1 335 1 161 1 323 2 373 2 276 1 353 2 360 1 42 1 377 1 319 1 167 1 114 1 
204 1 344 1 140 1 367 1 225 1 246 1 335 1 161 1 323 2 373 1 276 1 85 1 353 1 360 1 377 1 42 1 167 1 
139 1 140 1 367 1 182 1 260 1 373 1 67 1 69 1 353 1 199 1 360 1 200 1 42 1 354 1 
204 1 344 1 140 1 367 1 225 1 182 1 246 1 335 1 161 1 323 2 373 1 276 1 353 1 360 1 377 1 42 1 319 1 167 1 
7 1 
222 1 71 1 258 1 368 1 106 1 123 1 324 1 
106 1 132 1 277 1 133 1 252 1 296 1 190 1 116 1 321 1 142 1 118 1 368 2 65 1 213 1 302 1 324 1 123 1 
140 1 118 1 142 1 367 2 33 1 371 1 302 1 260 2 373 1 350 1 306 1 132 1 353 1 199 1 42 1 267 1 354 1 
19 1 125 5 310 1 156 1 289 1 106 8 107 1 340 2 132 2 133 6 53 1 358 1 252 1 113 1 168 5 294 1 296 1 236 1 116 1 190 3 141 1 142 2 118 2 368 5 213 1 94 2 302 2 216 2 324 5 287 1 13 2 147 2 151 1 38 2 123 2 
19 1 274 1 245 1 334 1 106 2 2 1 337 1 131 1 83 1 249 1 340 2 132 1 252 1 56 1 58 1 142 1 118 1 366 1 213 1 94 2 302 1 195 1 196 1 324 2 198 1 13 1 327 1 178 1 
222 1 118 1 142 1 368 1 106 1 302 1 324 1 132 1 71 1 123 1 
19 1 190 5 125 5 368 5 212 1 94 2 106 5 216 2 324 5 340 2 13 2 147 2 133 10 38 2 168 5 
296 1 116 1 368 1 252 1 213 1 123 1 
156 2 47 1 106 2 250 1 132 1 252 3 115 1 296 2 116 4 139 1 211 1 140 4 141 2 142 2 118 2 367 1 213 3 302 2 260 1 373 4 324 2 67 1 12 1 353 4 199 1 101 1 42 1 153 2 354 2 
274 3 78 1 79 1 2 1 206 1 337 2 314 1 109 1 56 2 111 2 5 1 140 1 367 1 369 1 192 1 238 1 260 1 373 1 196 2 240 1 350 1 198 3 218 1 327 2 353 1 148 1 199 1 375 1 328 1 17 1 42 1 354 1 
190 2 125 2 141 1 118 1 142 1 156 1 368 4 106 1 302 1 347 1 324 2 132 1 133 4 168 2 123 2 
39 1 171 1 95 1 
150 1 39 1 341 1 300 1 171 1 
39 1 171 1 95 1 
39 1 171 1 95 1 
271 1 39 1 171 1 
271 1 39 1 171 1 
271 1 39 1 171 1 
39 1 171 1 
80 1 255 1 
310 1 78 1 79 1 83 1 249 1 340 1 339 1 53 1 109 8 111 2 294 1 5 4 343 2 63 4 347 1 13 1 14 1 151 1 375 1 376 1 17 1 178 1 45 2 
310 2 78 2 79 2 249 1 83 1 183 1 339 1 340 2 53 1 109 11 317 1 111 4 294 1 5 5 343 3 63 6 66 1 347 1 216 1 13 1 14 1 147 1 376 1 151 1 375 2 17 2 178 1 45 2 
310 1 78 3 79 3 289 1 107 1 249 1 83 1 339 1 340 3 53 1 358 1 317 1 109 19 111 6 113 1 294 1 5 10 343 4 63 9 66 1 93 1 347 1 216 2 14 1 13 3 147 2 376 1 151 1 375 3 38 2 17 3 178 1 45 3 
310 1 78 3 79 3 289 1 107 1 249 1 83 1 339 1 340 3 53 1 358 1 317 1 109 17 111 6 113 1 294 1 5 7 343 5 63 10 93 1 66 2 347 1 216 2 14 1 13 2 147 2 376 1 151 1 375 3 38 1 17 3 178 1 45 3 
310 1 78 1 79 1 83 1 249 1 340 1 339 1 53 1 109 8 111 2 294 1 5 4 343 2 63 4 347 1 13 1 14 1 151 1 375 1 376 1 17 1 178 1 45 2 
310 1 78 1 79 1 289 1 107 1 340 2 53 1 358 1 109 12 111 2 113 1 294 1 5 6 343 2 63 6 66 1 216 2 14 1 13 2 147 2 151 1 375 1 38 2 17 1 45 1 
310 1 78 4 79 4 289 1 107 1 249 1 83 1 339 1 340 3 53 1 358 1 109 18 317 1 111 8 113 1 294 1 5 8 343 5 63 10 66 2 93 2 347 1 216 2 14 1 13 2 147 2 376 1 151 1 375 4 38 1 17 4 178 1 45 3 
310 1 78 4 79 4 289 1 107 1 340 3 53 1 358 1 109 16 111 8 113 1 294 1 282 1 5 7 343 6 63 9 66 3 93 2 216 3 14 1 13 2 147 3 151 1 375 4 38 2 17 4 45 3 
5 4 343 6 63 3 66 3 83 3 249 1 13 1 339 2 340 1 109 7 376 1 178 3 45 3 
310 1 78 4 79 4 289 1 107 1 249 1 83 1 339 1 340 3 53 1 358 1 109 18 111 8 113 1 294 1 282 1 5 8 343 4 63 10 66 1 93 2 347 1 216 2 14 1 13 2 147 2 376 1 151 1 375 4 38 1 17 4 178 1 45 3 
5 4 343 3 63 4 78 2 79 2 66 1 93 1 347 1 249 1 83 1 13 1 340 1 339 1 109 8 375 2 376 1 111 4 17 2 178 1 45 2 
5 3 343 2 258 1 63 3 347 1 83 1 249 1 339 1 340 1 13 1 109 6 376 1 178 1 45 2 
5 2 343 2 63 2 78 1 79 1 66 1 216 1 13 1 340 1 147 1 317 1 109 4 38 1 375 1 111 2 17 1 45 1 
5 4 343 2 310 2 63 3 66 1 216 1 183 1 13 1 340 1 147 1 109 7 38 1 151 1 294 1 45 1 
310 2 78 2 79 2 1 1 249 1 83 2 183 1 162 1 82 1 339 1 340 3 109 23 111 4 294 2 343 9 5 12 63 11 66 4 93 2 347 1 216 2 13 3 147 2 376 1 38 2 375 2 17 2 178 2 45 5 
5 1 310 1 109 1 
63 1 109 1 294 1 
5 3 343 3 63 3 78 1 79 1 212 1 66 1 216 1 340 1 13 1 147 1 317 1 109 6 375 1 38 1 17 1 111 2 45 2 
310 1 78 1 79 1 289 1 107 1 340 2 53 1 358 1 109 12 111 2 113 1 294 1 5 6 343 2 63 6 66 1 216 2 14 1 13 2 147 2 151 1 375 1 38 2 17 1 45 1 
5 3 343 2 63 3 66 1 249 1 83 1 340 1 13 1 109 6 178 1 45 1 
343 2 5 2 63 1 78 1 79 1 66 1 93 1 83 1 82 1 339 1 109 3 375 1 376 1 111 2 17 1 178 1 45 1 
343 5 5 5 245 1 63 5 78 1 79 1 66 2 83 2 249 1 14 1 340 2 13 2 109 10 375 1 17 1 111 2 178 2 45 3 
343 1 63 2 78 1 79 1 66 1 216 1 14 1 340 1 109 2 375 1 111 2 17 1 
5 2 343 2 63 2 78 1 79 1 66 1 216 1 13 1 14 1 340 1 147 1 109 4 38 1 375 1 111 2 17 1 45 1 
282 1 5 2 343 2 63 1 78 3 79 3 93 1 66 1 82 1 83 1 14 1 109 3 375 3 111 6 17 3 178 1 45 1 
243 1 310 4 78 5 79 5 249 2 83 3 82 1 183 1 339 1 340 5 317 1 109 34 229 1 111 10 294 3 282 1 5 18 343 12 63 16 93 2 66 5 347 1 216 3 14 1 13 5 147 3 376 1 151 1 375 5 38 3 17 5 329 1 178 3 45 7 
24 1 198 1 274 1 297 1 327 1 369 1 179 1 
297 1 274 1 102 1 369 1 301 1 303 1 144 1 305 1 24 1 198 1 327 1 179 1 
67 1 139 1 258 1 140 1 353 1 199 1 367 1 42 1 260 1 373 1 354 1 
30 1 274 2 140 1 367 1 369 1 260 1 196 1 373 1 350 1 240 1 198 2 327 1 353 1 148 1 199 1 56 1 42 1 354 1 
274 2 46 1 81 1 131 1 56 1 90 1 30 1 140 1 367 1 369 1 260 3 373 1 196 2 240 1 350 2 198 2 327 2 148 1 353 1 199 2 42 1 221 1 153 1 
274 2 46 1 81 1 313 1 131 1 56 1 90 1 30 1 140 2 367 1 369 1 260 3 373 2 196 2 240 1 350 2 198 2 327 2 37 1 353 2 199 2 42 1 221 1 153 1 
116 1 140 3 32 1 368 1 367 1 213 2 81 1 313 1 260 4 373 3 350 1 325 1 163 1 306 1 207 1 353 3 199 1 252 2 90 1 42 1 153 1 354 1 123 1 
363 1 116 1 140 3 32 1 368 1 367 1 213 2 81 1 313 1 260 4 373 3 350 1 163 1 306 1 353 3 199 1 252 2 90 1 42 1 153 1 354 1 123 1 
140 1 353 1 367 1 42 1 290 1 373 1 
169 1 189 1 140 7 64 1 367 3 33 1 335 1 290 1 260 3 373 6 261 1 350 1 130 1 174 1 353 7 199 2 253 1 292 1 42 2 114 1 354 2 
274 2 103 1 78 2 79 2 314 1 249 1 83 1 340 1 339 1 109 6 56 1 111 4 232 1 114 1 5 3 343 2 30 1 63 3 140 1 367 1 369 2 237 1 238 2 192 1 347 1 260 1 193 1 196 1 373 1 350 1 240 1 96 1 198 2 13 1 327 1 353 1 148 1 199 1 376 1 375 2 328 2 17 2 152 1 42 1 178 1 155 1 45 2 
222 1 124 1 22 1 106 1 163 1 250 1 132 2 357 1 252 3 363 1 296 1 116 2 140 1 142 2 118 2 32 1 368 1 213 3 302 2 260 2 373 1 324 1 306 1 71 1 353 1 354 1 123 1 378 1 
140 2 32 1 367 2 33 1 290 1 260 2 373 2 350 1 353 2 199 1 267 1 42 1 114 1 
139 1 140 4 367 1 313 1 260 1 373 4 67 1 353 4 199 1 73 1 42 1 354 1 114 1 
189 1 140 2 104 1 367 2 260 1 373 2 350 1 130 1 145 1 353 2 70 1 199 1 42 1 153 1 
204 1 140 1 353 1 367 1 42 1 323 1 167 1 373 1 354 1 276 1 
173 1 140 2 353 2 199 1 367 1 42 1 292 1 335 1 260 1 373 2 114 1 
169 1 139 1 140 5 367 2 260 3 373 4 67 1 353 5 199 2 253 1 73 1 292 1 42 2 153 1 354 1 114 1 
169 1 139 1 140 5 367 2 157 1 260 3 373 4 67 1 353 5 199 2 73 1 292 1 42 2 153 1 354 1 114 1 
30 1 274 2 140 1 367 1 369 1 260 1 196 1 373 1 350 1 240 1 198 2 327 1 353 1 37 1 199 1 56 1 42 1 354 1 
189 1 140 1 367 2 33 1 260 1 373 1 261 1 350 1 130 1 353 1 199 1 42 1 153 1 
242 1 274 1 355 1 259 1 214 1 50 1 198 1 327 1 177 1 
75 1 91 1 50 1 
242 1 369 1 214 1 108 1 50 1 
75 1 242 2 274 1 22 1 46 1 2 1 108 2 50 1 337 1 131 2 163 1 56 1 228 1 252 2 58 1 91 1 366 1 368 1 213 2 369 1 214 2 196 1 195 1 198 1 264 1 327 1 330 1 221 1 123 1 
74 1 258 1 342 1 59 1 
74 1 266 1 9 1 99 1 342 1 59 1 309 1 
266 1 299 1 220 1 
137 1 74 1 346 1 9 1 336 1 356 1 266 3 99 1 342 1 59 1 309 3 136 2 
74 1 352 1 266 2 9 1 99 1 342 1 59 1 309 2 119 1 
186 1 266 1 225 1 9 1 99 1 59 1 0 1 309 1 323 1 336 1 276 1 
266 1 9 1 99 1 342 1 59 1 309 1 336 1 
74 1 266 1 9 1 99 1 342 2 309 1 336 1 
244 1 283 1 92 1 9 2 336 1 266 2 99 2 342 1 59 1 309 2 
74 1 9 1 336 1 326 1 352 2 186 1 266 3 359 1 99 1 342 1 309 3 59 2 268 1 
74 1 9 1 225 1 246 1 323 2 336 1 276 1 51 1 352 1 266 2 99 1 342 1 59 1 309 2 167 1 
74 1 256 1 9 2 336 1 119 1 326 1 352 2 186 1 266 4 99 2 342 1 309 4 59 2 
74 1 266 1 9 1 99 1 342 1 59 1 309 1 336 1 
137 1 74 2 9 1 349 1 326 1 356 1 352 2 186 1 266 4 99 1 342 2 136 1 309 4 59 3 
74 1 9 1 36 1 336 1 352 1 266 2 87 1 99 1 342 1 59 1 309 2 270 1 
137 1 74 1 320 1 9 1 336 1 356 2 266 3 99 1 342 1 59 1 309 3 136 2 
23 1 230 2 59 2 60 1 
266 1 9 1 99 1 286 1 309 1 336 1 
74 1 352 1 266 2 9 1 99 1 342 1 59 1 309 2 268 1 336 1 
21 1 
74 1 266 1 9 1 99 1 342 1 59 1 309 1 336 1 
74 1 352 1 266 3 9 1 99 1 342 1 59 1 136 1 309 3 268 1 336 1 
326 1 186 1 59 1 349 1 
342 1 59 1 

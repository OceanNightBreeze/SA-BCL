#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
213 1 189 1 309 9 21 1 316 2 110 1 259 1 112 1 338 2 25 1 114 6 283 2 171 1 28 2 92 4 240 5 57 1 144 2 327 2 148 1 150 1 63 1 204 9 351 1 270 2 81 1 332 1 352 3 
213 1 189 1 309 9 21 1 316 2 110 1 259 1 112 1 338 2 25 1 114 6 283 2 171 1 28 2 92 4 240 5 57 1 144 2 327 2 148 1 150 1 63 1 204 9 351 1 270 2 81 1 332 1 352 3 
213 1 189 1 309 10 21 1 316 2 110 1 259 1 112 1 338 2 25 1 114 7 283 2 171 1 28 2 92 5 240 6 57 1 144 2 327 2 148 1 150 1 63 1 204 10 351 1 270 2 81 1 332 1 352 4 
213 1 189 1 309 7 21 1 316 2 110 1 259 1 112 1 338 2 25 1 114 4 283 2 171 1 28 2 92 3 240 4 57 1 144 2 327 1 148 1 150 1 63 1 204 7 351 1 270 2 332 1 352 2 
240 3 21 1 309 4 327 2 148 1 316 1 110 1 259 1 204 4 338 1 114 3 283 1 351 1 270 1 81 1 28 1 352 1 92 2 
240 1 213 1 134 1 144 1 21 1 309 2 313 1 316 1 259 1 112 1 204 2 338 1 283 1 351 1 28 1 39 1 
240 2 144 1 21 1 309 3 316 2 150 1 259 1 204 3 338 2 114 1 351 1 352 1 92 1 
309 9 21 1 354 1 316 2 110 1 259 1 338 2 114 7 283 1 28 1 92 4 240 5 57 1 144 1 327 2 148 1 150 1 203 1 204 9 351 1 270 1 81 1 332 1 352 3 
309 9 21 1 354 1 316 2 110 1 259 1 338 2 114 7 283 1 28 1 92 4 240 5 57 1 144 1 327 2 148 1 150 1 203 1 204 9 351 1 270 1 81 1 332 1 352 3 
35 1 62 1 359 1 
35 1 211 2 186 1 
188 2 47 2 181 1 218 2 219 2 131 2 363 1 126 2 
188 3 103 2 190 2 0 1 278 2 23 1 2 1 113 1 262 1 47 2 339 1 340 1 115 1 218 2 48 1 219 3 142 1 287 1 362 1 363 1 223 2 178 1 328 1 266 1 348 1 300 1 33 2 13 1 126 2 269 1 181 1 305 1 130 1 373 1 230 1 131 2 20 1 
188 1 47 1 218 1 219 1 136 1 131 1 308 1 363 1 234 1 126 1 
188 1 314 1 108 1 136 1 235 1 359 1 35 1 319 1 64 1 128 1 219 1 131 1 164 1 40 1 
188 1 314 1 108 1 136 1 235 1 359 1 126 1 35 1 319 2 47 1 64 1 128 2 218 1 219 1 131 1 
104 1 319 1 128 1 118 1 137 1 
35 1 104 1 319 2 128 2 118 1 371 1 260 1 359 1 
104 1 319 1 128 1 
188 1 299 1 136 1 126 1 319 1 47 1 128 1 118 1 218 1 219 1 131 1 308 1 363 1 234 1 
35 1 
35 1 104 1 319 2 128 2 118 1 371 1 324 1 359 1 
104 2 123 1 176 1 353 1 312 1 1 1 371 1 226 2 125 1 359 1 35 1 319 5 159 1 128 5 129 1 322 2 118 2 333 2 334 1 
181 1 62 1 
188 2 298 1 206 1 126 1 47 1 181 2 218 1 219 2 131 2 
67 1 237 1 239 1 
188 1 103 1 328 1 278 1 266 1 300 1 33 1 115 1 339 1 181 1 130 1 48 1 219 1 287 1 362 1 221 1 
188 2 103 1 328 1 278 1 266 1 300 1 317 1 33 1 237 1 47 1 339 1 115 1 130 1 48 1 218 1 219 2 287 1 131 1 362 1 294 1 
188 5 317 1 3 1 206 1 126 1 47 4 27 1 181 1 218 4 49 1 219 5 131 5 294 2 40 1 
188 2 47 2 218 2 219 2 136 1 131 2 308 1 140 1 
188 3 47 3 181 1 218 3 219 3 131 3 294 1 126 1 
188 1 47 1 218 1 219 1 136 1 131 1 308 1 
188 1 47 1 218 1 219 1 298 1 136 1 131 1 126 1 206 1 
188 4 103 1 190 2 0 1 336 1 314 1 278 1 23 1 108 1 317 1 136 1 235 1 113 1 319 1 262 1 47 3 339 1 115 1 48 1 218 3 219 4 287 1 362 1 363 1 294 1 56 1 223 1 178 1 328 1 266 1 348 1 300 1 33 1 13 1 126 2 206 1 269 1 64 1 181 1 128 1 305 1 130 1 131 3 20 1 
188 2 47 1 181 1 218 1 219 2 3 1 131 2 294 1 40 1 
188 3 314 1 108 1 136 1 317 1 235 1 126 1 206 1 35 1 319 1 47 3 64 1 128 1 218 3 219 3 272 1 131 3 294 2 56 1 
67 1 188 2 206 1 126 1 237 1 47 2 218 2 219 2 131 2 294 1 
188 1 103 1 328 1 278 1 266 1 300 1 33 1 115 1 339 1 181 1 130 1 48 1 219 1 287 1 362 1 
188 1 103 1 278 1 266 1 33 1 115 1 339 1 181 1 130 1 48 1 219 1 287 1 75 1 362 1 250 1 
67 2 190 2 0 1 23 1 237 2 285 1 262 1 342 1 142 2 220 1 239 2 143 1 91 1 346 1 93 1 223 4 178 1 296 1 205 1 13 2 269 1 101 1 246 1 20 1 
188 1 64 1 47 1 218 1 219 1 136 1 131 1 140 1 
173 1 280 1 
173 1 280 1 
329 1 32 1 
329 1 32 1 
329 1 32 1 
173 1 210 1 280 1 
172 1 329 1 173 2 32 1 263 1 280 2 
106 1 173 1 280 1 
173 1 210 1 280 1 
173 1 210 1 280 1 
42 1 173 1 280 1 
42 1 173 1 280 1 
42 1 173 1 280 1 
251 1 188 2 106 1 279 1 280 1 319 1 47 2 321 1 116 1 218 2 219 2 173 1 77 1 152 1 153 1 154 1 228 1 156 1 16 1 181 1 128 1 185 1 131 2 165 1 
60 2 310 1 369 1 85 1 109 1 152 2 280 2 154 2 318 1 35 1 228 1 319 2 321 3 116 2 128 2 173 2 245 1 185 2 263 1 
283 1 270 1 28 1 
283 1 313 1 28 1 
270 2 350 1 313 1 28 3 281 1 365 1 
270 1 313 1 151 1 28 2 281 1 365 1 
270 1 313 1 28 2 281 2 365 1 
251 1 104 1 22 2 1 3 215 2 195 1 72 1 359 1 319 5 88 1 285 1 322 1 118 4 343 1 198 1 344 1 361 1 123 2 93 1 371 1 226 1 205 1 35 2 156 1 16 1 17 2 128 5 101 1 333 1 211 3 186 1 334 1 
188 1 1 3 137 3 136 1 195 1 285 1 47 1 343 1 93 1 241 1 299 1 205 1 156 2 17 2 101 1 211 3 248 3 308 1 104 4 22 2 72 1 359 1 319 6 322 1 218 1 118 5 219 1 361 1 363 1 326 1 123 2 371 1 179 1 226 1 126 1 35 3 128 6 131 1 333 1 186 1 234 1 334 1 
22 2 1 3 215 1 72 1 195 1 359 1 88 1 319 3 285 1 322 1 118 2 343 1 344 1 123 2 93 1 226 1 125 1 205 1 35 3 156 1 17 2 128 3 101 1 333 1 211 4 186 2 
22 4 1 5 215 2 72 1 195 2 359 1 319 4 88 1 285 2 322 1 343 1 118 3 344 1 345 1 123 4 93 2 226 1 125 1 205 2 35 4 156 2 17 4 128 4 101 2 333 1 211 7 186 3 65 1 249 1 
197 1 62 1 362 1 
356 1 362 1 
158 1 
339 1 130 1 362 1 
307 1 362 1 
130 1 362 1 
197 2 339 1 130 1 214 1 306 1 362 3 
31 1 223 7 275 1 296 3 357 1 124 1 337 1 46 1 13 3 205 1 157 1 285 1 80 1 38 2 142 4 209 1 346 2 
31 1 223 7 275 1 296 3 357 1 124 1 337 1 46 1 13 3 205 1 157 1 285 1 80 1 38 2 142 4 209 1 346 2 
31 1 223 7 275 1 296 3 357 1 124 1 337 1 46 1 13 3 205 1 157 1 285 1 80 1 341 1 38 2 142 4 209 1 346 2 
190 2 275 2 0 1 23 1 357 1 337 2 216 1 46 1 195 3 262 1 285 4 142 16 288 1 346 5 29 1 31 1 223 31 93 3 94 1 178 1 296 10 224 1 124 5 370 3 13 15 205 4 157 2 127 4 80 2 38 3 101 3 209 1 233 1 166 1 
190 4 275 1 0 2 23 2 357 1 337 1 46 1 285 1 262 2 90 1 142 5 288 1 346 3 223 9 178 2 296 4 124 1 205 1 13 4 157 1 80 1 161 1 38 2 209 1 
103 1 168 1 309 2 21 1 253 1 313 1 278 1 316 1 44 1 259 1 338 1 114 1 283 1 287 1 28 2 240 1 30 1 144 1 201 1 10 1 266 1 33 1 204 2 303 1 351 1 270 1 350 1 231 1 232 1 273 1 
103 1 168 1 309 3 253 1 313 1 278 1 316 1 44 1 259 1 338 1 114 2 283 1 287 1 175 1 28 2 240 1 144 1 201 1 10 1 266 1 98 1 33 1 204 3 303 1 351 1 270 1 350 1 231 1 163 1 273 1 
103 1 168 1 309 2 253 1 313 1 278 1 44 1 259 1 114 2 283 1 287 1 175 1 28 2 240 1 144 1 201 1 266 1 33 1 204 2 303 1 351 1 350 1 270 1 163 1 273 1 
103 1 144 2 168 2 309 1 255 1 201 2 278 1 266 1 347 1 316 1 98 1 138 1 372 1 33 1 204 1 338 1 303 2 4 1 115 1 130 1 287 1 362 1 187 1 
103 1 168 1 309 1 21 1 253 1 313 1 278 1 316 1 44 1 338 1 283 1 287 1 175 1 28 2 144 1 201 1 10 1 266 1 33 1 204 1 303 1 270 1 350 1 231 1 232 1 273 1 
183 1 
188 1 1 2 278 2 136 1 235 1 282 2 284 1 89 4 5 2 287 1 290 1 55 1 7 1 200 1 149 1 301 1 64 1 211 2 164 1 104 6 103 2 255 1 355 1 314 1 108 1 111 1 72 1 359 1 319 5 170 2 115 2 322 1 219 1 325 2 362 1 364 1 366 2 122 1 123 2 177 2 266 1 371 3 226 1 33 2 268 2 35 2 128 5 130 1 271 1 333 1 131 1 186 2 187 1 334 1 40 1 
104 2 7 1 188 1 200 1 314 1 355 1 108 1 371 1 136 1 235 1 111 1 268 1 319 3 284 1 64 1 89 2 128 3 219 1 131 1 164 1 324 1 40 1 
104 1 188 1 355 1 314 1 108 1 136 1 235 1 111 1 359 1 319 3 284 1 89 3 219 1 324 1 7 1 366 1 200 1 371 1 35 1 64 1 128 3 131 1 164 1 40 1 
188 1 104 2 355 1 314 1 108 1 136 1 235 1 111 1 359 1 319 3 284 1 89 3 170 1 219 1 324 1 7 1 366 1 200 1 371 1 268 1 35 1 64 1 128 3 131 1 164 1 40 1 
188 1 274 1 1 1 136 1 235 1 282 2 284 1 89 6 5 2 7 1 200 1 149 1 64 1 164 1 104 7 68 1 314 1 355 1 108 1 169 1 111 1 359 5 319 5 170 4 322 1 119 1 219 1 324 1 325 2 366 4 123 1 177 2 371 3 226 1 268 4 35 5 128 5 271 1 331 1 131 1 333 1 186 2 40 1 334 1 
188 1 1 1 136 1 235 1 282 2 284 1 89 4 5 2 7 1 200 1 149 1 64 1 164 1 211 2 104 4 314 1 355 1 108 1 111 1 359 1 319 4 170 2 322 1 219 1 325 2 366 2 123 1 122 1 177 2 371 2 226 1 268 2 35 2 128 4 271 1 131 1 333 1 186 2 40 1 334 1 
104 4 188 1 274 1 355 1 314 1 1 1 108 1 169 1 136 1 235 1 111 1 359 1 282 2 319 4 284 1 170 2 89 4 5 2 322 1 219 1 325 2 366 2 7 1 123 1 200 1 177 2 149 1 371 2 226 1 268 2 35 1 64 1 128 4 271 1 331 1 131 1 333 1 164 1 186 2 40 1 334 1 
104 4 188 1 274 1 355 1 314 1 1 1 108 1 169 1 136 1 235 1 111 1 359 1 282 2 319 4 284 1 170 2 89 4 5 2 322 1 219 1 325 2 366 2 7 1 123 1 200 1 177 2 149 1 371 2 226 1 268 2 35 1 64 1 128 4 271 1 331 1 131 1 333 1 164 1 186 2 40 1 334 1 
104 4 188 1 274 1 105 1 355 1 314 1 1 1 108 1 136 1 235 1 111 1 359 1 282 2 319 4 284 1 170 2 89 4 322 1 219 1 325 2 295 1 366 2 7 1 59 2 367 2 123 1 200 1 242 1 149 1 371 2 226 1 268 2 35 1 64 1 128 4 131 1 333 1 211 2 164 1 40 1 334 1 
188 1 104 5 274 1 355 1 314 1 1 1 108 1 169 1 136 1 235 1 111 1 359 1 282 2 319 4 284 1 89 5 170 3 5 2 322 1 119 1 219 1 325 2 7 1 366 3 123 1 200 1 177 2 149 1 371 2 226 1 268 3 35 1 64 1 128 4 271 1 331 1 333 1 131 1 164 1 186 2 334 1 40 1 
188 1 104 5 274 1 355 1 314 1 1 1 108 1 169 1 136 1 235 1 111 1 359 1 282 2 319 4 284 1 89 5 170 3 5 2 322 1 119 1 219 1 325 2 7 1 366 3 123 1 200 1 177 2 149 1 371 2 226 1 268 3 35 1 64 1 128 4 271 1 331 1 333 1 131 1 164 1 186 2 334 1 40 1 
188 1 1 1 136 1 235 1 282 2 284 1 89 4 7 1 59 2 200 1 149 1 64 1 164 1 211 2 104 4 105 1 314 1 355 1 108 1 111 1 359 1 319 4 170 2 322 1 219 1 325 2 366 2 123 1 367 2 122 1 371 2 226 1 268 2 35 1 128 4 131 1 333 1 40 1 334 1 
67 1 190 2 223 6 0 1 296 2 178 1 23 1 357 1 337 1 62 1 46 1 13 3 205 1 237 1 285 1 262 1 269 1 181 2 80 1 38 1 142 3 209 1 239 1 346 2 91 1 20 1 
67 4 190 4 0 2 23 2 2 1 195 2 237 11 262 2 285 1 142 8 289 1 120 1 239 11 346 1 223 14 93 1 94 1 9 1 296 2 178 2 124 1 370 3 13 6 205 2 269 1 127 3 181 1 36 1 305 1 229 1 101 2 233 1 20 2 
67 1 103 1 188 2 190 2 0 1 278 1 23 1 317 1 86 1 2 1 196 1 262 1 47 1 339 1 115 1 48 1 218 1 219 2 287 1 142 1 289 1 362 1 221 1 294 1 223 2 328 1 178 1 266 1 300 1 33 1 13 1 269 1 181 1 130 1 305 1 131 1 20 1 66 1 
188 3 190 6 0 3 278 3 337 1 2 1 194 1 46 1 195 2 237 7 285 3 47 1 339 2 48 2 287 2 142 10 289 1 239 7 346 4 294 1 93 2 296 8 300 2 13 10 205 3 349 2 18 2 305 1 160 1 101 2 209 1 212 2 20 3 67 7 103 3 311 1 23 3 357 1 317 1 113 2 262 3 115 1 218 1 219 3 175 1 362 2 223 20 178 3 328 2 266 2 267 2 124 4 33 3 269 3 181 2 80 1 130 2 38 1 131 1 
188 1 190 4 0 2 278 6 2 1 47 1 339 1 142 1 287 4 91 1 294 1 146 1 147 1 13 1 155 1 99 1 305 1 20 2 103 7 255 1 315 1 107 1 23 2 262 2 115 2 217 1 218 1 219 1 362 4 30 1 264 1 223 2 178 2 266 3 225 1 33 7 330 1 269 2 182 1 130 3 373 2 131 1 187 1 
67 1 188 1 190 2 0 1 277 1 23 1 195 1 237 1 262 1 285 1 47 1 218 1 219 1 142 1 289 1 239 1 346 1 223 3 93 1 296 1 178 1 126 1 206 1 205 1 13 2 269 1 101 1 131 1 20 1 
67 1 190 2 223 2 0 1 296 1 178 1 23 1 124 1 205 1 237 1 262 1 269 1 101 1 142 2 239 1 143 1 91 1 20 1 
67 1 190 2 223 2 93 1 0 1 296 1 178 1 23 1 13 2 237 1 262 1 285 1 269 1 220 1 239 1 346 1 91 1 20 1 
67 2 190 2 0 1 23 1 195 1 237 2 262 1 285 1 142 2 239 2 91 1 346 1 223 4 93 1 178 1 296 2 124 1 205 1 13 2 269 1 101 1 20 1 
67 1 190 2 223 2 0 1 296 1 178 1 23 1 124 1 205 1 237 1 262 1 269 1 99 1 101 1 142 2 239 1 143 1 20 1 
67 1 190 2 223 2 93 1 0 1 296 1 178 1 23 1 13 2 237 1 262 1 285 1 269 1 99 1 220 1 239 1 346 1 20 1 
67 2 190 2 0 1 23 1 195 1 237 2 262 1 285 1 142 2 239 2 346 1 223 4 93 1 178 1 296 2 124 1 205 1 13 2 269 1 99 1 101 1 20 1 
67 2 190 2 93 1 223 4 0 1 296 2 178 1 23 1 124 1 195 1 13 2 205 1 237 2 285 1 262 1 269 1 101 1 142 2 239 2 346 1 20 1 
103 1 188 1 190 2 0 1 278 1 23 1 2 1 113 1 262 1 339 1 115 1 48 1 219 1 142 1 287 1 362 1 223 2 328 1 178 1 266 1 300 1 33 1 13 1 269 1 181 1 130 1 305 1 20 1 
103 1 188 1 190 2 0 1 278 1 23 1 2 1 258 1 262 1 339 1 115 1 48 1 219 1 142 1 287 1 75 1 362 1 223 2 178 1 266 1 33 1 13 1 269 1 181 1 130 1 305 1 20 1 250 1 
67 2 190 2 0 1 23 1 195 1 237 2 262 1 285 1 142 2 289 1 239 2 346 1 223 4 93 1 178 1 296 2 124 1 205 1 13 2 269 1 101 1 20 1 
67 2 103 1 188 1 190 2 0 1 278 1 23 1 113 1 195 1 237 2 285 1 262 1 339 1 48 1 219 1 142 2 287 1 239 2 346 1 362 1 30 1 93 1 223 4 296 2 328 1 178 1 266 1 124 1 300 1 33 1 13 2 205 1 269 1 130 1 101 1 212 1 20 1 
67 1 188 1 190 2 0 1 23 1 195 1 237 1 285 1 262 1 47 1 218 1 219 1 142 2 289 1 239 1 93 1 223 3 296 1 178 1 202 1 124 1 13 1 126 1 206 1 205 1 269 1 101 1 131 1 20 1 
41 2 133 1 43 1 190 4 335 2 0 2 23 2 195 3 320 1 262 2 285 3 142 9 323 1 346 3 223 19 93 3 94 1 178 2 296 6 11 1 243 1 124 3 370 1 13 10 205 3 127 2 161 1 101 3 233 1 247 1 
41 4 133 1 43 2 190 6 191 1 335 1 0 3 23 3 70 1 195 3 320 1 73 1 285 2 262 3 74 1 142 14 323 1 288 2 346 2 199 1 223 26 93 2 94 2 296 4 178 3 124 2 370 2 13 12 205 3 127 2 161 1 101 3 247 2 83 1 
133 1 41 4 190 6 43 2 191 1 0 3 335 1 337 1 195 4 46 1 285 5 142 20 288 1 346 4 199 1 93 4 94 3 296 8 243 1 205 5 13 21 101 4 161 1 209 1 247 1 23 3 357 1 70 1 320 1 262 3 73 1 74 1 323 1 223 41 178 3 124 4 370 3 227 1 127 4 80 1 38 1 233 1 83 1 
41 4 133 1 191 1 43 2 190 8 335 1 0 4 23 4 357 1 337 1 70 1 46 1 195 4 320 1 73 1 262 4 285 4 74 1 142 20 323 1 288 2 346 4 199 1 223 38 93 3 94 3 178 4 296 7 243 1 124 3 370 3 227 1 13 18 205 5 127 4 80 1 38 1 161 1 101 4 209 1 233 1 247 1 83 1 
41 4 133 1 191 1 43 1 190 4 335 1 0 2 23 2 357 1 337 1 70 1 46 1 195 7 320 1 73 1 262 2 285 8 74 1 142 27 323 1 288 1 346 7 199 1 223 52 93 7 94 2 9 2 178 2 296 14 124 7 370 4 13 25 205 8 127 4 80 1 38 1 161 1 101 7 209 1 233 2 247 1 83 1 
103 2 188 2 190 2 0 1 315 1 278 2 23 1 71 1 2 1 236 1 262 1 219 2 287 1 142 1 289 1 362 1 264 1 223 2 178 1 266 1 97 1 33 2 13 1 15 1 269 1 130 1 305 1 373 2 184 1 131 2 20 1 
103 2 30 1 313 1 201 1 278 2 266 1 95 1 44 1 33 2 283 1 270 1 350 1 304 1 231 1 287 1 273 1 175 1 28 2 291 1 
103 1 313 1 201 1 278 1 266 1 44 1 33 1 283 1 270 1 350 1 304 1 231 1 141 1 287 1 273 1 175 1 28 2 
103 1 145 1 201 1 255 1 278 1 266 1 347 1 33 1 115 1 130 1 287 1 362 1 291 1 187 1 
103 1 313 1 201 1 278 1 266 1 95 1 44 1 33 1 283 1 270 1 350 1 304 1 231 1 287 1 273 1 175 1 28 2 291 1 
84 1 
35 1 123 1 159 1 129 1 1 1 62 1 359 1 
104 1 1 1 359 1 319 1 5 1 322 1 123 1 177 1 371 1 226 1 35 2 128 1 271 1 333 1 211 1 186 1 334 1 
1 9 278 3 45 1 195 2 87 2 197 2 285 2 238 1 339 3 287 4 93 2 297 2 301 1 12 2 205 2 208 1 17 6 159 1 18 2 307 2 100 2 101 2 102 2 211 12 103 3 104 5 22 6 356 3 214 1 108 2 257 2 72 2 359 2 261 2 319 5 115 1 322 4 362 10 30 1 265 2 123 8 368 1 266 3 371 3 226 4 33 3 35 8 78 1 128 5 129 1 130 3 333 4 186 6 334 4 
104 1 191 1 22 8 1 13 70 1 72 1 24 1 195 4 359 2 261 1 319 1 73 1 285 4 322 2 199 1 123 8 93 4 94 1 9 1 297 5 371 1 370 2 301 1 226 2 205 4 14 1 35 7 17 8 127 2 128 1 101 4 333 2 211 10 233 1 186 5 83 1 334 2 
188 1 1 2 357 1 136 1 337 1 261 1 319 1 285 1 47 1 322 1 218 1 219 1 360 1 363 1 123 2 297 2 299 1 226 1 205 2 126 1 80 1 128 1 331 1 333 1 131 1 308 1 234 1 334 1 
123 1 1 1 226 1 359 1 35 1 159 1 322 1 129 1 333 1 334 1 
123 5 93 2 22 5 1 5 297 2 195 2 205 2 261 1 35 5 285 2 17 5 18 1 101 2 211 10 186 5 
35 1 319 1 104 1 128 1 371 1 359 1 
103 4 104 4 255 1 278 4 1 2 193 1 72 2 319 3 115 2 322 2 287 1 290 1 362 1 364 1 123 2 266 1 371 2 301 2 226 2 33 4 125 1 207 1 78 2 208 1 128 3 130 1 333 2 187 1 334 1 
103 1 188 3 190 2 0 1 278 1 23 1 113 1 262 1 47 2 115 1 339 1 218 2 48 1 219 3 287 1 363 1 362 1 223 1 178 1 328 1 266 1 348 1 300 1 33 1 13 1 126 2 269 1 181 1 305 1 130 1 131 2 20 1 
123 2 22 2 1 1 301 1 226 1 72 1 359 2 35 4 17 2 322 1 38 1 333 1 211 4 186 2 334 1 
58 1 116 1 154 1 
77 1 116 1 19 1 85 1 154 1 
58 1 116 1 154 1 
58 1 116 1 154 1 
116 1 132 1 154 1 
116 1 132 1 154 1 
116 1 132 1 154 1 
116 1 154 1 
173 1 280 1 
190 4 223 8 0 2 296 3 178 2 23 2 357 1 124 1 337 1 46 1 205 1 13 4 285 1 262 2 80 1 38 1 142 4 288 1 209 1 346 2 
223 6 296 2 357 1 337 1 62 1 46 1 13 3 205 1 285 1 80 1 38 1 142 3 209 1 346 2 
190 2 93 1 223 4 61 1 0 1 296 2 178 1 23 1 124 1 195 1 13 2 205 1 285 1 262 1 101 1 142 2 346 1 
93 1 223 7 94 1 296 2 124 1 370 1 195 1 13 4 205 1 285 1 127 2 142 3 101 1 233 1 346 1 
190 4 0 2 23 2 357 1 337 2 46 1 195 2 285 3 262 2 142 11 288 2 346 5 121 1 223 23 93 2 296 9 9 1 178 2 124 4 370 2 205 3 13 12 127 2 80 2 229 1 38 1 101 2 209 1 233 1 
223 1 127 1 13 1 
223 1 142 1 370 1 
190 2 223 6 93 1 0 1 61 1 178 1 296 3 23 1 124 1 195 1 13 3 205 1 262 1 285 1 18 1 101 1 142 3 346 2 
190 2 191 1 0 1 23 1 70 1 195 2 262 1 285 2 73 1 142 6 346 1 199 1 223 12 93 2 94 1 178 1 296 2 124 1 370 1 13 6 205 2 127 1 161 1 101 2 83 1 
223 6 296 2 357 1 124 1 337 1 205 1 13 3 285 1 80 1 142 3 346 1 
121 1 190 2 223 3 0 1 296 2 178 1 23 1 124 1 337 1 46 1 13 2 262 1 80 1 142 1 209 1 288 1 346 1 
190 2 223 10 0 1 178 1 296 5 23 1 124 2 357 1 337 2 13 5 205 2 262 1 285 2 80 2 161 1 360 1 142 5 346 3 
190 2 223 2 0 1 178 1 296 1 23 1 124 1 205 1 262 1 161 1 101 1 142 2 
190 2 93 1 223 4 0 1 296 2 178 1 23 1 124 1 195 1 13 2 205 1 285 1 262 1 161 1 101 1 142 2 346 1 
121 1 190 6 223 3 0 3 178 3 296 2 243 1 23 3 124 1 337 1 13 2 262 3 80 1 161 1 142 1 288 1 346 1 
190 10 0 5 23 5 357 2 337 3 216 1 46 1 195 3 262 5 285 5 142 16 288 2 346 7 29 1 121 1 223 34 93 3 94 1 61 1 178 5 296 12 224 1 243 1 124 5 370 3 13 18 205 5 127 4 80 3 38 1 161 1 101 3 209 1 233 1 
190 2 0 1 23 1 357 1 70 1 337 1 46 1 285 1 262 1 142 4 346 2 223 8 94 1 178 1 296 2 370 1 205 1 13 4 127 1 80 1 38 1 161 1 209 1 
190 4 0 2 23 2 357 1 337 1 70 1 46 1 195 1 285 1 262 2 142 6 346 2 223 11 94 1 61 1 178 2 296 3 124 1 370 1 13 5 205 2 127 2 80 1 38 1 161 1 101 1 209 1 233 1 
190 6 191 1 0 3 23 3 357 1 337 1 70 1 46 1 195 2 73 1 262 3 285 3 142 9 288 1 346 3 199 1 223 19 93 2 94 1 61 1 178 3 296 4 124 1 370 1 13 10 205 3 127 1 80 1 38 1 161 1 101 2 209 1 83 1 
190 6 191 1 0 3 23 3 357 1 337 1 70 1 46 1 195 2 262 3 285 2 73 1 142 10 288 1 346 3 199 1 223 17 93 1 94 1 61 1 178 3 296 5 124 2 370 1 13 7 205 3 127 1 80 1 38 1 161 1 101 2 209 1 83 1 
190 2 0 1 23 1 357 1 70 1 337 1 46 1 285 1 262 1 142 4 346 2 223 8 94 1 178 1 296 2 370 1 205 1 13 4 127 1 80 1 38 1 161 1 209 1 
190 2 191 1 0 1 23 1 70 1 195 2 262 1 285 2 73 1 142 6 346 1 199 1 223 12 93 2 94 1 178 1 296 2 124 1 370 1 13 6 205 2 127 1 161 1 101 2 83 1 
190 8 191 1 0 4 23 4 357 1 337 1 70 1 46 1 195 2 73 1 262 4 285 2 142 10 288 2 346 3 199 1 223 18 93 1 94 1 61 1 178 4 296 5 124 2 370 1 13 8 205 3 127 1 80 1 38 1 161 1 101 2 209 1 83 1 
190 8 191 1 0 4 23 4 70 1 195 3 73 1 262 4 285 2 142 9 288 2 346 3 199 1 223 16 93 2 94 1 178 4 296 6 243 1 124 3 370 1 13 7 205 3 127 1 161 1 101 3 83 1 
223 7 296 6 124 3 357 1 337 3 46 1 13 4 205 1 285 1 80 3 142 3 209 2 346 3 
190 8 191 1 0 4 23 4 357 1 337 1 70 1 46 1 195 2 73 1 262 4 285 2 142 10 288 2 346 3 199 1 223 18 93 1 94 1 178 4 296 4 243 1 124 1 370 1 13 8 205 3 127 1 80 1 38 1 161 1 101 2 209 1 83 1 
188 1 222 1 181 1 219 1 131 1 3 1 40 1 
222 1 188 1 167 1 252 1 192 1 3 1 181 1 286 1 219 1 50 1 131 1 40 1 
103 1 115 1 130 1 255 1 278 1 266 1 287 1 62 1 362 1 33 1 187 1 
188 2 103 1 278 1 266 1 300 1 33 1 47 1 339 1 115 1 181 1 130 1 48 1 218 1 219 2 287 1 131 1 362 1 294 1 
188 2 103 1 314 1 278 1 266 1 136 1 300 1 33 1 12 1 64 1 47 1 78 1 339 2 181 1 130 2 48 1 218 2 307 1 219 2 287 1 131 2 362 3 294 1 
188 2 103 2 8 1 314 1 278 2 266 1 136 1 33 2 12 1 64 1 47 1 78 1 339 2 181 1 130 2 48 1 218 2 307 1 219 2 287 1 131 2 75 1 362 3 294 1 
103 3 104 1 8 1 356 1 278 3 108 1 256 1 266 1 33 3 359 1 12 1 35 1 319 2 197 1 78 1 115 1 339 1 128 2 130 1 307 1 287 1 52 1 362 4 
103 3 104 1 8 1 265 1 356 1 278 3 108 1 266 1 33 3 359 1 12 1 35 1 319 2 197 1 78 1 115 1 339 1 128 2 130 1 307 1 287 1 362 4 
103 1 146 1 278 1 266 1 287 1 33 1 
103 6 214 1 278 5 339 1 115 2 217 1 287 3 362 3 30 1 264 1 146 1 147 1 266 2 225 1 33 6 330 1 79 1 182 1 373 1 130 2 
67 1 188 2 103 1 190 4 0 2 278 1 23 2 357 1 337 1 46 1 113 1 237 1 285 1 262 2 47 1 339 1 48 1 218 1 219 2 142 3 287 1 289 1 239 1 346 2 362 1 294 1 30 1 223 6 296 2 178 2 328 1 266 1 267 1 300 1 33 1 13 3 205 1 15 1 269 2 181 2 80 1 130 1 38 1 209 1 131 1 212 1 20 2 
103 1 104 2 356 1 1 1 278 1 108 1 257 1 87 1 359 1 319 3 197 1 115 1 322 2 118 1 362 2 123 1 265 1 371 1 226 2 33 1 35 1 208 1 159 1 128 3 129 1 333 2 102 1 334 2 
30 1 103 2 146 1 214 1 278 2 266 1 45 1 33 2 197 1 339 1 130 1 287 2 362 2 
30 1 103 4 8 1 115 1 130 1 255 1 278 4 266 1 287 1 51 1 362 1 33 4 187 1 
103 2 278 2 107 1 266 1 225 1 33 2 330 1 155 1 78 1 339 1 130 1 160 1 287 2 362 1 
103 1 283 1 115 1 313 1 278 1 266 1 287 1 44 1 28 1 33 1 
30 1 103 2 264 1 278 2 266 1 33 2 130 1 184 1 287 1 175 1 362 1 
103 5 30 1 264 1 255 1 147 1 278 4 266 2 33 5 78 1 115 1 217 1 130 2 287 2 51 1 362 3 187 1 
103 5 30 1 264 1 255 1 147 1 278 4 266 2 33 5 78 1 115 1 130 2 287 2 51 1 53 1 362 3 187 1 
188 2 103 1 278 1 266 1 33 1 47 1 339 1 115 1 181 1 130 1 48 1 218 1 219 2 287 1 131 1 75 1 362 1 294 1 
103 1 214 1 278 1 266 1 225 1 33 1 330 1 78 1 79 1 339 1 130 1 287 2 362 1 
181 1 117 1 69 1 174 1 358 1 
314 1 108 1 69 2 136 1 235 1 358 1 359 1 139 1 35 1 319 2 64 1 181 1 128 2 117 2 118 1 174 2 292 1 54 1 56 1 
188 1 219 1 69 1 174 1 97 1 131 1 71 1 358 1 236 1 
358 1 139 1 54 1 
240 1 351 1 62 1 259 1 
240 1 351 1 309 1 316 1 259 1 204 1 338 1 
144 1 303 1 309 1 
240 1 21 1 309 3 316 1 112 2 259 1 204 3 338 1 180 1 351 1 37 1 374 1 
240 1 114 1 351 1 327 1 309 2 316 1 259 1 204 2 338 1 
240 1 21 1 309 1 148 1 316 1 204 1 338 1 283 1 270 1 28 1 92 1 
240 1 351 1 309 1 21 1 316 1 204 1 338 1 
351 2 309 1 21 1 316 1 259 1 204 1 338 1 
240 1 76 1 21 1 309 2 276 1 316 2 204 2 338 2 351 1 82 1 
240 2 57 1 21 1 309 3 316 1 259 1 204 3 338 1 114 2 351 1 332 1 352 1 92 1 
240 1 21 1 309 2 313 1 316 1 259 1 204 2 34 1 338 1 114 1 283 1 351 1 350 1 270 1 28 2 
240 2 21 1 309 4 327 1 316 2 259 1 204 4 338 2 114 2 351 1 81 1 352 1 92 1 
240 1 351 1 309 1 21 1 316 1 259 1 204 1 338 1 
240 3 309 4 316 1 112 1 259 2 204 4 180 1 338 1 114 2 351 2 37 1 293 1 352 1 92 1 
240 1 21 1 309 2 135 1 316 1 203 1 259 1 204 2 338 1 244 1 114 1 351 1 
240 1 21 1 309 3 254 1 316 1 112 2 259 1 204 3 180 1 338 1 351 1 37 2 
240 2 26 1 162 1 96 2 
302 1 309 1 21 1 316 1 204 1 338 1 
240 1 114 1 57 1 351 1 309 2 21 1 316 1 259 1 204 2 338 1 
6 1 
240 1 351 1 309 1 21 1 316 1 259 1 204 1 338 1 
240 1 57 1 21 1 309 3 316 1 112 1 259 1 204 3 338 1 114 1 351 1 
240 1 293 1 92 1 352 1 
240 1 351 1 

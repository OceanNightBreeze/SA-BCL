#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 379 310 (203,286) (203,286) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 379 310 (203,286) (203,286) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 379 310 (203,286) (203,286) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 379 310 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 379 310 230 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 379 310 230 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 4 234 1 236 2 201 2 203 1 4 1 334 1 286 1 118 2 310 1 313 2 100 1 31 2 12 1 316 1 220 1 52 1 82 3 130 1 320 1 348 2 222 7 349 7 228 3 379 2 
303 4 234 1 236 2 201 2 203 1 4 1 334 1 286 1 118 2 310 1 313 2 100 1 31 2 12 1 316 1 220 1 52 1 82 3 130 1 320 1 348 2 222 7 349 7 228 3 379 2 
303 4 234 1 236 2 201 2 203 1 4 1 334 1 286 1 118 2 310 1 313 2 100 1 31 2 12 1 316 1 220 1 52 1 82 3 130 1 320 1 348 2 222 7 349 7 228 3 379 2 
303 4 234 1 236 2 201 2 203 1 247 1 4 1 334 1 286 1 118 2 310 1 313 2 100 1 31 2 12 1 316 1 220 1 52 1 82 3 130 1 103 1 320 1 348 2 222 7 349 7 228 4 379 2 
303 1 320 1 222 2 100 1 349 2 118 1 236 1 201 1 12 1 310 1 228 1 82 1 313 1 379 1 
171 1 201 1 128 1 239 1 52 1 130 1 103 1 320 1 247 1 222 2 348 1 118 1 349 2 228 1 313 1 379 1 
303 1 31 1 82 1 103 1 320 1 247 1 4 1 222 3 348 1 118 2 349 3 228 2 313 2 
303 5 99 1 100 1 236 1 201 1 31 2 12 1 316 1 82 3 320 1 4 1 334 1 222 7 348 1 118 2 349 7 310 1 228 3 313 2 379 1 230 1 
303 5 99 1 100 1 236 1 201 1 31 2 12 1 316 1 82 3 320 1 4 1 334 1 222 7 348 1 118 2 349 7 310 1 228 3 313 2 379 1 230 1 
71 1 323 1 380 1 
37 1 64 2 323 1 
162 2 198 2 73 2 113 2 158 1 1 2 242 2 241 1 
162 3 198 3 111 1 113 2 233 1 1 2 89 1 182 1 242 2 241 1 307 2 26 1 68 1 73 2 265 2 337 1 287 1 121 1 44 1 370 2 290 1 125 1 215 2 150 1 315 1 83 1 154 1 155 1 132 1 107 1 158 1 193 1 178 1 108 2 160 1 229 1 257 1 
355 1 162 1 198 1 73 1 113 1 1 1 144 1 367 1 242 1 241 1 
232 1 198 1 162 1 214 1 49 1 204 1 273 1 242 1 71 1 19 1 144 1 323 1 30 1 231 1 
198 1 162 1 113 1 214 1 1 1 49 2 204 1 242 1 71 1 73 1 19 1 144 1 323 1 30 1 231 2 
49 1 188 1 65 1 328 1 231 1 
324 1 71 1 49 2 65 1 256 1 328 1 323 1 231 2 
49 1 65 1 231 1 
355 1 112 1 198 1 162 1 113 1 1 1 49 1 328 1 241 1 242 1 73 1 144 1 367 1 231 1 
323 1 
71 1 49 2 65 1 256 1 328 1 323 1 219 1 231 2 
88 1 49 5 328 2 65 2 329 1 25 2 218 1 152 1 297 1 281 1 71 1 72 2 133 1 256 1 323 1 288 1 161 2 97 1 231 5 
158 1 380 1 
162 2 198 2 73 1 113 1 158 2 1 1 191 1 42 1 242 2 
294 1 117 1 221 1 
370 1 162 1 198 1 111 1 125 1 233 1 182 1 307 1 275 1 26 1 68 1 158 1 265 1 337 1 287 1 160 1 
370 1 111 1 198 2 162 2 125 1 113 1 233 1 1 1 182 1 242 1 221 1 307 1 68 1 26 1 244 1 54 1 265 1 337 1 287 1 160 1 
54 1 162 3 198 3 73 1 113 3 158 1 1 3 242 3 
162 1 198 1 113 1 1 1 144 1 367 1 242 1 
162 1 198 1 73 1 113 1 1 1 191 1 144 1 42 1 242 1 
111 1 162 4 198 4 113 3 233 1 1 3 89 1 204 1 182 1 242 3 241 1 307 1 68 1 26 1 244 1 73 2 144 1 265 1 337 1 287 1 42 1 30 1 370 1 148 1 125 1 214 1 49 1 215 1 314 1 315 1 83 1 154 1 54 1 155 1 132 1 19 1 107 1 158 1 193 1 178 1 108 2 160 1 257 1 231 1 
54 1 232 1 162 2 198 2 113 1 158 1 1 1 237 1 242 2 
198 3 162 3 113 3 214 1 1 3 49 1 314 1 204 1 242 3 244 1 54 2 73 1 19 1 144 1 42 1 224 1 323 1 30 1 231 1 
198 2 162 2 294 1 113 2 1 2 242 2 221 1 54 1 73 1 42 1 
370 1 162 1 198 1 111 1 125 1 233 1 182 1 307 1 26 1 68 1 158 1 265 1 287 1 337 1 160 1 
370 1 162 1 198 1 111 1 233 1 182 1 307 1 68 1 158 1 376 1 265 1 287 1 337 1 160 1 354 1 
306 1 89 1 361 1 117 2 267 1 211 1 311 1 369 1 7 1 290 2 294 2 173 1 215 4 50 1 315 2 83 1 221 2 131 1 132 1 107 1 193 1 178 1 108 2 136 1 
162 1 198 1 113 1 1 1 144 1 30 1 242 1 302 1 
232 1 198 5 162 5 113 4 1 4 237 1 114 1 242 5 116 1 54 2 244 1 73 1 158 1 42 1 
162 2 198 2 113 2 1 2 144 1 367 1 302 1 242 2 
23 1 60 1 
23 1 60 1 
86 1 169 1 
86 1 169 1 
86 1 169 1 
69 1 23 1 60 1 
23 1 60 1 312 1 
170 1 23 2 60 2 301 1 86 1 169 1 
69 1 23 1 60 1 
69 1 23 1 60 1 
304 1 23 1 60 1 
304 1 23 1 60 1 
304 1 23 1 60 1 
77 2 23 2 373 2 49 2 51 3 40 1 331 1 332 1 27 2 142 1 85 1 21 1 223 1 60 2 301 1 268 2 109 2 323 1 231 2 
198 2 162 2 23 1 113 2 1 2 140 1 242 2 67 1 27 1 268 1 312 1 212 1 77 1 270 1 373 1 49 1 51 1 158 1 85 1 34 1 300 1 60 1 227 1 231 1 
236 1 201 1 379 1 
201 1 239 1 379 1 
177 1 181 1 236 2 201 3 342 1 239 1 
177 1 236 1 172 1 201 2 342 1 239 1 
177 1 236 1 201 2 342 2 239 1 
37 1 138 1 64 3 140 1 65 1 328 4 25 1 329 3 67 1 284 1 245 1 71 1 72 1 311 1 76 1 7 1 49 5 173 1 50 1 152 2 375 2 298 1 274 1 176 2 346 1 133 1 192 2 300 1 256 1 323 2 161 1 231 5 
37 3 199 1 138 3 64 9 235 5 65 6 328 7 25 2 329 8 284 1 245 2 71 1 72 2 92 1 183 1 364 1 311 3 288 1 7 3 49 9 173 3 188 5 50 3 344 1 152 6 375 6 298 2 176 6 133 1 300 4 256 1 226 1 323 5 161 2 231 9 
37 2 138 1 64 4 328 2 25 1 329 3 245 1 71 1 72 1 311 1 76 1 288 1 7 1 49 3 173 1 50 1 152 2 298 1 375 2 274 1 176 2 300 1 192 1 323 3 161 1 231 3 
37 3 199 1 138 2 64 7 328 3 25 1 329 5 245 1 71 1 72 1 92 1 311 2 288 1 76 1 7 2 49 4 173 2 50 2 344 1 152 4 375 4 298 1 274 1 176 4 300 2 192 2 323 4 161 1 231 4 
263 1 337 1 380 1 
337 1 217 1 
0 1 
337 1 160 1 
263 2 59 1 337 3 287 1 120 1 160 1 
337 1 287 1 160 1 
62 1 337 1 
7 1 290 4 173 1 215 7 24 1 174 1 296 1 315 3 362 1 345 1 261 2 262 1 167 1 352 1 211 3 136 2 187 1 
7 1 290 4 173 1 215 7 24 1 174 1 296 1 315 3 362 1 345 1 261 2 262 1 167 1 352 1 211 3 136 2 187 1 
7 1 290 4 173 1 215 7 24 1 174 1 296 1 315 3 362 1 345 1 261 2 262 1 143 1 167 1 352 1 211 3 136 2 187 1 
39 1 24 1 308 1 261 1 246 1 262 1 167 1 210 1 211 2 187 2 290 3 149 1 215 6 315 3 317 1 16 1 83 1 345 1 107 1 178 1 193 1 108 2 352 1 136 1 
39 1 24 1 362 1 261 2 262 1 167 1 211 4 187 1 7 1 290 5 173 1 11 1 215 9 174 1 296 1 315 4 83 2 345 1 18 1 107 2 193 2 178 2 108 4 136 3 
111 1 303 1 305 1 181 1 236 1 201 2 239 1 182 1 66 1 307 1 247 1 118 1 265 1 6 1 209 1 313 1 370 1 78 1 292 1 103 1 320 1 222 2 348 1 321 1 299 1 349 2 228 1 110 1 278 1 379 1 
111 1 303 2 305 1 181 1 236 1 201 2 239 1 182 1 66 1 307 1 282 1 247 1 118 1 265 1 6 1 313 1 370 1 340 1 78 1 292 1 103 1 222 3 348 1 321 1 349 3 228 1 110 1 278 1 379 1 196 1 
111 1 303 2 305 1 181 1 236 1 201 2 239 1 182 1 307 1 247 1 265 1 6 1 370 1 340 1 78 1 292 1 103 1 348 1 222 2 349 2 228 1 110 1 278 1 196 1 379 1 
111 1 233 1 139 1 327 1 182 1 307 1 282 1 165 1 335 1 118 1 265 1 337 1 313 1 370 1 78 2 190 1 222 1 348 2 349 1 225 1 110 2 160 1 278 2 
370 1 111 1 340 1 292 1 78 1 305 1 181 1 236 1 201 2 239 1 182 1 66 1 307 1 320 1 321 1 348 1 222 1 118 1 349 1 265 1 6 1 209 1 110 1 313 1 278 1 379 1 
57 1 
37 2 325 2 232 1 233 2 326 1 329 2 182 1 242 1 283 1 245 1 41 1 94 2 144 1 337 1 96 1 48 1 295 1 49 5 343 1 13 1 189 2 151 2 190 1 152 2 14 1 56 1 19 1 254 1 256 3 159 2 160 1 161 1 22 4 111 1 198 1 162 1 64 2 65 6 25 1 204 1 307 2 71 1 72 1 28 1 265 2 30 1 370 2 79 2 214 1 273 1 133 1 225 1 323 2 36 2 231 5 
22 2 232 1 198 1 162 1 214 1 49 3 65 2 189 1 204 1 219 1 273 1 242 1 56 1 41 1 19 1 254 1 28 1 144 1 256 1 96 1 30 1 231 3 
22 3 162 1 198 1 232 1 65 1 204 1 242 1 71 1 41 1 28 1 144 1 96 1 30 1 214 1 49 3 219 1 273 1 56 1 19 1 254 1 256 1 159 1 323 1 231 3 
22 3 162 1 198 1 232 1 65 2 204 1 242 1 71 1 41 1 28 1 94 1 144 1 96 1 30 1 214 1 49 3 189 1 219 1 273 1 56 1 19 1 254 1 256 1 159 1 323 1 231 3 
37 2 232 1 325 2 326 1 329 1 242 1 41 1 94 4 144 1 96 1 145 1 49 5 343 1 189 4 151 2 152 1 56 1 19 1 254 1 256 3 194 1 159 4 161 1 22 6 162 1 198 1 65 7 360 1 25 1 204 1 71 5 72 1 28 1 122 1 30 1 214 1 79 2 126 1 219 1 273 1 133 1 323 5 36 2 231 5 
37 2 232 1 325 2 326 1 329 1 242 1 283 1 41 1 94 2 144 1 96 1 49 4 343 1 189 2 151 2 152 1 56 1 19 1 254 1 256 2 159 2 161 1 22 4 162 1 198 1 64 2 65 4 25 1 204 1 71 1 72 1 28 1 30 1 214 1 79 2 273 1 133 1 323 2 36 2 231 4 
37 2 22 4 325 2 162 1 198 1 232 1 326 1 65 4 360 1 329 1 25 1 204 1 242 1 71 1 41 1 72 1 28 1 94 2 144 1 96 1 30 1 79 2 214 1 49 4 126 1 343 1 189 2 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 194 1 159 2 323 1 36 2 161 1 231 4 
37 2 22 4 325 2 162 1 198 1 232 1 326 1 65 4 360 1 329 1 25 1 204 1 242 1 71 1 41 1 72 1 28 1 94 2 144 1 96 1 30 1 79 2 214 1 49 4 126 1 343 1 189 2 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 194 1 159 2 323 1 36 2 161 1 231 4 
22 4 325 2 162 1 198 1 232 1 64 2 65 4 329 1 25 1 204 1 242 1 71 1 41 1 72 1 93 2 28 1 94 2 144 1 96 1 339 1 30 1 291 2 214 1 49 4 343 1 189 2 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 194 1 159 2 134 1 323 1 161 1 353 1 231 4 
37 2 22 5 325 2 162 1 198 1 232 1 326 1 65 5 360 1 329 1 25 1 204 1 242 1 71 1 41 1 72 1 28 1 94 3 144 1 96 1 122 1 30 1 79 2 214 1 126 1 49 4 343 1 189 3 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 194 1 159 3 323 1 36 2 161 1 231 4 
37 2 22 5 325 2 162 1 198 1 232 1 326 1 65 5 360 1 329 1 25 1 204 1 242 1 71 1 41 1 72 1 28 1 94 3 144 1 96 1 122 1 30 1 79 2 214 1 126 1 49 4 343 1 189 3 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 194 1 159 3 323 1 36 2 161 1 231 4 
22 4 325 2 232 1 198 1 162 1 64 2 65 4 329 1 25 1 204 1 242 1 283 1 71 1 41 1 72 1 93 2 28 1 94 2 144 1 96 1 30 1 291 2 214 1 49 4 343 1 189 2 151 2 152 1 273 1 56 1 19 1 254 1 133 1 256 2 159 2 134 1 323 1 161 1 231 4 
24 1 89 1 362 1 261 1 262 1 117 1 211 2 369 1 7 1 290 3 294 1 173 1 215 6 174 1 296 1 315 3 83 1 221 1 132 1 107 1 158 2 193 1 178 1 108 2 136 2 380 1 
38 1 138 2 89 1 117 8 144 1 208 1 211 2 311 2 7 1 290 6 149 2 372 1 294 3 10 1 215 11 173 2 50 1 315 5 252 1 83 2 16 2 221 8 345 1 155 1 132 2 107 2 158 1 193 2 178 2 108 4 195 1 136 1 258 1 
111 1 162 2 198 2 233 1 113 1 1 1 89 1 182 1 242 1 307 1 68 1 26 1 244 1 285 1 265 1 207 1 337 1 287 1 44 1 370 1 290 1 124 1 125 1 294 1 215 2 315 1 83 1 275 1 54 1 155 1 132 1 107 1 158 1 178 1 193 1 195 1 108 2 160 1 
138 2 233 1 1 1 89 3 182 2 242 1 244 1 287 2 337 2 44 1 7 3 290 10 340 1 294 7 50 2 296 1 54 1 154 2 345 4 155 1 156 2 107 3 158 2 193 3 108 6 195 1 160 2 356 2 197 1 198 3 162 3 111 2 358 1 113 1 200 2 24 1 362 1 307 3 261 1 26 2 68 2 262 1 117 7 265 3 266 2 168 1 311 2 211 8 370 3 125 2 215 20 173 3 174 1 315 10 83 3 221 7 132 3 178 3 136 4 
162 1 198 1 111 2 113 1 233 2 1 1 89 2 182 2 91 1 242 1 307 8 74 1 265 7 337 3 75 1 44 1 369 1 370 8 290 1 340 1 47 1 215 2 315 1 190 1 83 2 54 1 155 1 157 1 132 2 58 1 107 2 299 1 193 2 178 2 350 1 108 4 225 1 229 2 160 2 
357 1 198 1 162 1 138 1 113 1 1 1 89 1 242 1 73 1 117 1 42 1 211 1 311 1 7 1 290 1 294 1 173 1 215 3 50 1 315 2 83 1 221 1 132 1 107 1 193 1 178 1 108 2 195 1 136 1 
290 2 294 1 215 2 173 1 89 1 361 1 83 1 221 1 345 1 132 1 107 1 117 1 178 1 193 1 108 2 211 1 311 1 369 1 
7 1 294 1 306 1 215 2 89 1 50 1 315 2 83 1 221 1 132 1 107 1 117 1 178 1 193 1 108 2 211 1 136 1 369 1 
138 1 89 1 117 2 311 1 211 2 369 1 7 1 290 2 294 2 173 1 215 4 50 1 315 2 83 1 221 2 345 1 132 1 107 1 193 1 178 1 108 2 136 1 
290 2 294 1 47 1 215 2 173 1 89 1 361 1 83 1 221 1 345 1 132 1 107 1 117 1 178 1 193 1 108 2 211 1 311 1 
7 1 294 1 47 1 306 1 215 2 89 1 50 1 315 2 83 1 221 1 132 1 107 1 117 1 178 1 193 1 108 2 211 1 136 1 
138 1 89 1 117 2 311 1 211 2 7 1 290 2 47 1 294 2 173 1 215 4 50 1 315 2 83 1 221 2 345 1 132 1 107 1 193 1 178 1 108 2 136 1 
138 1 89 1 117 2 311 1 211 2 7 1 290 2 294 2 215 4 173 1 50 1 315 2 83 1 221 2 345 1 132 1 107 1 193 1 178 1 108 2 136 1 
111 1 198 1 162 1 233 1 89 1 182 1 307 1 68 1 26 1 265 1 287 1 337 1 44 1 370 1 290 1 125 1 215 2 315 1 83 1 154 1 155 1 132 1 107 1 158 1 178 1 193 1 108 2 160 1 
111 1 198 1 162 1 233 1 89 1 182 1 307 1 68 1 265 1 287 1 337 1 43 1 44 1 370 1 290 1 215 2 315 1 83 1 155 1 132 1 107 1 158 1 376 1 178 1 193 1 108 2 160 1 354 1 
138 1 89 1 117 2 311 1 211 2 7 1 290 2 294 2 173 1 215 4 50 1 315 2 83 1 221 2 345 1 132 1 107 1 193 1 178 1 108 2 195 1 136 1 
356 1 111 1 198 1 162 1 138 1 89 1 182 1 307 1 68 1 26 1 117 2 265 1 287 1 337 1 211 2 311 1 7 1 370 1 290 2 125 1 294 2 215 4 173 1 50 1 315 2 83 1 221 2 345 1 154 1 132 1 107 1 299 1 178 1 193 1 108 2 160 1 136 1 
198 1 162 1 138 1 113 1 1 1 89 1 242 1 73 1 117 1 42 1 309 1 211 1 311 1 7 1 290 2 294 1 173 1 215 3 50 1 315 1 83 1 221 1 345 1 132 1 107 1 193 1 178 1 108 2 195 1 
39 2 138 3 359 1 24 1 280 1 279 1 362 1 261 1 246 2 262 1 95 1 366 1 185 1 338 1 211 6 311 3 7 4 123 1 290 17 149 2 293 1 341 1 11 1 215 33 173 4 174 1 50 3 296 1 315 16 251 3 83 4 16 2 345 3 106 1 104 1 322 1 107 4 193 4 178 4 108 8 136 3 
39 2 138 3 280 1 279 1 246 2 95 1 366 1 338 1 211 4 311 3 7 2 123 1 290 14 149 2 293 1 341 2 11 1 215 26 173 3 250 1 50 2 315 12 251 4 83 3 16 2 345 2 106 1 104 1 322 2 107 3 193 3 178 3 108 6 136 2 
39 2 138 3 24 1 280 1 279 1 362 1 261 1 246 3 262 1 95 1 366 1 185 1 338 1 211 7 311 3 269 1 7 4 123 1 290 19 149 3 293 1 341 1 11 1 215 37 173 4 250 1 174 1 50 3 296 1 315 18 251 4 83 4 16 3 345 4 106 1 104 1 322 2 107 4 193 4 178 4 108 8 136 3 
39 2 138 3 24 1 280 1 279 1 362 1 261 1 246 2 262 1 95 1 366 1 185 1 338 1 211 5 311 3 7 4 123 1 290 18 149 2 293 1 341 1 11 1 215 35 173 4 250 1 174 1 50 3 296 1 315 17 251 4 83 4 16 2 345 3 106 1 104 1 322 1 107 4 193 4 178 4 108 8 136 2 
39 2 138 3 280 1 279 1 246 2 95 1 366 1 338 1 211 6 311 3 7 3 123 1 290 14 149 2 293 1 341 1 11 1 215 28 173 3 250 1 50 3 315 14 251 4 83 3 16 2 345 3 106 1 104 1 322 1 107 3 193 3 178 3 108 6 136 3 
77 1 27 1 23 1 373 1 142 1 21 1 60 1 301 1 268 1 129 1 
34 1 312 1 
77 1 17 1 27 1 23 1 259 1 373 1 60 1 268 1 153 1 
77 1 23 1 373 1 49 1 51 2 40 1 332 1 27 1 142 1 85 1 21 1 223 1 60 1 301 1 268 1 109 1 323 1 231 1 
77 1 23 1 373 1 49 1 51 2 40 1 332 1 27 1 142 1 85 1 21 1 223 1 60 1 301 1 268 1 109 1 323 1 231 1 
77 1 23 1 373 1 49 1 51 2 40 1 332 1 27 1 142 1 85 1 21 1 223 1 60 1 301 1 268 1 109 1 323 1 231 1 
69 1 170 1 119 1 
69 1 170 1 119 1 
205 1 304 1 
170 1 205 1 304 1 
227 1 212 1 
162 2 198 2 23 1 113 2 1 2 140 1 328 1 40 1 242 2 67 1 27 1 268 1 312 1 212 1 77 1 270 1 373 1 49 1 51 1 158 1 20 1 34 1 300 1 60 1 227 1 109 1 231 1 
69 1 119 1 
170 1 205 1 304 1 
111 1 162 2 198 2 89 1 182 1 242 2 307 2 74 1 265 2 337 1 44 1 370 2 271 1 290 1 374 1 215 2 315 1 83 1 253 1 155 1 132 1 105 1 347 1 107 1 178 1 193 1 350 1 195 1 108 2 160 1 229 2 
370 2 111 1 340 1 292 1 305 1 181 1 236 1 201 2 80 1 239 1 182 1 307 2 321 1 255 1 299 1 377 1 265 2 110 1 379 1 
370 1 111 1 340 1 292 1 305 1 181 1 236 1 201 2 239 1 182 1 307 1 321 1 255 1 248 1 265 1 110 1 379 1 
370 1 111 1 233 1 80 1 182 1 190 1 307 1 165 1 265 1 337 1 225 1 179 1 160 1 110 1 
370 1 111 1 340 1 292 1 305 1 181 1 236 1 201 2 80 1 239 1 182 1 307 1 321 1 255 1 377 1 265 1 110 1 379 1 
63 1 
71 1 88 1 329 1 323 1 152 1 297 1 380 1 
37 1 326 1 64 1 65 1 329 1 25 1 71 1 72 1 79 1 49 1 152 1 133 1 256 1 323 2 36 1 161 1 231 1 
37 6 138 2 233 1 88 1 329 9 238 1 182 4 245 2 336 2 337 10 287 3 7 2 8 2 98 1 249 2 48 1 49 5 50 2 152 8 297 1 53 2 156 2 299 1 59 1 256 3 160 3 61 1 161 4 111 3 62 2 64 12 65 5 25 4 204 2 307 3 71 2 72 4 263 2 265 3 206 1 365 2 311 2 370 3 371 1 272 2 173 2 217 3 375 6 176 6 133 4 35 2 135 2 323 8 231 5 
37 3 138 2 64 6 65 1 279 1 329 8 25 2 245 1 71 2 246 1 72 2 336 2 29 1 338 1 368 1 311 2 7 2 8 1 149 1 293 1 48 1 49 1 173 2 50 2 152 5 375 5 16 1 176 5 106 1 104 1 133 2 256 1 323 5 161 2 231 1 
355 1 162 1 198 1 112 1 113 1 1 1 24 1 25 1 329 2 241 1 242 1 362 1 72 1 73 1 262 1 336 2 144 1 367 1 7 1 8 1 126 1 49 1 173 2 152 2 102 1 133 1 161 1 231 1 
88 1 25 1 329 1 152 1 297 1 71 1 72 1 133 1 323 1 161 1 
37 5 7 2 8 1 138 2 64 10 173 2 50 2 329 5 152 5 375 5 176 5 156 1 336 2 311 2 323 5 
71 1 49 1 65 1 256 1 323 1 231 1 
111 1 233 2 65 4 25 2 329 2 182 1 307 4 245 2 333 1 72 2 265 4 337 1 288 1 370 4 98 1 295 1 48 2 49 3 13 1 152 2 190 1 84 1 133 1 256 2 225 1 160 1 61 2 161 2 231 3 
162 3 198 3 111 1 233 1 113 2 1 2 89 1 182 1 242 2 241 1 307 1 26 1 68 1 73 2 265 1 287 1 337 1 370 1 125 1 215 1 315 1 83 1 154 1 155 1 132 1 107 1 158 1 193 1 178 1 108 2 160 1 257 1 
37 2 64 4 48 1 25 1 329 1 152 2 375 2 261 1 245 1 71 2 176 2 72 1 133 1 323 4 161 1 
373 1 268 1 81 1 
373 1 21 1 351 1 227 1 268 1 
373 1 268 1 81 1 
373 1 268 1 81 1 
373 1 90 1 268 1 
373 1 90 1 268 1 
373 1 90 1 268 1 
373 1 268 1 
23 1 60 1 
7 1 290 4 39 1 173 1 215 8 174 1 24 1 296 1 315 4 83 2 362 1 261 1 345 1 107 2 262 1 178 2 193 2 108 4 211 3 136 2 
7 1 290 3 173 1 215 6 174 1 24 1 296 1 315 3 362 1 261 1 262 1 211 2 136 2 380 1 
7 1 290 2 138 1 173 1 215 4 50 1 315 2 15 1 83 1 345 1 107 1 178 1 193 1 108 2 211 2 311 1 136 1 
290 1 246 1 149 1 215 2 315 1 16 1 
138 2 39 1 24 2 362 2 261 1 262 2 311 2 211 8 7 5 290 13 149 2 372 1 10 1 173 5 215 25 50 2 174 1 296 1 315 12 252 1 16 2 83 1 102 1 345 4 107 1 178 1 193 1 108 2 136 4 
149 1 215 1 315 1 
290 1 215 1 16 1 
7 1 290 3 138 1 215 6 173 1 50 1 315 3 83 1 15 1 345 1 156 1 107 1 193 1 178 1 108 2 311 1 211 3 136 2 
7 2 290 6 138 2 293 1 149 1 173 2 11 1 215 12 50 2 279 1 315 6 83 1 16 1 345 1 246 1 106 1 104 1 107 1 178 1 193 1 108 2 338 1 211 2 311 2 136 1 
7 1 290 3 173 1 215 6 24 1 315 3 362 1 345 1 262 1 211 2 136 1 
290 1 39 1 215 3 24 1 174 1 296 1 315 2 83 1 345 1 308 1 262 1 107 1 178 1 193 1 108 2 211 2 136 1 
7 2 290 5 11 1 215 10 173 2 24 2 315 5 83 1 102 1 362 1 345 2 107 1 262 2 193 1 178 1 108 2 211 5 136 3 
290 2 11 1 173 1 215 2 83 1 345 1 107 1 178 1 193 1 108 2 311 1 211 1 
7 1 290 2 138 1 11 1 173 1 215 4 50 1 315 2 83 1 345 1 107 1 178 1 193 1 108 2 211 2 311 1 136 1 
290 1 39 1 215 3 11 1 24 1 315 2 83 3 308 1 345 1 107 3 262 1 178 3 193 3 185 1 108 6 211 2 136 1 
39 1 24 2 362 1 308 1 246 1 262 2 185 1 211 6 7 2 290 7 149 1 173 2 11 1 215 15 174 1 296 1 315 8 317 1 15 1 83 4 16 1 102 1 345 3 107 4 193 4 178 4 108 8 136 3 
39 1 138 2 24 2 279 1 362 2 261 1 246 1 262 2 338 1 311 2 211 9 7 4 290 14 149 1 293 1 215 24 11 1 173 5 174 1 50 1 296 1 315 10 16 1 83 2 102 1 345 4 104 1 106 1 107 2 193 2 178 2 108 4 136 5 
39 1 138 2 24 1 279 1 362 1 261 1 246 1 262 1 338 1 311 2 211 4 7 2 290 10 149 1 293 1 215 17 11 1 173 3 174 1 50 1 296 1 315 7 83 3 15 1 16 1 345 1 106 1 104 1 107 3 193 3 178 3 108 6 136 3 
138 2 39 1 24 1 279 1 362 1 261 1 246 1 262 1 338 1 311 2 211 4 7 3 290 9 149 1 293 1 215 19 11 1 173 3 174 1 50 2 296 1 315 10 15 1 16 1 83 3 345 1 106 1 104 1 107 3 193 3 178 3 108 6 136 3 
39 1 138 2 24 1 279 1 362 1 261 1 246 1 262 1 338 1 311 2 211 5 7 2 290 10 149 1 293 1 215 17 11 1 173 3 174 1 50 1 296 1 315 7 15 1 16 1 83 3 345 2 104 1 106 1 107 3 193 3 178 3 108 6 136 3 
39 1 138 2 24 2 279 1 362 2 261 1 246 1 262 2 338 1 311 2 211 9 7 4 290 14 149 1 293 1 215 24 11 1 173 5 174 1 50 1 296 1 315 10 16 1 83 2 102 1 345 4 104 1 106 1 107 2 193 2 178 2 108 4 136 5 
7 2 290 6 138 2 293 1 149 1 173 2 11 1 215 12 50 2 279 1 315 6 83 1 16 1 345 1 246 1 106 1 104 1 107 1 178 1 193 1 108 2 338 1 211 2 311 2 136 1 
138 2 39 2 24 1 279 1 362 1 261 1 246 1 262 1 338 1 311 2 211 5 7 2 290 10 149 1 293 1 215 18 11 1 173 3 174 1 50 1 296 1 315 8 15 1 83 4 16 1 345 2 106 1 104 1 107 4 193 4 178 4 108 8 136 3 
138 3 39 2 279 1 246 1 185 1 338 1 311 3 211 6 7 2 290 9 149 1 293 1 215 16 11 1 173 3 50 2 315 7 83 4 16 1 345 3 106 1 104 1 107 4 193 4 178 4 108 8 136 3 
7 1 290 3 215 7 173 1 174 1 24 3 296 2 315 4 362 1 345 3 262 3 211 6 136 3 
138 2 39 2 24 1 279 1 362 1 261 1 246 1 262 1 185 1 338 1 311 2 211 4 7 2 290 10 149 1 293 1 215 18 11 1 173 3 174 1 50 1 296 1 315 8 83 4 16 1 345 1 106 1 104 1 107 4 193 4 178 4 108 8 136 3 
162 1 198 1 232 1 158 1 237 1 202 1 242 1 
162 1 198 1 232 1 147 1 46 1 158 1 237 1 202 1 216 1 5 1 242 1 318 1 
370 1 111 1 233 1 265 1 337 1 225 1 160 1 182 1 190 1 380 1 307 1 
370 1 198 2 162 2 111 1 113 1 233 1 1 1 182 1 242 1 307 1 68 1 54 1 26 1 158 1 265 1 337 1 287 1 160 1 
370 1 198 2 162 2 111 1 62 1 214 1 113 1 1 2 182 1 242 2 307 1 68 1 54 1 26 1 158 1 365 1 144 1 265 1 337 3 287 2 160 2 30 1 61 1 
111 1 162 2 198 2 62 1 113 1 1 2 182 1 242 2 307 2 68 1 265 2 144 1 365 1 287 2 337 3 186 1 30 1 370 2 214 1 54 1 158 1 160 2 61 1 354 1 
111 1 62 1 233 1 65 1 204 1 3 1 182 1 307 3 71 1 263 1 265 3 365 1 337 4 287 1 186 1 370 3 49 2 217 1 160 1 323 1 61 1 231 2 87 1 
370 3 111 1 62 1 233 1 272 1 49 2 65 1 217 1 204 1 182 1 307 3 71 1 263 1 365 1 265 3 287 1 337 4 186 1 160 1 323 1 61 1 231 2 
370 1 111 1 265 1 182 1 91 1 307 1 
370 7 146 1 111 2 340 1 137 1 233 2 182 3 91 1 307 7 32 1 157 1 58 1 74 1 299 1 265 6 59 1 287 1 337 3 75 1 229 1 160 2 
356 1 111 1 162 2 198 2 113 1 1 1 200 1 24 1 89 2 182 1 242 1 362 1 307 1 261 1 68 1 26 1 262 1 117 1 265 1 337 1 287 1 211 2 7 1 271 1 370 1 290 3 125 1 294 1 215 6 173 1 174 1 296 1 315 3 83 2 221 1 54 1 154 1 132 2 107 2 158 2 299 1 178 2 193 2 195 1 108 4 160 1 136 2 
233 1 88 1 328 1 65 2 329 1 25 2 204 1 307 1 71 1 72 2 263 1 265 1 337 2 370 1 98 1 249 1 272 1 49 3 217 1 152 1 297 1 53 1 133 2 256 1 35 1 323 1 161 2 231 3 
370 2 111 1 263 1 299 1 59 1 265 2 337 2 287 1 238 1 160 1 182 2 91 1 307 2 
370 4 111 1 233 1 141 1 182 1 190 1 307 4 299 1 265 4 337 1 225 1 186 1 160 1 
370 2 146 1 111 1 180 1 182 2 307 2 32 1 265 2 287 1 337 1 168 1 160 1 61 1 213 1 
370 1 111 1 292 1 233 1 265 1 201 1 239 1 182 1 379 1 307 1 
370 2 111 1 340 1 182 1 307 2 105 1 74 1 299 1 265 2 337 1 160 1 
370 5 111 2 233 1 141 1 190 1 182 2 307 5 157 1 74 1 58 1 299 1 265 4 337 3 225 1 160 2 61 1 
370 5 111 2 233 1 141 1 330 1 190 1 182 2 307 5 74 1 58 1 299 1 265 4 337 3 225 1 160 2 61 1 
370 1 198 2 162 2 111 1 113 1 233 1 1 1 182 1 242 1 307 1 68 1 54 1 158 1 265 1 337 1 287 1 160 1 354 1 
370 1 146 1 111 1 137 1 182 2 307 1 32 1 265 1 59 1 287 1 337 1 160 1 61 1 
319 1 276 1 158 1 264 1 166 1 
214 1 49 2 314 1 328 1 204 1 319 1 175 1 71 1 19 1 363 1 276 2 158 1 264 2 144 1 166 2 323 1 30 1 231 2 289 1 
319 1 162 1 198 1 347 1 264 1 374 1 166 1 242 1 253 1 
319 1 363 1 289 1 
247 1 228 1 103 1 380 1 
247 1 222 1 349 1 118 1 228 1 313 1 103 1 
348 1 349 1 278 1 
2 1 243 1 130 2 103 1 70 1 320 1 247 1 222 3 118 1 349 3 228 1 313 1 
303 1 247 1 222 2 100 1 349 2 118 1 228 1 313 1 103 1 
320 1 222 1 349 1 118 1 236 1 201 1 12 1 228 1 82 1 313 1 379 1 
320 1 247 1 222 1 349 1 118 1 228 1 313 1 
320 1 247 2 222 1 349 1 118 1 313 1 103 1 
320 1 247 1 222 2 33 1 349 2 118 2 127 1 277 1 228 1 313 2 
303 2 31 1 316 1 82 1 103 1 320 1 247 1 222 3 334 1 118 1 349 3 228 2 313 1 
303 1 181 1 236 1 201 2 239 1 103 1 320 1 247 1 222 2 118 1 349 2 378 1 228 1 313 1 379 1 
45 1 303 2 100 1 31 1 82 1 103 1 320 1 247 1 222 4 118 2 349 4 228 2 313 2 
320 1 247 1 222 1 349 1 118 1 228 1 313 1 103 1 
303 2 9 1 2 1 31 1 82 1 130 1 103 2 70 1 247 2 222 4 349 4 118 1 228 3 313 1 
163 1 303 1 99 1 103 1 320 1 247 1 222 2 118 1 349 2 184 1 228 1 313 1 
2 1 101 1 130 2 103 1 70 2 320 1 247 1 222 3 118 1 349 3 228 1 313 1 
55 2 164 1 228 2 115 1 
320 1 222 1 349 1 118 1 313 1 260 1 
303 1 320 1 247 1 334 1 222 2 349 2 118 1 228 1 313 1 103 1 
240 1 
320 1 247 1 222 1 349 1 118 1 228 1 313 1 103 1 
303 1 130 1 103 1 320 1 247 1 222 3 334 1 118 1 349 3 228 1 313 1 
9 1 31 1 228 1 82 1 
247 1 228 1 

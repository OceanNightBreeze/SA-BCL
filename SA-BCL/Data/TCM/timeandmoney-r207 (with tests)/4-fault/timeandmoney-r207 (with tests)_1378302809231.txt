#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (9,129) (9,129) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 107 (106,283,339) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 316 225 39 186 119 85 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (325,341,355) (128,333,346) (128,333,346) (128,333,346) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (325,341,355) (128,333,346) (128,333,346) (128,333,346) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (325,341,355) (128,333,346) (128,333,346) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (325,341,355) (128,333,346) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (205,357) 246 316 225 39 369 305 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 316 225 39 186 65 227 153 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 316 225 39 186 65 227 153 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 316 225 39 186 65 227 153 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 316 225 39 186 65 227 153 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (325,341,355) (325,341,355) (325,341,355) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (325,341,355) (325,341,355) (325,341,355) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (325,341,355) (325,341,355) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 316 225 39 186 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 316 225 39 186 56 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 316 225 39 186 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 316 225 39 369 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 1 26 1 2 1 151 1 177 2 162 2 366 2 359 1 275 1 7 1 308 3 136 1 361 3 
175 1 49 1 26 4 330 1 2 6 151 3 177 5 6 1 359 1 7 2 264 1 60 2 291 2 308 9 136 1 361 9 293 1 268 1 235 1 63 2 343 1 162 2 68 1 366 2 272 1 275 1 214 1 97 2 
175 1 49 1 26 4 330 1 2 6 151 3 177 5 6 1 359 1 7 2 264 1 60 2 291 2 308 9 136 1 361 9 293 1 268 1 235 1 63 2 343 1 162 2 68 1 366 2 272 1 275 1 214 1 97 2 
175 1 49 1 26 5 330 1 2 7 151 4 177 6 6 1 359 1 7 2 264 1 60 2 291 2 308 10 136 1 361 10 293 1 268 1 235 1 63 2 343 1 162 2 68 1 366 2 272 1 275 1 214 1 97 2 
175 1 49 1 26 3 330 1 2 4 151 2 177 4 6 1 359 1 7 2 264 1 60 2 291 2 308 7 136 1 361 7 293 1 268 1 235 1 63 1 343 1 162 2 68 1 366 2 272 1 275 1 97 2 
175 1 49 1 63 2 26 2 2 3 151 1 177 3 162 1 68 1 366 1 275 1 214 1 60 1 97 1 291 1 308 4 136 1 361 4 
9 1 175 1 7 1 330 1 162 1 30 1 129 1 366 1 308 1 361 1 
22 1 175 1 49 1 26 4 2 7 151 3 177 5 359 1 7 1 264 1 60 1 234 1 291 1 308 9 136 1 361 9 63 2 162 2 68 1 366 2 272 1 275 1 214 1 97 1 
22 1 175 1 49 1 26 4 2 7 151 3 177 5 359 1 7 1 264 1 60 1 234 1 291 1 308 9 136 1 361 9 63 2 162 2 68 1 366 2 272 1 275 1 214 1 97 1 
1 1 237 1 124 1 187 1 54 1 132 1 315 1 189 1 141 1 286 1 117 1 34 1 300 1 248 1 
77 1 
77 1 143 1 92 1 52 1 187 2 322 1 54 1 141 2 
342 1 77 1 310 1 363 1 92 1 52 1 187 5 93 2 53 2 54 2 244 2 116 1 201 1 141 5 57 1 304 1 179 1 322 2 73 1 
77 1 92 1 170 1 
77 1 25 2 126 1 
286 2 117 2 1 2 124 2 237 1 300 2 5 1 189 2 
99 1 328 1 280 1 1 2 254 2 124 2 81 1 127 1 243 1 130 1 3 1 82 1 5 1 286 3 206 1 289 1 158 2 13 1 364 1 365 1 237 1 209 1 67 1 69 2 296 1 271 1 189 2 165 1 117 3 297 1 71 1 323 2 300 2 299 1 173 1 47 1 279 2 
286 1 117 1 1 1 124 1 237 1 34 1 300 1 132 1 248 1 189 1 
122 1 77 1 100 1 1 1 161 1 92 1 187 1 141 1 286 1 117 1 251 1 34 1 21 1 137 1 
122 1 77 1 100 1 1 1 161 1 124 1 92 1 187 2 189 1 141 2 286 1 117 1 34 1 21 1 300 1 
344 1 187 1 322 1 54 1 141 1 
77 1 105 1 92 1 52 1 187 2 322 1 54 1 141 2 
187 1 322 1 141 1 
1 2 255 1 124 1 5 2 189 1 286 2 117 2 87 1 300 1 
357 1 246 1 183 1 
99 1 328 1 254 1 81 1 3 1 5 1 165 1 286 1 117 1 297 1 206 1 289 1 323 1 71 1 75 1 279 1 
170 1 5 1 
99 1 357 1 328 1 91 1 1 1 254 1 81 1 3 1 189 1 165 1 286 2 117 2 297 1 206 1 351 1 289 1 71 1 323 1 300 1 279 1 
91 1 1 5 124 1 101 1 257 1 5 1 189 4 286 5 117 5 351 2 251 1 87 1 307 1 300 4 
286 2 117 2 1 2 277 1 34 1 300 2 248 1 189 2 
286 3 117 3 1 3 351 1 124 1 300 3 5 1 189 3 
286 1 117 1 1 1 34 1 300 1 248 1 189 1 
286 1 117 1 1 1 255 1 124 1 87 1 34 1 300 1 189 1 
99 1 122 1 328 1 100 1 1 3 254 1 124 2 81 1 243 1 130 1 3 1 82 1 5 1 286 4 206 1 289 1 87 1 34 1 158 2 267 1 91 1 161 1 13 1 364 1 365 1 237 1 187 1 67 1 69 1 296 1 189 3 165 1 141 1 297 1 319 1 117 4 351 1 71 1 323 1 21 1 300 3 173 1 47 1 279 1 
286 2 117 2 1 2 351 1 251 1 257 1 300 1 5 1 189 1 
122 1 77 1 91 1 100 1 1 3 161 1 124 1 187 1 189 3 141 1 286 3 117 3 203 1 351 2 87 1 34 1 21 1 300 3 267 1 
357 1 1 2 124 1 189 2 286 2 117 2 351 1 87 1 183 1 300 2 
99 1 328 1 254 1 81 1 3 1 5 1 165 1 286 1 117 1 297 1 206 1 289 1 323 1 71 1 279 1 
99 1 328 1 254 1 81 1 29 1 5 1 347 1 165 1 286 1 117 1 206 1 289 1 323 1 71 1 279 1 
357 2 127 2 243 1 130 1 131 1 82 1 258 1 246 2 205 1 183 2 158 2 11 1 365 1 67 1 37 1 114 1 69 4 164 1 16 1 316 1 191 1 47 1 173 2 219 1 
122 1 286 1 117 1 1 1 277 1 34 1 300 1 189 1 
106 1 283 1 113 1 107 1 
106 1 113 1 339 1 
106 1 113 1 
106 1 113 1 
106 1 283 1 113 1 107 1 
106 1 283 1 113 1 107 1 
283 1 107 1 
106 1 125 1 113 1 
106 1 125 1 113 1 
106 1 125 1 113 1 
294 1 106 1 113 1 
294 1 106 1 113 1 
294 1 106 1 113 1 
148 1 242 1 1 2 236 1 112 1 187 1 113 1 94 1 313 1 31 1 5 1 189 2 140 1 141 1 286 2 117 2 213 1 106 1 44 1 339 1 109 1 120 1 300 2 147 1 
148 3 77 1 236 2 226 1 187 2 113 2 313 2 31 2 141 2 204 1 106 2 44 2 145 1 195 1 120 1 252 1 208 1 356 1 48 2 
30 1 
60 1 97 1 291 1 
30 1 
30 1 
30 1 
222 2 77 2 225 1 25 3 52 1 126 1 53 1 131 1 54 4 244 1 304 1 156 1 247 2 109 1 249 1 11 1 12 1 295 1 187 5 92 1 93 1 94 1 16 1 116 3 140 1 238 1 141 5 316 1 350 1 144 2 322 1 73 2 
222 6 77 5 225 3 25 9 27 1 52 1 126 3 53 2 131 3 54 7 244 2 260 1 335 1 287 1 57 1 304 1 247 6 109 4 108 1 88 5 249 1 11 3 344 5 12 2 295 2 187 9 92 1 93 2 16 3 116 8 141 9 316 3 322 6 73 6 121 1 
222 2 77 3 225 1 25 4 126 2 53 1 131 1 54 2 244 1 57 1 156 1 247 2 109 1 11 1 12 1 295 1 92 1 187 3 93 1 116 3 16 1 141 3 316 1 350 1 144 1 73 2 
222 4 77 4 225 2 25 7 27 1 126 3 53 1 131 2 54 3 244 1 335 1 287 1 57 1 156 1 247 4 109 2 11 2 12 1 295 1 92 1 187 4 93 1 116 5 16 2 141 4 316 2 350 1 144 2 73 4 
373 1 
206 1 96 1 170 1 
206 1 352 1 
206 1 71 1 165 1 
206 1 115 1 
206 1 165 1 
206 3 321 1 96 2 71 1 38 1 165 1 
11 1 78 1 127 4 37 3 69 7 229 1 16 1 273 1 212 2 318 1 215 1 154 1 191 2 180 1 20 1 353 1 193 1 173 3 
225 1 78 1 186 1 127 4 69 5 39 1 40 1 16 1 316 1 212 1 85 1 353 2 119 1 370 1 173 1 
11 1 78 1 365 2 127 5 243 2 67 2 37 4 69 9 82 2 16 1 273 1 166 1 233 1 212 2 317 1 318 1 215 1 154 1 180 1 191 3 20 1 353 1 158 4 173 4 
11 1 78 1 127 4 37 3 69 7 16 1 273 1 212 2 318 1 215 1 154 1 191 2 180 1 20 1 353 1 193 1 173 3 
11 1 78 1 127 4 37 3 69 7 16 1 273 1 212 2 318 1 215 1 154 1 191 2 180 1 20 1 353 1 193 1 173 3 
99 1 254 1 24 1 256 2 81 1 285 1 7 2 206 1 289 1 59 2 182 1 308 1 361 1 162 1 366 1 314 1 165 1 349 1 118 1 95 1 323 1 279 1 220 2 
99 1 175 1 254 1 256 1 162 1 30 1 128 1 366 1 346 1 333 1 17 1 7 1 320 1 289 1 290 1 59 1 323 1 325 1 308 1 361 1 279 1 220 1 
99 1 175 1 254 1 256 1 162 1 30 1 128 1 366 1 346 1 333 1 17 1 7 1 289 1 290 1 59 1 323 1 325 1 298 1 308 1 361 1 279 1 220 1 
99 1 159 1 24 1 254 1 256 1 2 1 162 1 30 1 128 1 366 1 333 1 17 1 7 1 320 1 289 1 290 1 59 1 323 1 325 1 308 2 361 2 279 1 220 1 
99 1 159 1 254 1 256 1 2 1 30 1 333 1 17 1 320 1 7 1 289 1 59 1 323 1 325 1 308 1 361 1 279 1 220 1 
32 1 
99 1 100 1 1 1 52 3 102 1 196 1 332 2 53 1 198 2 244 1 286 1 206 1 289 1 157 4 160 1 161 1 295 1 250 2 116 2 165 1 117 1 118 1 18 1 169 2 216 1 251 1 72 2 21 1 73 2 122 1 77 2 25 2 254 2 81 2 126 2 302 1 262 1 304 1 86 1 182 1 34 1 35 2 137 1 309 1 90 1 92 1 187 5 312 1 93 1 141 5 322 6 323 2 194 2 326 1 279 2 
122 1 100 1 1 1 52 1 196 1 332 1 286 1 34 1 157 2 137 1 160 1 161 1 187 3 312 1 141 3 117 1 143 1 216 1 251 1 322 2 21 1 326 1 
122 1 77 1 100 1 1 1 52 1 196 1 286 1 34 1 157 3 137 1 160 1 161 1 187 3 92 1 312 1 141 3 117 1 143 1 216 1 251 1 322 1 21 1 194 1 326 1 
122 1 77 1 100 1 1 1 52 1 196 1 332 1 198 1 286 1 34 1 157 3 137 1 160 1 161 1 187 3 92 1 312 1 141 3 117 1 143 1 216 1 251 1 322 2 21 1 194 1 326 1 
100 1 1 1 52 3 196 1 332 4 53 1 197 1 198 4 244 1 286 1 157 6 160 1 161 1 250 2 163 1 116 1 117 1 216 1 169 2 251 1 72 2 21 1 73 1 122 1 77 5 126 2 302 1 133 1 304 1 360 1 34 1 35 2 137 1 266 1 309 1 187 5 92 5 312 1 93 1 141 5 143 1 322 7 194 4 326 1 
100 1 1 1 52 2 196 1 332 2 53 1 244 1 198 2 286 1 157 4 160 1 161 1 250 2 116 1 117 1 216 1 169 2 251 1 72 2 21 1 73 1 122 1 77 2 25 2 126 2 302 1 262 1 304 1 34 1 35 2 137 1 309 1 187 4 92 1 312 1 93 1 141 4 322 4 194 2 326 1 
122 1 77 1 100 1 1 1 52 2 126 2 196 1 332 2 302 1 53 1 197 1 198 2 244 1 286 1 304 1 360 1 34 1 35 2 157 4 137 1 309 1 160 1 161 1 92 1 187 4 250 2 312 1 93 1 163 1 116 1 141 4 117 1 169 2 216 1 251 1 322 4 72 2 194 2 21 1 326 1 73 1 
122 1 77 1 100 1 1 1 52 2 126 2 196 1 332 2 302 1 53 1 197 1 198 2 244 1 286 1 304 1 360 1 34 1 35 2 157 4 137 1 309 1 160 1 161 1 92 1 187 4 250 2 312 1 93 1 163 1 116 1 141 4 117 1 169 2 216 1 251 1 322 4 72 2 194 2 21 1 326 1 73 1 
122 1 77 1 100 1 25 2 301 1 1 1 329 2 52 2 28 1 196 1 332 2 53 1 198 2 244 1 286 1 304 1 360 1 337 1 34 1 35 2 157 4 137 1 309 1 160 1 161 1 92 1 187 4 312 1 93 1 116 1 141 4 117 1 169 2 216 1 251 1 322 4 194 2 21 1 326 1 73 1 327 2 
122 1 77 1 100 1 1 1 52 2 126 2 196 1 332 3 302 1 53 1 197 1 244 1 198 3 286 1 133 1 304 1 360 1 34 1 35 2 157 5 137 1 309 1 160 1 161 1 92 1 187 4 250 2 312 1 93 1 163 1 116 1 141 4 117 1 169 2 216 1 251 1 72 2 322 5 21 1 194 3 326 1 73 1 
122 1 77 1 100 1 1 1 52 2 126 2 196 1 332 3 302 1 53 1 197 1 244 1 198 3 286 1 133 1 304 1 360 1 34 1 35 2 157 5 137 1 309 1 160 1 161 1 92 1 187 4 250 2 312 1 93 1 163 1 116 1 141 4 117 1 169 2 216 1 251 1 72 2 322 5 21 1 194 3 326 1 73 1 
100 1 1 1 329 2 52 2 196 1 332 2 53 1 244 1 198 2 286 1 157 4 160 1 161 1 116 1 117 1 216 1 169 2 251 1 21 1 73 1 122 1 77 1 301 1 25 2 262 1 304 1 34 1 35 2 137 1 309 1 187 4 92 1 312 1 93 1 141 4 322 4 194 2 326 1 327 2 
223 1 0 1 99 2 280 2 1 1 254 7 81 2 243 2 127 1 130 2 82 2 55 1 199 1 84 1 286 1 206 3 289 2 306 1 182 1 158 4 311 1 13 1 365 2 67 2 69 2 189 1 271 1 165 2 117 1 320 1 351 1 118 1 323 8 298 1 300 1 47 2 173 1 219 1 279 8 
357 1 225 1 1 1 150 1 124 1 243 1 127 1 130 1 82 1 131 1 286 1 246 1 87 1 183 1 158 2 11 1 365 1 67 1 37 1 69 3 189 1 16 1 316 1 117 1 191 1 19 1 300 1 47 1 173 2 
11 1 357 1 365 1 127 3 243 1 67 1 37 2 69 6 130 1 82 1 5 2 16 1 273 1 246 1 212 1 318 1 215 1 191 2 180 1 20 1 183 1 170 1 158 2 173 3 47 1 219 1 
357 4 225 1 150 1 365 1 127 3 243 1 67 1 39 1 69 4 130 1 82 1 40 1 16 1 316 1 246 4 305 1 369 1 370 1 158 2 47 1 173 1 
99 1 328 1 254 1 282 1 1 1 150 1 81 1 243 1 127 1 3 1 130 1 82 1 5 1 286 2 206 1 289 1 183 1 158 2 91 1 13 1 365 1 67 1 66 1 69 2 189 1 271 1 165 1 239 1 297 1 117 2 351 1 71 1 323 1 300 1 47 1 173 1 279 1 75 1 
99 2 328 2 1 1 150 1 243 3 3 2 5 2 286 3 202 1 246 7 206 2 58 2 289 2 154 4 158 6 10 1 11 3 13 1 67 3 69 20 296 2 16 3 165 2 212 1 117 3 297 2 351 1 215 1 20 1 71 2 300 1 173 10 76 2 357 7 225 2 254 3 81 1 127 10 130 3 82 3 131 2 180 1 135 2 183 7 91 1 365 3 37 8 271 1 189 1 273 1 316 2 318 1 320 1 191 4 323 3 146 2 46 1 47 3 279 3 
357 1 365 1 243 1 67 1 127 2 37 1 69 2 130 1 82 1 258 1 16 1 246 1 316 1 154 1 183 1 158 2 47 1 219 1 
11 1 357 1 365 1 243 1 67 1 37 1 69 2 130 1 82 1 131 1 164 1 246 1 191 1 183 1 158 2 47 1 173 2 219 1 
357 2 225 1 127 2 243 1 130 1 82 1 131 1 246 2 154 1 183 2 158 2 11 1 365 1 67 1 37 2 69 4 16 1 316 1 191 1 47 1 173 2 219 1 
357 1 365 1 243 1 67 1 127 2 37 1 69 2 130 1 82 1 258 1 199 1 16 1 246 1 316 1 154 1 183 1 158 2 47 1 
11 1 357 1 365 1 243 1 67 1 37 1 69 2 130 1 82 1 131 1 164 1 199 1 246 1 191 1 183 1 158 2 47 1 173 2 
357 2 225 1 127 2 243 1 130 1 82 1 131 1 199 1 246 2 154 1 183 2 158 2 11 1 365 1 67 1 37 2 69 4 16 1 316 1 191 1 47 1 173 2 
11 1 357 2 225 1 365 1 243 1 67 1 127 2 37 2 130 1 69 4 131 1 82 1 16 1 246 2 316 1 154 1 191 1 183 2 158 2 173 2 47 1 
99 1 328 1 254 1 81 1 127 1 243 1 3 1 130 1 82 1 5 1 286 1 206 1 289 1 158 2 13 1 365 1 67 1 69 2 296 1 271 1 165 1 297 1 117 1 71 1 323 1 47 1 173 1 279 1 
99 1 328 1 254 1 81 1 127 1 29 1 243 1 130 1 82 1 5 1 286 1 178 1 206 1 289 1 158 2 13 1 365 1 67 1 69 2 271 1 347 1 165 1 117 1 71 1 323 1 47 1 173 1 279 1 
357 2 225 1 150 1 127 2 243 1 130 1 82 1 131 1 246 2 154 1 183 2 158 2 11 1 365 1 67 1 37 2 69 4 16 1 316 1 191 1 47 1 173 2 
99 1 357 2 328 1 225 1 254 1 127 2 243 1 3 1 130 1 131 1 82 1 286 1 246 2 206 1 154 1 289 1 58 1 183 2 158 2 11 1 365 1 67 1 37 2 69 4 296 1 16 1 165 1 316 1 297 1 117 1 191 1 71 1 323 1 298 1 173 2 47 1 279 1 
357 1 225 1 1 1 150 1 124 1 243 1 127 2 130 1 131 1 82 1 286 1 246 1 154 1 87 1 183 1 158 2 11 1 365 1 67 1 37 1 69 3 189 1 16 1 316 1 117 1 98 1 300 1 173 1 47 1 
23 1 225 1 365 2 65 1 186 1 127 4 243 2 67 2 153 1 227 1 39 1 69 6 82 2 40 1 16 1 358 1 316 1 166 1 70 1 370 1 158 4 173 2 
225 3 149 1 153 1 243 3 127 14 227 2 82 3 131 2 358 1 334 1 233 2 56 1 154 2 155 1 134 1 158 6 11 2 65 2 365 3 186 2 67 3 37 4 69 26 345 1 40 2 16 3 190 1 166 1 316 3 70 4 191 2 370 2 172 1 173 12 
23 1 225 1 365 2 65 1 186 1 127 4 243 2 67 2 153 1 227 1 39 1 69 6 82 2 40 1 16 1 358 1 316 1 166 1 70 1 370 1 158 4 173 2 
23 1 225 1 365 2 65 1 186 1 127 4 243 2 67 2 153 1 227 1 39 1 69 6 82 2 40 1 16 1 358 1 316 1 166 1 70 1 370 1 158 4 173 2 
225 1 153 1 243 1 127 7 227 1 82 1 358 1 180 1 158 2 11 1 65 1 365 1 186 1 67 1 37 1 69 11 39 1 40 1 16 2 273 1 166 1 316 1 212 1 318 1 70 1 215 1 191 1 20 1 370 1 173 4 
44 1 106 1 236 1 145 1 113 1 313 1 31 1 208 1 356 1 221 1 
242 1 339 1 
44 1 106 1 236 1 168 1 113 1 313 1 31 1 278 1 200 1 
167 1 125 1 
42 1 184 1 294 1 
148 2 77 1 236 1 226 1 187 1 113 1 313 1 31 1 141 1 204 1 106 1 44 1 145 1 195 1 120 1 208 1 356 1 48 1 
148 2 77 1 236 1 226 1 187 1 113 1 313 1 31 1 141 1 204 1 106 1 44 1 145 1 195 1 120 1 208 1 356 1 48 1 
148 2 77 1 236 1 226 1 187 1 113 1 313 1 31 1 141 1 204 1 106 1 44 1 145 1 195 1 120 1 208 1 356 1 48 1 
42 1 167 1 125 1 
42 1 167 1 125 1 
184 1 294 1 
42 1 184 1 294 1 
213 1 147 1 
148 1 242 1 1 2 236 1 112 1 226 1 187 1 113 1 269 1 94 1 313 1 54 1 31 1 5 1 189 2 140 1 141 1 286 2 117 2 213 1 106 1 44 1 339 1 109 1 300 2 147 1 48 1 
99 1 280 2 1 2 254 2 150 1 243 1 127 1 130 1 82 1 55 1 84 1 286 2 206 1 289 1 207 1 338 1 158 2 13 1 365 1 67 1 69 2 271 1 165 1 117 2 323 2 47 1 74 1 173 1 279 2 241 1 174 1 
99 1 254 1 81 1 80 1 245 1 165 1 206 1 289 1 118 1 95 1 323 1 182 1 279 1 220 1 
99 1 17 1 254 1 320 1 289 1 290 1 323 1 30 1 325 1 355 1 341 1 220 1 245 1 279 1 
99 1 254 2 30 1 245 1 17 1 320 1 289 1 290 1 323 2 298 1 325 1 355 1 279 2 220 1 341 1 
99 1 254 1 30 1 17 1 320 1 289 1 290 1 323 1 61 1 325 1 355 1 279 1 220 1 
336 1 
77 1 363 1 92 1 93 1 53 1 244 1 116 1 201 1 304 1 73 1 
222 5 11 2 77 5 225 2 25 10 185 2 126 5 131 2 16 2 116 5 316 2 276 1 247 5 73 5 76 1 
77 1 92 1 187 1 52 1 322 1 141 1 
99 1 224 1 254 4 81 2 52 2 284 1 102 1 53 2 230 2 244 2 57 1 206 1 289 1 304 1 86 1 182 1 295 2 187 3 93 2 116 2 165 1 141 3 348 1 18 2 118 1 323 4 322 4 73 2 279 4 
77 1 363 1 92 1 170 1 73 1 116 1 201 1 
77 2 25 1 52 1 126 1 302 1 53 1 244 1 304 1 187 1 92 1 250 1 93 1 116 1 141 1 72 1 322 1 73 1 
99 3 52 3 53 4 244 4 201 1 206 10 289 4 8 1 247 6 11 2 295 2 115 2 116 9 16 2 165 3 352 3 18 1 71 3 21 2 298 1 354 2 171 2 73 8 76 2 222 6 224 1 253 2 77 8 225 2 254 3 25 12 79 2 81 1 126 6 131 2 230 1 304 4 181 2 36 1 363 1 92 2 185 2 187 5 93 4 141 5 316 2 142 1 321 1 276 2 96 2 323 3 322 5 371 2 279 3 
222 5 77 5 225 2 25 6 52 1 126 3 53 2 131 2 244 2 334 1 56 1 155 1 304 2 247 5 11 2 295 1 187 1 185 2 186 1 92 2 93 2 345 1 40 1 270 1 116 8 16 2 141 1 190 1 316 2 276 1 18 1 217 1 322 1 370 1 73 5 
1 1 124 1 53 1 197 1 132 1 244 1 259 1 286 1 304 1 34 1 248 1 11 1 237 1 185 2 187 1 93 1 315 1 16 2 116 2 189 1 141 1 117 1 318 1 276 1 215 1 20 1 300 1 73 2 
99 1 328 1 254 1 1 2 124 2 81 1 243 1 3 1 130 1 82 1 5 1 286 3 206 1 289 1 158 2 13 1 364 1 365 1 237 1 67 1 69 1 296 1 189 2 165 1 117 3 297 1 323 1 71 1 300 2 173 1 47 1 279 1 
222 2 77 4 25 4 295 1 92 2 126 2 93 1 53 1 244 1 116 1 212 1 304 1 18 1 247 2 73 2 
44 1 145 1 31 1 138 1 147 1 
261 1 44 1 31 1 
261 1 44 1 31 1 
261 1 44 1 31 1 
44 1 324 1 31 1 
44 1 324 1 31 1 
44 1 324 1 31 1 
44 1 31 1 
106 1 113 1 
11 2 365 1 67 1 243 1 127 5 37 5 69 10 82 1 16 2 259 1 166 1 318 2 154 2 215 1 191 3 20 2 158 2 173 5 
365 1 243 1 67 1 127 2 37 1 69 2 82 1 16 1 166 1 316 1 154 1 158 2 
11 1 225 1 365 1 243 1 67 1 127 2 37 2 69 4 131 1 82 1 16 1 166 1 316 1 154 1 191 1 158 2 173 2 
23 1 365 3 243 3 67 3 127 1 37 2 69 3 82 3 166 1 233 1 318 1 154 1 191 1 20 1 158 6 240 1 173 2 
23 1 225 3 243 4 127 13 82 4 131 2 233 1 263 1 154 2 180 1 158 8 292 1 11 3 111 1 365 4 186 1 67 4 37 5 69 24 39 1 40 3 16 4 273 1 166 1 316 3 212 1 318 1 215 1 191 3 20 1 119 1 370 3 173 11 
243 1 127 4 82 1 56 1 180 1 158 2 11 1 365 1 186 1 67 1 37 2 69 8 40 1 16 1 273 1 166 1 212 1 318 1 215 1 191 2 20 1 370 1 173 4 
225 1 365 2 186 1 127 3 243 2 67 2 39 1 69 4 82 2 40 1 16 1 316 1 166 1 263 1 56 1 370 1 158 4 173 1 
225 2 243 3 127 9 82 3 131 2 334 1 263 1 56 1 233 1 154 1 155 1 180 1 158 6 11 3 365 3 186 1 67 3 37 4 69 19 345 1 40 1 16 3 273 1 190 1 166 1 316 2 212 1 318 1 215 1 191 3 20 1 370 1 173 10 
225 2 243 3 127 10 82 3 131 1 334 1 263 1 233 1 56 1 154 2 155 1 180 1 158 6 11 2 365 3 186 1 67 3 37 5 69 17 345 1 40 1 16 3 273 1 190 1 166 1 316 2 212 1 318 1 215 1 191 3 20 1 370 1 173 7 
243 1 127 4 82 1 56 1 180 1 158 2 11 1 365 1 186 1 67 1 37 2 69 8 40 1 16 1 273 1 166 1 212 1 318 1 215 1 191 2 20 1 370 1 173 4 
225 2 243 1 127 6 82 1 131 2 334 1 56 1 154 1 155 1 158 2 11 2 365 1 186 1 67 1 37 2 69 12 345 1 40 1 16 2 190 1 166 1 316 2 191 1 370 1 173 6 
225 2 243 4 127 10 82 4 131 1 334 1 56 1 263 1 233 2 154 2 155 1 180 1 158 8 11 2 365 4 186 1 67 4 37 5 69 18 345 1 40 1 16 3 273 1 190 1 166 1 316 2 212 1 318 1 215 1 191 3 20 1 370 1 173 8 
23 1 225 3 243 4 127 9 82 4 131 2 334 1 56 1 233 2 154 3 155 1 158 8 11 2 365 4 186 1 67 4 37 6 69 16 345 1 40 1 16 3 190 1 166 1 316 3 191 3 370 1 173 7 
11 1 127 3 37 6 69 7 16 1 273 2 318 3 154 3 215 1 180 1 191 3 20 3 173 4 
23 1 225 2 243 4 127 10 82 4 131 1 334 1 56 1 233 2 154 1 155 1 180 1 158 8 11 2 365 4 186 1 67 4 37 4 69 18 345 1 40 1 16 3 273 1 190 1 166 1 316 2 212 1 318 1 215 1 191 3 20 1 370 1 173 8 
11 1 365 2 127 4 243 2 67 2 37 3 69 8 82 2 16 1 273 1 212 1 233 1 318 1 215 1 154 1 191 2 180 1 20 1 158 4 173 4 
11 1 273 1 212 1 318 1 215 1 191 2 180 1 127 3 20 1 37 2 69 6 170 1 173 3 16 1 
11 1 225 1 365 1 243 1 67 1 127 2 37 2 69 4 131 1 82 1 16 1 316 1 263 1 154 1 191 1 158 2 173 2 
316 1 225 1 186 1 127 3 39 1 69 4 370 1 40 1 173 1 16 1 
316 1 225 1 127 3 369 1 39 1 69 4 370 1 40 1 173 1 16 1 
69 1 40 1 173 1 
127 1 69 1 370 1 
11 1 225 1 365 1 67 1 243 1 127 3 37 3 69 6 82 1 131 1 16 1 316 1 263 1 154 1 191 2 158 2 173 3 76 1 
225 2 243 1 127 6 82 1 131 2 334 1 56 1 154 1 155 1 158 2 11 2 365 1 186 1 67 1 37 2 69 12 345 1 40 1 16 2 190 1 166 1 316 2 191 1 370 1 173 6 
11 1 127 3 37 2 69 6 16 1 318 1 215 1 154 1 191 1 20 1 173 3 
365 1 127 1 243 1 67 1 37 2 69 3 82 1 273 1 233 1 318 1 154 1 191 1 180 1 20 1 158 2 240 1 173 2 
286 1 117 1 1 1 251 1 257 1 228 1 5 1 
1 1 64 1 123 1 257 1 228 1 5 1 188 1 286 1 231 1 117 1 251 1 139 1 
99 1 254 4 81 1 4 1 165 1 206 1 289 1 118 1 323 4 182 1 298 1 340 1 279 4 
10 1 99 1 254 2 230 1 103 1 165 1 206 1 289 2 367 1 265 1 323 2 71 1 110 1 279 2 
99 1 17 1 254 1 289 1 81 1 323 1 30 1 279 1 
99 1 254 2 206 1 320 1 289 1 207 1 323 2 298 1 55 1 279 2 165 1 
223 1 99 2 254 4 81 1 230 1 55 1 165 2 206 3 118 1 289 2 306 1 182 1 323 5 298 1 340 1 279 5 
99 2 254 4 14 1 81 1 230 1 55 1 165 2 206 3 118 1 289 2 306 1 182 1 323 5 298 1 340 1 279 5 
99 1 254 1 206 1 289 1 118 1 81 1 182 1 323 1 170 1 279 1 165 1 
99 1 328 1 1 1 254 1 81 1 3 1 5 1 189 1 165 1 286 2 117 2 206 1 351 1 289 1 71 1 323 1 300 1 279 1 
99 1 122 1 328 1 100 1 254 1 1 2 79 1 3 1 5 1 230 1 286 2 206 3 289 1 34 1 115 1 189 1 165 2 117 2 351 1 323 1 71 2 300 2 279 1 
99 1 122 1 328 1 100 1 254 2 1 2 79 1 29 1 4 1 5 1 230 1 286 2 206 3 289 1 34 1 115 1 189 1 165 2 117 2 351 1 323 2 71 2 300 2 279 2 
99 1 77 1 254 3 79 1 81 1 4 1 230 1 104 1 206 4 289 1 187 2 92 1 115 1 141 2 165 1 352 1 96 1 322 1 323 3 71 1 21 1 279 3 372 1 
99 1 77 1 254 3 79 1 81 1 92 1 187 2 4 1 115 1 230 1 165 1 141 2 206 4 352 1 289 1 96 1 71 1 323 3 322 1 21 1 171 1 279 3 
99 1 254 1 311 1 289 1 323 1 279 1 
281 1 254 1 81 1 323 1 279 1 
99 1 328 1 1 1 150 1 243 2 3 1 5 2 286 2 246 1 206 1 58 1 289 1 158 4 11 1 67 2 69 6 296 1 16 1 165 1 212 1 297 1 117 2 351 1 215 1 20 1 71 1 298 1 300 1 173 3 174 1 357 1 254 1 127 3 130 2 82 2 180 1 183 1 135 1 365 2 37 2 189 1 273 1 318 1 191 2 323 1 47 2 279 1 
77 1 224 1 254 1 81 1 52 1 53 2 54 1 244 2 201 1 206 2 304 2 181 1 363 1 92 1 187 3 93 2 116 1 141 3 352 1 96 1 323 1 322 2 21 1 354 1 171 1 73 1 279 1 371 1 
99 1 254 2 311 1 165 1 321 1 206 2 289 2 96 1 323 2 71 1 298 1 279 2 36 1 
99 1 328 1 1 1 254 1 81 1 29 1 5 1 189 1 165 1 286 2 117 2 206 1 351 1 289 1 71 1 323 1 300 1 279 1 
281 1 254 1 323 1 230 1 279 1 
43 1 152 1 368 1 5 1 62 1 
122 1 77 1 100 1 161 1 92 1 187 2 152 2 54 1 5 1 141 2 303 1 43 2 232 1 368 1 34 1 21 1 218 1 62 2 267 1 
286 1 43 1 117 1 1 1 368 1 338 1 74 1 241 1 62 1 
232 1 368 1 303 1 
175 1 275 1 177 1 162 1 366 1 308 1 136 1 361 1 
235 1 362 1 26 1 2 2 151 1 177 3 162 1 210 1 366 1 274 1 275 2 308 4 136 2 361 4 
175 1 51 1 2 1 177 1 162 1 366 1 41 1 275 1 234 1 308 2 136 1 361 2 
175 1 235 2 362 1 177 1 162 1 210 2 366 1 211 1 275 1 308 3 136 1 361 3 
45 2 177 2 15 1 83 1 
175 1 33 1 162 1 366 1 308 1 361 1 
175 1 275 1 2 1 177 1 162 1 366 1 308 2 136 1 361 2 272 1 
50 1 
175 1 275 1 177 1 162 1 366 1 308 1 136 1 361 1 
275 1 177 1 170 1 136 1 
275 1 177 1 162 1 366 1 308 1 136 1 361 1 
7 1 256 1 361 1 
175 1 235 2 176 1 362 1 177 1 162 1 210 1 366 1 275 1 308 3 136 1 361 3 
63 1 275 1 2 1 177 1 162 1 366 1 308 2 136 1 361 2 
175 1 49 1 26 1 177 1 162 1 366 1 60 1 291 1 97 1 308 1 361 1 
175 1 275 1 177 1 162 1 366 1 308 1 361 1 
175 1 275 2 162 1 366 1 308 1 136 1 361 1 
175 1 275 1 177 1 192 1 331 1 162 2 366 2 308 2 361 2 89 1 
175 1 26 1 275 1 2 2 177 2 151 1 264 1 162 1 366 1 308 3 136 1 361 3 272 1 
175 1 288 1 162 1 30 1 366 1 308 1 361 1 
175 1 63 1 26 1 2 2 151 1 177 2 162 2 366 2 275 1 214 1 308 4 136 1 361 4 
235 1 175 1 275 1 2 1 177 1 162 1 366 1 308 3 136 1 361 3 272 1 
274 1 26 1 177 1 151 1 
275 1 177 1 

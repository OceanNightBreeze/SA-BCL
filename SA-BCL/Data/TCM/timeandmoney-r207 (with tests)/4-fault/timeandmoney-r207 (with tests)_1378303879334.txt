#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 132 294 202 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 349 160 171 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 349 234 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 349 160 171 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 349 234 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 349 160 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 349 269 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
257 1 354 9 337 1 44 1 232 6 105 2 288 1 27 5 52 2 56 2 118 1 317 1 148 1 221 1 31 1 271 1 322 1 327 1 38 2 346 3 204 1 250 2 159 2 75 1 281 1 18 2 303 4 211 9 
257 1 354 9 337 1 44 1 232 6 105 2 288 1 27 5 52 2 56 2 118 1 317 1 148 1 221 1 31 1 271 1 322 1 327 1 38 2 346 3 204 1 250 2 159 2 75 1 281 1 18 2 303 4 211 9 
257 1 354 10 337 1 44 1 232 7 105 2 288 1 27 6 52 2 56 2 118 1 317 1 148 1 221 1 31 1 271 1 322 1 327 1 38 2 346 4 204 1 250 2 159 2 75 1 281 1 18 2 303 5 211 10 
257 1 354 7 337 1 44 1 232 4 105 2 288 1 27 4 52 2 56 1 317 1 148 1 221 1 31 1 271 1 322 1 327 1 38 2 346 2 204 1 250 2 159 2 75 1 281 1 18 2 303 3 211 7 
354 4 337 1 44 1 232 3 105 1 346 1 38 1 27 3 250 1 56 2 159 1 75 1 281 1 118 1 18 1 303 2 271 1 211 4 
354 2 257 1 337 1 44 1 105 1 38 1 27 1 52 1 250 1 159 1 281 1 148 1 304 1 377 1 211 2 63 1 
354 3 337 1 44 1 232 1 105 2 346 1 27 2 52 1 250 2 281 1 221 1 303 1 211 3 
354 9 337 1 44 1 232 7 105 2 288 1 27 5 52 1 107 1 170 1 56 2 118 1 221 1 271 1 322 1 346 3 38 1 250 2 159 1 75 1 281 1 18 1 303 4 211 9 
354 9 337 1 44 1 232 7 105 2 288 1 27 5 52 1 107 1 170 1 56 2 118 1 221 1 271 1 322 1 346 3 38 1 250 2 159 1 75 1 281 1 18 1 303 4 211 9 
122 1 351 1 309 1 
176 1 333 2 309 1 
330 2 29 2 231 2 149 2 209 1 289 2 283 2 70 1 
355 1 231 3 216 2 289 2 340 1 7 1 267 1 87 1 195 2 29 2 268 1 108 2 238 1 149 2 123 1 272 1 198 1 91 1 240 1 32 2 129 2 245 1 94 1 203 1 70 1 156 1 228 1 179 1 330 2 205 1 41 1 209 1 114 1 255 1 283 3 78 1 23 1 
330 1 252 1 29 1 112 1 231 1 149 1 209 1 289 1 283 1 96 1 
275 1 231 1 258 1 49 1 37 1 248 1 330 1 359 1 348 1 112 1 122 1 283 1 22 1 309 1 
275 1 231 1 258 1 289 1 49 1 37 2 248 2 330 1 29 1 112 1 149 1 122 1 283 1 22 1 309 1 
253 1 30 1 37 1 248 1 97 1 
253 1 122 1 30 1 345 1 37 2 6 1 248 2 309 1 
30 1 37 1 248 1 
231 1 289 1 37 1 96 1 248 1 330 1 252 1 29 1 253 1 112 1 209 1 149 1 283 1 172 1 
309 1 
65 1 253 1 122 1 30 1 37 2 6 1 248 2 309 1 
300 1 158 1 202 1 253 2 166 1 294 1 37 3 155 1 248 3 132 1 
70 1 351 1 
231 2 289 1 70 2 330 2 29 1 17 1 149 1 283 2 64 1 
276 1 328 1 329 1 
129 1 231 1 216 1 203 1 70 1 228 1 179 1 7 1 267 1 332 1 114 1 123 1 283 1 78 1 240 1 32 1 
128 1 129 1 231 2 203 1 216 1 328 1 220 1 228 1 179 1 267 1 7 1 330 1 29 1 149 1 114 1 123 1 283 2 78 1 240 1 32 1 
164 1 128 2 231 5 36 1 289 1 220 1 70 1 178 1 330 5 359 1 29 4 17 1 149 4 283 5 
330 2 252 1 29 2 112 1 231 2 149 2 161 1 283 2 
330 3 128 1 29 3 231 3 149 3 289 1 283 3 70 1 
330 1 252 1 29 1 112 1 231 1 149 1 283 1 
330 1 29 1 112 1 231 1 17 1 149 1 289 1 283 1 64 1 
231 4 258 1 216 1 289 2 49 1 220 1 340 1 267 1 7 1 87 1 195 2 29 3 268 1 89 1 108 1 238 1 149 3 123 1 198 1 91 1 240 1 32 1 128 1 275 1 34 1 129 1 203 1 37 1 70 1 156 1 248 1 228 1 179 1 330 3 205 1 41 1 112 1 17 1 209 1 114 1 283 4 78 1 22 1 23 1 
330 2 359 1 128 1 29 1 231 2 149 1 283 2 70 1 178 1 
128 2 275 1 34 1 231 3 258 1 289 1 37 1 49 1 220 1 248 1 330 3 111 1 29 3 112 1 17 1 149 3 283 3 22 1 309 1 
128 1 231 2 289 1 328 1 329 1 330 2 29 2 17 1 149 2 283 2 
129 1 231 1 216 1 203 1 70 1 228 1 7 1 267 1 179 1 114 1 123 1 283 1 78 1 240 1 32 1 
129 1 231 1 214 1 216 1 203 1 70 1 299 1 228 1 179 1 114 1 123 1 283 1 78 1 240 1 32 1 
48 1 4 1 219 1 340 1 28 1 87 1 195 2 268 1 60 1 238 2 108 4 151 1 272 2 173 1 344 1 109 1 276 2 328 2 329 2 156 1 74 1 205 1 41 1 305 1 
330 1 29 1 112 1 231 1 149 1 283 1 161 1 22 1 
361 1 366 1 
361 1 366 1 
186 1 102 1 
186 1 102 1 
186 1 102 1 
371 1 361 1 366 1 
361 1 366 1 73 1 
16 1 361 2 186 1 188 1 102 1 366 2 
371 1 361 1 366 1 
371 1 361 1 366 1 
175 1 361 1 366 1 
175 1 361 1 366 1 
175 1 361 1 366 1 
231 2 84 1 143 1 50 1 357 1 29 2 361 1 342 1 59 1 149 2 366 1 369 1 130 1 37 1 70 1 248 1 73 1 15 1 330 2 185 1 20 1 283 2 282 1 353 1 
45 1 326 1 37 2 50 2 248 2 145 1 185 2 361 2 342 1 59 2 98 1 20 2 210 2 256 1 188 1 321 1 366 2 309 1 369 3 
159 1 18 1 38 1 
159 1 38 1 377 1 
18 2 38 3 377 1 71 1 125 1 81 1 
18 1 262 1 38 2 377 1 71 1 81 1 
18 1 38 2 377 1 71 1 81 2 
83 3 284 2 84 1 104 1 260 1 219 1 263 2 6 1 357 1 362 1 30 1 122 1 343 1 173 1 152 2 130 1 109 1 176 1 154 1 37 5 155 1 297 1 248 5 300 1 158 1 74 1 253 4 333 3 375 1 335 1 212 2 309 2 
284 2 231 1 289 1 6 1 236 1 149 1 239 1 343 1 152 2 243 1 109 1 155 1 297 1 248 6 158 1 300 1 74 1 252 1 253 5 112 1 209 1 309 3 83 3 84 2 219 1 263 2 29 1 362 1 122 1 30 4 172 1 173 1 176 1 37 6 96 1 97 3 180 3 330 1 333 3 375 1 283 1 335 1 
83 3 284 2 84 1 166 1 260 1 104 1 219 1 263 2 362 1 122 1 343 1 173 1 152 2 109 1 176 2 37 3 155 1 248 3 300 1 158 1 74 1 253 2 333 4 335 1 212 1 309 3 
83 5 284 4 84 2 166 1 260 1 104 1 219 2 263 4 315 1 362 1 122 1 343 2 173 2 152 4 109 2 153 1 176 3 37 4 155 1 248 4 300 1 158 1 74 2 253 3 301 1 333 7 335 1 212 2 309 4 
92 1 351 1 179 1 
334 1 179 1 
338 1 
78 1 240 1 179 1 
179 1 8 1 
240 1 179 1 
92 2 184 1 78 1 79 1 240 1 179 3 
3 1 4 3 246 1 95 1 219 1 194 1 358 1 360 1 316 1 302 1 238 3 108 7 151 2 352 1 272 4 137 2 173 1 
3 1 4 3 246 1 95 1 219 1 194 1 358 1 360 1 316 1 302 1 238 3 108 7 151 2 352 1 272 4 137 2 173 1 
3 1 4 3 246 1 95 1 219 1 194 1 358 1 360 1 316 1 76 1 302 1 238 3 108 7 151 2 352 1 272 4 137 2 173 1 
115 1 3 1 4 10 219 4 194 1 340 1 235 1 358 5 360 2 87 1 195 2 316 1 238 15 108 31 151 5 272 16 343 3 323 3 241 1 173 4 274 1 370 1 109 3 325 1 246 2 95 1 156 1 74 3 41 1 302 2 101 1 162 4 352 2 137 3 
287 1 4 4 219 1 194 1 356 1 340 2 358 1 87 2 360 1 195 4 316 1 108 9 238 4 151 3 272 5 173 1 274 1 246 1 95 1 156 2 41 2 302 1 352 1 137 2 
25 1 354 2 337 1 44 1 310 1 232 1 216 1 105 1 261 1 27 1 266 1 52 1 9 1 270 1 125 1 32 1 129 1 35 1 203 1 38 2 14 1 277 1 250 1 206 1 159 1 281 1 18 1 114 1 377 1 211 2 
25 1 354 3 337 1 85 1 310 1 232 2 216 1 105 1 261 1 27 1 265 1 266 1 52 1 9 1 270 1 125 1 32 1 129 1 203 1 38 2 14 1 181 1 250 1 206 1 159 1 281 1 18 1 114 1 377 1 211 3 
25 1 354 2 337 1 232 2 216 1 27 1 265 1 52 1 266 1 9 1 270 1 125 1 32 1 129 1 203 1 38 2 14 1 181 1 206 1 159 1 281 1 18 1 114 1 377 1 211 2 
354 1 25 2 129 1 85 1 203 1 216 1 105 1 72 1 52 2 266 2 179 1 278 1 9 2 250 1 119 1 114 1 123 1 240 1 224 1 211 1 200 1 273 1 32 1 
354 1 25 1 44 1 129 1 310 1 35 1 203 1 216 1 105 1 38 2 261 1 14 1 52 1 266 1 181 1 9 1 250 1 206 1 159 1 18 1 114 1 270 1 377 1 211 1 125 1 32 1 
134 1 
138 2 47 1 231 1 191 1 1 1 285 1 49 1 339 1 6 3 10 2 341 4 240 1 200 1 199 1 201 1 242 1 152 2 203 1 247 2 155 1 297 1 248 5 158 1 300 1 348 1 112 1 114 1 22 1 309 2 83 2 216 2 258 1 311 1 359 1 362 1 122 1 30 6 123 2 222 1 224 1 32 2 126 1 275 1 129 2 176 2 37 5 179 1 330 1 135 2 333 2 187 2 283 1 103 2 190 1 380 2 
138 1 231 1 191 1 285 1 258 1 49 1 6 1 359 1 341 2 30 2 222 1 126 1 201 1 275 1 65 1 37 3 248 3 330 1 348 1 112 1 283 1 22 1 
231 1 191 1 285 1 258 1 49 1 6 1 359 1 10 1 341 3 30 1 122 1 222 1 126 1 201 1 275 1 65 1 37 3 248 3 330 1 348 1 112 1 283 1 22 1 309 1 
138 1 231 1 191 1 285 1 258 1 49 1 6 1 359 1 10 1 341 3 30 2 122 1 222 1 126 1 201 1 275 1 65 1 37 3 248 3 330 1 348 1 112 1 135 1 283 1 22 1 309 1 
83 1 138 4 47 1 231 1 191 1 141 1 285 1 258 1 49 1 339 1 6 3 10 4 359 1 341 6 88 1 147 1 122 5 30 7 222 1 126 1 33 1 201 1 275 1 152 1 65 1 176 2 177 1 37 5 247 2 155 1 297 1 248 5 300 1 158 1 330 1 348 1 112 1 135 4 187 2 283 1 22 1 103 2 309 5 380 2 
138 2 47 1 191 1 231 1 285 1 49 1 339 1 6 2 10 2 341 4 201 1 152 1 242 1 155 1 247 2 297 1 248 4 158 1 300 1 348 1 112 1 22 1 309 2 83 1 258 1 359 1 30 4 122 1 222 1 126 1 275 1 176 2 37 4 330 1 135 2 333 2 187 2 283 1 103 2 380 2 
83 1 138 2 47 1 231 1 191 1 285 1 141 1 258 1 49 1 339 1 6 2 10 2 359 1 341 4 147 1 122 1 30 4 222 1 126 1 33 1 201 1 275 1 152 1 176 2 37 4 247 2 155 1 297 1 248 4 300 1 330 1 158 1 348 1 135 2 112 1 187 2 283 1 22 1 309 1 103 2 380 2 
83 1 138 2 47 1 231 1 191 1 285 1 141 1 258 1 49 1 339 1 6 2 10 2 359 1 341 4 147 1 122 1 30 4 222 1 126 1 33 1 201 1 275 1 152 1 176 2 37 4 247 2 155 1 297 1 248 4 300 1 330 1 158 1 348 1 135 2 112 1 187 2 283 1 22 1 309 1 103 2 380 2 
213 1 83 1 138 2 46 2 47 1 231 1 191 1 285 1 258 1 49 1 142 1 106 1 6 2 10 2 359 1 341 4 122 1 30 4 365 2 222 1 126 1 33 1 201 1 275 1 152 1 37 4 155 1 297 1 248 4 300 1 330 1 158 1 348 1 135 2 112 1 333 2 187 2 283 1 22 1 309 1 103 2 
83 1 138 3 47 1 231 1 191 1 141 1 285 1 258 1 49 1 339 1 6 2 359 1 10 3 341 5 147 1 122 1 30 5 222 1 126 1 33 1 201 1 275 1 152 1 176 2 37 4 177 1 247 2 155 1 297 1 248 4 300 1 158 1 330 1 348 1 112 1 135 3 187 2 283 1 22 1 309 1 103 2 380 2 
83 1 138 3 47 1 231 1 191 1 141 1 285 1 258 1 49 1 339 1 6 2 359 1 10 3 341 5 147 1 122 1 30 5 222 1 126 1 33 1 201 1 275 1 152 1 176 2 37 4 177 1 247 2 155 1 297 1 248 4 300 1 158 1 330 1 348 1 112 1 135 3 187 2 283 1 22 1 309 1 103 2 380 2 
138 2 47 1 46 2 191 1 231 1 285 1 49 1 6 2 10 2 341 4 201 1 152 1 242 1 155 1 297 1 248 4 158 1 300 1 348 1 112 1 22 1 309 1 213 1 83 1 258 1 359 1 30 4 122 1 365 2 222 1 126 1 275 1 37 4 330 1 135 2 333 2 187 2 283 1 103 2 
4 2 219 1 194 1 340 1 87 1 360 1 195 2 268 1 316 1 108 6 238 3 151 2 272 3 173 1 344 1 276 1 328 1 246 1 95 1 329 1 156 1 70 2 205 1 41 1 351 1 137 1 
355 1 4 2 219 2 340 2 358 1 87 2 195 4 268 1 238 6 108 14 293 1 151 1 272 8 343 2 91 1 323 3 241 1 173 1 225 1 370 1 109 2 276 11 328 11 329 4 70 1 156 2 131 1 227 1 205 2 74 1 41 2 162 3 163 1 
231 2 355 1 216 1 220 1 267 1 7 1 340 1 87 1 29 1 195 2 268 1 196 1 149 1 238 1 108 2 123 1 272 1 91 1 240 1 367 1 32 1 226 1 128 1 129 1 203 1 329 1 70 1 131 1 156 1 228 1 179 1 330 1 205 1 41 1 332 1 114 1 283 2 78 1 
231 3 4 8 194 1 340 3 7 2 54 2 195 6 55 2 238 10 149 1 108 20 151 4 198 2 343 2 62 1 240 2 109 2 203 2 246 1 295 1 70 2 156 3 251 1 205 3 74 2 114 2 78 2 355 1 216 3 167 2 220 1 219 3 267 2 358 4 360 1 87 3 29 1 268 3 316 1 123 1 272 10 91 1 173 3 32 3 128 1 129 3 276 7 328 7 95 1 329 7 131 1 228 2 179 2 181 1 330 1 41 3 280 2 283 3 137 1 
231 1 139 1 355 1 216 4 233 1 340 2 87 2 29 1 195 4 11 1 171 1 268 2 292 1 149 1 108 2 238 1 123 2 272 1 91 1 224 1 240 3 200 1 32 4 128 1 174 1 129 4 344 1 245 1 203 2 156 2 277 1 179 3 330 1 205 2 41 2 42 1 349 1 160 1 114 3 283 1 78 1 
231 1 4 1 289 1 219 1 340 1 87 1 195 2 29 1 268 1 149 1 108 3 238 2 151 1 343 1 272 1 173 1 109 1 276 1 328 1 329 1 156 1 131 1 330 1 205 1 74 1 41 1 17 1 283 1 80 1 
344 1 109 1 276 1 4 1 328 1 329 1 219 1 156 1 340 1 358 1 87 1 205 1 195 2 268 1 41 1 108 2 272 2 305 1 
344 1 276 1 4 1 328 1 329 1 156 1 340 1 87 1 205 1 195 2 74 1 268 1 41 1 108 2 60 1 238 2 151 1 173 1 
4 2 219 1 340 1 358 1 87 1 195 2 268 1 108 4 238 2 151 1 272 2 343 1 173 1 109 1 344 1 276 2 328 2 329 2 156 1 205 1 74 1 41 1 
139 1 109 1 276 1 4 1 328 1 329 1 219 1 156 1 340 1 358 1 87 1 205 1 195 2 268 1 41 1 108 2 272 2 305 1 
139 1 276 1 4 1 328 1 329 1 156 1 340 1 87 1 205 1 195 2 74 1 268 1 41 1 108 2 60 1 238 2 151 1 173 1 
139 1 4 2 219 1 340 1 358 1 87 1 195 2 268 1 108 4 238 2 151 1 272 2 343 1 173 1 109 1 276 2 328 2 329 2 156 1 205 1 74 1 41 1 
109 1 276 2 4 2 328 2 329 2 219 1 156 1 340 1 358 1 87 1 74 1 205 1 195 2 268 1 41 1 238 2 108 4 151 1 343 1 272 2 173 1 
355 1 231 1 216 1 267 1 7 1 340 1 87 1 195 2 268 1 108 2 238 1 123 1 272 1 198 1 91 1 240 1 32 1 129 1 203 1 70 1 156 1 228 1 179 1 205 1 41 1 114 1 283 1 78 1 
355 1 231 1 214 1 216 1 340 1 87 1 195 2 268 1 108 2 238 1 123 1 272 1 91 1 240 1 32 1 129 1 203 1 70 1 156 1 299 1 228 1 179 1 205 1 41 1 114 1 136 1 283 1 78 1 
4 2 219 1 340 1 358 1 87 1 195 2 268 1 108 4 238 2 151 1 272 2 343 1 173 1 109 1 276 2 328 2 329 2 156 1 131 1 205 1 74 1 41 1 
231 1 216 1 4 2 167 1 219 1 267 1 7 1 340 1 358 1 87 1 195 2 268 1 238 2 108 4 151 1 272 2 198 1 343 1 240 1 173 1 32 1 129 1 109 1 276 2 203 1 328 2 329 2 156 1 277 1 228 1 179 1 74 1 205 1 41 1 114 1 283 1 78 1 
231 1 4 1 289 1 218 1 219 1 340 1 358 1 87 1 195 2 29 1 268 1 238 1 149 1 108 3 343 1 272 2 173 1 109 1 276 1 328 1 329 1 156 1 131 1 330 1 74 1 205 1 41 1 17 1 283 1 
82 1 286 1 4 6 219 3 116 1 264 1 356 1 340 2 358 3 87 2 195 4 12 1 238 10 108 19 197 2 151 3 272 9 343 3 323 1 241 1 173 3 370 1 109 3 156 2 74 3 41 2 373 2 374 1 43 1 162 2 
82 1 165 1 286 2 140 1 4 4 219 3 116 1 356 1 117 1 340 3 358 2 87 3 195 6 12 2 238 12 108 26 197 1 320 1 364 1 150 1 151 2 272 14 343 3 323 2 274 2 173 2 241 2 109 3 156 3 74 2 41 3 373 4 43 1 162 2 
82 1 165 1 140 1 286 2 4 8 219 5 116 1 312 1 194 1 264 1 356 1 117 1 340 3 358 4 360 1 87 3 195 6 316 1 12 1 238 21 108 41 197 1 320 1 364 1 150 1 151 4 272 20 343 4 323 3 274 1 241 3 173 5 370 1 109 4 246 1 95 1 156 3 74 4 41 3 373 4 43 1 162 4 137 1 
82 1 165 1 140 1 286 2 4 7 219 5 116 1 312 1 194 1 264 1 356 1 117 1 340 4 358 3 360 1 87 4 195 8 316 1 12 1 238 18 108 38 197 1 320 1 364 1 150 1 151 4 272 20 343 4 323 3 274 2 241 3 173 4 370 1 109 4 246 1 95 1 156 4 74 3 41 4 373 4 43 1 162 4 137 1 
82 1 165 1 140 1 286 1 4 14 219 8 116 1 194 1 356 1 117 1 340 2 358 7 360 1 87 2 195 4 316 1 12 1 238 25 108 52 197 1 320 1 364 1 150 1 151 7 272 27 343 7 323 4 274 1 241 2 173 8 370 2 109 7 246 1 95 1 156 2 227 2 74 7 41 2 373 4 43 1 162 4 137 1 
0 1 45 1 361 1 185 1 59 1 98 1 20 1 188 1 50 1 366 1 
143 1 73 1 
361 1 185 1 59 1 20 1 376 1 50 1 157 1 366 1 347 1 
371 1 254 1 
183 1 16 1 175 1 
45 1 326 1 37 1 50 1 248 1 145 1 342 1 185 1 361 1 59 1 98 1 20 1 210 1 188 1 321 1 366 1 309 1 369 2 
45 1 326 1 37 1 50 1 248 1 145 1 342 1 185 1 361 1 59 1 98 1 20 1 210 1 188 1 321 1 366 1 309 1 369 2 
45 1 326 1 37 1 50 1 248 1 145 1 342 1 185 1 361 1 59 1 98 1 20 1 210 1 188 1 321 1 366 1 309 1 369 2 
16 1 371 1 254 1 
16 1 371 1 254 1 
183 1 175 1 
183 1 16 1 175 1 
15 1 353 1 
231 2 84 1 143 1 50 1 169 1 357 1 145 1 29 2 361 1 59 1 149 2 366 1 369 1 130 1 37 1 70 1 248 1 73 1 15 1 330 2 253 1 185 1 20 1 210 1 283 2 282 1 353 1 
231 2 355 1 216 2 259 1 233 1 234 1 340 1 87 1 237 1 195 2 11 1 268 1 292 1 108 2 238 1 272 1 91 1 240 2 32 2 174 1 129 2 245 2 13 1 203 1 131 1 156 1 179 2 182 1 330 2 205 1 41 1 42 1 114 2 349 1 283 2 78 1 
129 2 203 1 216 2 38 2 68 1 261 1 14 1 277 1 266 1 181 1 206 1 159 1 18 1 114 1 377 1 223 1 379 1 125 1 32 2 
129 1 216 1 203 1 38 2 261 1 14 1 266 1 181 1 206 1 159 1 18 1 114 1 77 1 377 1 223 1 125 1 32 1 
129 1 203 1 216 1 68 1 266 1 179 1 119 1 114 1 123 1 189 1 240 1 224 1 200 1 32 1 
129 1 216 1 203 1 38 2 68 1 261 1 14 1 266 1 181 1 206 1 159 1 18 1 114 1 377 1 223 1 379 1 125 1 32 1 
350 1 
83 1 152 1 122 1 193 1 351 1 309 1 24 1 
83 1 339 1 6 1 30 1 122 1 152 1 176 1 37 1 155 1 247 1 297 1 248 1 300 1 158 1 333 1 309 2 380 1 
284 6 2 2 290 1 193 1 51 1 5 2 6 3 8 2 54 2 343 2 240 3 199 1 152 8 109 2 244 2 203 3 155 4 297 4 248 5 158 4 300 4 74 2 114 4 78 3 306 1 24 1 309 8 83 9 216 3 258 2 219 2 263 6 362 2 120 2 319 1 318 2 122 2 30 5 123 1 368 1 32 3 173 2 129 3 92 2 372 2 176 6 37 5 277 1 179 10 229 2 184 1 333 12 334 3 100 2 
83 8 284 5 165 1 140 1 219 2 263 5 6 1 362 1 30 1 320 1 122 2 364 1 150 1 343 2 323 1 199 1 241 1 173 2 152 5 109 2 244 2 372 1 176 3 37 1 155 2 297 2 248 1 300 2 158 2 74 2 40 1 19 1 333 6 162 1 309 5 
83 2 231 1 141 1 289 1 219 2 360 1 29 1 316 1 149 1 172 1 173 1 152 2 244 2 372 1 246 1 37 1 155 1 297 1 96 1 248 1 300 1 158 1 330 1 252 1 112 1 331 1 209 1 283 1 
83 1 152 1 193 1 155 1 297 1 158 1 300 1 122 1 24 1 309 1 
83 5 152 5 284 5 109 2 244 2 372 1 176 5 219 2 263 5 54 1 74 2 333 10 343 2 309 5 173 2 
122 1 30 1 37 1 248 1 6 1 309 1 
83 2 1 1 166 1 216 4 290 2 311 1 51 1 6 2 146 1 362 2 30 4 123 2 240 1 224 1 199 2 200 1 32 4 152 2 129 4 203 1 37 3 155 2 39 1 297 1 248 3 179 1 300 2 158 2 114 1 
231 3 216 1 289 2 340 1 7 1 267 1 87 1 195 2 29 2 268 1 108 1 238 1 149 2 123 1 198 1 91 1 240 1 32 1 129 1 203 1 70 1 156 1 228 1 179 1 330 2 205 1 41 1 209 1 114 1 283 3 78 1 23 1 
83 1 284 2 152 2 176 2 155 1 263 2 297 1 158 1 300 1 362 1 333 4 122 2 137 1 309 4 199 1 
59 1 20 1 308 1 
59 1 113 1 98 1 20 1 15 1 
59 1 20 1 308 1 
59 1 20 1 308 1 
363 1 59 1 20 1 
363 1 59 1 20 1 
363 1 59 1 20 1 
59 1 20 1 
361 1 366 1 
4 3 246 1 95 1 219 1 156 2 194 1 340 2 358 1 87 2 360 1 195 4 316 1 41 2 238 4 108 8 151 2 272 4 137 1 173 1 274 1 
246 1 4 2 95 1 219 1 194 1 360 1 316 1 238 3 108 6 151 2 351 1 272 3 137 1 173 1 
109 1 192 1 4 2 219 1 156 1 340 1 358 1 87 1 74 1 195 2 41 1 238 2 108 4 151 1 343 1 272 2 173 1 
370 1 109 1 4 2 219 1 358 1 74 1 238 4 108 7 151 1 162 2 272 3 343 1 323 1 173 1 241 1 
4 9 219 3 194 1 340 2 358 4 360 2 87 2 195 4 316 1 108 23 238 12 151 5 343 2 272 11 323 2 173 3 274 2 370 1 109 2 67 1 246 2 95 1 156 2 227 1 74 2 41 2 162 2 137 1 163 1 
108 1 238 1 162 1 
108 1 272 1 323 1 
109 1 192 1 4 3 219 1 156 1 340 1 358 1 87 1 54 1 195 2 74 1 41 1 238 3 108 6 151 2 343 1 272 3 173 1 
140 1 165 1 4 2 219 2 356 1 340 1 358 1 87 1 195 2 108 12 238 6 320 1 150 1 364 1 151 1 272 6 343 2 323 1 241 1 173 2 109 2 156 1 74 2 41 1 162 1 
246 1 4 2 219 1 358 1 360 1 316 1 108 6 238 3 151 1 272 3 173 1 
67 1 4 2 246 1 95 1 156 1 194 1 340 1 358 1 360 1 87 1 195 2 41 1 238 2 108 3 151 1 272 1 274 1 
246 2 4 5 219 2 156 1 356 1 340 1 358 2 87 1 360 2 195 2 41 1 316 1 331 1 108 10 238 5 151 3 272 5 173 2 
109 1 4 1 219 1 156 1 356 1 340 1 358 1 87 1 195 2 41 1 108 2 272 2 
109 1 4 2 219 1 156 1 356 1 340 1 358 1 87 1 74 1 195 2 41 1 238 2 108 4 151 1 343 1 272 2 173 1 
67 1 246 1 4 2 156 3 264 1 356 1 340 3 358 1 87 3 360 1 195 6 41 3 238 2 108 3 151 1 272 1 274 1 
115 1 192 1 4 12 219 5 194 1 264 1 356 1 340 5 235 1 358 5 360 3 87 5 195 10 316 2 238 18 108 34 151 7 272 16 343 3 323 3 274 2 241 1 173 5 370 1 109 3 67 1 246 3 95 1 156 5 74 3 41 5 101 1 162 4 137 1 
140 1 4 2 219 1 194 1 356 1 340 1 87 1 360 1 195 2 316 1 108 8 238 4 151 2 272 4 323 1 173 1 241 1 246 1 95 1 156 1 41 1 162 1 137 1 
140 1 192 1 4 3 219 2 194 1 356 1 340 2 358 1 360 1 87 2 195 4 316 1 108 11 238 5 151 2 272 6 343 1 323 1 173 1 241 1 370 1 109 1 246 1 95 1 156 2 41 2 162 2 137 1 
192 1 165 1 140 1 4 4 219 3 194 1 356 1 340 3 358 1 360 1 87 3 195 6 316 1 108 19 238 10 320 1 150 1 364 1 151 3 272 9 343 2 323 1 241 1 173 3 274 1 109 2 246 1 95 1 156 3 74 2 41 3 162 1 137 1 
192 1 140 1 165 1 4 5 219 3 194 1 356 1 340 3 358 2 360 1 87 3 195 6 316 1 108 17 238 7 320 1 150 1 364 1 151 3 272 10 343 2 323 1 274 1 241 1 173 2 109 2 246 1 95 1 156 3 74 1 41 3 162 1 137 1 
140 1 4 2 219 1 194 1 356 1 340 1 87 1 360 1 195 2 316 1 108 8 238 4 151 2 272 4 323 1 173 1 241 1 246 1 95 1 156 1 41 1 162 1 137 1 
140 1 165 1 4 2 219 2 356 1 340 1 358 1 87 1 195 2 108 12 238 6 320 1 150 1 364 1 151 1 272 6 343 2 323 1 241 1 173 2 109 2 156 1 74 2 41 1 162 1 
165 1 140 1 192 1 4 5 219 3 194 1 356 1 340 4 358 2 360 1 87 4 195 8 316 1 108 18 238 8 320 1 364 1 150 1 151 3 272 10 343 2 323 1 241 1 173 2 274 2 109 2 246 1 95 1 156 4 74 1 41 4 162 1 137 1 
165 1 140 1 4 6 219 3 356 1 264 1 340 4 358 3 87 4 195 8 108 16 238 7 320 1 364 1 150 1 151 3 272 9 343 3 323 1 241 1 173 2 274 2 109 3 156 4 74 2 41 4 162 1 
246 3 4 6 95 2 219 1 194 1 358 3 360 3 316 1 238 4 108 7 151 3 272 3 173 1 
165 1 140 1 4 4 219 3 194 1 356 1 264 1 340 4 358 1 360 1 87 4 195 8 316 1 108 18 238 8 320 1 364 1 150 1 151 3 272 10 343 2 323 1 241 1 173 2 274 2 109 2 246 1 95 1 156 4 74 1 41 4 162 1 137 1 
330 1 359 1 279 1 231 1 283 1 70 1 178 1 
324 1 231 1 70 1 314 1 178 1 330 1 279 1 359 1 57 1 208 1 283 1 90 1 
129 1 203 1 216 1 114 1 123 1 351 1 240 1 224 1 200 1 179 1 32 1 
128 1 129 1 231 2 216 1 203 1 70 1 228 1 179 1 267 1 330 1 29 1 149 1 114 1 123 1 283 2 78 1 240 1 32 1 
275 1 128 1 129 1 231 2 2 1 216 1 203 1 290 1 70 1 228 1 8 1 179 3 267 1 330 2 29 2 112 1 149 1 114 1 283 2 22 1 78 2 240 2 32 1 
231 2 2 1 214 1 215 1 216 2 290 1 8 1 29 2 149 1 240 2 32 2 128 1 275 1 129 2 203 1 70 1 228 1 179 3 330 2 112 1 114 1 283 2 78 2 22 1 
2 1 215 1 216 3 258 1 290 1 53 1 8 1 30 1 122 1 123 1 124 1 240 1 32 3 92 1 129 3 203 1 37 2 248 2 179 4 114 1 334 1 78 1 309 1 
129 3 92 1 2 1 215 1 258 1 216 3 203 1 37 2 290 1 248 2 5 1 8 1 179 4 122 1 114 1 30 1 123 1 334 1 78 1 240 1 309 1 32 3 
129 1 58 1 203 1 216 1 114 1 32 1 
174 1 129 3 216 3 203 2 233 1 277 1 179 3 171 1 11 2 133 1 184 1 42 2 349 1 160 1 114 4 123 2 78 2 240 3 32 3 
231 2 216 1 4 2 167 1 219 1 194 1 340 2 7 1 267 1 360 1 87 2 29 1 195 4 55 1 268 2 316 1 238 3 108 6 149 1 151 2 272 3 198 1 240 1 173 1 32 1 128 1 129 1 276 1 203 1 328 1 246 1 95 1 329 1 70 2 131 1 156 2 277 1 228 1 179 1 182 1 330 1 205 2 41 2 114 1 283 2 78 1 137 1 
83 1 216 1 258 1 193 1 51 1 5 1 6 1 120 1 122 1 30 2 123 1 32 1 152 1 129 1 92 1 37 3 155 2 297 2 248 3 179 2 300 2 158 2 229 1 253 1 100 1 334 1 309 1 24 1 
92 1 129 2 216 2 203 1 277 1 179 2 58 1 184 1 114 2 78 1 306 1 240 1 32 2 
129 4 215 1 216 4 203 1 168 1 277 1 179 1 114 1 123 1 224 1 240 1 200 1 32 4 
129 2 174 1 216 2 203 1 233 1 290 1 179 1 11 1 42 1 114 2 78 1 62 1 240 1 32 2 
206 1 159 1 129 1 203 1 216 1 114 1 38 1 123 1 377 1 32 1 
129 2 174 1 203 1 216 2 233 1 277 1 234 1 179 2 181 1 11 1 42 1 114 2 349 1 78 1 240 2 32 2 
129 2 174 1 203 1 216 2 233 1 277 1 179 2 11 1 42 1 114 2 160 1 349 1 123 1 78 1 240 2 32 2 
129 2 174 1 203 1 216 2 233 1 277 1 179 2 11 1 42 1 114 2 349 1 123 1 269 1 78 1 240 2 32 2 
128 1 129 1 231 2 214 1 216 1 203 1 70 1 228 1 179 1 330 1 29 1 149 1 114 1 123 1 283 2 78 1 240 1 32 1 
129 1 216 1 203 1 290 1 179 1 11 1 133 1 184 1 42 1 114 2 78 1 240 1 32 1 
231 1 66 2 13 1 259 1 70 1 144 1 313 1 330 1 237 1 112 1 283 1 378 1 
231 2 259 1 26 1 258 1 289 1 49 1 291 1 313 1 144 1 29 1 237 1 149 1 122 1 172 1 275 1 34 1 13 1 66 2 37 2 96 1 248 2 330 2 252 1 253 1 112 2 209 1 283 2 336 1 22 1 309 1 
313 1 144 1 
66 1 26 1 336 1 
337 1 281 1 351 1 27 1 
354 1 337 1 250 1 281 1 105 1 27 1 211 1 
9 1 211 1 52 1 
354 3 337 1 44 1 105 1 27 1 298 1 250 1 281 1 148 2 121 1 307 1 211 3 
354 2 337 1 250 1 56 1 281 1 232 1 105 1 27 1 211 2 
354 1 44 1 105 1 38 1 27 1 250 1 159 1 75 1 18 1 303 1 211 1 
354 1 250 1 44 1 281 1 105 1 27 1 211 1 
354 1 337 1 250 1 44 1 281 2 105 1 211 1 
354 2 44 1 105 2 110 1 27 1 250 2 281 1 207 1 21 1 211 2 
354 3 337 1 44 1 232 2 105 1 288 1 346 1 27 2 250 1 281 1 303 1 322 1 211 3 
354 2 127 1 337 1 44 1 232 1 105 1 38 2 27 1 250 1 159 1 281 1 18 1 377 1 211 2 125 1 
354 4 337 1 44 1 232 2 105 2 346 1 27 2 250 2 56 1 281 1 118 1 303 1 211 4 
354 1 337 1 250 1 44 1 281 1 105 1 27 1 211 1 
354 4 337 2 232 2 217 1 105 1 346 1 298 1 27 3 250 1 281 2 148 1 303 1 307 1 211 4 
230 1 354 2 337 1 250 1 170 1 44 1 281 1 232 1 99 1 105 1 27 1 211 2 
354 3 337 1 44 1 105 1 298 1 27 1 249 1 250 1 281 1 148 2 307 2 211 3 
93 2 86 1 69 1 27 2 
354 1 250 1 44 1 105 1 296 1 211 1 
354 2 337 1 250 1 44 1 281 1 232 1 288 1 105 1 27 1 211 2 
61 1 
354 1 337 1 250 1 44 1 281 1 105 1 27 1 211 1 
354 3 337 1 44 1 232 1 105 1 288 1 27 1 250 1 281 1 148 1 211 3 
217 1 346 1 303 1 27 1 
281 1 27 1 

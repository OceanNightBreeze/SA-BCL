#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 315 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 5 23 2 254 2 157 9 318 1 317 9 209 2 342 1 55 1 321 3 212 6 187 1 323 2 363 1 324 1 217 1 61 1 89 1 332 2 220 1 91 1 177 1 352 4 46 1 92 2 72 2 338 1 48 1 
52 5 23 2 254 2 157 9 318 1 317 9 209 2 342 1 55 1 321 3 212 6 187 1 323 2 363 1 324 1 217 1 61 1 89 1 332 2 220 1 91 1 177 1 352 4 46 1 92 2 72 2 338 1 48 1 
52 6 23 2 254 2 157 10 318 1 317 10 209 2 342 1 55 1 321 4 212 7 187 1 323 2 363 1 324 1 217 1 61 1 89 1 332 2 220 1 91 1 177 1 352 5 46 1 92 2 72 2 338 1 48 1 
52 4 23 2 254 2 157 7 318 1 317 7 209 2 55 1 321 2 212 4 187 1 323 2 363 1 324 1 217 1 61 1 89 1 332 1 220 1 91 1 177 1 352 3 46 1 92 2 72 2 338 1 48 1 
52 3 23 1 254 1 157 4 317 4 209 1 332 2 91 1 177 1 342 1 321 1 212 3 352 2 46 1 72 1 323 1 324 1 48 1 
52 1 23 1 254 1 157 2 129 1 317 2 209 1 220 1 177 1 92 1 72 1 338 1 324 1 48 1 355 1 327 1 
52 2 61 1 254 2 157 3 317 3 177 1 321 1 352 1 212 1 92 1 72 2 324 1 48 1 
52 5 23 1 292 1 254 2 157 9 317 9 209 1 342 1 55 1 321 3 212 7 187 1 323 1 324 1 61 1 332 2 91 1 177 1 352 4 273 1 92 1 46 1 72 2 48 1 
52 5 23 1 292 1 254 2 157 9 317 9 209 1 342 1 55 1 321 3 212 7 187 1 323 1 324 1 61 1 332 2 91 1 177 1 352 4 273 1 92 1 46 1 72 2 48 1 
200 1 122 1 84 1 
17 1 
40 2 60 2 155 2 253 2 248 2 81 1 210 1 374 2 
20 1 21 1 128 1 155 2 253 3 296 1 210 1 101 2 228 1 362 2 159 1 31 1 106 1 300 1 34 1 137 1 81 1 140 1 9 1 40 3 143 2 236 1 60 2 116 1 307 1 176 1 374 2 269 2 287 1 241 1 286 1 71 1 312 1 248 2 225 1 96 1 356 2 
40 1 60 1 35 1 155 1 253 1 248 1 81 1 197 1 63 1 374 1 
0 1 111 1 40 1 126 1 253 1 28 1 374 1 297 1 145 1 200 1 122 1 8 1 35 1 302 1 
0 1 40 1 126 1 60 1 155 1 253 1 28 1 374 1 297 2 200 1 122 1 8 1 35 1 302 2 248 1 
297 1 11 1 302 1 201 1 156 1 
141 1 297 2 200 1 122 1 11 1 302 2 59 1 156 1 
297 1 11 1 302 1 
40 1 60 1 207 1 155 1 253 1 156 1 197 1 63 1 374 1 297 1 35 1 302 1 81 1 248 1 
122 1 
141 1 297 2 200 1 122 1 11 1 302 2 156 1 18 1 
141 1 1 1 264 1 358 2 11 2 294 1 156 2 350 1 308 1 333 2 297 5 272 2 200 1 94 1 122 1 136 1 289 1 290 1 302 5 
210 1 84 1 
40 2 60 1 155 1 253 2 27 1 210 2 374 2 47 1 248 1 
288 1 6 1 326 1 
9 1 20 1 21 1 40 1 128 1 253 1 210 1 101 1 269 1 106 1 71 1 300 1 222 1 312 1 225 1 356 1 
20 1 9 1 21 1 40 2 60 1 128 1 115 1 155 1 253 2 101 1 374 1 269 1 6 1 106 1 71 1 300 1 312 1 225 1 37 1 356 1 
40 3 60 3 155 3 253 3 248 1 37 1 210 1 374 3 
40 1 60 1 35 1 155 1 253 1 63 1 374 1 
40 1 60 1 47 1 35 1 155 1 253 1 248 1 27 1 374 1 
20 1 0 1 21 1 126 1 128 1 155 3 253 4 27 1 210 1 28 1 101 1 228 1 362 2 31 1 106 1 297 1 300 1 34 1 107 1 8 1 35 1 137 1 302 1 81 1 37 1 9 1 40 4 143 1 236 1 60 3 115 1 116 1 176 1 374 3 269 1 287 1 286 1 70 1 71 1 312 1 248 2 225 1 96 1 356 1 
111 1 40 2 79 1 60 1 155 1 253 2 37 1 210 1 374 2 
0 1 126 1 40 3 60 3 115 1 155 3 253 3 27 1 285 1 28 1 374 3 70 1 297 1 122 1 35 1 8 1 302 1 248 1 37 2 
40 2 60 2 155 2 253 2 27 1 374 2 6 1 326 1 248 1 37 1 
9 1 20 1 21 1 40 1 128 1 253 1 210 1 101 1 269 1 106 1 71 1 300 1 312 1 225 1 356 1 
9 1 21 1 40 1 114 1 128 1 253 1 210 1 101 1 269 1 106 1 71 1 147 1 312 1 225 1 356 1 
208 1 361 1 228 1 362 2 31 1 6 2 185 1 188 1 34 1 279 1 326 2 191 1 140 2 193 1 143 4 44 1 88 1 116 2 268 1 198 1 176 1 287 1 288 2 96 1 
40 1 375 1 60 1 35 1 8 1 155 1 253 1 374 1 
111 1 40 5 60 4 155 4 115 1 253 5 27 1 77 1 210 1 374 5 132 1 79 1 248 1 37 2 
375 1 40 2 60 2 35 1 155 2 253 2 63 1 374 2 
186 1 275 1 
186 1 275 1 
242 1 66 1 
242 1 66 1 
242 1 66 1 
15 1 186 1 275 1 
15 1 186 1 275 1 
186 1 149 1 275 1 
242 1 304 1 186 2 184 1 275 2 66 1 
15 1 186 1 275 1 
186 1 36 1 275 1 
186 1 36 1 275 1 
186 1 36 1 275 1 
233 1 152 1 304 1 180 1 235 2 54 2 99 1 174 1 275 2 3 1 297 2 277 3 121 1 122 1 186 2 7 2 302 2 262 2 249 2 
357 1 54 1 155 2 99 1 253 2 210 1 275 1 158 1 277 1 297 1 186 1 134 1 7 1 216 1 302 1 325 1 189 1 262 1 40 2 60 2 235 1 374 2 246 1 149 1 
23 1 323 1 209 1 
23 1 327 1 209 1 
215 1 323 2 230 1 327 1 209 3 257 1 
215 1 323 1 229 1 327 1 209 2 257 1 
215 1 323 1 327 1 209 2 257 2 
357 1 153 2 358 1 156 4 340 1 30 2 158 1 5 1 297 5 185 1 214 1 134 1 188 1 302 5 346 1 141 1 264 1 62 1 88 1 268 1 11 1 372 1 349 1 330 2 333 1 272 1 200 1 122 2 94 3 17 3 290 2 179 1 
357 4 1 1 153 6 358 2 156 7 340 2 276 1 30 6 5 1 297 9 185 3 188 3 302 9 38 1 345 1 346 3 141 1 368 1 264 1 88 3 268 3 11 6 45 1 349 3 333 2 335 5 272 2 274 1 200 1 122 5 94 8 17 9 290 6 201 5 179 2 
357 1 1 1 358 1 153 2 156 2 340 1 30 2 297 3 185 1 188 1 302 3 346 1 62 1 268 1 88 1 372 1 349 2 330 1 333 1 272 1 200 1 122 3 94 3 290 2 17 4 179 1 
357 2 1 1 153 4 358 1 156 3 340 1 30 4 276 1 297 4 185 2 188 2 302 4 38 1 346 2 368 1 62 1 268 2 88 2 372 1 349 3 330 2 333 1 272 1 200 1 122 4 94 5 17 7 290 4 179 1 
106 1 226 1 84 1 
106 1 244 1 
366 1 
106 1 71 1 
106 3 71 1 113 1 226 2 128 1 103 1 
106 1 71 1 128 1 
106 1 133 1 
140 4 204 1 303 1 75 1 348 1 143 7 22 2 116 3 88 1 198 2 4 1 336 1 146 1 188 1 191 3 190 1 203 1 
140 4 204 1 303 1 75 1 348 1 143 7 22 2 116 3 88 1 198 2 4 1 336 1 146 1 188 1 191 3 190 1 203 1 
204 1 140 4 303 1 75 1 348 1 143 7 22 2 116 3 88 1 198 2 4 1 336 1 146 1 188 1 364 1 191 3 190 1 203 1 
140 1 315 1 75 2 143 1 22 1 190 1 
204 1 75 1 22 2 4 1 362 4 31 2 188 1 34 2 343 1 190 1 191 4 139 1 140 5 303 1 143 9 348 1 88 1 116 4 198 3 287 2 336 1 16 1 146 1 96 2 
205 1 52 1 23 1 254 1 100 1 157 2 317 2 209 2 101 1 212 1 57 1 323 1 280 1 324 1 260 1 261 1 230 1 327 1 170 1 10 1 269 1 68 1 177 1 92 1 72 1 337 1 312 1 48 1 225 1 356 1 
52 1 23 1 254 1 100 1 157 3 130 1 317 3 209 2 101 1 212 2 322 1 57 1 323 1 280 1 324 1 260 1 261 1 230 1 327 1 170 1 10 1 269 1 177 1 92 1 72 1 337 1 312 1 313 1 225 1 356 1 
52 1 23 1 157 2 317 2 209 2 101 1 212 2 322 1 57 1 323 1 280 1 324 1 260 1 261 1 230 1 327 1 170 1 10 1 269 1 177 1 92 1 312 1 313 1 225 1 356 1 
9 1 367 1 170 2 43 1 10 2 370 1 254 1 130 1 157 1 317 1 101 1 269 1 106 1 320 1 71 1 243 1 92 2 72 1 312 1 260 2 225 1 232 1 356 1 
205 1 23 1 254 1 100 1 157 1 317 1 209 2 101 1 57 1 323 1 280 1 260 1 261 1 230 1 327 1 170 1 10 1 269 1 92 1 72 1 337 1 312 1 48 1 313 1 225 1 356 1 
291 1 
0 1 51 2 53 1 252 1 339 2 253 1 101 2 211 2 297 5 106 1 298 1 56 1 8 1 163 1 302 5 9 2 111 1 169 1 264 1 11 6 349 2 65 1 269 2 120 2 272 1 71 1 122 2 312 1 17 2 225 1 179 1 356 2 126 1 358 1 26 1 25 1 28 1 33 2 35 1 281 2 39 1 141 3 40 1 42 2 284 1 43 1 331 1 374 1 333 1 145 1 200 1 243 1 94 2 290 2 95 4 
0 1 141 1 111 1 126 1 40 1 42 1 284 1 53 1 11 2 253 1 28 1 65 1 374 1 297 3 56 1 145 1 35 1 8 1 302 3 18 1 95 2 39 1 
0 1 126 1 53 1 253 1 28 1 297 3 56 1 8 1 35 1 302 3 39 1 141 1 111 1 40 1 284 1 11 1 65 1 374 1 120 1 145 1 200 1 122 1 18 1 95 3 
0 1 141 1 111 1 126 1 40 1 42 1 284 1 53 1 11 2 253 1 28 1 65 1 374 1 211 1 120 1 297 3 56 1 145 1 200 1 122 1 35 1 8 1 302 3 18 1 95 3 39 1 
0 1 51 2 53 1 339 2 253 1 211 4 297 5 56 1 8 1 302 5 58 1 111 1 169 1 264 1 11 7 118 1 349 2 65 1 120 4 178 1 272 1 122 5 18 1 126 1 358 1 25 1 28 1 33 2 35 1 281 2 39 1 141 3 40 1 42 4 284 1 329 1 374 1 333 1 145 1 200 5 94 1 290 1 148 1 95 6 
0 1 51 2 53 1 339 2 253 1 211 2 297 4 56 1 8 1 302 4 111 1 169 1 264 1 11 4 349 2 65 1 272 1 120 2 122 2 17 2 126 1 358 1 25 1 26 1 28 1 33 2 35 1 281 2 39 1 141 2 40 1 42 2 284 1 374 1 333 1 145 1 200 1 94 1 290 1 95 4 
0 1 126 1 51 2 53 1 339 2 358 1 253 1 25 1 28 1 211 2 297 4 56 1 33 2 8 1 35 1 281 2 302 4 58 1 39 1 141 2 111 1 40 1 42 2 169 1 284 1 264 1 11 4 118 1 349 2 65 1 374 1 333 1 120 2 178 1 272 1 145 1 200 1 122 1 94 1 290 1 95 4 
0 1 126 1 51 2 53 1 339 2 358 1 253 1 25 1 28 1 211 2 297 4 56 1 33 2 8 1 35 1 281 2 302 4 58 1 39 1 141 2 111 1 40 1 42 2 169 1 284 1 264 1 11 4 118 1 349 2 65 1 374 1 333 1 120 2 178 1 272 1 145 1 200 1 122 1 94 1 290 1 95 4 
0 1 126 1 51 2 53 1 127 1 339 2 358 1 253 1 25 1 28 1 211 2 297 4 56 1 8 1 35 1 302 4 58 1 39 1 141 2 111 1 40 1 42 2 284 1 264 1 11 4 144 2 65 1 374 1 333 1 120 2 310 1 272 1 145 1 200 1 93 2 122 1 94 1 17 2 290 1 245 1 95 4 
0 1 126 1 51 2 53 1 339 2 358 1 253 1 25 1 28 1 211 3 297 4 56 1 33 2 8 1 35 1 281 2 302 4 58 1 39 1 141 2 111 1 40 1 169 1 42 3 284 1 264 1 329 1 11 5 118 1 349 2 65 1 374 1 333 1 272 1 178 1 120 3 145 1 200 1 122 1 94 1 290 1 95 5 
0 1 126 1 51 2 53 1 339 2 358 1 253 1 25 1 28 1 211 3 297 4 56 1 33 2 8 1 35 1 281 2 302 4 58 1 39 1 141 2 111 1 40 1 169 1 42 3 284 1 264 1 329 1 11 5 118 1 349 2 65 1 374 1 333 1 272 1 178 1 120 3 145 1 200 1 122 1 94 1 290 1 95 5 
0 1 51 2 53 1 339 2 253 1 211 2 297 4 56 1 8 1 302 4 111 1 264 1 11 4 65 1 272 1 120 2 122 1 17 2 126 1 358 1 25 1 26 1 28 1 35 1 39 1 141 2 40 1 42 2 284 1 144 2 374 1 333 1 145 1 93 2 200 1 94 1 245 1 290 1 95 4 
204 1 22 1 208 1 210 2 228 1 4 1 362 2 6 1 31 1 34 1 188 1 326 1 191 2 84 1 140 3 303 1 143 6 88 1 116 3 198 2 176 1 287 1 288 1 336 1 146 1 96 1 
206 4 210 1 102 1 228 1 362 4 31 2 6 16 185 2 34 2 188 2 326 6 191 4 140 13 346 4 142 1 236 1 348 2 143 22 116 9 268 4 88 4 371 2 173 1 307 1 198 2 176 2 287 2 334 1 288 16 353 1 49 2 150 4 96 2 
20 1 21 1 97 1 128 1 155 1 253 2 360 1 210 1 101 1 102 1 228 1 104 1 362 2 106 1 31 1 300 1 34 1 326 1 37 1 9 1 140 1 40 2 60 1 236 1 143 2 115 1 116 1 307 1 176 1 374 1 269 1 287 1 71 1 222 1 312 1 225 1 356 1 96 1 
204 1 2 1 155 1 253 3 210 2 101 3 102 1 4 1 106 2 6 7 300 2 165 1 166 2 9 1 346 2 303 1 60 1 348 4 115 1 116 10 268 2 307 1 176 3 269 3 71 2 312 2 313 1 225 2 356 3 20 2 21 2 22 1 128 2 228 3 362 6 31 3 185 2 32 2 188 3 34 3 138 2 326 7 191 8 37 1 140 10 194 2 40 3 236 1 143 20 88 3 198 4 374 1 287 3 286 2 288 7 336 1 146 1 379 1 96 3 
316 1 154 1 155 1 253 1 208 1 256 1 101 7 228 2 362 4 159 2 106 3 31 2 213 1 34 2 282 1 37 1 9 2 140 1 40 1 60 1 143 2 236 1 43 1 116 1 307 1 374 1 176 2 269 8 68 1 287 2 71 2 243 1 312 2 313 1 225 2 19 1 356 8 96 2 124 1 
155 1 253 1 27 1 102 1 228 1 362 2 6 1 31 1 185 1 34 1 188 1 326 1 82 1 191 1 140 1 346 1 40 1 60 1 143 3 268 1 88 1 116 2 198 1 176 1 374 1 287 1 288 1 248 1 96 1 
140 2 193 1 348 1 143 2 268 1 88 1 208 1 228 1 176 1 362 2 287 1 288 1 6 1 31 1 34 1 326 1 191 1 96 1 
143 2 44 1 116 2 208 1 198 1 228 1 176 1 362 2 287 1 288 1 6 1 31 1 185 1 34 1 188 1 326 1 191 1 96 1 
140 2 346 1 348 1 143 4 116 2 268 1 88 1 208 1 198 1 228 1 176 1 362 2 287 1 288 2 6 2 31 1 185 1 188 1 34 1 326 2 191 2 96 1 
140 2 193 1 348 1 143 2 268 1 88 1 256 1 228 1 176 1 362 2 287 1 288 1 6 1 31 1 34 1 326 1 191 1 96 1 
143 2 44 1 116 2 198 1 256 1 228 1 176 1 362 2 287 1 288 1 6 1 31 1 185 1 34 1 188 1 326 1 191 1 96 1 
140 2 346 1 348 1 143 4 116 2 268 1 88 1 198 1 256 1 228 1 176 1 362 2 287 1 288 2 6 2 31 1 185 1 188 1 34 1 326 2 191 2 96 1 
140 2 346 1 348 1 143 4 116 2 268 1 88 1 198 1 228 1 176 1 362 2 287 1 288 2 6 2 31 1 185 1 188 1 34 1 326 2 191 2 96 1 
20 1 21 1 128 1 253 1 210 1 101 1 228 1 362 2 106 1 31 1 300 1 34 1 140 1 9 1 40 1 143 2 236 1 116 1 307 1 176 1 269 1 286 1 287 1 71 1 312 1 225 1 356 1 96 1 
21 1 76 1 128 1 253 1 210 1 101 1 228 1 362 2 106 1 31 1 34 1 140 1 9 1 40 1 143 2 236 1 114 1 116 1 307 1 176 1 269 1 287 1 71 1 147 1 312 1 225 1 356 1 96 1 
140 2 346 1 348 1 143 4 116 2 268 1 88 1 198 1 102 1 228 1 176 1 362 2 287 1 288 2 6 2 31 1 185 1 188 1 34 1 326 2 191 2 96 1 
20 1 21 1 128 1 253 1 101 1 228 1 362 2 6 2 106 1 31 1 185 1 300 1 188 1 34 1 138 1 326 2 191 2 140 2 346 1 40 1 348 1 143 4 116 2 88 1 268 1 198 1 176 1 269 1 286 1 68 1 287 1 288 2 71 1 312 1 225 1 356 1 96 1 
155 1 253 1 27 1 102 1 228 1 362 2 31 1 6 1 185 1 188 1 34 1 326 1 191 1 140 2 346 1 40 1 348 1 60 1 143 3 116 1 268 1 88 1 239 1 176 1 374 1 287 1 288 1 248 1 96 1 
206 2 98 1 293 1 183 1 319 1 362 8 31 4 185 4 34 4 343 1 188 4 108 1 191 6 139 2 140 15 234 1 192 1 346 4 143 31 348 3 328 1 305 1 116 16 268 4 88 4 12 1 198 3 219 1 221 1 287 4 334 2 376 3 377 1 49 1 150 3 96 4 
206 4 98 1 183 2 319 1 362 6 31 3 185 6 34 3 343 1 188 6 108 1 191 8 139 2 140 24 192 1 346 7 348 4 143 46 328 2 116 22 305 1 268 7 88 7 12 1 371 2 198 4 219 1 221 1 287 3 334 2 376 4 377 1 49 2 50 1 150 4 96 3 
206 5 98 1 293 1 183 2 319 1 362 8 160 1 31 4 185 5 34 4 343 1 188 5 108 1 191 10 139 2 140 25 192 1 346 7 143 46 348 6 328 1 305 1 116 21 268 7 88 7 12 1 371 2 198 4 219 1 221 1 287 4 334 3 376 4 377 1 49 2 50 1 150 5 96 4 
206 2 98 1 293 1 183 1 319 1 362 8 31 4 185 4 34 4 343 1 188 4 108 1 191 5 139 2 140 16 192 1 346 4 143 33 348 3 328 1 305 1 116 17 268 4 88 4 12 1 198 2 219 1 221 1 287 4 334 2 376 4 377 1 49 1 50 1 150 3 96 4 
204 1 206 4 22 1 98 1 183 1 319 1 4 1 362 6 31 3 185 7 34 3 343 1 188 8 108 1 191 14 139 2 140 27 192 1 346 7 303 1 143 54 348 6 328 1 305 1 116 27 268 7 88 8 12 1 371 2 198 8 219 1 221 1 287 3 334 2 336 1 146 1 376 4 377 1 49 2 50 1 150 4 96 3 
304 1 180 1 235 1 54 1 186 1 7 1 24 1 262 1 275 1 3 1 
216 1 149 1 
168 1 258 1 235 1 54 1 186 1 7 1 218 1 262 1 275 1 
152 1 304 1 180 1 235 1 54 1 99 1 174 1 275 1 3 1 297 1 277 2 121 1 122 1 186 1 7 1 302 1 262 1 249 1 
152 1 304 1 180 1 235 1 54 1 99 1 174 1 275 1 3 1 297 1 277 2 121 1 122 1 186 1 7 1 302 1 262 1 249 1 
152 1 304 1 180 1 235 1 54 1 99 1 174 1 275 1 3 1 297 1 277 2 121 1 122 1 186 1 7 1 302 1 262 1 249 1 
15 1 223 1 184 1 
15 1 223 1 184 1 
347 1 36 1 
347 1 184 1 36 1 
325 1 246 1 
357 1 152 1 54 1 155 2 253 2 156 1 210 1 275 1 158 1 297 1 277 1 186 1 134 1 7 1 216 1 302 1 325 1 189 1 262 1 40 2 112 1 235 1 60 2 374 2 246 1 149 1 249 1 
15 1 223 1 
347 1 184 1 36 1 
253 2 255 1 102 1 101 2 228 1 362 2 159 2 106 1 31 1 34 1 83 1 140 1 195 1 40 2 143 2 236 1 116 1 119 1 307 1 176 1 374 2 269 2 287 1 71 1 312 1 73 1 225 1 19 1 356 2 96 1 124 1 
41 1 23 1 100 1 306 1 209 2 101 2 269 2 68 1 323 1 312 1 280 1 260 1 261 1 230 1 313 1 327 1 225 1 365 1 356 2 
41 1 23 1 100 1 209 2 101 1 269 1 323 1 280 1 312 1 260 1 164 1 261 1 230 1 313 1 327 1 225 1 356 1 
9 1 367 1 43 1 266 1 306 1 101 1 269 1 106 1 71 1 243 1 312 1 260 1 225 1 356 1 
41 1 23 1 100 1 306 1 209 2 101 1 269 1 323 1 280 1 312 1 260 1 261 1 230 1 313 1 327 1 225 1 365 1 356 1 
172 1 
200 1 94 1 122 1 290 1 294 1 84 1 308 1 
358 1 297 1 33 1 281 1 302 1 141 1 169 1 264 1 11 1 349 1 333 1 272 1 200 1 94 1 122 2 290 1 17 1 
153 6 294 1 101 3 103 1 341 2 106 8 297 5 163 1 302 5 9 1 346 2 167 1 263 1 264 4 11 5 268 2 117 2 171 2 349 6 308 1 269 3 271 1 68 1 272 4 71 2 122 8 312 2 354 2 17 12 225 3 179 2 356 3 126 2 226 2 227 2 128 2 358 4 182 1 131 1 30 6 78 1 185 2 133 1 32 2 188 2 141 3 88 2 333 4 200 2 94 9 244 3 290 8 378 2 151 2 
206 2 153 8 358 2 98 1 295 1 30 8 341 3 297 1 185 4 188 4 108 1 163 1 302 1 141 1 346 4 264 2 11 1 268 4 88 4 117 1 12 1 371 1 349 5 219 1 221 1 333 2 334 1 272 2 199 1 200 2 94 13 122 7 17 10 290 8 49 1 179 1 150 2 
358 1 207 1 155 1 253 1 341 2 4 1 297 1 135 1 188 1 35 1 302 1 81 1 40 1 60 1 264 1 88 2 117 1 197 1 63 1 374 1 333 1 272 1 178 1 336 1 146 1 94 2 290 2 248 1 
264 1 358 1 294 1 308 1 333 1 272 1 200 1 122 1 94 1 290 1 
346 2 153 5 268 2 88 2 117 1 349 5 30 5 341 2 185 2 32 1 122 5 94 5 188 2 290 5 17 10 
141 1 297 1 200 1 122 1 302 1 11 1 
1 1 252 1 358 2 101 4 78 1 106 1 297 3 299 1 259 1 163 2 302 3 9 2 141 2 264 1 43 1 11 4 331 1 269 4 271 2 333 2 272 2 71 1 243 1 94 2 312 1 290 2 225 1 179 2 356 4 
20 1 21 1 128 1 155 2 253 3 210 1 101 1 228 1 362 2 31 1 106 1 300 1 34 1 137 1 81 1 9 1 40 3 143 1 236 1 60 2 116 1 374 2 176 1 269 1 287 1 286 1 71 1 312 1 248 2 225 1 356 1 96 1 
264 1 22 1 153 2 358 1 349 2 30 2 333 1 272 1 200 2 94 1 122 4 17 4 290 2 163 1 179 1 
54 1 7 1 344 1 
54 1 7 1 344 1 
90 1 54 1 7 1 325 1 3 1 
54 1 7 1 344 1 
270 1 54 1 7 1 
270 1 54 1 7 1 
270 1 54 1 7 1 
54 1 7 1 
186 1 275 1 
140 4 204 1 303 1 143 8 348 1 22 1 88 1 116 4 198 2 4 1 362 4 287 2 31 2 336 1 146 1 188 1 34 2 191 3 96 2 139 1 
204 1 140 3 303 1 143 6 22 1 116 3 88 1 198 2 4 1 336 1 146 1 188 1 191 2 84 1 
140 2 346 1 143 4 348 1 116 2 181 1 268 1 88 1 198 1 362 2 287 1 31 1 185 1 188 1 34 1 191 2 96 1 
140 6 346 2 206 2 348 1 143 12 116 6 268 2 88 2 371 1 198 1 334 1 185 2 188 2 49 1 191 2 150 2 
204 1 206 2 22 1 4 2 362 4 31 2 185 2 188 3 34 2 191 9 139 2 140 11 346 2 303 1 348 4 143 23 88 3 268 2 116 12 371 1 173 1 198 5 14 1 287 2 336 1 146 2 49 1 150 2 96 2 
143 1 116 1 150 1 
140 1 206 1 143 1 
140 3 346 1 143 6 348 1 181 1 116 3 268 1 88 1 198 2 287 1 362 2 31 1 185 1 32 1 34 1 188 1 191 3 96 1 
206 2 98 1 362 2 31 1 185 4 34 1 343 1 188 4 108 1 191 4 140 11 346 4 143 22 348 2 116 11 268 4 88 4 12 1 371 1 198 2 219 1 287 1 221 1 334 1 49 1 150 2 96 1 
140 3 143 6 348 1 88 1 116 3 198 1 4 1 336 1 146 1 188 1 191 2 
140 1 204 1 303 1 348 1 143 3 116 2 198 1 14 1 4 1 362 2 287 1 31 1 146 1 34 1 191 2 139 1 96 1 
140 5 348 2 143 10 116 5 88 2 198 3 4 2 287 1 362 2 31 1 336 1 146 2 34 1 343 1 135 1 188 2 191 5 96 1 
140 2 143 2 348 1 268 1 88 1 362 2 287 1 31 1 343 1 34 1 191 1 96 1 
140 2 346 1 143 4 348 1 116 2 268 1 88 1 198 1 362 2 287 1 31 1 185 1 188 1 343 1 34 1 191 2 96 1 
140 1 143 3 348 1 293 1 116 2 198 1 14 1 4 1 362 6 287 3 31 3 146 1 343 1 34 3 191 2 139 1 96 3 
204 1 206 1 181 1 293 1 4 2 362 8 31 4 188 2 135 1 34 4 343 1 191 6 139 1 140 7 303 1 348 3 143 15 88 2 116 8 198 3 14 1 287 4 334 1 336 1 146 2 150 1 74 1 96 4 
204 1 206 1 22 1 98 1 4 2 362 4 31 2 185 1 135 1 34 2 343 1 188 4 108 1 191 9 139 1 140 14 346 2 303 1 348 4 143 24 116 10 268 2 88 5 12 1 198 5 219 1 287 2 221 1 334 1 336 2 146 2 150 1 96 2 
204 1 206 1 22 1 98 1 181 1 4 1 362 4 31 2 188 1 343 1 34 2 191 3 140 6 346 1 303 1 143 11 348 1 116 5 268 1 88 2 198 2 287 2 334 1 336 1 146 1 49 1 150 2 96 2 
204 1 206 2 22 1 98 1 181 1 4 1 362 6 31 3 185 4 34 3 343 1 188 5 108 1 191 6 139 1 140 14 346 4 303 1 143 29 348 2 116 15 268 4 88 5 12 1 371 1 198 4 219 1 287 3 221 1 334 1 336 1 146 1 49 1 150 2 96 3 
204 1 206 2 22 1 98 1 181 1 4 1 362 6 31 3 185 3 34 3 343 1 188 4 108 1 191 7 139 1 140 15 346 4 303 1 143 27 348 3 116 12 268 4 88 5 12 1 371 1 198 4 219 1 287 3 221 1 334 1 336 1 146 1 49 1 150 2 96 3 
204 1 206 1 22 1 98 1 4 2 362 4 31 2 185 1 135 1 34 2 343 1 188 4 108 1 191 9 139 1 140 14 346 2 303 1 348 4 143 24 116 10 268 2 88 5 12 1 198 5 219 1 287 2 221 1 334 1 336 2 146 2 150 1 96 2 
206 2 98 1 362 2 31 1 185 4 34 1 343 1 188 4 108 1 191 4 140 11 346 4 143 22 348 2 116 11 268 4 88 4 12 1 371 1 198 2 219 1 287 1 221 1 334 1 49 1 150 2 96 1 
204 1 206 2 22 1 98 1 181 1 4 1 362 8 31 4 185 3 34 4 343 1 188 4 108 1 191 7 139 2 140 15 346 4 303 1 143 28 348 3 116 13 268 4 88 5 12 1 371 1 198 4 219 1 221 1 287 4 334 1 336 1 146 1 49 1 150 2 96 4 
206 1 98 1 293 1 362 4 31 2 185 1 343 1 34 2 188 1 191 1 140 3 346 1 143 7 116 4 268 1 88 1 198 1 287 2 334 1 49 1 150 2 96 2 
204 2 140 3 303 1 143 7 348 3 116 4 88 1 198 3 4 3 336 1 146 3 188 1 191 6 
206 1 98 1 293 1 362 4 31 2 185 1 343 1 34 2 188 1 191 1 140 3 346 1 143 7 116 4 268 1 88 1 198 1 287 2 334 1 49 1 150 2 96 2 
111 1 40 1 125 1 79 1 253 1 210 1 374 1 
111 1 125 1 40 1 196 1 253 1 13 1 210 1 374 1 69 1 79 1 311 1 109 1 
269 1 9 1 106 1 71 1 243 1 43 1 312 1 225 1 84 1 101 1 356 1 
9 1 20 1 21 1 40 2 60 1 128 1 155 1 253 2 210 1 101 1 374 1 269 1 106 1 71 1 312 1 225 1 37 1 356 1 
20 1 21 1 128 2 155 1 253 2 210 1 101 1 28 1 106 3 133 1 8 1 35 1 37 1 40 2 263 1 60 2 374 2 269 1 271 1 71 2 312 1 225 1 356 1 
21 1 128 2 155 1 253 2 210 1 101 2 28 1 106 3 133 1 8 1 35 1 37 1 40 2 263 1 60 2 374 2 269 2 271 1 71 2 147 1 312 1 247 1 225 1 356 2 
9 1 126 1 263 1 226 1 128 1 369 1 11 1 101 3 240 1 269 3 271 1 297 2 106 4 71 1 200 1 133 1 122 1 244 1 312 1 302 2 247 1 225 1 356 3 
9 1 126 1 263 1 226 1 128 1 11 1 171 1 101 3 269 3 271 1 297 2 106 4 71 1 200 1 133 1 122 1 244 1 312 1 302 2 247 1 225 1 356 3 
269 1 213 1 312 1 225 1 101 1 356 1 
9 2 316 1 250 1 154 1 128 1 101 6 103 1 29 1 269 7 67 1 68 1 159 1 106 3 71 2 213 1 312 2 313 1 282 1 225 3 19 1 356 7 
204 1 20 1 21 1 22 1 128 1 155 1 253 2 210 2 102 1 101 1 228 2 4 1 362 4 6 1 106 1 31 2 300 1 188 1 34 2 138 1 326 1 191 2 37 1 140 3 195 1 194 1 303 1 40 2 143 6 60 1 116 3 88 1 198 2 176 2 374 1 269 1 287 2 68 1 286 1 288 1 336 1 71 1 146 1 312 1 225 1 96 2 356 1 
126 1 226 1 227 1 358 2 294 1 156 1 101 1 78 1 297 3 106 2 302 3 9 1 141 1 264 2 11 2 171 1 308 1 269 1 333 2 272 2 200 1 94 1 122 1 244 1 290 1 354 1 378 1 356 1 
226 1 128 1 182 1 101 2 103 1 269 2 68 1 106 2 71 1 213 1 312 1 225 2 356 2 
9 1 87 1 43 1 101 4 269 4 68 1 106 1 71 1 243 1 312 1 247 1 225 1 356 4 
128 1 101 2 29 1 269 2 67 1 271 1 106 1 71 1 80 1 312 1 165 1 225 2 231 1 356 2 
269 1 9 1 23 1 312 1 280 1 327 1 225 1 209 1 101 1 356 1 
119 1 101 2 269 2 68 1 106 1 71 1 312 1 313 1 225 1 19 1 356 2 
9 1 316 1 87 1 43 1 154 1 101 4 269 5 271 1 68 1 106 3 71 2 243 1 312 2 225 2 19 1 356 5 
9 1 237 1 87 1 43 1 154 1 101 4 269 5 271 1 68 1 106 3 71 2 243 1 312 2 225 2 19 1 356 5 
9 1 21 1 40 2 60 1 128 1 155 1 253 2 210 1 101 1 374 1 269 1 106 1 71 1 147 1 312 1 225 1 37 1 356 1 
250 1 128 1 101 1 103 1 29 1 269 1 67 1 271 1 106 1 71 1 312 1 225 2 356 1 
40 1 86 1 265 1 238 1 253 1 73 1 255 1 83 1 374 1 
110 1 86 1 251 1 
86 1 278 1 265 1 238 1 210 1 
110 1 0 1 126 1 86 1 251 1 238 2 265 2 156 1 210 1 28 1 70 1 297 2 200 1 122 1 278 2 35 1 8 1 162 1 302 2 
177 1 52 1 324 1 84 1 
177 1 52 1 72 1 324 1 254 1 157 1 317 1 
92 1 170 1 317 1 
309 1 177 1 283 1 52 1 72 1 324 1 254 1 48 1 157 3 64 1 317 3 220 2 
177 1 212 1 52 1 72 1 324 1 254 1 157 2 317 2 332 1 
52 1 23 1 254 1 157 1 317 1 209 1 352 1 46 1 72 1 323 1 48 1 
52 1 72 1 324 1 254 1 48 1 157 1 317 1 
177 1 72 1 324 2 254 1 48 1 157 1 317 1 
314 1 52 1 267 1 254 2 157 2 317 2 72 2 324 1 48 1 202 1 
52 2 254 1 157 3 317 3 177 1 55 1 212 2 321 1 352 1 72 1 187 1 324 1 48 1 
52 1 23 1 254 1 157 2 317 2 209 2 373 1 177 1 212 1 72 1 323 1 324 1 48 1 230 1 327 1 
52 2 254 2 157 4 317 4 332 1 177 1 342 1 212 2 321 1 352 1 72 2 324 1 48 1 
177 1 52 1 72 1 324 1 254 1 48 1 157 1 317 1 
283 1 52 3 254 1 157 4 64 1 317 4 220 1 177 2 212 2 321 1 352 1 72 1 301 1 324 2 
85 1 52 1 292 1 254 1 157 2 317 2 177 1 351 1 212 1 72 1 324 1 48 1 
177 1 283 1 52 1 161 1 72 1 324 1 254 1 48 1 157 3 64 2 317 3 220 2 
52 2 359 1 123 1 175 2 
105 1 72 1 254 1 48 1 157 1 317 1 
177 1 212 1 52 1 187 1 72 1 324 1 254 1 48 1 157 2 317 2 
224 1 
177 1 52 1 72 1 324 1 254 1 48 1 157 1 317 1 
177 1 212 1 52 1 187 1 72 1 324 1 254 1 48 1 157 3 317 3 220 1 
352 1 321 1 52 1 301 1 
52 1 324 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (197,291) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 118 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 294 12 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 2 171 1 281 2 362 1 141 5 192 1 79 1 220 2 36 1 60 1 177 1 180 1 63 2 311 4 107 1 236 2 43 6 329 1 272 3 22 9 186 1 113 1 204 2 355 1 296 2 188 9 277 1 356 1 
208 2 171 1 281 2 362 1 141 5 192 1 79 1 220 2 36 1 60 1 177 1 180 1 63 2 311 4 107 1 236 2 43 6 329 1 272 3 22 9 186 1 113 1 204 2 355 1 188 9 277 1 296 2 356 1 
208 2 171 1 281 2 362 1 141 6 192 1 79 1 220 2 36 1 60 1 177 1 180 1 63 2 311 5 107 1 236 2 43 7 329 1 272 4 22 10 186 1 113 1 204 2 355 1 188 10 277 1 296 2 356 1 
208 2 171 1 281 2 362 1 141 4 192 1 79 1 220 2 36 1 60 1 180 1 63 2 311 3 107 1 236 2 43 4 329 1 272 2 22 7 186 1 113 1 204 2 355 1 188 7 277 1 296 1 356 1 
180 1 208 1 171 1 63 1 281 1 141 3 192 1 311 2 236 1 43 3 272 1 220 1 22 4 113 1 188 4 296 2 60 1 177 1 
180 1 208 1 171 1 2 1 63 1 141 1 236 1 329 1 220 1 22 2 175 1 204 1 188 2 36 1 60 1 178 1 
180 1 171 1 141 2 311 1 236 2 43 1 272 1 220 2 22 3 204 1 188 3 277 1 60 1 
180 1 208 1 171 1 63 1 281 1 141 5 192 1 311 4 236 2 251 1 43 7 336 1 272 3 113 1 186 1 220 2 22 9 204 1 355 1 296 2 188 9 277 1 60 1 177 1 
180 1 208 1 171 1 63 1 281 1 141 5 192 1 311 4 236 2 251 1 43 7 336 1 272 3 113 1 186 1 220 2 22 9 204 1 355 1 296 2 188 9 277 1 60 1 177 1 
17 1 118 1 211 1 
17 1 110 1 136 2 
260 2 19 2 39 2 117 2 285 1 67 1 42 2 94 2 
28 1 29 1 117 3 334 2 213 1 3 1 94 2 217 1 218 1 339 1 219 1 306 1 285 1 55 1 59 1 9 1 369 1 179 1 80 1 230 1 260 2 13 1 154 1 39 2 292 1 130 2 268 1 67 1 42 2 271 1 184 2 200 1 19 3 187 2 206 1 138 2 245 1 
38 1 260 1 19 1 39 1 117 1 67 1 42 1 94 1 
325 1 319 1 39 1 117 1 30 1 73 1 211 1 365 1 17 1 19 1 165 1 241 1 276 1 225 1 
325 1 319 1 260 1 39 1 117 1 30 1 211 1 365 1 94 1 42 1 17 1 19 1 165 1 241 2 225 2 
376 1 241 1 92 1 225 1 168 1 
17 1 229 1 241 2 211 1 92 1 33 1 225 2 168 1 
241 1 92 1 225 1 
38 1 260 1 19 1 39 1 117 1 241 1 67 1 316 1 42 1 94 1 225 1 168 1 
17 1 
17 1 241 2 211 1 92 1 33 1 288 1 225 2 168 1 
129 1 290 1 120 1 105 1 211 1 267 1 92 2 33 1 351 1 183 1 17 1 367 1 147 2 44 2 99 2 241 5 168 2 225 5 370 1 
118 1 285 1 
174 1 260 1 19 2 39 2 117 2 285 2 66 1 42 1 94 1 
72 1 197 1 263 1 
80 1 28 1 29 1 292 1 117 1 364 1 268 1 184 1 217 1 19 1 219 1 306 1 285 1 187 1 206 1 138 1 
80 1 260 1 29 1 39 1 28 1 197 1 292 1 117 2 268 1 42 1 184 1 217 1 19 2 100 1 219 1 306 1 187 1 206 1 243 1 138 1 
260 3 19 3 39 3 117 3 285 1 243 1 94 1 42 3 
325 1 260 1 19 1 39 1 117 1 234 1 42 1 
174 1 325 1 260 1 19 1 39 1 117 1 66 1 42 1 94 1 
319 1 29 1 71 1 28 1 117 4 30 1 334 2 213 1 3 1 365 1 94 2 174 1 217 1 100 1 339 1 219 1 306 1 285 1 9 1 369 1 225 1 179 1 80 1 325 1 260 3 13 1 154 1 39 3 292 1 130 1 268 1 67 1 42 3 184 1 200 1 84 1 19 4 165 1 241 1 187 1 206 1 243 1 138 1 245 1 
260 1 19 2 39 2 117 2 285 1 276 1 286 1 243 1 42 1 
227 1 319 1 325 1 260 3 39 3 117 3 30 1 365 1 94 1 42 3 174 1 17 1 19 3 84 1 100 1 165 1 241 1 243 2 225 1 
260 2 39 2 72 1 197 1 117 2 94 1 42 2 174 1 19 2 243 1 
80 1 28 1 29 1 292 1 117 1 268 1 184 1 217 1 19 1 219 1 306 1 285 1 187 1 206 1 138 1 
80 1 28 1 29 1 117 1 268 1 184 1 217 1 19 1 219 1 306 1 285 1 187 1 138 1 115 1 149 1 
291 1 126 1 
325 1 260 1 19 1 39 1 165 1 198 1 117 1 42 1 
260 4 39 5 117 5 157 1 42 4 94 1 174 1 283 1 19 5 100 1 285 1 276 1 286 1 243 2 
325 1 260 2 19 2 39 2 198 1 117 2 234 1 42 2 
101 1 350 1 
101 1 350 1 
96 1 93 1 
96 1 93 1 
96 1 93 1 
101 1 52 1 350 1 
101 1 52 1 350 1 
194 1 101 1 350 1 
96 1 50 1 101 2 287 1 93 1 350 2 
101 1 52 1 350 1 
303 1 101 1 350 1 
303 1 101 1 350 1 
303 1 101 1 350 1 
246 1 1 2 47 3 269 2 350 2 17 1 4 1 323 1 148 2 6 2 101 2 7 2 241 2 166 1 275 1 287 1 167 1 224 1 225 2 
1 1 47 1 260 2 39 2 309 1 117 2 349 1 82 1 350 1 42 2 301 1 194 1 19 2 148 1 85 1 6 1 101 1 241 1 7 1 285 1 58 1 278 1 224 1 225 1 
208 1 63 1 281 1 
208 1 63 1 178 1 
108 1 172 1 281 2 63 3 131 1 178 1 
108 1 172 1 261 1 281 1 63 2 178 1 
108 1 172 2 281 1 63 2 178 1 
120 1 250 2 92 1 211 1 335 1 33 1 146 1 147 1 77 1 99 1 304 1 35 1 222 1 257 1 225 5 129 2 290 3 309 1 375 2 82 1 17 2 132 1 44 1 134 2 110 1 185 1 241 5 136 3 137 1 189 1 278 1 168 4 
209 5 120 1 250 6 92 6 211 1 335 2 33 1 146 2 147 2 77 3 99 2 304 3 368 1 222 1 255 1 257 3 370 1 225 9 129 6 259 1 290 8 81 1 309 4 17 5 132 3 376 5 44 2 134 6 20 1 110 3 241 9 274 1 136 9 137 3 168 7 
211 1 335 1 250 2 146 1 147 1 77 1 99 1 304 1 35 1 257 1 225 3 370 1 129 2 290 3 309 1 375 1 17 3 132 1 44 1 134 2 110 2 185 1 241 3 136 4 137 1 168 2 
211 1 250 4 335 1 146 1 147 1 77 2 99 1 304 2 368 1 35 1 255 1 257 2 225 4 370 1 129 4 290 5 81 1 309 2 375 2 17 4 132 2 44 1 134 4 110 3 185 1 241 4 136 7 137 2 168 3 
46 1 219 1 118 1 
294 1 219 1 
121 1 
219 1 268 1 
46 2 80 1 128 1 338 1 219 3 268 1 
80 1 219 1 268 1 
324 1 219 1 
90 1 11 3 345 1 360 1 199 1 130 7 158 2 122 1 235 1 132 1 312 1 242 2 59 4 369 3 257 1 333 1 358 1 
90 1 11 3 345 1 360 1 199 1 130 7 158 2 122 1 235 1 132 1 312 1 242 2 59 4 369 3 257 1 333 1 358 1 
90 1 11 3 345 1 360 1 199 1 372 1 130 7 158 2 122 1 235 1 132 1 312 1 242 2 59 4 369 3 257 1 333 1 358 1 
90 5 360 1 48 1 334 2 213 1 3 1 122 1 74 1 77 3 304 3 340 1 59 16 369 15 257 4 179 1 11 10 345 1 153 4 199 2 130 31 158 5 266 3 40 1 235 2 200 1 132 4 312 1 86 1 242 3 114 1 137 3 317 1 333 2 358 2 
90 1 48 1 360 1 249 1 334 4 213 2 3 2 305 1 59 5 257 1 369 4 179 2 11 4 345 1 199 1 130 9 158 3 235 1 200 2 132 1 312 1 242 2 333 1 358 1 
208 1 171 1 359 1 29 1 281 1 141 1 217 1 102 1 220 1 56 1 60 1 178 1 180 1 104 1 63 2 131 1 184 1 236 1 43 1 239 1 202 1 22 2 313 1 330 1 204 1 187 1 188 2 331 1 138 1 45 1 
208 1 359 1 29 1 281 1 141 1 217 1 102 1 220 1 56 1 60 1 178 1 180 1 104 1 63 2 156 1 131 1 270 1 184 1 236 1 43 2 22 3 313 1 330 1 204 1 187 1 26 1 188 3 331 1 138 1 45 1 
180 1 208 1 29 1 281 1 63 2 141 1 131 1 270 1 184 1 217 1 43 2 102 1 313 1 22 2 330 1 204 1 187 1 188 2 26 1 56 1 331 1 138 1 60 1 178 1 45 1 
29 1 28 1 139 1 217 1 220 1 219 1 56 2 57 1 62 1 156 1 159 1 268 1 184 1 236 1 295 1 22 1 330 2 204 2 187 1 188 1 315 1 138 1 45 2 
208 1 171 1 359 1 29 1 281 1 217 1 102 1 220 1 56 1 178 1 104 1 63 2 131 1 184 1 236 1 202 1 22 1 313 1 330 1 204 1 187 1 26 1 188 1 331 1 138 1 45 1 
49 1 
89 2 247 1 299 4 92 6 335 1 145 2 147 1 98 2 99 1 5 1 54 1 344 1 348 1 265 1 159 1 268 1 17 2 19 1 110 2 164 2 165 1 276 1 314 1 315 1 319 1 28 2 29 1 280 1 117 1 30 1 120 1 73 1 211 1 320 1 212 2 33 3 365 1 217 1 219 1 289 1 225 5 129 2 325 1 290 2 39 1 293 2 374 1 184 2 44 1 241 5 136 2 187 2 332 1 138 2 377 2 
247 1 319 1 299 2 280 1 117 1 30 1 73 1 320 1 92 2 33 1 365 1 288 1 225 3 325 1 39 1 293 1 348 1 265 1 19 1 165 1 241 3 276 1 
247 1 319 1 299 3 280 1 117 1 30 1 73 1 92 1 320 1 211 1 145 1 33 1 365 1 288 1 225 3 325 1 39 1 348 1 265 1 17 1 19 1 165 1 241 3 276 1 
247 1 319 1 299 3 280 1 117 1 30 1 73 1 320 1 92 2 211 1 33 1 145 1 365 1 288 1 225 3 325 1 39 1 293 1 348 1 265 1 17 1 19 1 165 1 241 3 276 1 377 1 
89 2 247 1 299 6 140 1 92 7 145 4 147 1 98 2 99 1 54 1 348 1 265 1 106 1 17 5 19 1 110 2 165 1 164 2 276 1 170 1 319 1 280 1 30 1 117 1 120 1 73 1 320 1 211 5 212 2 33 3 365 1 34 1 221 1 288 1 225 5 129 1 325 1 290 1 39 1 293 4 374 1 44 1 241 5 377 4 
89 2 247 1 299 4 92 4 145 2 147 1 98 2 99 1 54 1 348 1 265 1 17 2 19 1 110 2 165 1 164 2 276 1 319 1 280 1 30 1 117 1 120 1 73 1 320 1 211 1 212 2 33 2 365 1 289 1 225 4 129 1 325 1 290 1 39 1 293 2 374 1 44 1 241 4 136 2 377 2 
89 2 247 1 319 1 299 4 280 1 117 1 30 1 140 1 120 1 73 1 211 1 92 4 320 1 212 2 145 2 33 2 365 1 147 1 98 2 99 1 54 1 221 1 225 4 129 1 325 1 290 1 39 1 293 2 348 1 374 1 265 1 106 1 17 1 44 1 19 1 110 2 164 2 165 1 241 4 276 1 377 2 
89 2 247 1 319 1 299 4 280 1 117 1 30 1 140 1 120 1 73 1 211 1 92 4 320 1 212 2 145 2 33 2 365 1 147 1 98 2 99 1 54 1 221 1 225 4 129 1 325 1 290 1 39 1 293 2 348 1 374 1 265 1 106 1 17 1 44 1 19 1 110 2 164 2 165 1 241 4 276 1 377 2 
89 2 247 1 319 1 361 2 299 4 280 1 117 1 30 1 120 1 73 1 211 1 92 4 320 1 212 2 145 2 33 2 365 1 147 1 99 1 10 2 225 4 258 1 129 1 325 1 290 1 39 1 293 2 348 1 371 1 374 1 265 1 106 1 17 1 44 1 19 1 165 1 241 4 136 2 276 1 190 1 377 2 
89 2 247 1 319 1 299 5 280 1 117 1 30 1 120 1 140 1 73 1 211 1 320 1 92 5 212 2 33 2 145 3 365 1 34 1 147 1 98 2 99 1 54 1 221 1 225 4 129 1 325 1 290 1 39 1 293 3 348 1 374 1 265 1 106 1 17 1 44 1 19 1 110 2 164 2 165 1 241 4 276 1 377 3 
89 2 247 1 319 1 299 5 280 1 117 1 30 1 120 1 140 1 73 1 211 1 320 1 92 5 212 2 33 2 145 3 365 1 34 1 147 1 98 2 99 1 54 1 221 1 225 4 129 1 325 1 290 1 39 1 293 3 348 1 374 1 265 1 106 1 17 1 44 1 19 1 110 2 164 2 165 1 241 4 276 1 377 3 
89 2 247 1 299 4 92 4 145 2 147 1 99 1 10 2 348 1 265 1 17 1 19 1 165 1 276 1 319 1 361 2 280 1 30 1 117 1 120 1 73 1 320 1 211 1 212 2 33 2 365 1 289 1 225 4 129 1 325 1 290 1 39 1 293 2 374 1 44 1 241 4 136 2 190 1 377 2 
126 1 118 1 
90 1 72 4 334 4 213 2 3 2 74 1 124 1 77 2 218 1 304 2 339 2 285 1 59 8 369 6 257 2 179 2 11 2 195 1 153 3 154 1 155 1 197 11 263 11 130 14 158 1 266 3 200 2 132 1 18 1 137 1 317 1 245 1 297 1 
29 1 28 1 72 1 117 2 364 1 334 2 213 1 3 1 300 1 217 1 100 1 218 1 339 1 219 1 306 1 285 1 59 1 369 1 80 1 179 1 195 1 260 1 154 1 39 1 292 1 130 2 264 1 268 1 42 1 184 1 200 1 19 2 187 1 206 1 138 1 243 1 245 1 378 1 
90 4 334 6 3 3 100 1 304 2 339 3 8 1 306 2 9 2 59 10 257 3 11 8 345 1 195 1 260 1 154 3 197 7 263 7 158 4 16 1 268 2 200 3 19 3 312 1 273 2 26 1 206 2 358 1 360 1 28 1 29 2 72 7 173 1 117 3 213 3 217 2 77 2 218 1 219 2 285 2 223 2 369 10 179 3 80 2 39 1 292 2 130 20 231 2 235 1 42 1 184 3 132 3 133 2 242 1 187 3 137 2 138 3 243 1 245 1 
298 1 29 2 28 2 117 1 334 2 213 1 3 1 217 2 218 1 126 1 339 1 253 1 219 3 59 1 369 1 179 1 61 1 260 1 230 2 39 1 154 1 346 1 65 1 130 2 159 1 268 2 42 1 184 7 200 1 239 1 19 1 187 8 26 1 315 1 243 1 138 8 244 1 245 1 207 1 
72 1 117 1 334 2 213 1 3 1 94 1 174 1 77 1 304 1 339 1 59 1 257 1 369 2 179 1 11 1 195 1 260 1 154 1 39 1 197 1 262 1 263 1 130 3 158 1 42 1 200 1 132 1 19 1 137 1 
126 1 
126 1 
126 1 
179 1 11 1 90 1 298 1 154 1 72 1 197 1 263 1 130 2 334 2 3 1 213 1 200 1 304 1 339 1 240 1 59 2 257 1 
179 1 11 1 298 1 154 1 72 1 197 1 263 1 130 2 158 1 334 2 210 1 3 1 213 1 200 1 132 1 339 1 137 1 369 2 
179 1 11 2 90 1 298 1 154 1 72 2 197 2 263 2 130 4 158 1 334 2 3 1 213 1 200 1 132 1 77 1 304 1 339 1 137 1 59 2 369 2 257 1 
179 1 11 2 90 1 154 1 72 2 197 2 263 2 130 4 158 1 334 2 3 1 213 1 200 1 132 1 77 1 304 1 339 1 137 1 59 2 369 2 257 1 
29 1 28 1 117 1 334 2 3 1 213 1 217 1 218 1 339 1 219 1 306 1 285 1 59 1 9 1 369 1 80 1 179 1 154 1 292 1 130 2 268 1 184 1 200 1 19 1 187 1 206 1 138 1 245 1 
29 1 28 1 117 1 334 2 3 1 213 1 217 1 218 1 339 1 219 1 306 1 285 1 59 1 149 1 369 1 80 1 179 1 15 1 154 1 130 2 268 1 184 1 200 1 19 1 187 1 138 1 115 1 245 1 
90 1 72 2 334 2 213 1 3 1 77 1 304 1 339 1 59 2 257 1 369 2 179 1 11 2 195 1 154 1 197 2 263 2 130 4 158 1 200 1 132 1 137 1 
90 1 29 1 72 2 117 1 334 2 3 1 213 1 217 1 77 1 304 1 339 1 219 1 306 1 59 2 9 1 223 1 369 2 257 1 80 1 179 1 11 2 154 1 197 2 292 1 263 2 130 4 158 1 268 1 184 1 200 1 132 1 239 1 19 1 187 1 137 1 206 1 138 1 
90 1 72 1 117 1 334 2 213 1 3 1 94 1 174 1 77 1 304 1 339 1 59 2 369 1 257 1 179 1 11 1 195 1 260 1 154 1 39 1 197 1 263 1 130 3 42 1 200 1 132 1 19 1 109 1 137 1 
90 3 27 1 248 1 249 1 334 4 213 2 3 2 74 1 76 2 53 2 97 1 125 1 77 3 304 3 59 9 369 10 257 3 179 2 11 6 153 2 130 19 158 3 266 1 200 2 132 3 163 1 25 1 137 3 88 1 317 1 
90 2 27 2 48 2 31 1 249 1 334 6 213 3 3 3 76 1 53 4 216 1 97 1 125 2 77 3 304 3 59 14 369 12 257 3 179 3 127 1 11 4 152 1 153 2 326 1 130 26 158 2 266 2 200 3 132 2 163 1 24 1 137 2 88 1 317 2 
90 4 48 1 249 1 334 6 3 3 53 4 97 1 302 1 304 4 59 20 257 5 11 8 345 1 152 1 153 4 158 4 266 3 200 3 312 1 163 1 24 1 25 1 317 3 358 1 27 2 360 1 31 1 213 3 74 1 216 1 76 1 125 1 77 4 369 21 179 3 127 1 326 1 130 41 235 1 132 5 242 1 137 4 88 1 
90 3 27 2 360 1 48 2 31 1 249 1 334 8 213 4 3 4 74 1 76 1 216 1 53 4 97 1 125 1 77 4 302 1 304 4 59 20 369 18 257 5 127 1 179 4 11 7 345 1 152 1 153 4 326 1 130 38 158 4 266 3 235 1 200 4 132 4 312 1 163 1 242 1 24 1 25 1 137 3 88 1 317 3 358 1 
90 8 27 1 360 1 48 1 31 1 249 1 334 4 213 2 3 2 74 2 76 1 216 1 53 4 97 1 125 1 77 7 304 7 59 27 369 25 257 8 127 1 179 2 11 15 345 1 152 1 153 4 326 1 130 52 158 7 266 4 235 1 200 2 132 8 312 1 163 1 242 1 24 1 137 7 88 1 297 2 317 2 358 1 
0 1 1 1 323 1 148 1 101 1 6 1 7 1 275 1 287 1 350 1 
194 1 349 1 
1 1 148 1 101 1 6 1 7 1 373 1 103 1 350 1 123 1 
246 1 1 1 47 2 269 1 350 1 17 1 4 1 323 1 148 1 6 1 101 1 241 1 7 1 166 1 275 1 287 1 224 1 225 1 
246 1 1 1 47 2 269 1 350 1 17 1 4 1 323 1 148 1 6 1 101 1 241 1 7 1 166 1 275 1 287 1 224 1 225 1 
246 1 1 1 47 2 269 1 350 1 17 1 4 1 323 1 148 1 6 1 101 1 241 1 7 1 166 1 275 1 287 1 224 1 225 1 
50 1 52 1 232 1 
50 1 52 1 232 1 
303 1 252 1 
303 1 50 1 252 1 
301 1 85 1 
1 1 47 1 117 2 301 1 148 1 194 1 101 1 6 1 7 1 285 1 58 1 225 1 260 2 39 2 309 1 82 1 349 1 269 1 350 1 42 2 19 2 85 1 241 1 166 1 278 1 191 1 168 1 
52 1 232 1 
303 1 50 1 252 1 
29 1 117 2 32 1 334 2 3 1 213 1 217 1 218 1 339 1 219 1 59 1 369 1 179 1 61 1 195 1 230 2 154 1 39 2 181 1 65 1 130 2 268 1 233 1 160 1 161 1 184 2 200 1 19 2 187 2 138 2 245 1 
208 1 29 1 359 1 281 1 63 2 131 1 75 1 184 2 217 1 239 1 111 1 102 1 187 2 26 1 331 1 138 2 178 1 45 1 308 1 
208 1 359 1 29 1 281 1 63 2 131 1 184 1 282 1 217 1 111 1 102 1 187 1 26 1 331 1 138 1 178 1 45 1 
29 1 28 1 64 1 159 1 268 1 75 1 184 1 217 1 295 1 219 1 187 1 315 1 138 1 45 1 
208 1 29 1 359 1 281 1 63 2 131 1 75 1 184 1 217 1 111 1 102 1 187 1 26 1 331 1 138 1 178 1 45 1 308 1 
37 1 
17 1 129 1 367 1 290 1 118 1 211 1 183 1 
129 1 290 1 120 1 211 1 92 1 33 1 17 2 147 1 98 1 44 1 99 1 110 1 54 1 164 1 241 1 136 1 225 1 
80 1 128 1 12 1 29 2 28 1 120 1 144 1 268 1 184 1 217 1 147 1 44 1 294 1 99 1 219 1 187 1 138 1 
169 1 120 2 31 1 335 1 92 1 250 5 211 2 33 1 366 1 216 1 147 2 77 2 99 2 5 1 304 2 257 2 225 1 127 1 151 1 129 5 290 8 153 1 326 1 266 1 17 5 44 2 132 2 134 5 110 3 241 1 136 6 24 1 137 2 357 2 317 1 
117 1 120 1 94 1 366 1 147 1 99 1 221 1 257 2 225 1 129 2 38 1 290 2 260 1 39 1 67 1 235 1 42 1 44 1 132 1 19 1 312 1 70 1 241 1 357 2 316 1 358 1 
129 1 290 1 120 1 211 1 183 1 17 1 367 1 147 1 44 1 99 1 
129 5 290 5 250 5 366 1 17 5 77 2 132 2 134 5 304 2 110 5 273 1 136 10 137 2 357 2 257 2 
17 1 241 1 211 1 92 1 33 1 225 1 
29 1 28 2 120 1 335 2 92 4 33 2 217 1 147 2 99 2 5 2 219 1 344 1 370 1 225 3 129 2 290 2 159 1 41 1 268 1 184 4 238 1 44 2 353 2 112 1 241 3 187 4 332 1 315 1 138 4 
28 1 29 1 117 3 334 2 213 1 3 1 94 2 217 1 339 1 219 1 306 1 285 1 9 1 369 1 179 1 80 1 260 2 13 1 39 2 154 1 292 1 130 1 268 1 67 1 42 2 184 1 200 1 19 3 187 1 206 1 138 1 245 1 
129 2 290 1 120 1 250 2 335 1 211 2 17 4 147 1 44 1 134 2 99 1 110 2 5 1 242 1 136 4 
352 1 1 1 7 1 
352 1 1 1 7 1 
1 1 323 1 135 1 85 1 7 1 
352 1 1 1 7 1 
1 1 21 1 7 1 
1 1 21 1 7 1 
1 1 21 1 7 1 
1 1 7 1 
101 1 350 1 
179 2 90 1 11 3 345 1 48 1 360 1 130 8 158 2 334 4 3 2 213 2 235 1 200 2 132 1 312 1 242 1 59 4 257 1 369 4 358 1 
11 2 345 1 360 1 118 1 130 6 158 2 235 1 132 1 312 1 242 1 59 3 369 3 257 1 358 1 
179 1 11 2 90 1 116 1 130 4 158 1 334 2 3 1 213 1 200 1 132 1 77 1 304 1 137 1 59 2 369 2 257 1 
90 1 11 2 153 2 130 7 158 1 266 1 74 1 132 1 77 1 304 1 137 1 59 3 317 1 369 4 257 1 
90 4 360 1 48 2 51 1 334 4 3 2 213 2 74 1 77 2 304 2 59 11 257 3 369 12 179 2 11 9 345 1 153 2 155 1 130 23 158 5 266 2 235 2 200 2 132 3 312 1 242 1 137 2 297 1 358 2 
153 1 130 1 369 1 
130 1 266 1 59 1 
179 1 90 1 11 3 116 1 130 6 158 2 334 2 213 1 3 1 200 1 77 1 132 1 304 1 273 1 137 1 59 3 369 3 257 1 
90 1 31 1 249 1 334 2 213 1 3 1 216 1 77 2 304 2 59 6 369 6 257 2 179 1 127 1 11 2 153 1 326 1 130 12 158 1 266 1 200 1 132 2 24 1 137 2 317 1 
90 1 11 2 132 1 312 1 130 6 158 1 59 3 235 1 369 3 257 1 358 1 
179 1 90 1 11 2 345 1 48 1 360 1 51 1 130 3 158 1 334 2 3 1 213 1 235 1 200 1 59 1 369 2 358 1 
179 1 11 5 90 2 130 10 158 3 249 1 334 2 213 1 3 1 235 2 200 1 132 2 312 1 70 1 59 5 369 5 257 2 358 2 
179 1 90 1 11 1 130 2 249 1 334 2 3 1 213 1 200 1 304 1 59 2 257 1 
179 1 11 2 90 1 130 4 158 1 249 1 334 2 3 1 213 1 200 1 132 1 77 1 304 1 137 1 59 2 369 2 257 1 
179 3 11 2 90 1 48 1 51 1 130 3 158 1 249 1 334 6 3 3 213 3 235 1 200 3 25 1 59 1 369 2 358 1 
90 5 116 1 360 1 48 2 51 1 249 1 334 10 213 5 3 5 74 1 77 3 304 3 340 1 59 16 369 18 257 5 179 5 11 12 345 1 153 4 130 34 158 7 266 3 40 1 235 3 200 5 132 5 312 2 86 1 242 1 25 1 137 3 317 1 358 3 
360 1 249 1 334 2 213 1 3 1 216 1 59 4 257 1 369 4 179 1 11 2 345 1 153 1 130 8 158 2 266 1 235 1 200 1 132 1 312 1 242 1 317 1 358 1 
90 1 116 1 360 1 249 1 334 4 213 2 3 2 74 1 216 1 77 1 304 1 59 6 369 5 257 2 179 2 11 3 345 1 153 2 130 11 158 2 266 1 235 1 200 2 132 1 312 1 242 1 317 1 358 1 
90 1 116 1 360 1 48 1 31 1 249 1 334 6 213 3 3 3 216 1 77 2 304 2 59 9 369 10 257 3 179 3 127 1 11 4 345 1 153 1 326 1 130 19 158 3 266 1 235 1 200 3 132 3 312 1 242 1 24 1 137 2 317 1 358 1 
90 2 116 1 360 1 48 1 31 1 249 1 334 6 213 3 3 3 216 1 77 2 304 2 59 10 369 7 257 3 179 3 127 1 11 4 345 1 153 1 326 1 130 17 158 2 266 1 235 1 200 3 132 2 312 1 242 1 24 1 137 1 317 1 358 1 
360 1 249 1 334 2 213 1 3 1 216 1 59 4 257 1 369 4 179 1 11 2 345 1 153 1 130 8 158 2 266 1 235 1 200 1 132 1 312 1 242 1 317 1 358 1 
90 1 31 1 249 1 334 2 213 1 3 1 216 1 77 2 304 2 59 6 369 6 257 2 179 1 127 1 11 1 153 1 326 1 130 12 266 1 200 1 132 2 24 1 137 2 317 1 
90 2 116 1 360 1 48 2 31 1 249 1 334 8 213 4 3 4 216 1 77 2 304 2 59 10 369 8 257 3 179 4 127 1 11 5 345 1 153 1 326 1 130 18 158 3 266 1 235 1 200 4 132 2 312 1 242 1 24 1 137 1 317 1 358 1 
90 3 48 2 31 1 249 1 334 8 213 4 3 4 216 1 77 3 304 3 59 9 369 7 257 3 179 4 127 1 11 6 153 1 326 1 130 16 158 3 266 1 200 4 132 2 24 1 25 1 137 2 317 1 
11 6 90 3 345 2 360 1 130 7 158 3 235 3 132 1 312 1 59 3 369 4 257 1 358 3 
90 1 360 1 48 2 31 1 249 1 334 8 213 4 3 4 216 1 77 2 304 2 59 10 369 8 257 3 179 4 127 1 11 4 345 1 153 1 326 1 130 18 158 3 266 1 235 1 200 4 132 2 312 1 242 1 24 1 25 1 137 1 317 1 358 1 
19 1 39 1 117 1 342 1 285 1 276 1 286 1 
39 1 91 1 117 1 214 1 162 1 201 1 19 1 203 1 342 1 285 1 286 1 276 1 
184 1 217 1 29 1 28 1 219 1 118 1 187 1 159 1 315 1 268 1 138 1 
80 1 260 1 29 1 39 1 28 1 292 1 117 2 268 1 42 1 184 1 217 1 19 2 219 1 306 1 285 1 187 1 243 1 138 1 
29 1 117 2 30 1 142 1 217 1 219 3 306 1 285 1 80 2 324 1 325 1 260 2 39 2 292 1 268 2 42 1 184 1 19 2 353 1 165 1 187 1 138 1 243 1 
29 1 117 2 30 1 142 1 363 1 217 1 219 3 306 1 285 1 149 1 80 2 324 1 325 1 260 2 39 2 268 2 42 1 184 2 19 2 353 1 165 1 187 2 138 2 243 1 
80 1 46 1 324 1 319 1 28 1 29 1 142 1 363 1 211 1 182 1 92 1 268 1 17 1 184 3 217 1 294 1 353 1 241 2 219 4 187 3 87 1 138 3 225 2 
80 1 46 1 324 1 319 1 28 1 29 1 142 1 363 1 211 1 92 1 268 1 17 1 184 3 322 1 217 1 294 1 353 1 241 2 219 4 187 3 138 3 225 2 
184 1 217 1 29 1 346 1 187 1 138 1 
128 1 80 1 230 1 28 2 29 3 346 1 65 1 310 1 268 2 68 1 184 6 217 2 239 1 253 1 219 3 307 1 187 7 26 1 138 7 244 1 207 1 
360 1 29 1 72 1 117 2 334 4 213 2 3 2 217 1 339 2 219 1 306 1 285 2 59 3 9 1 223 1 369 3 257 1 80 1 179 2 11 2 345 1 195 1 260 1 154 2 39 1 197 1 292 1 263 1 130 6 158 2 268 1 235 1 42 1 160 1 184 1 200 2 132 1 239 1 133 1 19 2 312 1 242 1 187 1 206 1 243 1 138 1 358 1 
46 1 319 1 28 1 120 2 211 1 92 2 33 1 367 1 321 1 147 2 322 1 99 2 341 1 219 2 256 1 225 3 129 1 290 1 183 1 17 1 184 1 44 2 294 1 112 1 241 3 187 1 138 1 168 1 
46 1 128 1 80 1 29 2 346 1 144 1 268 1 121 1 184 1 217 1 219 1 187 1 138 1 
29 1 28 1 119 1 363 1 159 1 268 1 184 4 217 1 239 1 219 1 187 4 315 1 138 4 
226 1 80 1 29 2 347 1 310 1 16 1 268 1 68 1 184 2 217 1 353 1 219 1 187 2 138 2 
184 1 217 1 208 1 29 1 28 1 63 1 187 1 331 1 138 1 178 1 
29 1 65 1 32 1 268 1 184 2 217 1 239 1 219 1 187 2 26 1 138 2 
28 1 29 2 119 1 65 1 159 1 268 2 184 4 217 2 239 1 353 1 219 3 187 5 315 1 138 5 244 1 207 1 
28 1 29 2 119 1 65 1 159 1 268 2 215 1 184 4 217 2 239 1 353 1 219 3 187 5 315 1 138 5 244 1 
80 1 260 1 29 1 39 1 28 1 117 2 268 1 42 1 184 1 217 1 19 2 219 1 306 1 285 1 187 1 243 1 138 1 149 1 
128 1 80 1 29 2 310 1 268 1 68 1 184 1 217 1 353 1 219 1 307 1 187 1 138 1 
150 1 161 1 228 1 19 1 39 1 181 1 117 1 233 1 327 1 
83 1 150 1 318 1 
328 1 150 1 228 1 285 1 327 1 
150 1 319 1 325 1 228 2 30 1 211 1 327 2 365 1 17 1 83 1 328 2 84 1 165 1 241 2 254 1 285 1 318 1 168 1 225 2 
180 1 118 1 141 1 60 1 
180 1 236 1 22 1 220 1 141 1 188 1 60 1 
204 1 330 1 188 1 
180 1 171 1 141 1 143 1 69 1 236 1 329 2 220 1 22 3 188 3 343 1 60 1 
180 1 236 1 43 1 22 2 220 1 141 1 296 1 188 2 60 1 
208 1 171 1 281 1 63 1 141 1 192 1 311 1 236 1 220 1 22 1 188 1 
236 1 171 1 22 1 220 1 141 1 188 1 60 1 
180 1 236 1 171 1 22 1 220 1 188 1 60 2 
171 1 196 1 141 1 236 2 284 1 220 2 22 2 23 1 188 2 60 1 
180 1 171 1 141 2 311 1 236 1 43 2 272 1 220 1 22 3 186 1 355 1 188 3 60 1 
180 1 208 1 171 1 14 1 63 2 281 1 141 1 131 1 236 1 43 1 220 1 22 2 188 2 60 1 178 1 
180 1 171 1 141 2 311 1 236 2 43 2 272 1 220 2 22 4 188 4 296 1 60 1 177 1 
180 1 236 1 171 1 22 1 220 1 141 1 188 1 60 1 
180 2 141 3 143 1 311 1 237 1 236 1 43 2 329 1 272 1 22 4 220 1 343 1 188 4 60 2 
180 1 171 1 141 1 193 1 236 1 251 1 43 1 337 1 220 1 22 2 188 2 60 1 
180 1 171 1 279 1 141 1 143 2 236 1 329 2 220 1 22 3 343 1 188 3 60 1 
95 1 141 2 205 2 354 1 
236 1 78 1 171 1 22 1 220 1 188 1 
180 1 236 1 43 1 171 1 22 2 220 1 141 1 355 1 188 2 60 1 
176 1 
180 1 236 1 171 1 22 1 220 1 141 1 188 1 60 1 
180 1 236 1 43 1 171 1 329 1 22 3 220 1 141 1 355 1 188 3 60 1 
237 1 272 1 141 1 311 1 
141 1 60 1 

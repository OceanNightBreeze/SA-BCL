#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) (15,100) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (15,100) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) (15,100) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (1,9,143,277) (1,9,143,277) (1,9,143,277) 324 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
96 1 73 1 74 1 
96 1 229 1 217 2 
245 1 232 2 259 1 55 2 156 2 154 2 125 2 7 2 
204 1 245 1 55 2 4 2 7 3 215 1 115 1 300 1 259 1 181 2 118 1 222 1 66 1 183 1 154 2 224 1 265 1 188 1 232 3 267 2 156 2 123 2 31 1 268 1 317 1 269 1 124 1 319 1 125 2 130 1 84 1 39 1 238 1 89 1 46 1 200 1 139 2 
53 1 245 1 232 1 55 1 156 1 210 1 154 1 187 1 125 1 7 1 
96 1 308 1 73 1 141 1 53 1 232 1 101 1 55 1 7 1 12 1 150 1 87 1 285 1 227 1 
96 1 73 1 141 1 53 1 232 1 101 1 55 1 156 1 125 1 7 1 150 1 87 2 154 1 285 1 227 2 
326 1 329 1 87 1 275 1 227 1 
96 1 73 1 326 1 289 1 87 2 275 1 8 1 227 2 
87 1 275 1 227 1 
53 1 245 1 232 1 55 1 210 1 156 1 125 1 7 1 14 1 326 1 87 1 154 1 187 1 227 1 
96 1 
96 1 242 1 73 1 326 1 289 1 87 2 275 1 227 2 
96 1 73 1 54 1 25 1 289 1 104 2 290 1 211 1 148 1 108 1 274 2 275 2 212 2 320 1 40 1 326 2 87 5 171 1 227 5 
74 1 259 1 
232 2 55 2 156 1 125 1 7 2 255 1 259 2 154 1 172 1 
92 1 126 1 161 1 
204 1 232 1 123 1 317 1 4 1 272 1 319 1 7 1 130 1 39 1 215 1 259 1 181 1 66 1 224 1 265 1 
52 1 232 3 259 1 55 3 156 3 154 1 125 3 7 3 
53 1 232 1 55 1 156 1 187 1 125 1 7 1 
53 1 255 1 232 1 55 1 156 1 154 1 125 1 7 1 172 1 
204 1 52 1 141 1 53 1 245 1 101 1 55 3 4 1 7 4 215 1 253 1 300 1 255 1 150 1 259 1 181 1 118 1 222 1 66 1 183 1 224 1 223 1 154 2 265 1 227 1 188 1 122 1 232 4 267 1 156 3 123 1 317 1 124 1 319 1 125 3 130 1 39 1 238 1 87 1 89 1 46 1 200 1 139 2 285 1 
12 1 52 1 232 2 259 1 55 2 56 1 156 1 125 1 7 2 
96 1 53 1 52 2 141 1 122 1 232 3 101 1 55 3 156 3 125 3 7 3 253 1 255 1 134 1 150 1 87 1 154 1 227 1 285 1 
52 1 232 2 55 2 156 2 125 2 7 2 161 1 255 1 154 1 92 1 
204 1 232 1 123 1 317 1 4 1 319 1 7 1 130 1 39 1 215 1 259 1 181 1 66 1 224 1 265 1 
204 1 232 1 102 1 123 1 317 1 4 1 319 1 7 1 162 1 130 1 215 1 259 1 181 1 66 1 265 1 
120 1 233 1 267 4 145 1 31 2 124 1 33 1 126 2 161 2 36 1 128 1 281 1 132 1 300 1 220 1 118 2 222 1 89 1 46 1 198 1 92 2 139 2 200 1 201 1 
243 1 53 1 150 1 232 1 55 1 156 1 125 1 7 1 
204 1 52 1 232 2 55 1 156 1 123 1 317 1 4 1 319 1 125 1 7 2 161 1 130 1 215 1 39 1 253 1 181 1 66 1 224 1 265 1 
52 2 232 5 55 5 56 1 156 4 125 4 7 5 12 1 253 1 255 1 259 1 303 1 154 1 21 1 
243 1 53 1 232 2 55 2 156 2 187 1 125 2 7 2 
85 1 186 1 
85 1 186 1 
325 1 155 1 
325 1 155 1 
325 1 155 1 
85 1 185 1 186 1 
85 1 197 1 186 1 
85 2 133 1 325 1 191 1 155 1 186 2 
85 1 185 1 186 1 
85 1 185 1 186 1 
280 1 85 1 186 1 
280 1 85 1 186 1 
280 1 85 1 186 1 
96 1 191 1 75 1 157 2 146 3 276 2 297 1 165 2 85 2 216 2 239 1 65 1 87 2 283 1 90 2 186 2 137 1 138 1 227 2 
2 1 55 2 105 1 146 1 7 2 250 1 252 1 259 1 186 1 227 1 232 2 315 1 156 2 157 1 125 2 276 1 279 1 165 1 85 1 38 1 197 1 87 1 90 1 137 1 
202 1 23 1 59 1 
23 1 158 1 59 1 
202 2 23 3 313 1 106 1 158 1 194 1 
202 1 23 2 189 1 106 1 158 1 194 1 
202 1 23 2 106 1 158 1 194 2 
96 2 203 2 289 1 104 1 145 1 105 1 108 1 148 3 212 1 61 1 217 3 68 2 227 5 72 1 120 1 22 2 121 1 73 1 229 1 25 2 231 1 315 1 318 1 274 1 275 1 279 1 128 1 127 1 132 1 326 4 87 5 334 1 
96 5 98 1 289 1 104 2 290 1 145 3 105 4 108 1 148 8 212 2 61 3 10 5 217 9 68 6 227 9 72 2 120 3 22 6 73 1 229 3 25 6 190 1 234 1 274 2 275 6 128 3 278 1 127 1 132 3 326 7 329 5 87 9 240 1 170 1 334 2 
96 3 203 1 104 1 290 1 105 1 145 1 148 3 212 1 61 1 217 4 68 2 227 3 72 1 120 1 121 1 22 2 73 1 229 2 25 2 318 1 274 1 128 1 132 1 326 2 87 3 334 1 
96 4 203 2 104 1 290 1 105 2 145 2 148 5 212 1 61 2 217 7 68 4 227 4 72 1 120 2 22 4 121 1 73 1 229 3 25 4 190 1 234 1 318 1 274 1 128 2 132 2 326 3 87 4 240 1 334 1 
74 1 66 1 71 1 
66 1 291 1 
322 1 
204 1 66 1 
204 1 66 3 261 1 316 1 319 1 71 2 
204 1 66 1 319 1 
99 1 66 1 
205 2 233 2 267 7 145 1 31 4 30 1 270 1 128 1 163 1 149 1 254 1 151 1 118 3 88 1 198 3 199 1 264 1 
205 2 233 2 267 7 145 1 31 4 30 1 270 1 128 1 163 1 149 1 254 1 151 1 118 3 88 1 198 3 199 1 264 1 
287 1 205 2 233 2 267 7 145 1 30 1 31 4 270 1 128 1 163 1 149 1 254 1 151 1 118 3 88 1 198 3 199 1 264 1 
205 3 145 4 61 3 149 1 254 2 300 1 151 1 118 15 67 1 264 1 120 3 26 4 267 31 233 5 30 1 31 16 270 2 80 3 81 1 237 1 163 2 128 4 132 3 88 2 330 1 89 1 331 1 46 1 168 1 167 1 198 10 199 5 200 1 139 2 
205 2 145 1 300 2 254 1 151 1 118 4 264 1 267 9 233 3 193 1 31 5 30 1 270 1 128 1 163 1 89 2 88 1 330 1 45 1 46 2 198 4 199 1 200 2 139 4 
1 1 324 1 143 1 166 1 277 1 
1 1 100 1 143 1 166 1 277 1 
15 1 166 1 277 1 9 1 
1 1 100 1 143 1 166 1 277 1 
1 1 324 1 143 1 166 1 277 1 
219 1 
96 2 97 2 244 1 103 2 101 1 104 1 108 1 4 2 7 1 112 1 13 1 12 1 181 2 116 1 25 2 123 2 195 2 274 1 275 6 37 1 130 1 285 1 204 1 141 1 53 1 207 4 289 3 142 1 55 1 294 2 148 2 58 1 60 1 213 2 212 1 62 1 63 1 215 1 217 2 299 1 150 1 301 1 152 1 66 1 227 5 308 1 73 1 309 1 229 2 232 1 317 2 323 2 87 5 241 2 334 1 
242 1 141 1 53 1 101 1 207 2 55 1 289 1 58 1 7 1 112 1 213 1 12 1 299 1 150 1 116 1 227 3 308 1 309 1 232 1 275 2 87 3 285 1 
96 1 242 1 141 1 53 1 101 1 207 3 103 1 55 1 289 1 58 1 7 1 112 1 12 1 299 1 150 1 116 1 227 3 308 1 309 1 73 1 232 1 275 1 87 3 285 1 
242 1 96 1 141 1 53 1 101 1 207 3 103 1 289 1 55 1 58 1 7 1 112 1 213 1 12 1 299 1 150 1 116 1 227 3 308 1 309 1 73 1 232 1 275 2 323 1 87 3 285 1 
242 1 96 5 0 1 97 2 244 1 101 1 103 4 104 1 108 1 7 1 112 1 12 1 179 1 116 1 117 1 25 1 273 1 274 1 195 2 275 7 285 1 53 1 141 1 207 6 289 3 55 1 58 1 148 1 294 2 213 4 212 1 299 1 150 1 301 1 305 1 227 5 308 1 309 1 73 5 229 2 232 1 323 4 87 5 241 2 
97 2 96 2 244 1 101 1 103 2 104 1 108 1 7 1 112 1 12 1 116 1 25 1 274 1 195 2 275 4 285 1 53 1 141 1 207 4 55 1 289 2 58 1 148 1 294 2 212 1 213 2 299 1 217 2 301 1 150 1 152 1 227 4 308 1 309 1 73 1 229 2 232 1 323 2 87 4 241 2 
96 1 97 2 0 1 244 1 141 1 53 1 103 2 101 1 207 4 289 2 55 1 104 1 294 2 148 1 58 1 108 1 7 1 213 2 112 1 212 1 12 1 299 1 179 1 301 1 150 1 116 1 305 1 227 4 308 1 73 1 309 1 229 2 25 1 232 1 195 2 274 1 275 4 323 2 87 4 241 2 285 1 
96 1 97 2 0 1 244 1 141 1 53 1 103 2 101 1 207 4 289 2 55 1 104 1 294 2 148 1 58 1 108 1 7 1 213 2 112 1 212 1 12 1 299 1 179 1 301 1 150 1 116 1 305 1 227 4 308 1 73 1 309 1 229 2 25 1 232 1 195 2 274 1 275 4 323 2 87 4 241 2 285 1 
96 1 244 1 141 1 53 1 103 2 101 1 207 4 289 2 55 1 104 1 148 1 58 1 108 1 7 1 213 2 112 1 212 1 12 1 217 2 299 1 257 2 150 1 116 1 302 1 305 1 307 2 263 1 227 4 308 1 73 1 309 1 25 1 232 1 195 2 274 1 275 4 323 2 327 1 87 4 241 2 285 1 
96 1 97 2 0 1 244 1 141 1 53 1 101 1 207 5 103 3 289 2 55 1 104 1 294 2 148 1 108 1 58 1 7 1 212 1 112 1 213 3 12 1 179 1 299 1 301 1 150 1 116 1 117 1 305 1 227 4 308 1 73 1 309 1 229 2 25 1 232 1 195 2 274 1 275 5 323 3 87 4 241 2 285 1 
96 1 97 2 0 1 244 1 141 1 53 1 101 1 207 5 103 3 289 2 55 1 104 1 294 2 148 1 108 1 58 1 7 1 212 1 112 1 213 3 12 1 179 1 299 1 301 1 150 1 116 1 117 1 305 1 227 4 308 1 73 1 309 1 229 2 25 1 232 1 195 2 274 1 275 5 323 3 87 4 241 2 285 1 
96 1 244 1 141 1 53 1 103 2 101 1 207 4 289 2 55 1 104 1 148 1 58 1 108 1 7 1 213 2 112 1 212 1 12 1 217 2 299 1 257 2 150 1 152 1 116 1 302 1 307 2 227 4 308 1 73 1 309 1 25 1 232 1 195 2 274 1 275 4 323 2 87 4 241 2 285 1 
205 1 74 1 267 6 233 2 145 1 31 3 30 1 270 1 124 1 126 1 161 1 128 1 254 1 300 1 259 2 151 1 118 3 222 1 89 1 46 1 198 2 92 1 139 2 200 1 264 1 201 1 
145 2 177 1 61 2 115 1 300 2 259 1 118 6 222 1 306 1 188 1 120 1 228 1 26 3 314 1 233 1 267 14 31 8 124 2 80 3 126 11 161 11 35 1 128 1 132 2 89 2 331 1 168 1 46 2 198 2 199 1 92 4 200 2 139 4 
53 1 52 1 55 1 248 1 111 1 7 1 253 1 300 1 16 1 115 1 259 1 222 1 118 1 188 1 230 1 314 1 232 1 267 2 156 1 31 1 124 1 125 1 89 1 46 1 92 1 139 2 200 1 
5 1 4 3 249 2 178 1 7 3 253 1 254 1 115 1 259 2 181 3 118 10 183 2 264 1 265 2 188 1 120 2 267 20 29 2 123 3 30 1 31 10 270 1 271 1 124 3 125 1 126 7 128 3 130 2 39 2 132 2 135 1 46 3 198 8 199 4 200 3 139 6 52 1 204 2 205 1 55 1 145 3 147 2 61 2 215 2 300 3 151 1 222 3 66 2 224 2 232 3 314 1 233 4 156 1 317 1 319 2 161 7 89 3 333 2 92 7 
174 1 52 1 204 2 55 1 208 1 247 1 4 8 7 1 63 1 215 2 256 1 114 1 300 2 115 1 181 8 66 3 222 2 118 1 188 1 232 1 267 2 156 1 78 1 123 7 317 2 31 1 271 1 124 2 125 1 37 1 164 1 130 2 84 2 89 2 46 2 200 2 139 4 140 1 201 1 
55 1 145 1 7 1 61 1 255 1 300 1 17 1 222 1 118 2 154 1 120 1 314 1 232 1 233 1 267 3 156 1 31 1 124 1 125 1 126 1 161 1 128 1 132 1 89 1 46 1 198 1 92 1 200 1 139 2 
267 2 145 1 31 2 124 1 126 1 161 1 36 1 300 1 132 1 222 1 89 1 46 1 198 1 199 1 92 1 139 2 200 1 201 1 
120 1 233 1 267 2 124 1 126 1 161 1 128 1 281 1 300 1 222 1 89 1 118 2 46 1 198 1 92 1 139 2 200 1 201 1 
145 1 61 1 300 1 222 1 118 2 120 1 267 4 233 1 31 2 124 1 126 2 161 2 128 1 132 1 89 1 46 1 198 2 199 1 92 2 200 1 139 2 201 1 
208 1 267 2 145 1 31 2 124 1 126 1 161 1 36 1 300 1 132 1 222 1 89 1 46 1 198 1 199 1 92 1 139 2 200 1 
120 1 208 1 233 1 267 2 124 1 126 1 161 1 128 1 281 1 300 1 222 1 89 1 118 2 46 1 198 1 92 1 139 2 200 1 
208 1 145 1 61 1 300 1 222 1 118 2 120 1 267 4 233 1 31 2 124 1 126 2 161 2 128 1 132 1 89 1 46 1 198 2 199 1 92 2 200 1 139 2 
145 1 61 1 300 1 222 1 118 2 120 1 267 4 233 1 31 2 124 1 126 2 161 2 128 1 132 1 89 1 46 1 198 2 199 1 92 2 200 1 139 2 
204 1 4 1 7 1 215 1 115 1 300 1 259 1 181 1 66 1 222 1 118 1 183 1 224 1 265 1 188 1 232 1 267 2 123 1 31 1 317 1 124 1 319 1 130 1 39 1 89 1 46 1 139 2 200 1 
204 1 102 1 4 1 7 1 215 1 115 1 300 1 259 1 181 1 66 1 222 1 118 1 265 1 188 1 232 1 267 2 123 1 31 1 317 1 124 1 319 1 162 1 130 1 89 1 46 1 169 1 139 2 200 1 
145 1 61 1 300 1 222 1 118 2 120 1 314 1 267 4 233 1 31 2 124 1 126 2 161 2 128 1 132 1 89 1 46 1 198 2 199 1 92 2 200 1 139 2 
204 1 145 1 4 1 7 1 61 1 215 1 300 1 181 1 118 2 66 1 222 1 183 1 224 1 265 1 120 1 232 1 233 1 267 4 29 1 123 1 31 2 124 1 319 1 126 2 161 2 128 1 130 1 39 1 132 1 89 1 46 1 198 2 199 1 92 2 139 2 200 1 140 1 
55 1 145 1 7 1 61 1 255 1 300 1 118 1 222 1 154 1 120 1 314 1 232 1 267 3 156 1 31 2 124 1 125 1 126 1 161 1 128 1 132 1 89 1 44 1 46 1 198 1 199 1 92 1 200 1 139 2 
173 1 175 2 246 1 145 3 293 1 61 3 214 1 300 2 260 1 118 10 119 2 20 1 120 3 26 2 233 3 267 19 193 1 31 9 79 1 80 1 128 3 132 3 89 2 331 1 168 1 46 2 198 6 199 3 200 2 139 4 
49 1 173 2 175 4 246 2 3 1 145 3 293 1 61 3 300 3 180 1 260 1 118 12 119 1 262 1 19 1 20 1 120 2 26 2 233 2 267 26 193 1 31 14 80 2 128 2 196 1 132 3 330 2 89 3 46 3 168 2 198 4 199 2 200 3 139 6 
173 2 246 1 175 4 3 1 254 1 180 1 260 1 118 21 119 1 262 1 19 1 264 1 20 1 120 4 26 4 267 41 31 20 193 1 30 1 270 1 128 5 132 4 196 1 46 3 284 1 198 8 199 4 139 6 200 3 49 1 205 1 145 5 293 1 61 4 300 3 151 1 233 4 79 1 80 3 89 3 330 1 331 1 168 3 
49 1 173 2 205 1 175 4 246 1 3 1 145 5 293 1 61 4 254 1 300 4 180 1 151 1 260 1 118 18 119 1 262 1 19 1 264 1 20 1 120 3 26 4 233 4 267 38 30 1 193 1 31 20 270 1 79 1 80 3 128 4 196 1 132 4 330 2 89 4 331 1 284 1 168 3 46 4 198 7 199 3 200 4 139 8 
49 1 173 1 205 1 175 4 246 1 3 1 145 8 293 1 61 7 254 1 300 2 180 1 151 1 260 1 118 25 119 1 262 1 306 2 19 1 264 1 20 1 120 7 26 4 233 7 267 52 30 1 193 1 31 27 270 1 80 4 128 8 196 1 132 7 330 1 89 2 331 2 168 2 46 2 198 14 199 7 200 2 139 4 
165 1 85 1 191 1 75 1 283 1 157 1 90 1 186 1 91 1 276 1 
197 1 250 1 
50 1 165 1 85 1 76 1 157 1 90 1 186 1 110 1 276 1 
96 1 191 1 75 1 157 1 146 2 276 1 297 1 165 1 85 1 216 1 65 1 87 1 283 1 90 1 186 1 137 1 138 1 227 1 
96 1 191 1 75 1 157 1 146 2 276 1 297 1 165 1 85 1 216 1 65 1 87 1 283 1 90 1 186 1 137 1 138 1 227 1 
96 1 191 1 75 1 157 1 146 2 276 1 297 1 165 1 85 1 216 1 65 1 87 1 283 1 90 1 186 1 137 1 138 1 227 1 
133 1 206 1 185 1 
133 1 206 1 185 1 
280 1 321 1 
280 1 133 1 321 1 
2 1 38 1 
2 1 55 2 105 1 146 1 7 2 250 1 252 1 216 1 259 1 70 1 186 1 227 1 232 2 315 1 156 2 157 1 125 2 276 1 279 1 165 1 85 1 38 1 326 1 197 1 87 1 90 1 138 1 
206 1 185 1 
280 1 133 1 321 1 
204 1 174 1 55 2 247 1 4 2 7 2 215 1 300 1 115 1 64 1 181 2 66 1 222 1 221 1 118 1 18 1 188 1 24 1 314 1 232 2 267 2 123 2 31 1 124 1 130 1 84 2 89 1 46 1 48 1 139 2 200 1 
202 1 23 2 266 1 313 1 176 1 123 2 158 1 57 1 271 1 4 2 59 1 160 1 130 1 129 1 215 1 113 1 218 1 181 2 140 1 
202 1 23 2 266 1 313 1 176 1 123 1 158 1 107 1 57 1 271 1 4 1 59 1 160 1 130 1 215 1 113 1 181 1 
204 1 123 1 317 1 57 1 4 1 296 1 37 1 130 1 129 1 63 1 215 1 181 1 66 1 332 1 
202 1 23 2 266 1 313 1 176 1 123 1 158 1 57 1 271 1 4 1 59 1 160 1 130 1 129 1 215 1 113 1 218 1 181 1 
311 1 
96 1 73 1 54 1 25 1 40 1 74 1 148 1 
97 1 96 2 289 1 104 1 148 1 108 1 294 1 212 1 217 1 301 1 227 1 73 1 229 1 25 1 274 1 275 1 87 1 
96 8 99 2 104 4 108 4 4 3 6 1 181 3 182 2 261 1 184 2 22 6 120 2 25 8 123 3 274 4 275 5 34 2 128 2 130 4 131 1 40 1 132 2 47 2 136 1 140 1 285 2 54 1 204 3 289 3 144 1 291 3 145 2 148 9 147 2 60 1 212 4 61 2 215 3 217 12 66 10 68 6 304 1 225 2 71 2 227 5 73 2 229 6 317 1 319 3 235 2 86 2 87 5 334 2 95 2 
49 1 96 5 289 1 104 2 3 1 145 2 148 8 108 2 60 1 212 2 61 2 217 6 180 1 68 5 225 2 19 1 227 1 22 5 120 2 73 2 229 3 26 1 25 5 235 1 274 2 80 1 275 1 82 1 128 2 196 1 132 2 87 1 42 1 168 1 334 1 
53 1 245 1 55 1 104 1 210 1 145 1 108 1 148 2 7 1 212 1 14 1 254 1 179 1 154 1 225 2 187 1 227 1 25 1 232 1 156 1 270 1 235 1 274 1 125 1 128 1 328 1 87 1 
96 1 73 1 54 1 25 1 104 1 108 1 148 1 274 1 212 1 40 1 
22 5 96 5 120 2 229 5 25 5 145 2 147 1 148 5 235 1 61 2 128 2 132 2 217 10 68 5 225 2 
96 1 73 1 87 1 289 1 275 1 227 1 
51 1 204 1 142 1 289 2 144 2 104 2 290 1 108 1 4 4 148 2 60 2 212 2 13 1 63 1 215 1 181 4 66 1 227 3 25 2 312 1 123 4 317 2 274 2 275 4 37 1 130 1 131 1 87 3 334 2 
245 1 204 1 55 2 4 1 7 3 215 1 300 1 259 1 181 1 118 1 66 1 222 1 183 1 154 2 224 1 265 1 188 1 232 3 267 1 156 2 123 1 317 1 124 1 125 2 319 1 130 1 39 1 238 1 89 1 46 1 200 1 139 2 
22 2 96 4 73 2 229 2 205 1 25 2 104 1 108 1 148 1 274 1 60 1 212 1 217 4 68 2 334 1 
165 1 310 1 90 1 
165 1 2 1 283 1 90 1 335 1 
165 1 310 1 90 1 
165 1 310 1 90 1 
165 1 192 1 90 1 
165 1 192 1 90 1 
165 1 192 1 90 1 
165 1 90 1 
85 1 186 1 
205 1 267 8 233 2 145 1 31 4 30 1 270 1 128 1 300 2 254 1 151 1 118 4 89 2 330 1 46 2 198 3 199 1 139 4 200 2 264 1 
205 1 74 1 233 2 267 6 145 1 30 1 31 3 270 1 128 1 254 1 151 1 118 3 198 2 264 1 
120 1 233 1 267 4 145 1 31 2 128 1 61 1 300 1 132 1 118 2 89 1 46 1 198 2 69 1 199 1 139 2 200 1 
120 1 26 2 233 1 267 7 145 1 31 3 80 1 128 1 61 1 132 1 118 4 331 1 168 1 198 2 199 1 
205 1 145 3 177 1 61 2 254 2 300 2 151 1 118 12 306 1 264 1 120 2 26 2 267 23 233 5 30 1 31 11 270 2 80 2 159 1 128 3 132 2 330 2 89 2 331 1 46 2 198 9 199 4 139 4 200 2 
26 1 267 1 118 1 
267 1 31 1 80 1 
120 1 267 6 233 2 145 1 31 3 147 1 61 1 128 1 300 1 132 1 89 1 118 3 46 1 69 1 198 3 199 1 200 1 139 2 
49 1 120 2 26 1 233 1 267 12 3 1 145 2 31 6 193 1 80 1 128 2 61 2 132 2 300 1 196 1 180 1 89 1 118 6 46 1 168 1 198 2 199 1 19 1 139 2 200 1 
267 6 233 1 145 1 31 3 270 1 128 1 254 1 151 1 118 3 198 2 199 1 
233 1 267 3 31 1 30 1 270 1 159 1 254 1 300 1 118 2 330 1 89 1 46 1 198 2 199 1 139 2 200 1 264 1 
233 2 267 6 145 1 193 1 31 3 270 1 128 1 300 1 254 1 328 1 89 1 118 3 46 1 198 4 199 2 200 1 139 2 
267 2 145 1 193 1 31 2 300 1 132 1 89 1 46 1 198 1 199 1 139 2 200 1 
120 1 233 1 267 4 145 1 193 1 31 2 128 1 61 1 300 1 132 1 118 2 89 1 46 1 198 2 199 1 139 2 200 1 
267 3 233 1 193 1 31 1 270 1 79 1 159 1 300 3 254 1 330 1 118 2 89 3 46 3 198 2 199 1 139 6 200 3 
205 1 145 5 61 3 254 3 300 5 151 2 118 18 67 1 69 1 264 1 120 3 26 4 267 34 233 7 30 1 193 1 31 16 270 3 79 1 159 1 80 3 81 1 128 5 132 3 330 2 89 5 331 1 167 1 168 1 46 5 198 12 199 5 200 5 139 10 
205 1 145 1 300 1 254 1 151 1 118 4 264 1 26 1 267 8 233 2 193 1 31 4 30 1 270 1 80 1 128 1 196 1 89 1 168 1 46 1 198 2 200 1 139 2 
205 1 145 2 61 1 254 1 300 2 151 1 118 5 69 1 264 1 26 2 233 2 267 11 30 1 193 1 31 6 270 1 80 1 128 1 196 1 132 1 89 2 331 1 168 1 46 2 198 3 199 1 200 2 139 4 
49 1 205 1 3 1 145 3 61 2 254 1 300 3 180 1 151 1 118 10 69 1 19 1 264 1 120 2 26 1 267 19 233 3 30 1 193 1 31 9 270 1 80 1 128 3 196 1 132 2 89 3 330 1 168 1 46 3 198 4 199 1 200 3 139 6 
49 1 205 1 3 1 145 3 61 2 254 1 300 3 180 1 151 1 118 7 69 1 19 1 264 1 120 1 26 1 267 17 233 3 30 1 193 1 31 10 270 1 80 1 128 2 196 1 132 2 330 1 89 3 168 1 46 3 198 5 199 2 200 3 139 6 
205 1 145 1 300 1 254 1 151 1 118 4 264 1 26 1 267 8 233 2 193 1 31 4 30 1 270 1 80 1 128 1 196 1 89 1 168 1 46 1 198 2 200 1 139 2 
49 1 120 2 26 1 233 1 267 12 3 1 145 2 31 6 193 1 80 1 128 2 61 2 132 2 300 1 196 1 180 1 89 1 118 6 46 1 168 1 198 2 199 1 19 1 139 2 200 1 
49 1 205 1 3 1 145 3 61 2 254 1 300 4 180 1 151 1 118 8 69 1 19 1 264 1 120 1 26 1 267 18 233 3 30 1 193 1 31 10 270 1 80 1 128 2 196 1 132 2 89 4 330 2 168 1 46 4 198 5 199 2 200 4 139 8 
49 1 3 1 145 3 61 3 300 4 180 1 118 7 19 1 120 2 26 1 267 16 233 3 193 1 31 9 79 1 80 1 128 2 196 1 132 3 89 4 330 2 168 1 46 4 198 6 199 3 200 4 139 8 
267 7 233 3 145 1 30 2 31 3 270 3 128 1 254 3 151 1 118 4 198 6 199 3 264 1 
49 1 205 1 3 1 145 3 61 2 254 1 300 4 180 1 151 1 118 8 19 1 264 1 120 1 26 1 267 18 233 3 30 1 193 1 31 10 270 1 79 1 80 1 128 2 196 1 132 2 89 4 330 2 168 1 46 4 198 4 199 1 200 4 139 8 
12 1 232 1 259 1 55 1 153 1 56 1 7 1 
288 1 232 1 28 1 55 1 56 1 109 1 7 1 11 1 298 1 12 1 259 1 153 1 
130 1 63 1 215 1 204 1 74 1 181 1 66 1 123 1 317 1 4 1 37 1 
204 1 52 1 232 2 55 1 156 1 123 1 317 1 4 1 319 1 125 1 7 2 130 1 39 1 215 1 259 1 181 1 66 1 265 1 
52 1 204 2 141 1 53 1 99 1 55 2 144 1 4 1 7 2 215 1 150 1 259 1 181 1 66 3 182 1 265 1 232 2 156 1 123 1 125 2 319 2 130 1 39 1 
52 1 204 2 141 1 53 1 99 1 55 2 144 1 4 2 7 2 251 1 215 1 150 1 259 1 181 2 66 3 182 1 265 1 232 2 156 1 123 2 125 2 319 2 162 1 130 1 
96 1 73 1 99 1 204 1 144 1 123 3 291 1 317 1 32 1 4 3 319 1 275 1 251 1 236 1 130 1 215 1 87 2 181 3 182 1 66 4 71 1 285 1 227 2 
96 1 73 1 99 1 204 1 144 1 123 3 291 1 317 1 4 3 319 1 275 1 251 1 34 1 130 1 215 1 87 2 181 3 182 1 66 4 71 1 285 1 227 2 
130 1 164 1 215 1 181 1 123 1 4 1 
174 1 204 2 78 1 123 6 317 2 271 1 4 7 319 1 164 1 130 3 84 1 215 2 256 1 114 1 258 1 181 7 282 1 41 1 66 3 261 1 140 1 
204 1 52 1 205 1 55 1 145 1 4 1 249 1 7 2 215 1 254 1 300 2 259 2 151 1 181 1 118 3 66 1 222 2 183 1 224 1 264 1 265 1 314 1 232 2 267 6 233 2 156 1 29 1 123 1 31 3 30 1 270 1 124 2 319 1 125 1 126 1 161 1 128 1 130 1 39 1 89 2 46 2 198 2 48 1 92 1 139 4 200 2 140 1 
96 1 54 1 289 1 104 2 291 1 148 1 4 1 108 2 212 2 181 1 66 2 184 1 71 1 227 3 73 1 25 1 123 1 317 1 274 2 275 2 34 1 131 1 40 1 326 1 87 3 86 1 95 1 285 1 
204 1 123 2 4 2 319 1 164 1 130 2 215 1 181 2 66 2 261 1 304 1 71 1 140 1 
204 1 123 4 317 1 4 4 251 1 37 1 130 1 63 1 215 1 181 4 66 1 43 1 140 1 
204 1 27 1 144 1 123 2 4 2 295 1 319 1 130 2 215 1 258 1 181 2 282 1 135 1 66 1 
130 1 23 1 215 1 113 1 181 1 123 1 158 1 317 1 4 1 59 1 
174 1 204 1 123 2 4 2 271 1 130 1 215 1 64 1 181 2 66 1 140 1 
174 1 204 2 144 1 123 4 78 1 317 1 4 5 37 1 130 2 63 1 215 2 256 1 181 5 66 3 43 1 140 1 
174 1 204 2 77 1 144 1 123 4 317 1 4 5 37 1 130 2 63 1 215 2 256 1 181 5 66 3 43 1 140 1 
204 1 52 1 232 2 55 1 156 1 123 1 317 1 4 1 319 1 125 1 7 2 162 1 130 1 215 1 259 1 181 1 66 1 265 1 
204 1 144 1 123 1 4 1 319 1 130 2 215 1 258 1 181 1 282 1 41 1 66 1 261 1 
286 1 24 1 232 1 55 1 292 1 7 1 221 1 18 1 94 1 
209 1 292 1 93 1 
286 1 83 1 259 1 292 1 94 1 
96 1 286 2 73 1 53 1 141 1 122 1 101 1 209 1 292 1 83 2 150 1 326 1 259 1 87 2 93 1 285 1 226 1 227 2 94 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
142 1 246 1 278 1 149 1 309 4 40 4 74 1 111 1 151 1 331 3 12 2 25 2 209 1 97 1 53 7 191 1 55 1 129 9 130 1 170 1 79 9 366 2 
142 1 246 1 278 1 149 1 309 4 74 1 40 4 111 1 151 1 331 3 12 2 25 2 209 1 97 1 53 7 191 1 55 1 129 9 130 1 170 1 79 9 366 2 
142 2 246 1 144 1 278 1 149 2 121 1 309 4 40 4 151 2 112 1 331 3 12 2 25 2 209 1 97 1 53 6 376 1 191 1 55 1 129 9 130 1 284 1 170 2 79 9 244 1 366 2 
142 2 246 1 144 1 278 1 149 2 121 1 309 4 40 4 151 2 112 1 331 3 12 2 25 2 209 1 97 1 53 6 376 1 191 1 55 1 129 9 130 1 284 1 170 2 79 9 244 1 366 2 
142 2 246 1 144 1 278 1 149 2 121 1 309 4 40 4 151 2 112 1 331 3 12 2 25 2 209 1 97 1 53 6 376 1 191 1 55 1 129 9 130 1 284 1 170 2 79 9 244 1 366 2 
142 2 246 1 144 1 278 1 149 2 121 1 309 3 40 3 151 2 112 1 331 2 12 2 25 1 209 1 97 1 53 4 376 1 55 1 129 7 130 1 284 1 170 2 79 7 244 1 366 2 
142 1 278 1 149 1 309 2 40 2 331 1 12 1 25 2 53 3 191 1 55 1 129 4 130 1 170 1 79 4 366 1 
263 1 149 1 309 1 205 1 151 1 12 1 376 1 129 2 130 1 284 1 79 2 170 1 303 1 316 1 366 1 286 1 
309 2 40 1 151 1 331 1 12 2 209 1 53 1 129 3 130 1 79 3 303 1 316 1 366 2 
215 1 13 1 26 1 
377 2 127 1 13 1 
37 1 295 2 148 2 101 2 339 2 279 2 84 1 313 2 
318 1 49 1 226 2 227 2 335 1 148 2 20 1 93 1 266 1 233 1 122 1 24 1 295 2 240 2 101 2 339 2 298 2 301 1 299 1 275 1 194 2 304 1 80 1 37 1 252 1 279 3 84 1 162 1 313 3 164 1 166 1 352 1 258 1 378 1 169 1 380 1 355 1 
295 1 148 1 101 1 339 1 279 1 84 1 155 1 171 1 359 1 313 1 
333 1 36 1 343 1 229 1 180 1 279 1 13 1 26 1 313 1 128 1 256 1 257 1 339 1 171 1 
36 1 343 1 148 1 229 2 180 2 279 1 13 1 26 1 313 1 295 1 101 1 256 1 257 1 339 1 171 1 
229 1 180 1 345 1 131 1 2 1 
192 1 229 2 180 2 345 1 131 1 235 1 13 1 26 1 
229 1 180 1 131 1 
148 1 229 1 180 1 345 1 279 1 84 1 359 1 313 1 295 1 101 1 339 1 89 1 155 1 171 1 
13 1 
229 2 180 2 345 1 131 1 235 1 262 1 13 1 26 1 
224 1 71 4 148 1 288 2 229 5 235 1 359 1 51 1 176 2 26 2 295 1 239 1 101 1 29 2 339 1 270 2 131 2 155 1 367 2 195 1 6 1 368 1 326 1 159 1 180 5 345 2 279 1 253 1 84 1 347 2 313 1 13 2 375 1 138 1 67 1 89 1 18 5 171 1 
49 1 227 1 335 1 148 1 20 1 93 1 369 1 279 2 162 1 313 2 295 1 240 1 103 1 339 1 298 1 258 1 299 1 275 1 80 1 356 1 
37 1 215 1 
37 2 148 1 279 2 311 1 313 2 65 1 295 1 101 1 339 2 
103 1 187 1 231 1 
49 1 37 1 227 1 335 1 93 1 20 1 279 1 162 1 313 1 75 1 240 1 298 1 258 1 275 1 299 1 80 1 
37 1 295 3 101 1 148 3 339 3 369 1 279 3 313 3 
295 1 148 1 339 1 279 1 171 1 359 1 313 1 
295 1 148 1 101 1 339 1 279 1 311 1 171 1 313 1 65 1 
318 1 49 1 226 2 227 1 335 1 148 3 20 1 93 1 229 1 266 1 122 1 295 3 240 1 101 2 339 3 298 1 299 1 275 1 194 1 304 1 80 1 36 1 37 1 343 1 369 1 180 1 252 1 279 4 84 1 162 1 65 1 313 4 164 1 113 1 166 1 256 1 257 1 258 1 378 1 169 1 380 1 354 1 171 1 356 1 
37 1 295 1 128 1 148 1 339 2 369 1 57 1 279 2 313 2 
36 1 343 1 148 3 229 1 369 2 180 1 279 3 234 1 65 1 13 1 313 3 295 3 113 1 101 1 256 1 257 1 339 3 171 1 356 1 
295 2 148 2 101 1 103 1 339 2 369 1 231 1 279 2 313 2 65 1 
49 1 37 1 227 1 335 1 93 1 20 1 279 1 162 1 313 1 240 1 298 1 258 1 275 1 299 1 80 1 
49 1 37 1 227 1 335 1 93 1 20 1 279 1 133 1 162 1 313 1 240 1 351 1 298 1 275 1 299 1 
216 1 318 1 146 1 147 1 217 1 226 2 228 1 288 1 72 1 187 2 231 2 252 1 122 2 164 1 166 1 103 2 378 1 270 1 301 2 114 1 364 1 194 4 177 1 304 1 
36 1 295 1 87 1 148 1 339 1 279 1 171 1 313 1 
37 1 148 4 369 2 1 1 279 5 208 1 313 5 65 1 295 4 128 1 101 1 339 5 57 1 356 1 
295 2 87 1 148 2 339 2 279 2 171 1 359 1 313 2 
360 1 289 1 
360 1 289 1 
143 1 7 1 
143 1 7 1 
143 1 7 1 
360 1 289 1 116 1 
360 1 289 1 116 1 
360 1 237 1 289 1 
360 2 143 1 7 1 243 1 289 2 379 1 
360 1 289 1 116 1 
360 1 56 1 289 1 
360 1 56 1 289 1 
360 1 56 1 289 1 
90 1 8 2 229 2 289 2 327 1 180 2 188 2 13 1 360 2 136 1 86 2 100 2 243 1 76 1 300 3 214 1 104 1 325 1 185 2 
148 2 229 1 289 1 188 1 293 1 360 1 237 1 295 2 210 1 76 1 339 2 211 1 300 1 37 1 8 1 107 1 180 1 279 2 313 2 374 1 86 1 282 1 43 1 185 1 
142 1 149 1 170 1 
149 1 170 1 286 1 
142 2 307 1 213 1 64 1 170 3 286 1 
142 1 165 1 213 1 64 1 170 2 286 1 
142 1 213 2 64 1 170 2 286 1 
71 3 228 1 288 1 229 5 0 2 320 1 175 1 235 1 294 1 176 1 26 1 210 1 127 1 241 1 29 1 211 1 270 1 131 1 178 2 63 1 217 1 180 5 345 4 347 1 329 1 13 2 377 3 15 1 282 1 67 1 69 2 18 2 
48 5 319 1 71 8 228 3 288 3 229 9 320 2 235 1 2 5 26 1 176 2 239 1 127 3 241 2 29 2 211 4 270 3 271 1 131 6 3 1 178 6 217 3 196 1 180 9 345 7 110 1 329 1 347 2 13 5 377 9 15 3 67 1 69 6 18 6 47 1 
71 3 228 1 288 1 229 3 0 1 320 1 175 1 26 1 176 1 239 1 127 2 241 1 29 1 211 1 270 1 178 2 63 1 217 1 180 3 345 2 347 1 13 3 15 1 377 4 69 2 18 2 
319 1 71 5 228 2 288 2 229 4 0 2 320 1 175 1 26 1 176 1 239 1 127 3 241 1 29 1 211 2 270 2 3 1 178 4 63 1 217 2 180 4 345 3 110 1 347 1 13 4 377 7 15 2 69 4 18 4 
334 1 335 1 215 1 
335 1 204 1 
179 1 
335 1 20 1 
334 2 349 1 335 3 20 1 299 1 267 1 
335 1 20 1 299 1 
335 1 105 1 
6 1 158 1 288 1 72 3 82 2 122 3 330 1 51 1 163 1 138 1 270 1 31 1 324 1 301 4 194 7 177 2 277 1 
6 1 158 1 288 1 72 3 82 2 122 3 330 1 51 1 163 1 138 1 270 1 31 1 324 1 301 4 194 7 177 2 277 1 
6 1 158 1 288 1 72 3 82 2 122 3 330 1 161 1 51 1 163 1 138 1 270 1 31 1 324 1 301 4 194 7 177 2 277 1 
186 1 226 2 228 3 19 1 288 4 72 10 230 1 358 1 122 15 51 1 123 1 52 3 28 1 324 1 31 5 270 4 77 4 301 16 194 31 304 1 277 2 177 5 6 2 217 3 158 1 82 3 252 1 348 1 330 2 163 1 164 1 15 3 138 2 378 1 
226 4 288 1 72 4 122 4 123 1 51 1 270 1 31 1 301 5 194 9 32 1 304 2 277 1 177 3 6 1 158 1 82 2 252 2 330 1 163 1 164 2 137 1 138 1 378 2 
142 1 49 1 172 1 227 1 93 1 149 1 151 1 189 1 321 1 53 1 240 1 298 1 129 2 130 1 60 1 79 2 303 1 366 1 307 1 157 1 309 1 199 1 83 1 12 1 11 1 44 1 202 1 170 2 316 1 286 1 
142 1 49 1 227 1 93 1 149 1 151 1 292 1 321 1 53 2 338 1 240 1 152 1 298 1 129 3 60 1 79 3 303 1 366 1 307 1 157 1 309 1 199 1 83 1 12 1 11 1 44 1 202 1 170 2 316 1 286 1 
142 1 307 1 49 1 227 1 157 1 93 1 149 1 309 1 83 1 151 1 292 1 321 1 53 2 338 1 240 1 298 1 44 1 129 2 202 1 170 2 79 2 60 1 303 1 316 1 286 1 
49 1 227 1 335 1 93 1 20 1 151 2 321 2 240 1 152 1 298 1 212 1 129 1 60 2 79 1 366 1 248 1 251 1 181 1 162 1 12 1 44 2 45 1 183 1 
142 1 307 1 49 1 227 1 157 1 93 1 149 1 83 1 199 1 151 1 292 1 11 1 12 1 189 1 321 1 240 1 298 1 44 1 129 1 202 1 130 1 170 2 79 1 60 1 366 1 286 1 
259 1 
333 1 229 4 235 2 50 1 296 1 242 3 339 1 342 1 343 1 10 5 347 1 13 1 313 1 255 1 314 1 256 1 16 2 168 3 257 1 67 1 18 1 171 1 119 3 203 1 71 1 22 2 176 1 26 1 269 1 128 1 127 2 29 1 131 5 33 2 365 2 36 1 39 1 180 4 279 1 135 1 88 1 141 1 
203 1 119 3 333 1 71 1 229 4 22 2 235 2 50 1 26 1 176 1 296 1 127 2 128 1 269 1 29 1 339 1 242 3 131 5 365 2 33 2 342 1 36 1 343 1 39 1 10 5 180 4 279 1 347 1 135 1 13 1 313 1 255 1 314 1 88 1 16 2 256 1 67 1 257 1 168 3 18 1 141 1 171 1 
119 2 203 1 118 1 333 1 71 1 229 4 22 2 235 2 26 1 176 1 153 1 269 1 128 1 29 1 242 2 339 1 131 4 36 1 343 1 39 1 10 4 180 4 279 1 347 1 135 1 373 2 13 1 313 1 255 1 377 2 88 1 16 2 256 1 168 2 67 1 257 1 46 2 18 1 171 1 
49 1 333 1 227 2 335 1 229 5 93 1 235 3 153 1 240 2 241 1 242 2 298 2 339 1 248 1 343 1 10 4 347 1 162 2 13 2 313 1 255 1 16 2 256 1 168 2 67 1 257 1 18 2 171 1 119 2 203 1 71 2 20 1 22 2 26 1 176 1 361 1 127 2 269 1 128 1 29 1 274 1 131 6 365 2 33 2 36 1 39 1 180 5 181 1 279 1 135 1 281 1 377 2 88 1 141 1 382 1 
119 1 36 1 333 1 343 1 10 2 229 3 39 1 180 3 279 1 235 1 135 1 313 1 255 1 88 1 256 1 269 1 128 1 257 1 339 1 131 2 262 1 171 1 
36 1 333 1 343 1 10 3 229 3 39 1 180 3 279 1 235 1 135 1 13 1 26 1 313 1 255 1 88 1 256 1 269 1 128 1 257 1 242 1 339 1 131 1 262 1 171 1 
119 1 333 1 229 3 235 1 26 1 128 1 269 1 339 1 242 1 131 2 36 1 343 1 39 1 10 3 180 3 279 1 135 1 313 1 13 1 255 1 88 1 256 1 257 1 168 1 262 1 171 1 
333 1 229 5 235 3 50 1 96 1 296 1 339 1 242 4 342 1 343 1 10 6 347 1 313 1 13 5 255 1 314 1 256 1 16 2 168 4 257 1 67 1 262 1 18 1 171 1 119 4 203 1 71 1 22 2 26 5 176 1 269 1 128 1 127 2 29 1 131 7 33 2 365 2 36 1 39 1 180 5 279 1 135 1 88 1 141 1 
119 2 203 1 333 1 71 1 229 4 22 2 235 2 26 1 176 1 153 1 127 2 269 1 128 1 29 1 242 2 339 1 131 4 365 2 33 2 36 1 343 1 39 1 10 4 180 4 279 1 347 1 135 1 13 2 313 1 255 1 377 2 88 1 16 2 256 1 168 2 67 1 257 1 18 1 141 1 171 1 
119 2 203 1 333 1 71 1 229 4 22 2 235 2 50 1 26 1 176 1 127 2 128 1 269 1 29 1 242 2 339 1 131 4 365 2 33 2 342 1 36 1 343 1 39 1 10 4 180 4 279 1 135 1 347 1 13 1 313 1 255 1 314 1 88 1 16 2 256 1 168 2 257 1 67 1 18 1 141 1 171 1 
119 2 203 1 333 1 71 1 229 4 22 2 235 2 50 1 26 1 176 1 127 2 128 1 269 1 29 1 242 2 339 1 131 4 365 2 33 2 342 1 36 1 343 1 39 1 10 4 180 4 279 1 135 1 347 1 13 1 313 1 255 1 314 1 88 1 16 2 256 1 168 2 257 1 67 1 18 1 141 1 171 1 
119 2 203 1 118 1 333 1 71 1 229 4 22 2 235 2 50 1 26 1 176 1 128 1 269 1 29 1 242 2 339 1 131 4 36 1 343 1 39 1 10 4 180 4 279 1 346 1 135 1 347 1 373 2 13 1 313 1 255 1 377 2 88 1 16 2 256 1 168 2 257 1 283 1 67 1 46 2 18 1 171 1 
318 1 146 1 226 2 288 1 72 2 187 1 231 1 122 3 51 1 103 1 270 1 301 3 194 6 304 1 177 2 215 1 37 2 6 1 158 1 82 1 252 1 163 1 164 1 138 1 166 1 378 1 
186 1 318 2 226 4 228 1 288 2 72 2 187 11 266 1 230 1 231 4 122 6 268 1 52 3 126 1 99 1 103 11 31 1 270 1 77 3 301 8 194 14 177 1 304 2 37 1 217 2 218 1 252 2 164 2 15 2 166 1 378 2 68 1 355 1 
49 1 318 1 227 1 226 2 335 1 148 1 20 1 93 1 266 1 232 1 231 1 122 1 75 1 125 1 295 1 240 1 99 1 298 1 339 1 299 1 275 1 301 1 194 2 80 1 304 1 37 1 369 1 252 1 279 2 162 1 313 2 164 1 166 1 258 1 378 1 17 1 355 1 356 1 
49 2 227 3 226 6 148 1 335 2 228 2 288 3 93 2 187 7 231 7 292 1 51 1 295 1 240 3 99 1 103 7 298 3 339 1 59 2 299 2 301 10 194 20 304 3 6 1 158 1 198 1 252 3 162 1 163 1 313 3 66 1 164 3 200 2 15 2 166 3 258 2 169 2 315 2 355 1 356 1 318 3 20 2 72 8 266 1 122 10 270 3 31 4 275 2 177 4 80 2 37 2 217 2 82 1 369 1 279 3 138 1 41 1 378 3 182 2 
49 2 318 2 172 1 146 1 227 7 226 4 148 1 335 3 21 1 93 2 20 2 266 1 291 1 122 1 292 1 95 1 295 1 240 8 339 1 298 8 302 1 301 1 194 2 304 2 61 1 248 1 369 1 252 2 279 1 181 1 162 2 313 1 164 2 166 2 221 1 352 2 378 2 261 1 355 1 
318 1 226 2 148 1 228 1 288 1 72 1 187 1 231 1 122 2 295 1 99 1 101 1 103 1 339 1 270 1 272 1 301 1 194 3 177 1 304 1 217 1 252 1 279 1 65 1 313 1 164 1 15 1 166 1 378 1 
318 1 216 1 146 1 226 2 217 1 288 1 72 1 187 1 231 1 252 1 164 1 166 1 103 1 31 1 378 1 301 2 194 2 304 1 
318 1 146 1 147 1 226 2 228 1 72 1 187 1 231 1 252 1 122 2 164 1 166 1 103 1 378 1 270 1 194 2 177 1 304 1 
318 1 146 1 226 2 228 1 288 1 187 2 72 2 231 2 122 2 103 2 31 1 270 1 301 2 194 4 304 1 177 1 217 1 252 1 164 1 15 1 166 1 378 1 
318 1 216 1 226 2 217 1 288 1 72 1 187 1 231 1 252 1 95 1 164 1 166 1 103 1 31 1 378 1 301 2 194 2 304 1 
318 1 147 1 226 2 228 1 72 1 187 1 231 1 252 1 122 2 95 1 164 1 166 1 103 1 378 1 270 1 194 2 177 1 304 1 
318 1 226 2 228 1 288 1 187 2 72 2 231 2 122 2 95 1 103 2 31 1 270 1 301 2 194 4 304 1 177 1 217 1 252 1 164 1 15 1 166 1 378 1 
318 1 226 2 217 1 228 1 288 1 72 2 187 2 231 2 252 1 122 2 164 1 15 1 166 1 103 2 270 1 31 1 378 1 301 2 194 4 177 1 304 1 
49 1 318 1 227 1 226 2 335 1 20 1 93 1 266 1 122 1 240 1 298 1 301 1 299 1 275 1 194 2 80 1 304 1 37 1 252 1 279 1 162 1 313 1 164 1 166 1 258 1 169 1 378 1 355 1 
49 1 318 1 227 1 226 2 335 1 20 1 93 1 266 1 122 1 240 1 298 1 301 1 299 1 275 1 194 2 304 1 37 1 252 1 133 1 279 1 162 1 313 1 164 1 166 1 351 1 378 1 353 1 355 1 
318 1 226 2 228 1 288 1 187 2 72 2 231 2 122 2 99 1 103 2 31 1 270 1 301 2 194 4 304 1 177 1 217 1 252 1 164 1 15 1 166 1 378 1 
49 1 318 1 172 1 227 1 226 2 228 1 335 1 288 1 72 2 187 2 93 1 20 1 231 2 122 2 240 1 103 2 298 1 270 1 31 1 301 2 299 1 275 1 194 4 177 1 80 1 304 1 217 1 252 1 279 1 313 1 200 1 164 1 15 1 166 1 258 1 169 1 378 1 
318 1 226 2 228 1 148 1 288 1 72 1 187 1 231 1 122 1 295 1 99 1 101 1 103 1 339 1 270 1 31 1 301 2 194 3 304 1 217 1 308 1 252 1 279 1 65 1 313 1 164 1 15 1 166 1 378 1 
186 3 226 6 228 4 288 5 230 1 51 1 52 3 238 4 102 1 301 20 194 41 304 3 245 1 6 1 158 1 108 1 9 1 197 1 252 3 163 1 164 3 15 4 260 1 174 2 72 8 120 1 122 21 23 1 123 1 206 1 270 5 31 4 77 4 32 1 177 4 276 1 34 1 217 4 82 1 370 1 138 1 378 3 140 1 
186 3 226 8 174 2 228 3 288 5 72 7 120 1 230 1 122 18 51 1 206 1 123 2 23 1 52 3 238 4 102 1 31 3 270 4 77 4 301 20 194 38 32 1 34 1 276 1 177 4 304 4 245 1 6 1 217 4 158 1 9 1 108 1 82 1 197 1 370 1 252 4 163 1 164 4 15 4 138 1 378 4 260 1 140 1 
186 2 226 4 174 1 228 7 288 8 72 14 120 1 230 2 122 25 51 1 123 1 206 1 23 1 52 4 238 4 126 2 102 1 31 7 270 8 77 4 301 27 194 52 32 1 276 1 177 7 304 2 245 1 6 1 217 7 158 1 108 1 82 1 197 1 370 1 252 2 163 1 164 2 15 7 138 1 378 2 260 1 140 1 
186 1 287 1 226 4 174 1 228 3 288 3 72 6 120 1 230 1 122 10 52 1 238 2 102 1 31 3 270 3 77 2 301 9 194 19 32 1 177 3 304 2 245 2 217 3 9 1 252 2 164 2 15 3 378 2 260 1 140 1 
186 2 226 6 174 2 228 2 288 3 72 4 120 1 122 12 206 1 123 2 23 1 52 2 238 4 102 1 31 2 270 2 301 14 77 2 194 26 32 1 276 1 177 2 304 3 245 1 217 3 108 1 197 1 370 1 252 3 164 3 15 3 378 3 260 1 140 2 
360 1 90 1 86 1 8 1 243 1 289 1 327 1 273 1 188 1 185 1 
237 1 107 1 
360 1 86 1 92 1 8 1 289 1 193 1 310 1 188 1 185 1 
90 1 8 1 229 1 289 1 327 1 180 1 188 1 13 1 360 1 136 1 86 1 100 1 243 1 76 1 300 2 214 1 104 1 185 1 
90 1 8 1 229 1 289 1 327 1 180 1 188 1 13 1 360 1 136 1 86 1 100 1 243 1 76 1 300 2 214 1 104 1 185 1 
90 1 8 1 229 1 289 1 327 1 180 1 188 1 13 1 360 1 136 1 86 1 100 1 243 1 76 1 300 2 214 1 104 1 185 1 
160 1 379 1 116 1 
160 1 379 1 116 1 
56 1 312 1 
56 1 379 1 312 1 
43 1 293 1 
148 2 229 1 289 1 188 1 293 1 360 1 237 1 295 2 100 1 210 1 211 1 339 2 363 1 300 1 37 1 8 1 107 1 180 1 345 1 279 2 313 2 374 1 136 1 86 1 282 1 43 1 185 1 
160 1 116 1 
56 1 379 1 312 1 
49 1 318 1 226 2 227 2 335 1 93 1 20 1 266 1 122 1 240 2 99 1 298 2 339 2 301 1 156 1 194 2 304 1 61 1 5 1 35 1 81 1 252 1 279 2 371 1 313 2 164 1 166 1 221 1 352 2 378 1 355 1 
142 1 307 1 49 1 172 1 227 2 250 1 157 1 93 1 149 1 199 1 83 1 292 1 240 2 298 2 44 1 170 2 115 1 286 1 106 1 
142 1 307 1 49 1 227 1 157 1 93 1 149 1 199 1 83 1 292 1 240 1 298 1 44 1 170 2 286 1 4 1 106 1 
49 1 248 1 227 1 335 1 93 1 20 1 181 1 162 1 240 1 298 1 30 1 44 1 45 1 115 1 
142 1 307 1 49 1 227 1 250 1 157 1 93 1 149 1 199 1 83 1 292 1 240 1 298 1 44 1 170 2 115 1 286 1 106 1 
98 1 
49 1 318 1 226 2 227 1 148 2 335 1 93 1 20 1 266 1 122 1 295 2 240 1 101 2 298 1 339 2 275 1 299 1 194 1 304 1 80 1 37 1 252 1 279 3 84 1 162 1 313 3 164 1 166 1 258 1 169 1 378 1 380 1 
71 1 82 1 347 1 176 1 26 2 13 4 281 1 377 4 127 2 241 1 67 1 29 1 69 2 18 2 178 2 
224 1 71 1 368 1 18 1 215 1 13 1 26 1 
71 1 229 1 235 1 176 1 26 1 127 1 29 1 131 1 33 1 365 1 180 1 347 1 13 2 377 1 67 1 18 1 141 1 
224 1 225 2 49 3 334 2 145 2 227 3 335 10 228 2 337 1 288 2 93 4 229 5 150 2 235 3 236 2 240 3 241 2 298 3 299 3 105 2 109 2 347 4 162 1 13 8 15 2 256 2 67 4 69 6 18 8 172 1 71 9 20 3 204 3 26 2 176 4 267 1 323 1 127 6 29 4 362 1 270 2 131 5 78 2 367 2 178 6 217 2 368 1 180 5 281 1 375 2 377 12 182 2 285 1 184 1 
186 1 71 8 228 2 288 2 229 1 235 1 206 1 23 1 176 2 26 2 52 1 241 1 297 1 54 1 127 3 29 2 270 2 77 1 131 1 276 1 367 2 178 5 217 2 108 1 180 1 197 1 347 2 13 5 281 1 375 1 377 6 15 2 67 2 69 5 18 5 
71 2 148 1 288 2 229 1 359 1 51 1 176 1 295 1 101 1 29 1 339 1 270 1 155 1 342 1 367 2 6 1 159 1 180 1 279 1 84 1 347 1 313 1 375 1 138 1 67 1 89 1 18 2 171 1 
224 1 71 1 368 1 347 1 176 1 26 1 13 1 67 1 29 1 18 1 
71 5 217 2 228 2 288 2 13 5 375 1 15 2 377 10 127 5 270 2 182 1 69 5 18 5 367 2 178 5 
229 1 180 1 131 1 235 1 13 1 26 1 
49 1 71 2 227 4 335 1 93 1 20 1 229 3 265 1 73 1 235 2 176 2 239 1 240 4 241 2 29 2 298 4 274 1 131 4 248 1 180 3 181 1 347 2 162 2 281 2 67 1 285 1 18 2 184 2 382 1 
86 1 336 1 8 1 
86 1 336 1 8 1 
90 1 86 1 8 1 43 1 117 1 
86 1 336 1 8 1 
190 1 86 1 8 1 
190 1 86 1 8 1 
190 1 86 1 8 1 
86 1 8 1 
360 1 289 1 
186 1 226 2 288 1 72 2 122 4 51 1 52 1 270 1 77 1 301 4 194 8 32 1 304 1 177 2 6 1 158 1 108 1 82 1 252 1 163 1 164 1 138 1 378 1 
186 1 226 4 288 2 72 3 230 1 122 5 51 1 52 1 270 1 31 1 77 2 301 6 194 11 32 1 177 2 304 2 6 1 217 1 158 1 108 1 82 1 252 2 372 1 163 1 164 2 15 1 138 1 378 2 
186 1 226 6 228 2 288 3 72 4 122 10 51 1 206 1 23 1 123 1 52 1 31 1 270 3 77 1 301 9 194 19 32 1 304 3 177 3 276 1 6 1 217 2 158 1 108 1 82 1 197 1 252 3 372 1 163 1 164 3 15 2 138 1 378 3 
186 1 226 6 228 1 288 3 72 5 122 7 51 1 123 1 23 1 206 1 52 1 31 2 270 2 77 1 301 10 194 17 32 1 304 3 177 3 276 1 6 1 217 2 158 1 108 1 82 1 197 1 252 3 372 1 163 1 164 3 15 2 138 1 378 3 
186 1 226 2 288 1 72 2 122 4 51 1 52 1 270 1 77 1 301 4 194 8 32 1 304 1 177 2 6 1 158 1 108 1 82 1 252 1 163 1 164 1 138 1 378 1 
186 1 226 2 228 2 288 2 72 2 122 6 23 1 206 1 52 1 31 1 270 2 77 1 301 6 194 12 32 1 304 1 177 1 276 1 217 2 108 1 197 1 252 1 164 1 15 2 378 1 
186 1 226 8 228 1 288 3 72 5 122 8 51 1 206 1 23 1 123 2 52 1 31 2 270 2 77 1 301 10 194 18 32 1 276 1 304 4 177 3 6 1 217 2 158 1 108 1 82 1 197 1 252 4 372 1 163 1 164 4 15 2 138 1 378 4 
186 1 226 8 228 2 288 3 72 6 122 7 206 1 23 1 123 2 52 1 31 3 270 2 77 1 301 9 194 16 32 1 276 1 304 4 177 3 217 3 108 1 9 1 197 1 252 4 164 4 15 3 378 4 
6 3 158 1 288 1 72 6 122 4 51 1 163 2 138 3 270 1 31 3 301 3 194 7 177 3 
186 1 226 8 228 1 288 3 72 4 122 8 51 1 206 1 23 1 123 2 52 1 31 1 270 2 77 1 301 10 194 18 32 1 276 1 304 4 177 3 6 1 217 2 158 1 108 1 9 1 82 1 197 1 252 4 163 1 164 4 15 2 138 1 378 4 
226 4 6 1 158 1 288 1 72 3 82 1 252 2 122 4 51 1 123 1 163 1 164 2 138 1 270 1 31 1 378 2 301 4 194 8 177 2 304 2 
6 1 158 1 288 1 72 2 82 1 122 3 51 1 163 1 138 1 270 1 301 3 194 6 177 2 215 1 
226 2 217 1 228 1 288 1 72 2 252 1 122 2 372 1 164 1 15 1 270 1 378 1 31 1 301 2 194 4 177 1 304 1 
186 1 217 1 228 1 288 1 72 2 230 1 122 4 52 1 15 1 270 1 31 1 77 2 301 3 194 7 177 1 
226 4 228 2 288 3 72 9 230 1 122 12 51 1 123 2 268 1 124 1 52 2 126 1 31 4 270 3 301 11 77 2 194 23 177 5 304 2 6 2 217 2 158 1 82 1 252 2 163 1 164 2 15 2 138 2 378 2 
77 1 194 1 122 1 
52 1 301 1 194 1 
226 2 217 1 228 1 288 1 72 3 252 1 122 3 372 1 164 1 15 1 378 1 31 1 270 1 182 1 301 3 194 6 304 1 177 2 
186 1 226 2 228 2 288 2 72 2 122 6 23 1 206 1 52 1 31 1 270 2 77 1 301 6 194 12 32 1 304 1 177 1 276 1 217 2 108 1 197 1 252 1 164 1 15 2 378 1 
6 1 288 1 72 2 122 3 51 1 138 1 270 1 31 1 301 3 194 6 177 1 
6 1 226 2 158 1 72 2 252 1 122 2 123 1 163 1 124 1 164 1 138 1 31 1 378 1 301 1 194 3 177 1 304 1 
226 2 6 2 288 2 72 5 159 1 252 1 122 5 51 1 164 1 138 2 378 1 31 2 270 2 301 5 194 10 32 1 304 1 177 3 
226 2 217 1 288 1 72 1 252 1 164 1 378 1 31 1 301 2 194 2 32 1 304 1 
226 2 217 1 228 1 288 1 72 2 252 1 122 2 164 1 15 1 270 1 378 1 31 1 301 2 194 4 32 1 177 1 304 1 
226 6 6 1 9 1 72 2 252 3 122 2 123 1 124 1 164 3 138 1 378 3 31 1 301 1 194 3 32 1 304 3 177 1 
186 1 226 10 228 3 19 1 288 5 72 12 230 1 358 1 122 18 51 2 123 2 124 1 52 3 28 1 31 5 270 5 77 4 301 16 194 34 32 1 304 5 177 7 6 3 217 3 158 1 9 1 82 1 252 5 372 1 163 1 164 5 15 3 138 3 378 5 
70 1 37 1 128 1 339 1 57 1 279 1 254 1 171 1 313 1 
70 1 332 1 37 1 38 1 279 1 254 1 313 1 350 1 128 1 167 1 339 1 57 1 171 1 317 1 
49 1 248 1 240 1 227 1 335 1 93 1 20 1 298 1 181 1 215 1 162 1 
49 1 37 1 227 1 335 1 148 1 20 1 93 1 369 1 279 2 162 1 313 2 295 1 240 1 339 1 298 1 299 1 275 1 80 1 
49 1 145 1 227 1 148 2 335 3 93 1 20 2 295 1 240 1 298 1 339 2 275 1 299 2 80 1 105 1 36 1 37 1 369 1 279 2 313 2 257 1 171 1 184 1 
49 1 145 1 227 2 148 2 335 3 93 1 20 2 295 1 240 2 298 2 339 2 275 1 299 2 105 1 36 1 37 1 369 1 279 2 313 2 351 1 257 1 171 1 184 1 223 1 
247 1 334 1 49 1 145 1 227 3 335 4 20 1 93 1 229 2 204 1 180 2 162 1 207 1 13 1 26 1 240 3 256 1 298 3 299 1 131 1 105 1 184 1 223 1 
334 1 49 1 145 1 227 3 335 4 20 1 93 1 229 2 109 1 204 1 180 2 162 1 13 1 26 1 240 3 256 1 298 3 299 1 131 1 105 1 184 1 223 1 
49 1 240 1 227 1 93 1 298 1 21 1 
49 2 172 1 227 6 335 3 264 1 21 1 20 2 93 3 328 1 291 1 292 1 162 2 267 1 240 7 352 1 298 7 261 1 302 1 222 1 299 1 61 1 
49 1 318 2 172 1 226 4 227 1 335 1 148 1 288 1 187 1 72 2 20 1 93 1 231 1 122 3 51 1 295 1 99 1 240 1 103 1 339 1 298 1 270 1 301 3 299 1 275 1 59 1 194 6 177 2 304 2 80 1 37 2 6 1 158 1 82 1 369 1 252 2 279 2 371 1 163 1 313 2 164 2 200 1 138 1 166 2 258 1 378 2 169 1 
224 1 225 1 334 1 71 1 227 1 335 2 229 3 204 1 150 1 235 1 26 1 176 2 236 1 240 1 29 2 298 1 131 2 368 1 109 1 180 3 345 1 347 2 162 1 13 1 256 1 67 2 18 1 285 1 
334 1 49 1 172 1 227 2 335 2 21 1 20 1 93 2 267 1 240 2 362 1 298 2 299 1 
49 1 172 1 248 1 227 4 335 1 93 1 20 1 181 1 219 1 162 1 240 4 298 4 223 1 
306 1 49 1 227 2 335 1 20 1 93 2 198 1 344 1 328 1 240 2 298 2 222 1 299 1 184 1 
49 1 240 1 227 1 157 1 93 1 298 1 149 1 170 1 162 1 286 1 
49 1 172 1 227 2 335 1 81 1 20 1 93 1 292 1 240 2 298 2 61 1 
49 2 248 1 172 1 227 4 335 3 20 2 93 2 181 1 219 1 291 1 162 1 240 5 298 5 261 1 184 1 61 1 
49 2 248 1 172 1 227 4 335 3 20 2 93 2 181 1 219 1 162 1 240 5 298 5 261 1 184 1 61 1 62 1 
49 1 37 1 227 1 335 1 148 1 20 1 93 1 369 1 279 2 162 1 313 2 295 1 240 1 351 1 339 1 298 1 299 1 275 1 
49 1 227 1 335 1 264 1 20 1 93 2 328 1 267 1 240 1 298 1 222 1 299 1 184 1 
5 1 35 1 139 1 339 1 201 1 279 1 156 1 280 1 313 1 
154 1 381 1 280 1 
37 1 249 1 139 1 201 1 280 1 
36 1 37 1 343 1 249 2 229 2 180 2 345 1 280 1 13 1 26 1 113 1 256 1 257 1 139 2 154 1 58 1 201 2 171 1 381 1 
246 1 309 1 12 1 53 1 129 3 130 1 284 1 79 3 303 1 366 1 316 1 
91 1 309 1 40 1 331 1 
309 1 316 1 
309 1 303 1 316 1 215 1 
129 1 309 1 79 1 303 1 316 1 12 1 366 1 
321 1 129 1 151 1 
220 1 129 3 309 1 290 1 130 1 284 2 79 3 303 1 316 1 12 1 366 1 132 1 
53 1 129 2 309 1 79 2 303 1 316 1 12 1 366 1 25 1 
142 1 278 1 149 1 129 1 309 1 40 1 130 1 170 1 79 1 12 1 366 1 
129 1 309 1 130 1 79 1 316 1 12 1 366 1 
129 1 130 1 79 1 303 1 316 2 12 1 366 1 
309 1 12 2 85 1 14 1 27 1 129 2 130 1 79 2 316 1 366 2 
246 1 309 2 40 1 331 1 12 1 97 1 53 2 129 3 130 1 79 3 303 1 316 1 366 1 
142 1 307 1 149 1 309 1 134 1 12 1 53 1 129 2 130 1 170 2 79 2 303 1 316 1 366 1 286 1 
309 2 40 1 331 1 12 2 25 1 53 2 191 1 129 4 130 1 79 4 303 1 316 1 366 2 
129 1 309 1 130 1 79 1 303 1 316 1 12 1 366 1 
91 1 309 3 290 1 40 1 331 1 12 1 53 2 220 1 129 4 284 1 79 4 303 2 316 2 366 1 
309 1 74 1 12 1 53 1 322 1 42 1 129 2 130 1 79 2 303 1 316 1 366 1 
220 1 129 3 309 1 290 2 130 1 284 2 94 1 79 3 303 1 316 1 12 1 366 1 
173 2 309 2 340 1 305 1 
129 1 130 1 341 1 79 1 12 1 366 1 
53 1 246 1 129 2 309 1 130 1 79 2 303 1 316 1 12 1 366 1 
357 1 
129 1 309 1 130 1 79 1 303 1 316 1 12 1 366 1 

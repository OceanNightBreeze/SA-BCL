#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 (65,222) (65,222) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 (65,222) (65,222) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 (65,222) (65,222) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 (65,222) (65,222) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 84 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 18 84 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (19,82,88,377) (19,82,88,377) 266 198 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
19 2 294 1 372 1 362 1 222 1 22 1 276 1 101 1 88 7 266 1 162 1 377 2 58 1 33 1 78 1 341 2 79 1 15 2 246 6 81 2 18 1 82 4 226 2 65 1 
19 2 294 1 372 1 362 1 222 1 22 1 276 1 101 1 88 7 266 1 162 1 377 2 58 1 33 1 78 1 341 2 79 1 15 2 246 6 81 2 18 1 82 4 226 2 65 1 
19 2 294 1 372 1 362 1 222 1 22 1 276 1 101 1 88 7 266 1 162 1 377 2 58 1 33 1 78 1 341 2 79 1 15 2 246 6 81 2 18 1 82 4 226 2 65 1 
19 2 294 1 372 1 362 1 222 1 22 1 276 1 101 1 88 7 266 1 162 1 377 2 58 1 33 1 78 1 341 2 79 1 15 2 246 6 81 2 18 1 82 4 226 2 65 1 
377 1 19 1 362 1 246 1 88 2 266 1 82 1 18 1 
19 1 129 1 362 1 22 1 149 1 88 2 101 1 267 1 377 1 58 1 79 1 246 2 289 1 235 1 81 1 226 1 
19 2 129 1 362 1 149 1 88 3 377 2 78 1 341 1 15 1 246 3 81 2 226 1 82 1 
19 2 84 1 294 1 362 1 88 7 266 1 377 2 33 1 78 1 341 2 15 2 246 6 218 1 81 2 18 1 82 5 226 1 
19 2 84 1 294 1 362 1 88 7 266 1 377 2 33 1 78 1 341 2 15 2 246 6 218 1 81 2 18 1 82 5 226 1 
17 1 320 1 252 1 
358 1 17 1 161 2 
104 2 11 2 190 1 245 1 107 2 175 2 312 2 27 2 
302 1 1 1 190 1 21 2 213 1 170 1 27 2 56 1 32 1 120 1 59 1 215 1 37 1 288 1 175 3 95 1 312 2 177 1 237 1 263 1 238 2 70 1 11 3 97 2 264 1 179 2 297 1 376 1 104 2 76 1 323 1 245 1 106 2 16 1 107 2 186 1 110 1 
104 1 11 1 366 1 318 1 245 1 107 1 175 1 89 1 312 1 27 1 
239 1 11 1 148 1 320 1 89 1 117 1 336 1 255 1 329 1 142 1 17 1 107 1 175 1 332 1 
239 1 11 1 148 1 320 1 89 1 27 1 255 1 329 2 104 1 142 2 17 1 107 1 175 1 332 1 312 1 
211 1 329 1 142 1 38 1 225 1 
211 1 329 2 303 1 142 2 305 1 17 1 320 1 225 1 
329 1 142 1 225 1 
211 1 11 1 318 1 89 1 27 1 329 1 257 1 104 1 366 1 142 1 245 1 107 1 175 1 312 1 
17 1 
211 1 329 2 303 1 349 1 142 2 17 1 320 1 225 1 
211 2 128 1 292 1 303 1 96 2 2 1 320 1 223 1 75 1 329 5 57 2 232 1 259 1 142 5 172 2 17 1 143 1 225 2 262 1 
190 1 252 1 
11 2 190 2 27 1 322 1 104 1 260 1 107 2 175 2 312 1 
269 1 141 1 14 1 
238 1 1 1 11 1 190 1 97 1 264 1 179 1 150 1 376 1 323 1 59 1 37 1 288 1 175 1 95 1 110 1 
104 3 11 3 190 1 107 3 175 3 312 3 27 1 111 1 
104 1 11 1 366 1 107 1 175 1 89 1 312 1 
322 1 104 1 11 1 260 1 107 1 175 1 89 1 312 1 27 1 
302 1 1 1 190 1 21 1 148 1 89 1 170 1 27 2 56 1 255 1 329 1 32 1 120 1 59 1 215 1 37 1 288 1 95 1 125 1 175 4 332 1 312 3 64 1 237 1 263 1 238 1 239 1 11 4 97 1 264 1 373 1 179 1 376 1 322 1 104 3 76 1 323 1 142 1 245 1 106 2 16 1 107 3 110 1 111 1 
336 1 104 1 11 2 190 1 107 2 175 2 136 1 312 1 111 1 
239 1 11 3 148 1 373 1 89 1 192 1 27 1 322 1 255 1 329 1 104 3 142 1 17 1 107 3 175 3 332 1 312 3 64 1 111 2 
11 2 27 1 322 1 104 2 269 1 141 1 107 2 175 2 312 2 111 1 
238 1 1 1 11 1 190 1 97 1 264 1 179 1 376 1 323 1 59 1 37 1 288 1 175 1 95 1 110 1 
238 1 10 1 11 1 190 1 97 1 264 1 179 1 133 1 376 1 323 1 59 1 37 1 288 1 175 1 110 1 
210 1 145 1 21 4 170 2 56 1 197 1 32 1 120 1 151 1 215 1 60 1 93 1 153 1 368 1 176 1 263 1 14 2 139 1 269 2 141 2 380 1 106 2 16 1 186 2 
104 1 11 1 148 1 107 1 175 1 89 1 312 1 282 1 
238 1 1 1 11 2 97 1 264 1 179 1 376 1 104 1 269 1 59 1 323 1 37 1 288 1 107 1 175 2 95 1 312 1 110 1 64 1 111 1 
11 5 190 1 135 1 136 1 27 1 322 1 336 1 104 4 34 1 107 5 175 5 312 4 64 1 111 2 
104 2 11 2 366 1 107 2 175 2 89 1 312 2 282 1 
8 1 62 1 
8 1 62 1 
272 1 354 1 
272 1 354 1 
272 1 354 1 
224 1 8 1 62 1 
224 1 8 1 62 1 
224 1 8 1 62 1 
8 1 62 1 178 1 
381 1 8 1 62 1 
206 1 272 1 354 1 8 2 62 2 375 1 291 1 
8 1 62 1 178 1 
8 1 62 1 178 1 
68 2 328 3 102 1 23 2 116 1 281 1 180 1 329 2 284 1 351 2 258 1 206 1 287 1 164 2 142 2 17 1 62 2 8 2 370 2 
190 1 328 1 191 1 23 1 329 1 284 1 351 1 175 2 8 1 62 1 312 2 311 1 68 1 11 2 100 1 134 1 299 1 104 2 244 1 105 1 164 1 142 1 381 1 107 2 
372 1 79 1 101 1 
79 1 235 1 101 1 
52 1 30 1 283 1 372 2 79 3 235 1 
335 1 52 1 283 1 372 1 79 2 235 1 
52 1 283 2 372 1 79 2 235 1 
210 1 211 4 273 1 145 1 303 1 191 1 28 2 29 1 57 1 329 5 151 1 172 1 259 3 93 1 39 1 221 1 292 2 96 1 358 1 320 1 161 3 223 1 244 1 77 2 270 1 105 1 142 5 108 1 17 2 359 1 109 2 225 1 
210 3 211 7 273 2 227 1 87 1 145 3 303 1 169 5 348 1 28 6 329 9 57 2 151 3 7 1 172 2 259 8 93 3 38 5 126 1 262 1 39 3 221 1 292 6 96 2 358 3 320 1 161 9 223 1 163 1 244 4 270 2 142 9 17 5 109 6 225 6 
211 2 210 1 273 1 145 1 28 2 29 1 57 1 329 3 151 1 172 1 259 3 93 1 262 1 39 1 292 2 96 1 358 2 320 1 161 4 244 1 270 1 77 1 142 3 17 3 108 1 109 2 
211 3 210 2 273 1 227 1 87 1 145 2 28 4 29 1 57 1 329 4 151 2 7 1 172 1 259 5 93 2 262 1 39 2 292 4 96 1 358 3 320 1 161 7 244 2 270 1 77 2 142 4 17 4 108 1 109 4 
327 1 264 1 252 1 
264 1 122 1 
194 1 
264 1 288 1 
327 2 230 1 59 1 264 3 288 1 306 1 
59 1 264 1 288 1 
264 1 46 1 
145 1 293 1 21 7 99 1 347 1 170 3 103 1 73 1 307 1 365 1 35 2 340 1 380 2 207 1 93 1 186 4 176 3 
145 1 293 1 21 7 99 1 347 1 170 3 103 1 73 1 307 1 365 1 35 2 340 1 380 2 207 1 93 1 186 4 176 3 
145 1 293 1 21 7 99 1 347 1 170 3 103 1 321 1 73 1 307 1 365 1 35 2 340 1 380 2 207 1 93 1 186 4 176 3 
210 3 0 1 145 4 21 31 347 1 25 3 170 15 307 2 56 1 32 1 151 3 365 2 35 3 200 1 93 4 176 10 39 3 263 1 293 1 371 1 41 1 13 1 98 1 99 2 72 4 103 5 73 1 241 1 340 2 207 1 380 5 106 2 16 1 186 16 
145 1 21 9 277 1 347 1 170 4 91 1 56 2 307 1 32 2 35 2 365 1 93 1 176 4 263 2 41 1 293 1 99 1 103 1 340 1 380 3 207 1 106 4 16 2 186 5 
19 1 362 1 149 1 88 2 30 1 217 1 124 1 235 1 238 1 220 1 67 1 129 1 372 1 97 1 319 1 179 1 101 1 377 1 323 1 339 1 324 1 183 1 79 2 246 2 343 1 166 1 81 1 82 1 226 1 110 1 
19 1 147 1 149 1 88 3 30 1 217 1 219 1 235 1 369 1 238 1 220 1 67 1 129 1 372 1 97 1 319 1 179 1 101 1 377 1 323 1 324 1 183 1 79 2 246 3 343 1 166 1 81 1 226 1 82 2 110 1 
220 1 238 1 67 1 129 1 372 1 97 1 179 1 149 1 101 1 88 2 30 1 323 1 324 1 79 2 183 1 217 1 246 2 235 1 219 1 369 1 166 1 81 1 110 1 82 2 226 1 
19 1 238 1 67 2 97 1 158 1 264 1 147 1 179 1 159 1 88 1 278 1 376 1 181 1 377 1 364 1 323 1 36 1 183 2 288 1 246 1 166 2 110 1 226 2 
19 1 362 1 88 1 30 1 217 1 219 1 235 1 238 1 220 1 67 1 372 1 97 1 319 1 179 1 101 1 377 1 323 1 339 1 324 1 183 1 79 2 246 1 343 1 166 1 226 1 110 1 
184 1 
303 3 168 2 54 1 115 1 117 1 255 1 57 1 259 2 172 1 175 1 313 1 66 1 11 1 358 2 264 1 179 2 320 1 181 1 223 1 323 1 142 5 271 1 80 1 17 2 360 2 225 6 273 1 188 1 148 1 89 1 364 1 329 5 231 1 92 2 288 1 331 1 332 1 238 2 239 1 292 2 333 2 96 1 97 2 44 2 161 2 242 2 376 2 336 1 379 1 301 2 107 1 344 1 50 4 110 1 51 1 
188 1 239 1 303 1 11 1 148 1 54 1 89 1 117 1 336 1 255 1 329 3 349 1 379 1 142 3 80 1 107 1 175 1 360 1 50 2 332 1 225 2 51 1 
188 1 303 1 148 1 54 1 89 1 117 1 255 1 329 3 349 1 175 1 332 1 239 1 333 1 11 1 320 1 336 1 379 1 142 3 80 1 107 1 17 1 50 3 225 1 51 1 
188 1 239 1 303 1 333 1 11 1 148 1 320 1 54 1 89 1 242 1 117 1 336 1 255 1 329 3 349 1 379 1 142 3 80 1 17 1 107 1 175 1 360 1 50 3 332 1 225 2 51 1 
303 3 168 2 54 1 117 1 255 1 57 1 349 1 172 1 259 1 175 1 313 1 11 1 358 2 320 5 223 1 142 5 80 1 17 5 360 4 225 7 188 1 85 1 148 1 89 1 193 1 329 5 92 2 331 1 234 1 332 1 239 1 292 1 333 4 96 1 202 1 44 2 242 4 336 1 379 1 208 1 107 1 301 2 50 6 51 1 
303 2 168 2 54 1 117 1 255 1 57 1 172 1 259 1 175 1 313 1 11 1 358 2 320 1 223 1 142 4 80 1 17 2 360 2 225 4 188 1 148 1 89 1 329 4 231 1 92 2 331 1 332 1 239 1 292 1 96 1 333 2 44 2 161 2 242 2 336 1 379 1 107 1 301 2 50 4 51 1 
188 1 303 2 168 2 148 1 54 1 89 1 117 1 255 1 57 1 329 4 92 2 259 1 172 1 331 1 234 1 175 1 332 1 313 1 239 1 292 1 333 2 96 1 11 1 358 2 320 1 202 1 44 2 242 2 336 1 223 1 379 1 142 4 208 1 80 1 17 1 301 2 107 1 360 2 50 4 225 4 51 1 
188 1 303 2 168 2 148 1 54 1 89 1 117 1 255 1 57 1 329 4 92 2 259 1 172 1 331 1 234 1 175 1 332 1 313 1 239 1 292 1 333 2 96 1 11 1 358 2 320 1 202 1 44 2 242 2 336 1 223 1 379 1 142 4 208 1 80 1 17 1 301 2 107 1 360 2 50 4 225 4 51 1 
188 1 303 2 148 1 54 1 89 1 117 1 255 1 57 1 329 4 350 1 92 2 259 1 172 1 94 2 234 1 175 1 332 1 313 1 239 1 292 1 333 2 356 1 96 1 11 1 320 1 298 1 161 2 242 2 336 1 223 1 379 1 142 4 80 1 17 1 301 2 107 1 360 2 50 4 383 2 225 4 51 1 
188 1 303 2 168 2 148 1 54 1 89 1 193 1 117 1 255 1 57 1 329 4 92 2 259 1 172 1 331 1 234 1 175 1 332 1 313 1 239 1 292 1 96 1 333 3 11 1 358 2 320 1 202 1 44 2 242 3 223 1 336 1 379 1 208 1 142 4 80 1 17 1 301 2 107 1 50 5 360 3 51 1 225 5 
188 1 303 2 168 2 148 1 54 1 89 1 193 1 117 1 255 1 57 1 329 4 92 2 259 1 172 1 331 1 234 1 175 1 332 1 313 1 239 1 292 1 96 1 333 3 11 1 358 2 320 1 202 1 44 2 242 3 223 1 336 1 379 1 208 1 142 4 80 1 17 1 301 2 107 1 50 5 360 3 51 1 225 5 
188 1 303 2 148 1 54 1 89 1 117 1 255 1 57 1 329 4 231 1 92 2 259 1 172 1 94 2 175 1 332 1 313 1 239 1 292 1 333 2 96 1 11 1 320 1 298 1 161 2 242 2 223 1 336 1 379 1 142 4 80 1 17 1 301 2 107 1 360 2 50 4 383 2 225 4 51 1 
145 1 21 6 190 2 347 1 252 1 170 3 56 1 307 1 32 1 120 1 365 1 215 1 35 1 60 1 93 1 176 2 263 1 293 1 14 1 269 1 141 1 207 1 380 2 106 2 16 1 186 3 
210 2 0 1 145 2 190 1 21 14 170 6 214 1 280 1 25 3 56 2 32 2 120 2 151 1 215 1 200 1 93 1 236 1 176 2 177 1 39 2 263 2 72 3 334 1 103 1 14 11 48 1 76 1 269 11 380 1 141 4 106 4 16 2 186 8 
20 1 1 1 190 1 21 2 150 1 170 1 56 1 120 1 32 1 59 1 215 1 37 1 288 1 95 1 175 2 236 1 312 1 64 1 177 1 263 1 238 1 11 2 97 1 12 1 264 1 179 1 71 1 376 1 104 1 323 1 76 1 141 1 16 1 106 2 107 1 186 1 110 1 111 1 
210 2 302 2 1 2 347 1 170 10 307 1 56 3 120 3 59 2 215 3 175 3 176 5 312 1 177 1 64 1 263 3 11 3 131 2 264 2 179 1 14 7 76 1 323 2 269 7 141 7 16 3 186 10 83 2 145 3 190 2 21 20 32 3 151 2 35 1 365 1 37 2 367 2 288 2 93 3 95 2 236 1 39 2 238 1 293 1 156 1 97 1 201 1 103 1 376 1 104 1 207 1 380 4 106 6 107 1 167 2 110 2 111 1 
144 1 21 2 213 2 170 1 56 2 364 1 32 2 120 2 215 2 60 1 152 1 288 2 124 1 219 1 175 1 312 1 177 1 263 2 238 8 357 1 11 1 97 7 264 3 179 8 160 1 376 2 204 1 181 1 182 1 338 1 104 1 323 2 76 1 106 4 16 2 107 1 186 1 110 2 111 1 
210 1 145 1 21 3 170 2 27 1 56 1 256 1 32 1 120 1 151 1 215 1 93 1 175 1 236 1 176 1 312 1 39 1 263 1 11 1 14 1 322 1 104 1 269 1 380 1 141 1 106 2 16 1 107 1 186 1 
263 1 210 1 145 1 21 2 103 1 14 1 56 1 120 1 32 1 269 1 215 1 141 1 60 1 16 1 106 2 153 1 186 2 176 1 
263 1 21 2 14 1 170 2 56 1 120 1 32 1 139 1 269 1 151 1 215 1 380 1 141 1 60 1 16 1 106 2 93 1 176 1 
263 1 210 1 145 1 21 4 170 2 103 1 14 2 56 1 120 1 32 1 151 1 269 2 215 1 380 1 141 2 60 1 93 1 16 1 106 2 186 2 176 2 39 1 
263 1 210 1 145 1 21 2 103 1 14 1 56 1 120 1 32 1 269 1 215 1 141 1 152 1 16 1 106 2 153 1 186 2 176 1 
263 1 21 2 14 1 170 2 56 1 120 1 32 1 139 1 269 1 151 1 215 1 380 1 141 1 152 1 16 1 106 2 93 1 176 1 
263 1 210 1 145 1 21 4 170 2 103 1 14 2 56 1 120 1 32 1 151 1 269 2 215 1 380 1 141 2 93 1 152 1 16 1 106 2 186 2 176 2 39 1 
263 1 210 1 145 1 21 4 170 2 103 1 14 2 56 1 120 1 32 1 151 1 269 2 215 1 380 1 141 2 93 1 16 1 106 2 186 2 176 2 39 1 
302 1 1 1 190 1 21 2 170 1 56 1 120 1 32 1 59 1 215 1 37 1 288 1 95 1 175 1 177 1 263 1 238 1 11 1 97 1 264 1 179 1 376 1 323 1 76 1 16 1 106 2 186 1 110 1 
190 1 21 2 170 1 56 1 120 1 32 1 59 1 215 1 37 1 288 1 175 1 154 1 177 1 263 1 238 1 10 1 11 1 97 1 264 1 179 1 133 1 376 1 323 1 76 1 16 1 106 2 186 1 110 1 
263 1 210 1 145 1 21 4 170 2 103 1 14 2 56 1 120 1 32 1 151 1 269 2 215 1 380 1 141 2 93 1 16 1 106 2 236 1 186 2 176 2 39 1 
210 1 302 1 145 1 1 1 21 4 170 2 56 1 120 1 32 1 151 1 59 1 215 1 37 1 93 1 288 1 124 1 95 1 175 1 176 2 39 1 263 1 238 1 11 1 131 1 97 1 264 1 179 1 103 1 14 2 269 2 323 1 380 1 141 2 16 1 106 2 186 2 110 1 
210 1 145 1 21 3 3 1 170 1 27 1 56 1 32 1 120 1 151 1 215 1 93 1 175 1 236 1 176 1 312 1 39 1 263 1 11 1 103 1 14 1 322 1 104 1 269 1 141 1 106 2 16 1 107 1 186 2 
187 1 210 3 274 1 0 1 145 3 21 19 277 1 24 1 170 10 25 1 56 2 32 2 151 3 200 1 123 1 93 3 290 1 176 6 39 3 263 2 155 1 296 2 72 2 45 1 103 3 380 3 106 4 16 2 165 2 186 9 
187 1 210 3 274 1 0 2 145 3 229 1 21 26 346 1 277 1 170 12 25 2 56 3 32 3 286 1 151 2 123 1 93 2 176 4 290 2 39 3 263 3 41 2 155 2 296 1 203 1 72 2 103 2 137 1 140 1 380 2 106 6 16 3 165 4 186 14 
187 1 210 4 274 1 0 3 145 5 229 1 21 41 346 1 277 1 347 1 24 1 170 21 25 3 307 1 56 3 32 3 286 1 151 4 35 1 365 1 200 1 123 1 93 5 290 2 176 8 39 4 263 3 293 1 41 1 155 1 296 1 203 1 72 4 103 4 137 1 140 1 207 1 380 4 106 6 16 3 49 1 165 4 186 20 
187 1 210 4 274 1 0 3 145 5 229 1 21 38 346 1 277 1 347 1 24 1 170 18 25 3 307 1 56 4 32 4 286 1 151 3 35 1 365 1 200 1 123 1 93 4 290 2 176 7 39 4 263 4 293 1 41 2 155 1 296 1 203 1 72 4 103 3 137 1 140 1 207 1 380 4 106 8 16 4 49 1 165 4 186 20 
187 1 210 7 274 1 0 2 145 8 229 1 21 52 346 1 277 1 347 1 170 25 25 4 307 1 56 2 32 2 286 1 151 7 35 1 365 1 200 2 123 1 93 8 290 1 176 14 39 7 263 2 293 1 41 1 155 1 296 1 203 1 72 4 103 7 137 1 48 2 140 1 207 1 380 7 106 4 16 2 165 4 186 27 
68 1 351 1 258 1 206 1 164 1 353 1 8 1 62 1 23 1 281 1 
381 1 134 1 
74 1 68 1 295 1 351 1 114 1 164 1 8 1 62 1 23 1 
68 1 328 2 102 1 23 1 116 1 281 1 180 1 329 1 284 1 351 1 258 1 206 1 142 1 164 1 17 1 62 1 8 1 370 1 
68 1 328 2 102 1 23 1 116 1 281 1 180 1 329 1 284 1 351 1 258 1 206 1 142 1 164 1 17 1 62 1 8 1 370 1 
68 1 328 2 102 1 23 1 116 1 281 1 180 1 329 1 284 1 351 1 258 1 206 1 142 1 164 1 17 1 62 1 8 1 370 1 
224 1 291 1 40 1 
224 1 291 1 40 1 
119 1 178 1 
119 1 291 1 178 1 
100 1 299 1 
211 1 190 1 328 1 191 1 23 1 329 1 351 1 175 2 8 1 62 1 370 1 311 1 312 2 68 1 11 2 132 1 100 1 134 1 299 1 180 1 244 1 104 2 105 1 142 1 164 1 381 1 107 2 
224 1 40 1 
119 1 291 1 178 1 
144 1 113 1 21 2 212 1 213 2 170 1 56 1 196 1 120 1 32 1 215 1 199 1 288 1 174 1 175 2 236 1 177 1 263 1 238 2 11 2 97 2 264 1 179 2 160 1 323 1 76 1 16 1 106 2 107 2 186 1 110 1 
238 2 220 1 146 1 250 1 372 1 97 2 179 2 101 1 30 1 323 1 325 1 324 1 79 2 183 1 124 1 235 1 219 1 343 1 110 1 
238 1 220 1 275 1 250 1 372 1 97 1 179 1 101 1 30 1 323 1 324 1 79 2 183 1 235 1 219 1 343 1 110 1 
238 1 146 1 189 1 97 1 158 1 264 1 179 1 376 1 181 1 364 1 323 1 183 1 288 1 110 1 
238 1 220 1 146 1 250 1 372 1 97 1 179 1 101 1 30 1 323 1 325 1 324 1 79 2 183 1 235 1 219 1 343 1 110 1 
326 1 
292 1 232 1 259 1 2 1 17 1 320 1 252 1 
303 1 168 1 57 1 329 1 259 1 172 1 331 1 292 1 96 1 358 1 320 1 44 1 161 1 223 1 142 1 17 2 225 1 
210 2 303 3 53 2 2 1 4 2 57 4 59 3 259 9 172 4 122 3 310 1 124 1 127 2 261 2 66 1 264 10 358 6 179 3 320 2 223 4 323 4 142 5 17 8 225 5 83 2 327 2 273 2 145 2 363 1 90 2 195 1 28 6 230 1 329 5 330 2 151 2 232 1 233 1 288 3 93 2 39 2 238 3 239 2 292 8 96 4 97 3 161 12 376 1 46 2 337 1 247 2 248 3 109 6 110 3 
210 2 273 1 86 1 303 1 0 1 145 2 346 1 25 1 28 5 329 1 57 2 286 1 330 2 151 2 259 8 172 2 93 2 39 2 66 1 317 1 292 5 96 2 358 3 203 1 320 2 72 1 161 6 137 1 223 2 140 1 142 1 17 5 248 1 109 5 225 1 
361 1 145 2 89 1 27 1 307 1 57 1 329 1 257 1 330 2 365 1 366 1 172 1 259 2 93 1 175 1 312 1 293 1 292 2 96 1 11 1 318 1 223 1 104 1 208 1 142 1 245 1 107 1 248 1 
223 1 57 1 292 1 96 1 232 1 259 1 172 1 2 1 17 1 320 1 
210 2 145 2 292 5 358 5 161 10 28 5 330 2 151 2 259 5 93 2 17 5 248 1 109 5 83 1 39 2 
329 1 303 1 142 1 17 1 320 1 225 1 
273 2 303 2 195 2 364 1 57 2 329 3 172 2 233 1 259 2 288 1 61 1 262 1 66 2 238 4 316 1 292 2 96 2 97 4 264 1 179 4 376 2 181 1 223 1 323 1 142 3 271 1 344 1 110 1 225 4 
302 1 1 1 190 1 21 1 170 1 27 2 56 1 32 1 120 1 59 1 215 1 37 1 288 1 175 3 95 1 312 2 237 1 263 1 238 1 11 3 97 1 264 1 179 1 376 1 104 2 76 1 323 1 245 1 106 2 16 1 107 2 110 1 
66 1 273 1 292 2 96 1 358 2 320 2 161 4 28 2 223 1 57 1 35 1 172 1 259 1 17 4 109 2 
249 1 351 1 164 1 
249 1 351 1 164 1 
249 1 351 1 164 1 
351 1 164 1 355 1 
351 1 258 1 6 1 164 1 299 1 
351 1 164 1 355 1 
351 1 164 1 355 1 
351 1 164 1 
8 1 62 1 
263 2 145 1 293 1 41 1 21 8 347 1 170 4 103 1 56 2 307 1 32 2 35 1 365 1 380 2 207 1 93 1 16 2 106 4 186 4 176 3 
293 1 145 1 21 6 252 1 347 1 170 3 307 1 35 1 365 1 207 1 380 2 93 1 186 3 176 2 
263 1 210 1 145 1 21 4 170 2 103 1 56 1 32 1 151 1 300 1 380 1 93 1 16 1 106 2 186 2 176 2 39 1 
210 1 0 1 145 1 21 7 72 2 170 4 25 1 103 1 151 1 380 1 200 1 93 1 186 3 176 2 39 1 
210 2 145 3 21 23 347 1 25 2 170 12 214 1 307 2 56 2 32 2 151 2 35 1 365 2 200 1 93 3 176 9 39 2 263 2 293 1 41 2 72 2 103 4 47 1 48 1 207 1 380 5 16 2 106 4 186 11 
21 1 72 1 170 1 
21 1 186 1 25 1 
263 1 210 1 145 1 21 6 170 3 103 2 56 1 32 1 300 1 151 1 380 2 106 2 16 1 93 1 186 3 176 4 83 1 39 1 
210 2 0 1 145 2 21 12 346 1 277 1 25 1 170 6 56 1 32 1 151 2 286 1 93 2 176 2 39 2 263 1 203 1 72 1 103 1 137 1 140 1 380 1 106 2 16 1 186 6 
293 1 145 1 21 6 170 3 103 1 307 1 365 1 380 1 93 1 186 3 176 2 
263 1 41 1 21 3 347 1 103 1 170 2 307 1 47 1 56 1 32 1 365 1 380 1 207 1 16 1 106 2 186 1 176 2 
263 1 361 1 293 1 145 2 21 10 277 1 103 2 170 5 56 1 307 2 32 1 365 2 380 3 106 2 16 1 93 2 186 5 176 5 
263 1 210 1 145 1 21 2 277 1 103 1 56 1 32 1 16 1 106 2 186 2 176 1 
263 1 210 1 145 1 21 4 277 1 170 2 103 1 56 1 32 1 151 1 380 1 93 1 16 1 106 2 186 2 176 2 39 1 
263 3 41 1 21 3 277 1 24 1 170 2 103 1 47 1 56 3 307 1 32 3 365 1 380 1 16 3 106 6 186 1 176 2 
210 3 0 1 145 5 21 34 277 1 347 1 24 1 170 18 25 3 307 3 56 5 32 5 151 3 35 1 365 3 200 1 93 5 176 12 39 3 263 5 293 2 41 2 13 1 98 1 72 4 103 5 241 1 47 1 300 1 207 1 380 7 106 10 16 5 186 16 
145 1 0 1 21 8 277 1 347 1 25 1 170 4 56 1 307 1 32 1 35 1 365 1 93 1 176 2 263 1 293 1 203 1 72 1 207 1 380 2 106 2 16 1 186 4 
210 1 0 1 145 2 21 11 277 1 347 1 170 5 25 1 307 1 56 2 32 2 35 1 365 1 200 1 93 1 176 3 39 1 263 2 293 1 203 1 72 2 103 1 300 1 380 2 207 1 106 4 16 2 186 6 
210 2 0 1 145 3 21 19 346 1 277 1 347 1 25 1 170 10 307 1 56 3 32 3 286 1 151 2 35 1 365 1 93 3 176 4 39 2 263 3 293 1 41 1 203 1 72 1 103 1 137 1 300 1 140 1 207 1 380 3 106 6 16 3 186 9 
210 2 0 1 145 3 21 17 346 1 277 1 347 1 25 1 170 7 307 1 56 3 32 3 151 1 286 1 35 1 365 1 93 2 176 5 39 2 263 3 293 1 41 1 203 1 72 1 103 2 137 1 300 1 140 1 207 1 380 3 106 6 16 3 186 10 
145 1 0 1 21 8 277 1 347 1 25 1 170 4 56 1 307 1 32 1 35 1 365 1 93 1 176 2 263 1 293 1 203 1 72 1 207 1 380 2 106 2 16 1 186 4 
210 2 0 1 145 2 21 12 346 1 277 1 25 1 170 6 56 1 32 1 151 2 286 1 93 2 176 2 39 2 263 1 203 1 72 1 103 1 137 1 140 1 380 1 106 2 16 1 186 6 
210 2 0 1 145 3 21 18 346 1 277 1 347 1 170 8 25 1 307 1 56 4 32 4 286 1 151 1 35 1 365 1 93 2 176 5 39 2 263 4 293 1 41 2 203 1 72 1 103 2 137 1 300 1 140 1 207 1 380 3 106 8 16 4 186 10 
210 3 0 1 145 3 21 16 346 1 277 1 24 1 170 7 25 1 56 4 32 4 286 1 151 2 93 2 176 6 39 3 263 4 41 2 203 1 72 1 103 3 137 1 140 1 380 3 106 8 16 4 186 9 
293 1 145 1 21 7 347 1 170 4 103 3 307 3 365 3 207 2 380 3 93 1 186 3 176 6 
210 2 0 1 145 3 21 18 346 1 277 1 347 1 24 1 170 8 25 1 307 1 56 4 32 4 286 1 151 1 35 1 365 1 93 2 176 4 39 2 263 4 293 1 41 2 203 1 72 1 103 1 137 1 140 1 207 1 380 3 106 8 16 4 186 10 
336 1 11 1 190 1 251 1 107 1 175 1 136 1 
190 1 157 1 42 1 240 1 89 1 253 1 5 1 121 1 
181 1 364 1 238 1 323 1 97 1 264 1 288 1 179 1 252 1 110 1 376 1 
238 1 1 1 11 2 190 1 97 1 264 1 179 1 376 1 104 1 59 1 323 1 37 1 288 1 107 1 175 2 312 1 110 1 111 1 
1 1 190 1 148 1 53 1 89 1 195 1 59 2 37 1 288 2 175 2 332 1 312 1 238 1 11 2 97 1 264 3 179 1 46 1 104 2 323 1 107 2 110 1 111 1 
190 1 148 1 53 1 89 1 195 1 59 2 37 1 216 1 288 2 175 2 332 1 312 1 238 2 10 1 11 2 97 2 264 3 179 2 46 1 104 2 323 1 107 2 110 1 111 1 
327 1 53 1 195 1 118 1 329 2 59 1 216 1 122 1 288 1 238 3 239 1 97 3 264 4 43 1 179 3 320 1 46 1 376 1 323 1 142 2 17 1 110 1 225 1 
327 1 238 3 239 1 97 3 53 1 264 4 179 3 320 1 376 1 46 1 195 1 329 2 59 1 323 1 142 2 216 1 122 1 288 1 17 1 127 1 225 1 110 1 
238 1 338 1 323 1 97 1 179 1 110 1 
144 1 315 1 238 7 357 1 97 6 213 1 264 3 179 7 376 2 204 1 230 1 182 1 378 1 338 1 59 1 323 3 288 2 124 1 219 1 110 2 112 1 
302 1 1 1 347 1 170 3 56 2 307 1 120 2 59 1 215 2 124 1 175 2 312 1 176 2 263 2 11 2 131 1 264 1 179 1 14 1 323 1 269 1 141 1 16 2 186 3 145 1 21 6 190 2 32 2 199 1 365 1 35 1 37 1 288 1 93 1 95 1 236 1 238 1 293 1 97 1 104 1 207 1 380 2 106 4 107 1 167 1 110 1 111 1 
211 1 327 1 303 1 2 1 90 1 57 2 329 3 4 1 232 1 259 1 172 2 233 1 122 1 127 1 238 1 239 1 292 1 96 2 97 1 264 2 179 1 320 1 376 1 223 2 142 3 17 1 247 1 225 2 
327 1 238 2 97 2 264 2 179 2 363 1 230 1 338 1 59 1 323 2 288 1 124 1 110 1 
238 4 130 1 97 4 264 1 179 4 376 1 181 1 364 1 323 1 216 1 288 1 124 1 110 1 
238 2 228 1 97 2 264 1 179 2 265 1 195 1 378 1 31 1 59 1 323 2 288 1 110 1 112 1 
220 1 238 1 323 1 97 1 79 1 179 1 235 1 101 1 110 1 376 1 
144 1 238 2 97 2 212 1 264 1 179 2 323 1 288 1 124 1 219 1 110 1 
144 1 238 5 130 1 357 1 97 4 264 3 179 5 195 1 376 1 181 1 204 1 364 1 323 2 288 2 124 1 110 2 
144 1 238 5 130 1 97 4 264 3 179 5 195 1 376 1 181 1 204 1 364 1 323 2 382 1 288 2 124 1 110 2 
238 1 10 1 11 2 190 1 97 1 264 1 179 1 376 1 104 1 59 1 323 1 37 1 288 1 107 1 175 2 312 1 110 1 111 1 
315 1 238 1 97 1 264 1 179 1 195 1 230 1 378 1 59 1 323 2 288 1 110 1 112 1 
254 1 69 1 190 1 209 1 374 1 
211 1 239 1 69 2 190 1 148 1 373 1 320 1 89 1 374 2 254 2 138 1 243 1 255 1 329 2 268 1 142 2 209 1 17 1 332 1 
254 1 196 1 113 1 69 1 11 1 209 1 107 1 175 1 174 1 
243 1 268 1 209 1 
129 1 149 1 252 1 81 1 
377 1 19 1 129 1 246 1 149 1 88 1 81 1 
246 1 166 1 226 1 
377 1 19 1 9 1 58 2 129 1 309 1 362 1 342 1 246 3 149 1 88 3 81 1 
377 1 19 1 246 1 88 2 266 1 82 1 
19 1 372 1 362 1 88 1 101 1 377 1 171 1 79 1 15 1 246 1 81 1 
377 1 19 1 362 1 246 1 149 1 88 1 81 1 
377 1 19 1 129 1 362 1 246 1 149 2 88 1 
19 2 362 1 304 1 149 1 88 2 55 1 377 2 246 2 81 1 63 1 
19 1 129 1 294 1 362 1 149 1 88 3 377 1 33 1 341 1 15 1 246 3 81 2 82 2 
19 1 129 1 372 1 362 1 149 1 88 2 101 1 377 1 205 1 30 1 79 2 246 2 235 1 81 1 82 1 
377 1 19 1 198 1 362 1 246 1 88 2 266 1 82 1 
377 1 19 1 129 1 362 1 246 1 149 1 88 1 81 1 
19 1 9 1 129 2 149 2 88 4 377 1 58 1 309 1 341 1 352 1 15 1 246 4 81 3 82 2 
345 1 308 1 377 1 19 1 129 1 362 1 246 2 149 1 218 1 88 2 81 1 82 1 
19 1 9 2 129 1 362 1 149 1 88 3 26 1 377 1 58 2 309 1 246 3 81 1 
314 1 285 1 173 2 81 2 
377 1 19 1 362 1 246 1 185 1 88 1 
377 1 19 1 129 1 294 1 362 1 246 2 149 1 88 2 81 1 82 1 
279 1 
377 1 19 1 129 1 362 1 246 1 149 1 88 1 81 1 
19 1 129 1 294 1 362 1 149 1 88 3 377 1 58 1 246 3 81 1 82 1 
341 1 352 1 15 1 81 1 
149 1 81 1 

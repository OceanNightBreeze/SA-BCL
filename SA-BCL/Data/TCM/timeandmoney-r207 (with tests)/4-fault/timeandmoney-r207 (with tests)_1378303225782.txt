#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 2 27 1 353 3 148 4 292 6 2 1 336 1 194 1 32 1 276 1 358 2 359 1 197 1 131 2 317 2 153 9 368 2 340 1 14 5 233 1 73 2 17 1 186 9 344 1 188 1 161 1 308 2 189 1 
326 2 27 1 353 3 148 4 292 6 2 1 336 1 194 1 32 1 276 1 358 2 359 1 197 1 131 2 317 2 153 9 368 2 340 1 14 5 233 1 73 2 17 1 186 9 344 1 188 1 161 1 308 2 189 1 
326 2 27 1 353 4 148 5 292 7 2 1 336 1 194 1 32 1 276 1 358 2 359 1 197 1 131 2 317 2 153 10 368 2 340 1 14 6 233 1 73 2 17 1 186 10 344 1 188 1 161 1 308 2 189 1 
326 2 27 1 353 2 148 3 292 4 2 1 336 1 194 1 32 1 276 1 358 2 197 1 131 2 317 2 153 7 368 1 340 1 14 4 233 1 73 2 17 1 186 7 344 1 188 1 161 1 308 2 189 1 
368 2 340 1 14 3 353 1 148 2 292 3 73 1 186 4 344 1 194 1 32 1 358 1 359 1 131 1 161 1 317 1 308 1 153 4 
326 1 95 1 340 1 27 1 14 1 186 2 344 1 32 1 358 1 34 1 197 1 131 1 317 1 308 1 268 1 153 2 
326 1 340 1 14 2 353 1 148 1 292 1 2 1 186 3 344 1 32 1 358 2 131 2 153 3 
326 1 143 1 353 3 148 4 292 7 2 1 194 1 32 1 358 2 359 1 131 2 317 1 225 1 153 9 368 2 340 1 14 5 73 1 17 1 186 9 344 1 161 1 189 1 308 1 
326 1 143 1 353 3 148 4 292 7 2 1 194 1 32 1 358 2 359 1 131 2 317 1 225 1 153 9 368 2 340 1 14 5 73 1 17 1 186 9 344 1 161 1 189 1 308 1 
54 1 378 1 59 1 
46 2 378 1 96 1 
333 2 99 2 42 1 289 2 231 2 90 1 202 2 285 2 
80 1 26 1 0 1 167 2 289 3 311 1 172 1 149 2 246 1 332 1 333 2 62 2 247 1 196 1 151 1 338 2 199 1 37 1 90 1 92 1 9 1 202 3 42 1 206 1 156 1 231 2 281 1 375 1 44 1 99 2 324 1 210 2 377 1 79 1 309 1 381 1 285 2 
333 1 99 1 42 1 289 1 183 1 231 1 77 1 263 1 202 1 285 1 
28 1 289 2 168 1 59 1 109 1 333 1 278 1 88 1 201 1 202 2 94 1 42 1 183 2 253 1 231 1 160 1 99 2 378 1 77 1 263 1 285 1 
28 1 289 2 168 1 59 1 109 1 333 2 278 1 202 2 94 2 42 1 183 2 253 1 231 2 160 2 99 2 378 1 263 1 77 1 285 2 
310 1 94 1 36 1 215 1 160 1 
310 1 94 2 378 1 59 1 363 1 215 1 217 1 160 2 
310 1 94 1 160 1 
94 1 42 1 289 1 183 1 231 1 109 1 215 1 160 1 333 1 99 1 77 1 263 1 285 1 202 1 
378 1 
310 1 94 2 236 1 378 1 59 1 215 1 217 1 160 2 
181 1 67 1 310 2 94 5 81 1 207 1 59 1 215 2 217 1 160 5 343 1 293 1 47 1 303 2 141 1 237 2 378 1 224 1 21 2 
54 1 90 1 
249 1 289 2 231 1 355 1 333 1 99 2 90 2 202 2 285 1 
294 1 18 1 128 1 
80 1 167 1 206 1 156 1 289 1 311 1 275 1 210 1 151 1 338 1 199 1 377 1 90 1 202 1 309 1 381 1 
25 1 80 1 167 1 156 1 206 1 289 2 311 1 333 1 99 1 294 1 151 1 210 1 338 1 377 1 199 1 10 1 309 1 381 1 285 1 202 2 
25 2 249 1 166 1 135 1 289 5 193 1 231 1 333 4 99 5 88 1 90 1 10 1 285 4 202 5 
333 2 99 2 289 2 223 1 183 1 77 1 202 2 285 2 
25 1 333 3 99 3 289 3 231 1 90 1 202 3 285 3 
333 1 99 1 289 1 183 1 77 1 202 1 285 1 
333 1 249 1 99 1 289 1 183 1 231 1 355 1 202 1 285 1 
0 1 289 4 149 1 332 1 333 3 247 1 62 2 5 1 151 1 338 1 199 1 10 1 202 4 249 1 206 1 156 1 253 1 160 1 119 1 210 1 309 1 79 1 25 1 80 1 26 1 167 1 28 1 168 1 311 1 172 1 220 1 278 1 90 1 92 1 94 1 42 1 183 2 231 2 281 1 375 1 44 1 99 3 377 1 285 3 381 1 
333 1 25 1 99 2 166 1 289 2 88 1 90 1 202 2 285 1 
25 2 249 1 94 1 289 3 28 1 168 1 183 1 253 1 231 1 160 1 333 3 99 3 5 1 130 1 278 1 378 1 10 1 285 3 202 3 
25 1 249 1 289 2 231 1 333 2 99 2 294 1 18 1 285 2 202 2 
80 1 167 1 206 1 156 1 289 1 311 1 210 1 151 1 338 1 199 1 377 1 90 1 202 1 381 1 309 1 
80 1 167 1 289 1 311 1 82 1 282 1 210 1 151 1 338 1 199 1 377 1 90 1 202 1 381 1 309 1 
243 1 164 1 26 1 0 1 55 1 172 1 149 4 128 2 246 2 332 2 334 1 62 2 294 2 295 1 86 1 92 1 134 1 157 1 281 1 375 1 19 1 18 2 122 1 20 1 
333 1 99 1 289 1 183 1 253 1 223 1 202 1 285 1 
351 1 87 1 
351 1 87 1 
115 1 227 1 
115 1 227 1 
115 1 227 1 
351 1 87 1 296 1 
351 1 87 1 104 1 
51 1 351 2 87 2 158 1 115 1 227 1 
351 1 87 1 296 1 
351 1 87 1 296 1 
230 1 351 1 87 1 
230 1 351 1 87 1 
230 1 351 1 87 1 
11 1 52 1 94 1 204 1 300 1 351 1 289 2 170 1 72 1 138 1 273 1 160 1 323 1 333 2 99 2 7 1 87 1 90 1 179 1 265 1 320 1 104 1 202 2 285 2 
106 1 94 2 163 2 371 1 351 2 170 2 301 1 158 1 72 2 138 1 160 2 323 3 7 2 87 2 239 1 378 1 361 1 78 1 265 2 
317 1 73 1 308 1 
95 1 317 1 308 1 
139 1 274 1 95 1 284 1 73 2 308 3 
274 1 95 1 71 1 284 1 73 1 308 2 
274 2 95 1 73 1 284 1 308 2 
191 2 310 1 147 1 312 1 59 1 330 1 215 4 217 1 150 1 195 2 357 1 295 1 175 1 179 1 320 1 181 1 94 5 300 1 134 1 96 1 342 1 160 5 46 3 303 1 47 3 258 2 141 2 122 1 237 1 378 2 20 1 21 1 
191 6 310 6 269 1 270 1 147 2 312 1 59 1 215 7 218 1 217 1 3 1 293 1 150 2 195 6 295 3 36 5 320 4 181 1 94 9 134 3 370 1 208 5 96 3 342 3 159 1 160 9 46 9 303 2 47 8 141 6 122 3 237 2 378 5 20 3 21 2 
191 2 147 1 59 1 215 2 293 1 150 1 195 2 357 1 295 1 175 1 320 1 94 3 134 1 96 2 342 1 160 3 46 4 303 1 47 3 258 1 122 1 141 2 237 1 378 3 20 1 21 1 
191 4 269 1 147 1 59 1 215 3 218 1 293 1 150 1 195 4 357 1 295 2 175 1 320 2 94 4 134 2 96 3 342 2 159 1 160 4 46 7 303 1 47 5 258 2 122 2 141 4 237 1 378 4 20 2 21 1 
321 1 54 1 309 1 
318 1 309 1 
29 1 
311 1 309 1 381 1 
379 1 309 1 
311 1 309 1 
321 2 74 1 13 1 311 1 309 3 381 1 
243 2 134 1 70 1 373 1 83 1 98 1 149 7 332 3 246 4 33 2 6 1 86 3 305 1 316 1 198 1 20 1 154 1 
243 2 134 1 70 1 373 1 83 1 98 1 149 7 332 3 246 4 33 2 6 1 86 3 305 1 316 1 198 1 20 1 154 1 
243 2 134 1 70 1 373 1 107 1 83 1 98 1 149 7 332 3 246 4 33 2 6 1 86 3 305 1 316 1 198 1 20 1 154 1 
243 5 26 1 0 1 172 1 245 1 83 2 149 31 332 15 246 16 4 1 62 2 33 3 6 5 86 10 295 3 198 1 316 2 89 1 152 1 92 1 154 2 134 4 70 1 373 1 255 1 342 3 98 2 302 3 122 3 49 1 305 1 102 1 20 4 241 4 
243 3 26 2 0 2 172 2 83 1 149 9 246 5 332 4 62 4 33 2 86 4 6 1 316 1 89 1 92 2 38 1 154 1 134 1 250 1 70 1 373 1 98 1 305 1 20 1 
326 1 80 1 127 1 167 1 292 1 32 1 358 1 131 1 338 1 64 1 317 1 153 2 228 1 203 1 95 1 340 1 14 1 117 1 73 1 234 1 186 2 139 1 344 1 210 1 259 1 261 1 376 1 377 1 211 1 308 2 
326 1 80 1 165 1 127 1 167 1 292 2 358 1 131 1 338 1 176 1 317 1 153 3 228 1 95 1 340 1 14 1 117 1 73 1 234 1 139 1 186 3 344 1 210 1 259 1 261 1 376 1 377 1 211 1 162 1 308 2 
326 1 80 1 127 1 167 1 292 2 338 1 176 1 317 1 153 2 228 1 95 1 340 1 14 1 117 1 73 1 186 2 139 1 344 1 210 1 259 1 261 1 376 1 377 1 162 1 308 2 
326 2 80 1 165 1 127 2 167 1 311 1 110 1 174 1 358 1 131 1 338 1 199 1 153 1 228 2 374 1 43 1 186 1 210 1 377 1 261 2 142 1 266 1 309 1 
326 1 228 1 95 1 80 1 167 1 127 1 117 1 73 1 234 1 139 1 186 1 32 1 358 1 210 1 259 1 131 1 64 1 338 1 377 1 376 1 176 1 261 1 211 1 317 1 308 2 153 1 
364 1 
286 2 244 1 289 1 59 2 111 2 150 1 338 2 199 2 201 1 202 1 298 2 68 1 299 2 205 1 253 1 341 1 160 5 303 1 210 2 121 1 124 1 212 1 21 1 309 1 310 6 80 1 167 2 28 1 311 1 168 1 173 2 174 1 217 3 85 2 278 1 88 1 279 1 180 1 181 1 40 4 94 5 372 1 183 1 96 2 46 2 99 1 47 2 100 1 141 2 237 1 377 1 378 3 142 1 103 1 240 2 
310 2 289 1 28 1 168 1 59 2 217 1 278 1 88 1 279 1 201 1 202 1 40 2 94 3 205 1 253 1 183 1 160 3 99 1 236 1 100 1 378 2 124 1 103 1 240 1 
40 3 94 2 205 1 28 1 289 1 168 1 183 1 253 1 59 2 160 2 111 1 99 1 100 1 278 1 378 2 88 1 124 1 279 1 201 1 103 1 202 1 
310 2 286 1 289 1 28 1 168 1 59 2 217 1 111 1 278 1 88 1 279 1 201 1 202 1 40 3 94 3 205 1 253 1 183 1 160 3 99 1 236 1 100 1 378 2 124 1 103 1 240 1 
286 4 244 1 289 2 109 1 59 4 333 1 111 3 201 1 202 2 339 1 68 1 298 2 299 2 205 1 253 1 160 5 303 1 124 1 77 1 263 1 21 1 310 7 28 1 168 1 173 2 217 3 85 2 278 1 88 1 279 1 366 1 365 1 40 5 181 1 94 5 42 1 183 2 231 1 96 2 185 1 99 2 235 1 236 1 100 1 47 1 141 1 237 1 378 4 103 1 240 4 285 1 
286 2 244 1 289 1 59 3 111 2 201 1 202 1 68 1 298 2 299 2 205 1 253 1 160 4 303 1 124 1 21 1 310 4 28 1 168 1 173 2 217 2 85 2 278 1 88 1 279 1 40 4 181 1 94 4 372 1 183 1 96 2 99 1 46 2 100 1 47 1 141 1 237 1 378 4 103 1 240 2 
310 4 286 2 244 1 289 1 28 1 168 1 59 3 173 2 217 2 111 2 85 2 278 1 88 1 279 1 201 1 365 1 202 1 339 1 40 4 181 1 298 2 68 1 299 2 94 4 205 1 253 1 183 1 96 2 185 1 160 4 99 1 47 1 303 1 100 1 141 1 237 1 378 3 124 1 103 1 240 2 21 1 
310 4 286 2 244 1 289 1 28 1 168 1 59 3 173 2 217 2 111 2 85 2 278 1 88 1 279 1 201 1 365 1 202 1 339 1 40 4 181 1 298 2 68 1 299 2 94 4 205 1 253 1 183 1 96 2 185 1 160 4 99 1 47 1 303 1 100 1 141 1 237 1 378 3 124 1 103 1 240 2 21 1 
310 4 286 2 244 1 289 1 28 1 168 1 59 3 58 1 173 2 217 2 272 2 111 2 31 1 278 1 88 1 279 1 201 1 365 1 202 1 40 4 181 1 299 2 94 4 205 1 253 1 183 1 97 1 160 4 46 2 99 1 47 1 303 1 100 1 141 1 237 1 378 3 124 1 347 2 103 1 240 2 21 1 
310 5 286 3 244 1 289 1 28 1 168 1 59 3 173 2 217 2 111 3 85 2 278 1 88 1 279 1 201 1 365 1 339 1 202 1 181 1 40 5 298 2 68 1 299 2 94 4 205 1 253 1 183 1 96 2 185 1 160 4 99 1 235 1 47 1 303 1 100 1 141 1 237 1 378 3 124 1 103 1 240 3 21 1 
310 5 286 3 244 1 289 1 28 1 168 1 59 3 173 2 217 2 111 3 85 2 278 1 88 1 279 1 201 1 365 1 339 1 202 1 181 1 40 5 298 2 68 1 299 2 94 4 205 1 253 1 183 1 96 2 185 1 160 4 99 1 235 1 47 1 303 1 100 1 141 1 237 1 378 3 124 1 103 1 240 3 21 1 
286 2 244 1 289 1 59 3 111 2 201 1 202 1 299 2 205 1 253 1 160 4 303 1 124 1 347 2 21 1 310 4 28 1 168 1 173 2 272 2 217 2 278 1 88 1 279 1 40 4 181 1 94 4 372 1 183 1 97 1 99 1 46 2 100 1 47 1 141 1 237 1 378 3 103 1 240 2 
243 2 54 1 26 1 0 1 172 1 83 1 149 6 128 1 246 3 332 3 62 2 294 1 33 1 86 2 90 2 92 1 134 1 70 1 373 1 157 1 281 1 375 1 98 1 18 1 305 1 20 1 
243 1 26 2 0 2 245 1 172 2 149 14 128 11 332 6 246 8 62 4 294 11 6 1 86 2 295 1 177 1 37 1 90 1 92 2 134 1 254 1 281 2 342 2 375 1 302 3 345 1 122 2 18 4 260 1 102 1 264 1 20 2 241 3 79 1 
25 1 80 1 26 1 167 1 0 1 289 2 311 1 172 1 149 2 332 1 246 1 333 1 275 1 62 2 151 1 360 1 338 1 222 1 199 1 177 1 90 1 37 1 92 1 10 1 202 2 156 1 206 1 281 1 375 1 99 1 210 1 18 1 377 1 309 1 381 1 24 1 285 1 79 1 
243 4 0 3 289 3 149 20 332 10 246 10 333 1 62 6 247 2 151 2 294 7 6 4 295 2 338 3 199 1 10 1 202 3 70 1 206 2 156 2 342 2 257 1 210 3 18 7 122 2 305 1 262 2 20 3 79 1 309 2 25 1 80 2 26 3 350 2 167 3 311 2 172 3 83 1 128 7 33 1 315 1 86 8 221 1 176 1 177 1 90 2 37 1 92 3 132 2 280 2 134 3 373 1 281 3 98 1 375 3 99 1 377 2 285 1 381 2 
25 1 80 2 26 2 167 8 0 2 192 1 289 1 311 2 172 2 271 1 149 2 246 1 332 1 174 1 219 1 333 1 62 4 338 8 176 1 199 2 66 1 37 1 92 2 202 1 93 1 203 1 157 1 281 2 375 2 99 1 210 7 187 1 324 2 377 2 142 1 285 1 309 3 50 1 79 1 
243 1 26 1 0 1 289 1 172 1 128 1 149 3 246 1 332 2 333 1 62 2 294 1 86 1 295 1 177 1 92 1 202 1 249 1 134 1 231 1 281 1 342 1 375 1 99 1 325 1 18 1 122 1 20 1 285 1 
26 1 0 1 55 1 157 1 172 1 281 1 128 1 149 2 375 1 246 2 62 2 294 1 86 1 6 1 18 1 122 1 92 1 20 1 
243 1 134 1 26 1 0 1 157 1 172 1 281 1 128 1 149 2 375 1 332 2 62 2 294 1 86 1 295 1 18 1 19 1 92 1 
243 1 26 1 0 1 172 1 149 4 128 2 246 2 332 2 62 2 294 2 6 1 86 2 295 1 92 1 134 1 157 1 342 1 281 1 375 1 122 1 18 2 20 1 
26 1 0 1 55 1 172 1 281 1 128 1 149 2 375 1 246 2 62 2 294 1 86 1 6 1 18 1 122 1 92 1 20 1 50 1 
243 1 134 1 26 1 0 1 172 1 281 1 128 1 149 2 375 1 332 2 62 2 294 1 86 1 295 1 18 1 19 1 92 1 50 1 
243 1 26 1 0 1 172 1 149 4 128 2 246 2 332 2 62 2 294 2 6 1 86 2 295 1 92 1 134 1 342 1 281 1 375 1 122 1 18 2 20 1 50 1 
243 1 26 1 0 1 172 1 149 4 128 2 246 2 332 2 62 2 294 2 6 1 86 2 295 1 92 1 134 1 342 1 281 1 375 1 122 1 18 2 20 1 
80 1 26 1 167 1 0 1 289 1 311 1 172 1 149 2 246 1 332 1 247 1 62 2 151 1 338 1 199 1 37 1 90 1 92 1 202 1 156 1 206 1 281 1 375 1 210 1 377 1 381 1 309 1 79 1 
80 1 26 1 167 1 0 1 289 1 311 1 82 1 172 1 149 2 246 1 332 1 335 1 62 2 151 1 338 1 199 1 37 1 90 1 92 1 202 1 281 1 282 1 375 1 210 1 377 1 381 1 309 1 79 1 
243 1 26 1 0 1 172 1 149 4 128 2 246 2 332 2 62 2 294 2 6 1 86 2 295 1 177 1 92 1 134 1 342 1 281 1 375 1 122 1 18 2 20 1 
243 1 80 1 26 1 167 1 0 1 289 1 311 1 172 1 128 2 149 4 332 2 246 2 247 1 62 2 294 2 151 1 295 1 86 2 6 1 338 1 92 1 202 1 280 1 203 1 134 1 156 1 206 1 281 1 342 1 375 1 210 1 18 2 122 1 377 1 20 1 381 1 309 1 
26 1 0 1 289 1 172 1 149 3 128 1 332 1 246 2 333 1 62 2 294 1 295 1 86 1 6 1 177 1 92 1 91 1 202 1 249 1 134 1 231 1 281 1 342 1 375 1 99 1 122 1 18 1 20 1 285 1 
243 3 287 1 26 2 0 2 245 1 172 2 60 1 149 19 332 10 246 9 62 4 314 1 6 3 86 6 295 3 319 1 92 2 114 1 369 1 250 1 12 1 134 3 118 2 342 3 302 1 122 3 102 1 306 2 20 3 241 2 
243 2 144 1 287 2 26 3 0 3 171 1 57 1 172 3 245 2 149 26 332 12 246 14 62 6 356 1 6 2 86 4 295 2 89 2 319 1 92 3 114 2 369 1 134 2 250 1 12 1 252 1 118 4 342 3 137 1 302 2 122 3 306 1 20 3 241 2 
105 1 243 4 144 1 287 1 26 3 0 3 171 1 57 1 245 3 172 3 83 1 149 41 332 21 246 20 62 6 314 1 33 1 356 1 6 4 86 8 295 4 89 1 319 1 92 3 114 2 369 1 250 1 12 1 134 5 70 1 373 1 252 1 118 4 342 4 137 1 98 1 302 3 122 4 305 1 102 1 306 1 20 5 241 4 
105 1 243 4 144 1 287 1 26 4 0 4 171 1 57 1 245 3 172 4 83 1 149 38 332 18 246 20 62 8 314 1 33 1 356 1 6 3 86 7 295 3 89 2 319 1 92 4 114 2 369 1 250 1 12 1 134 4 70 1 373 1 252 1 118 4 342 4 137 1 98 1 302 3 122 4 305 1 102 1 306 1 20 5 241 4 
243 7 144 1 287 1 26 2 0 2 171 1 57 1 245 2 172 2 83 1 149 52 332 25 246 27 62 4 33 1 356 1 6 7 86 14 295 7 89 1 319 1 92 2 114 1 369 1 250 1 12 1 134 8 70 1 373 1 252 1 118 4 342 7 137 1 98 1 302 4 122 7 260 2 305 1 102 2 306 1 20 8 241 4 
106 1 351 1 7 1 87 1 170 1 361 1 158 1 113 1 265 1 72 1 
104 1 273 1 
348 1 351 1 7 1 87 1 352 1 170 1 200 1 265 1 72 1 
190 1 296 1 
51 1 230 1 238 1 
106 1 94 1 163 1 371 1 351 1 170 1 301 1 158 1 72 1 138 1 160 1 323 2 7 1 87 1 378 1 361 1 78 1 265 1 
106 1 94 1 163 1 371 1 351 1 170 1 301 1 158 1 72 1 138 1 160 1 323 2 7 1 87 1 378 1 361 1 78 1 265 1 
106 1 94 1 163 1 371 1 351 1 170 1 301 1 158 1 72 1 138 1 160 1 323 2 7 1 87 1 378 1 361 1 78 1 265 1 
51 1 190 1 296 1 
51 1 190 1 296 1 
230 1 238 1 
51 1 230 1 238 1 
52 1 204 1 
52 1 163 1 351 1 289 2 170 1 215 1 273 1 333 2 35 1 7 1 87 1 90 1 179 1 320 1 202 2 11 1 94 1 300 1 204 1 72 1 160 1 323 1 99 2 78 1 265 1 104 1 285 2 
80 1 26 1 167 2 0 1 192 1 289 2 311 1 169 1 172 1 149 2 246 1 332 1 129 1 62 2 338 2 177 1 37 1 92 1 39 1 367 1 202 2 281 1 375 1 99 2 187 1 324 2 210 2 377 1 123 1 309 1 79 1 
182 1 228 1 95 1 80 1 203 1 167 2 117 1 73 1 234 1 139 1 210 2 101 1 259 1 338 2 377 1 176 1 317 1 283 1 308 2 
182 1 228 1 95 1 80 1 167 1 117 1 73 1 234 1 139 1 210 1 259 1 338 1 176 1 377 1 317 1 267 1 308 2 
228 1 53 1 80 1 167 1 374 1 311 1 174 1 210 1 101 1 338 1 377 1 199 1 142 1 309 1 
182 1 228 1 95 1 80 1 167 1 117 1 73 1 234 1 139 1 210 1 101 1 259 1 338 1 377 1 176 1 317 1 283 1 308 2 
329 1 
54 1 47 1 141 1 207 1 378 1 224 1 59 1 
310 1 59 1 217 1 85 1 181 1 68 1 298 1 94 1 96 1 160 1 46 1 47 1 303 1 141 1 237 1 378 2 21 1 
191 3 146 1 290 1 328 1 150 1 112 1 195 3 295 1 338 1 199 1 13 1 251 1 342 1 160 2 303 2 210 1 122 1 262 1 20 1 21 2 309 4 310 2 80 1 167 1 311 1 168 1 216 1 217 1 30 1 318 2 181 2 321 1 94 2 134 1 96 3 46 6 47 4 141 3 237 2 377 2 378 3 381 1 242 1 
310 1 191 5 144 1 171 1 245 1 59 2 217 1 150 1 195 5 356 1 295 2 226 1 181 2 94 1 134 2 251 2 252 1 96 3 342 2 16 1 137 1 160 1 302 1 45 1 46 6 47 8 303 2 141 5 122 2 237 2 378 5 212 1 20 2 241 1 21 2 
289 1 109 1 83 1 333 1 202 1 339 1 181 1 94 1 134 1 251 2 42 1 183 1 231 1 16 1 98 1 160 1 120 1 99 1 303 1 47 2 141 2 237 1 305 1 77 1 263 1 20 2 21 1 285 1 
181 1 207 1 59 1 303 1 47 1 141 1 237 1 378 1 224 1 21 1 
191 5 134 2 251 2 96 5 342 2 16 1 195 5 46 10 47 5 295 2 122 2 141 5 378 5 262 1 20 2 
310 1 94 1 378 1 59 1 160 1 217 1 
310 4 80 1 167 4 311 1 354 2 217 2 174 1 293 1 150 2 338 4 199 2 181 1 116 1 94 3 341 1 160 3 209 1 303 2 210 4 47 2 48 1 121 1 141 2 237 2 377 1 142 1 212 2 21 2 309 1 
80 1 26 1 167 1 0 1 289 3 311 1 172 1 149 1 332 1 333 2 62 2 247 1 151 1 338 1 199 1 90 1 92 1 202 3 42 1 206 1 156 1 231 2 281 1 375 1 44 1 99 2 210 1 377 1 79 1 285 2 381 1 309 1 
181 1 191 2 96 2 59 2 150 1 46 4 195 2 33 1 303 1 47 1 141 2 237 1 378 4 212 1 21 1 
7 1 313 1 265 1 
204 1 7 1 361 1 265 1 22 1 
7 1 313 1 265 1 
7 1 313 1 265 1 
140 1 7 1 265 1 
140 1 7 1 265 1 
140 1 7 1 265 1 
7 1 265 1 
351 1 87 1 
243 2 134 1 26 2 70 1 0 2 373 1 172 2 83 1 149 8 98 1 332 4 246 4 62 4 33 1 6 1 86 3 305 1 89 1 92 2 20 1 
243 2 54 1 134 1 70 1 373 1 83 1 98 1 149 6 332 3 246 3 33 1 86 2 305 1 20 1 
243 1 134 1 26 1 0 1 172 1 342 1 149 4 332 2 246 2 62 2 295 1 86 2 75 1 6 1 122 1 92 1 20 1 
243 1 134 1 245 1 342 1 149 7 332 4 246 3 302 1 295 1 6 1 86 2 122 1 102 1 20 1 241 2 
243 5 26 2 0 2 172 2 83 2 149 23 246 11 332 12 62 4 33 1 86 9 6 4 295 2 89 2 362 1 92 2 134 3 70 1 373 1 254 1 342 2 98 2 302 2 122 2 260 1 305 1 102 1 20 3 241 2 
149 1 241 1 332 1 
302 1 149 1 246 1 
243 2 134 1 26 1 0 1 172 1 342 1 149 6 332 3 246 3 62 2 75 1 6 1 86 3 295 1 122 1 262 1 92 1 20 1 
243 1 144 1 26 1 0 1 171 1 245 1 172 1 149 12 332 6 246 6 62 2 356 1 6 1 295 2 86 2 92 1 250 1 134 2 252 1 342 2 137 1 302 1 122 2 20 2 241 1 
243 1 134 1 6 1 86 2 305 1 83 1 20 1 98 1 149 6 332 3 246 3 
243 1 70 1 26 1 0 1 373 1 172 1 83 1 98 1 149 3 246 1 332 2 62 2 6 1 86 2 89 1 362 1 92 1 
243 3 250 1 134 2 26 1 0 1 172 1 83 2 98 2 149 10 246 5 332 5 62 2 120 1 86 5 6 2 305 1 92 1 20 2 
250 1 26 1 0 1 172 1 149 2 246 2 62 2 6 1 86 1 122 1 92 1 20 1 
243 1 134 1 250 1 26 1 0 1 172 1 342 1 149 4 332 2 246 2 62 2 295 1 86 2 6 1 122 1 92 1 20 1 
243 1 250 1 26 3 0 3 172 3 83 1 149 3 98 1 332 2 246 1 62 6 314 1 86 2 6 1 89 1 362 1 92 3 
243 7 26 5 0 5 245 1 172 5 83 3 149 34 332 18 246 16 62 10 314 1 33 1 6 5 86 12 295 3 89 2 362 1 152 1 92 5 250 1 134 5 70 1 373 1 255 1 342 3 98 3 302 3 75 1 49 1 122 3 305 2 102 1 20 5 241 4 
243 2 26 1 0 1 245 1 172 1 83 1 149 8 332 4 246 4 62 2 33 1 356 1 86 2 92 1 134 1 250 1 70 1 373 1 98 1 302 1 305 1 20 1 241 1 
243 2 26 2 0 2 245 1 172 2 83 1 149 11 332 5 246 6 62 4 33 1 356 1 6 1 86 3 92 2 134 1 250 1 70 1 373 1 342 1 98 1 302 1 75 1 122 1 305 1 102 1 20 2 241 2 
243 3 144 1 26 3 0 3 171 1 245 1 172 3 83 1 149 19 332 10 246 9 62 6 33 1 356 1 6 1 295 2 86 4 89 1 92 3 250 1 134 3 70 1 373 1 252 1 342 2 137 1 98 1 302 1 75 1 122 2 305 1 20 3 241 1 
243 3 144 1 26 3 0 3 171 1 245 1 172 3 83 1 149 17 332 7 246 10 62 6 33 1 356 1 6 2 295 1 86 5 89 1 92 3 250 1 134 2 70 1 373 1 252 1 342 2 137 1 98 1 302 1 75 1 122 2 305 1 20 3 241 1 
243 2 26 1 0 1 245 1 172 1 83 1 149 8 332 4 246 4 62 2 33 1 356 1 86 2 92 1 134 1 250 1 70 1 373 1 98 1 302 1 305 1 20 1 241 1 
243 1 144 1 26 1 0 1 171 1 245 1 172 1 149 12 332 6 246 6 62 2 356 1 6 1 295 2 86 2 92 1 250 1 134 2 252 1 342 2 137 1 302 1 122 2 20 2 241 1 
243 3 144 1 26 4 0 4 171 1 245 1 172 4 83 1 149 18 332 8 246 10 62 8 33 1 356 1 6 2 295 1 86 5 89 2 92 4 250 1 134 2 70 1 373 1 252 1 342 2 137 1 98 1 302 1 75 1 122 2 305 1 20 3 241 1 
243 3 144 1 26 4 0 4 171 1 245 1 172 4 149 16 332 7 246 9 62 8 314 1 356 1 6 3 295 2 86 6 89 2 92 4 250 1 134 2 252 1 342 3 137 1 302 1 122 3 20 3 241 1 
243 3 134 1 70 2 373 1 83 3 149 7 98 3 332 4 246 3 86 6 6 3 305 1 20 1 
243 3 144 1 26 4 0 4 171 1 245 1 172 4 83 1 149 18 332 8 246 10 62 8 314 1 33 1 356 1 6 1 295 1 86 4 89 2 92 4 250 1 134 2 70 1 373 1 252 1 342 2 137 1 98 1 302 1 122 2 305 1 20 3 241 1 
99 1 166 1 289 1 88 1 90 1 202 1 331 1 
99 1 166 1 289 1 213 1 88 1 248 1 76 1 90 1 125 1 8 1 202 1 331 1 
80 1 54 1 210 1 167 1 338 1 377 1 311 1 199 1 142 1 309 1 174 1 
25 1 80 1 167 1 156 1 289 2 311 1 333 1 99 1 151 1 210 1 338 1 377 1 199 1 90 1 309 1 381 1 285 1 202 2 
25 1 80 1 167 1 156 1 28 1 289 2 56 1 183 1 253 1 311 2 354 1 333 1 99 2 151 1 210 1 338 1 377 1 90 1 379 1 309 3 381 2 285 2 202 2 
25 1 80 1 167 2 289 2 28 1 1 1 311 2 56 1 354 1 333 1 151 1 338 2 90 1 202 2 253 1 183 1 282 1 99 2 210 2 377 1 379 1 285 2 381 2 309 3 
310 1 80 1 167 1 289 1 56 1 311 1 168 1 109 1 354 1 59 1 333 1 337 1 338 1 318 1 202 1 321 1 94 2 42 1 183 1 231 1 160 2 99 1 210 1 377 1 378 1 77 1 263 1 346 1 379 1 285 1 309 4 381 1 
310 1 80 1 167 1 289 1 56 1 311 1 168 1 109 1 354 1 59 1 333 1 112 1 338 1 318 1 202 1 321 1 94 2 42 1 183 1 231 1 160 2 99 1 210 1 377 1 378 1 77 1 263 1 379 1 285 1 309 4 381 1 
80 1 210 1 167 1 338 1 377 1 66 1 
93 1 203 1 229 1 80 2 13 1 167 7 192 1 311 2 136 1 271 1 219 1 324 1 210 6 338 7 176 1 199 2 377 3 66 1 307 1 381 1 309 3 
25 1 243 2 80 1 26 2 350 1 0 2 167 1 289 2 311 1 172 2 83 1 128 1 149 6 332 3 246 3 333 1 62 4 247 1 294 1 33 1 151 1 86 2 338 1 177 1 90 2 92 2 202 2 203 1 280 1 134 1 70 1 373 1 206 1 156 1 281 2 98 1 375 2 99 1 210 1 18 1 305 1 377 1 123 1 20 1 309 1 381 1 285 1 
289 1 290 1 59 2 109 1 328 1 333 1 112 1 338 1 199 1 202 1 251 2 207 1 16 1 160 3 209 1 120 1 303 2 210 1 305 1 77 1 263 1 20 2 21 2 309 2 310 2 167 1 168 1 83 1 216 1 215 1 217 1 224 1 318 1 321 1 181 2 94 3 134 2 42 1 183 1 231 1 98 1 99 1 47 4 141 5 237 2 378 2 285 1 
321 1 80 1 13 1 167 1 146 1 311 1 29 1 210 1 338 1 377 2 66 1 381 1 309 2 
203 1 80 1 167 4 108 1 1 1 311 1 174 1 210 4 338 4 377 1 199 1 142 1 309 1 
80 1 69 1 210 2 288 1 167 2 315 1 338 2 377 2 311 1 136 1 354 1 307 1 309 1 381 1 
95 1 80 1 210 1 167 1 117 1 338 1 377 1 199 1 317 1 308 1 
203 1 80 1 167 2 192 1 169 1 311 1 210 2 338 2 176 1 377 1 309 1 
203 1 80 2 167 5 192 1 108 1 311 2 354 1 271 1 174 1 219 1 210 4 338 5 199 1 377 2 142 1 309 3 
203 1 80 2 167 5 192 1 108 1 311 2 354 1 271 1 84 1 174 1 210 4 338 5 199 1 377 2 142 1 309 3 
25 1 80 1 167 1 289 2 311 1 282 1 333 1 99 1 151 1 210 1 338 1 377 1 199 1 90 1 309 1 381 1 285 1 202 2 
80 1 229 1 13 1 210 1 167 1 338 1 377 2 311 1 136 1 354 1 307 1 309 1 381 1 
41 1 61 1 277 1 232 1 90 1 
145 1 289 1 28 1 168 1 59 1 109 1 215 1 333 1 61 1 5 1 278 1 277 1 65 1 178 1 202 1 41 1 94 2 42 1 253 1 183 2 231 1 232 1 160 2 99 1 378 1 77 1 263 1 285 1 
289 1 232 1 61 1 129 1 99 1 277 1 39 1 367 1 202 1 
145 1 277 1 65 1 
344 1 54 1 340 1 14 1 
186 1 344 1 358 1 340 1 131 1 14 1 153 1 
326 1 127 1 153 1 
126 1 186 3 344 1 32 1 358 1 340 1 27 2 131 1 14 1 291 1 297 1 153 3 
186 2 344 1 368 1 358 1 340 1 131 1 14 1 292 1 153 2 
186 1 32 1 358 1 131 1 14 1 148 1 161 1 317 1 73 1 308 1 153 1 
186 1 32 1 358 1 340 1 131 1 14 1 153 1 
186 1 344 1 32 1 358 1 340 2 131 1 153 1 
186 2 63 1 32 1 155 1 358 2 340 1 131 2 14 1 23 1 153 2 
340 1 14 2 353 1 148 1 292 2 17 1 186 3 344 1 32 1 358 1 131 1 189 1 153 3 
95 1 349 1 340 1 14 1 73 1 292 1 186 2 139 1 344 1 32 1 358 1 131 1 317 1 308 2 153 2 
368 1 340 1 14 2 353 1 148 1 292 2 186 4 344 1 32 1 358 2 359 1 131 2 153 4 
186 1 344 1 32 1 358 1 340 1 131 1 14 1 153 1 
126 1 340 2 27 1 14 3 291 1 353 1 148 1 292 2 186 4 344 2 358 1 131 1 380 1 153 4 
143 1 186 2 344 1 32 1 358 1 340 1 131 1 14 1 256 1 292 1 214 1 153 2 
126 1 340 1 27 2 14 1 291 2 327 1 186 3 344 1 32 1 358 1 131 1 153 3 
133 1 304 1 14 2 322 2 
186 1 32 1 358 1 131 1 184 1 153 1 
186 2 344 1 32 1 358 1 340 1 131 1 14 1 292 1 17 1 153 2 
15 1 
186 1 344 1 32 1 358 1 340 1 131 1 14 1 153 1 
186 3 344 1 32 1 358 1 340 1 27 1 131 1 14 1 292 1 17 1 153 3 
14 1 353 1 148 1 380 1 
340 1 14 1 

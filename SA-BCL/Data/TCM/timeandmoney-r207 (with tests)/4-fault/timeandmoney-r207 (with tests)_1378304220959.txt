#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 177 (144,287) (144,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 177 (144,287) (144,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 177 (144,287) (144,287) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 177 (144,287) (144,287) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 193 1 144 1 365 1 325 1 248 1 287 1 370 1 276 1 77 1 177 1 376 1 171 1 
287 1 205 1 370 1 193 1 144 1 276 1 77 1 365 1 177 1 376 1 325 1 171 1 248 1 
287 1 205 1 370 1 193 1 144 1 276 1 77 1 365 1 177 1 376 1 325 1 171 1 248 1 
287 1 205 1 370 1 193 1 144 1 276 1 77 1 365 1 177 1 376 1 325 1 171 1 248 1 
205 1 193 1 2 1 82 3 47 2 365 1 209 1 212 2 248 1 348 1 370 4 276 1 77 4 177 1 113 3 14 1 178 1 10 1 
205 1 34 1 131 1 193 1 2 1 267 1 365 1 325 1 370 2 77 2 276 1 321 1 177 1 113 1 171 1 178 1 
205 2 193 2 2 1 47 1 82 1 365 1 325 1 370 3 77 3 42 1 113 2 178 1 10 1 
205 2 103 1 2 1 82 7 209 1 5 1 212 2 42 1 113 5 10 3 26 1 193 2 47 4 49 1 365 1 325 1 248 1 348 1 370 9 77 9 276 1 177 1 14 1 178 1 
205 2 103 1 2 1 82 7 209 1 5 1 212 2 42 1 113 5 10 3 26 1 193 2 47 4 49 1 365 1 325 1 248 1 348 1 370 9 77 9 276 1 177 1 14 1 178 1 
75 1 159 1 332 1 
313 1 159 1 318 2 
79 2 186 1 31 2 160 2 301 2 95 2 56 1 115 2 
79 3 231 1 35 1 104 1 233 1 208 1 106 1 4 2 20 1 183 1 160 2 161 1 6 1 285 2 165 2 186 1 213 1 263 2 90 1 115 3 142 1 324 1 67 1 346 1 301 2 95 2 196 1 31 2 173 1 226 1 174 1 371 1 175 2 202 1 373 1 278 1 56 1 
79 1 280 1 31 1 160 1 301 1 284 1 293 1 95 1 56 1 115 1 
44 1 79 1 155 1 159 1 172 1 301 1 284 1 302 1 270 1 8 1 75 1 88 1 169 1 115 1 
79 2 155 1 280 1 159 1 160 2 284 2 163 1 169 1 293 1 115 2 44 1 172 2 301 2 95 2 302 2 270 1 31 2 75 1 56 1 
73 1 302 1 281 1 172 1 65 1 
302 2 97 1 75 1 281 1 159 1 172 2 360 1 65 1 
302 1 281 1 172 1 
79 1 280 1 172 1 160 1 301 1 284 1 163 1 95 1 302 1 31 1 293 1 56 1 65 1 115 1 
159 1 
302 2 75 1 281 1 159 1 223 1 172 2 360 1 65 1 
153 1 80 1 206 2 281 2 159 1 83 1 172 5 360 1 164 2 96 1 302 5 54 1 107 1 75 1 289 1 274 2 317 1 65 2 190 1 
324 1 79 2 67 1 45 1 106 1 20 1 183 1 301 1 95 1 196 1 285 1 165 1 31 1 173 1 202 1 263 1 373 1 43 1 115 2 380 1 
186 1 332 1 
79 2 36 1 160 1 301 2 95 1 186 2 31 1 57 1 115 2 
200 1 45 1 130 1 
324 1 79 1 67 1 106 1 20 1 146 1 183 1 196 1 285 1 165 1 186 1 173 1 263 1 202 1 373 1 115 1 
217 1 79 5 297 1 160 1 301 5 95 4 186 1 148 1 31 4 88 1 57 1 43 2 115 5 380 1 
79 2 31 2 87 1 301 2 284 1 293 1 95 2 115 2 
79 3 186 1 31 3 160 1 301 3 95 3 43 1 115 3 
79 1 31 1 301 1 284 1 293 1 95 1 115 1 
79 1 36 1 31 1 160 1 301 1 284 1 95 1 57 1 115 1 
79 4 231 1 35 1 155 1 208 1 106 1 4 1 20 1 183 1 160 2 284 1 6 1 285 1 165 1 186 1 213 1 169 1 263 1 90 1 115 4 43 1 142 1 324 1 44 1 67 1 46 1 346 1 172 1 301 3 95 3 196 1 302 1 270 1 369 1 173 1 31 3 226 1 175 2 202 1 373 1 278 1 57 1 56 1 380 1 
217 1 79 2 186 1 31 1 88 1 301 2 95 1 115 2 43 1 
44 1 79 3 155 1 121 1 159 1 160 1 172 1 301 3 284 1 95 3 302 1 270 1 369 1 31 3 169 1 57 1 43 2 115 3 380 1 
79 2 45 1 160 1 301 2 95 2 31 2 200 1 57 1 43 1 115 2 
324 1 79 1 67 1 106 1 20 1 183 1 285 1 196 1 165 1 186 1 173 1 263 1 202 1 373 1 115 1 
324 1 79 1 67 1 106 1 300 1 183 1 285 1 196 1 165 1 186 1 149 1 263 1 202 1 373 1 115 1 
231 1 208 1 4 4 6 1 38 1 22 1 213 2 90 1 343 1 142 1 344 1 219 1 45 2 69 1 269 1 226 1 200 2 174 2 329 1 175 2 256 1 378 1 130 2 310 1 
270 1 79 1 31 1 87 1 301 1 284 1 95 1 115 1 
288 1 140 1 
288 1 140 1 
282 1 227 1 
282 1 227 1 
282 1 227 1 
288 1 140 1 19 1 
288 1 140 1 19 1 
288 1 277 1 140 1 
288 2 282 1 227 1 140 2 309 1 123 1 
288 1 140 1 19 1 
333 1 288 1 140 1 
333 1 288 1 140 1 
333 1 288 1 140 1 
79 2 354 1 357 1 359 1 288 1 186 1 108 1 41 1 238 1 110 1 140 1 115 2 220 1 28 1 172 1 301 2 95 2 302 1 74 1 252 1 31 2 127 1 201 1 277 1 
91 1 220 2 314 1 28 2 221 1 159 1 359 2 172 2 337 2 123 1 361 1 302 2 288 2 74 3 127 1 372 1 12 1 140 2 110 2 
276 1 177 1 248 1 
131 1 276 1 177 1 
141 1 131 1 117 1 276 3 351 1 248 2 
131 1 117 1 303 1 276 2 351 1 248 1 
131 1 117 2 276 2 351 1 248 1 
229 1 206 1 181 2 313 1 281 1 159 2 164 1 360 1 22 1 317 2 41 1 318 3 238 1 65 4 343 1 299 1 94 2 222 1 172 5 71 1 96 3 302 5 54 1 254 2 75 1 201 1 274 1 99 1 100 1 78 1 378 1 256 1 
80 1 206 2 181 6 313 3 281 6 159 5 360 1 164 2 362 1 22 3 137 1 317 6 318 9 109 1 238 4 341 1 65 7 343 3 94 6 222 2 172 9 71 3 366 1 96 8 73 5 302 9 54 1 75 1 274 2 100 1 306 5 78 2 378 3 256 3 257 1 
80 1 206 1 181 2 313 2 159 3 164 1 22 1 317 2 318 4 238 1 65 2 343 1 299 1 94 2 222 1 172 3 71 1 96 3 302 3 75 1 254 1 99 1 274 1 78 1 378 1 256 1 
80 1 206 1 181 4 313 3 159 4 164 1 362 1 22 2 137 1 317 4 318 7 238 2 65 3 343 2 299 1 94 4 222 1 172 4 71 2 366 1 96 5 302 4 75 1 254 2 274 1 99 1 78 1 378 2 256 2 
214 1 196 1 332 1 
196 1 347 1 
319 1 
324 1 183 1 196 1 
350 1 196 1 
324 1 196 1 
324 1 138 1 183 1 214 2 58 1 196 3 
119 2 27 1 355 1 4 5 162 1 367 1 38 3 269 4 136 1 213 3 22 1 174 2 375 1 239 1 256 1 307 1 179 1 
119 2 27 1 355 1 4 6 162 1 367 1 38 3 269 4 136 1 22 1 213 4 174 2 375 1 239 1 256 1 307 1 179 1 
119 2 27 1 355 1 4 5 162 1 84 1 367 1 38 3 269 4 136 1 213 3 22 1 174 2 375 1 239 1 256 1 307 1 179 1 
231 1 355 5 4 35 162 3 38 8 136 2 213 19 22 5 320 1 90 1 239 2 216 3 343 2 142 1 118 1 243 1 119 3 27 1 244 3 194 1 122 1 245 1 71 2 367 3 269 13 368 1 226 1 174 16 175 2 375 1 307 1 256 5 378 2 179 2 
231 2 261 1 355 1 4 8 162 1 38 4 338 1 136 1 22 1 213 5 90 2 239 1 142 2 119 2 194 1 269 5 367 1 226 2 174 3 175 4 375 1 256 1 307 1 179 1 
205 1 131 1 2 1 82 1 285 1 165 1 60 1 263 1 189 1 113 1 242 1 215 1 141 1 266 1 193 1 345 1 365 1 325 1 248 1 11 1 370 2 198 1 202 1 77 2 276 2 177 1 373 1 151 1 178 1 203 1 
205 1 131 1 81 1 2 1 82 2 285 1 165 1 60 1 263 1 189 1 113 1 114 1 141 1 266 1 193 1 345 1 325 1 248 1 53 1 11 1 370 3 198 1 202 1 77 3 276 2 177 1 373 1 151 1 178 1 203 1 
131 1 2 1 82 2 285 1 165 1 263 1 189 1 113 1 114 1 141 1 345 1 325 1 248 1 53 1 11 1 370 2 198 1 202 1 77 2 276 2 373 1 177 1 151 1 178 1 203 1 
205 1 81 1 315 1 336 1 285 1 165 1 290 1 263 1 25 1 189 2 324 1 67 1 120 1 193 1 68 1 325 2 196 1 370 1 202 1 77 1 373 1 151 2 203 2 
205 1 131 1 285 1 165 1 60 1 263 1 189 1 242 1 141 1 266 1 193 1 345 1 365 1 325 1 248 1 53 1 11 1 370 1 198 1 202 1 77 1 276 2 177 1 373 1 151 1 203 1 
283 1 
0 1 79 1 334 2 281 6 284 1 236 1 285 2 286 2 8 1 9 2 88 1 44 1 294 2 92 1 145 4 301 1 196 1 96 2 302 5 147 1 54 1 250 1 253 2 202 1 18 1 152 1 102 1 206 1 155 1 313 2 356 1 315 1 159 2 360 3 164 1 165 2 59 2 317 2 363 2 318 2 263 2 169 1 25 1 63 1 115 1 116 1 324 1 67 2 222 1 172 5 270 1 75 1 274 1 373 1 379 1 
102 1 79 1 155 1 281 2 284 1 360 1 8 1 88 1 169 1 63 1 115 1 116 1 44 1 92 1 145 2 223 1 172 3 301 1 302 3 270 1 250 1 253 1 
102 1 79 1 155 1 281 1 159 1 284 1 360 1 8 1 88 1 169 1 363 1 63 1 115 1 116 1 44 1 92 1 145 3 223 1 172 3 301 1 302 3 270 1 250 1 75 1 
102 1 79 1 155 1 281 2 159 1 284 1 360 1 8 1 88 1 169 1 9 1 363 1 63 1 115 1 116 1 44 1 92 1 145 3 223 1 172 3 301 1 302 3 270 1 250 1 253 1 75 1 
79 1 334 2 281 7 284 1 286 2 8 1 237 1 9 4 88 1 139 1 191 1 44 1 294 2 92 1 145 6 195 1 301 1 246 1 96 1 302 5 250 1 54 1 253 4 18 1 102 1 155 1 206 1 313 2 159 5 360 3 164 1 59 2 317 1 169 1 363 4 63 1 115 1 116 1 223 1 172 5 270 1 75 5 274 1 379 1 
79 1 334 2 281 4 284 1 286 2 8 1 88 1 9 2 44 1 294 2 92 1 145 4 301 1 96 1 302 4 54 1 250 1 253 2 18 1 102 1 152 1 155 1 206 1 313 2 159 2 164 1 360 2 59 2 317 1 169 1 318 2 363 2 63 1 115 1 116 1 172 4 270 1 75 1 274 1 379 1 
102 1 79 1 155 1 206 1 334 2 281 4 313 2 159 1 284 1 360 2 164 1 286 2 59 2 8 1 237 1 317 1 363 2 9 2 88 1 169 1 139 1 63 1 115 1 116 1 44 1 294 2 92 1 145 4 195 1 172 4 301 1 96 1 302 4 270 1 250 1 54 1 253 2 75 1 274 1 18 1 379 1 
102 1 79 1 155 1 206 1 334 2 281 4 313 2 159 1 284 1 360 2 164 1 286 2 59 2 8 1 237 1 317 1 363 2 9 2 88 1 169 1 139 1 63 1 115 1 116 1 44 1 294 2 92 1 145 4 195 1 172 4 301 1 96 1 302 4 270 1 250 1 54 1 253 2 75 1 274 1 18 1 379 1 
102 1 79 1 155 1 206 1 133 1 281 4 159 1 284 1 360 2 164 1 286 2 8 1 317 1 363 2 9 2 318 2 88 1 169 1 63 1 342 2 115 1 116 1 44 1 66 2 294 2 298 1 92 1 145 4 195 1 172 4 301 1 96 1 302 4 270 1 250 1 54 1 253 2 75 1 274 1 150 1 18 1 
102 1 79 1 206 1 155 1 334 2 313 2 281 5 159 1 284 1 360 2 164 1 286 2 59 2 8 1 237 1 317 1 88 1 169 1 9 3 363 3 139 1 63 1 115 1 116 1 191 1 44 1 294 2 92 1 145 5 195 1 172 4 301 1 96 1 302 4 270 1 54 1 250 1 253 3 75 1 274 1 18 1 379 1 
102 1 79 1 206 1 155 1 334 2 313 2 281 5 159 1 284 1 360 2 164 1 286 2 59 2 8 1 237 1 317 1 88 1 169 1 9 3 363 3 139 1 63 1 115 1 116 1 191 1 44 1 294 2 92 1 145 5 195 1 172 4 301 1 96 1 302 4 270 1 54 1 250 1 253 3 75 1 274 1 18 1 379 1 
79 1 281 4 284 1 286 2 8 1 88 1 9 2 342 2 44 1 294 2 92 1 145 4 301 1 96 1 302 4 54 1 250 1 253 2 150 1 18 1 102 1 152 1 155 1 206 1 159 1 164 1 360 2 317 1 169 1 318 2 363 2 63 1 115 1 116 1 66 2 172 4 270 1 75 1 274 1 
231 1 208 1 4 5 162 1 6 1 38 2 186 1 22 1 213 3 90 1 239 1 142 1 119 1 45 1 367 1 269 2 200 1 226 1 329 1 174 2 175 2 375 1 307 1 256 1 130 1 332 1 
231 2 232 1 104 1 355 1 208 1 4 14 185 1 6 2 38 1 186 1 213 6 22 1 24 1 90 2 64 1 216 3 343 2 142 2 296 1 45 11 244 3 346 1 71 2 269 2 368 1 226 2 200 4 174 8 175 4 55 1 256 2 378 1 130 11 
79 2 231 1 104 1 208 1 106 1 20 1 4 2 183 1 285 1 6 1 165 1 186 1 213 1 24 1 86 1 263 1 90 1 115 2 43 1 324 1 142 1 67 1 146 1 346 1 301 1 95 1 196 1 173 1 31 1 200 1 226 1 174 1 175 2 202 1 176 1 373 1 331 1 380 1 
79 3 231 3 35 2 4 19 183 2 285 3 6 3 38 4 186 1 90 3 239 1 43 1 343 2 142 3 45 7 346 1 301 1 95 1 196 2 53 1 200 7 202 2 101 2 307 1 256 3 311 2 104 1 355 4 208 3 106 2 20 2 162 1 165 3 22 3 213 10 24 1 263 3 61 1 265 2 115 3 323 1 324 2 67 1 119 1 71 2 367 1 269 8 31 1 128 2 173 2 226 3 174 9 175 6 375 1 374 1 373 2 378 2 130 7 380 1 
79 1 231 2 104 1 208 2 315 1 4 2 285 8 6 2 165 8 213 1 263 7 90 2 25 1 240 1 215 1 115 1 43 1 142 2 324 2 67 2 70 1 346 1 301 1 95 1 196 3 29 1 53 1 271 1 125 1 31 1 226 2 329 1 174 1 371 2 175 4 32 1 202 2 373 2 308 1 
79 1 231 1 208 1 4 3 160 1 6 1 38 1 22 1 213 2 24 1 90 1 115 1 343 1 142 1 45 1 50 1 301 1 95 1 71 1 269 1 31 1 200 1 226 1 174 1 175 2 57 1 256 1 378 1 130 1 
142 1 231 1 344 1 355 1 45 1 208 1 4 2 6 1 269 1 200 1 226 1 329 1 174 2 175 2 90 1 256 1 130 1 343 1 
142 1 231 1 45 1 208 1 69 1 4 2 6 1 269 1 38 1 22 1 213 2 200 1 226 1 329 1 175 2 90 1 378 1 130 1 
231 1 355 1 208 1 4 4 6 1 38 1 22 1 213 2 90 1 343 1 142 1 45 2 71 1 269 2 226 1 200 2 174 2 329 1 175 2 256 1 378 1 130 2 
142 1 231 1 344 1 355 1 45 1 208 1 4 2 6 1 269 1 125 1 200 1 226 1 174 2 175 2 90 1 256 1 130 1 343 1 
142 1 231 1 45 1 208 1 69 1 4 2 6 1 269 1 38 1 125 1 22 1 213 2 200 1 226 1 175 2 90 1 378 1 130 1 
231 1 355 1 208 1 4 4 6 1 38 1 22 1 213 2 90 1 343 1 142 1 45 2 71 1 269 2 125 1 226 1 200 2 174 2 175 2 256 1 378 1 130 2 
231 1 355 1 208 1 4 4 6 1 38 1 22 1 213 2 90 1 343 1 142 1 45 2 71 1 269 2 226 1 200 2 174 2 175 2 256 1 378 1 130 2 
79 1 35 1 231 1 104 1 208 1 106 1 4 2 20 1 183 1 285 1 6 1 165 1 186 1 213 1 263 1 90 1 115 1 324 1 142 1 67 1 346 1 196 1 173 1 226 1 174 1 175 2 202 1 373 1 
142 1 324 1 79 1 231 1 67 1 1 1 104 1 208 1 106 1 300 1 4 2 346 1 183 1 6 1 196 1 285 1 165 1 186 1 213 1 226 1 149 1 174 1 175 2 263 1 202 1 90 1 373 1 115 1 
231 1 355 1 208 1 4 4 6 1 38 1 22 1 213 2 24 1 90 1 343 1 142 1 45 2 71 1 269 2 226 1 200 2 174 2 175 2 256 1 378 1 130 2 
79 1 35 1 231 1 355 1 208 1 106 1 4 4 20 1 183 1 285 1 6 1 165 1 38 1 213 2 22 1 263 1 90 1 215 1 115 1 343 1 324 1 142 1 45 2 196 1 71 1 269 2 173 1 128 1 200 2 226 1 174 2 175 2 202 1 373 1 378 1 256 1 130 2 
79 1 231 1 355 1 208 1 4 3 160 1 6 1 85 1 213 1 22 1 24 1 90 1 115 1 343 1 142 1 45 1 301 1 95 1 71 1 269 1 31 1 226 1 200 1 174 2 175 2 378 1 57 1 256 1 130 1 
180 1 231 2 335 1 207 2 355 3 4 19 38 3 338 1 21 1 23 2 316 1 213 10 22 3 340 1 90 2 216 1 343 3 142 2 296 1 244 2 247 1 71 3 269 6 368 1 226 2 174 9 175 4 256 3 378 3 258 1 
180 2 259 1 231 3 335 1 355 2 207 4 4 26 38 2 338 1 23 1 22 2 213 12 340 2 89 1 90 3 170 1 216 2 343 3 142 3 244 2 194 2 247 1 71 3 197 1 269 4 368 2 199 1 226 3 174 14 175 6 13 1 256 3 378 2 258 1 
180 1 231 3 335 1 4 40 38 5 338 1 340 2 89 1 90 3 239 1 343 4 142 3 296 1 244 4 194 1 247 1 52 1 197 1 199 1 13 1 256 5 307 1 258 1 259 1 355 4 207 4 162 1 21 1 22 5 213 21 23 1 170 1 216 3 119 1 71 4 269 9 367 1 368 3 226 3 174 19 175 6 375 1 378 4 
180 1 259 1 231 4 335 1 207 4 355 3 4 38 162 1 38 5 338 1 21 1 23 1 213 19 22 4 340 2 89 1 90 4 239 1 170 1 216 3 343 4 142 4 119 1 296 1 244 4 194 2 247 1 71 4 52 1 367 1 197 1 269 8 368 3 199 1 226 4 174 19 175 8 375 1 13 1 307 1 256 5 378 3 258 1 
180 1 259 1 231 2 335 1 207 4 355 7 4 52 162 1 38 8 338 1 23 1 213 26 22 8 340 1 89 1 90 2 239 1 170 1 216 4 343 7 142 2 119 1 296 2 244 4 194 1 247 1 71 7 367 1 197 1 269 15 368 2 199 1 226 2 174 26 175 4 55 2 375 1 13 1 307 1 256 8 378 7 258 1 
288 1 30 1 220 1 314 1 28 1 221 1 110 1 140 1 359 1 123 1 
252 1 277 1 
288 1 251 1 220 1 28 1 93 1 110 1 140 1 359 1 17 1 
304 1 19 1 
333 1 129 1 309 1 
91 1 220 1 314 1 28 1 221 1 159 1 172 1 359 1 337 1 123 1 302 1 288 1 74 2 127 1 372 1 12 1 140 1 110 1 
91 1 220 1 314 1 28 1 221 1 159 1 172 1 359 1 337 1 123 1 302 1 288 1 74 2 127 1 372 1 12 1 140 1 110 1 
91 1 220 1 314 1 28 1 221 1 159 1 172 1 359 1 337 1 123 1 302 1 288 1 74 2 127 1 372 1 12 1 140 1 110 1 
304 1 309 1 19 1 
304 1 309 1 19 1 
333 1 129 1 
333 1 129 1 309 1 
354 1 108 1 
79 2 354 1 357 1 337 1 359 1 288 1 186 1 108 1 41 1 238 1 110 1 140 1 115 2 65 1 91 1 220 1 28 1 172 1 301 2 95 2 302 1 74 1 252 1 31 2 201 1 277 1 33 1 
230 1 79 2 231 1 260 1 104 1 208 1 4 2 285 2 6 1 165 2 166 1 213 1 24 1 263 2 90 1 115 2 324 1 192 1 142 1 346 1 301 2 196 1 29 1 126 1 226 1 174 1 371 2 175 2 202 1 32 1 373 1 
141 1 131 1 266 1 345 1 143 1 248 1 285 2 165 2 7 1 53 1 11 1 272 1 202 1 263 2 276 2 177 1 373 1 215 1 203 1 
141 1 131 1 266 1 345 1 143 1 326 1 248 1 285 1 165 1 53 1 11 1 263 1 202 1 276 2 177 1 373 1 203 1 
324 1 67 1 315 1 196 1 285 1 165 1 7 1 290 1 202 1 263 1 275 1 373 1 25 1 203 1 
141 1 131 1 266 1 345 1 143 1 248 1 285 1 165 1 7 1 53 1 11 1 272 1 202 1 263 1 276 2 177 1 373 1 203 1 
292 1 
153 1 75 1 289 1 317 1 159 1 96 1 332 1 
206 1 334 1 281 1 313 1 159 2 172 1 360 1 164 1 96 1 302 1 59 1 54 1 75 1 274 1 317 1 318 1 379 1 
181 6 234 1 281 5 183 3 236 1 285 3 289 1 138 1 343 2 94 6 347 3 196 10 96 9 302 5 54 4 98 2 349 1 202 4 350 2 256 2 154 1 153 1 206 4 353 2 352 2 156 1 313 6 157 2 159 8 164 4 360 3 165 3 22 2 317 8 263 3 169 2 318 12 264 2 265 2 111 1 214 2 215 1 324 3 67 1 364 2 222 2 172 5 327 2 71 2 75 2 274 4 373 3 279 2 378 2 
259 1 206 2 181 8 281 1 313 5 159 7 236 1 360 1 164 2 22 4 317 8 318 10 89 1 264 5 170 1 216 2 343 4 296 1 244 2 94 8 222 1 172 1 71 4 96 13 197 1 302 1 368 1 225 1 54 2 199 1 75 2 274 2 55 1 279 1 256 4 378 4 15 1 
79 1 206 1 280 1 160 1 162 1 284 1 163 1 164 1 237 1 22 1 317 2 264 2 239 1 293 1 115 1 243 1 172 1 301 1 95 1 96 2 367 1 302 1 54 1 31 1 274 1 279 1 256 2 56 1 
153 1 206 1 159 1 164 1 96 1 54 1 75 1 289 1 274 1 317 1 
181 5 313 5 94 5 159 5 71 2 96 5 22 2 317 5 318 10 264 2 265 1 279 1 256 2 378 2 343 2 
302 1 75 1 281 1 159 1 172 1 360 1 
132 1 154 2 80 1 0 1 206 2 281 4 315 1 164 2 285 4 236 2 360 2 165 4 317 2 263 4 25 1 324 1 67 2 222 2 172 3 196 1 96 2 302 3 147 1 54 1 305 1 349 1 274 2 202 1 373 1 
79 3 35 1 231 1 208 1 106 1 4 1 20 1 160 2 183 1 285 1 6 1 165 1 186 1 213 1 263 1 90 1 115 3 142 1 324 1 67 1 346 1 301 2 95 2 196 1 31 2 173 1 226 1 175 2 202 1 373 1 278 1 56 1 
206 1 119 1 181 2 313 2 94 2 159 3 222 1 164 1 236 1 96 2 54 1 75 1 274 1 317 1 318 4 264 1 
218 1 220 1 110 1 
218 1 220 1 110 1 
354 1 220 1 314 1 110 1 228 1 
218 1 220 1 110 1 
220 1 255 1 110 1 
220 1 255 1 110 1 
220 1 255 1 110 1 
220 1 110 1 
288 1 140 1 
142 2 231 2 119 1 355 1 194 1 4 7 162 1 269 3 38 2 367 1 22 1 213 4 226 2 174 3 175 4 90 2 375 1 239 1 256 1 307 1 
119 1 4 5 162 1 367 1 38 2 269 2 213 3 22 1 174 2 375 1 239 1 307 1 256 1 332 1 
142 1 231 1 355 1 134 1 4 4 71 1 38 1 269 2 213 2 22 1 226 1 174 2 175 2 90 1 378 1 256 1 343 1 
296 1 355 1 244 2 4 7 71 1 38 1 269 2 368 1 22 1 213 4 174 3 378 1 256 1 216 1 343 1 
204 1 231 2 355 4 4 22 162 2 185 1 38 5 213 12 22 3 90 2 239 1 216 2 343 2 142 2 119 1 296 1 244 2 194 2 71 2 367 2 269 9 226 2 174 10 175 4 55 1 375 1 307 1 256 3 378 2 
213 1 244 1 4 1 
174 1 4 1 216 1 
142 1 231 1 355 1 134 1 4 6 71 1 269 3 38 2 213 3 22 1 226 1 174 3 175 2 90 1 265 1 256 1 378 1 343 1 
259 1 231 1 355 1 4 12 38 1 338 1 213 6 22 2 89 1 90 1 170 1 216 1 343 2 142 1 244 1 71 2 269 2 197 1 368 1 199 1 226 1 174 6 175 2 256 2 378 2 
355 1 4 6 162 1 367 1 38 1 269 2 22 1 213 3 174 3 239 1 256 1 
204 1 142 1 231 1 355 1 194 1 4 3 162 1 269 2 38 1 367 1 213 2 226 1 174 1 175 2 375 1 90 1 307 1 
142 1 231 1 243 1 355 2 4 10 162 2 367 2 38 3 269 5 338 1 213 5 22 2 226 1 174 5 175 2 90 1 239 1 256 2 
142 1 231 1 355 1 4 2 269 1 338 1 226 1 174 2 175 2 90 1 256 1 343 1 
142 1 231 1 355 1 4 4 71 1 38 1 269 2 338 1 213 2 22 1 226 1 174 2 175 2 90 1 378 1 256 1 343 1 
204 1 142 3 231 3 355 1 194 1 4 3 162 1 367 1 38 1 269 2 338 1 21 1 213 2 226 3 174 1 175 6 90 3 
204 1 231 5 355 5 134 1 4 33 162 3 38 7 338 1 21 1 213 18 22 5 320 1 90 5 239 2 216 3 343 3 142 5 118 1 119 1 296 1 244 4 194 2 122 1 71 3 367 3 269 12 368 1 226 5 174 15 175 10 375 1 307 1 256 5 378 3 
231 1 4 7 162 1 38 2 338 1 22 1 213 4 90 1 170 1 239 1 216 1 142 1 119 1 244 1 367 1 269 2 368 1 226 1 174 3 175 2 375 1 256 1 307 1 
231 2 355 1 134 1 4 10 162 1 38 2 338 1 22 1 213 5 90 2 239 1 170 1 216 1 343 1 142 2 119 1 296 1 244 2 71 1 367 1 269 3 368 1 226 2 174 5 175 4 375 1 307 1 256 2 
259 1 231 3 355 1 134 1 4 18 162 1 38 3 338 1 213 10 22 3 89 1 90 3 239 1 170 1 216 1 343 2 142 3 119 1 244 1 194 1 71 2 367 1 269 4 197 1 368 1 199 1 226 3 174 8 175 6 375 1 307 1 256 3 378 2 
259 1 231 3 355 2 134 1 4 16 162 1 38 3 338 1 213 7 22 2 89 1 90 3 239 1 170 1 216 1 343 2 142 3 119 1 244 1 194 1 71 2 367 1 269 5 197 1 368 1 199 1 226 3 174 9 175 6 375 1 307 1 256 3 378 1 
231 1 4 7 162 1 38 2 338 1 22 1 213 4 90 1 170 1 239 1 216 1 142 1 119 1 244 1 367 1 269 2 368 1 226 1 174 3 175 2 375 1 256 1 307 1 
259 1 231 1 355 1 4 12 38 1 338 1 213 6 22 2 89 1 90 1 170 1 216 1 343 2 142 1 244 1 71 2 269 2 197 1 368 1 199 1 226 1 174 6 175 2 256 2 378 2 
259 1 231 4 355 2 134 1 4 17 162 1 38 3 338 1 213 8 22 2 89 1 90 4 239 1 170 1 216 1 343 2 142 4 119 1 244 1 194 2 71 2 367 1 197 1 269 5 368 1 199 1 226 4 174 9 175 8 375 1 307 1 256 3 378 1 
259 1 231 4 355 3 4 16 38 3 338 1 21 1 213 7 22 2 89 1 90 4 170 1 216 1 343 3 142 4 244 1 194 2 71 3 197 1 269 6 368 1 199 1 226 4 174 9 175 8 256 3 378 2 
355 3 4 7 162 3 367 3 38 3 269 6 213 4 22 1 174 3 375 2 239 1 307 1 256 1 
259 1 231 4 355 1 4 17 162 1 38 3 338 1 21 1 213 8 22 2 89 1 90 4 239 1 170 1 216 1 343 2 142 4 119 1 244 1 194 2 71 2 367 1 197 1 269 4 368 1 199 1 226 4 174 9 175 8 375 1 307 1 256 3 378 1 
79 1 217 1 186 1 48 1 88 1 301 1 115 1 
217 1 79 1 295 1 135 1 48 1 301 1 124 1 186 1 188 1 88 1 112 1 115 1 
324 1 67 1 315 1 202 1 263 1 373 1 25 1 196 1 285 1 332 1 165 1 
324 1 79 2 67 1 106 1 20 1 183 1 301 1 95 1 196 1 285 1 165 1 186 1 31 1 202 1 263 1 373 1 43 1 115 2 
324 2 79 2 154 1 155 1 106 1 20 1 183 2 301 2 284 1 95 1 327 1 196 3 285 1 165 1 270 1 186 1 31 2 202 1 263 1 350 1 373 1 43 1 115 2 
324 2 79 2 154 1 155 1 106 1 300 1 183 2 301 2 284 1 95 1 327 1 196 3 285 2 165 2 270 1 186 1 31 2 39 1 202 1 263 2 350 1 373 1 43 1 115 2 
324 1 154 1 67 1 281 1 182 1 159 1 183 1 172 2 327 1 285 3 347 1 196 4 165 3 72 1 302 2 75 1 39 1 169 1 202 1 263 3 350 1 373 1 214 1 
324 1 154 1 67 1 281 1 364 1 159 1 183 1 172 2 327 1 285 3 347 1 196 4 165 3 302 2 75 1 39 1 169 1 202 1 263 3 350 1 373 1 214 1 
202 1 263 1 373 1 308 1 285 1 165 1 
324 2 67 2 70 1 183 1 211 1 285 7 196 3 165 7 53 1 271 1 371 1 32 1 263 6 138 1 202 3 373 2 330 1 62 1 308 1 240 1 215 1 
79 2 35 1 231 2 4 5 183 1 285 1 6 2 38 2 186 1 90 2 239 1 43 1 142 2 45 1 301 1 95 1 196 1 200 1 202 1 101 1 307 1 256 1 208 2 106 1 20 1 162 1 165 1 22 1 213 3 24 1 263 1 215 1 115 2 324 1 119 1 367 1 269 2 126 1 173 1 128 1 31 1 226 2 174 2 175 4 373 1 375 1 130 1 
153 1 206 2 353 1 281 2 157 1 159 1 285 1 164 2 360 1 165 1 289 1 317 1 263 1 169 1 214 1 65 1 67 1 364 1 172 3 347 1 196 2 96 1 302 3 54 2 75 1 98 1 349 1 274 2 
324 1 234 1 183 1 285 2 196 2 165 2 263 2 138 1 202 2 373 1 214 1 308 1 215 1 
324 1 67 1 315 1 235 1 285 4 196 1 165 4 39 1 202 1 263 4 25 1 373 1 215 1 
323 1 324 1 154 1 183 1 211 1 285 2 196 1 165 2 328 1 263 2 202 2 373 1 330 1 322 1 
131 1 67 1 345 1 202 1 263 1 276 1 177 1 373 1 285 1 165 1 
324 1 230 1 53 1 202 1 32 1 263 2 373 1 196 1 285 2 215 1 165 2 
324 2 154 1 67 1 315 1 235 1 70 1 285 5 196 3 165 5 263 4 32 1 202 2 25 1 373 2 240 1 215 1 
324 2 154 1 67 1 315 1 235 1 51 1 285 5 196 3 165 5 263 4 32 1 202 2 25 1 373 2 240 1 215 1 
324 1 79 2 67 1 106 1 300 1 183 1 301 1 95 1 196 1 285 1 165 1 186 1 31 1 202 1 263 1 373 1 43 1 115 2 
324 1 154 1 183 1 211 1 285 1 196 1 165 1 263 1 138 1 202 2 373 1 330 1 62 1 
186 1 105 1 268 1 210 1 377 1 
79 1 312 1 155 1 280 1 105 2 158 1 159 1 210 2 160 1 284 2 163 1 186 1 40 1 169 1 293 1 115 1 65 1 44 1 268 1 172 2 301 1 95 1 302 2 270 1 369 1 31 1 75 1 377 2 56 1 
192 1 79 1 166 1 260 1 105 1 268 1 210 1 301 1 115 1 
312 1 158 1 268 1 
2 1 113 1 178 1 332 1 
205 1 370 1 193 1 2 1 77 1 113 1 178 1 
77 1 189 1 325 1 
205 1 193 1 2 1 365 1 358 1 262 1 370 3 76 1 77 3 321 2 113 1 178 1 
205 1 370 2 193 1 2 1 82 1 77 2 113 1 212 1 178 1 
205 1 370 1 193 1 47 1 276 1 77 1 365 1 177 1 113 1 248 1 14 1 
205 1 370 1 193 1 77 1 365 1 113 1 178 1 
205 1 370 1 193 1 2 1 77 1 365 1 178 2 
205 2 193 2 365 1 184 1 224 1 370 2 339 1 77 2 113 1 178 1 
205 1 26 1 193 1 2 1 82 2 47 1 49 1 365 1 370 3 77 3 113 2 178 1 10 1 
131 1 205 1 141 1 193 1 2 1 82 1 365 1 248 1 249 1 370 2 276 2 77 2 177 1 113 1 178 1 
205 2 193 2 2 1 82 2 47 1 365 1 212 1 348 1 370 4 77 4 113 2 178 1 10 1 
205 1 370 1 193 1 2 1 77 1 365 1 113 1 178 1 
205 1 193 1 2 2 82 2 47 1 358 1 370 4 76 1 291 1 77 4 321 1 113 3 178 2 10 1 
205 1 187 1 370 2 103 1 193 1 2 1 168 1 82 1 77 2 365 1 113 1 178 1 
205 1 370 3 193 1 2 1 167 1 76 1 77 3 365 1 321 2 358 2 113 1 178 1 
3 1 37 1 113 2 241 2 
205 1 370 1 193 1 273 1 77 1 365 1 
205 1 370 2 193 1 2 1 82 1 49 1 77 2 365 1 113 1 178 1 
16 1 
205 1 370 1 193 1 2 1 77 1 365 1 113 1 178 1 
205 1 370 3 193 1 2 1 82 1 49 1 77 3 365 1 321 1 113 1 178 1 
47 1 291 1 113 1 10 1 
113 1 178 1 

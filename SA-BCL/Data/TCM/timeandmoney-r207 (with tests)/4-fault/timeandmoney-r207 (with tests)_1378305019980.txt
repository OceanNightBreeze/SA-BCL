#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 199 9 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 199 9 200 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 199 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 148 2 272 1 298 1 253 1 3 2 6 1 65 1 198 1 152 1 112 2 131 2 281 1 133 1 13 2 158 1 183 1 135 1 116 2 185 4 267 5 24 6 54 2 189 1 246 9 165 1 58 9 248 3 
61 1 148 2 272 1 298 1 253 1 3 2 6 1 65 1 198 1 152 1 112 2 131 2 281 1 133 1 13 2 158 1 183 1 135 1 116 2 185 4 267 5 24 6 54 2 189 1 246 9 165 1 58 9 248 3 
61 1 148 2 272 1 298 1 253 1 3 2 6 1 65 1 198 1 152 1 112 2 131 2 281 1 133 1 13 2 158 1 183 1 135 1 116 2 185 5 267 6 24 7 54 2 189 1 246 10 165 1 58 10 248 4 
61 1 148 2 272 1 253 1 3 1 6 1 65 1 198 1 152 1 112 2 131 2 281 1 133 1 13 2 158 1 183 1 135 1 116 2 185 3 267 4 24 4 54 2 189 1 246 7 165 1 58 7 248 2 
148 1 298 1 253 1 3 2 116 1 185 2 267 3 24 3 189 1 246 4 165 1 112 1 248 1 58 4 131 1 281 1 13 1 158 1 
135 1 253 1 74 1 116 1 184 1 6 1 267 1 54 1 246 2 165 1 354 1 112 1 58 2 131 1 13 1 158 1 
61 1 54 1 246 3 165 1 253 1 248 1 58 3 116 2 267 2 185 1 13 2 158 1 24 1 
60 1 61 1 148 1 272 1 298 1 253 1 3 2 305 1 112 1 281 1 131 1 13 2 158 1 183 1 116 2 185 4 267 5 24 7 54 1 189 1 246 9 165 1 248 3 58 9 
60 1 61 1 148 1 272 1 298 1 253 1 3 2 305 1 112 1 281 1 131 1 13 2 158 1 183 1 116 2 185 4 267 5 24 7 54 1 189 1 246 9 165 1 248 3 58 9 
38 1 17 1 160 1 
17 1 260 2 293 1 
204 1 261 2 289 2 232 2 144 2 95 2 301 2 145 1 
31 1 123 1 332 2 2 1 5 2 232 3 82 1 301 2 8 1 126 1 277 1 342 1 110 1 111 1 40 1 279 1 261 2 14 1 265 1 204 1 19 1 289 2 346 1 210 2 21 1 95 2 227 1 350 2 211 1 213 2 75 1 139 1 144 3 100 1 358 1 329 1 145 1 
1 1 204 1 143 1 297 1 261 1 289 1 232 1 144 1 95 1 301 1 
17 1 149 1 334 1 223 1 336 1 232 1 36 1 38 1 351 1 143 1 261 1 144 1 201 1 156 1 
17 1 149 1 334 1 336 2 289 1 232 1 301 1 95 1 36 1 38 1 351 1 143 1 261 1 144 1 156 2 
221 1 251 1 336 1 101 1 156 1 
38 1 214 1 221 1 251 1 17 1 336 2 66 1 156 2 
251 1 336 1 156 1 
1 1 221 1 159 1 204 1 297 1 336 1 289 1 232 1 301 1 95 1 143 1 261 1 144 1 156 1 
17 1 
38 1 214 1 221 1 251 1 17 1 80 1 336 2 156 2 
0 1 221 2 251 2 17 1 336 5 170 2 173 1 327 2 38 1 214 1 304 2 164 1 356 1 156 5 157 1 216 1 59 1 103 1 30 1 
160 1 145 1 
289 1 232 2 301 1 95 1 245 1 261 2 144 2 179 1 145 2 
330 1 355 1 255 1 
31 1 332 1 2 1 346 1 232 1 210 1 21 1 349 1 126 1 211 1 213 1 342 1 279 1 144 1 100 1 145 1 
31 1 332 1 2 1 229 1 346 1 232 2 21 1 243 1 210 1 301 1 95 1 255 1 211 1 126 1 342 1 213 1 279 1 261 1 144 2 100 1 
261 3 289 1 232 3 144 3 243 1 95 3 301 3 145 1 
1 1 143 1 261 1 232 1 144 1 95 1 301 1 
245 1 143 1 261 1 289 1 232 1 144 1 179 1 95 1 301 1 
31 1 147 1 332 1 2 1 149 1 334 1 229 1 336 1 5 2 232 4 82 1 301 3 36 1 8 1 126 1 277 1 342 1 110 1 111 1 279 1 261 3 156 1 323 1 265 1 204 1 19 1 346 1 289 2 21 1 243 1 210 1 95 3 350 1 211 1 351 1 245 1 213 1 75 1 139 1 143 1 100 1 144 4 329 1 145 1 
261 2 232 2 144 2 243 1 201 1 95 1 301 1 291 1 145 1 
17 1 334 1 149 1 229 1 336 1 289 1 232 3 243 2 301 3 95 3 36 1 351 1 245 1 143 1 261 3 144 3 156 1 323 1 43 1 
289 1 232 2 243 1 301 2 95 2 255 1 245 1 261 2 355 1 144 2 
31 1 332 1 2 1 346 1 232 1 210 1 21 1 126 1 211 1 213 1 342 1 279 1 144 1 100 1 145 1 
31 1 332 1 2 1 318 1 346 1 232 1 210 1 126 1 211 1 213 1 342 1 220 1 279 1 144 1 145 1 
330 2 273 1 171 1 5 2 82 1 255 2 67 1 110 1 111 1 153 1 40 2 132 1 89 1 240 1 265 1 19 1 207 1 137 1 345 1 350 4 187 1 139 1 75 2 355 2 
352 1 143 1 261 1 232 1 144 1 36 1 95 1 301 1 
229 1 289 1 232 5 243 2 301 4 95 4 291 1 245 1 52 1 261 5 144 5 215 1 201 1 145 1 
352 1 1 1 143 1 261 2 232 2 144 2 95 2 301 2 
48 1 192 1 
48 1 192 1 
56 1 96 1 
56 1 96 1 
56 1 96 1 
48 1 174 1 192 1 
48 1 174 1 192 1 
129 1 48 1 192 1 
56 1 48 2 70 1 192 2 91 1 96 1 
48 1 174 1 192 1 
286 1 48 1 192 1 
286 1 48 1 192 1 
286 1 48 1 192 1 
9 1 199 1 154 1 48 1 340 1 192 1 
9 1 199 1 154 1 48 1 336 1 340 1 192 1 156 1 200 1 
148 1 112 1 131 1 
112 1 354 1 131 1 
148 2 319 1 27 1 354 1 348 1 131 3 
148 1 319 1 354 1 348 1 131 2 83 1 
148 1 319 1 354 1 348 2 131 2 
251 1 273 1 335 2 170 1 336 5 81 1 109 1 38 1 39 1 67 1 304 1 237 1 260 3 68 2 11 1 156 5 322 1 157 3 180 1 324 1 221 4 17 2 73 1 137 1 345 1 209 2 327 1 293 1 214 1 164 1 120 1 103 2 
168 1 251 6 273 3 335 6 336 9 170 2 7 5 38 1 10 1 67 3 304 2 237 1 260 9 68 6 263 1 11 2 156 9 322 2 157 8 180 3 221 7 44 1 73 4 17 5 137 3 345 3 225 1 327 2 293 3 214 1 164 1 312 1 101 5 216 1 103 6 
273 1 335 2 170 1 336 3 81 1 109 1 38 1 67 1 304 1 260 4 68 2 11 1 156 3 322 1 157 3 180 1 221 2 17 3 73 1 137 1 345 1 209 1 327 1 293 2 216 1 103 2 
273 2 335 4 170 1 336 4 81 1 109 1 38 1 10 1 67 2 304 1 260 7 68 4 263 1 11 1 156 4 322 1 157 5 180 2 221 3 17 4 73 2 137 2 345 2 225 1 209 2 327 1 293 3 216 1 103 4 
31 1 160 1 256 1 
31 1 299 1 
347 1 
31 1 342 1 
31 3 203 1 342 1 155 1 211 1 256 2 
31 1 342 1 211 1 
31 1 117 1 
105 1 72 1 345 1 290 1 226 1 84 1 350 7 25 2 67 1 75 3 153 2 40 4 55 1 119 1 177 1 28 1 132 3 
105 1 72 1 345 1 290 1 226 1 84 1 350 7 25 2 67 1 75 3 153 2 40 4 55 1 119 1 177 1 28 1 132 3 
105 1 72 1 124 1 345 1 290 1 226 1 84 1 350 7 25 2 67 1 75 3 153 2 40 4 55 1 119 1 177 1 28 1 132 3 
105 1 146 3 106 1 194 1 273 3 5 2 84 1 341 1 67 4 110 1 111 1 153 5 259 1 40 16 177 5 132 10 180 3 72 2 45 1 19 1 137 3 345 4 290 1 226 2 350 31 25 3 139 1 75 15 269 1 141 1 55 2 119 2 28 1 191 4 
105 1 72 1 194 1 19 2 62 1 345 1 5 4 290 1 226 1 84 1 350 9 244 1 25 2 67 1 75 4 111 2 139 2 110 2 153 3 40 5 55 1 119 1 177 1 132 4 
331 1 332 1 148 1 125 1 253 1 320 1 126 1 257 1 279 1 41 1 112 1 131 2 13 1 158 1 114 1 92 1 266 1 116 1 210 1 267 1 292 1 24 1 213 1 54 1 190 1 246 2 27 1 165 1 354 1 58 2 
331 1 332 1 148 1 125 1 253 1 320 1 126 1 257 1 279 1 306 1 41 1 112 1 88 1 131 2 13 1 114 1 92 1 266 1 116 1 210 1 267 1 186 1 24 2 213 1 54 1 27 1 246 3 165 1 354 1 58 3 
331 1 332 1 148 1 253 1 320 1 126 1 257 1 279 1 306 1 112 1 131 2 114 1 92 1 266 1 210 1 267 1 186 1 24 2 213 1 54 1 246 2 27 1 165 1 354 1 58 2 
31 1 331 2 332 1 2 1 92 2 94 1 115 1 300 1 116 1 210 1 126 1 257 2 342 1 213 1 54 2 279 1 246 1 58 1 344 1 88 1 295 1 90 1 13 1 
331 1 332 1 148 1 125 1 320 1 126 1 257 1 279 1 306 1 41 1 112 1 131 2 13 1 158 1 114 1 92 1 266 1 116 1 210 1 292 1 213 1 54 1 246 1 27 1 354 1 58 1 
140 1 
2 2 149 1 231 1 232 1 278 2 279 1 11 1 156 5 201 1 157 2 283 1 284 2 17 2 325 2 162 1 327 1 210 2 293 2 213 2 214 3 328 1 164 1 249 1 295 1 167 1 31 1 332 2 251 6 34 1 334 1 169 1 336 5 170 1 36 1 126 1 38 1 342 1 304 1 260 2 261 1 87 4 264 1 134 2 223 1 94 1 308 2 50 1 188 2 351 1 142 2 143 1 98 1 57 1 144 1 103 2 
251 2 149 1 334 1 80 1 169 1 231 1 336 3 232 1 36 1 261 1 87 2 201 1 156 3 264 1 223 1 325 1 351 1 214 1 143 1 98 1 144 1 249 1 
251 1 149 1 334 1 80 1 169 1 231 1 336 3 232 1 36 1 38 1 261 1 87 3 201 1 156 3 264 1 17 1 223 1 308 1 351 1 214 1 143 1 98 1 144 1 249 1 
251 2 80 1 149 1 334 1 169 1 231 1 336 3 232 1 36 1 38 1 261 1 87 3 201 1 156 3 264 1 17 1 223 1 325 1 308 1 351 1 214 1 143 1 142 1 98 1 144 1 249 1 
149 1 231 1 232 1 64 1 278 2 156 5 201 1 202 1 157 1 15 1 284 2 17 5 325 4 162 1 327 1 293 2 212 1 214 3 328 1 164 1 249 1 251 7 334 1 80 1 169 1 336 5 170 1 36 1 175 1 38 5 304 1 261 1 87 6 264 1 134 2 223 1 308 4 188 2 351 1 142 4 143 1 98 1 144 1 103 1 
149 1 231 1 232 1 278 2 201 1 156 4 157 1 284 2 17 2 325 2 162 1 327 1 293 2 214 2 328 1 164 1 249 1 251 4 334 1 169 1 336 4 170 1 36 1 38 1 304 1 260 2 261 1 87 4 264 1 134 2 223 1 308 2 188 2 351 1 143 1 142 2 98 1 144 1 57 1 103 1 
251 4 149 1 334 1 169 1 231 1 336 4 170 1 232 1 36 1 38 1 278 2 304 1 261 1 87 4 201 1 156 4 202 1 157 1 264 1 15 1 284 2 134 2 17 1 223 1 325 2 308 2 162 1 327 1 293 2 188 2 351 1 212 1 214 2 328 1 142 2 143 1 98 1 164 1 144 1 249 1 103 1 
251 4 149 1 334 1 169 1 231 1 336 4 170 1 232 1 36 1 38 1 278 2 304 1 261 1 87 4 201 1 156 4 202 1 157 1 264 1 15 1 284 2 134 2 17 1 223 1 325 2 308 2 162 1 327 1 293 2 188 2 351 1 212 1 214 2 328 1 142 2 143 1 98 1 164 1 144 1 249 1 103 1 
104 1 251 4 149 1 334 1 169 1 231 1 336 4 170 1 232 1 36 1 38 1 304 1 260 2 261 1 280 2 87 4 201 1 156 4 157 1 264 1 284 2 17 1 93 2 223 1 325 2 308 2 51 1 138 1 162 1 327 1 188 2 351 1 212 1 214 2 142 2 143 1 98 1 164 1 144 1 249 1 103 1 
251 5 149 1 334 1 169 1 170 1 231 1 336 4 232 1 36 1 175 1 38 1 278 2 304 1 261 1 87 5 202 1 201 1 156 4 157 1 264 1 15 1 284 2 134 2 17 1 223 1 325 3 308 3 162 1 327 1 293 2 188 2 351 1 212 1 214 2 328 1 143 1 142 3 164 1 98 1 144 1 249 1 103 1 
251 5 149 1 334 1 169 1 170 1 231 1 336 4 232 1 36 1 175 1 38 1 278 2 304 1 261 1 87 5 202 1 201 1 156 4 157 1 264 1 15 1 284 2 134 2 17 1 223 1 325 3 308 3 162 1 327 1 293 2 188 2 351 1 212 1 214 2 328 1 143 1 142 3 164 1 98 1 144 1 249 1 103 1 
149 1 231 1 232 1 280 2 201 1 156 4 157 1 284 2 17 1 325 2 162 1 327 1 214 2 164 1 249 1 251 4 334 1 169 1 336 4 170 1 36 1 38 1 304 1 260 2 261 1 87 4 264 1 93 2 223 1 308 2 51 1 188 2 351 1 143 1 142 2 98 1 144 1 57 1 103 1 
105 1 330 1 5 2 82 1 84 1 255 1 67 1 110 1 111 1 153 2 40 3 132 2 72 1 265 1 19 1 207 1 345 1 160 1 290 1 350 6 25 1 139 1 75 3 55 1 355 1 145 2 
330 11 146 3 273 1 4 1 5 4 82 1 8 1 255 11 67 2 219 1 110 2 111 2 153 1 259 1 40 8 177 1 132 2 180 2 265 2 19 2 137 2 49 1 345 1 161 1 350 14 75 6 139 2 141 1 355 4 191 3 358 1 193 1 145 1 
31 1 332 1 2 1 229 1 232 2 5 2 82 1 301 1 126 1 8 1 342 1 111 1 110 1 40 1 279 1 261 1 42 1 265 1 19 1 346 1 161 1 21 1 210 1 243 1 95 1 349 1 211 1 350 2 213 1 139 1 75 1 77 1 355 1 228 1 100 1 144 2 358 1 145 1 
332 1 265 1 2 1 19 1 46 1 229 1 5 2 232 1 161 1 210 1 243 1 301 1 95 1 82 1 213 1 110 1 111 1 139 1 261 1 144 1 
31 3 332 7 123 2 2 2 232 1 5 4 35 1 301 1 82 2 126 2 8 1 342 2 110 2 111 2 321 1 40 1 279 2 306 1 261 1 282 1 71 1 16 1 265 2 19 2 285 1 207 1 94 1 243 1 210 8 95 1 350 2 213 8 139 2 75 1 190 1 144 1 271 1 295 1 358 1 
330 1 273 1 5 2 232 1 301 1 82 1 255 1 67 1 110 1 111 1 153 1 40 1 261 1 132 1 180 1 265 1 19 1 137 1 289 1 345 1 161 1 95 1 350 3 245 1 139 1 75 2 355 1 144 1 78 1 
330 1 265 1 19 1 207 1 137 1 5 2 82 1 255 1 350 2 67 1 111 1 139 1 110 1 40 2 177 1 355 1 132 1 240 1 
330 1 265 1 19 1 207 1 273 1 171 1 345 1 5 2 82 1 255 1 350 2 111 1 139 1 110 1 75 2 153 1 355 1 132 1 
330 2 273 1 5 2 82 1 255 2 67 1 110 1 111 1 153 1 40 2 177 1 132 2 180 1 265 1 19 1 207 1 137 1 345 1 350 4 139 1 75 2 355 2 
330 1 265 1 19 1 137 1 5 2 82 1 255 1 350 2 67 1 111 1 139 1 110 1 321 1 40 2 177 1 355 1 132 1 240 1 
330 1 265 1 19 1 273 1 171 1 345 1 5 2 82 1 255 1 350 2 111 1 139 1 110 1 75 2 153 1 321 1 355 1 132 1 
330 2 273 1 5 2 82 1 255 2 67 1 110 1 111 1 321 1 153 1 40 2 177 1 132 2 180 1 265 1 19 1 137 1 345 1 350 4 139 1 75 2 355 2 
330 2 273 1 5 2 82 1 255 2 67 1 110 1 111 1 153 1 40 2 177 1 132 2 180 1 265 1 19 1 137 1 345 1 350 4 139 1 75 2 355 2 
31 1 332 1 2 1 232 1 5 2 82 1 126 1 8 1 342 1 111 1 110 1 40 1 279 1 265 1 19 1 346 1 21 1 210 1 350 2 211 1 213 1 139 1 75 1 100 1 144 1 358 1 329 1 145 1 
332 1 265 1 2 1 19 1 208 1 5 2 210 1 82 1 350 1 8 1 213 1 75 1 111 1 139 1 110 1 258 1 143 1 145 1 
330 2 273 1 5 2 82 1 255 2 67 1 110 1 111 1 153 1 40 2 177 1 132 2 180 1 265 1 19 1 137 1 345 1 161 1 350 4 139 1 75 2 355 2 
330 2 31 1 332 1 273 1 172 1 232 1 5 2 82 1 255 2 126 1 67 1 342 1 111 1 110 1 153 1 40 2 279 1 177 1 132 2 180 1 265 1 19 1 137 1 345 1 346 1 21 1 210 1 350 4 211 1 213 1 75 2 139 1 190 1 355 2 100 1 144 1 329 1 
330 1 273 1 5 2 232 1 301 1 82 1 255 1 67 1 110 1 111 1 128 1 40 2 177 1 261 1 132 1 180 1 265 1 19 1 137 1 345 1 289 1 161 1 95 1 350 3 245 1 75 1 139 1 355 1 144 1 
105 1 315 1 146 3 316 1 194 1 273 4 62 1 5 6 236 4 67 5 111 3 110 3 153 4 238 1 69 2 12 1 72 1 242 1 18 1 19 3 290 1 22 1 25 1 75 21 218 1 84 1 176 1 40 20 259 3 177 4 132 8 180 4 137 4 345 5 350 41 353 1 139 3 141 1 55 1 311 1 99 1 314 1 191 4 
315 1 105 1 316 1 146 3 194 2 62 1 273 3 5 8 218 1 84 1 236 4 176 1 67 5 110 4 111 4 153 4 259 3 40 20 238 1 177 3 69 2 132 7 12 1 180 4 72 1 18 1 242 1 19 4 137 4 345 4 290 1 22 1 350 38 25 1 353 1 139 4 75 18 141 1 55 1 311 1 99 1 191 4 314 1 
315 1 105 1 316 1 146 4 194 1 62 1 273 7 5 4 218 1 84 1 236 4 176 1 67 8 219 2 110 2 111 2 153 7 259 2 40 27 238 1 177 7 69 1 132 14 12 1 180 7 72 1 242 1 19 2 137 7 345 8 290 1 22 1 350 52 25 1 139 2 75 25 141 2 55 1 311 1 99 1 191 4 314 1 
315 1 146 1 62 1 273 3 5 4 218 1 236 2 67 3 110 2 111 2 153 3 259 1 40 9 238 1 177 3 69 1 132 6 241 1 180 3 242 2 19 2 137 3 345 3 350 19 353 1 139 2 75 10 141 1 191 2 314 1 
315 1 146 2 316 1 194 2 62 1 273 2 5 6 218 1 236 4 176 1 67 3 110 3 111 3 153 2 40 14 259 2 238 1 177 2 132 4 69 2 12 1 180 3 242 1 19 3 137 3 345 2 22 1 350 26 75 12 139 3 311 1 99 1 314 2 191 2 
31 1 250 1 195 1 123 2 332 2 333 1 232 2 5 2 197 1 82 1 126 1 8 1 342 1 111 1 110 1 40 1 279 1 261 2 71 1 265 1 19 1 285 1 161 1 210 2 350 2 213 2 268 1 139 1 75 1 144 2 358 1 
332 2 148 1 114 1 320 1 210 2 126 1 257 1 213 2 85 1 27 1 279 1 190 1 306 1 313 1 41 1 112 1 354 1 294 1 131 2 
332 1 148 1 114 1 320 1 210 1 151 1 126 1 257 1 213 1 85 1 27 1 279 1 306 1 41 1 112 1 354 1 131 2 
31 1 332 1 2 1 94 1 300 1 210 1 126 1 257 1 342 1 213 1 279 1 313 1 295 1 29 1 
332 1 148 1 114 1 320 1 210 1 126 1 257 1 213 1 85 1 27 1 279 1 306 1 313 1 41 1 112 1 354 1 294 1 131 2 
222 1 
38 1 17 1 160 1 173 1 356 1 157 1 103 1 
251 1 170 1 336 1 38 1 278 1 304 1 260 1 156 1 157 1 134 1 17 2 327 1 293 1 214 1 328 1 164 1 103 1 
2 1 230 2 273 2 150 1 67 2 279 3 68 6 155 1 11 2 156 5 157 9 17 8 206 1 287 1 288 2 20 1 327 4 210 3 211 3 117 2 293 6 213 3 214 3 164 4 31 10 32 2 33 1 332 3 251 5 334 2 335 6 170 4 336 5 299 3 173 1 339 2 254 2 126 4 256 2 38 2 342 3 304 4 260 12 86 2 180 2 224 2 137 2 345 2 50 1 53 2 190 1 356 1 357 2 103 8 
146 1 316 1 251 1 335 5 273 2 336 1 170 2 337 1 338 1 38 2 176 1 67 2 304 2 259 1 260 6 86 2 68 5 11 1 12 1 156 1 157 8 180 2 17 5 137 2 288 1 345 2 50 1 327 2 22 1 293 3 214 1 164 2 311 1 191 1 103 5 
1 1 297 1 170 1 336 1 232 1 301 1 67 2 304 1 86 2 261 1 113 1 202 1 156 1 157 2 72 1 159 1 204 1 288 1 345 1 289 1 327 1 290 1 95 1 143 1 55 1 164 1 144 1 103 2 
17 1 170 1 173 1 327 1 38 1 304 1 164 1 356 1 157 1 103 1 
17 5 335 5 273 2 224 1 137 2 288 1 345 2 293 5 67 2 260 10 86 2 68 5 157 5 180 2 103 5 
38 1 214 1 251 1 17 1 336 1 156 1 
31 1 33 1 332 4 251 4 2 2 170 2 336 3 126 1 342 1 304 2 279 1 11 2 156 3 157 2 283 1 307 1 206 2 94 1 50 2 327 2 210 4 213 4 214 2 164 1 166 1 216 1 167 1 295 1 103 2 
31 1 332 1 2 1 5 2 232 3 301 2 82 1 8 1 126 1 277 1 342 1 110 1 111 1 279 1 261 2 204 1 265 1 19 1 289 2 346 1 210 1 21 1 95 2 350 1 211 1 213 1 75 1 139 1 144 3 100 1 329 1 145 1 
17 4 335 2 170 1 50 1 327 1 293 2 25 1 38 2 304 1 260 4 164 1 68 2 11 1 157 1 103 2 
199 1 154 1 
199 1 154 1 
199 1 154 1 
199 1 154 1 
199 1 154 1 
199 1 154 1 
199 1 154 1 
199 1 154 1 
48 1 192 1 
105 1 146 1 62 1 5 2 84 1 67 1 110 1 111 1 153 2 259 1 40 4 132 2 72 1 19 1 345 1 290 1 22 1 350 8 25 1 75 4 139 1 55 1 191 1 
105 1 146 1 62 1 5 4 84 1 67 2 110 2 111 2 153 2 259 1 40 6 177 1 132 3 180 1 72 1 19 2 137 1 345 1 290 1 22 1 350 11 25 1 75 5 139 2 97 1 141 1 55 1 191 2 
105 1 146 1 316 1 194 1 62 1 273 2 5 6 84 1 176 1 67 3 110 3 111 3 153 3 259 1 40 9 177 1 132 4 12 1 180 2 72 1 19 3 137 2 345 3 290 1 22 1 350 19 25 1 75 10 139 3 97 1 55 1 311 1 191 1 
105 1 146 1 316 1 194 1 62 1 273 1 5 6 84 1 176 1 67 3 110 3 111 3 153 3 259 1 40 10 177 2 132 5 12 1 180 2 72 1 19 3 137 2 345 2 290 1 22 1 350 17 25 1 75 7 139 3 97 1 55 1 311 1 191 1 
105 1 146 1 62 1 5 2 84 1 67 1 110 1 111 1 153 2 259 1 40 4 132 2 72 1 19 1 345 1 290 1 22 1 350 8 25 1 75 4 139 1 55 1 191 1 
146 1 316 1 62 1 273 2 5 2 176 1 67 2 110 1 111 1 153 1 259 1 40 6 177 1 132 2 12 1 180 2 19 1 137 2 345 2 22 1 350 12 75 6 139 1 311 1 191 1 
105 1 146 1 316 1 194 2 62 1 273 1 5 8 84 1 176 1 67 3 110 4 111 4 153 3 259 1 40 10 177 2 132 5 12 1 180 2 72 1 19 4 137 2 345 2 290 1 22 1 350 18 25 1 75 8 139 4 97 1 55 1 311 1 191 1 
146 1 316 1 194 2 62 1 273 2 5 8 176 1 67 3 110 4 111 4 153 3 259 1 40 9 177 3 132 6 12 1 180 3 19 4 137 3 345 2 22 1 350 16 353 1 75 7 139 4 311 1 191 1 
105 1 72 3 345 1 290 1 84 2 350 7 67 1 75 4 153 3 40 3 55 3 177 3 132 6 
105 1 146 1 316 1 194 2 62 1 273 1 5 8 84 1 176 1 67 3 110 4 111 4 153 3 259 1 40 10 177 1 132 4 12 1 180 2 72 1 19 4 137 2 345 2 290 1 22 1 350 18 25 1 353 1 75 8 139 4 55 1 311 1 191 1 
105 1 72 1 194 1 19 2 345 1 5 4 290 1 84 1 350 8 25 1 67 1 75 4 111 2 139 2 110 2 153 2 40 4 55 1 177 1 132 3 
105 1 72 1 345 1 160 1 290 1 84 1 350 6 25 1 67 1 75 3 153 2 40 3 55 1 132 2 
19 1 273 1 137 1 345 1 5 2 350 4 67 1 75 2 111 1 139 1 110 1 153 1 97 1 40 2 177 1 132 2 180 1 
146 1 273 1 137 1 345 1 350 7 67 1 75 4 153 1 259 1 40 3 141 1 177 1 191 2 132 2 180 1 
105 1 146 2 194 2 273 2 4 1 5 4 84 1 37 1 67 3 219 1 111 2 110 2 153 5 40 11 177 4 132 9 180 2 72 2 19 2 137 2 345 3 290 1 350 23 25 1 75 12 139 2 141 1 55 2 191 2 
75 1 191 1 350 1 
146 1 40 1 350 1 
19 1 273 1 224 1 137 1 345 1 5 2 350 6 67 1 110 1 139 1 111 1 75 3 97 1 153 2 40 3 177 1 132 3 180 1 
146 1 316 1 62 1 273 2 5 2 176 1 67 2 110 1 111 1 153 1 259 1 40 6 177 1 132 2 12 1 180 2 19 1 137 2 345 2 22 1 350 12 75 6 139 1 311 1 191 1 
72 1 345 1 290 1 350 6 67 1 75 3 153 1 40 3 55 1 177 1 132 2 
105 1 72 1 194 1 19 1 5 2 84 1 37 1 350 3 75 2 111 1 139 1 110 1 153 1 40 1 55 1 177 1 132 2 
72 2 19 1 62 1 345 2 5 2 290 1 350 10 67 2 110 1 139 1 111 1 75 5 153 3 40 5 55 2 177 2 113 1 132 5 
19 1 62 1 137 1 5 2 350 2 67 1 111 1 139 1 110 1 40 2 177 1 132 1 
19 1 273 1 62 1 137 1 345 1 5 2 350 4 67 1 75 2 111 1 139 1 110 1 153 1 40 2 177 1 132 2 180 1 
72 1 194 1 19 3 62 1 5 6 37 1 350 3 353 1 75 2 111 3 139 3 110 3 153 1 40 1 55 1 177 1 132 2 
105 1 106 1 146 3 194 2 62 1 273 3 5 10 84 1 37 1 341 1 67 5 110 5 111 5 153 7 259 1 40 16 177 5 132 12 180 3 72 3 45 1 19 5 137 3 345 5 290 2 350 34 25 1 353 1 75 18 139 5 97 1 141 1 55 3 191 4 
261 1 343 1 232 1 144 1 201 1 291 1 145 1 
118 1 127 1 261 1 252 1 270 1 343 1 232 1 144 1 201 1 291 1 310 1 145 1 
31 1 342 1 213 1 332 1 2 1 279 1 94 1 160 1 210 1 295 1 126 1 
31 1 332 1 2 1 346 1 232 2 243 1 210 1 21 1 301 1 95 1 211 1 126 1 342 1 213 1 279 1 261 1 144 2 145 1 
31 3 332 1 206 1 346 1 232 2 243 1 210 1 21 1 254 1 36 1 301 1 95 2 117 1 211 2 126 1 351 1 342 2 213 1 143 1 279 1 261 2 144 2 145 1 
31 3 332 2 318 1 232 2 301 1 36 1 254 1 126 1 342 2 279 1 261 2 206 1 346 1 210 2 243 1 95 2 23 1 211 2 117 1 351 1 213 2 143 1 144 2 145 1 
31 4 332 3 251 1 2 1 334 1 336 2 299 1 254 1 126 1 256 1 235 1 38 1 342 1 279 1 156 2 17 1 205 1 206 1 210 3 23 1 211 1 117 1 213 3 
31 4 332 3 251 1 2 1 17 1 334 1 206 1 336 2 299 1 339 1 210 3 254 1 23 1 117 1 211 1 126 1 256 1 38 1 342 1 213 3 279 1 156 2 
213 1 332 1 279 1 210 1 282 1 126 1 
71 1 31 3 123 1 16 1 332 6 182 1 2 2 47 1 196 1 35 1 210 7 211 1 126 3 213 7 342 2 190 1 279 2 306 1 155 1 271 1 282 1 
330 1 105 1 31 1 332 1 232 2 5 4 172 1 82 2 301 1 84 1 255 1 126 1 67 1 342 1 111 2 110 2 153 2 40 3 279 1 261 1 132 2 72 1 265 2 19 2 345 1 346 1 161 1 290 1 243 1 210 1 21 1 95 1 350 6 211 1 25 1 213 1 75 3 139 2 268 1 55 1 190 1 247 1 355 1 144 2 100 1 329 1 145 2 
32 1 31 2 33 1 332 1 251 2 2 1 334 1 170 2 336 3 299 1 173 1 339 1 256 1 38 1 304 2 156 3 157 1 221 1 17 1 327 2 210 1 213 1 214 1 53 1 164 2 356 1 357 1 103 1 
31 2 332 2 287 1 210 2 211 1 126 2 256 1 213 2 342 1 190 1 279 1 155 1 282 1 
31 1 332 4 2 1 94 1 210 4 23 1 126 1 276 1 213 4 342 1 190 1 279 1 295 1 
122 1 31 1 332 2 182 1 296 1 206 1 47 1 210 2 211 1 126 2 213 2 302 1 342 1 279 1 
213 1 332 1 114 1 2 1 279 1 112 1 354 1 131 1 210 1 126 1 
71 1 31 1 332 2 210 2 197 1 126 1 213 2 342 1 190 1 279 1 306 1 
71 1 31 3 332 4 16 1 2 1 206 1 94 1 210 5 126 2 276 1 213 5 342 2 190 1 279 2 271 1 295 1 
71 1 31 3 332 4 16 1 2 1 206 1 94 1 210 5 126 2 276 1 213 5 342 2 190 1 279 2 262 1 295 1 
31 1 332 1 2 1 318 1 346 1 232 2 243 1 210 1 301 1 95 1 211 1 126 1 342 1 213 1 279 1 261 1 144 2 145 1 
31 1 332 1 182 1 47 1 206 1 196 1 210 1 211 1 126 2 213 1 342 1 279 1 155 1 
163 1 317 1 108 1 275 1 145 1 
221 1 17 1 317 2 334 1 149 1 136 1 336 2 108 1 36 1 275 2 38 1 351 1 163 2 143 1 239 1 178 1 156 2 323 1 145 1 
250 1 195 1 333 1 317 1 261 1 108 1 232 1 144 1 275 1 
136 1 108 1 178 1 
165 1 253 1 160 1 267 1 
246 1 165 1 253 1 58 1 116 1 267 1 13 1 
331 1 54 1 58 1 
253 1 116 1 6 2 267 1 246 3 165 1 58 3 130 1 102 1 121 1 13 1 158 1 
246 2 165 1 253 1 3 1 58 2 116 1 267 1 13 1 24 1 
148 1 116 1 185 1 267 1 189 1 246 1 112 1 58 1 131 1 13 1 158 1 
246 1 253 1 58 1 116 1 267 1 13 1 158 1 
246 1 165 1 253 2 58 1 116 1 13 1 158 1 
217 1 107 1 246 2 253 1 326 1 58 2 116 2 267 1 13 2 158 1 
183 1 272 1 253 1 116 1 185 1 267 2 24 2 246 3 165 1 58 3 248 1 13 1 158 1 
148 1 253 1 116 1 267 1 233 1 24 1 246 2 27 1 165 1 354 1 112 1 58 2 131 2 13 1 158 1 
298 1 253 1 3 1 116 2 185 1 267 2 24 2 246 4 165 1 58 4 248 1 13 2 158 1 
246 1 165 1 253 1 58 1 116 1 267 1 13 1 158 1 
181 1 253 2 116 1 6 1 185 1 267 3 24 2 246 4 165 2 58 4 248 1 121 1 102 1 13 1 
60 1 253 1 63 1 116 1 267 1 24 1 303 1 246 2 165 1 58 2 13 1 158 1 
253 1 116 1 6 2 267 1 76 1 246 3 165 1 58 3 102 1 121 2 13 1 158 1 
274 1 267 2 234 1 79 2 
246 1 58 1 116 1 309 1 13 1 158 1 
272 1 246 2 165 1 253 1 58 2 116 1 267 1 13 1 158 1 24 1 
26 1 
246 1 165 1 253 1 58 1 116 1 267 1 13 1 158 1 
272 1 246 3 165 1 253 1 58 3 116 1 6 1 267 1 13 1 158 1 24 1 
181 1 248 1 267 1 185 1 
253 1 267 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 2 232 1 205 1 98 1 277 1 209 1 255 7 4 1 28 1 5 2 146 1 6 2 237 1 260 1 78 3 128 7 333 1 153 1 12 2 315 3 85 1 89 2 227 1 114 2 294 2 252 1 94 4 324 1 
160 2 232 1 205 1 98 1 277 1 209 1 255 7 4 1 28 1 5 2 146 1 6 2 237 1 260 1 78 3 128 7 333 1 153 1 12 2 315 3 85 1 89 2 227 1 114 2 294 2 252 1 94 4 324 1 
160 2 232 1 205 1 98 1 277 1 209 1 255 7 4 1 28 1 5 2 146 1 6 2 237 1 260 1 78 3 128 7 333 1 153 1 12 2 315 3 85 1 89 2 227 1 114 2 294 2 252 1 94 4 324 1 
160 2 232 1 205 1 98 1 277 1 209 1 255 7 4 1 28 1 5 2 146 1 6 2 237 1 260 1 78 4 128 7 333 1 12 2 315 3 85 1 89 2 227 1 114 2 294 2 252 1 94 4 324 1 
153 1 160 1 12 1 315 1 205 1 98 1 255 2 4 1 5 1 146 1 89 1 260 1 78 1 114 1 128 2 94 1 324 1 
160 1 314 1 12 1 205 1 98 1 85 1 73 1 255 2 209 1 4 1 5 1 89 1 78 1 128 2 251 1 294 1 
315 1 205 1 98 1 255 3 4 1 5 2 89 2 6 1 78 2 128 3 294 1 252 1 94 1 
160 1 205 1 98 1 277 1 255 7 4 1 5 2 146 1 6 2 260 1 78 3 128 7 333 1 153 1 12 1 315 3 89 2 139 1 114 1 294 1 348 1 252 1 94 5 324 1 
160 1 205 1 98 1 277 1 255 7 4 1 5 2 146 1 6 2 260 1 78 3 128 7 333 1 153 1 12 1 315 3 89 2 139 1 114 1 294 1 348 1 252 1 94 5 324 1 
178 1 189 1 298 1 
279 1 296 2 298 1 
321 2 288 2 115 1 295 2 379 2 350 2 125 2 49 1 
97 1 353 1 300 1 206 1 122 1 357 1 306 1 125 2 48 1 49 1 147 1 258 2 168 1 212 1 363 1 364 1 8 1 367 1 265 1 368 2 285 1 339 1 288 2 135 2 38 1 272 2 159 1 293 2 321 3 39 1 115 1 295 2 379 3 350 2 351 1 22 1 96 1 
321 1 288 1 295 1 374 1 379 1 350 1 125 1 241 1 49 1 223 1 
276 1 120 1 70 1 56 1 223 1 319 1 311 1 312 1 189 1 321 1 295 1 379 1 132 1 298 1 
276 1 120 2 56 1 288 1 125 1 223 1 319 1 311 2 189 1 321 1 295 1 350 1 379 1 132 1 298 1 
359 1 266 1 120 1 311 1 207 1 
266 1 120 2 311 2 254 1 207 1 189 1 191 1 298 1 
266 1 120 1 311 1 
120 1 207 1 288 1 374 1 125 1 49 1 223 1 311 1 361 1 321 1 295 1 350 1 379 1 241 1 
298 1 
81 1 266 1 120 2 311 2 207 1 189 1 191 1 298 1 
152 1 266 2 120 5 370 2 326 1 207 2 162 1 26 1 47 1 342 2 291 1 270 1 311 5 189 1 131 1 352 1 191 1 264 2 298 1 
178 1 115 1 
367 1 368 1 285 1 206 1 339 1 288 1 125 1 38 1 48 1 233 1 18 1 148 1 258 1 168 1 159 1 293 1 321 2 295 1 379 2 96 1 
288 1 125 1 199 1 321 2 295 2 115 2 379 2 350 1 216 1 
18 1 373 1 345 1 
367 1 368 1 285 1 206 1 339 1 38 1 48 1 258 1 259 1 168 1 293 1 159 1 321 1 115 1 379 1 96 1 
321 3 288 3 115 1 295 3 350 1 379 3 125 3 233 1 
321 1 288 1 295 1 374 1 379 1 125 1 223 1 
199 1 321 1 288 1 295 1 379 1 350 1 125 1 223 1 216 1 
97 1 353 1 69 1 300 1 276 1 120 1 206 1 122 1 357 1 125 3 48 1 49 1 233 1 148 1 258 1 311 1 168 1 212 1 364 1 363 1 132 1 8 1 216 1 367 1 11 1 368 1 285 1 339 1 56 1 288 3 135 2 38 1 223 1 319 1 272 1 159 1 293 1 321 4 115 1 295 3 350 2 379 4 22 1 96 1 
70 1 316 1 321 2 288 1 115 1 295 2 379 2 125 1 233 1 
69 1 276 1 120 1 56 1 288 3 125 3 223 1 233 2 236 1 148 1 319 1 311 1 321 3 295 3 350 1 132 1 379 3 216 1 298 1 
373 1 288 2 125 2 233 1 18 1 321 2 295 2 350 1 379 2 216 1 
367 1 368 1 285 1 206 1 339 1 48 1 38 1 258 1 168 1 293 1 159 1 321 1 115 1 379 1 96 1 
368 1 369 1 285 1 206 1 109 1 48 1 38 1 258 1 168 1 293 1 159 1 321 1 115 1 379 1 96 1 
97 1 353 2 202 1 300 1 119 1 25 1 122 1 357 1 278 1 124 1 8 1 134 1 267 1 84 1 373 2 135 2 155 1 345 2 198 1 18 2 272 4 39 2 380 1 22 1 
56 1 321 1 288 1 295 1 379 1 125 1 223 1 224 1 
184 1 70 1 316 1 288 4 125 4 233 2 148 1 77 1 321 5 295 5 115 1 379 5 350 1 216 1 
321 2 288 2 295 2 374 1 379 2 125 2 224 1 223 1 
292 1 210 1 
292 1 210 1 
100 1 214 1 
100 1 214 1 
100 1 214 1 
292 1 210 1 110 1 
292 1 210 1 31 1 
100 1 292 2 210 2 158 1 172 1 214 1 
292 1 210 1 110 1 
292 1 210 1 110 1 
292 1 210 1 118 1 
292 1 210 1 118 1 
292 1 210 1 118 1 
0 1 154 1 253 2 336 2 120 2 354 2 185 1 292 2 157 2 175 3 210 2 311 2 75 1 30 1 158 1 226 1 283 2 298 1 80 1 
68 1 120 1 354 1 125 2 234 1 165 1 210 1 311 1 104 1 283 1 31 1 215 1 154 1 219 1 336 1 288 2 157 1 292 1 175 1 321 2 115 1 295 2 379 2 180 1 
160 1 12 1 114 1 
160 1 12 1 251 1 
12 3 193 1 52 1 287 1 114 2 251 1 
218 1 12 2 193 1 287 1 114 1 251 1 
12 2 193 2 287 1 114 1 251 1 
161 2 120 5 207 4 2 1 124 1 26 2 47 3 234 1 165 1 279 1 311 5 169 2 104 1 189 1 264 1 191 1 192 1 366 1 134 1 266 1 370 1 286 1 337 1 84 1 317 1 155 1 342 1 270 1 92 1 64 2 296 3 298 2 
120 9 162 1 207 7 328 1 124 3 26 6 47 8 234 4 359 5 279 3 311 9 169 6 189 1 191 1 264 2 366 3 313 1 134 3 266 6 370 2 337 2 54 1 84 3 55 5 317 1 155 3 342 2 270 1 92 2 64 6 65 1 200 1 296 9 201 1 298 5 
161 1 120 3 207 2 162 1 2 1 124 1 26 2 47 3 234 1 279 2 311 3 169 2 189 1 264 1 366 1 134 1 286 1 370 1 337 1 84 1 342 1 155 1 92 1 64 2 296 4 298 3 
161 2 120 4 162 1 207 3 328 1 2 1 124 2 26 4 47 5 234 2 279 3 311 4 169 4 189 1 264 1 366 2 134 2 370 1 286 1 337 1 54 1 84 2 342 1 155 2 92 1 64 4 65 1 296 7 298 4 
16 1 178 1 38 1 
371 1 38 1 
194 1 
159 1 38 1 
235 1 16 2 159 1 38 3 48 1 197 1 
159 1 38 1 48 1 
116 1 38 1 
217 1 353 3 134 1 267 3 303 1 34 1 14 1 124 1 330 1 196 1 245 1 198 2 272 7 39 4 141 1 40 2 297 1 
217 1 353 3 134 1 267 3 303 1 34 1 14 1 124 1 330 1 196 1 245 1 198 2 272 7 39 4 141 1 40 2 297 1 
217 1 353 3 134 1 267 3 303 1 34 1 14 1 124 1 330 1 196 1 245 1 198 2 112 1 272 7 39 4 141 1 40 2 297 1 
303 1 272 1 39 1 67 1 40 1 245 1 297 2 
97 1 24 1 353 6 144 1 122 1 124 3 330 2 105 1 8 1 217 1 134 3 267 4 34 2 14 2 135 2 196 1 245 1 198 3 272 14 39 8 141 1 40 2 22 1 297 1 
160 1 205 1 206 1 98 1 72 1 255 2 4 1 5 1 258 1 149 1 78 1 128 2 240 1 365 1 242 1 10 1 368 1 285 1 12 2 52 1 244 1 137 1 89 1 114 1 293 1 177 1 251 1 294 1 94 1 117 1 
160 1 206 1 98 1 72 1 255 3 4 1 5 1 257 1 74 1 258 1 78 1 128 3 240 1 365 1 242 1 10 1 368 1 285 1 12 2 52 1 244 1 137 1 89 1 114 1 293 1 177 1 251 1 294 1 94 2 182 1 
160 1 206 1 98 1 255 2 4 1 257 1 74 1 258 1 78 1 128 2 240 1 365 1 10 1 368 1 285 1 12 2 52 1 244 1 137 1 293 1 177 1 114 1 251 1 294 1 94 2 
10 2 368 1 285 1 206 1 356 1 255 1 38 1 5 1 137 2 89 1 19 1 258 1 168 1 249 1 159 1 293 1 128 1 282 1 294 2 190 1 66 1 240 2 182 1 
160 1 205 1 206 1 72 1 255 1 5 1 74 1 258 1 149 1 128 1 240 1 365 1 242 1 10 1 368 1 285 1 12 2 52 1 244 1 137 1 89 1 114 1 293 1 177 1 251 1 294 1 
340 1 
276 1 43 2 46 2 47 2 101 1 279 2 189 1 282 1 191 3 243 2 285 1 337 1 56 1 341 1 342 1 19 1 20 1 159 1 293 2 295 1 296 2 298 2 204 2 120 5 206 1 70 1 26 2 308 1 29 2 309 1 360 1 258 2 310 4 311 5 168 2 312 1 263 2 132 1 264 1 368 2 266 6 370 1 269 2 38 1 318 1 223 1 270 1 319 1 321 1 323 1 379 1 228 1 142 1 181 1 41 1 
81 1 243 1 276 1 266 2 120 3 70 1 56 1 308 1 223 1 101 1 360 1 310 2 319 1 311 3 312 1 321 1 295 1 132 1 323 1 379 1 191 1 142 1 
81 1 276 1 266 1 120 3 70 1 56 1 46 1 308 1 223 1 101 1 360 1 310 3 319 1 311 3 312 1 189 1 321 1 295 1 132 1 323 1 379 1 191 1 142 1 298 1 
276 1 120 3 70 1 43 1 46 1 308 1 101 1 360 1 310 3 311 3 312 1 189 1 132 1 191 1 81 1 243 1 266 2 56 1 223 1 319 1 321 1 295 1 379 1 323 1 142 1 298 1 
276 1 43 4 46 4 47 1 101 1 279 2 189 5 191 3 243 4 56 1 342 1 295 1 298 5 204 2 120 5 70 1 26 1 308 1 256 1 164 1 309 1 29 2 360 1 310 6 311 5 211 1 312 1 132 1 263 2 264 1 81 1 266 7 370 1 136 1 269 2 223 1 270 1 319 1 321 1 179 1 379 1 323 1 142 1 41 1 
204 2 276 1 120 4 70 1 43 2 46 2 26 1 47 1 308 1 101 1 29 2 309 1 360 1 279 2 310 4 311 4 312 1 189 1 263 2 132 1 191 2 264 1 243 2 266 4 370 1 56 1 269 2 342 1 318 1 223 1 270 1 319 1 321 1 295 1 323 1 379 1 296 2 142 1 41 1 298 2 
204 2 276 1 120 4 70 1 43 2 46 2 26 1 47 1 308 1 164 1 101 1 29 2 309 1 360 1 279 2 310 4 311 4 211 1 312 1 189 1 263 2 132 1 191 2 264 1 243 2 266 4 370 1 56 1 269 2 342 1 223 1 270 1 319 1 321 1 179 1 295 1 379 1 323 1 142 1 41 1 298 1 
204 2 276 1 120 4 70 1 43 2 46 2 26 1 47 1 308 1 164 1 101 1 29 2 309 1 360 1 279 2 310 4 311 4 211 1 312 1 189 1 263 2 132 1 191 2 264 1 243 2 266 4 370 1 56 1 269 2 342 1 223 1 270 1 319 1 321 1 179 1 295 1 379 1 323 1 142 1 41 1 298 1 
204 2 276 1 120 4 70 1 43 2 305 1 46 2 26 1 47 1 308 1 101 1 309 1 360 1 310 4 311 4 211 1 312 1 189 1 32 2 132 1 191 2 264 1 284 2 243 2 266 4 370 1 220 1 56 1 269 2 342 1 223 1 156 1 270 1 319 1 321 1 295 1 379 1 323 1 296 2 142 1 298 1 
204 2 276 1 120 4 70 1 43 3 46 3 26 1 47 1 308 1 256 1 164 1 101 1 29 2 309 1 360 1 279 2 310 5 311 4 211 1 312 1 189 1 263 2 132 1 191 2 264 1 243 3 266 5 370 1 56 1 269 2 342 1 223 1 270 1 319 1 321 1 179 1 295 1 379 1 323 1 142 1 41 1 298 1 
204 2 276 1 120 4 70 1 43 3 46 3 26 1 47 1 308 1 256 1 164 1 101 1 29 2 309 1 360 1 279 2 310 5 311 4 211 1 312 1 189 1 263 2 132 1 191 2 264 1 243 3 266 5 370 1 56 1 269 2 342 1 223 1 270 1 319 1 321 1 179 1 295 1 379 1 323 1 142 1 41 1 298 1 
204 2 276 1 120 4 70 1 43 2 46 2 26 1 47 1 308 1 101 1 309 1 360 1 310 4 311 4 312 1 189 1 32 2 132 1 191 2 264 1 284 2 243 2 266 4 370 1 220 1 56 1 269 2 342 1 318 1 223 1 270 1 319 1 321 1 295 1 323 1 379 1 296 2 142 1 298 1 
97 1 353 3 300 1 122 1 357 1 278 1 124 1 330 1 8 1 217 1 134 1 267 2 34 1 14 1 373 1 135 2 198 2 345 1 18 1 272 6 178 1 39 3 115 2 141 1 40 1 22 1 
97 2 353 6 301 1 300 2 42 1 122 2 357 1 307 1 124 1 212 1 7 1 8 2 366 2 265 1 134 2 267 2 84 1 373 4 36 3 221 1 135 4 155 2 196 1 344 1 198 1 345 11 225 3 18 11 272 14 61 1 115 1 39 8 22 2 
97 1 353 1 300 1 206 1 122 1 357 1 125 1 48 1 233 1 258 1 148 1 259 1 168 1 212 1 130 1 8 1 367 1 368 1 265 1 285 1 339 1 373 1 288 1 221 1 135 2 38 1 91 1 58 1 272 2 159 1 293 1 321 2 115 1 295 1 39 1 379 2 22 1 96 1 
97 3 330 1 48 2 233 1 148 1 107 2 8 3 285 2 108 2 195 2 339 2 14 1 288 1 155 2 196 4 198 4 345 7 346 2 18 7 293 3 159 2 115 2 295 1 22 3 353 10 203 1 300 3 206 2 122 3 357 3 124 3 125 1 74 1 258 3 168 1 212 1 364 2 262 1 217 1 367 2 366 2 265 1 368 3 134 3 267 8 34 1 84 2 373 7 221 1 135 6 38 2 272 20 321 3 39 10 141 1 140 1 379 3 40 1 96 2 
97 2 353 1 300 2 206 2 122 2 357 2 208 1 278 1 125 1 233 1 147 2 74 1 258 8 76 1 168 2 212 1 282 1 8 2 368 7 265 1 285 2 338 1 288 1 173 1 135 4 38 3 247 1 19 1 272 2 293 8 159 2 321 1 349 1 295 1 39 1 379 1 117 1 22 2 21 1 
97 1 353 2 300 1 122 1 357 1 124 1 125 1 50 1 216 1 8 1 366 1 134 1 267 1 84 1 373 1 288 1 221 1 135 2 155 1 198 1 345 1 18 1 272 3 321 1 295 1 39 1 350 1 379 1 22 1 
97 1 300 1 134 1 267 1 119 1 122 1 373 1 357 1 278 1 135 2 155 1 196 1 345 1 18 1 272 2 39 2 22 1 8 1 
97 1 353 2 202 1 300 1 267 1 84 1 122 1 373 1 357 1 278 1 124 1 135 2 198 1 345 1 18 1 272 2 22 1 8 1 
97 1 366 1 353 2 300 1 134 1 267 2 84 1 122 1 373 2 357 1 278 1 124 1 135 2 155 1 196 1 198 1 345 2 18 2 272 4 39 2 22 1 8 1 
97 1 300 1 134 1 267 1 119 1 122 1 373 1 357 1 135 2 155 1 196 1 345 1 18 1 272 2 39 2 21 1 22 1 8 1 
97 1 353 2 202 1 300 1 267 1 84 1 122 1 373 1 357 1 124 1 135 2 198 1 345 1 18 1 272 2 21 1 22 1 8 1 
97 1 366 1 353 2 300 1 134 1 267 2 84 1 122 1 373 2 357 1 124 1 135 2 155 1 196 1 198 1 345 2 18 2 272 4 39 2 21 1 22 1 8 1 
97 1 366 1 353 2 300 1 134 1 267 2 84 1 122 1 373 2 357 1 124 1 135 2 155 1 196 1 198 1 345 2 18 2 272 4 39 2 22 1 8 1 
97 1 353 1 300 1 206 1 122 1 357 1 48 1 258 1 168 1 212 1 364 1 8 1 367 1 265 1 368 1 285 1 339 1 135 2 38 1 272 2 159 1 293 1 321 1 39 1 115 1 379 1 22 1 96 1 
97 1 353 1 300 1 206 1 122 1 357 1 48 1 258 1 168 1 212 1 8 1 265 1 368 1 285 1 369 1 109 1 135 2 38 1 377 1 272 2 159 1 293 1 321 1 39 1 115 1 379 1 22 1 96 1 
97 1 366 1 353 2 300 1 134 1 267 2 84 1 122 1 373 2 357 1 124 1 221 1 135 2 155 1 196 1 198 1 345 2 18 2 272 4 39 2 22 1 8 1 
97 1 353 2 300 1 206 1 122 1 357 1 124 1 48 1 258 1 364 1 8 1 367 1 366 1 134 1 368 1 267 2 285 1 84 1 339 1 195 1 373 2 155 1 135 2 196 1 38 1 198 1 345 2 18 2 272 4 293 1 159 1 321 1 39 2 379 1 117 1 22 1 96 1 
97 1 353 1 300 1 122 1 357 1 124 1 125 1 216 1 8 1 366 1 134 1 267 1 84 1 288 1 373 1 221 1 135 2 155 1 196 1 345 1 18 1 272 3 62 1 321 1 295 1 39 2 350 1 379 1 22 1 
97 2 24 1 353 7 42 1 304 1 122 2 307 1 124 2 126 1 213 1 188 1 8 2 366 2 134 2 267 2 82 1 83 1 84 2 36 1 135 4 155 2 196 1 198 1 225 2 272 13 273 1 39 6 229 1 22 2 
97 3 353 12 24 1 183 1 42 2 304 1 122 3 3 2 124 2 163 1 187 1 126 4 280 1 188 2 8 3 366 3 134 3 267 3 82 1 83 1 84 2 36 2 15 1 135 6 155 3 196 2 198 1 225 2 272 26 273 2 320 1 250 1 39 14 22 3 
97 2 24 1 353 6 183 1 42 1 304 1 122 2 307 1 124 1 126 2 213 1 188 1 8 2 366 2 134 2 267 2 82 1 83 1 84 1 36 1 135 4 155 2 196 1 198 1 225 2 272 13 273 1 39 7 22 2 
97 2 24 1 353 6 183 1 42 1 304 1 122 2 307 1 124 1 126 2 213 1 188 1 8 2 366 2 134 2 267 2 82 1 83 1 84 1 36 1 135 4 155 2 196 1 198 1 225 2 272 13 273 1 39 7 22 2 
97 2 24 1 353 25 183 1 42 2 304 1 122 2 3 1 307 2 124 8 330 1 163 1 187 1 280 1 126 4 188 1 8 2 217 1 366 7 134 8 267 12 82 1 83 1 34 1 84 7 14 1 15 1 36 4 135 4 155 7 196 6 344 2 198 6 225 4 272 52 273 1 320 1 250 1 39 27 141 1 40 1 22 2 
157 1 292 1 103 1 336 1 210 1 158 1 226 1 354 1 185 1 283 1 
68 1 31 1 
90 1 157 1 292 1 302 1 336 1 210 1 354 1 127 1 283 1 
0 1 154 1 253 1 336 1 120 1 354 1 185 1 292 1 157 1 175 2 210 1 311 1 75 1 158 1 226 1 283 1 298 1 80 1 
0 1 154 1 253 1 336 1 120 1 354 1 185 1 292 1 157 1 175 2 210 1 311 1 75 1 158 1 226 1 283 1 298 1 80 1 
0 1 154 1 253 1 336 1 120 1 354 1 185 1 292 1 157 1 175 2 210 1 311 1 75 1 158 1 226 1 283 1 298 1 80 1 
271 1 172 1 110 1 
271 1 172 1 110 1 
113 1 118 1 
113 1 172 1 118 1 
219 1 180 1 
68 1 253 1 230 1 120 1 354 1 207 1 125 2 234 1 165 1 210 1 75 1 311 1 104 1 283 1 31 1 215 1 219 1 336 1 288 2 157 1 292 1 175 1 321 2 115 1 295 2 379 2 180 1 
271 1 110 1 
113 1 172 1 118 1 
143 1 97 1 353 1 300 1 206 1 44 1 45 1 71 1 122 1 357 1 208 1 147 2 258 2 212 1 332 1 8 1 265 1 368 2 285 1 338 1 221 1 135 2 38 1 272 2 159 1 293 2 321 2 295 2 39 1 379 2 22 1 
160 1 368 2 12 2 285 1 52 1 206 1 244 1 222 1 74 1 258 2 114 1 293 2 177 1 251 1 362 1 240 1 117 1 242 1 151 1 
160 1 368 1 12 2 285 1 52 1 206 1 244 1 222 1 74 1 258 1 114 1 293 1 177 1 251 1 150 1 240 1 242 1 
368 1 285 1 206 1 356 1 99 1 38 1 19 1 258 1 168 1 159 1 293 1 282 1 240 1 151 1 
160 1 368 1 12 2 285 1 52 1 206 1 244 1 222 1 74 1 258 1 114 1 293 1 177 1 251 1 362 1 240 1 242 1 151 1 
13 1 
152 1 178 1 189 1 26 1 47 1 352 1 298 1 
120 1 26 1 47 1 29 1 279 1 311 1 189 1 263 1 264 1 191 1 266 1 370 1 342 1 270 1 296 1 41 1 298 2 
275 1 1 2 186 1 47 9 48 3 331 2 279 6 189 2 239 2 191 3 152 1 285 3 337 2 108 2 290 1 342 4 155 2 57 2 197 1 16 2 159 3 293 3 64 6 116 2 117 1 352 1 296 12 298 8 120 5 206 4 355 2 121 2 26 8 124 2 258 3 311 5 168 1 169 6 132 2 264 4 366 2 368 3 134 2 266 5 370 4 371 3 84 2 372 1 38 10 375 2 88 2 270 4 322 1 181 1 
42 1 120 1 123 1 26 5 124 2 47 8 163 1 187 1 279 3 311 1 280 1 169 5 189 2 191 1 264 2 366 2 134 2 266 1 337 1 370 2 84 2 15 1 36 1 342 2 155 2 88 1 57 2 270 2 225 1 250 1 64 5 296 6 181 1 23 1 298 5 
120 1 26 2 124 1 330 1 47 2 125 1 49 1 164 1 311 1 361 1 105 1 264 1 241 1 134 2 370 1 34 1 14 1 288 1 374 1 342 1 88 1 223 1 57 2 270 1 321 1 295 1 379 1 350 1 
152 1 370 1 26 1 342 1 47 1 270 1 189 1 264 1 352 1 298 1 
366 2 134 2 108 1 84 2 26 5 124 2 155 2 47 5 88 1 57 2 279 5 169 5 64 5 296 10 298 5 
266 1 120 1 311 1 189 1 191 1 298 1 
120 3 206 1 162 1 186 1 26 2 47 2 166 1 258 4 311 3 168 2 282 1 264 2 191 2 368 4 285 1 266 4 370 2 337 2 341 1 290 2 342 2 38 1 270 1 19 1 159 1 293 4 93 1 228 1 181 2 
97 1 353 1 300 1 206 1 122 1 357 1 125 2 49 1 48 1 258 1 168 1 212 1 363 1 364 1 8 1 367 1 368 1 285 1 339 1 288 2 135 2 38 1 272 1 293 1 159 1 321 3 115 1 295 2 379 3 350 2 22 1 96 1 
370 1 337 1 26 2 342 1 47 1 270 1 279 2 169 2 189 2 64 2 40 1 296 4 264 1 181 1 298 4 
157 1 170 1 283 1 
157 1 219 1 299 1 185 1 283 1 
157 1 170 1 283 1 
157 1 170 1 283 1 
157 1 145 1 283 1 
157 1 145 1 283 1 
157 1 145 1 283 1 
157 1 283 1 
292 1 210 1 
97 2 217 1 353 4 134 1 267 3 34 1 122 2 14 1 124 1 3 1 330 1 135 4 196 1 198 2 272 8 39 4 141 1 40 1 22 2 8 2 
217 1 353 3 134 1 267 2 34 1 14 1 124 1 330 1 198 2 272 6 178 1 39 3 141 1 40 1 
97 1 366 1 353 2 134 1 267 2 84 1 122 1 124 1 135 2 155 1 196 1 198 1 272 4 39 2 95 1 22 1 8 1 
366 1 353 4 134 1 42 1 267 2 84 1 36 1 124 1 307 1 155 1 196 1 198 1 225 2 272 7 39 3 
97 2 353 12 122 2 307 1 124 3 3 2 330 1 261 1 8 2 217 1 366 2 134 3 267 9 34 2 84 2 14 2 36 2 155 2 135 4 196 4 198 5 344 1 225 2 272 23 61 1 39 11 141 1 40 1 22 2 
353 1 225 1 272 1 
272 1 39 1 36 1 
97 1 366 1 353 3 134 1 267 3 108 1 84 1 122 1 124 1 135 2 155 1 196 1 198 2 272 6 39 3 22 1 95 1 8 1 
97 1 353 6 24 1 42 1 122 1 124 2 163 1 187 1 280 1 8 1 366 2 134 2 267 2 84 2 36 1 15 1 135 2 155 2 196 1 198 1 225 1 272 12 250 1 39 6 22 1 
353 3 134 1 267 2 34 1 14 1 124 1 330 1 196 1 198 1 272 6 39 3 
97 1 217 1 353 2 267 2 34 1 14 1 122 1 3 1 135 2 196 1 198 1 272 3 261 1 39 1 141 1 22 1 8 1 
97 1 24 1 353 5 134 2 267 5 34 2 122 1 14 2 124 2 135 2 330 1 196 2 198 3 272 10 39 5 105 1 22 1 8 1 
97 1 24 1 134 1 267 1 122 1 135 2 155 1 196 1 272 2 39 2 22 1 8 1 
97 1 366 1 353 2 24 1 134 1 267 2 84 1 122 1 124 1 135 2 155 1 196 1 198 1 272 4 39 2 22 1 8 1 
97 3 353 2 24 1 267 2 34 1 122 3 14 1 3 1 135 6 196 1 198 1 272 3 261 1 213 1 39 1 22 3 8 3 
97 5 353 18 24 1 42 1 122 5 3 2 307 1 124 5 330 2 261 1 213 1 9 1 8 5 217 1 366 3 134 5 267 12 34 3 84 3 14 3 36 3 268 1 135 10 155 3 196 5 198 7 376 1 225 4 272 34 39 16 141 1 40 1 95 1 22 5 
97 1 353 4 24 1 42 1 122 1 124 1 330 1 8 1 217 1 134 1 267 2 34 1 14 1 36 1 15 1 135 2 198 2 225 1 272 8 39 4 141 1 40 1 22 1 
97 2 353 5 24 1 42 1 122 2 124 1 307 1 330 1 8 2 217 1 366 1 134 2 267 3 34 1 14 1 15 1 36 1 135 4 155 1 196 1 198 2 225 2 272 11 39 6 141 1 40 1 22 2 95 1 
97 3 353 10 24 1 42 1 122 3 124 3 3 1 330 1 163 1 187 1 280 1 8 3 217 1 366 2 134 3 267 4 34 1 84 2 14 1 36 1 15 1 135 6 155 2 196 1 198 3 225 1 272 19 250 1 39 9 141 1 40 1 95 1 22 3 
97 3 353 7 24 1 42 1 122 3 3 1 124 2 330 1 163 1 187 1 280 1 8 3 217 1 366 2 134 3 267 5 34 1 84 1 14 1 36 1 15 1 135 6 155 2 196 2 198 3 225 1 272 17 250 1 39 10 141 1 40 1 95 1 22 3 
97 1 353 4 24 1 42 1 122 1 124 1 330 1 8 1 217 1 134 1 267 2 34 1 14 1 36 1 15 1 135 2 198 2 225 1 272 8 39 4 141 1 40 1 22 1 
97 1 353 6 24 1 42 1 122 1 124 2 163 1 187 1 280 1 8 1 366 2 134 2 267 2 84 2 36 1 15 1 135 2 155 2 196 1 198 1 225 1 272 12 250 1 39 6 22 1 
97 4 353 8 24 1 42 1 122 4 124 2 3 2 330 1 163 1 187 1 280 1 8 4 217 1 366 2 134 3 267 5 34 1 84 1 14 1 15 1 36 1 135 8 155 2 196 2 198 3 225 1 272 18 250 1 39 10 141 1 40 1 95 1 22 4 
97 4 353 7 24 1 42 1 122 4 124 2 3 2 163 1 187 1 280 1 213 1 8 4 366 3 134 3 267 6 84 2 15 1 36 1 135 8 155 3 196 3 198 3 225 1 272 16 250 1 39 9 22 4 
217 1 353 4 134 1 267 6 34 3 14 3 124 1 330 1 196 3 198 3 272 7 39 3 141 2 
97 4 353 8 24 1 42 1 122 4 124 2 3 2 330 1 163 1 187 1 280 1 213 1 8 4 217 1 366 2 134 3 267 4 34 1 84 1 14 1 15 1 36 1 135 8 155 2 196 1 198 3 225 1 272 18 250 1 39 10 141 1 40 1 22 4 
70 1 321 1 316 1 289 1 115 1 295 1 379 1 
70 1 289 1 316 1 329 1 174 1 111 1 60 1 63 1 321 1 115 1 295 1 379 1 
19 1 368 1 285 1 258 1 206 1 168 1 159 1 293 1 178 1 282 1 38 1 
367 1 368 1 285 1 206 1 288 1 125 1 38 1 48 1 233 1 258 1 168 1 159 1 293 1 321 2 115 1 295 1 379 2 96 1 
276 1 206 1 125 1 48 2 233 1 258 1 239 1 367 1 368 1 285 1 56 1 288 2 290 1 38 3 223 1 293 1 159 2 321 2 115 1 295 2 379 2 116 1 96 1 
276 1 206 1 125 1 48 2 233 1 102 1 258 2 239 1 368 2 285 1 369 1 56 1 288 2 290 1 38 3 223 1 293 2 159 2 321 2 115 1 295 2 379 2 116 1 96 1 
274 1 120 2 206 1 48 1 102 1 258 3 311 2 168 1 239 1 189 1 132 1 368 3 285 1 266 1 371 1 35 1 290 1 38 4 16 1 293 3 159 1 116 1 298 1 
368 3 266 1 285 1 120 2 206 1 371 1 290 1 48 1 38 4 331 1 102 1 16 1 258 3 311 2 168 1 159 1 293 3 189 1 239 1 132 1 116 1 298 1 
368 1 285 1 258 1 206 1 293 1 173 1 
231 1 368 6 285 2 206 3 173 1 208 1 48 1 38 3 197 1 147 1 247 1 74 1 258 7 76 1 168 2 293 7 159 2 378 1 349 1 117 1 133 1 
97 2 44 1 330 1 48 1 233 1 8 2 285 1 339 1 195 1 14 1 288 1 198 2 345 1 346 1 18 1 293 1 159 1 295 1 115 2 117 1 22 2 353 3 300 2 206 1 122 2 357 2 124 1 125 1 258 1 364 1 367 1 217 1 368 1 134 1 267 2 34 1 373 1 221 1 135 4 38 1 272 6 321 2 39 3 379 2 141 1 40 1 96 1 
1 1 120 3 121 1 355 1 186 1 207 1 26 1 47 1 331 1 258 1 311 3 168 1 189 1 132 1 264 2 191 1 152 1 368 1 266 2 370 2 371 1 342 2 38 2 270 2 16 1 293 1 352 1 298 1 
368 2 285 1 206 2 372 1 173 1 48 1 38 2 197 1 16 1 258 2 293 2 159 1 117 1 
368 4 285 1 206 1 86 1 38 1 102 1 19 1 258 4 168 1 293 4 159 1 282 1 117 1 
203 1 231 1 368 2 285 1 206 2 290 1 48 1 38 1 343 1 258 2 238 1 293 2 159 1 378 1 
160 1 368 1 12 1 285 1 258 1 206 1 168 1 177 1 293 1 251 1 
368 2 285 1 206 1 208 1 38 1 74 1 258 2 293 2 159 1 332 1 117 1 
368 4 285 2 206 2 86 1 208 1 290 1 38 3 247 1 19 1 258 5 168 1 76 1 293 5 159 2 282 1 117 1 
368 4 285 2 206 2 86 1 208 1 290 1 38 3 19 1 258 5 168 1 76 1 293 5 159 2 282 1 117 1 325 1 
368 1 369 1 285 1 206 1 288 1 125 1 38 1 48 1 233 1 258 1 168 1 159 1 293 1 321 2 115 1 295 1 379 2 96 1 
231 1 368 1 285 1 206 2 290 1 48 1 38 1 197 1 258 1 293 1 159 1 378 1 133 1 
143 1 45 1 71 1 171 1 321 1 295 1 379 1 246 1 79 1 
37 1 106 1 246 1 
176 1 171 1 115 1 79 1 246 1 
69 1 276 1 120 2 56 1 207 1 37 1 223 1 246 1 17 1 176 2 319 1 311 2 171 2 189 1 115 1 132 1 106 1 298 1 79 2 
78 1 98 1 178 1 4 1 
89 1 78 1 98 1 128 1 255 1 4 1 5 1 
128 1 294 1 137 1 
205 1 53 1 98 1 327 1 85 2 255 3 4 1 5 1 89 1 167 1 78 1 128 3 
89 1 260 1 78 1 98 1 128 2 255 2 4 1 94 1 5 1 
89 1 160 1 12 1 315 1 205 1 114 1 78 1 128 1 255 1 324 1 5 1 
89 1 205 1 78 1 128 1 255 1 4 1 5 1 
89 1 205 1 98 1 128 1 255 1 4 2 5 1 
335 1 89 2 347 1 138 1 205 1 78 1 128 2 255 2 4 1 5 2 
315 1 205 1 98 1 277 1 255 3 4 1 5 1 89 1 6 1 78 2 128 3 94 2 333 1 
160 1 12 2 205 1 52 1 98 1 255 2 4 1 5 1 89 1 248 1 78 1 114 1 251 1 128 2 94 1 
315 1 205 1 98 1 255 4 4 1 5 2 89 2 6 1 260 1 78 2 128 4 129 1 94 2 
89 1 205 1 78 1 98 1 128 1 255 1 4 1 5 1 
153 1 315 1 53 1 98 2 85 1 327 1 255 4 4 2 5 1 89 1 6 1 78 3 128 4 94 2 
205 1 98 1 255 2 4 1 5 1 89 1 59 1 78 1 128 2 348 1 94 1 51 1 
334 1 205 1 53 2 98 1 327 1 85 2 255 3 4 1 5 1 89 1 78 1 128 3 
33 1 78 2 87 2 27 1 
358 1 89 1 205 1 128 1 255 1 5 1 
89 1 205 1 78 1 98 1 128 2 255 2 4 1 94 1 333 1 5 1 
281 1 
89 1 205 1 78 1 98 1 128 1 255 1 4 1 5 1 
205 1 98 1 85 1 255 3 4 1 5 1 89 1 78 1 128 3 94 1 333 1 
153 1 6 1 315 1 78 1 
78 1 4 1 

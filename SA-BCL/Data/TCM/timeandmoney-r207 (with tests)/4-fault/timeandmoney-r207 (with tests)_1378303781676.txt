#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 63 48 148 375 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 63 48 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 63 48 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 63 194 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 63 48 148 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 63 48 148 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 206 4 3 1 6 2 144 1 349 1 211 1 327 1 189 5 329 1 106 2 81 9 153 9 168 2 155 1 287 1 37 1 240 1 219 2 83 1 14 1 247 2 341 2 115 6 67 3 158 2 46 1 116 1 
69 1 206 4 3 1 6 2 144 1 349 1 211 1 327 1 189 5 329 1 106 2 81 9 153 9 168 2 155 1 287 1 37 1 240 1 219 2 83 1 14 1 247 2 341 2 115 6 67 3 158 2 46 1 116 1 
69 1 206 5 3 1 6 2 144 1 349 1 211 1 327 1 189 6 329 1 106 2 81 10 153 10 168 2 155 1 287 1 37 1 240 1 219 2 83 1 14 1 247 2 341 2 115 7 67 4 158 2 46 1 116 1 
69 1 206 3 3 1 6 2 144 1 349 1 211 1 327 1 189 4 329 1 106 2 81 7 153 7 168 2 155 1 287 1 37 1 240 1 219 1 83 1 14 1 247 2 341 2 115 4 67 2 158 2 116 1 
69 1 106 1 81 4 168 1 153 4 206 2 287 1 6 1 349 1 219 2 14 1 341 1 115 3 67 1 158 1 189 3 46 1 116 1 
61 1 106 1 30 1 81 2 293 1 168 1 153 2 155 1 287 1 6 1 144 1 14 1 247 1 341 1 189 1 116 1 
81 3 168 2 153 3 206 1 3 1 287 1 14 1 247 1 341 2 115 1 67 1 189 2 116 1 
69 1 206 4 3 1 6 1 349 1 189 5 329 1 106 1 81 9 153 9 168 2 287 1 219 2 156 1 83 1 14 1 247 1 115 7 341 2 67 3 158 1 68 1 116 1 46 1 
69 1 206 4 3 1 6 1 349 1 189 5 329 1 106 1 81 9 153 9 168 2 287 1 219 2 156 1 83 1 14 1 247 1 115 7 341 2 67 3 158 1 68 1 116 1 46 1 
97 1 342 1 310 1 
288 1 97 1 132 2 
96 2 72 1 266 2 350 2 333 1 35 2 317 2 314 2 
178 1 17 1 20 2 161 1 295 1 93 1 185 1 317 3 121 1 96 3 72 1 255 1 256 1 257 1 350 2 75 1 98 1 262 1 78 1 266 2 152 2 167 1 333 1 307 1 237 1 364 1 35 2 268 2 109 1 218 1 338 1 198 2 339 1 289 1 137 1 89 2 314 2 
226 1 266 1 50 1 35 1 317 1 72 1 96 1 111 1 350 1 314 1 
226 1 266 1 80 1 317 1 297 1 186 1 96 1 97 1 342 1 145 1 324 1 166 1 175 1 56 1 
226 2 266 2 80 2 50 1 35 2 317 2 297 2 72 1 96 2 111 1 368 1 97 1 350 2 342 1 145 1 324 1 175 1 56 1 314 2 
112 1 345 1 80 1 263 1 297 1 
112 1 97 1 345 1 80 2 342 1 221 1 94 1 297 2 
345 1 80 1 297 1 
226 1 266 1 80 1 50 1 35 1 317 1 297 1 72 1 96 1 111 1 112 1 368 1 350 1 314 1 
97 1 
39 1 112 1 97 1 345 1 80 2 342 1 94 1 297 2 
130 1 363 1 80 5 345 2 347 2 214 1 94 1 238 1 184 1 297 5 112 2 97 1 270 1 126 2 124 2 342 1 146 1 285 1 202 1 
333 1 310 1 
226 1 356 1 266 2 10 1 333 1 35 1 317 2 96 2 40 1 350 1 314 1 
346 1 326 1 5 1 
178 1 152 1 333 1 364 1 268 1 317 1 109 1 96 1 198 1 339 1 75 1 257 1 231 1 98 1 137 1 78 1 
226 1 266 2 10 1 333 1 35 2 317 2 96 2 230 1 314 2 
226 1 96 1 111 1 266 1 35 1 317 1 314 1 
226 1 356 1 266 1 35 1 317 1 96 1 40 1 350 1 314 1 
226 1 92 1 178 1 20 1 161 1 295 1 93 1 4 1 185 1 317 4 121 1 297 1 96 4 72 1 255 1 257 1 350 2 75 1 98 1 230 1 145 1 324 1 262 1 78 1 56 1 356 1 150 1 266 3 80 1 152 1 167 1 333 1 237 1 364 1 35 3 268 1 109 1 198 1 339 1 289 1 137 1 175 1 89 2 314 3 
226 1 266 2 10 1 181 1 333 1 35 1 317 2 96 2 186 1 230 1 314 1 
226 1 356 1 92 1 330 1 150 1 266 3 80 1 35 3 317 3 297 1 96 3 97 1 350 1 230 2 145 1 324 1 175 1 56 1 314 3 
356 1 266 2 346 1 35 2 317 2 5 1 96 2 350 1 230 1 314 2 
178 1 152 1 333 1 364 1 268 1 317 1 109 1 96 1 198 1 75 1 257 1 339 1 98 1 137 1 78 1 
178 1 152 1 333 1 334 1 268 1 317 1 109 1 96 1 198 1 171 1 75 1 257 1 339 1 98 1 78 1 
20 4 346 2 161 1 295 2 207 1 143 1 5 2 121 1 299 1 255 1 262 1 326 2 102 1 233 1 104 1 167 1 307 2 237 1 365 1 196 1 369 1 340 1 224 1 89 2 
226 1 266 1 35 1 317 1 96 1 200 1 56 1 314 1 
92 1 178 1 266 1 152 1 364 1 35 1 268 1 5 1 109 1 317 2 96 2 198 1 339 1 257 1 75 1 98 1 230 1 137 1 78 1 314 1 
226 1 92 1 356 1 266 5 292 1 10 1 181 1 333 1 35 4 317 5 186 1 96 5 350 1 230 2 314 4 25 1 
226 1 96 1 111 1 266 1 35 1 317 1 314 1 
122 1 201 1 
122 1 201 1 
312 1 58 1 
312 1 58 1 
312 1 58 1 
359 1 122 1 201 1 
359 1 122 1 201 1 
359 1 122 1 201 1 
220 1 122 1 201 1 
312 1 19 1 122 2 21 1 201 2 58 1 
53 1 122 1 201 1 
53 1 122 1 201 1 
53 1 122 1 201 1 
19 1 141 2 193 2 80 2 315 1 296 1 297 2 64 1 254 2 73 3 97 1 245 1 122 2 374 1 87 1 303 1 201 2 90 2 225 2 
140 1 141 1 277 1 182 1 317 2 297 1 96 2 73 1 254 1 122 1 302 1 59 1 266 2 193 1 80 1 333 1 35 2 241 1 220 1 374 1 138 1 201 1 314 2 90 1 
106 1 158 1 6 1 
106 1 293 1 6 1 
197 1 134 1 106 3 293 1 158 2 298 1 
208 1 197 1 134 1 106 2 293 1 158 1 
197 1 134 2 106 2 293 1 158 1 
140 1 277 1 345 1 347 1 294 1 94 1 119 1 297 5 97 2 124 1 126 1 100 1 285 1 104 1 363 2 80 5 32 2 108 1 132 3 365 1 169 1 336 1 288 1 241 1 112 4 369 1 270 3 340 1 248 2 342 1 291 1 273 2 
117 5 140 4 345 6 347 2 294 2 94 1 119 2 297 9 97 5 126 2 124 2 146 1 100 3 101 1 263 5 285 1 355 1 104 3 362 1 361 1 363 6 80 9 32 6 132 9 365 3 336 1 288 3 38 1 112 7 369 3 371 1 270 8 340 3 248 6 342 1 
140 1 347 1 294 1 119 1 297 3 97 3 124 1 126 1 146 1 100 1 104 1 80 3 363 2 32 2 108 1 365 1 132 4 288 2 112 2 369 1 270 3 340 1 342 1 248 2 291 1 273 1 
140 2 347 1 294 1 119 1 297 4 97 4 124 1 126 1 146 1 100 2 101 1 104 2 80 4 363 4 32 4 108 1 132 7 365 2 288 3 38 1 112 3 369 2 371 1 270 5 340 2 342 1 248 4 291 1 273 2 
339 1 176 1 310 1 
339 1 199 1 
325 1 
339 1 109 1 
232 1 339 3 257 1 109 1 176 2 253 1 
339 1 257 1 109 1 
339 1 236 1 
104 1 20 7 295 3 307 4 196 3 133 1 299 2 320 2 369 1 301 1 163 1 65 1 135 1 136 1 99 1 23 1 222 1 
104 1 20 7 295 3 307 4 196 3 133 1 299 2 320 2 369 1 301 1 163 1 65 1 135 1 136 1 99 1 23 1 222 1 
104 1 20 7 295 3 307 4 196 3 133 1 299 2 320 2 369 1 301 1 163 1 65 1 135 1 260 1 136 1 99 1 23 1 222 1 
177 3 20 31 295 15 121 1 320 3 299 5 301 2 163 1 99 2 128 1 23 1 262 1 100 3 149 1 104 4 167 1 286 1 307 16 33 1 237 1 365 3 196 10 133 1 369 4 84 1 65 2 172 4 135 1 340 3 373 1 136 5 222 2 89 2 249 1 
274 1 104 1 20 9 167 2 295 4 307 5 237 2 196 4 133 1 121 2 299 3 320 2 369 1 301 1 163 1 65 1 135 1 128 1 136 1 99 1 343 1 222 1 262 2 89 4 
275 1 16 1 178 1 18 1 293 1 120 1 298 1 6 1 162 1 76 1 98 1 188 1 189 1 306 1 152 1 332 1 106 2 81 2 195 1 153 2 168 1 268 1 287 1 198 1 14 1 247 1 115 1 341 1 158 1 116 1 
16 1 178 1 293 1 120 1 298 1 6 1 162 1 76 1 98 1 188 1 189 1 190 1 331 1 306 1 152 1 332 1 106 2 81 3 195 1 153 3 168 1 268 1 287 1 170 1 198 1 14 1 247 1 341 1 115 2 158 1 
16 1 178 1 293 1 120 1 298 1 6 1 162 1 76 1 98 1 189 1 190 1 331 1 152 1 332 1 106 2 81 2 195 1 153 2 268 1 287 1 198 1 14 1 247 1 115 2 158 1 
178 1 180 1 120 2 162 2 75 1 258 1 98 1 164 1 191 1 152 1 332 2 81 1 153 1 168 1 308 1 268 1 109 1 170 1 198 1 339 1 247 2 114 1 341 1 
178 1 16 1 275 1 306 1 152 1 106 2 332 1 293 1 195 1 81 1 168 1 153 1 268 1 120 1 298 1 6 1 198 1 162 1 76 1 98 1 247 1 341 1 188 1 158 1 116 1 190 1 
213 1 
226 1 178 1 94 1 51 1 317 1 318 1 186 1 96 1 98 1 145 1 324 1 55 1 56 1 285 1 152 2 109 1 198 2 339 1 114 1 250 1 345 2 347 1 348 2 119 1 297 3 258 1 126 1 124 1 75 2 125 1 354 1 166 1 358 1 79 1 266 1 363 2 80 3 268 2 216 1 270 2 85 1 86 1 175 1 
226 1 250 1 79 1 266 1 345 2 80 3 348 2 94 1 317 1 297 3 216 1 186 1 96 1 39 1 41 1 125 1 86 1 145 1 324 1 166 1 175 1 56 1 
226 1 250 1 345 1 348 3 94 1 317 1 297 3 96 1 186 1 97 1 125 1 145 1 324 1 166 1 56 1 79 1 266 1 80 3 216 1 39 1 86 1 342 1 175 1 174 1 
226 1 250 1 79 1 266 1 345 2 80 3 348 3 94 1 317 1 297 3 82 1 216 1 186 1 96 1 39 1 97 1 41 1 125 1 86 1 342 1 145 1 324 1 174 1 166 1 175 1 56 1 
226 1 48 1 250 1 345 3 347 1 348 2 51 1 94 1 317 1 297 3 186 1 96 1 124 1 126 1 125 1 145 1 129 1 148 1 324 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 3 63 1 216 1 82 2 39 1 270 1 41 2 86 1 375 1 175 1 
226 1 250 1 347 1 348 2 51 1 317 1 297 2 186 1 96 1 125 1 124 1 126 1 145 1 324 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 216 1 270 1 86 1 175 1 
226 1 48 1 250 1 348 2 347 1 51 1 317 1 297 2 96 1 186 1 124 1 125 1 126 1 145 1 324 1 129 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 63 1 216 1 270 1 86 1 175 1 
226 1 48 1 250 1 348 2 347 1 51 1 317 1 297 2 96 1 186 1 124 1 125 1 126 1 145 1 324 1 129 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 63 1 216 1 270 1 86 1 175 1 
226 1 250 1 348 2 347 1 317 1 297 2 96 1 186 1 124 1 125 1 126 1 145 1 324 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 194 1 11 1 63 1 309 1 216 1 270 1 86 1 175 1 
226 1 48 1 250 1 345 1 347 1 348 3 51 1 317 1 297 2 96 1 186 1 124 1 126 1 125 1 145 1 129 1 324 1 148 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 63 1 216 1 82 1 270 1 41 1 86 1 175 1 174 1 
226 1 48 1 250 1 345 1 347 1 348 3 51 1 317 1 297 2 96 1 186 1 124 1 126 1 125 1 145 1 129 1 324 1 148 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 63 1 216 1 82 1 270 1 41 1 86 1 175 1 174 1 
226 1 250 1 347 1 348 2 317 1 297 2 186 1 96 1 125 1 124 1 126 1 145 1 324 1 354 1 166 1 56 1 285 1 79 1 266 1 363 1 80 2 309 1 216 1 270 1 86 1 175 1 
346 1 20 6 161 1 295 3 5 1 121 1 299 2 320 1 255 1 301 1 163 1 262 1 326 1 233 1 104 1 167 1 333 2 237 1 307 3 196 2 133 1 310 1 369 1 65 1 135 1 89 2 
177 3 17 1 20 14 346 4 161 2 295 6 185 1 5 11 121 2 299 1 255 1 262 2 326 11 100 2 60 1 104 2 9 1 167 2 333 1 237 2 307 8 286 1 365 2 196 2 311 1 369 1 84 1 172 3 13 1 340 1 136 1 15 1 89 4 
92 1 178 1 118 1 17 1 346 1 20 2 161 1 295 1 317 2 185 1 121 1 96 2 300 1 255 1 257 1 75 1 98 1 231 1 230 1 262 1 78 1 264 1 266 1 152 1 167 1 333 1 364 1 237 1 307 1 268 1 35 1 109 1 198 1 339 1 137 1 15 1 314 1 89 2 
92 1 178 2 93 2 183 1 185 1 317 3 5 7 320 1 229 2 96 3 230 1 98 2 282 2 326 7 100 2 190 1 104 3 152 3 333 2 237 3 335 2 196 8 109 2 198 3 65 1 339 2 340 2 15 1 17 1 20 20 346 7 161 3 295 10 121 3 299 4 301 1 255 3 163 1 123 1 75 1 257 2 262 3 78 2 266 1 167 3 31 1 364 2 307 10 365 2 268 3 35 1 133 1 369 3 135 1 136 4 137 2 223 2 89 6 314 1 
227 1 178 2 18 1 17 1 20 2 161 2 295 1 317 1 185 1 121 2 319 1 96 1 255 2 75 2 258 1 230 1 98 2 262 2 328 1 190 1 233 1 305 1 266 1 152 7 167 2 237 2 307 1 35 1 268 8 109 2 218 2 244 1 198 8 339 3 114 1 66 1 45 1 314 1 89 4 
179 1 346 1 20 3 161 1 295 2 5 1 317 1 121 1 299 1 96 1 255 1 350 1 326 1 262 1 100 1 356 1 104 1 266 1 167 1 237 1 307 1 365 1 196 1 35 1 369 1 340 1 15 1 89 2 314 1 
233 1 104 1 346 1 20 2 161 1 167 1 237 1 307 2 365 1 196 1 5 1 121 1 255 1 136 1 326 1 262 1 102 1 89 2 
233 1 346 1 20 2 161 1 167 1 237 1 295 2 196 1 207 1 5 1 121 1 299 1 369 1 255 1 340 1 326 1 262 1 89 2 
20 4 346 2 161 1 295 2 5 2 121 1 299 1 255 1 100 1 262 1 326 2 233 1 104 1 167 1 307 2 237 1 365 1 196 2 369 1 340 1 136 1 89 2 
305 1 104 1 346 1 20 2 161 1 167 1 237 1 307 2 365 1 196 1 5 1 121 1 255 1 136 1 326 1 262 1 102 1 89 2 
305 1 346 1 20 2 161 1 167 1 237 1 295 2 196 1 207 1 5 1 121 1 299 1 369 1 255 1 340 1 326 1 262 1 89 2 
20 4 346 2 161 1 295 2 5 2 121 1 299 1 255 1 100 1 262 1 326 2 305 1 104 1 167 1 307 2 237 1 365 1 196 2 369 1 340 1 136 1 89 2 
20 4 346 2 161 1 295 2 5 2 121 1 299 1 255 1 100 1 262 1 326 2 104 1 167 1 307 2 237 1 365 1 196 2 369 1 340 1 136 1 89 2 
178 1 17 1 20 2 161 1 93 1 295 1 317 1 185 1 121 1 96 1 255 1 257 1 75 1 98 1 262 1 78 1 152 1 167 1 333 1 307 1 364 1 237 1 268 1 109 1 198 1 339 1 137 1 89 2 
178 1 17 1 204 1 20 2 161 1 295 1 317 1 185 1 121 1 96 1 255 1 257 1 75 1 98 1 262 1 78 1 152 1 167 1 333 1 307 1 237 1 334 1 268 1 109 1 171 1 198 1 339 1 89 2 
20 4 346 2 161 1 295 2 5 2 121 1 299 1 255 1 100 1 262 1 326 2 104 1 167 1 307 2 237 1 365 1 196 2 369 1 340 1 136 1 15 1 89 2 
178 1 18 1 346 2 20 4 161 1 295 2 93 1 5 2 317 1 121 1 299 1 96 1 255 1 257 1 98 1 326 2 262 1 100 1 78 1 104 1 152 1 167 1 307 2 364 1 237 1 365 1 196 2 268 1 109 1 369 1 198 1 339 1 340 1 136 1 137 1 223 1 89 2 
20 3 346 1 161 1 295 1 317 1 5 1 121 1 96 1 255 1 350 1 262 1 100 1 326 1 356 1 104 1 266 1 167 1 28 1 237 1 307 2 365 1 196 1 35 1 369 1 340 1 136 1 15 1 89 2 314 1 
177 1 276 1 20 9 295 5 121 2 299 1 351 1 8 1 165 1 262 2 100 1 26 1 357 1 104 1 167 2 237 2 307 4 286 1 365 1 196 2 239 1 369 1 84 1 172 2 340 1 343 1 136 1 44 1 89 4 
177 1 276 1 20 9 295 5 121 2 299 1 351 1 8 1 165 1 262 2 100 1 26 1 357 1 104 1 167 2 237 2 307 4 286 1 365 1 196 2 239 1 369 1 84 1 172 2 340 1 343 1 136 1 44 1 89 4 
47 1 177 4 276 1 0 1 20 46 22 1 295 22 121 2 320 1 299 6 301 1 163 1 351 1 128 1 8 1 165 1 262 2 100 6 103 1 60 2 26 1 104 7 167 2 237 2 307 24 286 2 365 6 196 12 269 1 133 1 239 3 369 7 84 2 65 1 172 4 135 1 340 6 343 1 136 6 44 1 89 4 91 1 
177 1 276 1 20 9 295 5 121 2 299 1 351 1 165 1 262 2 100 1 26 1 357 1 104 1 167 2 237 2 307 4 286 1 365 1 196 2 239 1 367 1 369 1 84 1 172 2 340 1 343 1 136 1 44 1 89 4 
47 1 177 2 276 1 0 1 20 20 295 9 22 1 121 3 299 1 351 1 128 2 8 1 165 1 262 3 100 2 103 1 26 2 104 2 167 3 237 3 307 11 365 2 196 2 269 1 239 3 369 1 84 2 172 2 340 1 136 1 343 1 44 2 89 6 91 1 
254 1 19 1 122 1 141 1 42 1 193 1 296 1 87 1 201 1 90 1 
220 1 302 1 
254 1 210 1 122 1 141 1 372 1 193 1 201 1 212 1 90 1 
19 1 141 1 80 1 193 1 315 1 296 1 297 1 254 1 73 2 97 1 245 1 122 1 374 1 87 1 303 1 201 1 90 1 225 1 
19 1 141 1 80 1 193 1 315 1 296 1 297 1 254 1 73 2 97 1 245 1 122 1 374 1 87 1 303 1 201 1 90 1 225 1 
19 1 141 1 80 1 193 1 315 1 296 1 297 1 254 1 73 2 97 1 245 1 122 1 374 1 87 1 303 1 201 1 90 1 225 1 
359 1 21 1 313 1 
359 1 21 1 313 1 
53 1 352 1 
53 1 21 1 352 1 
138 1 182 1 
140 1 141 1 277 1 1 1 315 1 182 1 317 2 297 1 96 2 254 1 73 1 122 1 302 1 59 1 266 2 80 1 193 1 333 1 35 2 112 1 241 1 220 1 138 1 201 1 90 1 314 2 225 1 
359 1 313 1 
53 1 21 1 352 1 
227 1 178 1 17 1 20 2 161 1 295 1 317 2 185 1 121 1 96 2 255 1 98 1 284 1 262 1 57 1 266 2 152 2 29 1 105 1 167 1 237 1 307 1 268 2 109 1 218 2 198 2 339 1 66 1 15 1 139 1 89 2 
265 1 178 1 16 1 306 1 18 1 152 2 106 2 293 1 268 2 298 1 6 1 12 1 370 1 198 2 162 1 76 1 98 1 158 1 190 1 
265 1 16 1 178 1 306 1 152 1 106 2 160 1 293 1 268 1 298 1 6 1 198 1 162 1 76 1 98 1 158 1 190 1 
178 1 152 1 308 1 268 1 251 1 109 1 370 1 198 1 162 1 339 1 75 1 258 1 98 1 114 1 
265 1 16 1 178 1 306 1 152 1 106 2 293 1 268 1 298 1 6 1 12 1 370 1 198 1 162 1 76 1 98 1 158 1 190 1 
353 1 
97 1 270 1 363 1 342 1 214 1 202 1 310 1 
345 1 347 1 51 1 94 1 297 1 97 2 124 1 126 1 261 1 77 1 285 1 363 1 80 1 132 1 288 1 270 1 342 1 
178 3 228 1 94 3 95 2 229 2 97 8 98 4 145 2 100 2 285 4 232 1 234 2 104 2 151 1 152 3 107 2 236 2 109 3 288 6 113 2 198 3 246 2 339 10 340 2 342 2 248 6 199 3 157 2 202 1 18 1 203 1 345 5 347 4 119 2 297 5 209 2 74 1 257 3 126 4 124 4 75 1 127 2 358 1 80 5 363 8 214 1 32 6 132 12 365 2 268 3 369 2 270 9 43 1 176 2 
47 1 177 1 159 1 0 1 345 1 347 2 94 1 22 1 119 1 297 1 95 2 97 5 124 2 126 2 127 1 100 2 285 2 358 1 104 2 80 1 363 5 32 5 132 6 365 2 269 1 288 3 369 2 84 1 270 8 172 1 340 2 248 5 342 2 376 1 91 1 
226 1 347 1 50 1 317 1 297 1 95 2 96 1 72 1 301 1 124 1 126 1 350 1 127 1 283 1 129 1 285 1 104 2 266 1 80 1 363 2 35 1 133 1 111 1 368 1 369 1 65 1 270 2 314 1 
363 1 347 1 214 1 97 1 126 1 124 1 270 1 342 1 285 1 202 1 
104 2 363 5 32 5 365 2 132 10 229 1 95 2 288 5 369 2 97 5 270 5 340 2 127 1 248 5 100 2 
97 1 80 1 345 1 342 1 94 1 297 1 
178 2 345 4 347 2 94 2 119 2 71 1 297 3 74 2 257 1 124 2 126 2 75 2 258 1 98 3 323 1 146 1 55 1 285 1 358 2 360 1 235 1 151 1 267 1 152 4 363 2 80 3 268 4 109 2 198 4 339 2 270 2 85 1 114 1 272 1 
178 1 20 1 161 1 295 1 93 1 185 1 317 3 121 1 96 3 72 1 255 1 75 1 350 2 257 1 98 1 262 1 78 1 266 2 152 1 167 1 333 1 364 1 237 1 268 1 35 2 109 1 198 1 339 1 289 1 137 1 89 2 314 2 
358 1 363 2 347 1 32 2 132 4 119 1 320 1 288 2 97 4 126 1 124 1 270 1 248 2 342 2 285 1 
193 1 205 1 90 1 
193 1 205 1 90 1 
193 1 205 1 90 1 
243 1 193 1 296 1 138 1 90 1 
193 1 34 1 90 1 
193 1 34 1 90 1 
193 1 34 1 90 1 
193 1 90 1 
122 1 201 1 
177 1 20 8 295 4 22 1 121 1 320 1 299 2 301 1 163 1 262 1 104 1 167 1 237 1 307 4 196 2 133 1 369 1 84 1 172 1 65 1 135 1 343 1 89 2 
177 1 20 11 295 5 22 1 121 2 320 1 299 2 301 1 163 1 262 2 100 1 104 2 167 2 237 2 307 6 286 1 365 1 196 3 36 1 133 1 369 1 84 1 65 1 172 2 135 1 343 1 136 1 89 4 
177 1 47 1 0 1 20 19 295 10 22 1 121 3 320 1 299 3 301 1 163 1 128 1 262 3 100 2 104 3 167 3 237 3 307 9 365 2 196 4 36 1 269 1 133 1 369 3 84 1 65 1 172 1 135 1 340 2 136 1 343 1 89 6 91 1 
177 1 47 1 0 1 20 17 295 7 22 1 121 3 320 1 299 3 301 1 163 1 128 1 262 3 100 2 104 3 167 3 237 3 307 10 365 2 196 5 36 1 269 1 133 1 369 2 84 1 65 1 172 1 135 1 340 1 136 2 343 1 89 6 91 1 
177 1 20 8 295 4 22 1 121 1 320 1 299 2 301 1 163 1 262 1 104 1 167 1 237 1 307 4 196 2 133 1 369 1 84 1 172 1 65 1 135 1 343 1 89 2 
177 1 47 1 0 1 20 12 295 6 22 1 121 1 299 1 262 1 100 2 104 2 167 1 237 1 307 6 365 2 196 2 269 1 369 2 84 1 172 1 340 2 136 1 343 1 89 2 91 1 
47 1 177 1 0 1 20 18 295 8 22 1 121 4 320 1 299 3 301 1 163 1 128 2 262 4 100 2 104 3 167 4 237 4 307 10 365 2 196 5 269 1 36 1 133 1 369 2 84 1 65 1 172 1 135 1 340 1 136 2 343 1 89 8 91 1 
47 1 177 1 0 1 20 16 295 7 22 1 121 4 299 3 128 2 262 4 100 3 357 1 104 3 167 4 237 4 307 9 365 3 196 6 269 1 369 2 84 1 172 1 340 2 136 3 343 1 89 8 91 1 
104 1 20 7 295 4 307 3 196 6 133 1 299 3 369 1 301 3 163 1 65 3 135 2 136 3 
47 1 177 1 0 1 20 18 295 8 22 1 121 4 320 1 299 3 301 1 163 1 128 2 262 4 100 2 357 1 104 3 167 4 237 4 307 10 365 2 196 4 269 1 133 1 369 2 84 1 65 1 172 1 135 1 340 1 136 1 343 1 89 8 91 1 
104 1 20 8 167 2 295 4 307 4 237 2 196 3 133 1 121 2 320 1 299 2 369 1 301 1 163 1 65 1 135 1 136 1 128 1 262 2 89 4 
104 1 20 6 295 3 307 3 196 2 133 1 320 1 310 1 299 2 369 1 301 1 163 1 65 1 135 1 
104 1 20 4 167 1 295 2 237 1 307 2 365 1 196 2 36 1 121 1 299 1 369 1 340 1 136 1 262 1 100 1 89 2 
177 1 104 1 20 7 295 4 307 3 286 1 365 1 196 2 299 1 369 1 84 1 172 2 340 1 136 1 100 1 
177 2 20 23 295 12 121 2 320 1 299 5 301 2 163 1 128 2 322 1 100 2 262 2 60 1 104 3 167 2 286 1 307 11 237 2 365 2 196 9 133 1 369 3 65 2 172 2 135 1 13 1 340 2 136 4 89 4 
172 1 20 1 295 1 
177 1 20 1 307 1 
104 1 20 6 167 1 237 1 295 3 307 3 365 1 196 3 36 1 121 1 229 1 299 2 369 1 340 1 136 1 262 1 100 1 89 2 
177 1 47 1 0 1 20 12 295 6 22 1 121 1 299 1 262 1 100 2 104 2 167 1 237 1 307 6 365 2 196 2 269 1 369 2 84 1 172 1 340 2 136 1 343 1 89 2 91 1 
104 1 20 6 307 3 295 3 196 2 133 1 299 1 369 1 301 1 65 1 136 1 
20 3 167 1 307 1 295 2 237 1 196 2 121 1 299 1 301 1 163 1 65 1 135 1 136 1 322 1 128 1 262 1 89 2 
104 2 20 10 167 1 237 1 307 5 295 5 196 5 121 1 133 1 299 3 369 2 301 2 65 2 343 1 136 2 283 1 262 1 89 2 
104 1 20 2 167 1 237 1 307 2 365 1 196 1 121 1 343 1 136 1 262 1 89 2 
104 1 20 4 167 1 295 2 237 1 307 2 365 1 196 2 121 1 299 1 369 1 340 1 343 1 136 1 262 1 100 1 89 2 
357 1 20 3 167 3 295 2 237 3 307 1 196 2 121 3 299 1 301 1 65 1 128 1 322 1 343 1 136 1 262 3 89 6 
177 3 20 34 295 18 121 5 320 1 299 7 301 3 163 1 322 1 128 2 262 5 100 3 357 1 149 1 104 5 167 5 33 1 237 5 307 16 286 1 365 3 196 12 36 1 133 2 369 5 84 1 65 3 172 4 135 1 373 1 340 3 343 1 136 5 89 10 
96 1 186 1 266 1 333 1 181 1 317 1 304 1 
266 1 192 1 333 1 181 1 316 1 317 1 186 1 96 1 7 1 290 1 88 1 304 1 
178 1 198 1 339 1 258 1 75 1 98 1 114 1 152 1 268 1 109 1 310 1 
178 1 266 1 152 1 333 1 364 1 35 1 268 1 109 1 317 2 96 2 198 1 339 1 257 1 75 1 98 1 230 1 78 1 314 1 
226 2 178 1 317 2 96 2 74 1 257 2 230 1 98 1 324 1 78 1 56 1 266 2 152 1 10 1 333 1 107 1 236 1 364 1 268 1 35 1 109 2 198 1 339 3 314 2 
226 2 178 1 317 2 96 2 74 1 257 2 230 1 98 1 324 1 78 1 56 1 266 2 152 1 10 1 333 1 107 1 236 1 334 1 268 1 35 1 109 2 198 1 339 3 314 2 
178 1 80 2 152 3 345 1 236 1 107 1 280 1 268 3 109 1 297 2 110 1 97 1 74 1 198 3 75 1 257 1 339 4 98 1 342 1 145 1 199 1 24 1 176 1 
234 1 178 1 80 2 152 3 345 1 236 1 107 1 268 3 109 1 297 2 97 1 74 1 198 3 75 1 257 1 339 4 98 1 342 1 145 1 199 1 24 1 176 1 
178 1 198 1 98 1 152 1 268 1 319 1 
227 1 232 1 178 2 18 1 235 1 267 1 152 6 268 7 109 2 319 1 218 1 242 1 244 1 198 7 75 2 257 1 339 3 98 3 45 1 328 1 190 1 
178 1 93 1 317 2 5 1 320 1 96 2 230 1 98 1 282 1 326 1 104 1 152 1 333 2 237 2 196 2 109 1 198 1 339 1 65 1 15 1 18 1 346 1 20 6 161 2 295 3 121 2 299 2 255 2 301 1 163 1 257 1 262 2 78 1 266 1 167 2 29 1 364 1 307 3 268 1 35 1 133 1 369 1 135 1 137 1 223 1 89 4 314 1 
345 2 347 2 94 1 297 3 209 1 97 1 75 1 124 2 126 2 145 1 285 2 234 1 151 1 363 1 152 1 80 3 214 1 268 1 112 1 113 1 198 1 270 1 246 1 339 2 342 1 199 1 176 1 202 1 
232 1 178 1 18 1 152 2 268 2 109 1 319 1 198 2 257 1 339 2 98 2 43 1 176 1 
178 1 18 1 152 4 278 1 268 4 109 1 198 4 75 1 258 1 339 1 98 1 114 1 24 1 
178 1 235 1 267 1 152 2 268 2 183 1 109 1 74 1 198 2 257 1 339 1 98 2 323 1 272 1 
178 1 16 1 198 1 75 1 98 1 152 1 106 1 293 1 268 1 6 1 
227 1 178 1 18 1 152 2 268 2 109 1 198 2 339 1 98 1 57 1 190 1 
227 1 178 2 18 1 152 4 278 1 268 5 109 2 74 1 198 5 258 1 75 1 339 3 114 1 98 2 328 1 45 1 
227 1 178 2 18 1 152 4 278 1 268 5 109 2 74 1 198 5 258 1 75 1 339 3 114 1 98 2 173 1 45 1 
178 1 266 1 152 1 333 1 334 1 35 1 268 1 109 1 317 2 96 2 198 1 339 1 257 1 75 1 98 1 230 1 78 1 314 1 
232 1 178 1 235 1 267 1 152 1 268 1 109 1 242 1 74 1 198 1 257 1 339 1 98 2 
96 1 266 1 105 1 187 1 284 1 147 1 252 1 317 1 139 1 
344 1 366 1 252 1 
321 1 333 1 187 1 147 1 252 1 
226 2 344 1 50 1 70 1 252 1 317 1 297 2 96 1 72 1 321 1 97 1 350 1 187 1 145 1 147 1 324 1 56 1 150 1 266 1 80 2 35 1 366 1 111 1 112 1 368 1 342 1 175 1 314 1 
14 1 189 1 287 1 310 1 
14 1 341 1 81 1 153 1 168 1 189 1 287 1 
247 1 332 1 153 1 
81 3 2 1 281 1 168 1 153 3 287 1 144 2 54 1 14 1 341 1 189 1 116 1 
219 1 14 1 115 1 341 1 81 2 153 2 168 1 189 1 287 1 
69 1 106 1 341 1 81 1 153 1 168 1 206 1 158 1 189 1 6 1 116 1 
14 1 341 1 81 1 153 1 168 1 189 1 116 1 
14 2 341 1 81 1 153 1 168 1 287 1 116 1 
27 1 142 1 81 2 215 1 168 2 153 2 14 1 341 2 189 1 116 1 
329 1 81 3 168 1 153 3 206 1 287 1 83 1 14 1 341 1 115 2 67 1 189 2 116 1 
49 1 106 2 293 1 81 2 168 1 153 2 287 1 298 1 6 1 14 1 341 1 115 1 158 1 189 1 116 1 
81 4 168 2 153 4 206 1 287 1 219 1 14 1 341 2 115 2 67 1 189 2 116 1 46 1 
14 1 341 1 81 1 153 1 168 1 189 1 287 1 116 1 
81 4 2 1 153 4 168 1 206 1 287 2 144 1 54 1 14 2 115 2 341 1 271 1 67 1 189 3 
81 2 131 1 62 1 168 1 153 2 287 1 14 1 341 1 115 1 189 1 116 1 68 1 
81 3 2 1 168 1 153 3 279 1 287 1 144 2 54 2 14 1 341 1 189 1 116 1 
217 2 52 1 154 1 189 2 
259 1 341 1 81 1 153 1 168 1 116 1 
329 1 14 1 115 1 341 1 81 2 153 2 168 1 189 1 287 1 116 1 
337 1 
14 1 341 1 81 1 153 1 168 1 189 1 287 1 116 1 
329 1 81 3 168 1 153 3 287 1 144 1 14 1 115 1 341 1 189 1 116 1 
271 1 67 1 206 1 189 1 
14 1 189 1 

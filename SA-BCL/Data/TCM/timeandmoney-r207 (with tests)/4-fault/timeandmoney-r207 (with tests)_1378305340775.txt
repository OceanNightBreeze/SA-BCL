#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 32 185 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 32 185 41 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
195 1 336 2 174 1 243 2 244 9 198 1 7 1 93 2 340 1 27 1 8 1 128 1 153 1 271 1 51 1 226 1 102 2 228 1 231 1 53 2 298 9 315 4 20 2 277 6 142 3 255 2 279 1 281 5 
195 1 336 2 174 1 243 2 244 9 198 1 7 1 93 2 340 1 27 1 8 1 128 1 153 1 271 1 51 1 226 1 102 2 228 1 231 1 53 2 298 9 315 4 20 2 277 6 142 3 255 2 279 1 281 5 
195 1 336 2 174 1 243 2 244 10 198 1 7 1 93 2 340 1 27 1 8 1 128 1 153 1 271 1 51 1 226 1 102 2 228 1 231 1 53 2 298 10 315 5 20 2 277 7 142 4 255 2 279 1 281 6 
195 1 336 2 174 1 243 1 244 7 198 1 7 1 93 2 340 1 27 1 8 1 128 1 153 1 271 1 51 1 226 1 102 2 228 1 53 2 298 7 315 3 20 2 277 4 142 2 255 2 279 1 281 4 
336 1 102 1 228 1 231 1 53 1 243 2 244 4 198 1 7 1 298 4 315 2 27 1 20 1 277 3 8 1 142 1 255 1 281 3 
116 1 336 1 51 1 102 1 228 1 174 1 2 1 53 1 244 2 263 1 198 1 7 1 298 2 93 1 20 1 281 1 
336 2 228 1 244 3 198 1 7 1 298 3 93 1 315 1 20 2 277 1 128 1 142 1 281 2 
336 2 102 1 321 1 228 1 231 1 53 1 243 2 244 9 198 1 7 1 298 9 93 1 315 4 27 1 20 2 8 1 277 7 128 1 142 3 328 1 255 1 153 1 279 1 281 5 
336 2 102 1 321 1 228 1 231 1 53 1 243 2 244 9 198 1 7 1 298 9 93 1 315 4 27 1 20 2 8 1 277 7 128 1 142 3 328 1 255 1 153 1 279 1 281 5 
160 1 326 1 177 1 
348 2 177 1 164 1 
206 2 296 2 29 1 49 2 129 1 230 2 203 2 5 2 
173 1 44 1 120 1 242 1 196 1 5 3 121 1 308 2 200 1 29 1 49 2 224 1 203 2 310 2 96 1 206 3 100 1 36 1 347 1 312 1 210 1 129 1 230 2 80 2 159 1 38 1 83 1 296 2 19 1 316 2 254 1 114 2 238 1 167 1 280 1 194 1 359 1 
206 1 296 1 70 1 29 1 49 1 230 1 203 1 5 1 341 1 24 1 
206 1 225 1 304 1 79 1 5 1 276 1 351 1 287 1 296 1 354 1 326 1 177 1 193 1 341 1 
206 1 79 2 230 1 304 1 5 1 351 2 287 1 296 1 354 1 326 1 49 1 203 1 177 1 193 1 341 1 
99 1 248 1 103 1 79 1 351 1 
180 1 344 1 326 1 248 1 103 1 79 2 177 1 351 2 
248 1 79 1 351 1 
206 1 103 1 79 1 230 1 5 1 351 1 296 1 70 1 29 1 49 1 203 1 256 1 341 1 24 1 
177 1 
180 1 326 1 248 1 103 1 79 2 177 1 45 1 351 2 
77 2 270 1 180 1 331 1 103 2 79 5 3 1 351 5 288 2 338 1 326 1 84 1 201 1 248 2 10 1 177 1 291 1 154 1 318 2 
160 1 129 1 
206 2 230 1 129 2 5 2 149 1 296 2 221 1 49 1 203 1 
69 1 73 1 50 1 
206 1 100 1 157 1 173 1 312 1 129 1 80 1 5 1 159 1 308 1 83 1 238 1 310 1 167 1 359 1 194 1 
206 2 100 1 173 1 312 1 229 1 230 1 80 1 5 2 159 1 308 1 83 1 199 1 296 1 69 1 238 1 203 1 310 1 167 1 194 1 359 1 
206 3 199 1 296 3 49 1 129 1 230 3 203 3 5 3 
206 1 296 1 70 1 230 1 203 1 5 1 341 1 
149 1 206 1 296 1 221 1 49 1 230 1 203 1 5 1 341 1 
173 1 44 1 304 1 120 1 242 1 196 1 5 4 287 1 308 1 199 1 200 1 221 1 29 1 49 2 224 1 203 3 310 1 96 1 341 1 206 4 100 1 347 1 312 1 227 1 16 1 129 1 230 3 229 1 79 1 80 1 159 1 351 1 83 1 296 3 354 1 316 1 254 1 114 2 238 1 167 1 280 1 193 1 194 1 359 1 
206 2 296 2 199 1 129 1 230 1 203 1 215 1 5 2 276 1 
206 3 16 1 79 1 229 1 230 3 304 1 5 3 351 1 287 1 199 2 296 3 354 1 221 1 49 1 203 3 177 1 193 1 156 1 341 1 
206 2 230 2 5 2 199 1 296 2 221 1 69 1 49 1 203 2 50 1 
206 1 100 1 312 1 173 1 129 1 80 1 5 1 159 1 308 1 83 1 238 1 310 1 167 1 359 1 194 1 
206 1 100 1 173 1 129 1 80 1 5 1 159 1 308 1 247 1 74 1 238 1 310 1 167 1 359 1 194 1 
241 1 144 1 43 1 44 1 120 2 196 1 200 1 124 1 69 2 73 2 72 1 224 1 50 2 350 1 132 1 38 2 355 1 137 1 254 1 316 4 114 2 141 1 165 1 280 1 
206 1 296 1 252 1 304 1 230 1 203 1 5 1 341 1 
206 5 78 1 230 4 129 1 229 1 5 5 276 1 199 2 296 5 135 1 221 1 49 1 203 4 215 1 
206 2 296 2 252 1 70 1 230 2 203 2 5 2 341 1 
25 1 108 1 
25 1 108 1 
322 1 95 1 
322 1 95 1 
322 1 95 1 
25 1 9 1 108 1 
25 1 9 1 108 1 
25 1 305 1 108 1 
25 2 322 1 278 1 95 1 108 2 314 1 
25 1 9 1 108 1 
25 1 48 1 108 1 
25 1 48 1 108 1 
25 1 48 1 108 1 
25 1 185 1 15 1 32 1 108 1 168 1 
25 1 185 1 15 1 32 1 79 1 41 1 108 1 351 1 168 1 
102 1 53 1 255 1 
116 1 102 1 53 1 
115 1 116 1 237 1 102 3 255 2 358 1 
116 1 324 1 237 1 102 2 255 1 358 1 
116 1 237 2 102 2 255 1 358 1 
0 1 323 1 3 2 245 2 288 1 265 1 28 1 326 1 72 1 248 1 75 2 10 1 177 2 291 3 34 1 155 1 269 2 330 1 250 1 77 1 180 1 346 1 348 3 103 4 79 5 350 1 130 1 132 1 351 5 355 1 164 1 318 1 
0 2 323 1 3 6 245 6 286 5 288 2 338 1 265 2 326 1 72 3 248 6 202 1 75 6 10 1 177 5 291 8 330 4 77 2 251 1 99 5 180 1 182 1 348 9 103 7 79 9 350 3 130 3 132 3 351 9 355 3 163 1 113 1 164 3 282 1 318 2 
0 1 3 2 245 2 288 1 338 1 265 1 326 1 28 1 72 1 75 2 177 3 291 3 269 1 330 1 250 1 77 1 103 2 348 4 79 3 350 1 130 1 132 1 351 3 355 1 164 2 318 1 
0 1 3 4 245 4 288 1 338 1 265 1 326 1 28 1 72 2 75 4 177 4 291 5 269 2 330 2 77 1 250 1 251 1 182 1 348 7 103 3 79 4 350 2 130 2 132 2 351 4 355 2 163 1 164 3 318 1 
160 1 173 1 107 1 
173 1 30 1 
12 1 
173 1 194 1 
117 1 173 3 238 1 107 2 194 1 169 1 
173 1 238 1 194 1 
173 1 311 1 
144 2 63 1 345 1 120 3 350 1 132 1 275 1 38 4 220 1 111 1 316 7 187 1 309 1 76 1 165 3 217 2 23 1 
144 2 63 1 345 1 120 3 350 1 132 1 275 1 38 4 220 1 111 1 316 7 187 1 309 1 76 1 165 3 217 2 23 1 
144 2 63 1 345 1 120 3 350 1 132 1 275 1 147 1 38 4 220 1 111 1 316 7 187 1 309 1 76 1 165 3 217 2 23 1 
144 5 63 2 303 1 44 1 120 15 196 1 220 1 72 3 309 1 94 1 224 1 76 2 345 1 349 1 131 3 130 3 350 4 132 4 158 1 275 2 38 16 353 1 355 3 111 1 55 4 254 1 316 31 187 5 114 2 57 1 165 10 143 1 217 3 23 2 
144 3 63 1 44 2 120 4 196 2 266 1 224 2 309 1 76 1 345 1 350 1 132 1 213 1 158 1 275 1 38 5 111 1 254 2 316 9 187 1 114 4 165 4 217 2 23 1 
116 1 115 1 171 1 336 1 90 1 197 1 244 2 198 1 308 1 7 1 246 1 93 1 126 1 310 1 100 1 14 1 102 2 80 1 228 1 53 1 233 1 212 1 159 1 298 2 112 1 20 1 277 1 255 1 239 1 281 1 
115 1 116 1 171 1 336 1 90 1 197 1 244 3 198 1 308 1 7 1 246 1 93 1 267 1 126 1 310 1 100 1 14 1 102 2 80 1 53 1 212 1 159 1 298 3 20 1 85 1 277 2 334 1 255 1 239 1 281 1 
116 1 115 1 171 1 197 1 244 2 198 1 308 1 7 1 246 1 93 1 126 1 310 1 100 1 14 1 102 2 80 1 53 1 159 1 298 2 277 2 85 1 334 1 239 1 255 1 281 1 
336 1 173 1 244 1 197 2 308 1 93 2 267 1 126 2 127 1 310 1 179 1 97 1 100 1 272 1 14 2 80 1 52 1 159 1 298 1 20 1 301 1 167 1 194 1 
116 1 115 1 171 1 336 1 90 1 197 1 244 1 308 1 246 1 93 1 126 1 310 1 100 1 14 1 102 2 80 1 228 1 53 1 233 1 212 1 159 1 298 1 20 1 334 1 255 1 239 1 
211 1 
0 1 91 4 283 2 3 2 5 1 284 1 287 1 288 1 326 1 248 6 10 1 290 2 291 2 205 1 97 1 206 1 100 1 208 1 17 1 159 1 296 1 299 1 164 2 167 2 218 2 62 2 335 2 118 1 173 1 119 1 304 1 308 2 68 2 177 2 310 2 341 1 77 1 225 1 181 2 180 3 272 1 348 2 79 5 80 2 232 1 82 1 351 5 276 1 352 1 133 1 354 1 235 1 193 1 194 1 318 1 
206 1 218 1 225 1 180 1 118 1 208 1 119 1 91 2 304 1 79 3 45 1 5 1 17 1 82 1 351 3 276 1 287 1 296 1 354 1 248 2 193 1 341 1 
206 1 225 1 180 1 118 1 208 1 119 1 91 3 304 1 79 3 283 1 45 1 5 1 17 1 82 1 351 3 276 1 287 1 296 1 354 1 326 1 248 1 177 1 193 1 341 1 
218 1 118 1 119 1 91 3 304 1 283 1 45 1 5 1 287 1 326 1 248 2 177 1 341 1 206 1 225 1 180 1 181 1 208 1 79 3 17 1 82 1 276 1 351 3 296 1 354 1 193 1 
91 6 283 4 45 1 3 1 5 1 284 1 287 1 288 1 326 5 248 7 327 1 10 1 290 2 291 1 205 1 206 1 208 1 17 1 296 1 214 1 164 2 166 1 218 4 335 2 62 2 118 1 119 1 304 1 176 1 68 2 177 5 341 1 77 1 225 1 181 4 180 3 79 5 81 1 82 1 351 5 276 1 354 1 193 1 318 1 
91 4 283 2 3 1 5 1 284 1 287 1 288 1 326 1 248 4 10 1 290 2 291 1 205 1 206 1 208 1 17 1 296 1 164 2 335 2 62 2 218 2 118 1 119 1 304 1 68 2 177 2 341 1 77 1 225 1 180 2 181 2 348 2 79 4 82 1 276 1 351 4 354 1 235 1 193 1 318 1 
218 2 62 2 335 2 118 1 119 1 91 4 304 1 283 2 3 1 5 1 284 1 287 1 288 1 68 2 326 1 248 4 10 1 177 1 290 2 291 1 205 1 341 1 206 1 77 1 225 1 181 2 180 2 208 1 79 4 81 1 17 1 82 1 276 1 351 4 296 1 354 1 214 1 164 2 166 1 193 1 318 1 
218 2 62 2 335 2 118 1 119 1 91 4 304 1 283 2 3 1 5 1 284 1 287 1 288 1 68 2 326 1 248 4 10 1 177 1 290 2 291 1 205 1 341 1 206 1 77 1 225 1 181 2 180 2 208 1 79 4 81 1 17 1 82 1 276 1 351 4 296 1 354 1 214 1 164 2 166 1 193 1 318 1 
319 1 218 2 335 2 118 1 172 2 119 1 91 4 304 1 283 2 3 1 5 1 284 1 287 1 288 1 326 1 248 4 10 1 177 1 33 2 290 2 291 1 341 1 206 1 77 1 225 1 181 2 180 2 208 1 348 2 79 4 81 1 17 1 82 1 276 1 351 4 296 1 134 1 354 1 86 1 193 1 318 1 
62 2 335 2 218 3 118 1 119 1 91 5 304 1 283 3 3 1 5 1 176 1 284 1 287 1 288 1 68 2 326 1 248 5 10 1 177 1 290 2 291 1 205 1 341 1 206 1 77 1 225 1 180 2 181 3 208 1 79 4 81 1 17 1 82 1 276 1 351 4 296 1 214 1 354 1 164 2 166 1 193 1 318 1 
62 2 335 2 218 3 118 1 119 1 91 5 304 1 283 3 3 1 5 1 176 1 284 1 287 1 288 1 68 2 326 1 248 5 10 1 177 1 290 2 291 1 205 1 341 1 206 1 77 1 225 1 180 2 181 3 208 1 79 4 81 1 17 1 82 1 276 1 351 4 296 1 214 1 354 1 164 2 166 1 193 1 318 1 
91 4 283 2 3 1 5 1 284 1 287 1 288 1 326 1 248 4 10 1 290 2 291 1 206 1 208 1 17 1 296 1 335 2 218 2 118 1 172 2 119 1 304 1 33 2 177 1 341 1 77 1 225 1 180 2 181 2 348 2 79 4 82 1 276 1 351 4 354 1 235 1 86 1 193 1 318 1 
144 2 63 1 44 1 120 3 196 1 200 1 69 1 73 1 224 1 309 1 50 1 345 1 129 2 350 1 132 1 38 3 160 1 111 1 254 1 316 6 114 2 141 1 165 2 280 1 217 1 23 1 
144 1 44 2 120 6 196 2 200 1 69 11 73 11 72 2 224 2 50 4 347 1 101 1 349 1 210 1 129 1 131 3 130 2 350 1 132 2 294 1 38 8 353 1 355 1 55 3 254 2 316 14 187 1 188 1 114 4 189 1 165 2 22 1 280 2 
173 1 44 1 120 1 196 1 5 2 264 1 308 1 199 1 200 1 222 1 224 1 203 1 310 1 50 1 206 2 100 1 157 1 312 1 347 1 273 1 210 1 129 1 80 1 230 1 229 1 159 1 38 1 83 1 296 1 254 1 316 2 238 1 189 1 114 2 167 1 280 1 194 1 359 1 
144 4 44 3 242 2 5 3 196 3 199 1 200 3 203 1 50 7 206 3 100 2 210 1 159 2 296 1 111 1 254 3 334 1 114 6 167 1 165 8 217 1 23 1 63 1 173 2 120 10 308 3 123 1 69 7 73 7 72 2 268 2 309 1 224 3 310 3 345 1 347 1 312 2 129 2 80 3 229 1 230 1 350 3 130 2 132 3 183 1 38 10 234 2 83 2 355 2 136 2 186 2 316 20 187 4 189 1 238 2 87 1 280 3 359 2 194 2 
80 1 58 1 310 1 167 1 308 1 
144 1 44 1 120 2 196 1 5 1 221 1 200 1 69 1 73 1 49 1 72 1 224 1 203 1 50 1 206 1 230 1 130 1 350 1 132 1 105 1 38 1 296 1 355 1 254 1 316 3 114 2 189 1 165 1 280 1 
43 1 44 1 132 1 196 1 38 2 200 1 69 1 73 1 316 2 254 1 72 1 187 1 224 1 114 2 141 1 165 1 280 1 50 1 
144 1 241 1 44 1 350 1 120 2 196 1 355 1 200 1 69 1 73 1 316 2 254 1 224 1 114 2 141 1 165 1 280 1 50 1 
144 1 44 1 120 2 196 1 200 1 69 2 72 1 73 2 224 1 50 2 130 1 350 1 132 1 38 2 355 1 254 1 316 4 187 1 114 2 141 1 165 2 280 1 
58 1 
58 1 
58 1 
144 1 44 1 120 2 196 1 200 1 69 2 72 1 73 2 224 1 50 2 130 1 350 1 132 1 38 2 355 1 316 4 254 1 187 1 114 2 165 2 280 1 
173 1 44 1 242 1 120 1 5 1 196 1 308 1 200 1 224 1 310 1 206 1 100 1 312 1 347 1 210 1 129 1 80 1 159 1 38 1 83 1 316 2 254 1 238 1 114 2 167 1 280 1 194 1 359 1 
173 1 44 1 120 1 5 1 196 1 308 1 200 1 247 1 74 1 224 1 310 1 206 1 100 1 35 1 347 1 210 1 129 1 80 1 159 1 38 1 316 2 254 1 238 1 114 2 167 1 280 1 194 1 359 1 
144 1 44 1 120 2 196 1 200 1 69 2 72 1 73 2 224 1 50 2 130 1 350 1 132 1 38 2 355 1 254 1 316 4 187 1 114 2 189 1 165 2 280 1 
144 1 173 1 44 1 120 2 242 1 5 1 196 1 308 1 200 1 69 2 73 2 72 1 224 1 310 1 50 2 206 1 100 1 312 1 80 1 350 1 130 1 132 1 159 1 38 2 83 1 234 1 355 1 112 1 316 4 254 1 187 1 238 1 114 2 165 2 280 1 359 1 194 1 
44 1 120 1 196 1 5 1 221 1 200 1 69 1 49 1 72 1 73 1 224 1 203 1 342 1 50 1 206 1 230 1 350 1 130 1 132 1 38 2 296 1 355 1 254 1 316 3 187 1 114 2 189 1 165 1 280 1 
144 3 44 2 120 10 196 2 339 1 72 3 223 1 224 2 11 1 98 1 349 1 131 1 130 3 350 3 132 3 213 1 184 1 313 1 18 2 38 9 353 1 355 3 55 2 254 2 316 19 187 3 114 4 356 2 192 1 165 6 
144 2 44 3 120 12 175 1 196 3 46 1 339 1 151 1 72 3 223 1 224 3 11 2 329 1 349 2 350 2 131 2 130 3 132 3 158 2 213 1 184 2 313 1 109 1 18 1 38 14 355 2 55 2 254 3 316 26 187 2 114 6 356 4 59 1 165 4 
144 4 44 3 196 3 46 1 151 1 11 2 329 1 98 1 213 1 158 1 109 1 18 1 111 1 55 4 254 3 114 6 165 8 59 1 217 1 60 1 23 1 63 1 120 21 175 1 339 1 72 4 223 1 224 3 309 1 345 1 349 3 350 5 130 4 131 3 132 5 184 1 313 1 38 20 353 1 355 4 316 41 187 4 356 4 
144 4 63 1 44 4 120 18 175 1 196 4 46 1 339 1 151 1 72 4 223 1 309 1 224 4 11 2 329 1 98 1 345 1 349 3 131 3 130 4 350 4 132 5 158 2 213 1 184 1 109 1 313 1 18 1 38 20 353 1 355 3 111 1 55 4 254 4 316 38 187 3 114 8 356 4 59 1 165 7 60 1 217 1 23 1 
144 7 63 1 44 2 120 25 175 1 196 2 46 1 339 1 151 1 72 7 223 1 309 1 224 2 11 1 329 1 345 1 349 2 131 4 130 7 350 8 132 8 158 1 213 1 184 1 109 1 313 1 18 1 38 27 353 2 355 7 111 1 55 4 254 2 316 52 187 7 188 2 114 4 356 4 59 1 165 14 217 1 23 1 
64 1 173 1 146 1 44 1 120 1 5 2 196 1 285 1 308 2 325 1 200 1 224 1 178 1 310 2 206 2 100 1 347 1 210 1 80 2 159 1 38 1 296 2 19 2 254 1 316 2 56 1 189 1 114 2 280 1 194 1 88 1 
115 1 116 1 343 1 171 1 100 1 90 1 102 2 80 2 53 1 197 1 159 1 308 2 67 1 246 1 112 1 150 1 334 1 255 1 310 2 
115 1 116 1 343 1 171 1 100 1 90 1 102 2 80 1 53 1 197 1 293 1 159 1 308 1 246 1 334 1 255 1 310 1 
89 1 100 1 272 1 173 1 80 1 52 1 197 1 159 1 308 1 67 1 310 1 167 1 194 1 97 1 
115 1 116 1 343 1 171 1 100 1 90 1 102 2 80 1 53 1 197 1 159 1 308 1 67 1 246 1 150 1 334 1 255 1 310 1 
42 1 
160 1 270 1 326 1 84 1 177 1 3 1 291 1 
62 1 3 1 288 1 68 1 326 1 248 1 10 1 177 2 291 1 205 1 77 1 180 1 348 1 79 1 351 1 164 1 318 1 
145 2 0 2 3 8 245 6 288 4 326 2 248 5 10 4 204 2 152 2 291 9 100 4 107 2 159 3 54 2 299 1 162 1 112 1 333 2 164 6 167 1 170 2 117 1 259 1 173 10 260 1 308 3 30 3 72 2 75 6 177 8 310 3 311 2 77 4 270 1 180 3 348 12 80 3 79 5 130 2 350 2 132 2 274 2 351 5 40 1 355 2 186 2 84 1 138 2 238 3 357 1 193 2 194 3 318 4 
145 2 0 1 175 1 3 5 46 1 245 5 288 2 326 2 151 1 248 1 72 2 75 5 10 2 177 5 204 1 291 8 207 1 77 2 180 1 209 1 348 6 349 1 79 1 131 1 130 2 350 2 132 2 351 1 109 1 355 2 299 1 55 1 164 3 59 1 318 2 
63 1 145 2 3 2 5 1 288 1 70 1 29 1 49 1 10 1 309 1 203 1 204 1 291 2 341 1 206 1 77 1 79 1 230 1 350 1 132 2 351 1 296 1 214 1 190 1 256 1 23 1 318 1 24 1 
77 1 270 1 3 1 288 1 326 1 84 1 10 1 177 1 291 1 318 1 
145 2 348 10 130 2 350 2 132 2 3 5 245 5 355 2 186 1 72 2 75 5 177 5 204 1 164 5 291 5 
180 1 326 1 248 1 79 1 177 1 351 1 
0 2 259 2 173 2 4 1 3 2 262 1 308 4 288 2 338 1 248 4 10 1 310 4 291 2 97 1 77 2 180 2 100 3 272 1 80 4 79 3 104 1 159 2 351 3 352 1 297 1 133 1 40 1 299 2 139 1 238 1 216 1 167 2 194 2 318 2 
173 1 44 1 120 1 242 1 196 1 5 3 308 1 200 1 29 1 49 2 203 2 224 1 310 1 96 1 206 3 100 1 347 1 312 1 129 1 80 1 230 2 159 1 83 1 296 2 316 1 254 1 114 2 238 1 167 1 280 1 359 1 194 1 
77 1 0 1 348 4 3 2 245 2 288 1 299 1 326 2 75 2 10 1 177 4 164 2 291 1 217 1 318 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
15 1 32 1 
25 1 108 1 
144 2 63 1 345 1 44 2 350 1 120 4 132 1 196 2 158 1 38 4 111 1 316 8 254 2 187 1 309 1 224 2 114 4 165 3 217 1 23 1 
144 2 63 1 345 1 120 3 350 1 132 1 38 3 160 1 111 1 316 6 309 1 165 2 217 1 23 1 
144 1 26 1 44 1 120 2 350 1 130 1 132 1 196 1 38 2 355 1 254 1 72 1 316 4 187 1 224 1 114 2 165 2 
144 1 349 1 350 1 120 4 131 1 130 1 132 1 38 3 353 1 355 1 55 2 316 7 72 1 187 1 165 2 
144 5 63 2 44 2 120 12 196 2 148 1 72 2 309 1 224 2 345 1 101 1 130 2 131 2 350 3 132 3 158 2 38 11 353 1 355 2 111 1 55 2 316 23 254 2 187 4 188 1 114 4 165 9 217 1 23 2 
55 1 316 1 120 1 
316 1 131 1 38 1 
144 2 26 1 44 1 120 3 130 1 350 1 132 1 196 1 38 3 355 1 186 1 254 1 316 6 72 1 187 1 114 2 224 1 165 3 
144 1 44 1 120 6 175 1 196 1 46 1 151 1 72 2 224 1 349 1 131 1 130 2 350 2 132 2 213 1 109 1 38 6 355 2 55 1 316 12 254 1 187 1 114 2 165 2 59 1 
144 1 63 1 350 1 120 3 132 1 38 3 316 6 187 1 309 1 165 2 23 1 
144 1 63 1 345 1 44 1 120 2 196 1 158 1 38 1 148 1 111 1 316 3 254 1 187 1 224 1 114 2 165 2 23 1 
144 3 63 2 44 1 120 5 350 2 132 2 196 1 213 1 38 5 254 1 316 10 187 2 114 2 224 1 309 1 190 1 165 5 23 2 
44 1 132 1 196 1 213 1 38 2 254 1 72 1 316 2 187 1 224 1 114 2 165 1 
144 1 44 1 120 2 350 1 130 1 132 1 196 1 213 1 38 2 355 1 254 1 72 1 316 4 187 1 224 1 114 2 165 2 
144 1 63 1 98 1 44 3 120 2 196 3 158 1 213 1 148 1 38 1 316 3 254 3 187 1 224 3 114 6 165 2 23 1 
144 7 63 3 26 1 44 5 120 18 196 5 148 1 72 3 309 2 94 1 224 5 345 1 98 1 349 1 131 3 130 3 350 5 132 5 158 2 213 1 38 16 353 1 355 3 111 1 55 4 254 5 316 34 187 5 57 1 114 10 143 1 165 12 217 1 23 3 
144 2 63 1 44 1 120 4 175 1 196 1 224 1 309 1 345 1 349 1 350 1 131 1 132 1 213 1 38 4 111 1 55 1 316 8 254 1 114 2 165 2 217 1 23 1 
144 2 63 1 26 1 44 2 120 5 175 1 196 2 72 1 309 1 224 2 345 1 349 1 350 1 131 1 130 1 132 2 213 1 38 6 353 1 111 1 55 2 316 11 254 2 187 1 114 4 165 3 217 1 23 1 
144 3 63 1 26 1 44 3 120 10 175 1 196 3 46 1 151 1 72 2 309 1 224 3 345 1 349 1 131 1 130 2 350 3 132 3 213 1 158 1 109 1 38 9 355 2 111 1 55 1 316 19 254 3 187 1 114 6 165 4 59 1 217 1 23 1 
144 3 63 1 26 1 44 3 120 7 175 1 196 3 46 1 151 1 72 2 309 1 224 3 345 1 349 1 131 1 130 2 350 2 132 3 158 1 213 1 109 1 38 10 355 1 111 1 55 1 316 17 254 3 187 2 114 6 165 5 59 1 217 1 23 1 
144 2 63 1 44 1 120 4 175 1 196 1 224 1 309 1 345 1 349 1 350 1 131 1 132 1 213 1 38 4 111 1 55 1 316 8 254 1 114 2 165 2 217 1 23 1 
144 1 44 1 120 6 175 1 196 1 46 1 151 1 72 2 224 1 349 1 131 1 130 2 350 2 132 2 213 1 109 1 38 6 355 2 55 1 316 12 254 1 187 1 114 2 165 2 59 1 
144 3 63 1 26 1 44 4 120 8 175 1 196 4 46 1 151 1 72 2 309 1 224 4 345 1 349 1 131 1 130 2 350 2 132 3 213 1 158 2 109 1 38 10 355 1 111 1 55 1 316 18 254 4 187 2 114 8 59 1 165 5 217 1 23 1 
144 3 44 4 120 7 175 1 196 4 46 1 151 1 72 3 224 4 98 1 349 1 131 1 130 3 350 2 132 3 213 1 158 2 109 1 38 9 355 2 55 1 316 16 254 4 187 3 114 8 59 1 165 6 
144 3 63 3 345 2 120 4 350 1 132 1 38 3 111 1 316 7 187 3 309 1 165 6 23 3 
144 3 63 1 44 4 120 8 175 1 196 4 46 1 151 1 72 2 309 1 224 4 345 1 98 1 349 1 131 1 130 2 350 2 132 3 213 1 158 2 109 1 38 10 355 1 111 1 55 1 316 18 254 4 187 1 114 8 59 1 165 4 217 1 23 1 
206 1 296 1 129 1 215 1 5 1 6 1 276 1 
206 1 258 1 65 1 129 1 5 1 6 1 92 1 276 1 295 1 39 1 296 1 215 1 
160 1 100 1 272 1 173 1 80 1 310 1 167 1 159 1 194 1 97 1 308 1 
206 2 100 1 173 1 312 1 129 1 230 1 80 1 5 2 159 1 308 1 199 1 296 1 238 1 203 1 310 1 167 1 194 1 359 1 
259 1 173 3 304 1 5 2 308 1 199 1 203 2 310 1 311 1 341 1 206 2 100 1 312 1 129 1 80 1 230 1 159 1 54 1 296 2 354 1 238 2 359 1 194 2 
259 1 173 3 304 1 5 2 47 1 308 2 199 1 74 1 203 2 310 2 311 1 341 1 206 2 100 1 129 1 80 2 230 1 159 1 54 1 296 2 354 1 238 2 359 1 194 2 
259 1 173 4 219 1 47 1 308 3 326 1 248 1 30 1 177 1 310 3 311 1 100 1 80 3 79 2 107 1 159 1 351 2 54 1 332 1 238 1 167 1 193 1 194 1 
100 1 259 1 173 4 79 2 80 3 47 1 107 1 351 2 159 1 308 3 54 1 326 1 30 1 248 1 138 1 238 1 177 1 310 3 167 1 311 1 193 1 194 1 
100 1 71 1 80 1 310 1 159 1 308 1 
117 1 100 3 173 3 80 7 104 1 306 1 106 1 307 1 159 2 308 6 19 1 71 1 112 1 56 1 334 1 289 1 238 1 216 1 310 7 167 2 194 2 
144 2 63 1 173 1 44 2 120 3 242 1 196 2 5 2 308 1 199 1 325 1 200 2 69 1 73 1 268 1 309 1 224 2 203 1 310 1 50 1 206 2 345 1 100 1 312 1 129 2 230 1 80 1 350 1 132 1 159 1 38 3 234 1 83 1 296 1 111 1 112 1 316 6 254 2 238 1 189 1 114 4 165 2 217 1 280 2 23 1 194 1 359 1 
173 2 3 1 308 1 288 2 326 1 30 1 248 2 10 2 177 1 291 1 310 1 152 1 77 2 270 1 180 1 103 1 79 3 80 1 274 1 107 1 351 3 40 1 84 1 138 1 333 1 167 1 193 1 318 2 
117 1 100 2 173 2 80 2 107 1 159 1 308 2 162 1 112 1 71 1 238 1 310 2 194 1 
100 1 272 1 173 1 80 4 47 1 159 1 308 4 112 1 140 1 310 4 167 1 97 1 194 1 
100 2 259 1 173 1 80 2 104 1 4 1 183 1 262 1 159 1 308 2 238 1 216 1 310 2 194 1 
116 1 246 1 100 1 102 1 80 1 53 1 310 1 167 1 159 1 308 1 
100 1 112 1 173 1 56 1 334 1 80 2 310 2 159 1 194 1 88 1 308 2 
272 1 100 2 259 1 173 3 80 5 106 1 307 1 159 2 308 4 112 1 56 1 140 1 310 5 167 1 97 1 194 2 
61 1 272 1 100 2 259 1 173 3 80 5 106 1 159 2 308 4 112 1 56 1 140 1 310 5 167 1 97 1 194 2 
206 2 100 1 173 1 129 1 230 1 80 1 5 2 159 1 308 1 199 1 296 1 74 1 238 1 203 1 310 1 167 1 194 1 359 1 
117 1 100 2 259 1 173 1 80 1 104 1 159 1 308 1 289 1 238 1 216 1 310 1 194 1 
253 1 37 1 129 1 21 1 240 1 
292 1 103 1 37 2 16 1 129 1 304 1 79 2 351 2 287 1 122 1 354 1 253 2 326 1 236 1 177 1 21 2 193 1 240 1 341 1 
206 1 64 1 37 1 5 1 285 1 296 1 178 1 21 1 240 1 
292 1 236 1 240 1 
7 1 160 1 281 1 198 1 
7 1 298 1 336 1 20 1 244 1 281 1 198 1 
298 1 93 1 126 1 
336 1 228 1 174 2 244 3 198 1 7 1 298 3 161 1 20 1 31 1 191 1 281 1 
7 1 298 2 336 1 20 1 277 1 243 1 244 2 281 1 198 1 
336 1 102 1 228 1 53 1 244 1 298 1 315 1 20 1 8 1 255 1 281 1 
298 1 336 1 20 1 228 1 244 1 281 1 198 1 
7 1 298 1 336 1 20 1 228 1 244 1 198 2 
320 1 336 2 66 1 228 1 244 2 198 1 298 2 20 2 125 1 281 1 
336 1 228 1 244 3 198 1 7 1 298 3 315 1 20 1 277 2 142 1 153 1 279 1 281 2 
116 1 115 1 336 1 102 2 228 1 53 1 244 2 198 1 7 1 298 2 20 1 317 1 277 1 255 1 281 1 
336 2 228 1 231 1 243 1 244 4 198 1 7 1 298 4 315 1 20 2 277 2 142 1 281 2 
7 1 298 1 336 1 20 1 228 1 244 1 281 1 198 1 
13 1 336 1 174 1 244 4 198 2 7 2 161 1 298 4 315 1 20 1 31 1 277 2 142 1 281 3 
336 1 321 1 228 1 244 2 198 1 7 1 298 2 110 1 300 1 20 1 277 1 281 1 
336 1 228 1 174 2 244 3 198 1 7 1 298 3 161 2 20 1 31 1 249 1 281 1 
302 2 261 1 1 1 281 2 
298 1 336 1 20 1 228 1 337 1 244 1 
7 1 298 2 336 1 20 1 277 1 228 1 153 1 244 2 281 1 198 1 
257 1 
7 1 298 1 336 1 20 1 228 1 244 1 281 1 198 1 
7 1 298 3 336 1 20 1 277 1 228 1 174 1 153 1 244 3 281 1 198 1 
315 1 13 1 142 1 281 1 
281 1 198 1 

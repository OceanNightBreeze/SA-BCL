#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
91 6 124 2 350 5 213 1 353 1 29 9 171 2 259 2 147 1 10 3 359 2 263 1 78 2 221 4 15 1 312 1 367 1 366 1 333 9 243 1 59 2 62 1 273 1 317 1 42 2 276 1 140 1 346 1 
91 6 124 2 350 5 213 1 353 1 29 9 171 2 259 2 147 1 10 3 263 1 359 2 78 2 221 4 15 1 312 1 367 1 366 1 333 9 243 1 59 2 62 1 273 1 317 1 42 2 276 1 140 1 346 1 
91 7 124 2 350 6 213 1 353 1 29 10 171 2 259 2 147 1 10 4 263 1 359 2 78 2 221 5 15 1 312 1 367 1 366 1 333 10 243 1 59 2 62 1 273 1 317 1 42 2 276 1 140 1 346 1 
91 4 124 2 350 4 213 1 353 1 29 7 171 2 259 2 147 1 10 2 263 1 359 1 78 2 221 3 15 1 312 1 367 1 366 1 333 7 243 1 59 2 62 1 273 1 317 1 42 2 276 1 346 1 
91 3 367 1 333 4 350 3 124 1 213 1 59 1 353 1 29 4 259 1 62 1 42 1 10 1 359 2 140 1 78 1 346 1 221 2 
350 1 367 1 333 2 59 1 353 1 146 1 29 2 171 1 259 1 62 1 147 1 42 1 317 1 188 1 78 1 379 1 
91 1 367 1 333 3 350 2 59 2 353 1 29 3 171 1 62 1 42 2 10 1 263 1 221 1 
91 7 350 5 124 1 213 1 353 1 29 9 171 1 259 1 10 3 263 1 359 2 78 1 221 4 15 1 367 1 333 9 59 2 18 1 62 1 86 1 273 1 42 2 140 1 346 1 
91 7 350 5 124 1 213 1 353 1 29 9 171 1 259 1 10 3 263 1 359 2 78 1 221 4 15 1 367 1 333 9 59 2 18 1 62 1 86 1 273 1 42 2 140 1 346 1 
306 1 150 1 211 1 
306 1 257 1 292 2 
34 2 94 2 224 2 368 2 95 1 22 1 324 2 251 2 
279 1 72 1 26 1 193 1 94 2 3 1 28 2 125 1 95 1 322 1 324 2 8 1 217 1 305 2 325 1 136 1 363 1 57 2 110 2 111 1 34 3 156 1 182 1 224 3 368 2 60 1 246 1 37 1 205 1 229 2 118 1 230 1 374 1 22 1 164 1 233 1 251 2 
77 1 34 1 94 1 224 1 368 1 103 1 95 1 324 1 371 1 251 1 
34 1 224 1 85 1 256 1 157 1 324 1 336 1 77 1 306 1 326 1 133 1 207 1 150 1 298 1 
34 1 94 1 368 1 224 1 85 1 256 1 157 1 324 1 336 1 77 1 306 1 207 2 150 1 298 2 251 1 
31 1 207 1 328 1 71 1 298 1 
31 1 306 1 207 2 150 1 244 1 328 1 294 1 298 2 
31 1 207 1 298 1 
364 1 34 1 94 1 368 1 224 1 95 1 324 1 371 1 77 1 207 1 103 1 328 1 298 1 251 1 
306 1 
31 1 306 1 207 2 150 1 6 1 328 1 294 1 298 2 
313 1 272 1 370 1 131 1 294 1 316 1 44 1 43 2 295 2 31 2 306 1 237 1 207 5 264 1 121 1 150 1 105 2 328 2 298 5 
22 1 211 1 
34 2 94 1 368 1 224 2 376 1 22 2 324 2 251 1 123 1 
47 1 288 1 
72 1 111 1 34 1 3 1 224 1 28 1 60 1 37 1 305 1 230 1 285 1 22 1 164 1 233 1 363 1 110 1 
111 1 72 1 34 2 94 1 3 1 224 2 28 1 60 1 37 1 324 1 187 1 230 1 305 1 47 1 164 1 233 1 363 1 330 1 251 1 110 1 
34 3 94 3 368 1 224 3 22 1 324 3 251 3 187 1 
77 1 34 1 94 1 224 1 324 1 371 1 251 1 
77 1 34 1 94 1 224 1 368 1 376 1 324 1 251 1 123 1 
72 1 279 1 26 1 193 1 94 3 3 1 28 1 125 1 256 1 95 1 322 1 324 3 8 1 217 1 305 1 325 1 77 1 266 1 363 1 57 1 330 1 110 1 111 1 34 4 156 1 368 2 224 4 85 1 157 1 60 1 37 1 336 1 229 2 187 1 118 1 230 1 207 1 22 1 164 1 233 1 278 1 123 1 251 3 298 1 
34 2 133 1 94 1 224 2 22 1 5 1 324 2 251 1 187 1 
34 3 94 3 2 1 368 1 224 3 85 1 256 1 157 1 324 3 336 1 187 2 77 1 306 1 207 1 278 1 123 1 298 1 330 1 251 3 
34 2 94 2 368 1 224 2 129 1 324 2 187 1 47 1 123 1 251 2 
72 1 111 1 34 1 3 1 224 1 28 1 60 1 37 1 305 1 230 1 22 1 164 1 233 1 363 1 110 1 
111 1 34 1 3 1 224 1 28 1 60 1 37 1 196 1 305 1 230 1 22 1 164 1 268 1 363 1 110 1 
26 2 193 1 253 1 169 1 352 1 125 1 322 1 129 2 8 1 217 1 325 1 100 1 13 1 106 1 109 1 57 4 288 2 179 1 201 1 205 2 228 1 229 2 47 2 347 1 
77 1 34 1 94 1 85 1 224 1 324 1 251 1 52 1 
34 5 94 4 301 1 224 5 368 1 5 1 324 5 187 2 133 1 22 1 165 1 251 4 123 1 330 1 
77 1 34 2 94 2 224 2 324 2 371 1 251 2 52 1 
21 1 239 1 
21 1 239 1 
340 1 378 1 
340 1 378 1 
340 1 378 1 
358 1 21 1 239 1 
358 1 21 1 239 1 
375 1 21 1 239 1 
340 1 175 1 21 2 69 1 239 2 378 1 
358 1 21 1 239 1 
144 1 21 1 239 1 
144 1 21 1 239 1 
144 1 21 1 239 1 
212 1 311 2 1 2 270 2 185 1 17 1 128 1 338 2 339 1 306 1 207 2 265 1 21 2 69 1 239 2 191 1 219 2 298 2 23 3 
1 1 94 2 254 1 97 1 324 2 104 1 239 1 219 1 311 1 34 2 155 1 83 1 224 2 270 1 17 1 207 1 163 1 375 1 21 1 22 1 251 2 23 1 298 1 299 1 
124 1 78 1 259 1 
78 1 379 1 259 1 
63 1 124 2 249 1 78 3 323 1 379 1 
63 1 356 1 124 1 78 2 323 1 379 1 
63 1 124 1 78 2 323 2 379 1 
254 1 352 1 96 1 257 1 194 2 97 1 195 2 131 2 216 1 31 1 99 1 306 2 284 1 150 1 105 1 135 1 328 4 109 1 269 1 179 1 83 1 313 1 314 2 292 3 294 1 43 1 295 1 207 5 121 3 189 1 347 1 298 5 
352 3 96 2 257 3 194 6 97 4 195 6 174 1 131 6 355 1 31 6 99 3 306 5 360 1 150 1 135 1 105 2 328 7 32 1 109 3 223 5 179 3 313 1 158 1 292 9 294 1 44 1 43 2 295 2 207 9 121 8 189 2 347 3 71 5 298 9 49 1 
352 1 96 1 257 2 97 1 194 2 195 2 131 2 306 3 99 1 284 1 150 1 105 1 328 2 109 1 269 1 179 1 314 1 292 4 43 1 44 1 295 1 207 3 121 3 189 1 347 1 298 3 
352 2 96 1 257 3 194 4 97 2 195 4 131 4 355 1 306 4 99 2 360 1 284 1 150 1 105 1 328 3 32 1 109 2 269 1 179 2 314 2 292 7 43 1 44 1 295 1 207 4 121 5 189 1 347 2 298 4 
37 1 211 1 132 1 
327 1 37 1 
61 1 
60 1 37 1 
230 1 365 1 11 1 60 1 37 3 132 2 
230 1 60 1 37 1 
92 1 37 1 
112 1 26 3 203 1 184 1 205 4 228 2 218 1 238 1 100 3 149 1 54 1 55 1 197 1 109 1 57 7 58 2 179 1 
112 1 26 3 203 1 184 1 205 4 228 2 218 1 238 1 100 3 149 1 54 1 55 1 197 1 109 1 57 7 58 2 179 1 
112 1 26 3 203 1 184 1 354 1 205 4 228 2 218 1 238 1 100 3 149 1 54 1 55 1 197 1 109 1 57 7 58 2 179 1 
26 15 193 1 50 1 192 1 255 1 352 3 322 1 173 1 8 1 325 1 218 2 238 1 99 3 149 1 100 10 54 2 267 1 55 1 197 5 57 31 109 4 58 3 179 4 112 1 203 2 184 2 227 4 205 16 228 5 229 2 160 3 250 1 321 1 347 3 
26 4 193 2 255 1 322 2 8 2 325 2 218 1 238 1 100 4 54 1 55 1 197 1 109 1 57 9 58 2 179 1 112 1 203 1 289 1 184 1 205 5 228 3 229 4 68 1 
91 1 350 1 124 1 28 1 281 1 353 1 29 2 259 1 171 1 215 1 305 1 53 1 307 1 78 2 362 1 287 1 363 1 110 1 111 1 367 1 333 2 59 1 117 1 62 1 42 1 275 1 319 1 296 1 249 1 379 1 
91 2 350 1 124 1 28 1 29 3 259 1 171 1 215 1 305 1 53 1 307 1 102 1 101 1 78 2 362 1 287 1 363 1 110 1 111 1 367 1 333 3 59 1 117 1 62 1 42 1 275 1 249 1 319 1 20 1 379 1 
91 2 350 1 124 1 28 1 29 2 171 1 259 1 215 1 305 1 307 1 102 1 78 2 362 1 287 1 363 1 110 1 111 1 367 1 333 2 117 1 62 1 319 1 249 1 20 1 379 1 
111 1 93 1 333 1 27 1 351 1 59 1 28 1 60 1 37 1 29 1 235 1 171 2 117 2 372 1 42 1 305 1 101 1 307 2 319 2 151 1 164 1 363 1 110 1 
124 1 28 1 281 1 353 1 29 1 259 1 171 1 215 1 305 1 53 1 307 1 102 1 78 2 362 1 287 1 363 1 110 1 111 1 333 1 59 1 117 1 42 1 275 1 319 1 249 1 379 1 
130 1 
234 1 98 2 51 2 324 1 326 1 12 2 150 1 105 1 110 2 111 1 332 1 157 1 60 1 292 2 336 1 294 3 337 1 295 1 65 2 64 1 207 5 121 2 345 1 164 2 298 5 27 1 28 2 256 1 257 2 126 1 303 2 30 4 131 2 304 1 305 2 31 6 77 1 306 2 133 1 361 2 220 2 310 1 363 1 34 1 180 1 313 1 224 1 85 1 37 1 372 1 138 1 43 1 48 1 189 1 380 1 
332 1 180 1 34 1 234 1 85 1 224 1 256 1 157 1 6 1 51 1 324 1 30 2 336 1 294 1 138 1 31 2 77 1 326 1 133 1 207 3 310 1 298 3 
234 1 256 1 6 1 324 1 30 3 31 1 77 1 133 1 326 1 306 1 150 1 310 1 332 1 34 1 180 1 224 1 85 1 157 1 336 1 294 1 138 1 65 1 207 3 298 3 
332 1 180 1 34 1 234 1 85 1 224 1 256 1 157 1 6 1 98 1 51 1 324 1 30 3 336 1 294 1 138 1 31 2 77 1 306 1 65 1 326 1 133 1 207 3 150 1 310 1 298 3 
234 1 6 1 98 4 51 4 324 1 326 1 12 2 150 5 105 1 329 1 332 1 242 1 157 1 336 1 294 3 295 1 65 4 207 5 343 1 342 1 121 1 345 1 298 5 256 1 257 2 303 2 30 6 304 1 131 1 77 1 31 7 133 1 306 5 361 2 310 1 220 2 180 1 34 1 313 1 85 1 224 1 138 1 43 1 45 1 
234 1 98 2 324 1 51 2 326 1 12 2 150 1 105 1 332 1 157 1 336 1 292 2 294 2 295 1 65 2 207 4 121 1 345 1 298 4 256 1 257 2 303 2 126 1 30 4 304 1 131 1 77 1 31 4 133 1 306 2 361 2 310 1 220 2 180 1 34 1 313 1 85 1 224 1 138 1 43 1 
234 1 256 1 257 2 98 2 303 2 51 2 324 1 30 4 131 1 304 1 31 4 77 1 306 1 133 1 326 1 12 2 150 1 105 1 361 2 220 2 310 1 329 1 332 1 34 1 180 1 313 1 224 1 85 1 157 1 336 1 294 2 138 1 43 1 295 1 65 2 207 4 343 1 342 1 121 1 345 1 298 4 
234 1 256 1 257 2 98 2 303 2 51 2 324 1 30 4 131 1 304 1 31 4 77 1 306 1 133 1 326 1 12 2 150 1 105 1 361 2 220 2 310 1 329 1 332 1 34 1 180 1 313 1 224 1 85 1 157 1 336 1 294 2 138 1 43 1 295 1 65 2 207 4 343 1 342 1 121 1 345 1 298 4 
234 1 256 1 98 2 51 2 324 1 30 4 236 2 131 1 31 4 77 1 306 1 133 1 326 1 12 2 150 1 105 1 361 2 310 1 329 1 198 1 332 1 34 1 180 1 313 1 224 1 85 1 225 1 226 1 157 1 36 2 292 2 336 1 294 2 138 1 43 1 295 1 65 2 207 4 121 1 345 1 298 4 
234 1 256 1 257 2 303 2 98 3 324 1 51 3 30 5 131 1 304 1 77 1 31 5 306 1 133 1 326 1 12 2 150 1 105 1 361 2 220 2 310 1 329 1 332 1 34 1 180 1 313 1 224 1 85 1 157 1 336 1 294 2 138 1 43 1 295 1 45 1 65 3 207 4 342 1 343 1 121 1 345 1 298 4 
234 1 256 1 257 2 303 2 98 3 324 1 51 3 30 5 131 1 304 1 77 1 31 5 306 1 133 1 326 1 12 2 150 1 105 1 361 2 220 2 310 1 329 1 332 1 34 1 180 1 313 1 224 1 85 1 157 1 336 1 294 2 138 1 43 1 295 1 45 1 65 3 207 4 342 1 343 1 121 1 345 1 298 4 
234 1 98 2 324 1 51 2 236 2 326 1 12 2 150 1 105 1 198 1 332 1 157 1 336 1 292 2 294 2 295 1 65 2 207 4 121 1 345 1 298 4 256 1 126 1 30 4 131 1 77 1 31 4 133 1 306 1 361 2 310 1 180 1 34 1 313 1 85 1 224 1 36 2 138 1 43 1 
26 3 193 1 125 1 322 1 129 1 8 1 217 1 325 1 238 1 100 2 13 1 54 1 55 1 57 6 109 1 58 1 288 1 179 1 112 1 203 1 205 3 228 2 229 2 47 1 22 2 211 1 
26 5 193 2 125 1 352 1 322 2 129 3 9 1 8 2 217 2 77 1 325 2 99 2 100 2 267 1 197 1 57 11 109 1 288 8 179 2 153 1 227 2 205 6 186 1 291 1 228 1 229 4 160 2 118 1 120 1 47 8 22 1 347 2 348 1 
72 1 252 1 26 1 193 1 94 1 3 1 28 1 125 1 322 1 129 1 324 1 8 1 305 1 217 1 325 1 285 1 363 1 57 2 110 1 330 1 111 1 34 2 224 2 60 1 37 1 246 1 205 1 19 1 187 1 229 2 40 1 230 1 118 1 22 1 164 1 233 1 348 1 251 1 
72 1 279 1 90 1 73 1 26 1 193 2 94 1 3 1 28 1 125 2 322 2 324 1 8 2 217 2 305 1 325 2 363 1 57 1 330 1 110 1 111 1 34 2 290 1 224 2 60 1 37 1 187 1 229 4 230 1 118 1 164 1 297 1 233 1 348 1 251 1 
26 1 193 2 94 1 27 1 4 1 28 8 125 2 322 2 282 1 127 1 324 1 8 2 305 8 217 2 325 2 102 1 13 1 363 2 57 2 110 7 33 1 111 2 34 1 224 1 60 2 37 3 246 1 38 1 159 1 205 1 248 1 187 1 229 4 372 1 118 1 374 2 296 1 164 2 251 1 
26 2 193 1 94 1 125 1 352 1 322 1 129 1 324 1 8 1 217 1 325 1 99 1 100 1 240 1 57 3 109 1 288 1 179 1 34 1 368 1 224 1 205 1 228 1 229 2 47 1 347 1 123 1 348 1 251 1 
193 1 125 1 322 1 129 1 205 2 229 2 8 1 217 1 325 1 100 1 13 1 47 1 197 1 57 2 347 1 288 1 201 1 179 1 
26 2 193 1 125 1 352 1 322 1 129 1 228 1 229 2 8 1 217 1 325 1 100 1 13 1 47 1 106 1 57 2 109 1 288 1 
26 2 193 1 125 1 352 1 322 1 129 2 8 1 217 1 325 1 99 1 100 2 13 1 197 1 57 4 109 1 288 2 179 1 205 2 228 1 229 2 47 2 347 1 
193 1 125 1 322 1 129 1 205 2 229 2 8 1 217 1 325 1 100 1 47 1 197 1 57 2 347 1 288 1 33 1 201 1 179 1 
26 2 193 1 125 1 352 1 322 1 129 1 228 1 229 2 8 1 217 1 325 1 100 1 47 1 106 1 57 2 109 1 288 1 33 1 
26 2 193 1 125 1 352 1 322 1 129 2 8 1 217 1 325 1 99 1 100 1 57 4 109 1 33 1 288 2 179 1 205 2 228 1 229 2 47 2 347 1 
26 2 193 1 352 1 125 1 322 1 129 2 205 2 228 1 229 2 8 1 217 1 325 1 99 1 100 2 47 2 197 1 109 1 347 1 57 4 288 2 179 1 
72 1 279 1 26 1 193 1 3 1 28 1 125 1 322 1 8 1 305 1 217 1 325 1 363 1 57 2 110 1 111 1 34 1 224 1 60 1 246 1 37 1 205 1 229 2 230 1 118 1 22 1 164 1 233 1 
26 1 193 1 3 1 28 1 125 1 322 1 8 1 196 1 305 1 217 1 325 1 268 1 363 1 57 2 110 1 111 1 34 1 224 1 60 1 246 1 37 1 205 1 271 1 229 2 230 1 118 1 22 1 164 1 
26 2 193 1 125 1 352 1 322 1 129 2 8 1 217 1 325 1 99 1 100 2 197 1 57 4 109 1 288 2 179 1 205 2 228 1 229 2 47 2 347 1 348 1 
72 1 279 1 26 2 73 1 193 1 3 1 28 1 352 1 125 1 322 1 129 2 8 1 305 1 217 1 325 1 99 1 100 2 197 1 363 1 109 1 57 4 288 2 110 1 179 1 111 1 34 1 224 1 60 1 37 1 205 2 228 1 229 2 230 1 296 1 47 2 233 1 347 1 
26 1 193 1 94 1 352 1 125 1 74 1 322 1 324 1 129 1 8 1 217 1 325 1 99 1 100 1 197 1 109 1 57 3 288 1 179 1 34 1 368 1 224 1 205 2 229 2 47 1 347 1 123 1 348 1 251 1 
26 10 50 1 193 2 352 3 322 2 8 2 260 1 325 2 99 3 100 6 176 1 286 1 267 1 79 1 197 3 57 19 109 3 179 3 114 1 335 1 227 2 205 9 228 3 229 4 160 1 231 1 119 2 68 1 141 2 347 3 
26 12 193 3 50 2 255 2 352 2 322 3 258 1 8 3 260 2 325 3 99 3 100 4 176 2 286 1 79 1 197 2 109 2 57 26 179 3 114 1 315 1 227 2 205 14 228 2 229 6 160 2 119 1 139 1 209 1 344 1 68 1 141 4 347 3 300 1 
26 21 50 3 193 3 255 1 352 4 322 3 258 1 8 3 260 2 325 3 238 1 99 4 100 8 54 1 176 1 286 1 267 1 79 1 55 1 197 4 57 41 109 5 58 1 179 5 112 1 203 1 114 1 335 1 315 1 227 4 205 20 228 4 229 6 160 3 119 1 341 1 139 1 344 1 209 1 68 1 141 4 347 4 300 1 
26 18 50 3 193 4 255 2 352 3 322 4 258 1 8 4 260 2 325 4 238 1 99 4 100 7 54 1 176 1 286 1 267 1 79 1 55 1 197 3 57 38 109 4 58 1 179 5 112 1 203 1 114 1 335 1 315 1 227 4 205 20 228 4 229 8 160 3 119 1 341 1 139 1 344 1 209 1 68 1 141 4 347 4 300 1 
26 25 50 2 193 2 255 1 352 7 322 2 258 1 8 2 260 1 325 2 238 1 99 7 100 14 54 1 176 1 286 1 267 2 79 1 55 1 197 7 57 52 109 8 58 1 179 8 112 1 203 1 114 1 315 1 227 4 205 27 291 2 228 7 229 4 160 4 119 1 139 1 344 1 209 1 68 1 141 4 347 7 300 1 
1 1 311 1 270 1 87 1 21 1 69 1 239 1 185 1 219 1 128 1 
155 1 375 1 
143 1 1 1 311 1 82 1 270 1 21 1 239 1 219 1 172 1 
212 1 311 1 1 1 270 1 185 1 17 1 128 1 338 1 339 1 306 1 207 1 265 1 21 1 69 1 239 1 219 1 298 1 23 2 
212 1 311 1 1 1 270 1 185 1 17 1 128 1 338 1 339 1 306 1 207 1 265 1 21 1 69 1 239 1 219 1 298 1 23 2 
212 1 311 1 1 1 270 1 185 1 17 1 128 1 338 1 339 1 306 1 207 1 265 1 21 1 69 1 239 1 219 1 298 1 23 2 
358 1 175 1 122 1 
358 1 175 1 122 1 
241 1 144 1 
241 1 175 1 144 1 
104 1 299 1 
1 1 280 1 254 1 94 2 97 1 324 2 265 1 104 1 239 1 328 1 219 1 34 2 311 1 155 1 83 1 224 2 270 1 338 1 207 1 163 1 375 1 21 1 22 1 298 1 23 1 299 1 251 2 
358 1 122 1 
241 1 175 1 144 1 
26 1 193 1 28 2 125 1 322 1 324 2 8 1 305 2 217 1 357 1 325 1 363 1 152 1 199 1 57 2 110 2 111 1 34 2 113 1 224 2 60 1 37 1 246 1 38 1 159 1 205 1 229 2 118 1 374 2 67 1 348 1 
111 1 181 1 124 1 28 2 259 1 117 1 214 1 215 1 305 2 102 1 275 1 249 1 296 1 232 1 78 2 379 1 363 1 287 1 110 2 
111 1 124 1 28 1 259 1 117 1 206 1 215 1 305 1 102 1 275 1 249 1 232 1 78 2 379 1 287 1 363 1 110 1 
111 1 181 1 93 1 27 1 28 1 60 1 37 1 117 1 372 1 305 1 164 1 14 1 363 1 110 1 
111 1 181 1 124 1 28 1 259 1 117 1 214 1 215 1 305 1 102 1 275 1 249 1 232 1 78 2 379 1 363 1 287 1 110 1 
39 1 
306 1 237 1 264 1 121 1 150 1 211 1 131 1 
257 1 303 1 131 1 304 1 31 1 306 2 150 1 105 1 220 1 313 1 292 1 294 1 43 1 295 1 207 1 121 1 298 1 
92 2 194 6 195 6 237 1 99 2 150 2 105 4 327 3 108 2 200 1 109 2 110 3 331 2 111 3 115 2 116 2 60 3 292 12 294 3 247 2 295 4 207 5 161 1 296 1 121 9 162 2 164 1 347 2 298 5 28 3 256 2 352 2 75 2 257 6 131 8 132 2 305 3 31 5 306 8 264 1 134 1 177 2 363 4 179 2 365 1 313 4 37 10 41 1 230 3 43 4 377 1 189 2 88 2 380 1 
50 1 352 2 75 1 194 5 257 3 258 1 195 5 131 5 31 1 306 5 99 2 150 2 105 2 109 2 179 2 84 1 313 2 227 1 292 6 294 1 247 2 160 1 43 2 295 2 207 1 139 1 209 1 344 1 121 8 189 1 70 1 347 2 380 1 298 1 300 1 
94 1 95 1 75 1 324 1 131 2 77 1 238 1 54 1 103 1 105 1 109 1 179 2 364 1 34 1 203 1 313 1 224 1 368 1 371 1 247 2 43 1 295 1 207 1 342 1 121 2 142 1 298 1 251 1 
313 1 131 1 43 1 295 1 237 1 306 1 264 1 150 1 121 1 105 1 
352 2 116 1 75 1 194 5 257 5 195 5 292 10 131 5 247 2 99 2 306 5 121 5 347 2 109 2 179 2 
31 1 306 1 207 1 150 1 298 1 294 1 
27 1 28 4 131 2 305 4 31 4 308 1 105 2 56 1 363 1 110 4 111 1 313 1 60 1 37 1 294 2 372 1 44 1 337 1 43 2 295 2 207 3 161 2 121 2 48 1 377 1 164 2 189 2 380 2 298 3 
279 1 72 1 26 1 193 1 94 2 3 1 28 1 125 1 95 1 322 1 324 2 8 1 305 1 217 1 325 1 363 1 57 1 110 1 111 1 34 3 156 1 224 3 368 2 60 1 37 1 229 2 118 1 230 1 22 1 164 1 233 1 251 2 
313 1 194 2 257 2 292 4 195 2 131 2 43 1 295 1 306 4 121 1 150 2 105 1 189 1 58 1 380 1 
1 1 219 1 7 1 
1 1 219 1 7 1 
1 1 35 1 219 1 128 1 299 1 
1 1 219 1 7 1 
1 1 302 1 219 1 
1 1 302 1 219 1 
1 1 302 1 219 1 
1 1 219 1 
21 1 239 1 
112 1 26 4 193 2 203 1 255 1 322 2 205 4 228 2 229 4 8 2 325 2 238 1 100 3 54 1 55 1 197 1 109 1 57 8 58 1 179 1 
112 1 26 3 238 1 203 1 100 2 54 1 55 1 211 1 205 3 109 1 57 6 228 2 58 1 179 1 
26 2 193 1 352 1 322 1 205 2 228 1 229 2 8 1 325 1 99 1 100 2 208 1 197 1 109 1 347 1 57 4 179 1 
26 4 50 1 352 1 227 2 205 3 228 1 160 1 99 1 100 2 267 1 197 1 109 1 57 7 347 1 179 1 
26 12 193 2 255 2 352 2 322 2 8 2 325 2 238 1 99 2 100 9 54 2 267 1 55 1 197 4 57 23 109 3 58 1 179 3 80 1 112 1 203 2 227 2 205 11 228 5 291 1 160 2 229 4 120 1 347 2 
26 1 227 1 57 1 
205 1 57 1 160 1 
26 3 193 1 352 1 116 1 322 1 205 3 228 2 8 1 229 2 325 1 99 1 100 3 208 1 197 1 57 6 347 1 109 1 179 1 
26 6 50 1 193 1 352 2 322 1 258 1 8 1 325 1 99 2 100 2 197 1 57 12 109 2 179 2 227 1 205 6 228 1 160 1 229 2 139 1 209 1 344 1 68 1 347 2 300 1 
26 3 203 1 205 3 228 1 238 1 100 2 54 1 197 1 57 6 109 1 179 1 
112 1 26 2 193 1 203 1 255 1 322 1 205 1 228 1 229 2 8 1 325 1 100 2 54 1 55 1 197 1 57 3 80 1 
26 5 193 1 203 2 322 1 205 5 228 3 8 1 229 2 325 1 238 1 100 5 54 2 68 1 142 1 197 2 57 10 109 2 179 2 
193 1 325 1 100 1 68 1 322 1 197 1 205 2 57 2 347 1 179 1 8 1 229 2 
26 2 193 1 352 1 322 1 205 2 228 1 229 2 8 1 325 1 99 1 100 2 68 1 197 1 109 1 347 1 57 4 179 1 
26 2 193 3 203 1 255 1 335 1 322 3 205 1 228 1 229 6 8 3 325 3 100 2 54 1 68 1 197 1 57 3 80 1 
26 18 192 1 50 1 193 5 255 2 352 3 322 5 173 1 8 5 325 5 238 2 99 3 100 12 54 3 267 1 55 1 197 5 57 34 109 5 58 1 80 1 179 5 112 1 203 3 335 1 227 4 205 16 228 7 229 10 160 3 208 1 68 1 321 1 347 3 
26 4 50 1 193 1 322 1 8 1 325 1 238 1 100 2 54 1 55 1 109 1 57 8 58 1 179 1 112 1 203 1 227 1 205 4 228 2 160 1 229 2 209 1 68 1 
26 5 50 1 193 2 322 2 8 2 325 2 238 1 99 1 100 3 54 1 267 1 55 1 197 1 109 1 57 11 58 1 179 2 112 1 203 1 227 2 205 6 228 2 229 4 160 1 208 1 209 1 68 1 347 1 
26 10 50 1 193 3 255 1 352 2 322 3 258 1 8 3 325 3 238 1 99 2 100 4 54 1 55 1 197 1 57 19 109 3 58 1 179 3 112 1 203 1 227 1 205 9 228 3 160 1 229 6 208 1 139 1 209 1 344 1 68 1 347 2 300 1 
26 7 50 1 193 3 255 1 352 1 322 3 258 1 8 3 325 3 238 1 99 2 100 5 54 1 55 1 197 2 57 17 109 2 58 1 179 3 112 1 203 1 227 1 205 10 228 3 160 1 229 6 208 1 139 1 209 1 344 1 68 1 347 2 300 1 
26 4 50 1 193 1 322 1 8 1 325 1 238 1 100 2 54 1 55 1 109 1 57 8 58 1 179 1 112 1 203 1 227 1 205 4 228 2 160 1 229 2 209 1 68 1 
26 6 50 1 193 1 352 2 322 1 258 1 8 1 325 1 99 2 100 2 197 1 57 12 109 2 179 2 227 1 205 6 228 1 160 1 229 2 139 1 209 1 344 1 68 1 347 2 300 1 
26 8 50 1 193 4 255 2 352 1 322 4 258 1 8 4 325 4 238 1 99 2 100 5 54 1 55 1 197 2 57 18 109 2 58 1 179 3 112 1 203 1 227 1 205 10 228 3 229 8 160 1 208 1 139 1 209 1 344 1 68 1 347 2 300 1 
26 7 50 1 193 4 255 2 352 2 322 4 258 1 8 4 325 4 99 3 100 6 197 3 57 16 109 2 179 3 335 1 227 1 205 9 228 3 229 8 160 1 139 1 209 1 344 1 68 1 347 3 300 1 
112 2 26 4 203 3 205 3 228 3 238 1 100 6 54 3 55 1 197 3 109 1 57 7 179 1 
26 8 50 1 193 4 255 2 352 1 322 4 258 1 8 4 325 4 238 1 99 2 100 4 54 1 55 1 197 1 57 18 109 2 58 1 179 3 112 1 203 1 335 1 227 1 205 10 228 3 229 8 160 1 139 1 209 1 344 1 68 1 347 2 300 1 
34 1 133 1 224 1 22 1 5 1 324 1 202 1 
34 1 224 1 5 1 204 1 324 1 133 1 66 1 309 1 22 1 89 1 222 1 202 1 
111 1 372 1 305 1 27 1 28 1 164 1 60 1 37 1 211 1 363 1 110 1 
111 1 34 2 94 1 3 1 224 2 28 1 60 1 37 1 324 1 187 1 230 1 305 1 22 1 164 1 233 1 363 1 251 1 110 1 
111 1 92 1 34 2 94 1 3 1 85 1 224 2 28 1 157 1 60 2 37 3 324 2 187 1 230 2 305 1 77 1 161 1 162 1 22 1 233 1 363 1 251 2 110 1 
111 1 92 1 34 2 16 1 94 1 3 1 85 1 224 2 28 2 157 1 60 2 37 3 324 2 187 1 196 1 230 2 305 2 77 1 161 1 162 1 22 1 363 1 251 2 110 2 
25 1 94 1 28 1 256 1 95 1 324 1 132 1 305 1 77 1 31 1 306 1 103 1 150 1 327 1 110 1 364 1 34 1 224 1 368 1 37 2 371 1 207 2 161 1 298 2 251 1 
111 1 92 1 16 1 28 3 256 1 115 1 60 1 37 4 132 1 230 1 305 3 31 1 306 1 207 2 161 1 150 1 162 1 164 1 327 1 363 1 298 2 110 3 
111 1 305 1 28 1 4 1 363 1 110 1 
111 2 365 1 4 1 28 7 334 1 60 2 37 3 282 1 38 1 127 1 248 1 305 7 230 1 262 1 374 1 102 1 296 1 164 2 178 1 363 3 110 6 
279 1 90 1 193 2 94 1 3 1 322 2 324 1 8 2 325 2 238 1 100 2 54 1 55 1 57 6 109 1 110 1 58 1 288 1 111 1 112 1 203 1 60 1 205 3 296 1 22 2 251 1 348 1 72 1 73 1 26 3 28 1 125 2 129 1 305 1 357 1 217 2 363 1 179 1 34 2 224 2 37 1 228 2 229 4 187 1 230 1 47 1 233 1 
28 1 256 1 131 1 132 1 305 1 31 2 306 1 237 1 264 1 150 1 105 2 177 1 327 1 328 1 110 1 331 1 313 2 115 1 37 2 294 1 43 2 295 2 207 3 121 1 377 1 164 1 88 1 298 3 
111 1 365 1 4 1 28 2 60 1 37 2 132 1 41 1 305 2 230 1 296 1 363 2 110 2 
111 1 16 1 27 1 28 4 60 1 37 1 372 1 305 4 296 1 164 1 363 1 137 1 110 4 
111 1 81 1 0 1 28 2 60 1 37 1 305 2 148 1 230 1 262 1 161 1 178 1 363 2 110 2 
111 1 305 1 28 1 164 1 78 1 379 1 259 1 363 1 287 1 110 1 
111 1 305 2 102 1 28 2 296 1 67 1 60 1 37 1 363 1 38 1 110 2 
111 2 27 1 28 5 60 2 37 3 38 1 282 1 248 1 372 1 305 5 161 1 296 1 164 1 363 2 137 1 110 4 
111 2 27 1 28 5 60 2 37 3 38 1 282 1 372 1 305 5 161 1 296 1 164 1 107 1 363 2 137 1 110 4 
111 1 34 2 94 1 3 1 224 2 28 1 60 1 37 1 324 1 187 1 196 1 230 1 305 1 22 1 164 1 363 1 251 1 110 1 
111 1 365 1 28 1 334 1 60 1 37 1 305 1 230 1 262 1 161 1 178 1 363 2 110 1 
34 1 224 1 113 1 183 1 145 1 190 1 324 1 152 1 199 1 
210 1 145 1 293 1 
183 1 22 1 145 1 245 1 190 1 
85 1 183 2 256 1 157 1 145 1 245 2 336 1 293 1 261 1 77 1 306 1 207 2 150 1 210 1 22 1 328 1 190 2 278 1 298 2 
350 1 367 1 211 1 62 1 
42 1 350 1 367 1 333 1 59 1 29 1 62 1 
307 1 29 1 171 1 
154 1 167 1 350 1 333 3 168 1 367 1 59 1 353 1 29 3 62 1 147 2 42 1 
42 1 91 1 350 1 367 1 333 2 359 1 59 1 29 2 62 1 
42 1 124 1 350 1 333 1 213 1 59 1 353 1 78 1 221 1 29 1 259 1 
42 1 350 1 367 1 333 1 59 1 353 1 29 1 
42 1 367 2 333 1 59 1 353 1 29 1 62 1 
350 1 367 1 333 2 59 2 353 1 29 2 42 2 318 1 46 1 277 1 
91 2 367 1 333 3 350 2 59 1 353 1 29 3 62 1 273 1 42 1 10 1 221 1 15 1 
91 1 350 1 367 1 333 2 349 1 124 1 59 1 353 1 29 2 259 1 62 1 42 1 249 1 78 2 379 1 
91 2 367 1 333 4 350 2 59 2 353 1 29 4 62 1 42 2 10 1 359 1 140 1 221 1 
42 1 350 1 367 1 333 1 59 1 353 1 29 1 62 1 
166 1 154 1 91 2 168 1 367 2 333 4 350 3 59 1 29 4 62 2 147 1 42 1 10 1 221 1 
91 1 350 1 367 1 333 2 59 1 353 1 29 2 62 1 86 1 42 1 373 1 320 1 
154 1 350 1 333 3 168 2 367 1 59 1 353 1 29 3 62 1 147 2 42 1 274 1 
76 1 350 2 170 1 283 2 
42 1 333 1 59 1 369 1 353 1 29 1 
42 1 91 1 350 1 367 1 333 2 59 1 353 1 29 2 62 1 273 1 
24 1 
42 1 350 1 367 1 333 1 59 1 353 1 29 1 62 1 
42 1 91 1 350 1 367 1 333 3 59 1 353 1 29 3 62 1 273 1 147 1 
166 1 350 1 10 1 221 1 
350 1 367 1 

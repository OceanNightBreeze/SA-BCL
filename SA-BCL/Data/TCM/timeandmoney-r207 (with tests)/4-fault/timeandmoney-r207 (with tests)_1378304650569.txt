#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
300 1 253 1 110 1 27 2 19 1 362 3 102 1 213 3 309 1 274 2 191 1 134 1 55 2 
120 1 338 2 27 2 362 9 223 1 102 6 155 1 248 1 274 5 134 3 104 1 300 1 90 1 159 1 17 1 253 2 110 1 141 1 19 1 166 1 213 9 309 4 284 1 23 2 78 2 191 1 149 2 55 2 
120 1 338 2 27 2 362 9 223 1 102 6 155 1 248 1 274 5 134 3 104 1 300 1 90 1 159 1 17 1 253 2 110 1 141 1 19 1 166 1 213 9 309 4 284 1 23 2 78 2 191 1 149 2 55 2 
120 1 338 2 27 2 362 10 223 1 102 7 155 1 248 1 274 6 134 4 104 1 300 1 90 1 159 1 17 1 253 2 110 1 141 1 19 1 166 1 213 10 309 5 284 1 23 2 78 2 191 1 149 2 55 2 
120 1 338 2 27 2 362 7 223 1 102 4 248 1 274 4 134 2 104 1 300 1 90 1 159 1 17 1 253 2 110 1 141 1 19 1 166 1 213 7 309 3 284 1 23 2 78 2 191 1 149 1 55 2 
90 1 338 1 120 1 110 1 27 1 19 1 362 4 102 3 213 4 309 2 155 1 78 1 274 3 23 1 134 1 191 1 149 2 55 1 
338 1 253 1 305 1 110 1 27 1 291 1 141 1 19 1 362 2 166 1 225 1 213 2 274 1 78 1 191 1 55 1 
120 1 338 1 27 2 362 9 102 7 155 1 274 5 134 3 300 1 90 1 17 1 253 1 110 1 19 1 213 9 309 4 190 1 284 1 23 1 78 1 191 1 149 2 240 1 55 2 
120 1 338 1 27 2 362 9 102 7 155 1 274 5 134 3 300 1 90 1 17 1 253 1 110 1 19 1 213 9 309 4 190 1 284 1 23 1 78 1 191 1 149 2 240 1 55 2 
205 1 352 1 187 1 232 1 2 1 307 1 43 1 72 1 48 1 189 1 99 1 321 1 357 1 158 1 
51 1 
322 1 302 1 352 2 51 1 321 2 188 1 36 1 158 1 
322 2 352 5 234 1 20 1 188 1 197 1 168 1 178 1 74 2 75 1 51 1 12 2 239 1 217 1 349 1 321 5 59 2 36 1 158 2 
231 1 51 1 36 1 
160 1 51 1 133 2 
205 2 189 2 232 2 2 2 43 2 357 2 116 1 72 1 
117 2 340 1 194 1 267 1 2 2 245 1 124 1 177 2 28 1 365 1 198 1 8 1 9 1 34 1 203 1 136 1 204 1 38 2 205 3 138 2 108 1 208 1 66 1 232 2 70 1 43 2 212 1 45 1 72 1 189 2 263 1 22 2 331 1 357 3 116 1 335 1 100 1 
205 1 48 1 189 1 187 1 232 1 2 1 307 1 43 1 357 1 72 1 
205 1 0 1 352 1 232 1 307 1 71 1 308 1 49 1 97 1 84 1 51 1 321 1 357 1 36 1 
205 1 352 2 0 1 232 1 2 1 307 1 43 1 71 1 308 1 189 1 97 1 51 1 321 2 357 1 36 1 
322 1 352 1 229 1 321 1 158 1 
322 1 352 2 51 1 321 2 188 1 36 1 80 1 158 1 
322 1 352 1 321 1 
205 2 117 1 208 1 66 1 267 1 232 1 70 1 245 1 280 1 43 1 124 1 177 1 189 1 8 1 247 1 331 1 357 2 100 1 249 1 38 1 
205 2 91 1 232 2 2 1 43 1 224 1 189 1 357 2 116 2 
339 1 275 1 280 1 
205 1 117 1 208 1 66 1 267 1 245 1 70 1 124 1 177 1 8 1 238 1 331 1 357 1 116 1 100 1 38 1 
231 1 116 1 
205 3 189 3 247 1 232 3 2 1 43 3 357 3 116 1 
205 1 189 1 187 1 232 1 307 1 43 1 357 1 
205 1 189 1 91 1 232 1 2 1 307 1 43 1 357 1 224 1 
117 1 0 1 194 1 267 1 2 2 245 1 124 1 177 1 28 1 224 1 365 1 8 1 34 1 247 1 203 1 321 1 136 1 249 1 204 1 38 1 205 4 138 2 106 1 108 1 352 1 208 1 66 1 232 3 70 1 307 1 43 3 71 1 45 1 308 1 72 1 354 1 189 3 97 1 263 1 22 1 331 1 357 4 116 1 100 1 
205 2 7 1 189 1 84 1 247 1 232 2 43 1 357 2 116 1 
205 3 352 1 0 1 232 3 2 1 307 1 43 3 71 1 224 1 308 1 317 1 354 1 189 3 97 1 51 1 247 2 321 1 357 3 249 1 
205 2 339 1 232 2 2 1 43 2 280 1 224 1 189 2 247 1 357 2 
205 1 117 1 66 1 208 1 267 1 245 1 70 1 124 1 177 1 8 1 331 1 357 1 116 1 100 1 38 1 
205 1 117 1 161 1 208 1 267 1 142 1 245 1 70 1 124 1 177 1 8 1 331 1 357 1 116 1 38 1 
339 2 340 2 123 1 343 1 316 1 28 1 295 1 200 1 34 1 203 1 275 2 204 2 105 1 138 2 108 1 252 1 324 1 304 1 306 1 280 2 45 1 263 1 22 4 216 1 
205 1 88 1 189 1 0 1 232 1 307 1 43 1 357 1 
205 3 232 3 2 1 307 1 43 3 224 1 189 3 247 2 357 3 116 1 249 1 62 1 
88 1 205 2 189 2 187 1 232 2 307 1 43 2 357 2 
310 1 174 1 332 1 
219 1 228 1 154 1 174 2 332 2 125 1 
174 1 332 1 
174 1 332 1 
228 1 154 1 
228 1 154 1 
228 1 154 1 
174 1 332 1 353 1 
174 1 332 1 353 1 
174 1 332 1 353 1 
174 1 332 1 261 1 
174 1 332 1 261 1 
174 1 332 1 261 1 
337 1 219 1 352 2 196 1 254 1 174 2 289 2 255 1 18 2 270 2 145 1 214 3 94 1 6 2 51 1 332 2 321 2 336 1 378 2 
39 1 205 2 337 1 370 1 352 1 174 1 232 2 289 1 153 1 18 1 43 2 257 1 294 1 270 1 214 1 128 1 189 2 310 1 146 1 332 1 321 1 357 2 116 1 378 1 
47 1 338 2 23 1 291 1 264 2 
338 1 78 1 23 1 
338 1 78 1 291 1 
47 1 338 3 23 2 291 1 264 1 364 1 
47 1 301 1 338 2 23 1 291 1 264 1 
25 2 288 1 360 2 359 1 153 1 101 1 343 1 344 1 82 1 128 1 33 1 295 1 133 3 12 1 59 1 321 5 36 1 158 4 322 1 352 5 252 1 160 1 279 1 20 2 188 1 234 3 257 1 74 1 283 2 51 2 216 1 239 1 
288 2 360 6 359 2 343 3 344 3 126 1 273 1 295 3 297 1 133 9 229 5 12 2 321 9 59 2 61 1 36 1 158 7 322 6 276 1 352 9 252 3 160 3 279 1 256 5 164 1 20 6 257 4 188 1 234 8 168 1 74 2 283 6 51 5 216 3 239 1 
25 1 288 1 359 1 360 2 343 1 344 1 82 1 33 1 295 1 133 4 12 1 59 1 321 3 36 1 158 2 352 3 252 1 160 2 234 3 257 1 20 2 168 1 74 1 283 2 51 3 216 1 
25 2 288 1 360 4 359 1 343 2 344 2 126 1 82 1 33 1 273 1 295 2 133 7 12 1 59 1 321 4 61 1 36 1 158 3 352 4 252 2 160 3 234 5 257 2 20 4 168 1 74 1 283 4 51 4 216 2 
373 1 
367 1 208 1 231 1 
208 1 211 1 
208 1 267 1 
241 1 367 2 208 3 296 1 267 1 124 1 
208 1 267 1 124 1 
371 1 208 1 
105 3 121 1 64 1 351 1 252 1 340 4 68 1 209 1 210 1 163 1 343 1 316 2 259 1 46 1 235 1 11 2 22 7 204 3 
121 1 313 1 340 16 343 4 316 5 3 1 344 3 269 1 34 1 295 3 11 3 183 1 204 15 105 10 138 2 64 2 108 1 351 2 251 1 252 4 68 1 140 1 210 1 163 2 259 1 45 1 46 5 235 2 112 1 263 1 22 31 216 3 376 3 150 4 
340 5 343 1 316 3 34 2 11 2 204 4 105 4 138 4 108 2 351 1 64 1 252 1 68 1 210 1 163 1 258 1 45 2 259 1 46 1 235 1 112 1 263 2 215 1 22 9 
105 3 121 1 64 1 351 1 252 1 340 4 68 1 210 1 163 1 343 1 316 2 259 1 46 1 235 1 11 2 22 7 204 3 
105 3 121 1 64 1 351 1 252 1 340 4 68 1 210 1 163 1 343 1 316 2 259 1 46 1 235 1 11 2 22 7 204 3 
117 1 89 1 265 1 186 1 208 1 67 1 267 1 253 2 326 2 27 1 245 1 362 1 177 1 213 1 8 1 319 1 199 2 369 1 331 1 334 1 55 1 38 1 312 2 
117 1 338 2 58 1 27 1 291 1 245 1 362 1 177 1 364 1 8 1 199 1 38 1 107 1 139 1 253 1 92 1 326 1 327 1 328 1 213 1 96 1 78 1 23 1 191 1 55 1 312 1 
117 1 338 2 27 1 291 1 245 1 362 2 177 1 102 1 364 1 81 1 8 1 199 1 274 1 38 1 107 1 139 1 253 1 92 1 110 1 326 1 19 1 327 1 328 1 213 2 96 1 78 1 23 1 191 1 55 1 312 1 
117 1 338 2 222 1 58 1 27 1 291 1 245 1 362 3 177 1 364 1 102 2 8 1 199 1 274 1 38 1 107 1 186 1 253 1 92 1 110 1 326 1 19 1 327 1 328 1 213 3 96 1 78 1 23 1 55 1 312 1 
117 1 338 2 222 1 58 1 291 1 245 1 362 2 177 1 102 2 364 1 8 1 199 1 274 1 38 1 253 1 110 1 326 1 19 1 327 1 328 1 213 2 96 1 23 1 78 1 312 1 
65 1 
287 1 0 1 151 1 288 1 245 1 292 1 5 1 8 1 12 1 59 1 205 1 352 3 303 1 67 1 208 1 307 1 20 2 71 1 308 1 74 1 355 1 169 2 357 1 117 2 173 1 314 1 267 1 177 2 272 1 182 1 84 1 85 1 135 1 321 3 38 2 322 2 323 1 232 1 188 1 234 2 95 1 49 1 97 1 239 1 331 2 334 1 
322 2 205 1 302 1 0 1 352 3 303 1 232 1 175 1 307 1 188 1 71 1 308 1 95 1 272 1 49 1 97 1 182 1 84 1 169 2 85 1 321 3 357 1 
0 1 272 1 182 1 84 1 85 1 321 3 36 1 322 1 205 1 206 1 303 1 352 3 302 1 232 1 307 1 188 1 71 1 308 1 95 1 97 1 49 1 169 3 51 1 357 1 
0 1 175 1 272 1 182 1 84 1 85 1 156 1 321 3 36 1 205 1 322 2 206 1 302 1 303 1 352 3 232 1 307 1 188 1 71 1 308 1 95 1 97 1 49 1 169 3 51 1 357 1 
287 1 0 1 151 1 2 1 244 1 292 2 12 1 156 2 348 1 59 1 205 2 352 3 302 1 303 1 307 2 20 1 71 1 72 1 308 1 74 1 169 2 21 1 357 2 24 1 314 2 175 2 272 1 182 1 84 1 85 1 321 3 36 1 322 3 187 1 232 2 43 1 44 1 188 1 234 1 95 1 48 1 189 1 97 1 49 1 51 1 99 1 239 1 
287 1 0 1 151 1 314 1 292 1 272 1 182 1 84 1 85 1 12 1 135 1 59 1 321 2 205 1 303 1 352 2 232 1 307 1 20 1 234 1 71 1 308 1 95 1 49 1 74 1 97 1 169 2 239 1 357 1 
287 1 0 1 151 1 2 1 292 2 12 1 59 1 205 2 352 2 303 1 307 2 20 1 71 1 308 1 72 1 74 1 21 1 169 2 357 2 24 1 314 2 272 1 182 1 84 1 85 1 321 2 36 1 187 1 232 2 44 1 43 1 234 1 95 1 48 1 189 1 49 1 97 1 51 1 99 1 239 1 
287 1 0 1 151 1 2 1 292 2 12 1 59 1 205 2 352 2 303 1 307 2 20 1 71 1 308 1 72 1 74 1 21 1 169 2 357 2 24 1 314 2 272 1 182 1 84 1 85 1 321 2 36 1 187 1 232 2 44 1 43 1 234 1 95 1 48 1 189 1 49 1 97 1 51 1 99 1 239 1 
287 1 0 1 2 1 292 2 201 1 12 1 59 1 205 2 352 2 303 1 307 2 20 1 71 1 308 1 72 1 74 1 169 2 77 1 170 1 357 2 24 1 314 2 272 1 182 1 84 1 85 1 321 2 36 1 187 1 232 2 43 1 234 1 95 1 48 1 189 1 49 1 97 1 51 1 99 1 239 1 
287 1 0 1 151 1 2 1 244 1 292 2 12 1 156 1 59 1 205 2 206 1 352 2 303 1 307 2 20 1 71 1 72 1 308 1 74 1 21 1 169 3 357 2 24 1 314 2 175 1 272 1 182 1 84 1 85 1 321 2 36 1 322 1 187 1 232 2 43 1 44 1 234 1 95 1 48 1 189 1 49 1 97 1 51 1 99 1 239 1 
287 1 0 1 151 1 2 1 244 1 292 2 12 1 156 1 59 1 205 2 206 1 352 2 303 1 307 2 20 1 71 1 72 1 308 1 74 1 21 1 169 3 357 2 24 1 314 2 175 1 272 1 182 1 84 1 85 1 321 2 36 1 322 1 187 1 232 2 43 1 44 1 234 1 95 1 48 1 189 1 49 1 97 1 51 1 99 1 239 1 
287 1 0 1 314 1 292 1 272 1 182 1 84 1 85 1 12 1 135 1 59 1 321 2 205 1 303 1 352 2 232 1 307 1 234 1 20 1 71 1 308 1 95 1 49 1 74 1 97 1 169 2 77 1 239 1 357 1 
117 8 340 1 57 1 267 2 58 1 123 1 245 2 177 8 28 2 81 1 365 1 180 1 318 1 32 1 8 2 198 2 34 2 247 1 203 2 38 7 204 1 205 1 138 4 108 2 208 3 67 1 232 1 42 1 43 1 111 1 45 2 212 1 282 1 189 1 263 2 22 2 331 2 357 1 334 1 
339 1 340 1 2 1 316 1 343 1 344 1 224 1 28 1 34 1 295 1 203 1 275 1 204 2 105 1 205 1 138 2 108 1 278 1 252 1 232 1 233 1 280 1 43 1 45 1 189 1 263 1 22 3 216 1 357 1 
339 1 340 3 123 1 316 2 343 1 28 1 34 1 11 1 203 1 275 1 204 3 105 2 138 2 64 1 108 1 252 1 231 1 68 1 210 1 280 1 259 1 45 1 235 1 263 1 22 6 116 2 
172 1 339 4 340 8 316 1 343 2 3 1 344 2 28 1 365 1 269 1 320 1 34 2 295 1 203 2 275 11 204 6 105 2 138 4 108 2 278 1 207 1 252 1 280 11 212 1 45 2 46 1 237 1 263 2 22 14 216 2 376 3 116 1 150 3 
117 1 192 1 339 1 340 1 267 1 245 1 124 1 177 1 28 1 365 1 83 1 8 1 34 1 247 1 203 1 350 1 249 1 38 1 204 1 205 2 138 2 278 1 108 1 208 1 66 1 232 1 70 1 43 1 45 1 212 1 189 1 263 1 238 1 22 2 331 1 357 2 116 1 100 1 
339 7 340 10 58 1 245 2 343 3 344 2 345 2 8 2 295 2 247 1 11 1 347 1 203 3 299 2 249 1 204 10 205 3 105 8 64 1 108 3 252 3 68 1 66 2 208 2 210 1 70 2 259 1 212 1 73 1 263 3 22 20 216 2 357 3 116 2 117 3 118 2 119 1 267 2 316 4 124 2 177 3 28 3 365 1 34 3 275 7 136 2 87 2 38 3 138 6 278 1 232 1 43 1 280 7 45 3 46 4 235 1 189 1 331 1 100 2 
105 1 138 2 339 1 108 1 304 1 340 2 123 1 280 1 343 1 28 1 45 1 46 1 34 1 263 1 22 2 203 1 216 1 275 1 
105 1 138 2 339 1 108 1 252 1 123 1 280 1 316 1 28 1 45 1 34 1 200 1 295 1 263 1 22 2 203 1 275 1 204 2 
105 2 138 2 339 2 108 1 252 1 340 2 123 1 280 2 316 1 343 1 344 1 28 1 45 1 46 1 295 1 34 1 263 1 22 4 203 1 216 1 275 2 204 2 
105 1 138 2 339 1 108 1 304 1 340 2 280 1 343 1 28 1 45 1 46 1 32 1 34 1 263 1 22 2 203 1 216 1 275 1 
105 1 138 2 339 1 108 1 252 1 280 1 316 1 28 1 45 1 32 1 34 1 200 1 295 1 263 1 22 2 203 1 275 1 204 2 
105 2 138 2 339 2 108 1 252 1 340 2 280 2 316 1 343 1 344 1 28 1 45 1 46 1 32 1 295 1 34 1 263 1 22 4 203 1 216 1 275 2 204 2 
105 2 138 2 339 2 108 1 252 1 340 2 280 2 316 1 343 1 344 1 28 1 45 1 46 1 295 1 34 1 263 1 22 4 203 1 216 1 275 2 204 2 
117 1 340 1 267 1 245 1 124 1 177 1 28 1 365 1 8 1 34 1 203 1 136 1 38 1 204 1 205 1 138 2 108 1 66 1 208 1 70 1 212 1 45 1 263 1 22 2 331 1 357 1 116 1 100 1 
117 1 340 1 267 1 245 1 124 1 177 1 28 1 365 1 8 1 34 1 203 1 38 1 204 1 205 1 138 2 108 1 161 1 208 1 69 1 70 1 142 1 212 1 45 1 263 1 22 2 331 1 357 1 116 1 
105 2 138 2 339 2 278 1 108 1 252 1 340 2 280 2 316 1 343 1 344 1 28 1 45 1 46 1 295 1 34 1 263 1 22 4 203 1 216 1 275 2 204 2 
117 1 339 2 340 2 267 1 245 1 316 1 343 1 124 1 177 1 344 1 28 1 81 1 8 1 295 1 34 1 203 1 275 2 136 1 87 1 204 2 38 1 105 2 205 1 138 2 108 1 252 1 66 1 208 1 70 1 280 2 45 1 46 1 263 1 22 4 216 1 357 1 100 1 
339 1 340 2 2 1 343 1 344 1 224 1 28 1 368 1 295 1 34 1 203 1 275 1 204 1 105 1 205 1 138 2 108 1 278 1 252 1 232 1 43 1 280 1 45 1 46 1 189 1 263 1 22 3 216 1 357 1 
340 9 221 1 361 2 290 2 316 3 343 3 3 1 344 3 269 1 366 1 34 2 295 3 204 10 105 6 138 4 108 2 252 3 41 1 45 2 46 3 144 1 374 1 263 2 215 1 22 19 216 3 285 1 376 1 356 1 150 2 
340 14 315 1 221 2 361 4 290 1 316 1 343 3 3 2 344 3 34 3 295 2 86 1 60 1 204 12 105 2 138 6 372 1 108 3 252 2 41 2 281 1 45 3 46 1 112 2 374 1 263 3 215 1 22 26 115 1 216 3 285 1 376 2 356 1 150 2 
340 20 290 1 343 5 344 4 3 3 295 4 11 1 60 1 204 21 105 7 108 3 64 1 252 5 68 1 210 1 259 1 112 1 263 3 22 41 215 1 115 1 216 4 356 1 221 2 315 1 361 4 316 3 29 1 269 1 34 3 86 1 138 6 372 1 41 1 281 1 45 3 46 4 235 1 144 1 374 1 285 1 376 3 150 4 
340 20 290 1 343 5 344 4 3 3 295 3 11 1 60 1 204 18 105 7 108 4 64 1 252 4 68 1 210 1 259 1 112 2 263 4 22 38 215 1 115 1 216 4 356 1 221 2 315 1 361 4 316 4 29 1 269 1 34 4 86 1 138 8 372 1 41 1 281 1 45 4 46 3 235 1 144 1 374 1 285 1 376 3 150 4 
340 27 315 1 221 1 361 4 290 1 316 7 343 8 3 2 344 7 269 2 320 2 34 2 295 7 11 1 86 1 60 1 204 25 105 14 138 4 372 1 64 1 108 2 252 8 68 1 41 1 210 1 281 1 259 1 45 2 46 7 235 1 112 1 374 1 263 2 115 1 215 1 22 52 216 7 285 1 376 4 356 1 150 4 
145 1 219 1 174 1 289 1 255 1 332 1 18 1 4 1 270 1 378 1 
370 1 310 1 
195 1 174 1 10 1 289 1 332 1 18 1 260 1 270 1 378 1 
337 1 219 1 352 1 196 1 254 1 174 1 289 1 255 1 18 1 270 1 145 1 214 2 94 1 6 1 51 1 332 1 321 1 378 1 
337 1 219 1 352 1 196 1 254 1 174 1 289 1 255 1 18 1 270 1 145 1 214 2 94 1 6 1 51 1 332 1 321 1 378 1 
337 1 219 1 352 1 196 1 254 1 174 1 289 1 255 1 18 1 270 1 145 1 214 2 94 1 6 1 51 1 332 1 321 1 378 1 
185 1 125 1 353 1 
185 1 125 1 353 1 
54 1 261 1 
54 1 125 1 261 1 
146 1 294 1 
174 1 289 1 153 1 270 1 294 1 128 1 6 1 321 1 158 1 205 2 39 1 370 1 352 1 232 2 18 1 43 2 257 1 94 1 214 1 189 2 310 1 146 1 332 1 333 1 357 2 116 1 378 1 
185 1 353 1 
54 1 125 1 261 1 
117 2 340 1 267 1 245 1 177 2 28 1 365 1 180 1 318 1 8 1 198 2 130 1 34 1 203 1 230 1 184 1 204 1 38 2 205 2 138 2 278 1 108 1 208 1 232 2 165 1 45 1 212 1 263 1 22 2 357 2 56 1 
117 1 265 1 208 1 67 1 267 1 326 1 245 1 177 1 363 1 8 1 131 1 331 1 334 1 38 1 
117 1 277 1 338 2 58 1 92 1 291 1 326 1 245 1 327 1 177 1 364 1 226 1 96 1 8 1 131 1 78 1 23 1 38 1 
117 2 277 1 338 2 58 1 92 1 291 1 326 1 245 1 327 1 177 2 364 1 226 1 81 1 96 1 8 1 131 1 78 1 23 1 38 2 
117 1 338 2 58 1 92 1 291 1 326 1 245 1 327 1 177 1 364 1 226 1 96 1 8 1 114 1 78 1 23 1 38 1 
243 1 
20 1 234 1 197 1 74 1 51 1 12 1 239 1 349 1 59 1 36 1 
118 1 160 5 252 2 360 5 268 1 343 2 20 5 234 5 344 2 283 5 295 2 202 2 51 5 133 10 216 2 
322 1 352 1 51 1 321 1 188 1 36 1 
117 4 173 2 288 2 267 1 245 1 177 4 127 1 5 1 129 1 8 1 12 2 59 2 321 3 38 4 322 4 323 1 352 3 208 1 67 1 234 2 20 2 188 2 168 1 74 2 239 1 331 2 218 2 334 1 286 1 
231 1 51 1 349 1 234 1 20 1 36 1 197 1 
151 1 342 1 133 1 12 1 59 1 321 1 36 1 322 1 352 1 160 1 20 1 234 1 188 1 329 1 74 1 51 2 239 1 
241 1 288 2 341 2 245 4 343 2 344 2 197 1 246 2 8 3 295 2 202 2 12 4 349 1 59 4 352 5 160 6 252 2 208 10 211 3 20 8 167 2 308 2 262 1 74 4 216 2 218 1 117 3 173 1 118 2 360 6 267 3 176 2 124 3 268 2 177 3 127 1 81 1 367 2 133 12 321 5 36 2 38 3 322 5 371 2 234 9 188 3 143 2 330 1 283 6 51 8 147 1 239 4 331 1 53 2 
173 1 288 1 360 5 268 1 343 2 3 1 344 2 295 2 202 2 133 6 86 1 12 2 157 1 321 1 59 2 60 1 36 2 322 1 372 1 352 1 160 3 252 2 162 1 188 1 234 8 20 5 281 1 74 2 283 5 51 5 115 1 216 2 239 2 376 1 150 1 
2 1 268 1 343 2 346 1 202 2 12 1 59 1 321 1 205 1 64 1 352 1 252 1 68 1 187 1 232 1 307 1 44 1 43 1 20 2 234 2 72 1 235 1 48 1 189 1 74 1 99 1 239 1 357 1 
117 1 194 1 267 1 2 2 245 1 124 1 177 1 28 1 365 1 8 1 34 1 203 1 136 1 204 1 38 1 205 3 138 2 108 1 66 1 208 1 232 2 70 1 43 2 45 1 72 1 189 2 263 1 22 1 331 1 357 3 116 1 100 1 
173 1 160 2 288 1 360 2 20 2 234 1 74 1 283 2 51 4 11 1 133 4 12 1 239 1 59 1 36 2 
236 1 146 1 255 1 270 1 378 1 
79 1 270 1 378 1 
79 1 270 1 378 1 
79 1 270 1 378 1 
113 1 270 1 378 1 
113 1 270 1 378 1 
113 1 270 1 378 1 
270 1 378 1 
174 1 332 1 
105 5 138 2 108 1 64 2 340 5 252 2 68 1 316 3 343 2 45 1 46 2 235 2 346 1 34 1 263 1 215 1 22 10 204 5 
105 1 138 2 108 1 340 2 343 1 45 1 46 1 34 1 263 1 215 1 22 2 216 1 
105 2 138 2 108 1 252 1 340 2 316 1 343 1 344 1 45 1 46 1 295 1 34 1 263 1 215 1 22 4 216 1 204 2 
105 2 138 6 108 3 64 1 340 1 316 1 45 3 46 1 144 1 235 1 112 1 34 3 263 3 22 3 215 1 14 1 204 2 
313 1 340 16 152 1 343 5 316 7 3 1 344 3 269 1 34 5 295 3 11 1 183 1 14 1 204 18 105 12 138 10 64 3 108 5 251 1 252 5 68 2 210 1 259 1 45 5 46 5 235 3 144 1 112 2 263 5 215 1 22 34 216 3 376 3 150 4 
340 4 343 1 316 2 3 1 34 1 11 1 204 4 105 2 138 2 108 1 64 1 252 1 68 1 210 1 45 1 259 1 235 1 263 1 22 8 115 1 215 1 376 1 150 1 
340 6 152 1 316 2 343 2 3 1 344 1 269 1 34 2 11 1 204 5 105 3 138 4 64 1 108 2 252 1 68 1 210 1 259 1 45 2 46 1 235 1 263 2 22 11 115 1 215 1 216 1 376 1 150 2 
340 9 152 1 343 3 316 3 3 1 344 2 34 3 295 2 11 1 86 1 60 1 204 10 105 4 138 6 372 1 64 1 108 3 252 3 68 1 210 1 281 1 259 1 45 3 46 1 235 1 112 1 263 3 22 19 115 1 215 1 216 2 376 1 150 1 
340 10 152 1 343 3 316 3 3 1 344 2 34 3 295 1 11 1 86 1 60 1 204 7 105 5 138 6 372 1 64 1 108 3 252 2 68 1 210 1 281 1 259 1 45 3 46 2 235 1 112 1 263 3 22 17 115 1 215 1 216 2 376 1 150 1 
340 4 343 1 316 2 3 1 34 1 11 1 204 4 105 2 138 2 108 1 64 1 252 1 68 1 210 1 45 1 259 1 235 1 263 1 22 8 115 1 215 1 376 1 150 1 
340 6 343 2 316 1 3 1 344 2 34 1 295 2 86 1 60 1 204 6 105 2 138 2 372 1 108 1 252 2 281 1 45 1 46 1 263 1 22 12 115 1 215 1 216 2 376 1 150 1 
340 10 152 1 343 3 316 3 3 1 344 2 34 4 295 1 11 1 86 1 60 1 204 8 105 5 138 8 372 1 64 1 108 4 252 2 68 1 210 1 281 1 259 1 45 4 46 2 235 1 112 2 263 4 22 18 115 1 215 1 216 2 376 1 150 1 
340 9 343 3 316 3 3 1 344 3 34 4 295 2 86 1 60 1 204 7 105 6 138 8 372 1 108 4 252 2 281 1 45 4 46 3 144 1 112 2 263 4 22 16 115 1 215 1 216 3 376 1 150 1 
105 6 64 3 252 1 340 3 68 1 210 1 316 3 343 1 259 2 46 3 235 3 22 7 204 4 
340 10 343 3 316 3 3 1 344 2 34 4 295 1 11 1 86 1 60 1 204 8 105 4 138 8 372 1 64 1 108 4 252 2 68 1 210 1 281 1 259 1 45 4 46 1 235 1 144 1 112 2 263 4 22 18 115 1 215 1 216 2 376 1 150 1 
105 3 138 4 108 2 64 1 252 1 340 4 68 1 210 1 343 1 316 2 45 2 259 1 46 1 235 1 112 1 34 2 263 2 11 1 22 8 204 4 
105 2 64 1 340 3 252 1 231 1 68 1 210 1 316 2 343 1 259 1 235 1 11 1 22 6 204 3 
105 2 138 2 108 1 252 1 340 2 152 1 316 1 343 1 344 1 45 1 46 1 295 1 34 1 263 1 22 4 216 1 204 2 
105 2 252 1 340 3 316 1 343 1 3 1 344 1 269 1 46 1 295 1 22 7 216 1 376 1 150 2 204 4 
340 11 343 3 316 5 344 2 269 1 320 1 295 2 34 2 11 1 14 1 204 12 105 9 138 4 64 2 108 2 252 3 68 1 210 1 259 1 45 2 46 4 235 2 237 1 112 2 263 2 22 23 216 2 376 2 150 2 
22 1 204 1 150 1 
340 1 22 1 376 1 
105 3 138 2 118 1 108 1 340 3 252 1 152 1 343 1 316 2 344 1 45 1 46 1 34 1 295 1 263 1 22 6 216 1 204 3 
340 6 343 2 316 1 3 1 344 2 34 1 295 2 86 1 60 1 204 6 105 2 138 2 372 1 108 1 252 2 281 1 45 1 46 1 263 1 22 12 115 1 215 1 216 2 376 1 150 1 
105 2 64 1 340 3 252 1 68 1 343 1 316 1 46 1 235 1 22 6 204 3 
105 2 138 2 64 1 108 1 340 1 210 1 316 1 259 1 45 1 46 1 235 1 112 1 34 1 263 1 22 3 14 1 204 2 
205 1 7 1 84 1 232 1 298 1 357 1 116 1 
205 1 358 1 7 1 193 1 84 1 232 1 298 1 148 1 357 1 171 1 116 1 16 1 
117 4 325 1 67 1 208 1 267 1 245 1 177 4 81 1 8 1 375 1 331 1 334 1 38 4 
117 1 119 1 208 1 267 1 245 2 124 1 177 1 8 1 76 1 311 1 377 1 38 1 137 1 
117 1 338 1 8 1 78 1 291 1 245 1 331 1 327 1 177 1 38 1 
117 2 208 1 267 1 58 1 245 1 177 2 81 1 180 1 8 1 38 2 56 1 
117 5 325 1 67 1 208 3 267 2 42 1 245 2 177 5 81 1 180 1 282 1 8 2 331 1 218 1 334 1 38 4 
117 5 242 1 325 1 67 1 208 3 267 2 245 2 177 5 81 1 180 1 282 1 8 2 331 1 218 1 334 1 38 4 
117 1 8 1 208 1 67 1 231 1 267 1 245 1 331 1 334 1 177 1 38 1 
205 2 117 1 208 1 66 1 267 1 232 1 70 1 245 1 43 1 124 1 177 1 189 1 8 1 247 1 331 1 357 2 116 1 38 1 
205 2 117 1 371 1 0 1 208 3 66 1 267 2 232 2 307 1 70 1 245 1 43 2 124 2 71 1 177 1 189 1 8 1 247 1 53 1 218 1 357 2 116 1 38 1 
205 2 117 2 371 1 0 1 208 3 161 1 267 2 232 2 307 1 70 1 245 1 43 2 124 2 71 1 177 2 189 1 8 1 247 1 375 1 53 1 218 1 357 2 116 1 38 2 
117 3 267 1 245 1 124 1 177 3 367 1 8 1 13 1 321 2 36 1 250 1 38 3 322 1 371 1 352 2 208 4 211 1 308 1 51 1 375 1 331 1 218 1 53 1 
117 3 322 1 371 1 352 2 208 4 267 1 245 1 124 1 211 1 177 3 308 1 246 1 367 1 8 1 51 1 375 1 331 1 53 1 321 2 218 1 36 1 38 3 
117 1 8 1 245 1 177 1 111 1 38 1 
117 1 241 1 208 1 267 1 245 2 124 1 177 1 31 1 8 1 331 1 311 1 377 1 38 1 
117 1 339 1 340 3 267 1 245 1 343 1 316 2 124 1 177 1 28 2 81 1 8 1 34 2 247 1 11 1 203 2 299 1 275 1 230 1 136 1 87 1 204 3 38 1 105 2 205 2 138 4 64 1 278 1 108 2 252 1 68 1 208 1 66 1 232 1 210 1 70 1 280 1 43 1 259 1 45 2 235 1 189 1 263 2 22 6 357 2 116 2 100 1 
117 1 341 1 177 1 197 1 127 1 246 1 367 1 12 2 349 1 59 2 321 3 36 1 38 1 158 1 322 2 352 3 208 2 234 1 20 1 211 1 188 1 167 1 308 1 143 1 74 2 51 1 331 1 239 2 
117 2 241 1 208 2 267 1 245 2 124 1 111 1 177 2 81 1 330 1 367 1 8 1 38 2 
205 2 117 1 208 1 161 1 267 1 232 1 70 1 245 1 43 1 124 1 177 1 189 1 8 1 247 1 331 1 357 2 116 1 38 1 
117 1 241 1 208 1 267 1 245 2 124 1 177 1 31 1 8 1 311 1 218 1 377 1 38 1 
26 1 132 1 220 1 116 1 37 1 
0 1 352 2 109 1 26 2 220 1 307 1 71 1 308 1 103 1 354 1 97 1 132 2 51 1 35 1 321 2 116 1 36 1 37 2 158 1 
205 1 220 1 232 1 165 1 130 1 132 1 357 1 184 1 37 1 
109 1 220 1 35 1 
213 1 274 1 110 1 27 1 191 1 19 1 362 1 55 1 
266 1 110 2 27 1 19 2 362 4 166 1 102 2 213 4 179 1 309 1 181 1 274 3 134 1 55 1 
27 1 110 1 19 1 362 2 293 1 102 1 213 2 50 1 274 1 191 1 240 1 55 1 
266 1 27 1 110 1 362 3 19 1 166 2 213 3 227 1 181 2 274 1 191 1 55 1 
63 1 40 2 274 2 15 1 
213 1 1 1 27 1 191 1 362 1 55 1 
213 2 284 1 274 1 110 1 27 1 191 1 19 1 362 2 55 1 102 1 
98 1 
213 1 274 1 110 1 27 1 191 1 19 1 362 1 55 1 
231 1 274 1 110 1 19 1 
213 1 274 1 110 1 27 1 19 1 362 1 55 1 
213 1 199 1 253 1 
266 1 27 1 110 1 362 3 19 1 166 2 213 3 181 1 274 1 52 1 191 1 55 1 
213 2 274 1 110 1 27 1 19 1 149 1 362 2 55 1 102 1 
213 1 338 1 120 1 309 1 78 1 23 1 274 1 27 1 191 1 362 1 55 1 
213 1 274 1 27 1 191 1 19 1 362 1 55 1 
213 1 110 1 27 1 191 1 19 2 362 1 55 1 
122 1 27 2 19 1 362 2 93 1 213 2 30 1 274 1 191 1 55 2 
17 1 110 1 27 1 19 1 362 3 102 2 213 3 309 1 284 1 274 2 191 1 134 1 55 1 
338 2 110 1 291 1 27 1 19 1 362 2 364 1 102 1 213 2 271 1 274 1 23 1 78 1 191 1 55 1 
110 1 27 2 19 1 362 4 102 2 213 4 309 1 155 1 274 2 191 1 134 1 149 1 55 2 
27 1 110 1 362 3 19 1 102 1 166 1 213 3 284 1 274 1 191 1 55 1 
179 1 309 1 274 1 134 1 
274 1 19 1 

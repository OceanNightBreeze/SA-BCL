#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 179 173 243 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (80,347) 118 335 96 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 179 67 313 84 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 179 141 313 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 179 67 313 84 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 179 67 313 84 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 179 67 313 84 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 335 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 179 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 179 141 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 2 101 1 5 1 277 1 154 1 224 6 134 9 228 1 247 1 89 2 248 2 110 2 48 1 330 1 181 5 161 2 68 1 51 1 312 1 115 3 257 2 233 1 210 1 166 9 120 2 33 1 318 1 124 4 
174 2 101 1 5 1 277 1 154 1 224 6 134 9 228 1 247 1 89 2 248 2 110 2 48 1 330 1 181 5 161 2 68 1 51 1 312 1 115 3 233 1 257 2 210 1 166 9 120 2 33 1 318 1 124 4 
174 2 101 1 5 1 277 1 154 1 224 7 134 10 228 1 247 1 89 2 248 2 110 2 48 1 330 1 181 6 161 2 68 1 51 1 312 1 115 4 233 1 257 2 210 1 166 10 120 2 33 1 318 1 124 5 
174 2 101 1 277 1 154 1 224 4 134 7 228 1 247 1 89 2 248 2 110 2 48 1 330 1 181 4 161 2 68 1 51 1 312 1 115 2 233 1 257 1 210 1 166 7 120 2 33 1 318 1 124 3 
174 1 89 1 247 1 110 1 248 1 48 1 330 1 181 3 51 1 5 1 312 1 115 1 257 2 166 4 120 1 224 3 134 4 124 2 
138 1 228 1 89 1 248 1 110 1 48 1 330 1 181 1 161 1 51 1 325 1 233 1 166 2 120 1 170 1 134 2 
248 2 48 1 330 1 181 2 161 1 51 1 115 1 166 3 120 2 33 1 224 1 134 3 124 1 
174 1 101 1 5 1 224 7 134 9 247 1 89 1 248 2 110 1 48 1 330 1 181 5 161 1 51 1 312 1 115 3 257 2 166 9 362 1 33 1 120 2 122 1 318 1 124 4 
174 1 101 1 5 1 224 7 134 9 247 1 89 1 248 2 110 1 48 1 330 1 181 5 161 1 51 1 312 1 115 3 257 2 166 9 362 1 33 1 120 2 122 1 318 1 124 4 
235 1 311 1 268 1 
4 2 334 1 268 1 
260 1 17 2 244 2 3 1 204 2 345 2 251 2 142 2 
191 1 17 2 3 1 129 1 345 2 275 1 82 1 19 1 276 1 222 1 244 3 44 1 299 2 21 1 136 1 283 1 246 2 355 1 204 2 251 3 140 1 142 2 359 1 28 2 255 2 209 1 260 1 53 1 31 1 212 1 95 1 146 2 187 1 121 1 367 1 288 1 369 1 
17 1 244 1 176 1 3 1 204 1 155 1 345 1 251 1 142 1 14 1 
35 1 307 1 293 1 216 1 251 1 142 1 114 1 253 1 14 1 314 1 244 1 262 1 235 1 268 1 
17 1 204 1 307 1 345 1 216 1 251 1 142 1 114 2 253 2 14 1 314 1 244 1 262 1 235 1 268 1 
261 1 63 1 114 1 253 1 55 1 
261 1 131 1 292 1 235 1 114 2 253 2 55 1 268 1 
261 1 114 1 253 1 
17 1 176 1 3 1 204 1 345 1 251 1 114 1 142 1 253 1 14 1 182 1 244 1 155 1 55 1 
268 1 
261 1 131 1 235 1 153 1 114 2 253 2 55 1 268 1 
301 1 343 1 332 1 114 5 218 1 253 5 30 1 143 1 261 2 131 1 235 1 351 2 352 1 364 2 368 1 55 2 268 1 371 1 270 2 
260 1 311 1 
17 1 204 1 345 1 251 2 142 2 69 1 260 2 244 2 327 1 
118 1 80 1 46 1 
246 1 355 1 65 1 129 1 251 1 255 1 209 1 19 1 260 1 31 1 244 1 187 1 299 1 121 1 369 1 136 1 
319 1 17 1 246 1 355 1 80 1 129 1 249 1 345 1 251 2 142 1 255 1 209 1 19 1 31 1 244 2 187 1 299 1 121 1 369 1 136 1 
319 1 260 1 17 3 244 3 204 1 345 3 251 3 142 3 
17 1 244 1 155 1 345 1 251 1 142 1 14 1 
17 1 244 1 204 1 345 1 327 1 251 1 142 1 14 1 69 1 
319 1 17 3 3 1 129 1 216 1 345 3 275 1 82 1 19 1 222 1 244 4 44 1 299 1 136 1 246 1 355 1 204 2 307 1 249 1 251 4 140 1 142 3 114 1 359 1 28 2 253 1 255 1 14 1 209 1 69 1 314 1 258 1 260 1 53 1 31 1 262 1 212 1 95 1 146 1 187 1 121 1 288 1 369 1 76 1 
319 1 260 1 17 1 244 2 293 1 345 1 196 1 251 2 142 2 
319 2 17 3 204 1 307 1 249 1 345 3 216 1 251 3 114 1 142 3 253 1 14 1 69 1 314 1 315 1 244 3 262 1 268 1 76 1 
319 1 17 2 204 1 345 2 80 1 251 2 142 2 69 1 244 2 46 1 
246 1 355 1 129 1 251 1 255 1 209 1 19 1 260 1 31 1 244 1 187 1 299 1 121 1 369 1 136 1 
246 1 355 1 333 1 129 1 251 1 294 1 255 1 19 1 260 1 31 1 244 1 299 1 121 1 369 1 136 1 
342 1 191 2 320 1 80 2 130 1 275 1 82 2 8 1 222 1 220 1 347 1 44 1 350 1 353 1 46 2 202 1 64 1 27 1 28 2 53 1 212 1 118 2 146 4 288 1 
226 1 17 1 262 1 244 1 345 1 251 1 142 1 14 1 
319 2 17 4 100 1 331 1 204 1 249 1 345 4 251 4 142 4 360 1 14 1 69 1 260 1 244 4 
226 1 17 2 244 2 155 1 345 2 251 2 142 2 14 1 
274 1 346 1 
274 1 346 1 
219 1 201 1 
219 1 201 1 
274 1 346 1 219 1 201 1 
274 1 346 1 18 1 
274 1 346 1 18 1 
274 1 346 1 18 1 
274 1 346 1 189 1 
148 1 274 1 346 1 
62 1 274 2 346 2 219 1 109 1 201 1 
274 1 346 1 189 1 
274 1 346 1 189 1 
271 1 175 2 274 2 91 2 346 2 163 2 114 2 253 2 285 3 83 1 286 1 349 2 195 1 245 2 119 1 157 1 188 1 109 1 268 1 
148 1 17 2 175 1 274 1 345 2 346 1 106 1 244 2 349 1 137 1 229 1 251 2 91 1 163 1 114 1 142 2 285 1 253 1 336 1 72 1 260 1 168 1 236 1 188 1 
174 1 89 1 110 1 
89 1 110 1 325 1 
174 2 329 1 89 3 322 1 205 1 325 1 
174 1 40 1 89 2 322 1 205 1 325 1 
174 1 89 2 322 2 205 1 325 1 
272 2 78 1 323 1 192 1 4 3 130 1 218 3 7 1 106 1 107 2 220 1 131 1 297 2 351 1 352 1 202 1 137 1 64 1 230 1 332 2 334 1 114 5 253 5 261 1 235 1 168 1 364 1 97 1 55 4 123 1 268 2 270 1 
193 1 323 1 192 2 4 9 130 3 218 8 107 6 220 3 131 1 297 6 351 2 352 1 197 1 202 3 137 4 64 3 63 5 230 2 23 1 332 6 334 3 114 9 253 9 92 1 184 1 261 6 235 1 340 1 264 5 364 2 97 3 55 7 371 1 268 5 270 2 
272 1 192 1 4 4 130 1 218 3 7 1 220 1 107 2 351 1 297 2 137 1 202 1 64 1 230 1 332 2 334 2 114 3 253 3 235 1 364 1 55 2 97 1 268 3 123 1 371 1 270 1 
272 2 193 1 192 1 4 7 130 2 218 5 7 1 107 4 220 2 297 4 351 1 197 1 137 2 202 2 64 2 230 1 332 4 334 3 114 4 253 4 184 1 235 1 364 1 55 3 97 2 268 4 371 1 123 1 270 1 
16 1 311 1 369 1 
302 1 369 1 
15 1 
19 1 369 1 
19 1 178 1 16 2 129 1 66 1 369 3 
19 1 129 1 369 1 
369 1 267 1 
202 1 342 3 289 2 191 4 304 1 99 1 324 1 130 1 82 3 13 1 103 1 350 2 298 1 146 7 363 1 199 1 341 1 
202 1 342 3 289 2 191 4 304 1 99 1 324 1 130 1 82 3 13 1 103 1 350 2 298 1 146 7 363 1 199 1 341 1 
202 1 342 3 289 2 304 1 191 4 99 1 324 1 130 1 252 1 82 3 13 1 103 1 350 2 298 1 146 7 363 1 199 1 341 1 
179 1 289 1 191 2 221 1 146 3 207 1 82 1 243 1 103 2 173 1 341 1 
289 2 342 4 191 5 99 1 324 1 344 1 130 1 275 2 194 1 82 4 103 1 222 2 350 3 298 1 199 1 200 1 202 1 304 1 28 4 13 1 53 2 212 2 146 9 341 1 
174 1 215 1 127 1 325 1 295 1 299 1 224 1 134 2 133 1 87 1 328 1 11 1 136 1 246 1 329 1 89 2 110 1 248 1 48 1 330 1 160 1 181 1 161 1 51 1 255 1 93 1 166 2 186 1 120 1 121 1 
174 1 215 1 127 1 325 1 295 1 299 1 224 2 134 3 133 1 328 1 11 1 61 1 136 1 329 1 246 1 158 1 89 2 110 1 248 1 48 1 160 1 181 1 358 1 161 1 51 1 255 1 166 3 186 1 120 1 121 1 
174 1 215 1 329 1 158 1 246 1 89 2 110 1 127 1 48 1 181 1 161 1 51 1 325 1 255 1 295 1 166 2 186 1 299 1 121 1 224 2 133 1 134 2 136 1 61 1 11 1 
215 2 127 2 19 1 299 1 134 1 11 2 136 1 282 1 246 1 248 1 358 1 161 2 255 1 259 1 31 1 166 1 145 1 361 1 120 1 121 1 213 1 369 1 269 1 
174 1 215 1 127 1 325 1 295 1 299 1 134 1 133 1 328 1 11 1 61 1 136 1 246 1 329 1 89 2 110 1 248 1 330 1 160 1 161 1 255 1 93 1 166 1 186 1 120 1 121 1 
308 1 
35 1 4 2 216 1 218 2 38 1 131 3 45 1 135 1 88 1 136 1 12 2 332 2 334 2 142 1 14 1 54 1 235 1 339 2 237 1 241 2 149 2 192 1 291 4 293 1 19 1 244 1 351 1 352 1 299 2 198 1 60 1 246 2 159 2 307 1 251 1 162 1 114 5 253 5 255 2 314 1 116 1 31 2 261 6 262 1 263 1 213 1 364 1 121 1 169 1 75 2 369 1 268 2 269 1 372 2 270 1 
35 1 291 2 216 1 293 1 153 1 38 1 244 1 131 1 45 1 60 1 12 1 307 1 251 1 142 1 114 3 253 3 14 1 314 1 262 1 261 2 263 1 169 1 
35 1 291 3 216 1 293 1 153 1 38 1 244 1 131 1 45 1 60 1 307 1 251 1 142 1 114 3 253 3 14 1 314 1 261 1 262 1 263 1 235 1 169 1 75 1 268 1 
35 1 291 3 216 1 293 1 153 1 38 1 244 1 131 1 45 1 60 1 12 1 159 1 307 1 251 1 142 1 114 3 253 3 14 1 314 1 262 1 261 2 263 1 235 1 169 1 75 1 268 1 
0 1 35 1 216 1 218 1 38 1 131 3 45 1 47 1 12 4 332 1 334 2 142 1 14 1 235 5 339 2 241 2 149 2 152 1 291 6 293 1 153 1 244 1 351 1 352 1 198 1 60 1 159 4 307 1 251 1 162 1 114 5 253 5 256 1 314 1 262 1 261 7 263 1 364 1 169 1 75 4 268 5 172 1 270 1 372 2 
35 1 216 1 4 2 218 1 38 1 131 2 45 1 135 1 12 2 332 1 334 2 142 1 14 1 235 1 339 2 241 2 149 2 291 4 293 1 244 1 351 1 352 1 198 1 60 1 159 2 307 1 251 1 162 1 114 4 253 4 314 1 262 1 261 4 263 1 364 1 169 1 75 2 268 2 270 1 372 2 
0 1 149 2 35 1 291 4 216 1 293 1 218 1 38 1 244 1 131 2 351 1 352 1 198 1 45 1 60 1 47 1 12 2 159 2 307 1 332 1 334 2 251 1 162 1 142 1 114 4 253 4 14 1 314 1 261 4 262 1 263 1 235 1 339 2 364 1 169 1 75 2 268 1 172 1 241 2 372 2 270 1 
0 1 149 2 35 1 291 4 216 1 293 1 218 1 38 1 244 1 131 2 351 1 352 1 198 1 45 1 60 1 47 1 12 2 159 2 307 1 332 1 334 2 251 1 162 1 142 1 114 4 253 4 14 1 314 1 261 4 262 1 263 1 235 1 339 2 364 1 169 1 75 2 268 1 172 1 241 2 372 2 270 1 
149 2 35 1 291 4 4 2 216 1 293 1 218 1 38 1 244 1 131 2 132 1 351 1 352 1 223 1 198 1 45 1 60 1 47 1 12 2 159 2 356 2 307 1 90 1 332 1 251 1 50 2 142 1 114 4 253 4 14 1 314 1 261 4 262 1 263 1 235 1 364 1 169 1 75 2 268 1 372 2 270 1 
0 1 149 2 35 1 291 5 216 1 293 1 218 1 38 1 244 1 131 2 351 1 352 1 198 1 45 1 60 1 47 1 12 3 159 3 307 1 332 1 334 2 251 1 162 1 142 1 114 4 253 4 14 1 256 1 314 1 262 1 261 5 263 1 235 1 339 2 364 1 169 1 75 3 268 1 172 1 241 2 372 2 270 1 
0 1 149 2 35 1 291 5 216 1 293 1 218 1 38 1 244 1 131 2 351 1 352 1 198 1 45 1 60 1 47 1 12 3 159 3 307 1 332 1 334 2 251 1 162 1 142 1 114 4 253 4 14 1 256 1 314 1 262 1 261 5 263 1 235 1 339 2 364 1 169 1 75 3 268 1 172 1 241 2 372 2 270 1 
35 1 216 1 4 2 218 1 38 1 131 2 223 1 45 1 135 1 12 2 332 1 50 2 142 1 14 1 235 1 149 2 291 4 293 1 244 1 351 1 352 1 198 1 60 1 159 2 356 2 307 1 251 1 114 4 253 4 314 1 262 1 261 4 263 1 364 1 169 1 75 2 268 1 270 1 372 2 
289 1 202 1 342 2 191 3 304 1 324 1 80 1 130 1 275 1 311 1 82 3 28 2 13 1 8 1 260 2 53 1 222 1 350 2 44 1 118 1 212 1 146 6 298 1 199 1 288 1 46 1 
191 1 80 3 275 1 207 1 28 2 82 1 335 1 53 1 222 1 221 1 44 1 118 3 212 1 146 2 96 1 300 1 288 1 
319 1 17 1 191 1 129 1 345 1 275 1 82 1 19 1 244 2 222 1 44 1 299 1 300 1 21 1 136 1 46 1 246 1 355 1 65 1 249 1 251 2 140 1 142 1 28 2 255 1 209 1 260 1 31 1 53 1 338 1 212 1 187 1 146 2 121 1 366 1 369 1 288 1 214 1 
319 1 324 1 129 2 80 7 37 2 130 3 275 3 82 10 6 2 222 3 220 2 44 3 136 2 46 7 140 1 142 1 13 1 53 3 95 2 146 20 187 2 287 2 238 2 288 3 97 2 289 1 342 8 17 1 191 10 99 4 345 1 19 2 244 3 350 4 298 1 299 3 199 1 300 1 21 1 61 1 202 3 304 1 22 1 246 3 355 2 64 2 357 1 306 1 249 1 251 3 28 6 255 3 209 2 260 2 31 1 212 3 118 7 121 2 369 2 
319 1 17 1 191 1 2 1 345 1 242 1 275 2 82 1 8 1 39 1 19 2 276 2 244 1 222 2 44 2 299 7 21 1 87 1 61 1 136 2 227 1 246 8 251 1 140 1 142 1 28 4 255 8 71 1 144 1 31 2 53 2 212 2 146 2 121 2 213 1 365 1 369 3 288 2 269 1 
342 1 17 1 191 1 80 1 345 1 275 1 130 1 82 2 326 1 222 1 244 1 220 1 350 1 44 1 300 1 46 1 202 1 64 1 204 1 251 1 142 1 28 2 69 1 53 1 118 1 212 1 146 3 288 1 97 1 
342 1 202 1 320 1 191 2 99 1 80 1 275 1 28 2 8 1 53 1 222 1 220 1 44 1 118 1 212 1 146 2 288 1 46 1 
342 1 64 1 80 1 275 1 130 1 28 2 82 2 8 1 53 1 222 1 350 1 44 1 118 1 212 1 146 2 353 1 288 1 46 1 
342 2 202 1 191 2 64 1 99 1 80 2 130 1 275 1 82 2 28 2 8 1 53 1 222 1 220 1 350 1 44 1 118 2 212 1 146 4 288 1 97 1 46 2 
342 1 202 1 320 1 191 2 99 1 80 1 242 1 275 1 28 2 53 1 222 1 220 1 44 1 118 1 212 1 146 2 288 1 46 1 
342 1 64 1 80 1 242 1 275 1 130 1 28 2 82 2 53 1 222 1 350 1 44 1 118 1 212 1 146 2 353 1 288 1 46 1 
342 2 202 1 191 2 64 1 99 1 80 2 242 1 130 1 275 1 82 2 28 2 53 1 222 1 220 1 350 1 44 1 118 2 212 1 146 4 288 1 97 1 46 2 
342 2 202 1 191 2 64 1 99 1 80 2 130 1 275 1 82 2 28 2 53 1 222 1 220 1 350 1 44 1 118 2 212 1 146 4 288 1 97 1 46 2 
191 1 129 1 275 1 82 1 19 1 244 1 222 1 44 1 299 1 21 1 136 1 246 1 355 1 251 1 140 1 28 2 255 1 209 1 260 1 31 1 53 1 95 1 212 1 146 2 187 1 121 1 369 1 288 1 
191 1 36 1 129 1 294 1 275 1 82 1 19 1 244 1 222 1 44 1 299 1 21 1 136 1 246 1 355 1 333 1 251 1 140 1 28 2 255 1 260 1 31 1 53 1 212 1 146 2 121 1 369 1 288 1 
342 2 202 1 191 2 64 1 99 1 80 2 130 1 275 1 82 2 28 2 53 1 222 1 220 1 350 1 44 1 118 2 212 1 146 4 300 1 288 1 97 1 46 2 
342 2 191 2 99 1 80 2 129 1 130 1 275 1 82 2 6 1 19 1 220 1 244 1 222 1 350 1 44 1 299 1 87 1 46 2 136 1 202 1 246 1 64 1 355 1 251 1 28 2 255 1 209 1 53 1 118 2 95 1 212 1 146 4 187 1 121 1 369 1 288 1 97 1 
342 1 17 1 191 2 99 1 345 1 80 1 130 1 275 1 82 1 222 1 43 1 244 1 220 1 44 1 300 1 46 1 202 1 64 1 204 1 251 1 142 1 28 2 69 1 53 1 212 1 118 1 146 3 288 1 97 1 
179 1 191 2 309 1 67 1 275 1 207 1 194 1 82 2 28 2 313 1 53 1 222 1 221 1 84 1 212 1 146 4 171 1 
179 2 191 4 67 2 309 2 275 1 207 2 194 1 141 1 28 2 82 4 313 2 53 1 221 2 222 1 84 1 212 1 146 8 171 1 
179 1 191 2 309 1 67 1 275 1 207 1 194 1 82 2 28 2 313 1 53 1 222 1 221 1 84 1 212 1 146 4 171 1 
179 1 191 2 309 1 67 1 275 1 207 1 194 1 82 2 28 2 313 1 53 1 222 1 221 1 84 1 212 1 146 4 171 1 
179 1 191 2 309 1 67 1 275 1 207 1 194 1 82 2 28 2 313 1 53 1 222 1 221 1 84 1 212 1 146 4 171 1 
83 1 42 1 175 1 349 1 195 1 274 1 346 1 91 1 163 1 109 1 
148 1 236 1 
175 1 349 1 274 1 346 1 91 1 163 1 147 1 254 1 240 1 
175 1 274 1 91 1 346 1 114 1 163 1 253 1 285 2 83 1 286 1 349 1 195 1 245 1 119 1 157 1 188 1 109 1 268 1 
175 1 274 1 91 1 346 1 114 1 163 1 253 1 285 2 83 1 286 1 349 1 195 1 245 1 119 1 157 1 188 1 109 1 268 1 
175 1 274 1 91 1 346 1 114 1 163 1 253 1 285 2 83 1 286 1 349 1 195 1 245 1 119 1 157 1 188 1 109 1 268 1 
62 1 348 1 18 1 
62 1 348 1 18 1 
156 1 189 1 
62 1 156 1 189 1 
72 1 229 1 
148 1 17 2 175 1 274 1 345 2 346 1 106 1 244 2 349 1 245 1 137 1 229 1 251 2 91 1 114 1 163 1 142 2 253 1 285 1 336 1 286 1 72 1 260 1 168 1 236 1 265 1 55 1 
348 1 18 1 
62 1 156 1 189 1 
191 1 2 1 57 1 275 1 82 1 19 1 276 2 244 2 222 1 44 1 299 2 300 1 21 1 10 1 136 1 246 2 113 1 251 2 140 1 142 2 28 2 255 2 29 1 185 1 144 1 53 1 212 1 146 2 121 1 369 1 288 1 
174 1 215 1 303 1 329 1 246 2 89 2 110 1 126 1 325 1 255 2 70 1 186 1 299 2 121 1 133 1 87 1 328 1 136 1 61 1 
174 1 215 1 329 1 246 1 89 2 110 1 25 1 325 1 255 1 70 1 186 1 299 1 121 1 133 1 328 1 61 1 136 1 
215 1 303 1 282 1 246 1 255 1 19 1 31 1 299 1 20 1 121 1 213 1 369 1 269 1 136 1 
174 1 215 1 303 1 329 1 246 1 89 2 110 1 126 1 325 1 255 1 70 1 186 1 299 1 121 1 133 1 328 1 61 1 136 1 
104 1 
235 1 332 1 311 1 218 1 368 1 268 1 30 1 
4 1 218 1 131 1 351 1 352 1 332 1 334 1 162 1 114 1 253 1 261 1 235 1 339 1 364 1 268 2 241 1 270 1 
1 2 128 2 129 3 4 12 81 2 130 2 177 2 218 9 178 1 220 2 131 3 85 1 87 1 88 1 136 3 332 8 334 6 234 1 94 1 235 2 16 2 238 2 97 2 239 1 150 2 192 2 19 3 107 6 351 4 297 6 352 4 299 3 108 2 202 2 302 3 246 3 64 2 250 1 114 5 255 3 253 5 30 1 314 2 31 1 261 5 165 2 73 2 121 4 364 4 368 1 369 10 267 2 268 8 270 4 
192 1 151 1 128 2 4 6 130 2 177 1 218 8 107 5 221 1 220 2 9 1 131 1 297 5 351 2 352 2 86 1 88 1 179 1 202 2 64 2 305 1 332 5 334 3 26 1 207 1 114 1 141 1 253 1 261 1 235 2 364 2 266 1 97 2 268 5 270 2 
0 1 17 1 176 1 128 2 3 1 345 1 130 1 177 1 217 1 218 2 244 1 351 1 155 1 352 1 298 1 199 1 202 2 204 1 332 2 251 1 114 1 142 1 13 1 253 1 14 1 182 1 364 1 270 1 
332 1 218 1 30 1 351 1 235 1 352 1 364 1 368 1 268 1 270 1 
202 2 64 2 128 2 332 5 4 10 334 5 130 2 177 1 218 5 220 2 107 5 297 5 238 1 97 2 268 5 
261 1 131 1 235 1 114 1 253 1 268 1 
192 2 218 2 19 1 131 2 351 2 352 1 299 4 88 2 136 1 246 4 180 1 332 2 231 1 114 3 255 4 253 3 234 2 116 1 31 2 54 1 261 4 121 1 364 2 213 1 369 1 371 1 239 1 269 1 270 2 
17 2 3 1 345 2 129 1 275 1 82 1 19 1 222 1 244 3 44 1 299 1 136 1 246 1 355 1 204 2 251 3 140 1 142 2 359 1 28 2 255 1 209 1 260 1 31 1 53 1 212 1 95 1 146 1 187 1 121 1 369 1 288 1 
289 1 192 1 4 4 332 2 334 2 218 1 107 2 297 2 351 1 235 2 352 1 364 1 268 4 88 1 270 1 
175 1 163 1 52 1 
175 1 163 1 52 1 
175 1 163 1 52 1 
175 1 163 1 58 1 
83 1 72 1 175 1 163 1 280 1 
175 1 163 1 58 1 
175 1 163 1 58 1 
175 1 163 1 
274 1 346 1 
289 1 202 1 342 3 191 4 304 1 99 1 324 1 344 1 130 1 275 2 82 4 28 4 13 1 53 2 222 2 350 2 212 2 298 1 146 8 199 1 
289 1 342 2 202 1 304 1 191 3 324 1 130 1 311 1 82 3 13 1 350 2 298 1 146 6 199 1 
342 2 202 1 191 2 64 1 99 1 130 1 275 1 82 2 28 2 53 1 222 1 220 1 350 1 212 1 146 4 59 1 97 1 
179 1 191 1 221 1 146 2 207 1 82 1 
191 1 221 1 146 2 207 1 82 1 335 1 
221 1 146 1 82 1 
191 1 146 1 207 1 
202 1 342 3 191 3 99 1 64 1 275 1 130 1 28 2 82 3 53 1 222 1 220 1 350 2 212 1 146 6 238 1 59 1 97 1 
179 1 191 1 275 1 194 1 207 1 141 1 28 2 82 1 53 1 222 1 221 1 212 1 146 2 
202 1 342 2 191 3 99 1 130 1 82 3 13 1 350 1 298 1 146 6 199 1 
342 2 191 1 304 1 99 1 324 1 344 1 275 1 82 2 28 2 13 1 53 1 222 1 350 1 296 1 212 1 146 3 199 1 
342 5 202 2 191 5 99 2 275 1 130 2 194 1 217 1 28 2 82 5 13 2 53 1 222 1 350 3 212 1 146 10 298 1 199 2 
202 1 342 1 191 2 99 1 275 1 194 1 28 2 53 1 222 1 220 1 212 1 146 2 
342 2 202 1 191 2 64 1 99 1 130 1 275 1 194 1 82 2 28 2 53 1 222 1 220 1 350 1 212 1 146 4 97 1 
342 2 191 1 99 1 344 1 275 3 194 1 82 2 28 6 13 1 53 3 222 3 296 1 350 1 212 3 146 3 279 1 199 1 
179 1 191 1 275 3 207 1 194 1 28 6 82 1 53 3 222 3 221 1 212 3 146 2 279 1 59 1 173 1 
179 1 191 1 275 1 194 1 207 1 141 1 28 2 82 1 53 1 222 1 221 1 212 1 146 2 
179 1 191 1 275 2 207 1 194 1 141 1 28 4 82 1 53 2 222 2 221 1 212 2 146 2 59 1 
289 1 342 4 191 9 99 1 324 1 344 1 275 3 130 3 194 1 82 10 221 1 222 3 220 2 9 1 350 3 298 1 86 1 199 1 59 1 179 1 202 3 304 1 64 2 305 1 207 1 141 1 28 6 13 1 53 3 212 3 146 19 266 1 97 2 
179 1 191 1 275 1 194 1 207 1 141 1 28 2 82 1 53 1 222 1 221 1 212 1 146 2 
179 1 191 1 275 1 194 1 207 1 141 1 28 2 82 1 53 1 222 1 221 1 212 1 146 2 
342 2 191 6 99 1 275 1 130 2 194 1 82 6 221 1 222 1 220 2 350 1 9 1 86 1 179 1 202 2 64 2 305 1 207 1 141 1 28 2 53 1 212 1 146 12 266 1 97 2 
179 1 191 1 275 2 207 1 194 1 141 1 28 4 82 1 53 2 222 2 221 1 212 2 146 2 59 1 
179 1 191 1 275 2 207 1 194 1 141 1 28 4 82 1 53 2 222 2 221 1 212 2 146 2 279 1 
342 6 202 1 304 2 191 3 99 3 324 1 130 1 82 4 13 3 350 3 146 7 298 1 199 3 
179 1 191 1 275 2 207 1 194 1 141 1 28 4 82 1 53 2 222 2 221 1 212 2 146 2 279 1 
98 1 260 1 244 1 293 1 251 1 196 1 142 1 
98 1 290 1 111 1 112 1 293 1 251 1 142 1 183 1 260 1 244 1 278 1 196 1 
19 1 246 1 31 1 299 1 121 1 213 1 311 1 369 1 255 1 269 1 136 1 
319 1 17 1 246 1 355 1 129 1 345 1 251 2 142 1 255 1 19 1 260 1 31 1 244 2 187 1 299 1 121 1 369 1 136 1 
319 1 17 1 246 1 1 1 355 1 307 1 129 2 345 2 251 2 142 2 255 1 14 1 19 2 234 1 260 1 262 1 244 2 187 1 299 1 121 1 267 1 369 3 136 1 
319 1 17 1 1 1 345 2 129 2 294 1 19 2 244 2 299 2 136 1 246 2 355 1 307 1 251 2 142 2 255 2 14 1 234 1 260 1 117 1 262 1 121 1 369 3 267 1 
1 1 129 1 19 1 299 3 136 1 302 1 246 3 284 1 49 1 114 2 255 3 253 2 314 1 234 1 31 1 117 1 261 1 235 1 16 1 121 1 369 4 267 1 268 1 
302 1 246 3 1 1 129 1 114 2 253 2 255 3 314 1 19 1 234 1 31 1 117 1 261 1 235 1 16 1 299 3 121 1 108 1 267 1 369 4 268 1 136 1 
227 1 246 1 299 1 121 1 255 1 136 1 
227 1 246 7 321 1 2 1 129 1 102 1 255 7 39 1 71 1 19 2 276 1 31 2 178 1 299 6 121 3 365 1 369 3 87 1 370 1 61 1 136 2 
319 1 324 1 129 1 80 1 37 1 275 2 130 1 6 1 82 3 222 2 44 2 87 1 46 1 136 1 142 1 13 1 185 1 53 2 95 1 187 1 146 6 288 2 342 2 289 1 17 1 191 3 345 1 19 1 244 2 350 2 298 1 299 1 199 1 300 1 202 1 246 1 304 1 355 1 251 2 28 4 255 1 209 1 260 2 212 2 118 1 121 1 369 1 
150 1 81 1 218 1 131 1 351 2 352 2 299 1 108 1 302 1 246 1 332 1 114 3 253 3 255 1 30 1 314 1 31 1 261 2 73 1 235 1 16 1 364 2 368 1 369 2 55 1 268 1 239 1 270 2 
227 1 246 2 129 1 255 2 19 1 178 1 85 1 16 1 299 2 121 2 369 2 87 1 136 1 
246 4 255 4 164 1 19 1 31 1 117 1 299 4 121 1 213 1 369 1 87 1 269 1 136 1 
246 2 321 1 273 1 306 1 129 1 102 1 255 2 19 1 234 1 299 2 121 2 225 1 369 1 136 1 
246 1 31 1 89 1 110 1 186 1 299 1 121 1 325 1 255 1 136 1 
246 2 2 1 255 2 19 1 299 2 121 1 369 1 87 1 10 1 61 1 136 1 
246 5 2 1 255 5 164 1 39 1 19 2 234 1 31 1 299 4 213 1 121 2 365 1 369 3 269 1 87 1 136 2 
246 5 203 1 2 1 255 5 164 1 39 1 19 2 234 1 31 1 299 4 213 1 121 2 369 3 269 1 87 1 136 2 
319 1 17 1 246 1 355 1 129 1 345 1 251 2 294 1 142 1 255 1 19 1 260 1 31 1 244 2 299 1 121 1 369 1 136 1 
246 1 321 1 129 1 102 1 255 1 19 1 234 1 178 1 299 1 121 2 369 1 370 1 136 1 
113 1 57 1 251 1 142 1 29 1 41 1 244 1 190 1 34 1 
211 1 34 1 354 1 
41 1 260 1 208 1 190 1 34 1 
307 1 24 1 216 1 114 2 253 2 208 2 14 1 314 1 41 2 260 1 262 1 211 1 235 1 34 1 55 1 190 2 268 1 76 1 354 1 
48 1 181 1 51 1 311 1 
166 1 248 1 48 1 181 1 120 1 51 1 134 1 
127 1 161 1 134 1 
248 1 330 1 48 1 181 1 310 1 232 1 51 1 316 1 233 2 166 3 120 1 134 3 
257 1 166 2 248 1 48 1 181 1 120 1 224 1 51 1 134 2 
174 1 89 1 247 1 110 1 166 1 248 1 330 1 181 1 120 1 134 1 124 1 
166 1 248 1 330 1 181 1 120 1 51 1 134 1 
166 1 248 1 48 1 330 1 120 1 51 2 134 1 
105 1 125 1 166 2 248 2 330 1 181 1 120 2 51 1 134 2 317 1 
248 1 48 1 330 1 181 2 101 1 51 1 115 1 166 3 120 1 224 2 134 3 318 1 124 1 
281 1 174 1 329 1 89 2 248 1 110 1 48 1 330 1 181 1 51 1 325 1 166 2 120 1 224 1 134 2 
248 2 48 1 330 1 181 2 51 1 5 1 115 1 257 1 166 4 120 2 224 2 134 4 124 1 
166 1 248 1 48 1 330 1 181 1 120 1 51 1 134 1 
248 1 48 2 181 3 310 1 232 1 51 2 115 1 233 1 166 4 120 1 224 2 134 4 77 1 124 1 
139 1 166 2 248 1 48 1 330 1 181 1 206 1 120 1 224 1 51 1 122 1 134 2 
248 1 330 1 48 1 181 1 310 2 232 1 51 1 233 2 166 3 74 1 120 1 134 3 
337 1 56 1 181 2 79 2 
166 1 248 1 167 1 330 1 120 1 134 1 
166 2 248 1 48 1 330 1 181 1 101 1 120 1 224 1 51 1 134 2 
32 1 
166 1 248 1 48 1 330 1 181 1 120 1 51 1 134 1 
233 1 166 3 248 1 48 1 330 1 181 1 101 1 120 1 224 1 51 1 134 3 
181 1 115 1 77 1 124 1 
181 1 51 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 148 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 112 1 3 1 84 2 200 9 48 5 292 2 176 1 125 2 228 2 61 1 33 2 302 1 93 1 63 3 94 1 371 9 166 1 305 2 306 1 98 1 208 1 349 1 169 1 75 1 333 2 19 6 195 4 
1 1 112 1 3 1 84 2 200 9 48 5 292 2 176 1 125 2 228 2 61 1 33 2 302 1 93 1 63 3 94 1 371 9 166 1 305 2 306 1 98 1 208 1 349 1 169 1 75 1 333 2 19 6 195 4 
1 1 112 1 3 1 84 2 200 10 48 6 292 2 176 1 125 2 228 2 61 1 33 2 302 1 93 1 63 4 94 1 371 10 166 1 305 2 306 1 98 1 208 1 349 1 169 1 75 1 333 2 19 7 195 5 
112 1 3 1 84 2 200 7 48 4 292 2 176 1 125 1 228 2 61 1 33 2 302 1 93 1 63 2 94 1 371 7 166 1 305 2 306 1 98 1 208 1 349 1 169 1 75 1 333 2 19 4 195 3 
63 1 93 1 1 1 371 4 112 1 84 1 200 4 48 3 292 1 176 1 305 1 306 1 125 2 75 1 19 3 333 1 195 2 33 1 
371 2 112 1 84 1 48 1 200 2 292 1 176 1 252 1 305 1 306 1 98 1 349 1 127 1 228 1 33 1 336 1 
302 1 63 1 371 3 112 1 200 3 48 2 176 1 305 2 306 1 19 1 228 1 195 1 33 2 
1 1 112 1 237 1 84 1 200 9 48 5 292 1 176 1 125 2 228 1 33 2 302 1 63 3 93 1 371 9 166 1 305 2 306 1 169 1 351 1 75 1 19 7 333 1 195 4 
1 1 112 1 237 1 84 1 200 9 48 5 292 1 176 1 125 2 228 1 33 2 302 1 63 3 93 1 371 9 166 1 305 2 306 1 169 1 351 1 75 1 19 7 333 1 195 4 
81 1 148 1 171 1 
97 2 171 1 181 1 
221 2 256 2 236 1 319 1 13 2 26 2 154 2 187 2 
290 1 219 1 111 1 221 2 47 1 339 1 340 1 5 1 26 3 154 2 51 2 202 1 316 1 87 1 363 1 273 1 179 1 161 1 30 2 366 1 319 1 299 1 369 1 324 1 64 1 13 2 187 2 329 2 101 1 192 1 256 3 236 1 212 1 335 2 311 2 20 1 356 1 
218 1 221 1 256 1 236 1 13 1 26 1 154 1 187 1 173 1 269 1 
145 1 81 1 154 1 26 1 268 1 15 1 269 1 328 1 256 1 210 1 171 1 215 1 165 1 34 1 
145 2 81 1 221 1 13 1 187 1 154 1 26 1 15 1 269 1 328 1 256 1 210 1 171 1 215 2 165 1 
145 1 102 1 170 1 215 1 9 1 
145 2 81 1 102 1 171 1 215 2 9 1 354 1 43 1 
145 1 215 1 9 1 
145 1 218 1 221 1 13 1 117 1 187 1 154 1 26 1 269 1 102 1 256 1 236 1 215 1 173 1 
171 1 
145 2 81 1 102 1 160 1 171 1 215 2 9 1 43 1 
110 2 145 5 81 1 240 1 239 1 146 1 303 1 41 1 68 2 251 1 43 1 102 2 376 2 171 1 215 5 9 2 194 1 79 1 90 1 
148 1 319 1 
151 1 221 1 49 1 13 1 154 2 26 2 187 1 256 2 319 2 
45 1 361 1 257 1 
111 1 47 1 64 1 5 1 26 1 51 1 273 1 256 1 275 1 161 1 366 1 319 1 335 1 299 1 311 1 20 1 
221 3 256 3 319 1 13 1 334 1 26 3 154 3 187 3 
221 1 256 1 26 1 154 1 187 1 173 1 269 1 
151 1 221 1 256 1 49 1 13 1 26 1 154 1 187 1 269 1 
290 1 111 1 151 1 174 1 47 1 221 3 339 1 241 1 359 1 340 1 5 1 26 4 154 3 51 1 202 1 316 1 269 1 87 1 363 1 273 1 179 1 161 1 30 2 366 1 319 1 299 1 369 1 165 1 145 1 64 1 13 2 187 3 15 1 328 1 329 1 256 4 210 1 236 1 215 1 334 1 335 1 20 1 311 1 356 1 
221 1 256 2 319 1 334 1 26 2 154 2 187 1 34 1 60 1 
145 1 151 1 174 1 221 3 241 1 13 1 187 3 154 3 26 3 269 1 15 1 328 1 256 3 210 1 309 1 171 1 215 1 334 2 165 1 
151 1 221 2 13 1 187 2 154 2 26 2 45 1 256 2 334 1 257 1 
111 1 47 1 64 1 5 1 26 1 51 1 273 1 256 1 161 1 366 1 319 1 335 1 299 1 311 1 20 1 
47 1 64 1 26 1 51 1 273 1 256 1 161 1 366 1 319 1 288 1 335 1 299 1 289 1 311 1 20 1 
290 1 183 1 92 1 95 1 339 1 340 1 42 1 70 1 316 1 45 1 361 1 87 2 329 2 30 2 298 1 257 1 369 1 248 1 356 1 
157 1 221 1 210 1 256 1 26 1 154 1 187 1 269 1 
111 1 174 1 47 1 221 1 64 1 5 1 187 1 154 1 26 2 51 1 45 1 273 1 256 2 161 1 366 1 334 1 299 1 335 1 20 1 311 1 
151 1 174 1 221 4 96 1 13 1 187 4 154 5 26 5 308 1 256 5 319 1 334 2 34 1 60 1 
157 1 221 2 256 2 26 2 154 2 187 2 173 1 269 1 
271 1 230 1 
271 1 230 1 
222 1 294 1 
222 1 294 1 
222 1 294 1 
271 1 230 1 209 1 
271 1 230 1 297 1 
271 2 230 2 2 1 222 1 216 1 294 1 
271 1 230 1 209 1 
271 1 230 1 209 1 
271 1 230 1 249 1 
271 1 230 1 249 1 
271 1 230 1 249 1 
230 2 145 2 2 1 184 1 83 2 113 2 223 2 153 1 50 1 282 1 136 3 295 1 271 2 364 2 124 1 171 1 215 2 368 1 217 2 
221 2 83 1 223 1 24 1 136 1 154 2 26 2 271 1 245 1 364 1 297 1 319 1 32 1 58 1 230 1 145 1 282 1 187 2 100 1 256 2 215 1 213 1 214 1 217 1 
84 1 333 1 292 1 
84 1 292 1 336 1 
220 1 168 1 84 3 333 2 304 1 336 1 
220 1 84 2 333 1 304 1 128 1 336 1 
220 1 84 2 333 1 304 2 336 1 
110 1 263 1 133 1 81 1 23 1 264 1 341 2 118 1 343 2 181 1 226 1 9 1 32 1 58 1 248 1 301 2 92 1 145 5 281 1 97 3 146 1 303 2 68 1 233 1 251 3 43 1 100 1 102 4 376 1 215 5 171 2 196 1 
110 2 81 1 263 1 23 2 264 3 341 6 293 5 343 6 246 1 181 3 226 3 9 6 57 1 182 1 248 3 92 3 145 9 185 1 97 9 146 1 303 6 129 1 41 1 68 2 233 2 251 8 43 1 100 4 102 7 374 1 376 2 170 5 215 9 171 5 196 3 
110 1 81 1 133 1 23 1 264 1 341 2 118 1 343 2 181 2 226 1 248 1 301 1 92 1 145 3 97 4 303 2 68 1 41 1 233 1 251 3 100 1 102 2 376 1 171 3 215 3 196 1 
110 1 81 1 133 1 23 1 264 2 341 4 118 1 343 4 181 3 226 2 57 1 182 1 248 2 301 2 92 2 145 4 97 7 303 4 129 1 68 1 41 1 233 1 251 5 100 2 102 3 376 1 171 4 215 4 196 2 
273 1 148 1 323 1 
273 1 360 1 
348 1 
273 1 64 1 
109 1 273 3 323 2 350 1 64 1 299 1 
273 1 64 1 299 1 
198 1 273 1 
92 1 95 2 35 1 346 1 42 3 130 1 27 1 317 1 87 3 362 2 329 7 212 4 320 1 226 1 321 1 150 1 345 1 
92 1 95 2 35 1 346 1 42 3 130 1 27 1 317 1 87 3 362 2 329 7 212 4 320 1 226 1 321 1 150 1 345 1 
92 1 95 2 35 1 346 1 42 3 130 1 27 1 317 1 87 3 362 2 329 7 74 1 212 4 320 1 226 1 321 1 150 1 345 1 
82 1 264 3 314 1 340 1 52 1 27 1 316 1 317 1 87 15 362 3 178 3 53 1 30 2 320 2 226 4 321 1 369 1 10 1 248 3 345 5 92 4 95 5 35 2 346 2 130 2 42 10 16 1 167 4 329 31 103 1 212 16 150 1 356 1 196 3 
92 1 95 3 35 1 346 1 314 1 340 2 42 4 130 1 27 1 316 2 190 1 87 4 362 2 329 9 212 5 30 4 7 1 320 1 226 1 321 1 150 1 369 2 345 1 356 2 
112 1 175 1 47 1 84 2 4 1 48 1 200 2 292 1 51 1 176 1 141 1 227 1 228 1 300 1 33 1 371 2 305 1 306 1 254 1 307 1 17 1 168 1 19 1 333 1 104 1 335 1 172 1 311 1 20 1 336 1 
112 1 175 1 47 1 84 2 48 1 200 3 292 1 51 1 137 1 180 1 141 1 227 1 228 1 300 1 33 1 371 3 305 1 306 1 307 1 255 1 168 1 17 1 333 1 19 2 104 1 335 1 172 1 311 1 20 1 336 1 
112 1 175 1 47 1 84 2 48 1 200 2 51 1 137 1 292 1 180 1 228 1 227 1 300 1 371 2 306 1 17 1 168 1 19 2 333 1 104 1 335 1 172 1 311 1 20 1 336 1 
108 1 371 1 47 1 64 1 238 1 200 1 39 1 51 1 243 1 305 1 273 1 255 1 204 1 366 1 104 2 335 1 228 2 227 2 20 1 311 1 300 2 143 1 33 1 
175 1 47 1 84 2 4 1 200 1 292 1 51 1 137 1 176 1 141 1 227 1 228 1 300 1 33 1 371 1 305 1 307 1 17 1 168 1 333 1 104 1 335 1 172 1 311 1 20 1 336 1 
331 1 
108 1 110 1 291 2 47 1 152 1 238 1 242 1 51 2 154 1 54 2 9 6 59 1 165 1 62 1 64 1 347 1 12 2 303 2 66 1 67 1 68 1 251 2 15 1 256 1 210 1 171 2 215 5 76 2 311 2 20 1 260 1 262 1 81 1 26 1 138 2 268 1 269 1 86 2 273 1 28 4 365 2 366 2 181 2 34 1 278 1 145 5 97 2 38 1 146 1 233 1 43 3 328 1 191 1 376 1 335 2 
260 1 145 3 152 1 38 1 242 1 154 1 26 1 268 1 43 1 269 1 15 1 328 1 191 1 28 2 365 1 160 1 210 1 256 1 215 3 9 2 165 1 34 1 
260 1 145 3 81 1 152 1 38 1 242 1 154 1 26 1 268 1 43 1 269 1 15 1 328 1 191 1 28 3 54 1 160 1 210 1 256 1 171 1 215 3 9 1 165 1 34 1 
260 1 81 1 152 1 242 1 26 1 154 1 268 1 269 1 28 3 365 1 54 1 160 1 9 2 165 1 34 1 145 3 38 1 43 1 15 1 328 1 191 1 256 1 210 1 215 3 171 1 76 1 
110 1 291 2 152 1 242 1 154 1 54 4 160 1 9 7 59 1 165 1 62 1 12 2 303 1 68 1 251 1 15 1 210 1 256 1 215 5 171 5 76 4 259 1 260 1 81 5 26 1 138 2 268 1 269 1 86 2 28 6 365 4 181 2 34 1 91 1 145 5 38 1 146 1 43 3 328 1 99 1 191 1 283 1 330 1 376 1 
110 1 260 1 291 2 81 1 152 1 242 1 154 1 26 1 138 2 268 1 269 1 86 2 28 4 54 2 365 2 9 4 181 2 59 1 165 1 34 1 62 1 145 4 347 1 97 2 12 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 328 1 191 1 376 1 256 1 210 1 171 2 215 4 76 2 
110 1 260 1 291 2 81 1 152 1 242 1 26 1 154 1 138 2 268 1 269 1 86 2 28 4 54 2 365 2 9 4 181 2 59 1 165 1 34 1 62 1 145 4 12 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 99 1 328 1 191 1 330 1 376 1 256 1 210 1 171 1 215 4 76 2 259 1 
110 1 260 1 291 2 81 1 152 1 242 1 26 1 154 1 138 2 268 1 269 1 86 2 28 4 54 2 365 2 9 4 181 2 59 1 165 1 34 1 62 1 145 4 12 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 99 1 328 1 191 1 330 1 376 1 256 1 210 1 171 1 215 4 76 2 259 1 
110 1 260 1 291 2 81 1 80 1 152 1 242 1 26 1 154 1 138 2 268 1 269 1 28 4 54 2 365 2 29 1 9 4 56 2 229 1 165 1 34 1 62 1 145 4 97 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 99 1 328 1 191 1 376 1 256 1 210 1 171 1 215 4 76 2 78 2 
110 1 260 1 291 2 81 1 152 1 242 1 26 1 154 1 138 2 268 1 269 1 86 2 28 5 365 3 54 3 181 2 9 5 59 1 165 1 34 1 62 1 145 4 12 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 99 1 328 1 191 1 283 1 330 1 376 1 256 1 210 1 171 1 215 4 76 3 259 1 
110 1 260 1 291 2 81 1 152 1 242 1 26 1 154 1 138 2 268 1 269 1 86 2 28 5 365 3 54 3 181 2 9 5 59 1 165 1 34 1 62 1 145 4 12 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 99 1 328 1 191 1 283 1 330 1 376 1 256 1 210 1 171 1 215 4 76 3 259 1 
110 1 260 1 291 2 81 1 80 1 152 1 242 1 154 1 26 1 138 2 268 1 269 1 28 4 54 2 365 2 9 4 56 2 165 1 34 1 62 1 145 4 347 1 97 2 38 1 146 1 303 1 68 1 251 1 43 2 15 1 328 1 191 1 376 1 256 1 210 1 171 1 215 4 76 2 78 2 
290 1 339 1 340 1 27 1 316 1 87 3 361 1 362 1 30 2 320 1 319 2 226 1 321 1 369 1 92 1 95 2 35 1 42 2 70 1 45 1 329 6 148 1 212 3 257 1 150 1 356 1 
290 1 82 1 264 3 199 1 339 2 340 2 316 2 87 7 361 13 363 1 178 3 276 1 30 4 319 1 89 1 8 1 226 3 369 2 248 1 345 2 92 1 324 1 42 2 45 13 16 2 167 4 329 17 212 10 257 3 355 1 356 2 196 3 
290 1 111 1 174 1 47 1 221 1 339 1 5 1 340 1 51 1 26 2 154 1 316 1 87 1 363 1 273 1 275 1 318 1 161 1 366 1 30 2 319 1 277 1 299 1 369 1 64 1 324 1 187 1 329 2 256 2 212 1 334 1 335 1 257 1 77 1 20 1 311 1 355 1 356 1 
290 2 111 1 47 1 338 1 339 2 340 2 5 1 51 1 154 1 119 1 121 1 161 1 299 1 345 2 64 1 256 2 212 3 257 2 311 1 355 1 20 1 356 2 132 1 174 1 221 1 264 1 26 2 316 2 87 2 361 2 363 1 273 1 179 1 366 1 30 4 226 1 369 2 187 1 42 2 45 2 329 5 334 1 105 1 335 1 196 1 
290 2 108 1 221 1 47 2 339 2 238 1 340 2 137 1 26 1 154 1 51 8 267 1 316 2 87 1 363 1 273 3 366 2 30 4 126 1 369 2 370 1 324 1 64 2 40 1 187 1 70 1 254 1 329 2 101 2 284 1 235 1 256 1 286 1 212 1 334 1 335 8 20 2 311 7 356 2 
290 1 151 1 221 1 264 1 339 1 340 1 154 1 26 1 316 1 361 1 87 2 30 2 226 1 369 1 248 1 92 1 95 1 13 1 187 1 42 1 45 1 329 3 256 1 212 1 257 1 353 1 355 1 356 1 196 1 
290 1 322 1 339 1 340 1 42 1 70 1 316 1 45 1 361 1 329 2 30 2 212 2 226 1 257 1 369 1 345 1 356 1 196 1 
290 1 183 1 92 1 95 1 339 1 340 1 42 1 70 1 316 1 45 1 361 1 87 2 329 2 30 2 257 1 369 1 248 1 356 1 
290 1 264 1 339 1 340 1 316 1 361 2 87 2 30 2 226 1 369 1 248 1 345 1 92 1 95 1 42 2 70 1 45 2 329 4 212 2 257 2 196 1 356 1 
290 1 322 1 339 1 340 1 40 1 42 1 316 1 45 1 361 1 329 2 30 2 212 2 226 1 257 1 369 1 345 1 356 1 196 1 
290 1 183 1 92 1 95 1 339 1 340 1 40 1 42 1 316 1 45 1 361 1 87 2 329 2 30 2 257 1 369 1 248 1 356 1 
290 1 264 1 339 1 340 1 40 1 42 1 316 1 45 1 361 1 329 2 30 2 212 2 226 1 257 1 369 1 345 1 356 1 196 1 
290 1 264 1 339 1 340 1 42 1 316 1 45 1 361 1 329 2 30 2 212 2 226 1 257 1 369 1 345 1 356 1 196 1 
290 1 111 1 47 1 339 1 5 1 340 1 51 1 26 1 316 1 87 1 363 1 273 1 179 1 161 1 366 1 30 2 319 1 299 1 369 1 324 1 64 1 329 2 256 1 212 1 335 1 20 1 311 1 356 1 
290 1 47 1 339 1 340 1 51 1 26 1 316 1 120 1 87 1 363 1 273 1 161 1 366 1 30 2 319 1 299 1 369 1 324 1 64 1 329 2 256 1 212 1 288 1 335 1 289 1 20 1 311 1 356 1 
290 1 264 1 339 1 340 1 42 1 316 1 45 1 361 1 329 2 30 2 212 2 226 1 257 1 369 1 355 1 345 1 356 1 196 1 
132 1 290 1 111 1 47 1 264 1 339 1 5 1 340 1 51 1 26 1 316 1 361 1 273 1 179 1 161 1 30 2 226 1 299 1 369 1 345 1 64 1 42 1 254 1 45 1 329 2 256 1 212 2 257 1 335 1 20 1 311 1 196 1 356 1 
290 1 151 1 221 1 264 1 339 1 340 1 154 1 26 1 316 1 361 1 30 2 247 1 226 1 369 1 345 1 13 1 187 1 42 1 45 1 329 2 256 1 212 2 257 1 355 1 356 1 196 1 
312 1 21 1 82 3 264 2 313 1 201 1 340 2 244 4 316 2 87 12 6 1 178 3 30 4 226 2 206 1 369 2 248 2 345 2 92 2 95 1 69 1 42 3 253 2 190 1 16 1 167 4 329 23 72 1 73 1 212 11 356 2 196 2 
312 1 21 1 82 3 264 2 313 1 201 1 340 2 244 4 316 2 87 12 6 1 178 3 30 4 226 2 206 1 369 2 248 2 345 2 92 2 95 2 69 1 42 4 253 2 190 1 16 1 167 4 329 23 72 1 73 1 212 11 356 2 196 2 
312 1 21 1 82 2 264 5 313 1 201 1 340 1 244 4 27 3 316 1 87 24 362 3 6 1 178 4 30 2 320 3 8 2 226 8 321 3 369 1 248 5 345 5 92 8 95 8 35 3 42 13 253 1 190 1 16 2 167 4 329 51 72 1 73 1 212 27 150 3 356 1 196 5 
312 2 21 1 82 1 264 3 201 1 340 2 244 2 316 2 177 1 87 10 6 1 178 1 30 4 226 3 369 2 248 3 345 3 92 3 95 3 69 1 42 6 253 1 190 1 16 1 167 2 329 19 72 1 212 9 356 2 196 3 
21 1 312 1 82 2 264 1 313 1 201 1 340 1 244 4 316 1 87 8 6 2 178 2 30 2 226 1 369 1 248 1 92 1 253 2 190 1 329 16 167 2 72 1 73 1 212 8 356 1 196 1 
295 1 271 1 230 1 2 1 83 1 223 1 364 1 50 1 217 1 189 1 
24 1 297 1 
279 1 271 1 230 1 83 1 223 1 364 1 162 1 205 1 217 1 
145 1 230 1 2 1 184 1 83 1 113 1 223 1 50 1 282 1 136 2 295 1 271 1 364 1 124 1 171 1 215 1 368 1 217 1 
145 1 230 1 2 1 184 1 83 1 113 1 223 1 50 1 282 1 136 2 295 1 271 1 364 1 124 1 171 1 215 1 368 1 217 1 
145 1 230 1 2 1 184 1 83 1 113 1 223 1 50 1 282 1 136 2 295 1 271 1 364 1 124 1 171 1 215 1 368 1 217 1 
209 1 134 1 216 1 
209 1 134 1 216 1 
249 1 372 1 
216 1 249 1 372 1 
245 1 214 1 
261 1 113 1 83 1 221 2 223 1 24 1 136 1 26 2 154 2 271 1 245 1 364 1 297 1 319 1 368 1 32 1 58 1 145 1 230 1 187 2 100 1 102 1 256 2 215 1 213 1 214 1 217 1 
209 1 134 1 
216 1 249 1 372 1 
290 1 47 1 339 1 340 1 51 2 26 2 154 2 316 1 87 1 363 1 273 1 296 1 30 2 163 1 369 1 144 1 232 1 64 1 324 1 147 1 329 2 101 2 235 1 256 2 286 1 212 1 335 2 20 1 355 1 311 2 356 1 
175 1 47 1 84 2 116 1 292 1 137 1 51 2 14 1 254 1 307 1 168 1 17 1 333 1 104 1 335 2 20 1 311 2 336 1 107 1 
175 1 47 1 84 2 135 1 292 1 137 1 51 1 307 1 168 1 17 1 333 1 104 1 335 1 311 1 20 1 336 1 107 1 
108 1 47 1 64 1 238 1 39 1 51 1 14 1 273 1 352 1 366 1 104 1 335 1 20 1 311 1 
175 1 47 1 84 2 116 1 292 1 137 1 51 1 14 1 307 1 168 1 17 1 333 1 104 1 335 1 311 1 20 1 336 1 107 1 
285 1 
81 1 148 1 171 1 240 1 239 1 303 1 251 1 
110 1 145 1 81 1 97 1 12 1 146 1 303 1 68 1 251 1 43 1 86 1 376 1 215 1 171 2 9 1 181 1 59 1 
110 4 109 1 198 2 47 4 240 1 239 1 51 3 341 6 119 2 343 6 159 2 55 2 9 5 299 3 248 2 64 3 11 2 303 8 68 4 250 2 251 9 254 1 215 5 171 8 20 3 311 3 262 1 81 2 358 1 264 2 265 2 360 3 224 1 25 1 88 1 273 10 366 1 181 6 226 2 145 5 92 2 323 2 36 1 37 2 97 12 146 4 233 2 43 3 328 2 376 4 46 2 379 2 335 3 196 2 
110 1 262 1 218 1 81 1 221 1 82 1 313 1 117 1 26 1 154 1 341 2 269 1 343 2 178 1 181 1 142 1 11 1 97 2 146 1 13 1 303 2 187 1 68 1 233 1 251 2 167 1 376 1 256 1 236 1 171 2 379 1 173 1 
110 1 218 1 221 1 117 1 154 1 26 1 269 1 320 1 226 1 145 1 92 1 35 1 11 1 146 1 303 1 13 1 68 1 187 1 251 2 18 1 376 1 256 1 236 1 215 1 379 2 259 1 173 1 
110 1 81 1 239 1 146 1 240 1 303 1 68 1 251 1 376 1 171 1 
92 2 264 2 11 1 97 10 303 5 341 5 251 5 119 1 343 5 171 5 226 2 181 5 379 2 248 2 196 2 
145 1 81 1 171 1 215 1 9 1 43 1 
110 2 108 1 262 2 358 2 47 1 238 1 51 4 88 1 123 1 273 1 366 2 9 4 145 3 231 1 64 1 146 1 66 1 67 1 303 2 41 1 68 2 233 2 251 2 43 2 376 2 215 3 335 4 20 1 311 4 
290 1 111 1 221 2 47 1 339 1 5 1 340 1 51 1 26 3 154 2 202 1 316 1 87 1 363 1 273 1 179 1 161 1 30 2 366 1 319 1 299 1 369 1 64 1 13 2 187 2 329 1 256 3 236 1 335 1 311 1 20 1 356 1 
110 1 262 1 81 2 97 4 146 1 303 2 341 2 68 1 233 1 251 1 362 1 343 2 376 1 171 4 181 2 
272 1 223 1 217 1 
245 1 223 1 50 1 378 1 217 1 
272 1 223 1 217 1 
272 1 223 1 217 1 
223 1 217 1 188 1 
223 1 217 1 188 1 
223 1 217 1 188 1 
223 1 217 1 
271 1 230 1 
82 1 264 2 313 1 314 1 340 2 27 1 316 2 87 8 362 1 178 1 203 1 140 1 30 4 320 2 226 4 321 1 369 2 248 1 345 4 92 3 95 5 35 2 373 1 42 9 44 1 190 1 329 20 167 1 18 1 212 12 150 1 356 2 196 2 
82 1 264 3 313 1 314 1 340 3 27 1 316 3 87 8 362 1 122 1 203 1 178 1 140 1 30 6 320 1 226 4 321 1 369 3 248 1 345 2 92 2 95 3 35 1 373 1 42 5 44 1 190 1 16 1 329 20 167 2 212 12 150 1 356 3 196 3 
82 1 313 1 340 2 27 1 316 2 87 5 362 1 122 1 178 1 30 4 320 2 226 2 321 1 369 2 345 1 92 2 95 3 35 2 42 4 190 1 329 11 167 1 18 1 212 6 150 1 356 2 
82 1 313 1 340 2 27 1 316 2 87 5 362 1 122 1 178 1 30 4 320 2 226 2 321 1 369 2 345 3 92 2 95 4 35 2 42 7 190 1 329 11 167 1 18 1 212 6 150 1 356 2 
82 1 264 2 313 1 314 1 340 2 27 1 316 2 87 8 362 1 178 1 203 1 140 1 30 4 320 2 226 4 321 1 369 2 248 1 345 4 92 3 95 5 35 2 373 1 42 9 44 1 190 1 329 20 167 1 18 1 212 12 150 1 356 2 196 2 
82 1 313 1 340 1 316 1 190 1 87 1 167 1 329 2 178 1 212 1 30 2 369 1 356 1 
82 1 313 1 340 2 316 2 190 1 87 1 122 1 167 1 329 2 178 1 212 1 30 4 369 2 356 2 
82 1 313 1 340 2 69 1 316 2 190 1 87 1 167 1 329 2 178 1 212 1 30 4 369 2 356 2 
92 1 95 3 35 3 42 6 27 1 87 4 329 7 212 3 320 3 226 1 321 1 150 2 345 3 
82 1 313 1 340 2 69 1 316 2 190 1 87 1 167 1 329 2 178 1 212 1 30 4 369 2 356 2 
92 1 95 2 35 1 340 2 314 1 42 3 27 1 316 2 87 4 362 1 329 8 212 4 30 4 320 1 226 1 321 1 369 2 150 1 345 1 356 2 
92 1 95 2 35 1 42 2 27 1 87 3 362 1 329 6 148 1 212 3 320 1 226 1 321 1 150 1 
92 1 95 1 264 1 340 1 42 2 316 1 87 2 122 1 329 4 30 2 212 2 226 1 369 1 248 1 356 1 196 1 345 1 
92 1 95 1 82 1 264 1 42 2 87 4 16 1 167 2 329 7 178 1 212 3 226 1 248 1 196 1 345 1 
264 2 199 1 314 2 340 2 27 1 316 2 87 12 362 1 158 1 178 2 30 4 320 2 226 3 8 1 321 1 369 2 248 2 345 4 92 3 95 5 35 2 42 9 16 1 329 23 167 2 212 11 150 1 196 2 356 2 
87 1 329 1 167 1 
329 1 178 1 212 1 
92 1 95 2 264 1 340 1 42 3 316 1 119 1 87 3 122 1 329 6 30 2 212 3 226 1 369 1 248 1 356 1 196 1 345 1 
82 1 313 1 340 1 316 1 190 1 87 1 167 1 329 2 178 1 212 1 30 2 369 1 356 1 
92 1 95 1 35 1 42 2 27 1 87 3 329 6 212 3 320 1 226 1 345 1 
95 1 35 1 314 1 340 1 42 2 316 1 87 2 158 1 329 3 212 1 30 2 320 1 321 1 150 1 369 1 345 1 356 1 
92 1 95 2 35 1 340 1 42 4 316 1 190 1 87 3 329 6 18 1 30 2 212 3 320 1 226 1 369 1 356 1 345 2 
340 1 42 1 316 1 190 1 329 2 30 2 212 2 226 1 369 1 356 1 196 1 345 1 
92 1 95 1 264 1 340 1 42 2 316 1 190 1 87 2 329 4 30 2 212 2 226 1 369 1 248 1 356 1 196 1 345 1 
95 1 35 1 314 1 340 3 69 1 42 2 316 3 190 1 87 2 158 1 329 3 30 6 212 1 320 1 369 3 356 3 345 1 
82 1 264 3 314 2 340 5 52 1 27 2 316 5 87 18 362 1 122 1 158 1 178 3 53 1 30 10 320 3 226 5 321 1 10 1 369 5 248 3 345 5 92 5 95 7 35 3 69 1 42 12 190 1 16 1 167 4 329 34 212 16 150 1 356 5 196 3 
274 1 256 1 319 1 26 1 154 1 34 1 60 1 
22 1 337 1 65 1 154 1 26 1 274 1 256 1 319 1 149 1 164 1 60 1 34 1 
108 1 273 1 47 1 148 1 64 1 238 1 366 1 51 1 335 1 20 1 311 1 
111 1 47 1 221 1 64 1 187 1 154 1 26 2 51 1 273 1 256 2 161 1 366 1 319 1 334 1 299 1 335 1 311 1 20 1 
198 1 111 1 47 1 221 1 358 1 64 2 187 2 154 2 26 2 51 1 269 1 273 3 46 1 210 1 256 2 161 1 319 1 334 1 299 2 335 1 165 1 311 1 20 1 
0 1 198 1 358 1 221 1 47 1 51 2 26 2 154 2 269 1 273 3 161 1 319 1 299 2 165 1 64 2 187 2 46 1 256 2 210 1 334 1 335 2 289 1 20 1 311 2 
0 1 198 1 81 1 358 1 47 1 360 1 51 3 273 4 366 1 9 1 299 1 145 2 323 1 64 1 328 1 234 1 46 1 131 1 215 2 171 1 335 3 20 1 311 3 
0 1 198 1 145 2 81 1 47 1 358 1 323 1 64 1 360 1 51 3 328 1 273 4 159 1 46 1 366 1 171 1 215 2 9 1 299 1 335 3 311 3 20 1 
47 1 284 1 51 1 335 1 20 1 311 1 
109 1 370 1 47 3 64 2 137 1 51 7 267 1 156 1 254 1 101 1 273 3 284 1 235 1 344 1 366 2 193 1 126 1 335 7 299 1 311 6 20 2 
290 2 111 1 47 1 338 1 339 2 5 1 340 2 51 1 154 1 161 1 299 1 345 1 64 1 254 1 18 1 256 2 212 5 257 1 311 1 355 1 20 1 356 2 132 1 221 1 26 2 27 1 269 1 316 2 87 5 361 1 362 1 273 1 179 1 30 4 320 2 319 2 367 1 226 2 321 1 369 2 92 2 232 1 95 4 35 2 187 1 42 5 45 1 329 10 334 1 335 1 150 1 
110 2 81 1 240 1 239 1 360 1 51 1 88 1 273 2 159 1 55 1 366 1 9 2 145 3 323 1 37 1 146 2 303 1 68 2 250 1 251 1 43 1 328 1 102 1 376 2 171 1 215 3 335 1 311 1 
109 1 47 2 323 1 64 1 224 1 51 2 254 1 273 2 284 1 335 2 299 1 311 2 20 1 
0 1 108 1 47 1 238 1 64 1 51 4 254 1 273 1 366 1 335 4 311 4 20 1 357 1 
358 1 47 2 64 1 115 1 186 1 51 2 156 1 273 1 344 1 332 1 335 2 299 1 311 2 20 1 
47 1 17 1 84 1 366 1 292 1 51 1 335 1 20 1 311 1 336 1 
254 1 273 1 47 1 235 1 64 1 163 1 137 1 51 2 335 2 20 1 311 2 
108 1 358 1 47 2 238 1 64 2 51 5 267 1 254 1 273 3 235 1 366 1 335 5 126 1 311 4 20 2 357 1 
108 1 358 1 47 2 238 1 64 2 51 5 85 1 254 1 273 3 235 1 366 1 335 5 126 1 311 4 20 2 357 1 
47 1 221 1 64 1 187 1 154 1 26 2 51 1 273 1 256 2 161 1 366 1 319 1 334 1 299 1 335 1 289 1 311 1 20 1 
109 1 358 1 47 2 64 1 51 1 156 1 273 1 344 1 193 1 335 1 299 1 311 1 20 1 
256 1 114 1 296 1 310 1 26 1 154 1 147 1 106 1 144 1 
280 1 114 1 31 1 
114 1 319 1 310 1 106 1 155 1 
145 2 81 1 280 1 114 1 241 1 155 2 269 1 15 1 328 1 102 1 210 1 319 1 171 1 215 2 310 2 287 1 31 1 106 2 165 1 
306 1 112 1 148 1 48 1 
306 1 371 1 112 1 48 1 200 1 33 1 305 1 
200 1 228 1 300 1 
371 3 112 1 48 1 200 3 326 1 176 1 305 1 306 1 349 2 211 1 33 1 197 1 
306 1 371 2 112 1 125 1 48 1 200 2 19 1 33 1 305 1 
93 1 371 1 84 1 48 1 200 1 333 1 292 1 195 1 176 1 33 1 305 1 
306 1 371 1 48 1 200 1 176 1 33 1 305 1 
306 2 371 1 112 1 200 1 176 1 33 1 305 1 
371 2 325 1 48 1 200 2 266 1 176 1 305 2 306 1 207 1 33 2 
63 1 371 3 112 1 200 3 48 2 166 1 176 1 305 1 306 1 169 1 19 2 195 1 33 1 
371 2 112 1 84 2 48 1 200 2 225 1 292 1 176 1 305 1 306 1 168 1 333 1 19 1 336 1 33 1 
63 1 371 4 1 1 112 1 200 4 48 2 176 1 305 2 306 1 125 1 19 2 195 1 33 2 
306 1 371 1 112 1 48 1 200 1 176 1 33 1 305 1 
63 1 371 4 112 2 326 1 200 4 48 3 315 1 305 1 306 2 349 1 19 2 195 1 197 1 33 1 
371 2 112 1 48 1 200 2 176 1 305 1 139 1 306 1 342 1 351 1 19 1 33 1 
371 3 112 1 48 1 200 3 326 2 176 1 305 1 306 1 71 1 349 2 197 1 33 1 
375 2 377 1 48 2 258 1 
270 1 371 1 200 1 176 1 33 1 305 1 
306 1 371 2 112 1 48 1 200 2 19 1 166 1 176 1 33 1 305 1 
327 1 
306 1 371 1 112 1 48 1 200 1 176 1 33 1 305 1 
306 1 349 1 371 3 112 1 48 1 200 3 19 1 166 1 176 1 33 1 305 1 
63 1 48 1 195 1 315 1 
306 1 48 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) 51 228 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) 51 20 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (210,288) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) (177,235,282) 201 175 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 17 37 58 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 17 37 58 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 17 37 58 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 17 37 58 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 17 37 58 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (210,288) (210,288) 162 (196,344) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (210,288) (210,288) 162 (281,341) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (210,288) (210,288) (177,235,282) 51 353 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 1 74 1 130 9 219 2 154 1 325 6 159 1 113 1 114 1 272 4 136 1 306 2 229 1 64 2 207 1 40 1 308 2 280 1 234 2 122 3 284 2 67 1 21 1 311 5 99 9 259 1 261 2 22 1 
197 1 74 1 130 9 219 2 154 1 325 6 159 1 113 1 114 1 272 4 136 1 306 2 229 1 64 2 207 1 40 1 308 2 280 1 234 2 122 3 284 2 67 1 21 1 311 5 99 9 259 1 261 2 22 1 
197 1 74 1 130 10 219 2 154 1 325 7 159 1 113 1 114 1 272 5 136 1 306 2 229 1 64 2 207 1 40 1 308 2 280 1 234 2 122 4 284 2 67 1 21 1 311 6 99 10 259 1 261 2 22 1 
197 1 74 1 130 7 219 2 154 1 325 4 159 1 113 1 114 1 272 3 136 1 306 2 229 1 64 2 40 1 308 2 280 1 234 1 122 2 284 2 67 1 21 1 311 4 99 7 259 1 261 2 22 1 
159 1 113 1 272 2 229 1 64 1 207 1 130 4 40 1 308 1 234 2 219 1 122 1 284 1 311 3 99 4 261 1 22 1 325 3 
159 1 114 1 306 1 229 1 64 1 130 2 45 1 40 1 308 1 350 1 284 1 21 1 311 1 99 2 261 1 24 1 
159 1 272 1 306 1 229 1 64 2 130 3 40 1 280 1 122 1 311 2 99 3 261 2 325 1 
74 1 130 9 219 1 220 1 325 7 159 1 113 1 272 4 136 1 306 1 229 1 64 2 207 1 40 1 280 1 192 1 308 1 234 2 122 3 284 1 311 5 99 9 261 2 22 1 
74 1 130 9 219 1 220 1 325 7 159 1 113 1 272 4 136 1 306 1 229 1 64 2 207 1 40 1 280 1 192 1 308 1 234 2 122 3 284 1 311 5 99 9 261 2 22 1 
110 1 342 1 286 1 
79 2 290 1 342 1 
104 2 346 2 34 2 77 2 184 1 140 2 238 2 30 1 
104 3 174 2 291 1 238 2 44 2 264 1 77 3 241 1 184 1 29 1 30 1 344 1 31 1 301 2 223 1 346 2 34 2 112 1 63 1 225 1 161 1 162 1 116 1 49 1 165 1 166 1 38 1 307 1 16 2 249 1 170 1 171 1 138 1 140 2 68 2 333 1 335 1 
104 1 346 1 34 1 327 1 72 1 77 1 200 1 140 1 238 1 30 1 
104 1 282 1 72 1 77 1 288 1 73 1 210 1 140 1 177 1 
104 1 346 1 282 1 34 1 72 1 77 1 288 1 210 1 140 1 238 1 
235 1 125 1 213 1 254 1 123 1 
111 1 235 2 125 1 86 1 213 2 342 1 123 1 286 1 
235 1 125 1 213 1 
346 1 104 1 34 1 327 1 72 1 213 1 200 1 238 1 76 1 235 1 77 1 140 1 123 1 30 1 
342 1 
111 1 235 2 125 1 213 2 342 1 123 1 286 1 187 1 
111 1 85 2 213 5 125 2 126 1 263 1 276 1 348 2 235 5 151 2 139 1 181 1 242 1 342 1 256 1 123 2 83 1 286 1 300 1 
110 1 184 1 
104 2 346 1 248 1 34 1 238 1 77 2 351 1 184 2 140 2 
292 1 155 1 97 1 
223 1 104 1 112 1 63 1 174 1 162 1 291 1 166 1 44 1 77 1 241 1 184 1 68 1 245 1 344 1 31 1 
223 1 346 1 104 2 34 1 112 1 63 1 174 1 162 1 291 1 166 1 44 1 77 2 241 1 140 1 68 1 344 1 244 1 97 1 31 1 299 1 
104 3 346 3 34 3 77 3 184 1 140 3 238 1 244 1 
104 1 346 1 34 1 72 1 77 1 200 1 140 1 
104 1 346 1 34 1 248 1 72 1 77 1 351 1 140 1 238 1 
346 2 104 2 34 2 248 1 72 1 288 1 228 1 238 1 282 1 51 1 77 2 210 1 140 2 244 1 299 1 
104 2 346 1 34 1 77 2 73 1 184 1 322 1 140 2 244 1 
346 1 104 1 34 1 72 1 288 1 282 1 51 1 77 1 20 1 140 1 210 1 244 1 299 1 
346 2 104 2 248 1 34 2 238 1 77 2 140 2 155 1 244 1 97 1 
223 1 104 1 112 1 63 1 174 1 162 1 291 1 166 1 44 1 77 1 241 1 184 1 68 1 344 1 31 1 
223 1 104 1 112 1 63 1 226 1 174 1 162 1 291 1 166 1 44 1 77 1 184 1 341 1 68 1 31 1 
54 1 55 1 292 2 7 1 134 1 153 1 266 1 155 2 301 4 326 1 62 1 225 1 161 2 116 1 117 1 49 1 38 1 16 2 249 1 91 1 170 1 138 2 258 1 97 2 
104 1 346 1 34 1 72 1 77 1 288 1 66 1 140 1 
346 4 104 5 34 4 248 1 48 1 73 1 238 1 77 5 322 1 184 1 140 5 244 2 299 1 32 1 
104 2 346 2 34 2 72 1 77 2 66 1 200 1 140 2 
144 1 204 1 
144 1 204 1 
71 1 253 1 
71 1 253 1 
71 1 253 1 
93 1 144 1 204 1 
1 1 71 1 253 1 9 1 144 2 204 2 
328 1 144 1 204 1 
328 1 144 1 204 1 
328 1 144 1 204 1 
330 1 144 1 204 1 
330 1 144 1 204 1 
330 1 144 1 204 1 
47 1 314 1 103 2 1 1 213 2 214 1 275 1 339 1 15 2 149 2 235 2 257 1 342 1 96 1 324 2 158 2 345 3 204 2 144 2 
103 1 104 2 213 1 237 1 202 1 106 1 149 1 77 2 184 1 324 1 345 1 158 1 204 1 346 2 34 2 275 1 235 1 283 1 65 1 93 1 140 2 337 1 144 1 313 1 
219 1 284 1 308 1 
284 1 24 1 308 1 
70 1 219 2 284 3 14 1 349 1 24 1 
219 1 284 2 323 1 14 1 349 1 24 1 
219 1 284 2 14 2 349 1 24 1 
101 1 2 1 125 1 213 5 290 1 151 1 7 1 79 3 342 2 83 2 300 1 326 1 12 1 111 1 302 1 85 1 205 2 117 1 348 1 36 1 250 2 231 1 18 1 235 5 65 1 283 1 139 3 123 4 69 2 258 1 337 1 286 1 
124 1 2 2 146 1 125 6 213 9 289 1 290 3 28 1 133 1 151 2 7 3 79 9 342 5 83 6 268 1 300 1 326 3 12 2 302 1 111 1 85 2 117 3 348 2 250 6 231 3 235 9 283 4 139 8 254 5 256 1 123 7 69 6 258 3 286 1 100 5 
104 1 2 1 72 1 213 3 200 1 290 2 238 1 76 1 151 1 77 1 7 1 79 4 342 3 30 1 83 2 326 1 12 1 346 1 34 1 327 1 85 1 205 1 117 1 348 1 36 1 250 2 231 1 18 1 235 3 283 1 139 3 140 1 256 1 123 2 258 1 69 2 286 1 
2 1 146 1 213 2 290 2 151 1 7 1 79 4 342 2 83 2 326 1 12 1 85 1 205 1 117 1 348 1 36 1 250 2 231 1 18 1 235 2 283 1 139 3 256 1 123 1 69 2 258 1 
110 1 63 1 296 1 
63 1 212 1 
227 1 
223 1 63 1 
223 1 63 3 296 2 291 1 230 1 269 1 
223 1 63 1 291 1 
63 1 150 1 
55 3 161 4 26 1 278 1 265 1 7 1 138 3 52 1 80 2 309 1 266 2 157 1 236 1 23 1 195 1 301 7 326 1 
55 3 161 4 26 1 278 1 265 1 7 1 138 3 52 1 80 2 309 1 266 2 157 1 236 1 23 1 195 1 301 7 326 1 
55 3 161 4 26 1 147 1 278 1 265 1 7 1 138 3 52 1 80 2 309 1 266 2 157 1 236 1 23 1 195 1 301 7 326 1 
55 10 26 1 176 1 265 1 108 1 7 4 80 3 243 1 266 5 157 2 301 31 326 4 161 16 116 1 49 1 117 3 278 1 38 1 16 2 231 3 170 1 252 1 332 1 138 15 121 1 309 1 52 5 194 3 258 3 98 4 236 2 23 2 195 2 53 1 
55 4 26 1 7 1 80 2 266 3 157 1 301 9 326 1 347 1 161 5 115 1 116 2 49 2 38 2 278 1 16 4 170 2 138 4 121 1 52 1 309 1 236 1 195 1 23 1 
70 1 199 1 174 1 44 1 130 2 293 1 219 1 78 1 240 1 156 1 31 1 325 1 159 1 306 1 229 1 89 1 64 1 166 1 40 1 308 1 119 1 209 1 284 2 68 1 211 1 311 1 99 2 261 1 260 1 24 1 
70 1 199 1 174 1 44 1 319 1 130 3 293 1 219 1 78 1 240 1 156 1 31 1 325 2 306 1 229 1 64 1 166 1 40 1 308 1 209 1 120 1 233 1 284 2 68 1 211 1 311 1 99 3 261 1 260 1 24 1 
70 1 199 1 174 1 44 1 319 1 130 2 293 1 219 1 240 1 156 1 31 1 325 2 306 1 229 1 166 1 40 1 308 1 209 1 120 1 284 2 68 1 211 1 311 1 99 2 24 1 
223 1 112 1 63 1 199 2 105 1 3 1 174 1 163 1 306 2 315 1 64 1 166 1 44 1 130 1 118 1 293 2 233 1 68 1 211 2 31 1 99 1 261 1 247 1 
70 1 199 1 174 1 44 1 319 1 130 1 293 1 219 1 78 1 240 1 156 1 31 1 159 1 306 1 64 1 166 1 308 1 119 1 209 1 284 2 68 1 211 1 99 1 261 1 260 1 24 1 
180 1 
104 1 2 1 72 1 213 2 125 2 288 1 174 2 3 1 105 1 73 1 175 1 201 1 44 2 129 1 148 1 177 1 132 1 151 1 77 1 203 1 31 1 83 1 300 1 223 1 111 1 112 2 63 1 85 1 166 1 348 1 137 1 282 1 235 2 139 1 210 1 140 1 68 2 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 111 1 72 1 213 2 125 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 2 77 1 203 1 210 1 140 1 187 1 
104 1 85 1 72 1 213 1 288 1 73 1 175 1 201 1 348 1 148 1 177 1 282 1 235 1 151 1 77 1 203 1 210 1 140 1 300 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 72 1 213 1 288 1 175 1 73 1 201 1 148 1 177 1 282 1 235 1 77 1 203 1 210 1 140 1 
104 1 85 1 72 1 213 1 288 1 73 1 175 1 201 1 348 1 148 1 177 1 282 1 235 1 151 1 77 1 203 1 210 1 140 1 300 1 
54 1 55 2 26 1 292 1 7 1 80 1 184 2 266 2 155 1 157 1 301 6 326 1 110 1 225 1 161 3 116 1 49 1 278 1 38 1 16 2 249 1 170 1 138 3 309 1 97 1 23 1 
198 1 55 2 216 1 317 1 292 11 152 1 7 1 184 1 266 1 155 4 301 14 326 2 225 2 161 8 116 2 49 2 117 1 38 2 307 1 208 1 16 4 249 1 231 2 170 2 252 1 138 6 52 1 194 3 258 2 335 1 98 3 97 11 53 1 
104 2 173 1 198 1 174 1 291 1 44 1 5 1 77 2 241 1 184 1 155 1 344 1 245 1 244 1 31 1 299 1 301 2 223 1 346 1 112 1 34 1 63 1 225 1 162 1 161 1 116 1 166 1 49 1 38 1 307 1 249 1 16 2 170 1 138 1 172 1 140 1 68 1 335 1 
174 3 127 2 44 3 319 1 46 2 7 3 77 3 80 1 184 2 266 4 326 3 223 2 225 3 49 3 278 1 16 6 279 1 231 2 92 2 138 10 52 4 140 1 335 1 97 7 23 1 104 3 198 1 55 8 26 1 291 2 292 7 107 1 241 2 29 2 155 7 244 1 344 2 157 1 299 1 31 2 301 20 346 1 112 1 34 1 63 2 162 2 161 10 164 2 116 3 167 1 166 2 117 2 38 3 307 1 249 3 170 3 309 1 68 3 258 2 
104 1 54 1 174 7 3 1 105 1 44 8 319 1 131 1 27 1 77 1 244 1 31 2 301 2 223 2 346 1 34 1 112 2 33 1 63 3 225 2 87 1 189 1 161 1 89 1 116 2 166 2 49 2 38 2 307 1 16 4 249 2 170 2 138 1 140 1 68 8 193 1 285 1 333 2 335 1 
104 1 198 1 55 1 238 1 292 1 321 1 77 1 7 1 266 1 155 1 301 3 326 1 346 1 248 1 34 1 225 1 161 1 116 1 49 1 117 1 38 1 16 2 249 1 231 1 170 1 138 2 140 1 258 1 97 1 
54 1 55 1 225 1 161 2 116 1 49 1 38 1 249 1 16 2 292 1 170 1 153 1 52 1 155 1 258 1 97 1 301 2 326 1 
54 1 55 1 225 1 116 1 49 1 117 1 38 1 249 1 16 2 91 1 292 1 170 1 7 1 138 2 266 1 155 1 97 1 301 2 
54 1 55 2 292 2 7 1 266 1 155 2 301 4 326 1 225 1 161 2 116 1 49 1 117 1 38 1 16 2 249 1 231 1 170 1 138 2 52 1 258 1 97 2 
55 1 225 1 189 1 161 2 116 1 49 1 38 1 249 1 16 2 292 1 170 1 153 1 52 1 155 1 258 1 97 1 301 2 326 1 
55 1 225 1 189 1 116 1 49 1 117 1 38 1 249 1 16 2 91 1 292 1 170 1 7 1 138 2 266 1 155 1 97 1 301 2 
55 2 292 2 7 1 266 1 155 2 301 4 326 1 225 1 189 1 161 2 116 1 49 1 117 1 38 1 16 2 249 1 231 1 170 1 138 2 52 1 258 1 97 2 
55 2 292 2 7 1 266 1 155 2 301 4 326 1 225 1 161 2 116 1 49 1 117 1 38 1 16 2 249 1 231 1 170 1 138 2 52 1 258 1 97 2 
104 1 174 1 291 1 44 1 77 1 241 1 184 1 29 1 344 1 31 1 301 2 223 1 112 1 63 1 225 1 161 1 162 1 116 1 166 1 49 1 38 1 307 1 249 1 16 2 170 1 138 1 68 1 335 1 
104 1 174 1 291 1 44 1 77 1 184 1 341 1 31 1 301 2 223 1 112 1 63 1 226 1 225 1 161 1 162 1 116 1 166 1 49 1 38 1 307 1 249 1 16 2 251 1 170 1 138 1 68 1 335 1 
198 1 55 2 292 2 7 1 266 1 155 2 301 4 326 1 225 1 161 2 116 1 49 1 117 1 38 1 16 2 249 1 231 1 170 1 138 2 52 1 258 1 97 2 
104 1 55 2 174 1 291 1 127 1 44 1 292 2 7 1 77 1 241 1 266 1 29 1 155 2 344 1 31 1 301 4 326 1 223 1 63 1 225 1 161 2 162 1 89 1 116 1 117 1 166 1 49 1 38 1 249 1 16 2 231 1 170 1 138 2 52 1 68 1 258 1 97 2 
104 1 198 1 55 1 43 1 238 1 292 1 7 1 77 1 155 1 301 3 326 1 346 1 248 1 34 1 225 1 161 2 116 1 117 1 49 1 38 1 16 2 249 1 231 1 170 1 138 1 52 1 140 1 258 1 97 1 
170 1 19 1 347 1 58 1 116 1 49 1 37 1 38 1 16 2 17 1 
170 1 19 1 347 1 58 1 116 1 49 1 37 1 38 1 16 2 17 1 
170 1 19 1 347 1 58 1 116 1 49 1 37 1 38 1 16 2 17 1 
170 1 19 1 347 1 58 1 116 1 49 1 37 1 38 1 16 2 17 1 
170 1 19 1 347 1 58 1 116 1 49 1 37 1 38 1 16 2 17 1 
47 1 149 1 103 1 1 1 95 1 257 1 324 1 158 1 144 1 204 1 
93 1 202 1 
149 1 103 1 35 1 4 1 75 1 324 1 158 1 144 1 204 1 
47 1 314 1 103 1 1 1 213 1 275 1 339 1 15 1 149 1 235 1 257 1 342 1 96 1 324 1 158 1 345 2 204 1 144 1 
47 1 314 1 103 1 1 1 213 1 275 1 339 1 15 1 149 1 235 1 257 1 342 1 96 1 324 1 158 1 345 2 204 1 144 1 
47 1 314 1 103 1 1 1 213 1 275 1 339 1 15 1 149 1 235 1 257 1 342 1 96 1 324 1 158 1 345 2 204 1 144 1 
328 1 352 1 9 1 
328 1 352 1 9 1 
343 1 330 1 
343 1 9 1 330 1 
106 1 313 1 
104 2 103 1 213 1 237 1 202 1 106 1 149 1 77 2 184 1 324 1 158 1 345 1 204 1 346 2 34 2 188 1 15 1 235 1 283 1 65 1 93 1 140 2 123 1 96 1 337 1 144 1 313 1 
328 1 352 1 
343 1 9 1 330 1 
104 2 198 1 174 2 44 2 77 2 183 1 31 1 186 1 301 2 223 1 33 1 63 1 225 1 87 1 273 1 161 1 116 1 166 1 49 1 38 1 168 1 307 1 249 1 16 2 170 1 138 1 140 2 68 2 354 1 333 2 335 1 
70 1 174 2 89 1 166 1 44 2 319 1 308 1 219 1 78 1 240 1 284 2 68 2 211 1 31 1 156 1 24 1 221 1 11 1 355 1 
70 1 174 1 166 1 44 1 319 1 308 1 219 1 78 1 240 1 284 2 68 1 267 1 211 1 156 1 31 1 24 1 11 1 
223 1 112 1 63 1 271 1 174 1 3 1 105 1 166 1 44 1 118 1 68 1 211 1 31 1 221 1 
70 1 174 1 166 1 44 1 319 1 308 1 219 1 78 1 240 1 284 2 68 1 211 1 31 1 156 1 24 1 221 1 11 1 355 1 
206 1 
110 1 126 1 139 1 342 1 276 1 83 1 286 1 
125 1 213 1 290 1 151 1 79 1 342 2 83 1 300 1 111 1 85 1 348 1 191 1 235 1 139 1 312 1 286 1 142 1 
2 2 125 5 213 5 126 1 174 3 316 1 129 1 44 3 7 2 79 12 185 2 135 2 83 8 222 1 326 2 223 3 224 2 85 4 89 1 276 1 230 1 50 2 231 2 235 5 139 9 334 2 286 2 336 2 196 2 56 1 290 6 57 2 291 3 239 1 151 4 150 2 296 2 342 8 31 4 300 4 111 3 112 1 63 10 304 2 164 2 166 3 348 4 117 2 250 6 41 1 68 3 69 6 258 2 212 3 
2 1 213 1 125 1 290 3 129 1 178 1 151 2 218 1 7 2 79 6 340 1 185 2 342 5 297 1 82 1 83 5 300 2 326 2 111 1 85 2 304 1 190 1 348 2 117 2 169 1 250 5 231 2 235 1 139 8 69 5 194 1 258 2 98 1 286 2 53 1 
104 1 72 1 213 1 200 1 26 1 238 1 320 1 76 1 151 1 77 1 7 1 185 2 30 1 157 1 83 2 300 1 326 2 346 1 34 1 13 1 85 1 327 1 304 1 348 1 235 1 139 2 140 1 23 1 
85 1 126 1 276 1 348 1 151 1 139 1 342 1 83 1 300 1 286 1 
304 1 290 5 164 1 117 2 250 5 231 2 7 2 79 10 139 5 185 2 342 5 258 2 69 5 83 5 326 2 
111 1 235 1 213 1 125 1 342 1 286 1 
2 2 125 4 213 3 174 4 3 1 105 1 56 1 44 4 129 2 132 1 239 2 151 2 31 1 83 2 300 1 223 1 111 2 112 2 63 1 85 2 305 1 166 1 348 2 137 1 232 1 235 3 139 2 256 1 68 4 
104 3 174 1 238 2 291 1 44 1 264 1 77 3 241 1 184 1 29 1 30 1 344 1 31 1 301 1 223 1 346 2 112 1 34 2 63 1 225 1 162 1 116 1 49 1 166 1 38 1 307 1 16 2 249 1 170 1 138 1 140 2 68 1 
85 1 2 1 290 2 348 1 129 1 250 2 151 1 79 4 80 1 139 1 342 4 69 2 83 2 300 1 286 2 
103 1 295 1 257 1 324 1 313 1 
103 1 262 1 324 1 
103 1 262 1 324 1 
103 1 262 1 324 1 
103 1 324 1 143 1 
103 1 324 1 143 1 
103 1 324 1 143 1 
103 1 324 1 
144 1 204 1 
55 3 161 4 26 1 116 2 49 2 38 2 278 1 16 4 170 2 7 1 138 4 121 1 80 1 52 1 309 1 266 2 157 1 301 8 23 1 326 1 
110 1 55 2 161 3 26 1 278 1 7 1 138 3 80 1 309 1 266 2 157 1 23 1 301 6 326 1 
55 2 161 2 215 1 116 1 117 1 49 1 38 1 16 2 231 1 170 1 7 1 138 2 52 1 266 1 258 1 301 4 326 1 
55 2 161 3 117 1 231 1 7 1 252 1 138 4 52 1 266 1 194 1 258 1 98 2 301 7 53 1 326 1 
55 9 26 1 216 1 7 3 80 1 8 1 266 5 157 2 301 23 326 3 161 11 116 2 117 2 49 2 278 1 38 2 208 1 16 4 231 2 170 2 252 1 138 12 121 2 309 1 52 4 258 2 194 2 98 2 23 2 
138 1 98 1 301 1 
161 1 194 1 301 1 
55 3 161 3 215 1 164 1 116 1 49 1 117 1 38 1 16 2 231 1 170 1 7 1 138 3 52 1 266 2 258 1 301 6 326 1 
55 2 178 1 7 2 340 1 266 1 297 1 82 1 301 12 326 2 347 1 161 6 116 1 49 1 117 2 38 1 169 1 16 2 231 2 170 1 138 6 52 1 194 1 258 2 98 1 53 1 
55 2 161 3 26 1 7 1 138 3 52 1 266 1 157 1 301 6 23 1 326 1 
55 2 161 1 116 1 49 1 278 1 38 1 16 2 170 1 138 2 121 1 52 1 309 1 8 1 266 1 157 1 23 1 301 3 
13 1 55 5 347 1 161 5 26 1 116 1 49 1 38 1 16 2 170 1 7 2 138 5 52 2 266 3 157 2 23 2 301 10 326 2 
55 1 347 1 161 2 116 1 49 1 38 1 16 2 170 1 52 1 258 1 301 2 326 1 
55 2 347 1 161 2 116 1 117 1 49 1 38 1 16 2 231 1 170 1 7 1 138 2 52 1 266 1 258 1 301 4 326 1 
55 2 347 1 161 1 116 3 49 3 38 3 16 6 170 3 121 1 138 2 52 1 8 1 310 1 266 1 157 1 301 3 23 1 
55 12 26 2 215 1 176 1 108 1 7 5 80 1 8 1 266 7 157 3 301 34 326 5 347 1 161 16 116 5 49 5 117 3 278 1 38 5 16 10 231 3 170 5 332 1 252 1 121 2 138 18 309 1 52 5 310 1 194 3 258 3 98 4 23 3 53 1 
55 2 26 1 7 1 80 1 266 2 157 1 301 8 326 1 347 1 161 4 116 1 49 1 38 1 278 1 169 1 16 2 170 1 138 4 309 1 194 1 98 1 23 1 53 1 
55 3 26 1 215 1 7 1 80 1 266 2 157 1 301 11 326 2 347 1 161 6 116 2 49 2 278 1 38 2 169 1 16 4 231 1 170 2 252 1 138 5 309 1 52 1 194 1 258 1 98 2 23 1 53 1 
55 4 26 1 215 1 178 1 7 3 340 1 80 1 266 3 297 1 157 1 82 1 301 19 326 3 347 1 161 9 116 3 49 3 117 2 278 1 38 3 169 1 16 6 231 2 170 3 138 10 121 1 309 1 52 1 194 1 258 2 98 1 23 1 53 1 
55 5 26 1 215 1 178 1 7 2 340 1 80 1 266 3 297 1 157 1 82 1 301 17 326 3 347 1 161 10 116 3 49 3 117 1 278 1 38 3 169 1 16 6 231 2 170 3 121 1 138 7 309 1 52 2 194 1 258 2 98 1 23 1 53 1 
55 2 26 1 7 1 80 1 266 2 157 1 301 8 326 1 347 1 161 4 116 1 49 1 38 1 278 1 169 1 16 2 170 1 138 4 309 1 194 1 98 1 23 1 53 1 
55 2 178 1 7 2 340 1 266 1 297 1 82 1 301 12 326 2 347 1 161 6 116 1 49 1 117 2 38 1 169 1 16 2 231 2 170 1 138 6 52 1 194 1 258 2 98 1 53 1 
55 5 26 1 215 1 178 1 7 2 340 1 80 1 266 3 297 1 157 1 82 1 301 18 326 3 347 1 161 10 116 4 49 4 117 1 278 1 38 4 169 1 16 8 231 2 170 4 138 8 121 2 309 1 52 2 194 1 258 2 98 1 23 1 53 1 
55 6 178 1 7 2 340 1 266 3 297 1 82 1 301 16 326 3 347 1 161 9 116 4 49 4 117 2 38 4 169 1 16 8 231 3 170 4 138 7 121 2 52 3 310 1 194 1 258 3 98 1 53 1 
55 6 161 3 26 1 278 2 7 1 138 4 309 1 52 3 266 3 157 3 301 7 23 3 326 1 
55 4 26 1 178 1 7 2 340 1 80 1 266 3 297 1 157 1 82 1 301 18 326 3 347 1 161 10 116 4 49 4 117 1 278 1 38 4 169 1 16 8 231 2 170 4 138 8 121 2 309 1 52 1 310 1 194 1 258 2 98 1 23 1 53 1 
104 1 217 1 77 1 73 1 184 1 322 1 140 1 
104 1 303 1 73 1 90 1 329 1 128 1 217 1 77 1 184 1 322 1 140 1 246 1 
223 1 110 1 112 1 63 1 105 1 3 1 174 1 68 1 166 1 31 1 44 1 
223 1 346 1 104 2 34 1 112 1 63 1 174 1 162 1 291 1 166 1 44 1 77 2 184 1 140 1 68 1 244 1 344 1 31 1 
223 1 346 1 104 1 34 1 63 1 72 1 288 1 174 1 162 1 291 1 166 1 44 1 239 1 77 1 210 1 140 1 68 1 244 1 344 1 31 1 
223 1 346 1 104 1 34 1 63 1 72 1 288 1 174 1 162 1 291 1 166 1 44 1 239 1 77 1 341 1 210 1 140 1 68 1 244 1 31 1 
104 1 72 1 125 1 213 2 174 2 200 1 238 1 291 1 44 2 76 1 239 1 150 1 77 1 296 1 342 1 30 1 31 1 10 1 223 1 346 1 224 1 112 1 34 1 327 1 63 4 166 1 281 1 235 2 140 1 68 2 336 1 286 1 212 1 
223 1 196 1 224 1 112 1 63 4 213 2 125 1 174 3 291 1 166 1 44 3 239 1 294 1 150 1 235 2 296 1 342 1 68 3 31 1 286 1 336 1 212 1 
174 1 68 1 166 1 193 1 31 1 44 1 
25 1 223 2 112 2 63 3 87 1 174 6 89 1 291 1 277 1 166 2 44 7 319 1 131 1 230 1 27 1 68 7 333 1 193 1 285 1 298 1 31 3 
104 2 198 1 55 2 174 1 26 1 291 1 127 1 44 1 292 1 7 1 77 2 241 1 80 1 184 2 266 2 29 1 155 1 244 1 344 1 157 1 31 1 301 6 326 1 223 1 346 1 34 1 63 1 225 2 161 3 162 1 273 1 116 2 89 1 166 1 49 2 278 1 38 2 249 2 16 4 170 2 92 1 138 3 309 1 140 1 68 1 97 1 23 1 
196 1 213 3 125 2 126 1 174 1 56 1 57 1 44 1 151 2 296 1 342 1 83 1 300 2 224 1 111 1 112 1 85 2 63 2 276 1 348 2 50 1 235 3 139 1 68 1 123 1 334 1 286 1 212 1 
223 1 63 2 174 2 89 1 291 1 166 1 44 2 230 1 41 1 296 1 68 2 193 1 31 2 
223 1 0 1 112 1 63 1 174 4 3 1 105 1 89 1 166 1 44 4 294 1 68 4 31 1 
223 1 63 1 174 2 291 1 277 1 166 1 44 2 107 1 239 1 182 1 81 1 68 2 298 1 31 2 
112 1 240 1 174 1 284 1 68 1 166 1 31 1 44 1 24 1 308 1 
223 1 63 1 174 2 87 1 89 1 166 1 44 2 319 1 183 1 68 2 31 1 
223 2 0 1 112 1 63 3 105 1 3 1 174 4 87 1 89 1 166 2 44 5 27 1 239 1 68 5 285 1 31 2 
102 1 223 2 0 1 112 1 63 3 105 1 3 1 174 4 87 1 89 1 166 2 44 5 27 1 239 1 68 5 31 2 
223 1 346 1 104 2 34 1 112 1 63 1 174 1 162 1 291 1 166 1 44 1 77 2 184 1 341 1 140 1 68 1 244 1 31 1 
25 1 223 1 63 1 174 1 291 1 277 1 166 1 44 1 230 1 239 1 68 1 298 1 31 2 
184 1 141 1 59 1 318 1 39 1 
72 1 213 1 288 1 274 1 318 1 39 1 179 1 282 1 235 1 51 1 210 1 353 1 59 1 123 1 141 1 
104 1 168 1 39 1 77 1 140 1 141 1 59 1 354 1 186 1 
274 1 353 1 59 1 
110 1 229 1 311 1 40 1 
229 1 64 1 311 1 99 1 130 1 261 1 40 1 
293 1 306 1 130 1 
159 1 145 1 114 2 64 1 229 1 130 3 40 1 255 1 311 1 287 1 99 3 261 1 
234 1 229 1 64 1 311 1 99 2 325 1 130 2 261 1 40 1 
159 1 113 1 272 1 64 1 130 1 308 1 219 1 284 1 311 1 99 1 261 1 
159 1 229 1 64 1 311 1 99 1 130 1 261 1 
159 1 229 2 64 1 99 1 130 1 261 1 40 1 
159 1 270 1 229 1 64 2 130 2 94 1 311 1 99 2 261 2 356 1 
159 1 272 1 136 1 229 1 64 1 74 1 130 3 40 1 122 1 311 2 99 3 261 1 325 2 
159 1 70 1 229 1 64 1 130 2 40 1 308 1 219 1 284 2 311 1 99 2 24 1 261 1 325 1 61 1 
159 1 272 1 229 1 64 2 207 1 130 4 40 1 234 1 122 1 311 2 99 4 261 2 325 2 
159 1 229 1 64 1 311 1 99 1 130 1 261 1 40 1 
145 1 114 1 338 1 272 1 229 2 64 1 130 4 40 2 122 1 255 1 311 3 99 4 325 2 261 1 
159 1 84 1 229 1 64 1 130 2 40 1 6 1 220 1 311 1 99 2 261 1 325 1 
159 1 145 2 114 2 255 1 88 1 229 1 64 1 311 1 99 3 130 3 261 1 40 1 
331 1 109 1 311 2 42 2 
159 1 64 1 60 1 99 1 130 1 261 1 
159 1 229 1 74 1 64 1 311 1 99 2 325 1 130 2 261 1 40 1 
160 1 
159 1 229 1 64 1 311 1 99 1 130 1 261 1 40 1 
159 1 114 1 64 1 229 1 74 1 130 3 40 1 311 1 99 3 325 1 261 1 
338 1 272 1 122 1 311 1 
229 1 311 1 

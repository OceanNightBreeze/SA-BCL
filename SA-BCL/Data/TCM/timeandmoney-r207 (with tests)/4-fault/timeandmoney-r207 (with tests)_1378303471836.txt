#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 1 237 1 1 2 71 1 265 2 346 1 298 1 170 9 221 2 303 1 202 1 11 1 32 6 58 2 328 1 327 4 149 2 128 9 279 1 82 2 62 1 210 3 311 1 45 5 111 1 65 1 258 2 159 1 
363 1 237 1 1 2 71 1 265 2 346 1 298 1 170 9 221 2 303 1 202 1 11 1 32 6 58 2 328 1 327 4 149 2 128 9 279 1 82 2 62 1 210 3 311 1 45 5 111 1 65 1 258 2 159 1 
363 1 237 1 1 2 71 1 265 2 346 1 298 1 170 10 221 2 303 1 202 1 11 1 32 7 58 2 328 1 327 5 149 2 128 10 279 1 82 2 62 1 210 4 311 1 45 6 111 1 65 1 258 2 159 1 
363 1 237 1 1 2 71 1 265 2 346 1 298 1 170 7 221 2 303 1 202 1 11 1 32 4 58 2 328 1 327 3 149 2 128 7 279 1 82 2 62 1 210 2 311 1 45 4 65 1 258 1 159 1 
32 3 363 1 58 1 328 1 327 2 1 1 149 1 128 4 265 1 82 1 298 1 170 4 210 1 45 3 111 1 65 1 258 2 159 1 
11 1 363 1 58 1 1 1 149 1 128 2 265 1 369 1 298 1 170 2 332 1 45 1 221 1 133 1 202 1 159 1 
32 1 363 1 58 2 327 1 128 3 265 2 346 1 298 1 170 3 210 1 45 2 221 1 159 1 
363 1 1 1 71 1 265 2 346 1 298 1 170 9 221 1 32 7 58 2 327 4 328 1 149 1 128 9 279 1 82 1 210 3 63 1 45 5 111 1 65 1 258 2 335 1 159 1 
363 1 1 1 71 1 265 2 346 1 298 1 170 9 221 1 32 7 58 2 327 4 328 1 149 1 128 9 279 1 82 1 210 3 63 1 45 5 111 1 65 1 258 2 335 1 159 1 
185 1 22 1 273 1 
76 2 90 1 273 1 
308 2 5 2 0 1 226 2 46 2 365 2 266 1 23 2 
337 1 69 1 70 1 0 1 261 1 294 1 365 2 264 1 196 1 343 1 266 1 23 3 25 1 240 1 95 1 5 2 325 1 54 1 143 2 99 2 305 1 30 1 33 1 306 1 226 3 80 1 61 1 253 1 308 2 109 2 312 1 187 2 46 2 112 2 288 1 232 1 291 1 
374 1 308 1 5 1 226 1 46 1 365 1 203 1 266 1 321 1 23 1 
374 1 175 1 226 1 23 1 26 1 308 1 185 1 200 1 84 1 272 1 66 1 155 1 190 1 273 1 
374 1 226 1 365 1 23 1 308 1 185 1 5 1 200 1 84 2 46 1 272 2 66 1 155 1 190 1 273 1 
181 1 145 1 217 1 84 1 272 1 
181 1 185 1 145 1 274 1 84 2 272 2 157 1 273 1 
181 1 84 1 272 1 
374 1 145 1 226 1 365 1 321 1 266 1 23 1 308 1 5 1 84 1 46 1 272 1 203 1 243 1 
273 1 
181 1 185 1 145 1 40 1 84 2 272 2 157 1 273 1 
352 1 225 1 145 2 35 1 181 2 209 1 219 1 185 1 254 2 97 1 333 1 84 5 223 2 230 1 272 5 173 2 157 1 273 1 224 1 
0 1 22 1 
13 1 0 2 226 2 365 1 37 1 23 2 308 2 5 1 46 1 
108 1 184 1 47 1 
30 1 70 1 0 1 226 1 294 1 206 1 343 1 23 1 240 1 253 1 54 1 112 1 288 1 143 1 291 1 99 1 
30 1 70 1 294 1 137 1 226 2 365 1 343 1 23 2 240 1 108 1 253 1 308 1 27 1 54 1 46 1 112 1 288 1 143 1 291 1 99 1 
308 3 5 1 0 1 137 1 226 3 46 3 365 3 23 3 
374 1 308 1 226 1 46 1 365 1 203 1 23 1 
374 1 308 1 13 1 5 1 226 1 46 1 365 1 37 1 23 1 
69 1 70 1 0 1 261 1 294 1 137 1 365 3 343 1 266 1 23 4 25 1 240 1 95 1 5 2 27 1 200 1 54 1 272 1 143 1 99 1 305 1 30 1 374 1 33 1 306 1 226 4 105 1 80 1 37 1 253 1 308 3 109 1 211 1 312 1 84 1 187 2 46 3 112 1 288 1 66 1 155 1 232 1 190 1 291 1 
308 2 175 1 0 1 226 2 137 1 113 1 46 1 365 1 23 2 
374 1 137 2 226 3 162 1 365 3 105 1 37 1 23 3 308 3 5 1 27 1 200 1 84 1 46 3 272 1 66 1 155 1 190 1 273 1 
137 1 226 2 365 2 37 1 23 2 308 2 108 1 5 1 46 2 47 1 
30 1 70 1 0 1 226 1 294 1 343 1 23 1 240 1 253 1 54 1 112 1 288 1 143 1 291 1 99 1 
28 1 30 1 70 1 0 1 226 1 23 1 240 1 253 1 54 1 112 1 121 1 288 1 143 1 291 1 99 1 
192 1 338 1 69 1 261 2 21 1 195 1 263 1 196 2 24 1 25 1 95 1 305 1 150 1 356 1 80 1 81 1 14 1 184 2 108 2 183 1 109 4 312 1 187 2 47 2 
100 1 374 1 308 1 226 1 46 1 365 1 190 1 23 1 
175 1 0 1 137 2 226 5 3 1 365 4 167 1 37 1 23 5 308 5 5 1 27 1 113 1 46 4 
100 1 374 1 308 2 226 2 46 2 365 2 203 1 23 2 
88 1 180 1 
88 1 180 1 
154 1 238 1 
154 1 238 1 
154 1 238 1 
88 1 57 1 180 1 
88 1 57 1 180 1 
88 1 180 1 140 1 
88 2 283 1 154 1 238 1 180 2 51 1 
88 1 57 1 180 1 
88 1 83 1 180 1 
88 1 83 1 180 1 
88 1 83 1 180 1 
88 2 136 1 78 1 179 2 339 2 180 2 36 1 4 1 51 1 94 2 199 1 84 2 17 3 272 2 231 1 360 2 158 1 273 1 350 2 
88 1 50 1 0 1 226 2 79 1 179 1 339 1 36 1 180 1 365 2 140 1 23 2 308 2 241 1 378 1 120 1 84 1 17 1 46 2 372 1 272 1 373 1 360 1 350 1 
82 1 1 1 149 1 
1 1 149 1 369 1 
82 2 149 3 161 1 277 1 320 1 369 1 
82 1 153 1 149 2 161 1 277 1 369 1 
82 1 149 2 161 1 277 2 369 1 
338 1 90 1 165 2 263 1 323 2 97 3 76 3 223 1 372 1 173 1 272 5 373 1 98 1 273 2 352 2 145 4 356 1 79 1 208 2 60 1 81 1 181 1 254 1 185 1 131 1 84 5 256 1 287 1 230 1 214 1 157 1 48 1 
217 1 365 1 367 1 368 1 321 1 266 1 23 1 5 1 272 2 203 1 243 1 273 1 374 1 145 2 226 1 181 1 308 1 185 1 377 1 84 2 46 1 
338 1 90 2 165 2 263 1 323 1 97 3 76 4 223 1 173 1 272 3 373 1 98 1 273 3 145 2 352 2 356 1 208 2 81 1 209 1 185 1 254 1 131 1 84 3 256 1 287 1 214 1 
338 2 90 3 165 4 164 1 263 2 116 1 323 2 97 5 76 7 223 1 173 1 272 4 373 2 98 1 273 4 145 3 352 4 356 2 208 4 81 2 209 1 185 1 254 1 212 1 131 1 84 4 256 1 287 2 214 1 
148 1 288 1 22 1 
281 1 288 1 
295 1 
240 1 288 1 
240 1 253 1 130 1 148 2 288 3 379 1 
240 1 253 1 288 1 
151 1 288 1 
29 1 135 1 338 1 126 1 176 1 261 3 21 3 59 1 263 1 196 4 183 2 52 2 109 7 302 1 301 1 55 1 233 1 
29 1 135 1 338 1 126 1 176 1 261 3 21 3 59 1 263 1 196 4 183 2 52 2 109 7 302 1 301 1 55 1 233 1 
29 1 135 1 338 1 126 1 176 1 261 3 21 3 59 1 263 1 196 4 183 2 52 2 109 7 302 1 301 1 43 1 55 1 233 1 
135 2 338 4 292 1 261 15 21 10 73 1 263 4 196 16 25 1 95 1 52 3 301 2 302 5 55 2 174 3 204 1 29 1 305 1 126 1 176 1 34 4 59 2 356 3 355 1 207 1 278 1 80 1 81 3 183 5 109 31 187 2 287 3 359 1 233 1 
135 1 338 1 261 4 21 4 263 1 196 5 25 2 95 2 52 2 301 1 302 1 55 1 124 1 305 2 31 1 126 1 176 1 59 1 355 1 80 2 183 3 109 9 187 4 233 1 
363 1 1 1 265 1 369 1 320 1 298 1 75 1 170 2 299 1 141 1 6 1 54 1 221 1 143 1 99 1 12 1 30 1 32 1 58 1 149 2 227 1 329 1 178 1 307 1 128 2 82 1 45 1 112 1 257 1 159 1 
363 1 1 1 320 1 265 1 369 1 298 1 170 3 299 1 141 1 53 1 6 1 7 1 54 1 221 1 143 1 99 1 12 1 30 1 32 2 58 1 149 2 227 1 329 1 178 1 128 3 82 1 45 1 112 1 257 1 189 1 
363 1 1 1 369 1 320 1 298 1 170 2 141 1 53 1 6 1 54 1 221 1 143 1 99 1 30 1 32 2 149 2 227 1 329 1 178 1 128 2 82 1 45 1 112 1 257 1 189 1 
193 1 260 1 265 1 345 1 240 1 170 1 96 1 7 1 54 1 8 1 221 2 271 1 143 1 99 1 30 1 58 1 227 2 178 2 128 1 112 1 288 1 257 2 291 1 
12 1 30 1 58 1 1 1 149 2 329 1 227 1 307 1 178 1 128 1 320 1 369 1 265 1 82 1 141 1 299 1 170 1 53 1 6 1 54 1 221 1 112 1 257 1 143 1 159 1 99 1 
252 1 
193 1 138 2 340 2 90 2 240 1 200 1 96 1 97 2 54 1 242 1 143 2 98 1 304 4 99 2 245 2 352 2 351 1 357 1 308 1 254 1 313 1 112 2 157 3 66 1 155 1 317 1 362 1 163 2 23 1 26 1 118 1 370 1 76 2 223 1 272 5 173 1 123 2 273 2 30 1 374 1 175 1 226 1 276 1 38 1 181 6 185 1 129 1 84 5 230 1 188 2 86 2 288 1 290 1 190 1 291 2 
362 1 374 1 175 1 226 1 276 1 357 1 23 1 181 2 26 1 308 1 129 1 40 1 200 1 84 3 188 1 272 3 157 1 155 1 66 1 190 1 290 1 304 2 
362 1 340 1 23 1 26 1 200 1 272 3 304 3 273 1 374 1 175 1 226 1 276 1 357 1 181 1 308 1 185 1 129 1 40 1 84 3 66 1 155 1 157 1 290 1 190 1 
362 1 340 1 23 1 26 1 200 1 272 3 304 3 273 1 245 1 374 1 175 1 226 1 276 1 357 1 181 2 308 1 185 1 129 1 40 1 84 3 188 1 157 1 66 1 155 1 290 1 190 1 
138 2 340 4 90 2 200 1 97 1 304 6 245 4 352 1 357 1 308 1 254 1 155 1 66 1 157 3 317 1 362 1 215 1 163 2 23 1 26 1 370 1 223 1 122 1 272 5 173 1 123 2 273 5 374 1 175 1 226 1 276 1 280 1 181 7 185 5 129 1 40 1 84 5 230 1 188 4 85 1 86 2 190 1 290 1 235 1 
138 2 90 2 340 2 200 1 97 1 304 4 245 2 352 1 357 1 308 1 254 1 313 1 317 1 155 1 66 1 157 2 362 1 163 2 23 1 26 1 370 1 76 2 223 1 272 4 173 1 123 2 273 2 374 1 175 1 226 1 276 1 181 4 185 1 129 1 84 4 230 1 86 2 188 2 190 1 290 1 
362 1 215 1 138 2 340 2 163 2 90 2 23 1 26 1 370 1 200 1 97 1 223 1 272 4 173 1 123 2 304 4 273 1 245 2 374 1 352 1 175 1 226 1 276 1 280 1 357 1 181 4 308 1 185 1 254 1 129 1 84 4 230 1 188 2 86 2 157 2 317 1 66 1 155 1 290 1 190 1 235 1 
362 1 215 1 138 2 340 2 163 2 90 2 23 1 26 1 370 1 200 1 97 1 223 1 272 4 173 1 123 2 304 4 273 1 245 2 374 1 352 1 175 1 226 1 276 1 280 1 357 1 181 4 308 1 185 1 254 1 129 1 84 4 230 1 188 2 86 2 157 2 317 1 66 1 155 1 290 1 190 1 235 1 
362 1 115 1 138 2 340 2 168 1 117 1 23 1 26 1 370 1 200 1 97 1 76 2 223 1 272 4 173 1 304 4 273 1 245 2 374 1 352 1 175 1 146 2 226 1 276 1 280 1 357 1 181 4 308 1 185 1 254 1 129 1 84 4 230 1 188 2 86 2 157 2 66 1 155 1 290 1 190 1 49 2 
362 1 215 1 138 2 163 2 90 2 340 3 23 1 26 1 370 1 200 1 97 1 223 1 173 1 272 4 123 2 304 5 273 1 245 3 374 1 352 1 175 1 226 1 276 1 280 1 357 1 181 5 308 1 185 1 254 1 129 1 84 4 230 1 86 2 85 1 188 3 157 2 317 1 66 1 155 1 290 1 190 1 235 1 
362 1 215 1 138 2 163 2 90 2 340 3 23 1 26 1 370 1 200 1 97 1 223 1 173 1 272 4 123 2 304 5 273 1 245 3 374 1 352 1 175 1 226 1 276 1 280 1 357 1 181 5 308 1 185 1 254 1 129 1 84 4 230 1 86 2 85 1 188 3 157 2 317 1 66 1 155 1 290 1 190 1 235 1 
362 1 138 2 340 2 23 1 117 1 26 1 370 1 200 1 97 1 76 2 223 1 173 1 272 4 304 4 273 1 245 2 374 1 352 1 175 1 146 2 226 1 276 1 357 1 181 4 308 1 185 1 254 1 129 1 313 1 84 4 230 1 188 2 86 2 157 2 66 1 155 1 290 1 190 1 49 2 
135 1 69 1 338 1 261 3 0 2 21 2 263 1 22 1 196 3 25 1 95 1 52 1 55 1 305 1 126 1 176 1 80 1 14 1 108 1 183 2 184 1 109 6 312 1 187 2 47 1 233 1 
337 1 69 2 338 1 0 1 261 7 293 1 21 2 364 1 73 1 263 3 196 10 25 2 297 1 95 2 302 1 201 1 174 3 305 2 33 1 34 4 356 3 207 2 250 1 80 2 81 1 183 1 184 13 108 13 109 17 312 1 187 4 287 3 47 4 
337 1 70 1 216 1 69 1 0 1 261 1 294 1 137 1 365 1 196 1 343 1 23 2 240 1 25 1 95 1 27 1 349 1 54 1 222 1 201 1 143 1 99 1 30 1 305 1 33 1 226 2 206 1 80 1 253 1 308 1 109 2 312 1 112 1 46 1 187 2 288 1 47 1 291 1 
337 1 135 1 338 3 0 2 137 1 294 2 196 10 343 2 239 2 240 2 52 1 95 3 53 1 302 4 54 2 201 1 55 1 143 3 99 3 305 3 356 2 248 1 308 1 253 2 108 7 109 20 312 3 112 3 69 3 70 2 160 2 261 10 21 8 365 1 263 3 23 3 25 3 27 1 171 2 371 1 30 2 326 1 126 1 176 1 33 1 226 3 376 2 80 3 81 2 183 4 184 7 187 6 46 1 287 2 288 2 232 2 47 7 233 1 291 1 
337 1 193 1 194 1 69 2 261 1 137 1 365 1 74 1 196 1 166 1 23 1 25 2 240 2 75 1 95 2 53 1 96 1 325 2 54 2 143 8 9 1 99 7 30 2 305 2 33 1 147 1 226 1 80 2 14 1 308 1 109 2 312 2 64 1 46 1 112 8 187 4 288 3 156 1 291 2 
69 1 338 1 261 2 21 1 365 1 263 1 196 1 23 1 25 1 95 1 5 1 142 1 201 1 305 1 226 1 356 1 80 1 37 1 81 1 183 1 108 1 184 1 308 1 109 3 312 1 187 2 46 1 287 1 47 1 
305 1 69 1 21 1 150 1 356 1 263 1 196 2 80 1 14 1 25 1 108 1 184 1 95 1 109 2 302 1 312 1 187 2 47 1 
305 1 192 1 69 1 338 1 261 2 21 1 80 1 14 1 25 1 81 1 183 1 108 1 184 1 95 1 109 2 312 1 187 2 47 1 
69 1 338 1 261 2 21 2 263 1 196 2 25 1 95 1 302 1 305 1 356 1 80 1 14 1 81 1 184 2 108 2 183 1 109 4 312 1 287 1 187 2 47 2 
305 1 69 1 21 1 150 1 356 1 263 1 74 1 196 2 80 1 25 1 108 1 184 1 95 1 109 2 302 1 312 1 187 2 47 1 
305 1 192 1 69 1 338 1 261 2 21 1 74 1 80 1 25 1 81 1 183 1 108 1 184 1 95 1 109 2 312 1 187 2 47 1 
69 1 338 1 261 2 21 2 263 1 196 2 74 1 25 1 95 1 302 1 305 1 356 1 80 1 81 1 184 2 108 2 183 1 109 4 312 1 287 1 187 2 47 2 
69 1 338 1 261 2 21 2 263 1 196 2 25 1 95 1 302 1 305 1 356 1 80 1 81 1 184 2 108 2 183 1 109 4 312 1 287 1 187 2 47 2 
337 1 70 1 69 1 0 1 261 1 294 1 196 1 343 1 23 1 240 1 25 1 95 1 54 1 143 1 99 1 30 1 305 1 33 1 226 1 80 1 253 1 109 2 312 1 112 1 187 2 288 1 232 1 291 1 
337 1 70 1 69 1 0 1 261 1 196 1 23 1 240 1 25 1 95 1 54 1 121 1 143 1 99 1 28 1 30 1 305 1 33 1 226 1 80 1 253 1 109 2 312 1 112 1 187 2 334 1 288 1 291 1 
69 1 338 1 261 2 21 2 263 1 196 2 25 1 95 1 302 1 201 1 305 1 356 1 80 1 81 1 184 2 108 2 183 1 109 4 312 1 287 1 187 2 47 2 
338 1 70 1 69 1 261 2 21 2 294 1 263 1 196 2 343 1 23 1 240 1 25 1 75 1 95 1 302 1 54 1 143 1 99 1 30 1 305 1 226 1 356 1 376 1 80 1 81 1 183 1 108 2 184 2 253 1 109 4 312 1 112 1 187 2 287 1 288 1 47 2 232 1 
338 1 69 1 261 1 21 1 365 1 263 1 196 2 23 1 25 1 95 1 5 1 302 1 201 1 305 1 226 1 356 1 80 1 37 1 81 1 308 1 184 1 108 1 109 3 312 1 187 2 46 1 287 1 316 1 47 1 
338 3 19 1 261 10 21 6 73 1 342 1 139 1 263 3 196 9 267 2 25 2 95 2 302 3 174 1 56 2 125 1 124 1 305 2 34 2 177 1 356 3 207 1 80 2 81 3 183 3 109 19 285 1 255 1 187 4 287 3 
338 2 19 1 261 12 21 4 73 2 263 3 196 14 267 4 25 3 95 3 302 2 174 2 10 1 56 1 125 2 124 1 144 1 305 3 354 1 177 2 34 2 355 2 356 3 80 3 81 2 183 2 109 26 285 1 310 1 41 1 255 1 44 1 187 6 287 3 
135 1 338 5 139 1 196 22 93 1 95 3 52 1 302 4 55 1 10 1 144 1 56 1 305 3 354 1 356 5 355 1 207 2 109 44 310 1 255 1 19 1 261 22 21 8 73 3 263 6 267 4 25 3 174 3 124 1 125 1 126 1 176 1 177 2 34 5 80 3 81 4 183 4 285 1 41 1 44 1 287 5 187 6 233 1 
135 1 338 5 19 1 261 21 21 8 73 3 139 1 263 6 196 22 267 4 25 4 93 1 52 1 95 4 302 3 55 1 174 3 10 1 56 1 144 1 125 1 124 1 305 4 126 1 176 1 354 1 34 5 177 2 355 2 356 5 207 2 80 4 81 4 183 5 109 43 285 1 310 1 41 1 255 1 44 1 187 8 287 5 233 1 
135 1 338 8 19 1 261 25 21 14 364 2 73 2 263 8 196 27 267 4 25 2 52 1 95 2 302 7 55 1 174 4 10 1 56 1 144 1 125 1 124 1 305 2 126 1 176 1 354 1 34 4 177 1 355 1 356 7 207 2 80 2 81 7 183 7 109 52 285 1 310 1 41 1 255 1 44 1 187 4 287 7 233 1 
88 1 199 1 319 1 78 1 339 1 179 1 180 1 360 1 51 1 350 1 
120 1 140 1 
88 1 259 1 247 1 324 1 339 1 179 1 180 1 360 1 350 1 
88 1 78 1 179 1 339 1 36 1 180 1 4 1 51 1 94 1 199 1 84 1 17 2 272 1 231 1 360 1 158 1 273 1 350 1 
88 1 78 1 179 1 339 1 36 1 180 1 4 1 51 1 94 1 199 1 84 1 17 2 272 1 231 1 360 1 158 1 273 1 350 1 
88 1 78 1 179 1 339 1 36 1 180 1 4 1 51 1 94 1 199 1 84 1 17 2 272 1 231 1 360 1 158 1 273 1 350 1 
169 1 283 1 57 1 
169 1 283 1 57 1 
39 1 83 1 
39 1 283 1 83 1 
50 1 378 1 
88 1 50 1 0 1 339 1 365 2 23 2 140 1 94 1 241 1 120 1 372 1 272 1 373 1 350 1 145 1 226 2 179 1 79 1 180 1 152 1 308 2 378 1 84 1 17 1 46 2 231 1 360 1 
169 1 57 1 
39 1 283 1 83 1 
87 1 337 1 191 1 194 1 69 1 261 1 196 1 23 2 240 1 25 1 95 1 348 1 325 2 54 1 201 1 143 2 9 1 99 2 30 1 305 1 101 1 353 1 33 1 226 2 80 1 308 2 109 2 312 1 112 2 187 2 288 1 
12 1 30 1 1 1 89 1 149 2 178 1 320 1 369 1 82 1 282 1 75 1 141 1 53 1 6 1 54 1 112 2 143 2 336 1 99 2 
12 1 30 1 1 1 149 2 178 1 320 1 369 1 91 1 82 1 141 1 53 1 6 1 54 1 112 1 143 1 336 1 99 1 
30 1 193 1 89 1 375 1 178 1 240 1 345 1 96 1 54 1 112 1 288 1 143 1 291 1 99 1 
12 1 30 1 1 1 89 1 149 2 178 1 320 1 369 1 82 1 282 1 141 1 53 1 6 1 54 1 112 1 143 1 336 1 99 1 
286 1 
185 1 352 1 225 1 97 1 333 1 22 1 273 1 
90 1 163 1 97 1 76 1 223 1 173 1 272 1 123 1 273 2 352 1 181 1 254 1 185 1 84 1 230 1 317 1 157 1 
236 2 338 2 90 6 344 1 240 3 200 2 97 9 54 4 143 3 98 2 99 3 352 8 148 2 356 2 151 2 208 6 107 1 251 2 253 3 254 4 314 2 112 3 157 3 67 1 318 2 72 2 366 2 165 6 218 2 263 2 75 1 171 2 76 12 223 4 173 4 272 5 273 8 30 3 225 1 182 1 38 1 281 3 181 5 81 2 185 2 333 1 84 5 287 2 230 4 288 10 379 1 289 2 291 1 134 1 
338 2 318 1 90 3 165 5 73 1 263 2 97 8 76 6 223 2 272 1 173 2 98 1 174 1 10 1 273 5 144 1 352 5 354 1 34 1 356 2 106 1 208 5 38 1 181 1 81 2 254 2 185 2 41 1 84 1 44 1 287 2 230 2 157 1 68 1 289 2 
135 1 215 1 338 1 318 1 365 1 263 2 321 1 266 1 23 1 268 1 5 1 97 2 223 1 173 1 272 1 55 1 203 1 243 1 374 1 126 1 352 2 226 1 308 1 254 1 84 1 46 1 230 1 289 2 
225 1 352 1 254 1 185 1 97 1 333 1 223 1 230 1 173 1 273 1 
352 5 338 2 318 1 356 2 90 5 165 5 263 2 208 5 81 2 171 1 97 5 76 10 287 2 289 2 273 5 
181 1 185 1 84 1 272 1 157 1 273 1 
193 1 2 1 240 1 118 1 97 2 96 1 54 1 223 2 173 2 272 3 143 4 98 2 99 4 205 1 30 1 351 1 352 2 182 2 181 4 38 2 209 1 254 2 84 3 112 4 230 1 288 1 157 2 67 1 291 2 
70 1 69 1 0 1 261 1 294 1 365 2 343 1 266 1 23 3 25 1 240 1 95 1 5 2 54 1 143 1 99 1 305 1 30 1 33 1 306 1 226 3 80 1 308 2 253 1 109 1 312 1 187 2 112 1 46 2 288 1 232 1 291 1 
352 2 90 2 165 2 208 2 38 1 52 1 254 1 185 2 97 1 76 4 223 1 230 1 173 1 98 1 273 4 
20 1 339 1 350 1 
20 1 339 1 350 1 
50 1 199 1 103 1 339 1 350 1 
20 1 339 1 350 1 
269 1 339 1 350 1 
269 1 339 1 350 1 
269 1 339 1 350 1 
339 1 350 1 
88 1 180 1 
305 2 135 1 338 1 126 1 176 1 261 4 21 3 355 1 263 1 196 4 80 2 25 2 183 2 52 1 95 2 109 8 302 1 187 4 55 1 233 1 
135 1 126 1 338 1 176 1 261 3 21 2 263 1 22 1 196 3 183 2 52 1 109 6 55 1 233 1 
305 1 338 1 261 2 21 2 356 1 263 1 196 2 80 1 81 1 25 1 183 1 95 1 119 1 109 4 302 1 187 2 287 1 
338 1 261 4 34 2 21 2 356 1 73 1 207 1 263 1 196 3 81 1 183 1 109 7 302 1 287 1 174 1 
135 2 338 3 261 12 21 9 364 1 263 3 196 11 25 2 52 1 297 1 95 2 302 4 172 1 55 2 174 2 305 2 126 1 176 1 34 2 356 2 355 2 207 1 80 2 81 2 183 5 109 23 287 2 187 4 233 1 
109 1 261 1 34 1 
109 1 196 1 174 1 
305 1 338 1 261 3 21 3 356 1 263 1 196 3 80 1 25 1 81 1 183 2 95 1 119 1 109 6 171 1 302 1 187 2 287 1 
338 2 261 6 21 2 73 1 263 2 196 6 25 1 95 1 302 1 174 1 10 1 144 1 124 1 305 1 354 1 34 1 356 2 80 1 81 2 183 1 109 12 41 1 44 1 187 2 287 2 
135 1 126 1 338 1 261 3 21 2 263 1 196 3 183 1 109 6 302 1 55 1 
135 1 305 1 176 1 261 2 21 2 355 1 196 1 80 1 25 1 183 1 95 1 109 3 302 1 187 2 172 1 55 1 233 1 
124 1 305 1 135 2 126 1 338 2 261 5 21 5 263 2 196 5 80 1 25 1 268 1 183 3 95 1 109 10 302 2 187 2 55 2 
124 1 305 1 21 1 356 1 263 1 196 2 80 1 25 1 95 1 109 2 302 1 187 2 
124 1 305 1 338 1 261 2 21 2 356 1 263 1 196 2 80 1 81 1 25 1 183 1 95 1 109 4 302 1 187 2 287 1 
124 1 305 3 135 1 261 2 21 2 355 1 139 1 196 1 80 3 25 3 183 1 95 3 109 3 302 1 187 6 172 1 55 1 
135 3 292 1 338 5 261 18 21 12 73 1 139 1 263 5 196 16 25 5 52 1 95 5 119 1 302 5 172 1 55 3 174 3 124 1 305 5 126 2 176 1 34 4 355 2 356 3 207 1 278 1 80 5 81 3 183 7 109 34 187 10 287 3 359 1 233 1 
135 1 338 1 261 5 21 2 73 1 263 2 196 6 25 1 52 1 95 1 55 1 174 1 144 1 124 1 305 1 126 1 176 1 34 2 356 1 207 1 80 1 183 2 109 11 187 2 287 1 233 1 
135 1 338 1 261 5 21 3 73 1 263 2 196 6 25 2 52 1 95 2 119 1 302 1 55 1 174 1 144 1 124 1 305 2 126 1 176 1 34 2 356 1 207 1 80 2 183 2 109 11 187 4 287 1 233 1 
135 1 338 3 261 10 21 4 73 1 263 3 196 9 25 3 52 1 95 3 119 1 302 1 55 1 174 1 10 1 144 1 124 1 305 3 126 1 176 1 354 1 34 1 356 2 355 1 80 3 81 2 183 3 109 19 41 1 44 1 187 6 287 2 233 1 
135 1 338 2 261 7 21 5 73 1 263 3 196 10 25 3 52 1 95 3 119 1 302 2 55 1 174 1 10 1 144 1 124 1 305 3 126 1 176 1 354 1 34 1 355 1 356 2 80 3 81 1 183 3 109 17 41 1 44 1 187 6 287 2 233 1 
135 1 338 1 261 5 21 2 73 1 263 2 196 6 25 1 52 1 95 1 55 1 174 1 144 1 124 1 305 1 126 1 176 1 34 2 356 1 207 1 80 1 183 2 109 11 187 2 287 1 233 1 
338 2 261 6 21 2 73 1 263 2 196 6 25 1 95 1 302 1 174 1 10 1 144 1 124 1 305 1 354 1 34 1 356 2 80 1 81 2 183 1 109 12 41 1 44 1 187 2 287 2 
135 1 338 2 261 8 21 5 73 1 263 3 196 10 25 4 52 1 95 4 119 1 302 2 55 1 174 1 10 1 144 1 124 1 305 4 126 1 176 1 354 1 34 1 356 2 355 2 80 4 81 1 183 3 109 18 41 1 44 1 187 8 287 2 233 1 
338 2 261 7 21 6 73 1 139 1 263 3 196 9 25 4 95 4 302 3 174 1 10 1 144 1 124 1 305 4 354 1 34 1 356 3 355 2 80 4 81 2 183 3 109 16 41 1 44 1 187 8 287 3 
135 3 338 1 126 1 176 1 261 4 21 6 263 1 196 3 183 3 109 7 302 3 55 3 233 2 
135 1 338 2 261 8 21 4 73 1 139 1 263 3 196 10 25 4 52 1 95 4 302 1 55 1 174 1 10 1 144 1 124 1 305 4 126 1 176 1 354 1 34 1 356 2 355 2 80 4 81 1 183 3 109 18 41 1 44 1 187 8 287 2 233 1 
308 1 331 1 175 1 0 1 226 1 113 1 23 1 
246 1 175 1 0 1 226 1 197 1 92 1 23 1 331 1 308 1 229 1 113 1 132 1 
240 1 30 1 193 1 96 1 54 1 112 1 288 1 22 1 143 1 99 1 291 1 
30 1 70 1 0 1 137 1 226 2 294 1 365 1 23 2 240 1 253 1 308 1 54 1 46 1 112 1 288 1 143 1 291 1 99 1 
374 1 30 1 70 1 0 1 137 1 226 2 294 1 151 1 366 1 365 1 23 2 240 2 182 1 253 2 308 2 54 1 46 2 112 1 288 3 155 1 190 1 143 1 99 1 
70 1 0 1 137 1 365 1 366 1 23 2 240 2 54 1 121 1 143 2 99 2 30 1 374 1 275 1 226 2 151 1 182 1 308 2 253 2 112 2 46 2 288 3 155 1 190 1 
366 1 240 1 200 1 54 1 272 2 143 3 99 3 273 1 30 1 275 1 148 1 330 1 151 1 181 1 281 1 182 1 253 1 16 1 185 1 84 2 112 3 288 4 291 1 
30 1 275 1 148 1 72 1 151 1 366 1 240 1 182 1 281 1 181 1 253 1 185 1 200 1 84 2 54 1 112 3 272 2 288 4 143 3 291 1 273 1 99 3 
30 1 54 1 112 1 156 1 143 1 99 1 
30 2 194 1 147 1 166 1 240 2 309 1 253 1 75 1 53 1 228 1 325 1 42 1 64 1 54 3 112 7 288 3 156 1 379 1 143 7 291 2 99 6 
135 1 338 1 0 2 294 1 137 1 196 3 343 1 239 1 240 1 95 2 52 1 54 1 201 1 55 1 143 1 99 1 305 2 353 1 308 1 253 1 108 1 109 6 312 2 112 1 69 2 70 1 261 3 21 2 365 1 263 1 23 2 25 2 75 1 30 1 126 1 176 1 226 2 376 1 80 2 183 2 184 1 187 4 46 1 288 1 47 1 232 1 233 1 
236 1 72 1 200 1 97 1 223 2 173 2 272 3 143 1 273 1 99 1 352 1 225 1 145 1 148 1 251 1 281 1 181 2 185 1 254 2 333 1 84 3 314 1 112 1 230 2 288 2 157 1 67 1 291 1 
30 1 148 1 240 1 253 1 75 1 54 2 112 2 288 2 156 1 379 1 143 2 99 2 134 1 
193 1 30 1 275 1 296 1 240 1 75 1 96 1 54 1 112 4 288 1 143 4 291 1 99 4 
30 1 326 1 182 1 240 1 309 1 253 1 228 1 270 1 54 2 112 2 288 1 143 2 244 1 99 2 
30 1 141 1 1 1 149 1 54 1 112 1 369 1 143 1 99 1 291 1 
240 1 30 1 194 1 101 1 75 1 53 1 54 1 112 2 288 1 143 2 99 2 
193 1 30 2 194 1 147 1 296 1 182 1 240 2 75 1 96 1 54 2 64 1 112 5 288 3 143 5 291 1 99 4 
193 1 30 2 194 1 296 1 182 1 322 1 240 2 75 1 96 1 54 2 64 1 112 5 288 3 143 5 291 1 99 4 
30 1 70 1 0 1 137 1 226 2 365 1 23 2 240 1 253 1 308 1 54 1 46 1 112 1 121 1 288 1 143 1 291 1 99 1 
30 1 182 1 240 1 309 1 253 1 228 1 42 1 54 2 112 1 288 1 379 1 143 1 99 1 
87 1 308 1 191 1 348 1 114 1 226 1 104 1 77 1 23 1 
114 1 262 1 358 1 
198 1 0 1 114 1 104 1 77 1 
374 1 145 1 0 1 114 1 262 1 104 2 105 1 185 1 198 2 200 1 358 1 84 2 315 1 272 2 155 1 66 1 190 1 77 2 273 1 
298 1 363 1 45 1 22 1 
298 1 363 1 170 1 58 1 45 1 128 1 265 1 
170 1 227 1 221 1 
58 1 363 1 128 2 265 1 347 1 298 1 170 2 213 1 45 1 202 1 159 1 380 1 361 1 
298 1 32 1 363 1 170 2 58 1 45 1 128 2 258 1 265 1 
58 1 328 1 327 1 1 1 149 1 128 1 265 1 82 1 170 1 45 1 159 1 
298 1 170 1 58 1 45 1 128 1 265 1 159 1 
298 2 363 1 170 1 58 1 128 1 265 1 159 1 
220 1 298 1 170 2 58 2 110 1 45 1 128 2 341 1 265 2 159 1 
32 2 363 1 58 1 327 1 71 1 128 3 265 1 279 1 298 1 170 3 210 1 45 2 159 1 
32 1 363 1 58 1 1 1 149 2 128 2 369 1 265 1 320 1 82 1 298 1 170 2 300 1 45 1 159 1 
32 2 363 1 58 2 327 1 128 4 265 2 298 1 170 4 210 1 45 2 111 1 258 1 159 1 
298 1 363 1 170 1 58 1 45 1 128 1 265 1 159 1 
32 2 363 2 58 1 327 1 128 4 265 1 298 2 347 1 170 4 210 1 213 1 45 3 202 1 380 1 
32 1 58 1 363 1 128 2 249 1 265 1 15 1 298 1 170 2 63 1 45 1 159 1 
58 1 363 1 127 1 128 3 265 1 298 1 170 3 213 1 45 1 202 2 159 1 380 2 
186 1 284 2 45 2 18 1 
102 1 170 1 58 1 128 1 265 1 159 1 
298 1 32 1 363 1 170 2 58 1 45 1 128 2 279 1 265 1 159 1 
234 1 
298 1 363 1 170 1 58 1 45 1 128 1 265 1 159 1 
32 1 58 1 363 1 128 3 265 1 279 1 298 1 170 3 45 1 202 1 159 1 
347 1 327 1 210 1 45 1 
298 1 45 1 

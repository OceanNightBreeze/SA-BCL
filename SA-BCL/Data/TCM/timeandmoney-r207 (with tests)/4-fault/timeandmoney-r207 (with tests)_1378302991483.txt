#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) (10,95) (10,95) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) (10,95) (10,95) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) (10,95) (10,95) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) (10,95) (10,95) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 117 (87,194,201,244) 258 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) 334 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 117 249 (27,296) 334 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 255 250 54 206 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 117 (87,194,201,244) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 117 249 235 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 117 249 356 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 117 249 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 2 373 1 161 1 315 2 260 3 164 1 61 1 296 1 50 1 344 1 52 3 117 1 22 1 10 1 347 1 185 1 312 2 27 1 249 1 95 1 
45 2 373 1 161 1 315 2 260 3 164 1 61 1 296 1 50 1 344 1 52 3 117 1 22 1 10 1 347 1 185 1 312 2 27 1 249 1 95 1 
45 2 373 1 161 1 315 2 260 3 164 1 61 1 296 1 50 1 344 1 52 3 117 1 22 1 10 1 347 1 185 1 312 2 27 1 249 1 95 1 
45 2 373 1 161 1 315 2 260 3 164 1 61 1 296 1 50 1 344 1 52 3 117 1 22 1 10 1 347 1 185 1 312 2 27 1 249 1 95 1 
45 1 201 1 161 1 258 1 50 1 315 1 260 2 344 1 52 2 117 1 93 1 254 1 
59 1 45 1 152 1 315 1 260 2 270 1 164 1 61 1 283 1 50 1 379 1 344 1 52 2 347 1 185 1 312 1 
45 2 161 1 296 1 50 1 315 2 260 2 344 1 52 2 117 1 312 1 249 1 
87 1 45 2 161 1 315 2 260 3 93 1 334 1 296 1 50 1 344 1 52 3 117 1 312 1 249 1 
87 1 45 2 161 1 315 2 260 3 93 1 334 1 296 1 50 1 344 1 52 3 117 1 312 1 249 1 
160 1 225 1 98 1 
98 1 330 2 207 1 
229 2 326 2 289 1 242 2 374 2 142 2 301 2 319 1 
289 1 267 1 172 1 339 1 92 2 138 1 228 1 319 1 320 2 229 3 3 1 343 1 142 3 116 1 298 1 184 2 211 1 301 2 273 1 257 1 326 2 370 1 374 2 375 1 14 1 99 1 282 1 76 1 242 2 167 1 168 1 355 2 169 1 84 1 248 1 382 1 381 2 
229 1 326 1 156 1 144 1 242 1 374 1 142 1 301 1 71 1 319 1 
229 1 214 1 215 1 144 1 104 1 225 1 98 1 142 1 82 1 212 1 301 1 153 1 149 1 333 1 
326 1 215 2 225 1 374 1 98 1 333 1 229 1 242 1 144 1 104 1 142 1 82 1 301 1 212 1 149 2 
215 1 65 1 130 1 2 1 149 1 
215 2 65 1 225 1 2 1 98 1 106 1 149 2 33 1 
215 1 65 1 149 1 
326 1 215 1 2 1 374 1 319 1 229 1 156 1 144 1 242 1 142 1 105 1 301 1 71 1 149 1 
98 1 
293 1 215 2 65 1 225 1 2 1 98 1 149 2 33 1 
215 5 340 1 225 1 2 2 98 1 188 2 91 1 128 1 33 1 190 2 49 1 65 2 210 1 114 1 68 1 7 1 24 1 149 5 159 2 
326 1 339 1 109 1 14 1 331 1 99 1 76 1 320 1 229 2 242 1 167 1 141 1 142 2 355 1 298 1 211 1 84 1 301 1 273 1 381 1 
160 1 289 1 
326 1 289 2 372 1 374 1 136 1 229 2 242 1 142 2 301 2 
109 1 183 1 245 1 
229 1 289 1 339 1 269 1 167 1 14 1 142 1 355 1 298 1 99 1 211 1 84 1 273 1 320 1 381 1 76 1 
229 3 326 3 289 1 242 3 374 1 141 1 142 3 301 3 
229 1 326 1 144 1 242 1 142 1 301 1 71 1 
229 1 326 1 372 1 144 1 242 1 374 1 142 1 136 1 301 1 
289 1 267 1 339 1 92 1 228 1 319 1 320 1 229 4 364 1 3 1 343 1 141 1 142 4 116 1 298 1 184 2 211 1 301 3 212 1 273 1 72 1 257 1 326 3 370 1 372 1 215 1 374 2 375 1 14 1 331 1 99 1 282 1 333 1 76 1 242 3 144 1 104 1 167 1 168 1 82 1 355 1 84 1 149 1 381 1 
229 2 326 1 289 1 64 1 242 1 141 1 142 2 153 1 301 2 
326 3 372 1 215 1 374 1 98 1 331 1 317 1 333 1 229 3 144 1 242 3 104 1 141 2 142 3 82 1 301 3 212 1 149 1 72 1 
326 2 372 1 374 1 109 1 229 2 242 2 141 1 142 2 245 1 301 2 
229 1 289 1 339 1 167 1 14 1 142 1 355 1 298 1 99 1 211 1 84 1 273 1 320 1 381 1 76 1 
289 1 339 1 14 1 76 1 320 1 229 1 167 1 142 1 67 1 355 1 345 1 298 1 84 1 273 1 381 1 
267 1 109 2 205 1 92 4 111 1 255 1 365 1 343 2 183 2 116 1 184 2 274 1 257 1 370 1 13 1 238 1 375 1 216 1 282 1 129 1 245 2 196 1 382 2 86 1 
229 1 326 1 144 1 242 1 354 1 142 1 212 1 301 1 
326 4 289 1 372 1 374 1 331 1 307 1 153 1 229 5 64 1 242 4 141 2 142 5 302 1 301 5 
229 2 326 2 354 1 144 1 242 2 142 2 301 2 71 1 
20 1 208 1 
20 1 208 1 
223 1 209 1 
223 1 209 1 
223 1 209 1 
368 1 20 1 208 1 
243 1 20 1 208 1 
223 1 209 1 371 1 290 1 20 2 208 2 
368 1 20 1 208 1 
368 1 20 1 208 1 
113 1 20 1 208 1 
113 1 20 1 208 1 
113 1 20 1 208 1 
88 1 46 2 215 2 98 1 290 1 351 1 177 1 62 2 208 2 154 2 272 1 217 2 80 1 20 2 246 3 25 1 357 2 149 2 42 1 
326 2 289 1 224 1 46 1 215 1 137 1 262 1 62 1 208 1 217 1 63 1 229 2 77 1 242 2 243 1 142 2 20 1 39 1 246 1 301 2 231 1 25 1 149 1 357 1 
22 1 164 1 185 1 
379 1 164 1 185 1 
199 1 379 1 162 1 22 2 299 1 185 3 
199 1 252 1 379 1 22 1 299 1 185 2 
199 2 379 1 22 1 299 1 185 2 
224 1 2 4 225 1 205 1 361 1 207 1 137 1 271 2 33 1 255 1 65 1 210 3 68 2 39 1 159 1 233 1 73 2 236 1 215 5 122 2 330 3 238 1 98 2 188 1 190 1 49 1 21 1 85 1 149 5 86 1 250 1 197 1 
133 1 135 1 2 7 225 1 205 3 227 1 207 3 33 1 255 3 65 6 94 1 210 8 68 6 39 4 159 2 233 1 73 6 215 9 122 6 259 1 330 9 238 3 98 5 188 2 190 2 353 1 49 1 130 5 21 2 24 1 85 2 131 5 149 9 86 3 250 3 
225 1 2 2 205 1 207 2 271 1 255 1 210 3 68 2 39 1 159 1 73 2 236 1 215 3 122 2 98 3 238 1 330 4 188 1 190 1 21 1 24 1 85 1 149 3 86 1 197 1 250 1 
133 1 225 1 2 3 205 2 227 1 207 3 271 2 255 2 210 5 68 4 39 2 159 1 73 4 215 4 236 1 122 4 98 4 330 7 259 1 238 2 188 1 190 1 21 1 24 1 85 1 149 4 86 2 197 1 250 2 
160 1 84 1 41 1 
8 1 84 1 
179 1 
14 1 84 1 
167 1 14 1 84 3 41 2 376 1 171 1 
167 1 14 1 84 1 
284 1 84 1 
0 1 13 3 279 1 205 1 238 1 74 1 92 7 263 1 191 1 129 2 145 2 343 3 140 1 81 1 285 1 369 1 382 4 
0 1 13 3 279 1 205 1 238 1 74 1 92 7 263 1 191 1 129 2 145 2 343 3 140 1 81 1 285 1 369 1 382 4 
0 1 13 3 279 1 205 1 238 1 74 1 92 7 263 1 191 1 129 2 145 2 343 3 140 1 81 1 66 1 285 1 369 1 382 4 
0 1 205 4 92 31 35 1 181 3 255 3 322 1 343 15 140 5 184 2 369 1 43 4 257 1 370 1 304 1 279 2 13 10 74 2 375 1 238 4 306 1 282 1 263 1 191 2 129 5 264 1 145 3 81 1 219 1 146 1 285 2 382 16 250 3 86 3 
0 1 151 1 205 1 92 9 343 4 140 1 184 4 257 2 370 2 279 1 13 4 238 1 375 2 74 1 282 2 263 1 191 1 129 3 145 2 146 1 81 1 285 1 287 1 382 5 
268 1 203 1 134 1 152 1 315 1 270 1 93 1 320 1 180 1 344 1 298 1 185 2 273 1 119 1 45 1 260 2 162 1 126 1 164 1 102 1 50 1 379 1 355 1 52 2 22 1 221 1 312 1 381 1 358 1 58 1 
268 1 203 1 134 1 152 1 315 1 270 1 320 1 93 2 180 1 297 1 6 1 344 1 298 1 185 2 273 1 119 1 45 1 260 3 162 1 126 1 164 1 127 1 379 1 355 1 52 3 22 1 221 1 312 1 381 1 58 1 
203 1 134 1 152 1 270 1 320 1 93 2 180 1 297 1 6 1 344 1 298 1 185 2 273 1 260 2 162 1 126 1 164 1 379 1 355 1 52 2 22 1 221 1 312 1 381 1 58 1 
45 1 134 2 14 1 315 1 260 1 126 2 163 1 240 1 127 1 377 1 378 1 76 1 320 1 52 1 355 1 298 1 84 1 69 1 221 2 312 2 273 1 303 1 381 1 
268 1 203 1 134 1 315 1 320 1 180 1 6 1 298 1 185 2 273 1 119 1 45 1 260 1 162 1 126 1 164 1 102 1 50 1 379 1 355 1 52 1 22 1 221 1 312 1 381 1 58 1 
9 1 
202 2 207 2 153 1 65 6 4 2 210 2 68 2 298 1 158 2 301 1 212 1 70 1 159 1 303 1 214 1 215 5 14 1 163 1 16 4 76 2 355 2 82 1 21 1 84 1 26 2 359 1 360 1 225 1 174 1 33 3 320 2 229 1 367 1 324 1 142 1 273 1 327 1 328 2 278 1 98 2 329 2 330 2 47 1 188 1 333 1 190 1 100 1 49 1 144 1 104 1 336 2 337 1 108 1 149 5 381 2 
214 1 202 1 215 3 360 1 278 1 16 2 153 1 333 1 33 1 100 1 229 1 293 1 144 1 65 2 104 1 337 1 142 1 82 1 108 1 212 1 301 1 149 3 
360 1 225 1 153 1 33 1 229 1 293 1 65 1 142 1 301 1 212 1 214 1 278 1 215 3 98 1 16 3 333 1 100 1 144 1 104 1 336 1 337 1 82 1 108 1 149 3 
360 1 202 1 225 1 153 1 33 1 229 1 293 1 65 2 142 1 301 1 212 1 214 1 278 1 215 3 328 1 98 1 16 3 333 1 100 1 144 1 104 1 336 1 337 1 82 1 108 1 149 3 
198 1 360 1 202 4 225 5 207 2 341 1 153 1 342 1 33 3 229 1 293 1 65 7 4 2 210 1 324 1 142 1 346 1 68 1 158 2 301 1 212 1 159 1 214 1 278 1 215 5 328 4 329 2 98 5 47 1 188 1 16 6 333 1 190 1 189 1 100 1 49 1 144 1 104 1 336 4 337 1 82 1 108 1 26 2 149 5 
202 2 207 2 153 1 65 4 210 1 4 2 68 1 158 2 212 1 301 1 159 1 214 1 215 4 16 4 82 1 26 2 359 1 360 1 225 1 33 2 229 1 142 1 324 1 278 1 328 2 330 2 329 2 98 2 47 1 188 1 333 1 190 1 100 1 49 1 144 1 104 1 336 2 337 1 108 1 149 4 
202 2 360 1 225 1 207 2 341 1 153 1 33 2 342 1 229 1 65 4 4 2 210 1 324 1 142 1 346 1 68 1 158 2 301 1 212 1 159 1 214 1 328 2 278 1 215 4 98 1 329 2 47 1 16 4 188 1 333 1 100 1 190 1 49 1 144 1 104 1 336 2 337 1 82 1 108 1 26 2 149 4 
202 2 360 1 225 1 207 2 341 1 153 1 33 2 342 1 229 1 65 4 4 2 210 1 324 1 142 1 346 1 68 1 158 2 301 1 212 1 159 1 214 1 328 2 278 1 215 4 98 1 329 2 47 1 16 4 188 1 333 1 100 1 190 1 49 1 144 1 104 1 336 2 337 1 82 1 108 1 26 2 149 4 
202 2 360 1 225 1 60 1 316 2 175 1 153 1 33 2 229 1 65 4 4 2 210 1 324 1 142 1 346 1 68 1 301 1 212 1 159 1 214 1 328 2 278 1 215 4 121 2 98 1 330 2 16 4 188 1 333 1 100 1 190 1 49 1 144 1 104 1 336 2 337 1 82 1 108 1 23 1 26 2 149 4 
360 1 202 3 225 1 207 2 341 1 153 1 33 2 342 1 229 1 65 5 4 2 210 1 324 1 142 1 346 1 68 1 158 2 301 1 212 1 159 1 214 1 278 1 215 4 328 3 98 1 329 2 47 1 188 1 16 5 333 1 190 1 100 1 189 1 49 1 144 1 104 1 336 3 337 1 82 1 108 1 26 2 149 4 
360 1 202 3 225 1 207 2 341 1 153 1 33 2 342 1 229 1 65 5 4 2 210 1 324 1 142 1 346 1 68 1 158 2 301 1 212 1 159 1 214 1 278 1 215 4 328 3 98 1 329 2 47 1 188 1 16 5 333 1 190 1 100 1 189 1 49 1 144 1 104 1 336 3 337 1 82 1 108 1 26 2 149 4 
202 2 60 1 153 1 65 4 210 1 4 2 68 1 212 1 301 1 159 1 214 1 215 4 121 2 16 4 82 1 26 2 359 1 360 1 225 1 316 2 33 2 229 1 142 1 324 1 278 1 328 2 330 2 98 1 188 1 333 1 190 1 100 1 49 1 144 1 104 1 336 2 337 1 108 1 149 4 
0 1 267 1 289 2 109 1 205 1 92 6 343 3 183 1 116 1 184 2 160 1 257 1 370 1 13 2 74 1 375 1 238 1 216 1 282 1 263 1 191 1 129 2 145 1 81 1 245 1 382 3 
267 2 289 1 30 1 109 3 32 1 92 4 181 1 343 3 115 1 183 3 116 1 184 4 43 1 257 2 370 2 375 2 282 2 308 1 144 1 168 1 53 1 195 1 382 1 
288 1 289 1 267 1 339 1 269 1 32 1 92 2 320 1 229 2 141 1 343 1 366 1 142 2 116 1 298 1 211 1 184 2 301 1 273 1 326 1 257 1 370 1 14 1 375 1 331 1 99 1 282 1 76 1 218 1 242 1 167 1 355 1 245 1 168 1 84 1 169 1 381 1 382 1 
289 2 0 1 339 2 109 7 205 3 255 2 343 10 6 1 116 3 298 2 211 2 301 1 257 3 348 2 13 8 74 1 14 2 15 1 352 2 263 1 76 1 129 4 167 2 81 1 168 1 355 3 169 1 84 2 86 2 267 3 32 1 92 20 228 2 320 3 229 3 141 1 140 4 183 7 142 3 38 2 184 6 273 2 326 1 370 3 375 3 238 3 331 1 99 2 281 1 282 3 191 1 242 1 145 1 147 1 245 7 286 2 381 3 250 2 382 10 
267 2 226 1 92 2 320 8 229 1 141 1 343 1 6 1 142 1 116 2 298 2 184 4 301 1 273 2 303 1 326 1 257 2 370 2 277 1 375 2 14 2 261 1 123 1 216 1 163 1 282 2 165 1 76 2 101 1 242 1 355 8 168 1 266 1 84 3 169 1 248 2 358 1 381 7 382 1 
267 1 109 1 205 1 32 1 92 3 229 1 255 1 343 2 183 1 142 1 116 1 184 2 301 1 326 1 257 1 370 1 372 1 349 1 13 1 374 1 375 1 238 1 282 1 129 1 242 1 245 1 250 1 382 1 86 1 
257 1 267 1 370 1 13 1 109 1 375 1 238 1 216 1 92 2 282 1 111 1 255 1 140 1 183 1 245 1 116 1 184 2 382 2 
257 1 267 1 370 1 13 1 109 1 375 1 205 1 216 1 92 2 282 1 129 1 365 1 343 2 183 1 245 1 116 1 184 2 86 1 
267 1 109 2 205 1 92 4 255 1 140 1 343 2 183 2 116 1 184 2 257 1 370 1 13 2 238 1 375 1 216 1 282 1 129 1 245 2 382 2 250 1 86 1 
257 1 267 1 370 1 13 1 109 1 375 1 238 1 261 1 92 2 282 1 111 1 255 1 140 1 183 1 245 1 116 1 184 2 382 2 
257 1 267 1 370 1 13 1 109 1 375 1 205 1 261 1 92 2 282 1 129 1 365 1 343 2 183 1 245 1 116 1 184 2 86 1 
267 1 109 2 205 1 92 4 255 1 140 1 343 2 183 2 116 1 184 2 257 1 370 1 13 2 238 1 375 1 261 1 282 1 129 1 245 2 382 2 250 1 86 1 
267 1 109 2 205 1 92 4 255 1 140 1 343 2 183 2 116 1 184 2 257 1 370 1 13 2 238 1 375 1 282 1 129 1 245 2 382 2 250 1 86 1 
289 1 267 1 339 1 92 2 228 1 320 1 229 1 343 1 142 1 116 1 298 1 211 1 184 2 273 1 257 1 370 1 14 1 375 1 99 1 282 1 76 1 167 1 355 1 168 1 169 1 84 1 382 1 381 1 
289 1 267 1 339 1 92 2 320 1 229 1 343 1 67 1 142 1 345 1 116 1 298 1 118 1 184 2 273 1 257 1 370 1 14 1 375 1 282 1 76 1 167 1 355 1 168 1 169 1 84 1 382 1 381 1 
267 1 109 2 205 1 32 1 92 4 255 1 140 1 343 2 183 2 116 1 184 2 257 1 370 1 13 2 238 1 375 1 282 1 129 1 245 2 382 2 250 1 86 1 
267 1 339 1 109 2 205 1 92 4 228 1 320 1 229 1 255 1 343 2 140 1 183 2 142 1 116 1 298 1 211 1 184 2 273 1 257 1 370 1 13 2 238 1 14 1 375 1 99 1 282 1 129 1 167 1 245 2 355 1 84 1 286 1 86 1 382 2 381 1 358 1 250 1 
267 1 109 1 205 1 32 1 92 3 229 1 255 1 343 1 140 1 183 1 142 1 116 1 184 2 301 1 326 1 257 1 370 1 372 1 13 1 374 1 375 1 238 1 282 1 18 1 242 1 245 1 86 1 250 1 382 2 
0 1 151 1 205 5 110 4 255 4 343 21 257 3 304 1 13 8 74 1 124 1 17 1 263 1 129 4 79 1 219 3 81 1 19 1 220 1 86 4 92 41 181 3 139 1 182 1 230 1 323 2 140 4 184 6 43 4 370 3 238 5 375 3 239 1 282 3 191 1 335 1 145 1 146 1 54 1 338 1 56 1 250 4 382 20 
0 1 151 1 205 4 110 4 92 38 139 1 181 3 255 4 230 1 182 1 323 2 343 18 140 3 184 8 43 4 257 4 370 4 304 1 13 7 74 1 375 4 238 5 124 1 239 1 17 1 282 4 263 1 191 1 129 4 79 1 335 1 145 1 81 1 146 2 219 3 19 1 54 1 338 1 220 1 56 1 382 20 250 4 86 3 
0 1 151 1 205 8 110 4 92 52 139 1 181 4 255 7 230 1 182 1 323 1 343 25 140 7 184 4 43 4 257 2 370 2 304 2 186 2 13 14 74 1 375 2 238 8 124 1 239 1 17 1 282 2 263 1 191 1 129 7 79 1 335 1 145 1 81 1 146 1 219 2 19 1 54 1 220 1 382 27 250 7 86 7 
151 1 205 2 206 1 110 1 92 13 181 1 255 2 182 1 323 1 343 7 140 2 184 4 43 2 257 2 370 2 304 1 13 4 375 2 238 2 282 2 129 2 335 1 219 1 19 1 54 1 338 1 382 6 250 2 86 2 
151 1 205 2 110 4 92 26 139 1 181 2 255 3 182 1 230 1 323 2 140 2 343 12 184 6 43 2 257 3 370 3 13 4 375 3 238 3 124 1 239 1 17 1 282 3 129 2 79 1 335 2 146 2 219 2 19 1 54 1 220 1 382 14 250 3 86 2 
46 1 51 1 290 1 20 1 177 1 208 1 62 1 357 1 42 1 217 1 
63 1 243 1 
29 1 46 1 1 1 20 1 90 1 208 1 62 1 357 1 217 1 
46 1 215 1 98 1 290 1 351 1 177 1 62 1 208 1 154 1 272 1 217 1 80 1 20 1 246 2 25 1 149 1 357 1 42 1 
46 1 215 1 98 1 290 1 351 1 177 1 62 1 208 1 154 1 272 1 217 1 80 1 20 1 246 2 25 1 149 1 357 1 42 1 
46 1 215 1 98 1 290 1 351 1 177 1 62 1 208 1 154 1 272 1 217 1 80 1 20 1 246 2 25 1 149 1 357 1 42 1 
371 1 368 1 176 1 
371 1 368 1 176 1 
113 1 11 1 
371 1 113 1 11 1 
77 1 231 1 
289 1 224 1 2 1 137 1 208 1 62 1 154 1 229 2 63 1 157 1 142 2 39 1 301 2 231 1 326 2 46 1 215 1 351 1 262 1 217 1 77 1 242 2 243 1 20 1 246 1 149 1 357 1 
368 1 176 1 
371 1 113 1 11 1 
267 1 226 1 32 1 92 2 320 2 229 2 343 1 142 2 116 1 298 1 184 2 301 2 273 1 257 1 370 1 14 1 375 1 123 1 282 1 143 1 78 1 241 1 355 2 168 1 265 1 84 1 169 1 248 2 57 1 382 1 381 2 
268 1 134 1 162 1 164 1 362 1 320 2 180 1 36 1 379 1 256 1 6 1 355 2 22 1 298 1 185 2 273 1 381 2 358 1 58 1 
268 1 134 1 162 1 164 1 320 1 180 1 36 1 379 1 6 1 355 1 22 1 298 1 107 1 185 2 273 1 381 1 58 1 
134 1 14 1 163 1 377 1 76 1 320 1 256 1 310 1 355 1 298 1 84 1 273 1 303 1 381 1 
268 1 134 1 162 1 164 1 362 1 320 1 180 1 36 1 379 1 256 1 6 1 355 1 22 1 298 1 185 2 273 1 381 1 58 1 
55 1 
160 1 340 1 225 1 210 1 98 1 68 1 7 1 
225 1 207 1 33 1 65 1 210 1 68 1 158 1 159 1 215 1 330 1 98 2 329 1 47 1 188 1 190 1 49 1 149 1 
200 1 251 2 340 1 204 1 205 2 291 1 207 6 255 2 65 5 210 9 68 8 7 1 8 3 298 4 159 4 73 6 305 2 215 5 122 6 14 3 75 2 352 2 76 1 167 3 355 3 82 2 21 2 84 10 171 1 222 2 358 1 86 2 314 2 225 2 33 3 320 3 367 1 41 2 275 2 273 3 325 1 44 2 330 12 98 8 238 2 187 1 188 4 190 4 192 2 49 4 284 2 149 5 381 3 250 2 
251 1 225 2 205 2 207 3 33 1 181 1 255 2 294 1 230 1 65 1 367 1 210 8 68 5 159 2 96 1 43 1 44 2 73 5 215 1 122 5 330 6 98 5 238 2 124 1 188 2 17 1 190 2 49 2 79 1 219 1 21 1 220 1 149 1 250 2 86 2 
251 1 205 1 342 1 319 1 229 1 156 1 210 2 142 1 68 2 301 1 71 1 159 1 326 1 44 2 215 1 374 1 74 1 238 2 188 1 190 1 191 1 193 1 49 1 144 1 242 1 81 1 105 1 149 1 
340 1 225 1 98 1 188 1 190 1 49 1 210 1 68 1 7 1 159 1 
251 1 44 2 73 5 122 5 238 2 330 10 98 5 205 2 207 5 352 1 255 2 210 5 68 5 250 2 86 2 
215 1 65 1 225 1 98 1 149 1 33 1 
200 2 291 1 33 2 320 4 65 4 210 2 367 2 68 2 298 1 70 1 159 2 273 1 303 1 276 1 327 1 215 3 14 1 280 1 188 2 163 1 190 2 76 2 49 1 355 4 21 2 24 1 84 1 149 3 381 4 
289 1 267 1 339 1 92 1 228 1 320 1 319 1 229 3 3 1 343 1 142 3 116 1 298 1 184 2 211 1 301 2 273 1 257 1 326 2 370 1 374 2 375 1 14 1 99 1 282 1 76 1 242 2 167 1 168 1 355 1 84 1 381 1 
73 2 122 2 225 2 330 4 98 4 207 2 188 1 190 1 49 1 145 1 210 1 367 1 68 2 21 1 159 1 
309 1 46 1 217 1 
46 1 318 1 231 1 42 1 217 1 
309 1 46 1 217 1 
309 1 46 1 217 1 
46 1 380 1 217 1 
46 1 380 1 217 1 
46 1 380 1 217 1 
46 1 217 1 
20 1 208 1 
0 1 151 1 205 1 92 8 181 1 343 4 184 2 43 1 257 1 370 1 13 2 238 1 375 1 74 1 124 1 282 1 263 1 191 1 129 2 145 1 219 1 81 1 382 4 
0 1 151 1 205 1 92 11 181 1 255 1 343 5 140 1 184 4 300 1 43 2 257 2 370 2 304 1 13 3 74 1 375 2 238 2 124 1 282 2 263 1 191 1 129 2 145 1 81 1 219 1 382 6 250 1 
0 1 151 1 205 3 92 19 181 1 255 2 230 1 140 1 343 10 184 6 300 1 43 1 257 3 370 3 13 4 74 1 375 3 238 3 124 1 17 1 282 3 263 1 191 1 129 3 79 1 145 1 81 1 219 1 146 1 220 1 382 9 250 2 86 2 
0 1 151 1 205 2 92 17 181 1 255 2 230 1 140 2 343 7 184 6 300 1 43 1 257 3 370 3 13 5 74 1 375 3 238 3 124 1 17 1 282 3 263 1 191 1 129 3 79 1 145 1 81 1 146 1 219 1 220 1 382 10 250 2 86 1 
0 1 151 1 205 1 92 8 181 1 343 4 184 2 43 1 257 1 370 1 13 2 238 1 375 1 74 1 124 1 282 1 263 1 191 1 129 2 145 1 219 1 81 1 382 4 
151 1 205 2 92 12 181 1 255 2 230 1 140 1 343 6 184 2 43 1 257 1 370 1 13 2 375 1 238 2 124 1 17 1 282 1 129 1 79 1 219 1 220 1 382 6 250 2 86 2 
0 1 151 1 205 2 92 18 181 1 255 2 230 1 140 2 343 8 184 8 300 1 43 1 257 4 370 4 13 5 74 1 375 4 238 3 124 1 17 1 282 4 263 1 191 1 129 3 79 1 145 1 81 1 219 1 146 2 220 1 382 10 250 2 86 1 
151 1 205 2 92 16 181 1 255 3 230 1 140 3 343 7 184 8 43 1 257 4 370 4 13 6 375 4 238 3 124 1 17 1 282 4 129 3 79 1 219 1 146 2 338 1 220 1 382 9 250 3 86 2 
0 1 13 6 205 1 74 3 238 1 92 7 263 2 191 3 129 3 343 4 140 3 81 1 382 3 
0 1 151 1 205 2 92 18 181 1 255 2 230 1 140 1 343 8 184 8 43 1 257 4 370 4 13 4 74 1 375 4 238 3 124 1 17 1 282 4 263 1 191 1 129 3 79 1 145 1 81 1 219 1 146 2 338 1 220 1 382 10 250 2 86 1 
257 2 370 2 0 1 13 3 205 1 238 1 375 2 74 1 92 8 282 2 263 1 191 1 129 2 145 1 343 4 140 1 81 1 146 1 184 4 382 4 
160 1 0 1 13 2 74 1 238 1 205 1 92 6 263 1 191 1 129 2 145 1 343 3 81 1 382 3 
257 1 370 1 13 2 205 1 375 1 238 1 92 4 282 1 129 1 255 1 343 2 140 1 184 2 300 1 86 1 250 1 382 2 
304 1 13 2 205 1 238 1 92 7 129 1 181 1 255 1 343 4 140 1 219 1 86 1 43 2 382 3 250 1 
0 1 30 1 205 2 92 15 181 1 343 8 140 3 115 1 184 2 43 1 257 1 370 1 13 6 238 2 375 1 74 2 282 1 263 1 191 2 193 1 129 3 81 1 146 1 382 7 
343 1 92 1 43 1 
181 1 92 1 382 1 
257 1 370 1 13 3 375 1 238 1 205 1 92 6 282 1 352 1 129 2 255 1 343 3 140 1 184 2 300 1 250 1 382 3 86 1 
151 1 205 2 92 12 181 1 255 2 230 1 140 1 343 6 184 2 43 1 257 1 370 1 13 2 375 1 238 2 124 1 17 1 282 1 129 1 79 1 219 1 220 1 382 6 250 2 86 2 
13 2 238 1 205 1 74 1 92 6 191 1 129 1 343 3 140 1 81 1 382 3 
257 1 370 1 0 1 30 1 13 2 74 1 375 1 92 3 282 1 263 1 191 1 129 1 140 1 343 2 146 1 184 2 382 1 
257 1 370 1 151 1 13 5 375 1 74 2 238 2 205 2 92 10 282 1 191 2 193 1 129 3 140 2 343 5 81 1 184 2 382 5 
257 1 370 1 151 1 13 1 375 1 238 1 92 2 282 1 255 1 140 1 184 2 382 2 
257 1 370 1 151 1 13 2 205 1 375 1 238 1 92 4 282 1 129 1 255 1 343 2 140 1 184 2 86 1 250 1 382 2 
257 3 370 3 151 1 30 1 13 2 375 3 74 1 92 3 282 3 191 1 129 1 343 2 140 1 146 1 338 1 184 6 382 1 
0 1 151 1 30 1 205 5 92 34 35 1 181 3 255 3 343 18 140 5 184 10 300 1 43 4 257 5 370 5 304 1 13 12 74 3 306 1 375 5 238 5 282 5 263 1 191 3 129 7 264 1 145 1 81 2 146 2 219 1 338 1 382 16 250 3 86 3 
229 1 289 1 64 1 142 1 301 1 153 1 132 1 
289 1 97 1 153 1 229 1 64 1 103 1 142 1 40 1 148 1 301 1 213 1 132 1 
160 1 14 1 355 1 298 1 163 1 84 1 273 1 303 1 320 1 381 1 76 1 
326 1 289 1 339 1 14 1 99 1 76 1 320 1 229 2 242 1 167 1 141 1 142 2 355 1 298 1 84 1 301 1 273 1 381 1 
289 1 200 1 339 1 320 1 229 2 141 1 142 2 298 1 301 2 212 1 273 1 326 1 14 2 99 1 75 1 333 1 242 2 144 1 167 2 355 1 284 1 84 3 381 1 
289 1 200 1 339 1 178 1 320 2 229 2 141 1 67 1 142 2 298 1 301 2 212 1 273 1 326 1 14 2 75 1 333 1 242 2 144 1 167 2 355 2 284 1 84 3 381 2 
200 1 215 2 225 1 98 1 14 1 350 1 75 1 178 1 76 1 320 3 65 1 167 1 82 1 284 1 355 3 298 1 8 1 84 4 247 1 41 1 149 2 273 1 381 3 
200 1 215 2 225 1 98 1 14 1 75 1 178 1 76 1 320 3 192 1 65 1 167 1 82 1 284 1 355 3 298 1 8 1 84 4 41 1 149 2 273 1 381 3 
355 1 298 1 266 1 273 1 320 1 381 1 
31 1 14 1 125 1 76 1 320 1 167 1 355 1 298 2 84 1 311 1 171 1 273 1 381 1 
0 1 289 2 339 1 109 1 205 1 343 3 116 2 298 1 211 1 301 1 348 1 257 2 13 2 14 1 74 1 263 1 78 1 129 2 167 1 81 1 355 1 84 1 358 1 267 2 32 1 92 6 228 1 320 1 229 2 141 1 183 1 142 2 184 4 273 1 326 1 370 2 375 2 238 1 99 1 282 2 191 1 242 1 145 1 245 1 286 1 381 1 382 3 
314 1 340 1 225 1 2 1 291 1 33 1 320 1 65 2 210 1 68 1 7 1 8 1 41 1 159 2 275 1 215 3 305 1 98 1 188 2 76 1 190 2 192 1 49 2 355 1 82 1 84 2 149 3 381 1 
325 1 14 1 320 2 167 1 355 2 298 2 266 1 84 2 41 1 171 1 273 1 358 1 381 2 
112 1 14 1 355 4 298 1 163 1 84 1 178 1 273 1 303 1 358 1 320 4 381 4 76 1 
150 1 14 1 125 1 320 1 295 1 167 1 147 1 355 1 298 2 84 1 311 1 273 1 381 1 
379 1 355 1 298 1 164 1 185 1 273 1 58 1 320 1 381 1 76 1 
14 1 6 1 226 1 355 2 298 1 265 1 84 1 273 1 320 2 381 2 358 1 
200 1 277 1 14 2 226 1 163 1 76 1 320 5 165 1 112 1 355 5 298 2 84 3 303 1 273 2 381 4 358 1 
200 1 237 1 14 2 226 1 163 1 76 1 320 5 165 1 112 1 355 5 298 2 84 3 303 1 273 2 381 4 358 1 
326 1 289 1 339 1 14 1 76 1 320 1 229 2 242 1 167 1 141 1 142 2 67 1 355 1 298 1 84 1 301 1 273 1 381 1 
200 1 31 1 14 1 125 1 320 1 167 1 355 1 298 2 84 1 311 1 171 1 273 1 381 1 
89 1 12 1 292 1 143 1 229 1 241 1 142 1 301 1 57 1 
48 1 170 1 292 1 
289 1 89 1 12 1 253 1 292 1 
28 1 289 1 89 2 215 2 12 2 225 1 2 1 98 1 253 2 48 1 333 1 292 1 144 1 104 1 82 1 212 1 149 2 170 1 72 1 
160 1 152 1 344 1 270 1 
45 1 152 1 315 1 260 1 344 1 52 1 270 1 
260 1 221 1 312 1 
45 1 315 1 152 1 260 3 270 1 155 1 166 1 50 1 5 1 344 1 52 3 347 2 
45 1 152 1 315 1 260 2 344 1 52 2 270 1 93 1 254 1 
45 1 201 1 161 1 50 1 315 1 260 1 344 1 52 1 117 1 
45 1 50 1 152 1 315 1 260 1 344 1 52 1 
45 1 50 1 152 2 315 1 260 1 52 1 270 1 
120 1 45 2 152 1 315 2 260 2 50 1 344 1 83 1 52 2 232 1 
235 1 45 1 161 1 50 1 315 1 260 2 344 1 52 2 117 1 249 1 93 1 313 1 
234 1 45 1 152 1 315 1 260 2 162 1 270 1 164 1 93 1 50 1 379 1 344 1 52 2 22 1 185 2 
45 1 161 1 50 1 315 1 260 2 344 1 52 2 117 1 356 1 249 1 93 1 254 1 
45 1 50 1 152 1 315 1 260 1 344 1 52 1 270 1 
45 1 161 2 315 1 260 2 344 1 52 2 117 1 249 1 93 1 
87 1 45 1 152 1 315 1 260 2 270 1 93 1 50 1 244 1 344 1 52 2 194 1 
45 1 315 1 152 1 260 3 270 1 155 2 321 1 50 1 5 1 344 1 52 3 347 2 
37 1 173 1 344 2 332 2 
45 1 50 1 315 1 260 1 52 1 363 1 
45 1 50 1 152 1 315 1 260 2 344 1 52 2 270 1 93 1 313 1 
34 1 
45 1 50 1 152 1 315 1 260 1 344 1 52 1 270 1 
45 1 315 1 152 1 260 3 270 1 93 1 50 1 52 3 344 1 347 1 313 1 
260 1 52 1 344 1 117 1 249 1 93 1 
152 1 344 1 

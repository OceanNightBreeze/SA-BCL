#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 172 126 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 1 354 6 238 5 239 1 240 2 286 2 219 1 50 1 52 1 332 2 151 4 31 1 101 1 153 9 192 1 194 9 248 2 55 1 106 1 339 1 292 1 250 2 134 1 78 1 162 2 346 2 347 3 84 1 
236 1 354 6 238 5 239 1 240 2 286 2 219 1 50 1 52 1 332 2 151 4 31 1 101 1 153 9 192 1 194 9 248 2 55 1 106 1 339 1 292 1 250 2 134 1 78 1 162 2 346 2 347 3 84 1 
236 1 354 7 238 6 239 1 240 2 286 2 219 1 50 1 52 1 332 2 151 5 31 1 101 1 153 10 192 1 194 10 248 2 55 1 106 1 339 1 292 1 250 2 134 1 78 1 162 2 346 2 347 4 84 1 
236 1 354 4 238 4 239 1 240 2 286 2 219 1 50 1 52 1 332 2 151 3 31 1 101 1 153 7 192 1 194 7 248 2 55 1 106 1 339 1 292 1 250 2 134 1 78 1 162 1 346 2 347 2 
194 4 248 1 354 3 339 1 238 3 286 1 239 1 240 1 219 1 50 1 52 1 162 2 346 1 332 1 151 2 347 1 84 1 153 4 
194 2 55 1 248 1 93 1 339 1 200 1 315 1 250 1 238 1 286 1 219 1 52 1 346 1 332 1 153 2 31 1 
78 1 219 1 194 3 248 2 52 1 332 2 354 1 151 1 347 1 339 1 250 1 238 2 153 3 
236 1 354 7 327 1 238 5 239 1 240 1 286 1 219 1 50 1 52 1 332 2 151 4 153 9 194 9 248 2 106 1 109 1 339 1 250 1 78 1 162 2 346 1 347 3 84 1 
236 1 354 7 327 1 238 5 239 1 240 1 286 1 219 1 50 1 52 1 332 2 151 4 153 9 194 9 248 2 106 1 109 1 339 1 250 1 78 1 162 2 346 1 347 3 84 1 
161 1 265 1 95 1 
265 1 304 2 190 1 
59 2 257 2 178 2 174 2 349 2 267 1 222 2 160 1 
23 2 2 1 89 1 324 1 184 1 3 1 122 1 170 1 359 1 328 1 187 2 9 2 150 1 174 2 288 2 54 1 267 1 222 3 269 1 157 1 14 1 178 2 37 1 316 1 160 1 39 1 79 1 179 2 59 2 83 1 319 1 320 1 257 3 258 1 349 2 86 1 114 1 
295 1 59 1 257 1 178 1 174 1 335 1 135 1 349 1 222 1 160 1 
131 1 24 1 224 1 123 1 161 1 7 1 265 1 206 1 257 1 349 1 335 1 61 1 222 1 62 1 
131 1 24 1 224 1 178 1 161 1 59 1 265 1 206 2 174 1 257 1 61 2 349 1 335 1 222 1 62 1 
205 1 196 1 206 1 71 1 61 1 
161 1 205 1 149 1 265 1 11 1 206 2 71 1 61 2 
205 1 206 1 61 1 
178 1 135 1 160 1 295 1 59 1 206 1 174 1 257 1 71 1 21 1 335 1 61 1 349 1 222 1 
265 1 
161 1 205 1 367 1 265 1 11 1 206 2 71 1 61 2 
103 1 105 1 325 1 272 1 168 2 227 1 241 2 161 1 69 1 205 2 363 1 183 1 265 1 11 1 206 5 20 2 71 2 235 1 61 5 
95 1 267 1 
305 1 178 1 255 1 59 1 257 2 174 1 349 2 222 2 267 2 
137 1 310 1 43 1 
2 1 184 1 14 1 37 1 359 1 187 1 179 1 319 1 257 1 320 1 258 1 288 1 54 1 267 1 222 1 175 1 
2 1 184 1 35 1 14 1 178 1 37 1 359 1 187 1 137 1 179 1 59 1 319 1 320 1 257 2 258 1 288 1 54 1 30 1 349 1 222 2 
59 3 174 1 257 3 178 3 30 1 349 3 267 1 222 3 
59 1 257 1 178 1 335 1 135 1 349 1 222 1 
255 1 59 1 305 1 257 1 178 1 174 1 335 1 349 1 222 1 
23 1 2 1 89 1 324 1 184 1 24 1 3 1 305 1 359 1 187 1 9 2 150 1 174 2 54 1 288 1 30 1 335 1 267 1 222 4 269 1 131 1 224 1 35 1 14 1 178 3 37 1 160 1 39 1 79 1 179 1 163 1 59 3 83 1 319 1 206 1 320 1 257 4 258 1 378 1 349 3 61 1 86 1 62 1 114 1 
7 1 59 1 257 2 178 1 96 1 30 1 349 2 267 1 222 2 
131 1 24 1 224 1 35 1 305 1 178 3 59 3 148 1 265 1 206 1 174 1 257 3 30 2 378 1 61 1 335 1 349 3 62 1 222 3 
137 1 59 2 310 1 305 1 257 2 178 2 174 1 30 1 349 2 222 2 
2 1 184 1 14 1 37 1 359 1 187 1 179 1 319 1 257 1 320 1 258 1 288 1 54 1 267 1 222 1 
2 1 184 1 64 1 14 1 293 1 37 1 359 1 187 1 179 1 319 1 257 1 320 1 288 1 267 1 222 1 
23 4 87 1 88 1 47 1 89 1 324 1 91 1 353 1 328 2 362 1 9 2 310 2 150 1 33 1 269 1 270 1 313 1 249 1 39 2 137 2 317 1 83 1 43 2 86 1 
279 1 224 1 59 1 257 1 178 1 335 1 349 1 222 1 
283 1 35 1 305 1 178 4 59 4 333 1 111 1 257 4 174 1 30 2 335 1 349 4 222 4 267 1 
279 1 59 2 257 2 178 2 335 1 135 1 349 2 222 2 
10 1 152 1 
10 1 152 1 
197 1 
197 1 
197 1 
10 1 311 1 152 1 
10 1 311 1 152 1 
197 1 10 1 28 1 41 1 152 1 
10 1 66 1 152 1 
10 1 311 1 152 1 
230 1 10 1 152 1 
230 1 10 1 152 1 
230 1 10 1 152 1 
366 1 120 2 4 2 185 3 308 1 251 2 229 1 125 1 147 2 10 2 318 1 265 1 165 1 206 2 164 1 128 1 152 2 129 2 61 2 
120 1 4 1 65 1 214 1 185 1 306 1 66 1 127 1 10 1 152 1 129 1 267 1 222 2 178 2 251 1 229 1 275 1 59 2 297 1 206 1 257 2 259 1 61 1 349 2 
346 1 286 1 240 1 
346 1 200 1 286 1 
247 1 375 1 200 1 202 1 240 2 286 3 
136 1 247 1 200 1 202 1 240 1 286 2 
247 2 200 1 202 1 240 1 286 2 
47 1 304 3 168 1 306 1 97 1 360 1 241 1 363 3 11 1 265 2 70 2 71 4 100 2 190 1 132 1 270 1 225 2 313 1 272 2 161 1 139 1 205 1 297 1 317 1 373 1 81 1 20 1 206 5 112 1 259 1 235 1 61 5 
47 3 144 1 304 9 306 4 168 2 186 1 169 1 241 2 363 8 265 5 11 1 70 6 71 7 29 1 190 3 103 1 132 2 196 5 270 3 225 6 313 3 272 6 161 1 139 1 205 6 317 3 373 3 206 9 20 2 207 1 112 2 235 1 61 9 350 1 22 5 
47 1 304 4 168 1 306 1 97 1 360 1 241 1 363 3 265 3 70 2 71 2 100 1 190 2 103 1 132 1 270 1 225 2 313 1 272 2 161 1 317 1 373 1 20 1 206 3 112 1 61 3 
47 2 304 7 168 1 306 2 186 1 97 1 241 1 360 1 363 5 265 4 70 4 71 3 29 1 100 2 190 3 103 1 132 1 270 2 225 4 313 2 272 4 161 1 317 2 373 2 20 1 206 4 207 1 112 1 61 4 
95 1 37 1 203 1 
172 1 37 1 
369 1 
320 1 37 1 
2 1 180 1 320 1 37 3 348 1 203 2 
2 1 320 1 37 1 
334 1 37 1 
23 7 87 3 25 1 270 1 36 1 39 3 58 1 328 4 242 1 17 1 68 2 362 2 317 1 140 1 264 1 364 1 211 1 
23 7 87 3 25 1 270 1 36 1 39 3 58 1 328 4 242 1 17 1 68 2 362 2 317 1 140 1 264 1 364 1 211 1 
23 7 87 3 25 1 223 1 270 1 36 1 39 3 58 1 328 4 242 1 17 1 68 2 362 2 317 1 140 1 264 1 364 1 211 1 
23 31 87 10 47 3 167 1 25 1 262 1 49 1 328 16 242 5 68 3 188 1 362 5 264 1 9 2 364 2 150 1 269 1 270 4 313 3 36 2 58 1 39 15 296 1 17 2 140 1 373 3 317 4 256 4 82 1 83 1 60 1 209 3 211 2 86 1 
23 9 87 4 167 1 25 1 358 1 328 5 242 1 68 2 362 3 9 4 264 1 364 1 150 2 365 1 269 2 270 1 36 1 39 4 58 1 17 1 317 1 83 2 86 2 211 1 
116 1 323 1 354 1 238 1 240 1 359 1 286 2 187 1 219 1 6 1 52 1 332 1 288 1 336 1 153 2 194 2 248 1 337 1 338 1 339 1 250 1 200 1 16 1 179 1 18 1 375 1 346 1 319 1 208 1 85 1 
116 1 323 1 354 2 238 1 240 1 359 1 286 2 187 1 219 1 6 1 287 1 220 1 52 1 332 1 288 1 336 1 153 3 191 1 194 3 248 1 338 1 250 1 200 1 16 1 179 1 375 1 18 1 346 1 319 1 85 1 
116 1 354 2 238 1 359 1 286 2 240 1 187 1 219 1 6 1 220 1 52 1 288 1 336 1 153 2 191 1 194 2 250 1 200 1 16 1 179 1 18 1 375 1 346 1 319 1 85 1 
176 1 194 1 248 1 14 1 291 1 37 1 250 2 359 1 77 1 187 1 40 1 287 1 277 1 6 2 179 1 332 1 319 1 320 1 244 1 288 1 336 2 153 1 85 2 
116 1 323 1 240 1 359 1 286 2 187 1 6 1 220 1 332 1 288 1 336 1 153 1 194 1 248 1 337 1 338 1 339 1 250 1 200 1 16 1 179 1 18 1 375 1 346 1 319 1 85 1 
198 1 
1 2 92 1 241 1 187 2 51 4 7 1 11 3 99 1 189 1 288 2 335 1 190 2 12 1 14 2 158 1 294 1 252 2 204 2 161 1 205 6 206 5 20 1 257 1 61 5 349 1 351 2 62 1 260 1 24 1 304 2 168 1 356 2 123 1 357 1 359 1 171 1 363 2 265 2 130 1 222 1 131 1 132 1 224 1 177 1 272 2 76 1 37 1 77 1 40 1 179 2 319 1 320 1 235 1 45 2 322 2 
260 1 24 1 123 1 171 1 51 2 7 1 11 1 335 1 130 1 222 1 131 1 224 1 367 1 158 1 294 1 252 1 205 2 206 3 257 1 349 1 61 3 62 1 
260 1 24 1 123 1 171 1 51 3 7 1 265 1 11 1 335 1 130 1 222 1 131 1 224 1 367 1 158 1 294 1 161 1 205 1 206 3 257 1 349 1 61 3 62 1 322 1 
260 1 24 1 123 1 171 1 51 3 7 1 11 1 265 1 335 1 130 1 222 1 131 1 224 1 367 1 158 1 294 1 252 1 204 1 161 1 205 2 206 3 257 1 349 1 61 3 62 1 322 1 
260 1 1 2 212 1 24 1 92 1 168 1 307 1 356 2 123 1 171 1 241 1 51 6 7 1 363 1 265 5 11 3 335 1 130 1 190 2 268 1 222 1 131 1 12 1 195 1 224 1 367 1 272 1 158 1 294 1 252 4 204 4 161 5 205 7 20 1 206 5 257 1 235 1 45 2 349 1 61 5 351 2 298 1 322 4 62 1 
1 2 92 1 241 1 51 4 7 1 11 2 99 1 335 1 190 2 12 1 158 1 294 1 252 2 204 2 161 1 205 4 206 4 20 1 257 1 349 1 61 4 62 1 351 2 260 1 24 1 304 2 168 1 356 2 123 1 171 1 363 1 265 2 130 1 222 1 131 1 224 1 272 1 235 1 45 2 322 2 
260 1 1 2 24 1 212 1 92 1 307 1 168 1 356 2 123 1 171 1 241 1 51 4 7 1 363 1 265 1 11 2 335 1 130 1 190 2 268 1 222 1 131 1 12 1 224 1 272 1 158 1 294 1 252 2 204 2 161 1 205 4 20 1 206 4 257 1 235 1 45 2 349 1 61 4 322 2 351 2 62 1 
260 1 1 2 24 1 212 1 92 1 307 1 168 1 356 2 123 1 171 1 241 1 51 4 7 1 363 1 265 1 11 2 335 1 130 1 190 2 268 1 222 1 131 1 12 1 224 1 272 1 158 1 294 1 252 2 204 2 161 1 205 4 20 1 206 4 257 1 235 1 45 2 349 1 61 4 322 2 351 2 62 1 
260 1 119 1 24 1 48 1 304 2 168 1 263 1 356 2 123 1 171 1 241 1 51 4 7 1 363 1 265 1 11 2 335 1 130 1 268 1 222 1 131 1 12 1 224 1 272 1 158 1 294 1 252 2 204 2 161 1 231 2 205 4 281 2 20 1 206 4 257 1 235 1 45 2 349 1 61 4 322 2 62 1 
260 1 1 2 24 1 212 1 92 1 168 1 307 1 356 2 123 1 171 1 241 1 51 5 7 1 363 1 265 1 11 2 335 1 130 1 190 2 268 1 222 1 131 1 12 1 224 1 272 1 158 1 294 1 252 3 204 3 161 1 205 5 20 1 206 4 257 1 235 1 45 2 349 1 61 4 351 2 62 1 298 1 322 3 
260 1 1 2 24 1 212 1 92 1 168 1 307 1 356 2 123 1 171 1 241 1 51 5 7 1 363 1 265 1 11 2 335 1 130 1 190 2 268 1 222 1 131 1 12 1 224 1 272 1 158 1 294 1 252 3 204 3 161 1 205 5 20 1 206 4 257 1 235 1 45 2 349 1 61 4 351 2 62 1 298 1 322 3 
241 1 51 4 7 1 11 2 99 1 335 1 12 1 158 1 294 1 252 2 204 2 161 1 205 4 206 4 20 1 257 1 349 1 61 4 62 1 260 1 24 1 304 2 168 1 263 1 356 2 123 1 171 1 363 1 265 1 130 1 222 1 131 1 224 1 272 1 231 2 281 2 235 1 45 2 322 2 
23 6 87 2 88 1 25 1 89 1 324 1 95 1 328 3 68 1 362 2 264 1 9 2 310 1 364 1 150 1 267 2 269 1 270 1 36 1 58 1 39 3 137 1 317 1 83 1 43 1 86 1 
23 14 87 2 47 2 300 1 89 2 324 1 3 1 94 1 49 1 328 8 242 1 362 1 9 4 310 4 150 2 267 1 269 2 270 2 313 1 316 1 38 1 39 6 137 11 373 2 317 1 376 1 256 3 83 2 43 11 60 1 209 3 46 1 86 2 
23 2 2 1 184 1 89 1 324 1 3 1 285 1 284 1 359 1 187 1 328 1 9 2 310 1 150 1 54 1 288 1 30 1 267 1 175 1 222 2 269 1 35 1 14 1 178 1 37 1 316 1 39 1 179 1 59 1 376 1 83 1 319 1 320 1 257 2 258 1 349 1 86 1 380 1 
87 8 2 2 47 2 324 3 89 3 184 2 3 1 187 3 328 10 242 4 9 6 331 2 150 3 288 3 54 2 107 1 14 1 58 1 59 1 257 3 258 2 349 1 210 2 23 20 117 2 25 1 216 2 359 2 68 1 220 1 362 4 264 1 364 1 310 7 266 1 30 1 267 2 222 3 269 3 270 3 74 1 35 1 313 2 36 1 178 1 37 2 316 1 39 10 79 2 137 7 179 3 317 3 373 2 376 1 83 3 319 2 320 2 43 7 86 3 
23 2 88 1 89 2 324 2 3 1 302 1 121 1 215 1 122 2 359 2 187 8 328 1 220 1 9 4 150 2 288 7 30 1 222 1 269 2 73 1 14 2 178 1 37 3 340 1 316 1 276 1 39 1 77 1 343 1 40 1 179 8 59 1 83 2 319 2 257 1 320 2 208 1 349 1 86 2 
23 3 87 1 47 1 89 1 324 1 305 1 5 1 328 1 362 1 9 2 310 1 150 1 174 1 222 1 269 1 270 1 313 1 178 1 39 2 137 1 59 1 373 1 317 1 376 1 83 1 257 1 43 1 349 1 86 1 
23 2 269 1 87 1 88 1 47 1 324 1 89 1 270 1 249 1 328 2 242 1 137 1 9 2 310 1 83 1 150 1 43 1 86 1 
23 2 269 1 87 1 88 1 324 1 89 1 91 1 313 1 39 2 137 1 362 1 9 2 317 1 310 1 83 1 150 1 43 1 86 1 
23 4 87 2 47 1 88 1 89 1 324 1 328 2 242 1 362 1 9 2 310 2 150 1 269 1 270 1 313 1 39 2 137 2 373 1 317 1 83 1 43 2 86 1 
23 2 269 1 87 1 47 1 324 1 89 1 270 1 249 1 340 1 328 2 242 1 137 1 9 2 310 1 83 1 150 1 43 1 86 1 
23 2 269 1 87 1 324 1 89 1 91 1 313 1 340 1 39 2 137 1 362 1 9 2 317 1 310 1 83 1 150 1 43 1 86 1 
23 4 87 2 47 1 89 1 324 1 328 2 242 1 362 1 9 2 310 2 150 1 269 1 270 1 313 1 340 1 39 2 137 2 373 1 317 1 83 1 43 2 86 1 
23 4 87 2 47 1 89 1 324 1 328 2 242 1 362 1 9 2 310 2 150 1 269 1 270 1 313 1 39 2 137 2 373 1 317 1 83 1 43 2 86 1 
23 2 2 1 184 1 324 1 89 1 3 1 359 1 328 1 187 1 9 2 150 1 54 1 288 1 267 1 222 1 269 1 14 1 37 1 316 1 39 1 79 1 179 1 83 1 319 1 320 1 257 1 258 1 86 1 
23 2 2 1 184 1 324 1 89 1 64 1 3 1 359 1 328 1 187 1 9 2 150 1 288 1 267 1 32 1 222 1 269 1 14 1 293 1 37 1 316 1 39 1 179 1 83 1 319 1 320 1 257 1 86 1 
23 4 87 2 47 1 89 1 324 1 328 2 242 1 362 1 9 2 310 2 150 1 269 1 270 1 313 1 39 2 137 2 373 1 317 1 376 1 83 1 43 2 86 1 
23 4 87 2 117 1 47 1 2 1 184 1 324 1 89 1 359 1 328 2 187 1 242 1 362 1 9 2 310 2 150 1 54 1 288 1 222 1 269 1 270 1 313 1 37 1 39 2 137 2 79 1 179 1 317 1 373 1 83 1 319 1 320 1 257 1 258 1 43 2 208 1 86 1 
23 3 87 1 47 1 89 1 324 1 305 1 328 2 242 1 9 2 310 1 150 1 174 1 222 1 269 1 270 1 313 1 178 1 39 1 137 1 371 1 317 1 59 1 373 1 376 1 83 1 257 1 43 1 349 1 86 1 
87 8 47 4 90 2 49 3 328 20 242 4 9 6 150 3 289 1 246 1 58 1 345 1 256 4 60 1 166 1 209 3 23 41 167 1 25 1 301 1 303 1 26 1 358 1 68 1 362 4 264 1 364 1 269 3 270 5 271 1 226 1 313 4 36 1 274 1 39 21 372 1 317 5 373 4 374 1 83 3 44 4 86 3 321 1 
23 38 87 7 167 2 47 4 301 1 25 1 90 2 303 1 26 1 49 3 358 1 328 20 242 3 68 1 362 4 264 1 9 8 364 1 150 4 289 1 269 4 246 1 270 5 226 1 271 1 313 3 36 1 274 1 58 1 39 18 372 1 345 1 374 1 373 4 317 4 256 4 83 4 166 1 60 1 44 4 209 3 321 1 86 4 
23 52 87 14 167 1 47 7 300 2 25 1 90 1 303 1 26 1 49 2 358 1 328 27 242 7 68 1 362 7 264 1 9 4 364 1 150 2 289 1 269 2 246 1 270 8 226 1 271 1 313 7 36 1 274 1 58 1 39 25 372 1 374 1 373 7 317 8 256 4 83 2 166 1 60 2 44 4 209 4 321 1 86 2 
23 19 87 6 47 3 90 1 49 1 358 1 328 9 242 3 362 3 9 4 150 2 289 1 269 2 270 3 226 2 313 3 39 10 372 1 345 1 374 1 373 3 317 3 256 2 83 2 141 1 166 1 60 1 44 2 209 1 86 2 
23 26 87 4 167 2 47 3 90 2 303 1 26 1 49 2 358 1 328 14 242 2 362 2 9 6 150 3 289 2 269 3 246 1 270 3 226 1 271 1 313 2 274 1 39 12 372 1 317 2 374 1 373 3 256 2 83 3 166 1 44 4 209 2 86 3 321 1 
120 1 10 1 4 1 165 1 128 1 251 1 152 1 129 1 125 1 370 1 
127 1 66 1 
120 1 10 1 4 1 75 1 251 1 379 1 152 1 72 1 129 1 
366 1 120 1 4 1 185 2 229 1 251 1 125 1 147 1 10 1 318 1 265 1 165 1 206 1 164 1 128 1 152 1 61 1 129 1 
366 1 120 1 4 1 185 2 229 1 251 1 125 1 147 1 10 1 318 1 265 1 165 1 206 1 164 1 128 1 152 1 61 1 129 1 
366 1 120 1 4 1 185 2 229 1 251 1 125 1 147 1 10 1 318 1 265 1 165 1 206 1 164 1 128 1 152 1 61 1 129 1 
361 1 28 1 311 1 
361 1 28 1 311 1 
253 1 230 1 
253 1 230 1 28 1 
214 1 65 1 
120 1 4 1 65 1 214 1 185 1 306 1 66 1 147 1 127 1 10 1 71 1 152 1 129 1 267 1 222 2 178 2 251 1 275 1 297 1 59 2 164 1 206 1 257 2 259 1 113 1 61 1 349 2 
361 1 311 1 
253 1 230 1 28 1 
23 2 89 1 324 1 3 1 121 1 215 1 122 2 359 1 218 1 187 2 328 1 9 2 150 1 221 1 288 2 222 2 269 1 368 1 37 1 201 1 316 1 39 1 179 2 19 1 376 1 83 1 319 1 320 1 257 2 349 2 86 1 
118 1 323 1 200 1 341 1 240 1 286 2 359 1 187 2 16 1 179 2 220 1 375 1 18 1 346 1 319 1 42 1 288 2 208 1 336 1 
245 1 323 1 200 1 240 1 286 2 359 1 187 1 16 1 179 1 220 1 375 1 18 1 346 1 42 1 319 1 288 1 336 1 
118 1 14 1 37 1 359 1 187 1 77 1 40 1 179 1 319 1 320 1 288 1 244 1 336 1 282 1 
118 1 323 1 200 1 341 1 240 1 286 2 359 1 187 1 16 1 179 1 220 1 375 1 18 1 346 1 319 1 42 1 288 1 336 1 
312 1 
161 1 105 1 363 1 265 1 325 1 272 1 95 1 
1 1 92 1 304 1 168 1 241 1 363 1 265 2 11 1 190 1 272 1 161 1 205 1 20 1 206 1 235 1 61 1 351 1 
299 1 2 1 168 1 14 1 37 1 359 1 241 1 187 1 126 1 172 1 179 1 180 1 319 2 20 1 320 1 235 1 288 1 
47 2 352 1 303 1 304 6 168 2 26 1 49 1 241 2 363 8 11 1 265 5 70 5 189 1 190 3 102 1 132 1 155 1 246 1 270 2 225 5 272 5 313 2 274 1 161 2 205 1 280 2 373 2 317 2 256 1 206 1 20 2 235 2 61 1 209 1 321 1 
168 1 307 1 241 1 363 2 364 1 174 1 335 1 222 1 155 1 270 2 56 1 272 2 36 1 178 1 135 1 160 1 58 1 295 1 280 2 317 1 59 1 20 1 206 1 257 1 21 1 235 1 61 1 349 1 
105 1 325 1 168 1 272 1 241 1 161 1 363 1 265 1 20 1 235 1 
155 1 47 2 270 2 225 5 216 1 304 10 272 5 313 2 280 2 373 2 317 2 363 5 265 5 70 5 190 5 
161 1 205 1 265 1 11 1 206 1 61 1 
168 2 357 1 359 1 241 2 187 4 8 1 330 1 363 2 11 2 288 4 189 2 154 2 103 1 132 2 76 1 14 2 272 2 314 1 37 1 77 1 40 1 179 4 205 4 319 1 20 2 206 3 320 1 235 1 61 3 
23 1 2 1 184 1 324 1 89 1 3 1 359 1 187 1 9 2 150 1 174 2 288 1 54 1 267 1 222 3 269 1 14 1 178 2 37 1 160 1 39 1 79 1 179 1 59 2 83 1 319 1 257 3 320 1 258 1 349 2 114 1 86 1 
132 1 225 2 304 4 272 2 168 1 241 1 161 2 68 1 363 1 265 4 20 1 70 2 235 1 189 1 190 2 
120 1 133 1 251 1 
120 1 133 1 251 1 
120 1 214 1 326 1 128 1 251 1 
120 1 133 1 251 1 
278 1 120 1 251 1 
278 1 120 1 251 1 
278 1 120 1 251 1 
120 1 251 1 
10 1 152 1 
23 8 87 2 25 1 49 1 358 1 328 4 68 1 362 2 9 2 264 1 364 1 150 1 269 1 270 1 36 1 274 1 39 4 58 1 317 1 256 1 83 1 209 1 86 1 
23 11 87 3 47 1 25 1 49 1 358 1 328 6 242 1 68 1 362 2 264 1 9 4 364 1 150 2 269 2 270 2 156 1 36 1 274 1 58 1 39 5 317 1 373 1 256 2 83 2 60 1 209 1 86 2 
23 19 87 4 47 2 167 1 25 1 303 1 49 1 26 1 358 1 328 9 242 1 68 1 362 3 264 1 9 6 364 1 150 3 269 3 246 1 270 3 156 1 313 2 36 1 274 1 58 1 39 10 373 2 317 3 256 1 83 3 209 1 86 3 321 1 
23 17 87 5 167 1 47 2 25 1 303 1 49 1 26 1 358 1 328 10 242 2 68 1 362 3 264 1 9 6 364 1 150 3 269 3 246 1 270 3 156 1 313 1 36 1 274 1 58 1 39 7 373 2 317 2 256 1 83 3 209 1 86 3 321 1 
23 8 87 2 25 1 49 1 358 1 328 4 68 1 362 2 9 2 264 1 364 1 150 1 269 1 270 1 36 1 274 1 39 4 58 1 317 1 256 1 83 1 209 1 86 1 
269 1 23 12 87 2 47 2 246 1 270 2 303 1 313 2 274 1 26 1 49 1 358 1 328 6 39 6 242 1 362 1 317 2 373 2 9 2 256 1 83 1 150 1 209 1 321 1 86 1 
23 18 87 5 47 2 167 2 25 1 303 1 26 1 49 1 358 1 328 10 242 2 68 1 362 3 264 1 9 8 364 1 150 4 269 4 246 1 270 3 156 1 313 1 36 1 274 1 58 1 39 8 373 2 317 2 256 1 83 4 209 1 86 4 321 1 
23 16 87 6 47 3 167 2 303 1 26 1 49 1 358 1 328 9 242 3 362 3 9 8 150 4 269 4 246 1 270 3 313 2 274 1 39 7 345 1 373 3 317 2 256 1 83 4 209 1 86 4 321 1 
23 7 87 6 25 2 270 1 36 3 39 4 58 1 328 3 242 3 362 3 317 1 264 1 364 3 
23 18 87 4 47 2 167 2 25 1 303 1 26 1 49 1 358 1 328 10 242 1 68 1 362 3 264 1 9 8 364 1 150 4 269 4 246 1 270 3 313 1 36 1 274 1 58 1 39 8 345 1 373 2 317 2 256 1 83 4 209 1 86 4 321 1 
23 8 269 2 87 3 167 1 25 1 270 1 36 1 58 1 39 4 328 4 242 1 68 1 362 2 317 1 9 4 264 1 364 1 83 2 150 2 86 2 
23 6 87 2 25 1 270 1 95 1 36 1 39 3 58 1 328 3 68 1 362 2 264 1 317 1 364 1 
269 1 23 4 87 2 47 1 270 1 156 1 313 1 39 2 328 2 242 1 362 1 317 1 9 2 373 1 83 1 150 1 86 1 
23 7 87 2 47 1 270 1 313 1 49 1 39 4 328 3 242 1 362 1 317 1 373 1 256 2 60 1 209 1 
23 23 87 9 47 2 167 2 300 1 25 1 355 1 328 11 242 4 68 1 362 5 264 1 9 4 364 2 150 2 269 2 270 3 313 2 36 2 38 1 58 1 39 12 373 2 317 3 256 2 83 2 60 1 209 2 86 2 
23 1 39 1 256 1 
23 1 328 1 209 1 
269 1 23 6 87 3 47 1 270 1 156 1 216 1 313 1 39 3 328 3 242 1 362 2 9 2 373 1 317 1 150 1 83 1 86 1 
269 1 23 12 87 2 47 2 246 1 270 2 303 1 313 2 274 1 26 1 49 1 358 1 328 6 39 6 242 1 362 1 317 2 373 2 9 2 256 1 83 1 150 1 209 1 321 1 86 1 
23 6 87 2 270 1 36 1 58 1 328 3 39 3 242 1 362 1 317 1 364 1 
23 3 269 1 87 2 167 1 25 1 36 1 355 1 328 1 39 2 242 1 362 1 9 2 264 1 364 1 83 1 150 1 86 1 
269 1 23 10 87 5 270 2 56 1 36 2 358 1 328 5 39 5 58 1 242 2 362 3 9 2 317 2 364 2 150 1 83 1 86 1 
269 1 23 2 87 1 47 1 270 1 358 1 328 2 242 1 9 2 83 1 150 1 86 1 
269 1 23 4 87 2 47 1 270 1 313 1 358 1 39 2 328 2 242 1 362 1 317 1 9 2 373 1 83 1 150 1 86 1 
23 3 269 3 87 2 167 1 36 1 355 1 358 1 39 2 328 1 242 1 345 1 362 1 9 6 364 1 83 3 150 3 86 3 
23 34 87 12 167 2 47 3 25 1 262 1 355 1 49 1 358 1 328 16 242 5 68 1 188 1 362 7 264 1 9 10 364 3 150 5 269 5 270 5 156 1 313 3 36 3 58 2 39 18 345 1 373 3 317 5 82 1 256 4 83 5 60 1 209 3 86 5 
342 1 96 1 7 1 257 1 111 1 335 1 349 1 222 1 267 1 
57 1 67 1 342 1 96 1 309 1 7 1 80 1 53 1 111 1 257 1 335 1 349 1 267 1 222 1 
77 1 187 1 40 1 179 1 319 1 95 1 14 1 320 1 37 1 288 1 359 1 
2 1 184 1 14 1 178 1 37 1 359 1 187 1 179 1 59 1 319 1 320 1 257 2 258 1 288 1 30 1 349 1 267 1 222 2 
143 1 2 2 184 1 24 1 359 1 187 1 334 1 288 1 30 1 335 1 267 1 222 2 154 1 224 1 178 2 37 3 179 1 59 1 319 1 257 2 320 2 258 1 349 2 
143 1 2 2 184 1 24 1 359 1 187 2 173 1 334 1 288 2 30 1 335 1 267 1 222 2 154 1 224 1 293 1 178 2 37 3 179 2 59 1 319 1 257 2 320 2 349 2 
143 1 2 1 359 1 187 3 172 1 98 1 265 1 173 1 334 1 288 3 154 1 14 1 37 4 203 1 161 1 179 3 205 1 206 2 319 1 320 1 61 2 115 1 62 1 
143 1 154 1 2 1 14 1 37 4 203 1 359 1 187 3 161 1 172 1 179 3 205 1 265 1 173 1 334 1 319 1 206 2 233 1 320 1 288 3 61 2 62 1 
187 1 179 1 302 1 319 1 288 1 359 1 
2 1 73 1 302 1 121 1 261 1 122 1 108 1 14 2 228 1 37 3 359 2 276 1 187 7 343 1 179 7 180 1 220 1 319 3 320 2 208 1 288 6 
87 2 2 1 324 2 89 2 184 1 187 1 328 3 9 4 331 1 150 2 54 1 288 1 201 1 58 1 59 1 257 2 258 1 208 1 349 1 23 6 117 1 25 1 359 1 68 1 362 2 264 1 310 1 364 1 30 1 222 2 267 2 269 2 270 1 178 1 36 1 37 1 39 3 79 1 137 1 179 1 317 1 376 1 83 2 319 1 320 1 43 1 86 2 
0 1 325 1 168 2 187 1 241 2 172 1 243 1 8 1 363 1 265 1 11 1 71 1 288 1 290 1 105 1 272 1 14 1 37 2 203 1 161 1 179 1 205 2 20 2 206 3 233 1 235 2 61 3 62 1 
299 1 2 1 302 1 37 1 369 1 203 1 359 1 187 1 179 1 180 1 319 2 320 1 288 1 
14 1 37 1 159 1 359 1 187 4 77 1 40 1 179 4 173 1 319 1 320 1 288 4 208 1 
154 1 2 1 108 1 228 1 37 1 359 1 187 2 138 1 179 2 232 1 266 1 319 2 320 1 288 2 
187 1 16 1 179 1 346 1 319 1 14 1 200 1 288 1 286 1 359 1 
121 1 37 1 359 1 187 2 218 1 179 2 220 1 319 1 320 1 208 1 288 2 
154 1 73 1 121 1 14 1 37 3 159 1 359 2 77 1 187 5 276 1 40 1 179 5 319 2 320 2 288 4 208 1 
154 1 121 1 14 1 37 3 159 1 359 2 77 1 187 5 276 1 40 1 179 5 319 2 320 2 288 4 208 1 377 1 
2 1 184 1 14 1 178 1 293 1 37 1 359 1 187 1 179 1 59 1 319 1 320 1 257 2 288 1 30 1 349 1 267 1 222 2 
154 1 2 1 261 1 108 1 228 1 37 1 359 1 187 1 179 1 180 1 319 2 320 1 288 1 
15 1 104 1 254 1 182 1 267 1 
34 1 104 2 131 1 24 1 224 1 213 1 15 1 110 1 161 1 254 2 182 2 265 1 206 2 71 1 378 1 335 1 61 2 267 1 62 1 
368 1 15 1 254 1 19 1 182 1 257 1 221 1 349 1 222 1 
34 1 110 1 15 1 
219 1 52 1 95 1 238 1 
219 1 194 1 248 1 52 1 332 1 238 1 153 1 
250 1 85 1 153 1 
193 1 63 1 194 3 248 1 55 2 339 1 273 1 238 1 219 1 52 1 332 1 153 3 
219 1 194 2 248 1 52 1 162 1 332 1 354 1 238 1 153 2 
194 1 248 1 346 1 332 1 151 1 339 1 238 1 153 1 286 1 240 1 239 1 
194 1 248 1 52 1 332 1 339 1 238 1 153 1 
219 1 194 1 248 1 52 2 332 1 339 1 153 1 
194 2 248 2 339 1 238 1 329 1 181 1 52 1 332 2 234 1 153 2 
219 1 194 3 106 1 236 1 248 1 52 1 332 1 151 1 354 2 347 1 339 1 238 2 153 3 
194 2 248 1 354 1 339 1 200 1 238 1 124 1 286 2 240 1 219 1 52 1 375 1 346 1 332 1 153 2 
194 4 248 2 354 2 339 1 238 2 219 1 52 1 162 1 332 2 151 1 347 1 84 1 153 4 
219 1 194 1 248 1 52 1 332 1 339 1 238 1 153 1 
193 1 194 4 55 1 248 1 354 2 273 1 238 3 219 2 52 2 332 1 151 1 347 1 142 1 153 4 
194 2 248 1 13 1 237 1 354 1 339 1 109 1 238 1 219 1 52 1 332 1 153 2 
193 2 194 3 248 1 55 2 273 1 339 1 27 1 238 1 219 1 52 1 332 1 153 3 
217 1 199 2 146 1 238 2 
194 1 248 1 145 1 332 1 339 1 153 1 
219 1 194 2 106 1 248 1 52 1 332 1 354 1 339 1 238 1 153 2 
344 1 
219 1 194 1 248 1 52 1 332 1 339 1 238 1 153 1 
219 1 194 3 106 1 55 1 248 1 52 1 332 1 354 1 339 1 238 1 153 3 
151 1 347 1 142 1 238 1 
52 1 238 1 

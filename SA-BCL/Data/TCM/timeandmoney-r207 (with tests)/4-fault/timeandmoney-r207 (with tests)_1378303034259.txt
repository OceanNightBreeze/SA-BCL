#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 195 1 23 2 286 1 168 2 228 1 69 1 31 1 328 1 293 3 202 1 12 3 306 2 
147 1 195 1 23 2 286 2 83 1 31 1 244 2 162 1 10 2 293 9 202 4 12 9 14 1 61 3 116 2 322 1 168 5 228 1 187 2 69 6 39 1 328 1 21 1 189 1 379 1 380 1 280 1 306 2 
147 1 195 1 23 2 286 2 83 1 31 1 244 2 162 1 10 2 293 9 202 4 12 9 14 1 61 3 116 2 322 1 168 5 228 1 187 2 69 6 39 1 328 1 21 1 189 1 379 1 380 1 280 1 306 2 
147 1 195 1 23 2 286 2 83 1 31 1 244 2 162 1 10 2 293 10 202 5 12 10 14 1 61 4 116 2 322 1 168 6 228 1 187 2 69 7 39 1 328 1 21 1 189 1 379 1 380 1 280 1 306 2 
147 1 195 1 23 2 286 2 83 1 31 1 244 1 162 1 10 2 293 7 202 3 12 7 14 1 61 2 116 2 322 1 168 4 228 1 187 2 69 4 39 1 328 1 21 1 189 1 379 1 380 1 306 2 
61 1 116 1 23 1 168 3 228 1 187 1 69 3 39 1 31 1 328 1 244 2 162 1 10 1 293 4 280 1 202 2 12 4 306 1 
116 1 23 1 168 1 286 1 228 1 131 1 187 1 94 1 31 1 328 1 189 1 21 1 293 2 218 1 12 2 306 1 
195 1 23 2 286 1 31 1 244 2 162 1 10 1 293 9 202 4 12 9 61 3 116 1 322 1 168 5 228 1 187 1 69 7 39 1 328 1 41 1 145 1 380 1 280 1 306 2 
195 1 23 2 286 1 31 1 244 2 162 1 10 1 293 9 202 4 12 9 61 3 116 1 322 1 168 5 228 1 187 1 69 7 39 1 328 1 41 1 145 1 380 1 280 1 306 2 
57 1 308 1 148 1 348 1 51 1 152 1 153 1 5 1 52 1 179 1 132 1 73 1 292 1 258 1 
234 1 
115 1 108 1 148 1 348 2 200 1 153 2 92 1 234 1 
115 1 263 1 185 2 148 2 129 1 149 2 348 5 264 1 273 1 90 1 105 1 153 5 155 2 197 1 108 2 351 1 43 1 200 1 234 1 
115 1 24 1 234 1 
141 1 
57 2 308 2 132 2 51 2 292 2 258 2 52 1 81 1 
0 1 335 1 308 2 236 1 51 2 177 1 52 1 29 1 81 1 238 2 313 1 361 1 107 2 109 1 132 3 266 1 366 1 316 2 292 3 319 1 113 1 201 1 57 3 15 1 320 1 249 2 139 1 36 1 229 1 188 2 253 1 172 1 73 1 143 1 212 1 42 1 256 2 191 2 302 1 258 3 261 2 
57 1 308 1 132 1 73 1 51 1 292 1 152 1 258 1 52 1 5 1 
115 1 57 1 0 1 373 1 139 1 348 1 153 1 73 1 124 1 292 1 258 1 126 1 234 1 344 1 
115 1 57 1 0 1 308 1 139 1 51 1 348 2 153 2 132 1 73 1 292 1 258 1 126 1 234 1 344 1 
108 1 148 1 348 1 153 1 34 1 
115 1 108 1 148 1 348 2 200 1 153 2 234 1 295 1 
108 1 348 1 153 1 
57 2 308 1 51 1 178 1 81 2 132 1 292 2 331 1 258 2 
9 1 317 1 279 1 
57 1 0 1 320 1 335 1 249 1 139 1 177 1 229 1 81 1 238 2 361 1 70 1 107 1 188 2 132 1 73 1 292 1 316 2 258 1 319 1 201 1 261 1 
24 1 81 1 
57 2 0 1 335 1 320 1 308 1 225 1 249 1 139 1 229 1 177 1 238 2 361 1 312 1 188 2 107 1 132 2 73 1 316 2 292 2 279 1 319 1 258 2 201 1 261 1 
57 5 308 4 225 1 150 1 51 1 230 1 312 2 81 1 132 4 124 1 292 5 331 1 258 5 134 1 
57 2 308 2 132 2 73 1 292 2 152 1 258 2 269 1 
57 3 308 3 132 3 51 1 292 3 258 3 81 1 312 1 
57 1 308 1 132 1 73 1 292 1 152 1 258 1 
57 1 308 1 132 1 73 1 51 1 292 1 331 1 258 1 178 1 
0 2 335 1 308 3 236 1 51 2 177 1 153 1 52 1 81 1 238 2 361 1 312 1 107 1 109 1 132 4 266 1 366 1 316 2 292 4 319 1 113 1 201 1 344 1 57 4 15 1 320 1 225 1 249 1 139 2 348 1 229 1 188 2 93 1 18 1 172 1 73 2 143 1 212 1 256 1 191 2 302 1 331 1 258 4 126 1 261 1 
57 2 308 1 132 1 124 1 292 2 230 1 258 2 81 1 312 1 
57 3 0 1 308 3 225 1 139 1 51 1 348 1 153 1 312 2 93 1 132 3 73 1 6 1 292 3 331 1 258 3 126 1 234 1 344 1 
57 2 308 2 132 2 51 1 9 1 292 2 331 1 279 1 258 2 312 1 
57 1 0 1 320 1 335 1 249 1 139 1 177 1 229 1 81 1 361 1 238 2 107 1 188 2 132 1 73 1 292 1 316 2 258 1 319 1 201 1 261 1 
57 1 0 1 335 1 249 1 139 1 177 1 229 1 81 1 238 2 107 1 188 2 132 1 276 1 73 1 292 1 316 2 258 1 319 1 201 1 261 1 368 1 
236 1 196 1 339 1 29 2 109 1 198 1 366 1 9 2 317 2 367 1 86 1 247 1 15 1 63 1 119 1 327 1 172 2 255 1 143 1 256 4 191 2 302 1 279 2 98 1 
57 1 0 1 308 1 132 1 73 1 292 1 258 1 269 1 
72 1 110 1 192 1 
251 1 231 1 72 2 300 1 96 1 110 2 
72 1 110 1 
72 1 110 1 
231 1 96 1 
231 1 96 1 
231 1 96 1 
72 1 40 1 110 1 
72 1 40 1 110 1 
72 1 40 1 110 1 
72 1 330 1 110 1 
72 1 330 1 110 1 
72 1 330 1 110 1 
308 2 49 1 153 1 81 1 215 1 132 2 110 1 315 1 291 1 292 2 217 1 57 2 272 1 62 1 166 1 348 1 250 1 91 1 72 1 232 1 381 1 258 2 259 1 192 1 
47 1 62 2 272 2 137 2 348 2 153 2 91 2 251 1 72 2 110 2 291 1 315 3 216 1 85 1 11 1 381 2 382 1 234 1 13 1 
37 1 116 2 365 2 10 1 218 1 
116 1 10 1 187 1 
116 1 218 1 187 1 
37 1 116 3 365 1 10 2 218 1 340 1 
37 1 116 2 365 1 321 1 10 1 218 1 
334 2 1 1 263 3 103 1 176 2 148 4 149 1 49 1 359 1 105 2 153 5 339 1 155 1 362 1 108 1 7 2 200 1 217 1 86 1 115 1 185 1 348 5 63 1 65 1 227 1 38 1 122 1 327 1 141 3 43 1 259 1 234 2 
334 6 1 2 263 8 176 6 148 7 149 2 49 4 359 2 105 6 153 9 339 3 155 2 314 1 362 3 108 6 200 1 34 5 87 1 86 3 115 1 185 2 204 1 226 1 348 9 63 3 65 3 90 1 349 5 67 1 122 1 327 3 376 1 141 9 43 1 234 5 
1 1 263 3 334 2 148 2 176 2 149 1 49 1 359 1 105 2 153 3 155 1 339 1 362 1 7 1 86 1 115 1 185 1 348 3 63 1 65 2 90 1 227 1 38 1 327 1 141 4 234 3 
334 4 1 1 263 5 176 4 148 3 149 1 49 2 359 1 105 4 153 4 155 1 339 2 314 1 362 2 7 2 86 2 87 1 115 1 185 1 204 1 348 4 63 2 65 3 90 1 227 1 38 1 327 2 141 7 234 4 
310 1 
104 1 24 1 238 1 
127 1 238 1 
188 1 316 1 238 1 
101 1 238 1 
188 1 238 1 
188 1 104 2 364 1 76 1 316 1 238 3 
58 1 203 1 358 1 196 3 339 1 29 4 171 1 343 2 142 1 172 3 19 1 233 1 256 7 367 2 114 1 33 1 303 1 86 1 
358 2 236 1 196 10 339 4 181 1 29 16 362 3 109 1 343 3 366 1 54 4 367 5 114 2 33 1 296 3 86 4 58 2 165 1 16 1 203 5 63 3 323 1 171 1 95 1 327 3 142 1 172 15 254 1 143 1 173 1 233 1 256 31 191 2 303 2 
194 1 236 2 358 1 196 4 339 1 181 1 29 5 109 2 343 2 366 2 367 3 114 1 33 1 86 1 294 1 58 1 203 1 171 1 172 4 143 2 256 9 233 1 191 4 303 1 
58 1 203 1 358 1 196 3 339 1 29 4 171 1 343 2 142 1 172 3 256 7 233 1 367 2 114 1 33 1 303 1 86 1 
58 1 203 1 358 1 196 3 339 1 29 4 171 1 343 2 142 1 172 3 256 7 233 1 367 2 114 1 33 1 303 1 86 1 
164 1 235 1 249 1 205 2 23 1 64 1 286 2 229 1 265 2 177 1 238 1 342 1 188 1 107 1 30 1 242 1 293 1 201 1 221 1 12 1 332 2 306 1 261 1 
75 1 48 1 23 1 286 1 265 1 340 1 107 1 10 1 293 1 218 1 183 1 201 1 12 1 223 1 88 1 249 1 116 2 205 1 228 1 229 1 187 1 68 1 281 1 332 1 261 1 306 1 
75 1 48 1 23 1 286 1 265 1 340 1 107 1 31 1 10 1 293 2 218 1 183 1 201 1 12 2 223 1 249 1 116 2 205 1 168 1 228 1 229 1 187 1 68 1 69 1 328 1 281 1 332 1 213 1 261 1 306 1 
75 1 235 1 22 1 48 1 23 1 286 1 265 1 340 1 107 1 31 1 10 1 293 3 218 1 183 1 201 1 12 3 223 1 88 1 249 1 116 2 205 1 168 1 229 1 187 1 68 1 69 2 328 1 332 1 261 1 306 1 
22 1 48 1 286 1 265 1 340 1 107 1 31 1 10 1 293 2 218 1 183 1 201 1 12 2 88 1 249 1 116 2 205 1 168 1 229 1 68 1 187 1 69 2 328 1 332 1 261 1 
28 1 
283 1 0 1 336 2 149 1 284 1 50 4 105 2 153 5 155 1 341 1 238 1 108 6 107 2 160 2 200 3 292 1 163 1 201 1 55 1 56 2 344 1 115 1 57 1 164 1 249 2 348 5 65 2 64 1 350 1 17 1 73 1 124 1 258 1 126 1 261 2 353 2 263 2 359 1 130 1 177 2 80 1 270 2 371 1 135 1 185 1 136 2 373 1 139 1 229 1 326 2 188 1 275 1 141 2 43 1 234 2 
353 1 0 1 284 1 50 2 153 3 108 2 292 1 200 1 344 1 57 1 135 1 371 1 373 1 139 1 348 3 92 1 350 1 17 1 73 1 124 1 258 1 126 1 
0 1 284 1 50 3 153 3 108 1 292 1 200 1 344 1 270 1 57 1 115 1 135 1 371 1 373 1 139 1 348 3 92 1 350 1 17 1 73 1 124 1 258 1 126 1 234 1 
353 1 0 1 284 1 50 3 153 3 108 2 200 1 292 1 344 1 56 1 270 1 57 1 115 1 135 1 371 1 373 1 139 1 348 3 92 1 350 1 17 1 73 1 124 1 258 1 126 1 234 1 
353 2 0 1 308 1 284 1 51 1 50 2 152 1 52 1 5 1 153 3 360 1 179 1 108 3 132 1 200 1 292 2 344 1 56 2 345 1 115 1 57 2 135 1 371 1 373 1 139 1 348 3 92 1 350 1 17 1 73 2 124 1 258 2 126 1 234 1 
0 1 283 1 336 2 149 1 284 1 50 4 105 1 153 4 155 1 108 4 160 2 292 1 200 2 344 1 56 2 57 1 115 1 348 4 65 2 350 1 17 1 73 1 124 1 258 1 126 1 353 2 263 1 130 1 270 2 371 1 135 1 185 1 136 2 373 1 139 1 326 2 275 1 141 2 43 1 234 2 
353 2 0 1 263 1 3 1 336 2 149 1 284 1 50 4 130 1 105 1 153 4 155 1 108 4 160 2 200 2 292 1 56 2 344 1 270 2 115 1 57 1 60 1 135 1 371 1 185 1 136 2 373 1 139 1 348 4 65 2 350 1 326 2 275 1 17 1 73 1 124 1 43 1 258 1 126 1 234 1 304 1 
353 2 0 1 263 1 3 1 336 2 149 1 284 1 50 4 130 1 105 1 153 4 155 1 108 4 160 2 200 2 292 1 56 2 344 1 270 2 115 1 57 1 60 1 135 1 371 1 185 1 136 2 373 1 139 1 348 4 65 2 350 1 326 2 275 1 17 1 73 1 124 1 43 1 258 1 126 1 234 1 304 1 
353 2 0 1 263 1 336 2 357 1 149 1 284 1 50 4 105 1 153 4 155 1 289 2 108 4 200 2 292 1 56 2 133 1 344 1 270 2 222 2 115 1 57 1 135 1 371 1 185 1 136 2 373 1 138 1 139 1 348 4 350 1 275 1 17 1 141 2 73 1 124 1 43 1 258 1 126 1 234 1 304 1 
353 3 0 1 263 1 3 1 336 2 149 1 284 1 50 5 130 1 105 1 153 4 155 1 108 5 160 2 200 2 292 1 344 1 56 3 345 1 270 3 115 1 57 1 60 1 135 1 371 1 185 1 136 2 373 1 139 1 348 4 65 2 350 1 326 2 275 1 17 1 73 1 124 1 43 1 258 1 126 1 234 1 304 1 
353 3 0 1 263 1 3 1 336 2 149 1 284 1 50 5 130 1 105 1 153 4 155 1 108 5 160 2 200 2 292 1 344 1 56 3 345 1 270 3 115 1 57 1 60 1 135 1 371 1 185 1 136 2 373 1 139 1 348 4 65 2 350 1 326 2 275 1 17 1 73 1 124 1 43 1 258 1 126 1 234 1 304 1 
353 2 283 1 0 1 263 1 336 2 149 1 284 1 50 4 105 1 153 4 155 1 289 2 108 4 200 2 292 1 56 2 344 1 133 1 270 2 222 2 115 1 57 1 135 1 371 1 185 1 136 2 373 1 139 1 348 4 350 1 275 1 17 1 141 2 73 1 124 1 43 1 258 1 126 1 234 1 
354 1 308 1 236 2 177 2 25 1 312 1 238 3 29 1 107 8 159 1 109 2 132 1 241 1 366 2 292 1 201 2 113 1 57 1 164 1 15 2 88 1 249 8 64 1 229 2 140 1 299 1 188 2 253 2 172 1 255 1 143 2 42 1 256 2 191 4 302 2 258 1 99 1 213 1 261 7 
356 1 308 1 51 1 236 1 196 1 339 1 29 1 362 1 109 1 132 1 366 1 9 1 292 1 317 1 367 1 86 1 57 1 15 1 63 1 211 1 327 1 172 2 143 1 256 3 331 1 191 2 302 1 279 1 258 1 
236 1 358 1 24 1 196 2 339 1 29 3 81 2 109 1 343 1 366 1 9 1 317 1 367 2 33 1 86 1 15 1 171 1 172 3 255 1 143 1 233 1 256 6 191 2 302 1 279 1 303 1 
236 2 196 2 339 2 81 1 29 8 362 2 240 1 109 2 366 2 54 3 9 4 317 11 367 1 113 1 296 3 86 1 15 2 203 1 374 1 63 1 323 1 211 1 327 2 172 6 97 1 143 2 42 1 173 1 257 1 256 14 191 4 302 1 279 11 
0 1 335 1 236 1 238 2 107 1 109 1 290 1 9 1 292 2 113 1 201 1 57 2 15 1 249 1 118 1 70 1 211 1 172 1 73 1 256 2 302 1 258 2 261 1 308 1 177 1 29 1 312 1 361 1 81 1 132 2 268 1 366 1 316 2 319 1 320 1 225 1 139 1 229 1 188 2 143 1 42 1 191 2 
0 2 335 2 236 3 196 8 339 3 288 2 238 4 107 3 343 1 109 3 9 7 292 3 111 2 113 1 201 2 57 3 59 1 15 3 203 4 249 3 63 2 117 1 171 1 211 1 172 10 73 2 256 20 302 3 258 3 303 1 261 3 308 1 358 1 177 1 81 2 29 10 312 1 361 2 362 2 132 3 266 2 366 3 316 4 317 7 367 4 319 2 33 1 184 1 86 3 320 2 88 1 225 1 139 2 229 2 188 4 375 2 274 2 327 2 143 3 42 1 233 1 191 6 279 7 
15 1 203 1 236 1 196 1 119 1 339 1 29 2 109 1 327 1 255 1 143 1 366 1 9 1 256 2 317 1 302 1 191 2 279 1 
15 1 236 1 63 1 196 1 109 1 198 1 172 2 255 1 143 1 366 1 9 1 256 2 317 1 302 1 191 2 367 1 279 1 86 1 
15 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 109 1 327 1 172 2 255 1 143 1 366 1 9 2 256 4 317 2 302 1 191 2 367 1 279 2 86 1 
15 1 203 1 236 1 196 1 119 1 339 1 29 2 109 1 327 1 241 1 143 1 366 1 9 1 256 2 317 1 302 1 191 2 279 1 
15 1 236 1 63 1 196 1 109 1 241 1 198 1 172 2 143 1 366 1 9 1 256 2 317 1 302 1 191 2 367 1 279 1 86 1 
15 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 109 1 327 1 172 2 241 1 143 1 366 1 9 2 256 4 317 2 302 1 191 2 367 1 279 2 86 1 
15 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 109 1 327 1 172 2 143 1 366 1 9 2 256 4 317 2 302 1 191 2 367 1 279 2 86 1 
0 1 335 1 236 1 177 1 29 1 81 1 361 1 238 2 107 1 109 1 132 1 266 1 366 1 316 2 292 1 319 1 113 1 201 1 57 1 320 1 15 1 249 1 139 1 229 1 188 2 172 1 73 1 143 1 42 1 256 2 191 2 302 1 258 1 261 1 
0 1 335 1 236 1 177 1 29 1 81 1 238 2 107 1 109 1 132 1 366 1 316 2 292 1 319 1 113 1 201 1 182 1 368 1 57 1 15 1 249 1 139 1 229 1 188 2 276 1 172 1 73 1 143 1 42 1 256 2 191 2 302 1 258 1 261 1 
15 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 211 1 109 1 327 1 172 2 143 1 366 1 9 2 256 4 317 2 302 1 191 2 367 1 279 2 86 1 
0 1 335 1 236 1 196 2 339 1 29 2 361 1 238 2 362 1 107 1 109 1 132 1 266 1 366 1 9 2 316 2 292 1 317 2 111 1 367 1 319 1 201 1 86 1 57 1 320 1 15 1 203 1 249 1 139 1 63 1 229 1 188 2 327 1 172 2 73 1 143 1 256 4 191 2 302 1 279 2 258 1 213 1 261 1 
308 1 51 1 236 1 196 1 339 1 29 2 362 1 109 1 132 1 366 1 9 1 292 1 317 1 86 1 57 1 15 1 203 1 63 1 211 1 327 1 172 1 143 1 256 3 331 1 191 2 302 1 258 1 279 1 100 1 
2 1 46 1 194 1 175 1 236 2 196 6 339 3 29 9 362 3 109 2 366 2 54 2 367 3 369 1 296 1 86 3 370 1 203 3 63 3 323 1 298 2 327 3 172 10 378 1 143 2 301 2 173 1 256 19 191 4 260 1 
282 1 46 1 194 1 175 1 236 3 287 1 196 4 339 3 181 2 29 14 362 3 109 3 366 3 53 1 54 2 32 1 367 2 86 2 369 1 296 2 203 2 63 2 323 2 209 1 298 4 327 3 252 1 172 12 378 2 143 3 301 1 256 26 191 6 260 2 
282 1 2 1 194 1 46 1 236 3 287 1 196 8 339 5 157 1 109 3 343 1 53 1 54 4 296 3 203 4 63 4 209 1 298 4 171 1 252 1 172 21 173 1 301 1 256 41 260 1 303 1 175 1 358 1 181 1 29 20 362 4 366 3 32 1 367 4 33 1 86 5 369 1 323 3 327 4 378 2 143 3 233 1 191 6 
282 1 2 1 46 1 194 1 175 1 358 1 236 4 287 1 196 7 339 5 157 1 181 2 29 20 362 4 343 1 109 4 53 1 366 4 32 1 54 4 367 4 33 1 369 1 296 3 86 4 203 3 63 3 323 3 209 1 298 4 171 1 327 4 252 1 172 18 378 2 143 4 301 1 173 1 233 1 256 38 191 8 303 1 260 1 
282 1 46 1 194 1 175 1 358 1 236 2 287 1 196 14 339 8 181 1 29 27 362 7 343 1 109 2 53 1 366 2 32 1 54 4 367 7 33 1 369 1 296 4 86 8 203 7 63 7 323 2 209 1 298 4 171 1 327 7 252 1 172 25 378 1 143 2 301 1 173 2 233 1 257 2 256 52 191 4 303 1 260 1 
251 1 72 1 272 1 62 1 110 1 216 1 11 1 381 1 91 1 121 1 
215 1 192 1 
262 1 72 1 271 1 272 1 62 1 110 1 144 1 381 1 91 1 
40 1 45 1 
300 1 330 1 77 1 
47 1 62 1 272 1 137 1 348 1 153 1 91 1 251 1 72 1 110 1 291 1 315 2 216 1 11 1 381 1 382 1 234 1 13 1 
47 1 62 1 272 1 137 1 348 1 153 1 91 1 251 1 72 1 110 1 291 1 315 2 216 1 11 1 381 1 382 1 234 1 13 1 
47 1 62 1 272 1 137 1 348 1 153 1 91 1 251 1 72 1 110 1 291 1 315 2 216 1 11 1 381 1 382 1 234 1 13 1 
300 1 40 1 45 1 
300 1 40 1 45 1 
330 1 77 1 
300 1 330 1 77 1 
166 1 250 1 
308 2 148 1 49 1 153 1 81 1 215 1 132 2 110 1 315 1 292 2 217 1 13 1 57 2 272 1 62 1 166 1 137 1 348 1 250 1 91 1 72 1 232 1 258 2 381 1 259 1 146 1 192 1 
174 1 236 1 285 1 78 1 237 1 238 1 29 1 107 2 109 1 267 1 366 1 292 2 201 1 113 1 57 2 15 1 249 2 229 1 299 1 188 1 211 1 253 2 172 1 143 1 42 1 256 2 302 1 191 2 258 2 99 1 261 2 
193 1 164 1 249 1 64 1 229 1 177 1 265 1 238 1 188 1 107 1 201 1 221 1 261 1 333 1 
223 1 88 1 116 2 249 1 265 1 229 1 340 1 187 1 106 1 68 1 107 1 71 1 10 1 218 1 201 1 183 1 261 1 333 1 
223 1 88 1 116 2 249 2 229 1 265 1 340 1 187 1 106 1 68 1 107 2 71 1 10 1 218 1 201 1 183 1 213 1 261 2 333 1 
223 1 88 1 116 2 249 1 265 1 229 1 79 1 340 1 187 1 68 1 107 1 71 1 10 1 218 1 183 1 201 1 261 1 
210 1 
115 1 263 1 185 1 149 1 264 1 273 1 105 1 155 1 43 1 234 1 
334 5 263 5 176 5 65 5 63 2 105 5 339 2 82 2 362 2 274 1 327 2 141 10 220 1 234 5 86 2 
115 1 108 1 348 1 200 1 153 1 234 1 
263 2 149 2 359 2 177 2 105 2 153 3 155 2 311 1 80 1 238 1 341 2 158 1 107 4 108 4 200 2 163 1 201 1 164 1 185 2 249 4 348 3 64 1 208 1 90 1 229 1 188 1 377 2 43 1 261 4 
115 1 263 1 264 1 273 1 105 1 24 1 234 1 
263 1 149 1 130 1 105 1 153 1 155 1 108 1 160 1 200 1 115 1 185 1 348 1 65 1 326 1 141 1 43 1 234 2 
101 1 334 6 149 4 104 2 338 2 105 8 153 5 155 4 339 2 341 1 238 8 158 1 107 3 108 5 200 3 201 3 115 2 347 1 249 3 348 5 65 6 63 2 120 1 126 2 213 1 305 2 261 3 127 3 263 9 176 6 309 2 264 1 76 1 359 2 177 1 82 2 362 2 316 2 319 1 220 2 86 2 224 1 185 4 273 1 229 2 188 2 274 2 327 2 277 2 141 12 377 1 43 4 190 2 234 8 
282 1 334 5 263 8 176 5 149 2 359 1 105 5 153 1 155 2 339 2 341 1 82 2 362 2 108 1 161 1 53 1 54 1 32 1 200 1 220 1 296 1 86 2 115 2 185 2 35 1 348 1 65 3 63 2 323 1 209 1 327 2 252 1 141 6 43 2 234 5 
263 2 308 1 149 1 358 1 51 1 152 1 105 2 153 1 5 1 52 1 155 1 339 2 179 1 82 2 132 1 292 1 220 1 33 1 86 1 57 1 60 1 185 1 348 1 73 1 43 1 44 1 258 1 303 1 
0 1 335 1 308 2 236 1 51 2 177 1 52 1 81 1 361 1 238 2 107 1 109 1 132 3 266 1 366 1 292 3 316 2 319 1 113 1 201 1 57 3 15 1 320 1 249 1 139 1 229 1 188 2 172 1 73 1 143 1 212 1 256 1 191 2 302 1 258 3 261 1 
115 2 334 2 263 1 185 1 176 2 149 1 65 2 359 1 105 2 155 1 341 1 343 1 141 4 43 1 234 4 
4 1 166 1 272 1 11 1 91 1 
272 1 329 1 91 1 
272 1 329 1 91 1 
272 1 329 1 91 1 
272 1 91 1 245 1 
272 1 91 1 245 1 
272 1 91 1 245 1 
272 1 91 1 
72 1 110 1 
194 1 203 2 236 1 358 2 196 5 339 2 29 5 109 1 172 5 366 1 143 1 256 10 191 2 44 1 367 3 303 2 33 1 86 2 
194 1 203 1 236 1 196 1 339 1 29 2 109 1 327 1 143 1 366 1 256 2 191 2 
194 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 109 1 327 1 172 2 143 1 366 1 256 4 191 2 367 1 86 1 
2 1 194 1 203 1 236 3 358 1 196 2 181 1 29 1 109 3 172 2 143 3 366 3 256 3 191 6 367 1 112 1 303 1 
2 1 194 1 307 1 358 3 236 5 196 12 339 5 181 2 29 16 362 3 343 1 109 5 366 5 54 4 367 7 112 1 33 2 296 3 86 5 165 1 203 5 63 3 323 1 171 1 95 1 327 3 254 1 172 18 143 5 173 1 233 1 256 34 191 10 303 3 
194 1 236 1 358 1 196 2 339 1 29 4 343 1 109 1 366 1 54 1 32 1 367 2 33 1 86 1 296 1 323 1 171 1 172 4 143 1 256 8 233 1 191 2 303 1 
194 1 307 1 358 1 236 2 196 3 339 2 29 6 362 1 343 1 109 2 366 2 54 2 32 1 367 2 33 1 86 1 296 1 203 1 323 1 171 1 327 1 172 5 143 2 173 1 233 1 256 11 191 4 303 1 
282 1 194 1 307 1 358 1 236 3 196 4 339 3 181 1 29 9 362 2 343 1 109 3 366 3 53 1 54 1 32 1 367 3 33 1 296 1 86 3 203 1 63 2 323 1 209 1 171 1 327 2 252 1 172 10 143 3 233 1 256 19 191 6 303 1 
282 1 194 1 307 1 358 1 236 3 196 5 339 3 181 1 29 10 362 2 343 1 109 3 366 3 53 1 54 1 32 1 367 3 33 1 296 1 86 2 203 2 63 1 323 1 209 1 171 1 327 2 252 1 172 7 143 3 233 1 256 17 191 6 303 1 
194 1 236 1 358 1 196 2 339 1 29 4 343 1 109 1 366 1 54 1 32 1 367 2 33 1 86 1 296 1 323 1 171 1 172 4 143 1 256 8 233 1 191 2 303 1 
282 1 194 1 236 1 196 2 339 2 29 6 362 2 109 1 366 1 53 1 54 1 32 1 367 1 296 1 86 2 203 1 63 2 323 1 209 1 327 2 252 1 172 6 143 1 256 12 191 2 
282 1 194 1 307 1 358 1 236 4 196 5 339 3 181 2 29 10 362 2 343 1 109 4 366 4 53 1 54 1 32 1 367 3 33 1 296 1 86 2 203 2 63 1 323 1 209 1 171 1 327 2 252 1 172 8 143 4 233 1 256 18 191 8 303 1 
282 1 2 1 194 1 236 4 196 6 339 3 181 2 29 9 362 3 109 4 366 4 53 1 54 1 32 1 367 3 296 1 86 2 203 3 63 2 323 1 209 1 327 3 252 1 172 7 143 4 256 16 191 8 
203 3 358 3 196 6 339 1 29 3 171 1 172 4 256 7 233 2 367 3 303 3 33 1 86 1 
282 1 2 1 194 1 358 1 236 4 196 4 339 3 181 2 29 10 362 2 343 1 109 4 366 4 53 1 54 1 32 1 367 3 33 1 296 1 86 2 203 1 63 1 323 1 209 1 171 1 327 2 252 1 172 8 143 4 233 1 256 18 191 8 303 1 
203 1 236 2 358 1 196 3 339 1 181 1 29 4 171 1 343 1 109 2 172 4 143 2 366 2 256 8 233 1 191 4 367 2 33 1 303 1 86 1 
171 1 343 1 172 3 358 1 256 6 233 1 24 1 196 2 367 2 339 1 33 1 303 1 86 1 29 3 
307 1 203 1 236 1 63 1 196 2 339 1 29 2 362 1 109 1 327 1 172 2 143 1 366 1 256 4 191 2 367 1 86 1 
203 1 63 1 323 1 196 2 339 1 29 3 362 1 327 1 172 4 54 2 173 1 256 7 367 1 86 1 296 1 
358 2 236 2 196 9 339 3 181 2 29 11 362 2 343 1 240 1 109 2 366 2 54 2 367 5 112 1 33 1 296 2 86 3 203 4 63 2 171 1 327 2 172 12 143 2 173 1 233 1 256 23 257 1 191 4 303 2 
172 1 54 1 256 1 
256 1 29 1 296 1 
307 1 203 1 236 1 63 1 196 3 339 1 29 3 362 1 109 1 274 1 327 1 172 3 366 1 143 1 256 6 191 2 367 2 86 1 
282 1 194 1 236 1 196 2 339 2 29 6 362 2 109 1 366 1 53 1 54 1 32 1 367 1 296 1 86 2 203 1 63 2 323 1 209 1 327 2 252 1 172 6 143 1 256 12 191 2 
203 1 358 1 196 2 339 1 29 3 172 3 256 6 367 1 33 1 303 1 86 1 
203 1 358 1 236 1 196 2 181 1 29 1 171 1 109 1 172 2 143 1 366 1 233 1 256 3 191 2 367 1 112 1 303 1 
57 1 124 1 199 1 292 1 258 1 230 1 81 1 
57 1 248 1 206 1 230 1 81 1 8 1 199 1 124 1 292 1 258 1 219 1 214 1 
164 1 188 1 107 4 123 1 249 4 64 1 229 1 177 1 318 1 201 1 213 1 238 1 261 4 
59 1 297 1 249 2 229 1 324 1 169 1 238 1 107 2 188 1 377 1 316 1 201 2 352 1 261 2 
107 1 116 1 249 1 218 1 229 1 177 1 201 1 187 1 68 1 261 1 
88 1 249 2 229 1 78 1 238 1 107 2 188 1 99 1 201 1 213 1 261 2 
164 1 354 1 249 5 64 1 177 1 229 2 25 1 238 3 107 5 188 2 123 1 377 1 99 1 201 2 213 1 261 4 
164 1 354 1 249 5 64 1 177 1 229 2 325 1 238 3 107 5 188 2 123 1 377 1 99 1 201 2 213 1 261 4 
164 1 188 1 107 1 249 1 64 1 229 1 24 1 177 1 201 1 238 1 261 1 
57 2 0 1 335 1 308 1 249 1 139 1 177 1 229 1 81 1 238 2 312 1 361 1 188 2 107 1 132 2 73 1 316 2 292 2 319 1 258 2 201 1 261 1 
335 1 308 1 26 1 361 1 312 1 238 1 81 1 107 1 132 1 292 2 316 1 201 1 57 1 249 1 229 1 188 1 73 1 377 1 258 2 261 1 
335 1 308 1 26 1 312 1 238 1 81 1 107 1 132 1 292 2 316 1 201 1 57 1 249 1 229 1 188 1 276 1 73 1 377 1 258 2 261 1 
127 1 101 1 104 1 177 1 153 2 27 1 238 4 108 1 107 3 243 1 316 1 318 1 319 1 201 1 115 1 249 3 348 2 229 1 188 1 377 1 126 1 234 1 261 3 
115 1 101 1 127 1 249 3 104 1 348 2 177 1 229 1 153 2 238 4 188 1 107 3 108 1 377 1 316 1 190 1 318 1 319 1 126 1 201 1 234 1 261 3 
107 1 249 1 229 1 201 1 140 1 261 1 
354 1 88 1 297 1 249 7 337 1 76 1 177 2 229 2 25 1 169 1 140 1 238 3 107 7 188 2 159 1 253 1 316 1 99 1 201 3 213 1 261 6 
0 1 335 1 236 2 196 2 339 1 237 1 288 1 238 2 107 1 343 1 109 2 9 1 292 2 111 1 201 1 57 2 15 2 249 1 171 1 211 1 73 1 172 3 256 6 302 2 258 2 213 1 303 1 261 1 308 1 358 1 81 2 361 1 312 1 29 3 132 2 266 1 366 2 316 2 317 1 319 1 367 2 33 1 86 1 320 1 139 1 229 1 188 2 143 2 233 1 191 4 279 1 
127 1 263 1 148 1 149 2 104 1 338 1 264 1 105 1 177 1 153 3 155 2 238 2 158 1 107 1 108 2 200 1 115 1 185 2 249 1 348 3 273 1 277 1 43 2 190 1 126 1 234 1 305 1 261 1 
104 1 249 2 76 1 229 1 140 1 120 1 238 2 107 2 188 1 316 1 201 2 213 1 261 2 
57 2 0 1 335 1 308 1 249 1 139 1 177 1 229 1 81 1 238 2 312 1 188 2 107 1 132 2 276 1 73 1 316 2 292 2 319 1 258 2 201 1 261 1 
297 1 249 1 337 1 76 1 229 1 169 1 238 1 107 1 188 1 377 1 316 1 201 2 261 1 
57 1 174 1 128 1 285 1 66 1 180 1 267 1 292 1 258 1 
66 1 170 1 156 1 
355 1 128 1 66 1 180 1 81 1 
115 1 0 1 355 2 128 2 148 1 139 1 348 2 66 1 153 2 170 1 156 1 180 2 81 1 93 1 73 1 126 1 125 1 234 1 344 1 
31 1 328 1 23 1 168 1 293 1 228 1 12 1 306 1 
61 1 23 1 186 1 151 1 168 3 69 2 31 2 328 2 189 1 278 1 293 4 202 1 12 4 306 1 
346 1 167 1 23 1 168 1 228 1 69 1 31 1 328 1 41 1 293 2 12 2 306 1 
372 1 23 1 151 1 186 2 168 1 228 1 328 1 31 1 189 2 293 3 12 3 306 1 
102 2 89 1 168 2 154 1 
23 1 293 1 228 1 246 1 12 1 306 1 
69 1 31 1 328 1 23 1 168 1 293 2 228 1 380 1 12 2 306 1 
84 1 
31 1 328 1 23 1 168 1 293 1 228 1 12 1 306 1 
31 1 328 1 168 1 24 1 
31 1 328 1 23 1 168 1 293 1 12 1 306 1 
286 1 293 1 332 1 
23 1 151 1 186 1 168 1 228 1 328 1 31 1 363 1 189 2 293 3 12 3 306 1 
69 1 31 1 328 1 244 1 23 1 168 1 293 2 12 2 306 1 
39 1 116 1 23 1 10 1 168 1 293 1 228 1 202 1 12 1 187 1 306 1 
31 1 23 1 168 1 293 1 228 1 12 1 306 1 
31 2 328 1 23 1 293 1 228 1 12 1 306 1 
23 2 207 1 168 1 228 1 239 1 31 1 74 1 293 2 12 2 306 2 
61 1 23 1 322 1 168 2 228 1 69 2 31 1 328 1 293 3 380 1 202 1 12 3 306 1 
116 2 23 1 168 1 228 1 340 1 187 1 69 1 31 1 328 1 20 1 10 1 218 1 293 2 12 2 306 1 
61 1 23 2 168 2 228 1 69 2 31 1 328 1 244 1 293 4 280 1 202 1 12 4 306 2 
69 1 31 1 328 1 23 1 168 1 189 1 293 3 228 1 380 1 12 3 306 1 
61 1 168 1 278 1 202 1 
31 1 168 1 

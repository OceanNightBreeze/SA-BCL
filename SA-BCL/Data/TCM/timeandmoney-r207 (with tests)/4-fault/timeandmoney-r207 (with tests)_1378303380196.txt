#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (117,381) (117,381) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (117,381) (117,381) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (117,381) (117,381) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (117,381) (117,381) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
117 1 189 1 108 1 85 1 291 1 286 1 381 1 271 1 335 1 351 1 70 1 
117 1 189 1 108 1 85 1 291 1 286 1 381 1 271 1 335 1 351 1 70 1 
117 1 189 1 108 1 85 1 291 1 286 1 381 1 271 1 335 1 351 1 70 1 
117 1 189 1 108 1 85 1 291 1 286 1 381 1 271 1 335 1 351 1 70 1 
108 4 85 1 303 1 185 1 62 3 335 1 76 3 53 1 305 2 65 1 189 4 284 1 127 1 190 1 128 2 285 1 235 1 70 1 
108 2 85 1 373 1 62 1 335 1 351 1 228 1 189 2 65 1 284 1 34 1 285 1 271 1 235 1 272 1 70 1 
108 3 85 2 97 1 62 2 335 2 76 1 189 3 284 1 127 1 128 1 271 1 235 1 70 1 
108 9 85 2 303 1 62 5 335 2 305 2 91 1 65 1 271 1 222 1 70 1 273 1 97 1 185 1 76 7 101 1 53 1 189 9 284 1 127 3 128 4 190 1 285 1 235 1 
108 9 85 2 303 1 62 5 335 2 305 2 91 1 65 1 271 1 222 1 70 1 273 1 97 1 185 1 76 7 101 1 53 1 189 9 284 1 127 3 128 4 190 1 285 1 235 1 
102 1 30 1 206 1 
339 1 102 1 116 2 
223 2 236 2 142 1 375 1 376 2 110 2 280 2 268 2 
236 3 216 1 17 1 110 2 137 1 63 1 268 3 338 1 307 1 219 1 308 1 243 1 309 2 142 1 314 1 4 1 248 1 71 1 251 2 223 2 208 1 118 1 276 1 150 1 375 1 376 2 253 1 7 1 280 2 231 1 33 1 234 2 258 1 326 1 329 2 357 1 38 2 
223 1 236 1 195 1 375 1 376 1 25 1 110 1 280 1 59 1 268 1 
236 1 119 1 376 1 102 1 30 1 350 1 268 1 169 1 233 1 14 1 25 1 27 1 161 1 37 1 
223 1 236 1 376 1 102 1 30 1 280 1 110 1 350 1 268 1 169 1 233 2 14 1 25 1 161 2 37 1 
233 1 211 1 161 1 378 1 114 1 
237 1 233 2 102 1 30 1 176 1 161 2 378 1 114 1 
233 1 161 1 114 1 
223 1 236 1 195 1 375 1 376 1 280 1 110 1 378 1 268 1 310 1 233 1 25 1 59 1 161 1 
102 1 
233 2 102 1 30 1 176 1 161 2 153 1 378 1 114 1 
214 2 238 1 320 1 136 1 102 1 30 1 113 1 226 2 112 2 378 2 114 2 56 1 323 1 22 1 233 5 132 1 176 1 261 1 161 5 
223 1 208 1 236 2 276 1 376 1 210 1 17 1 110 1 63 1 268 2 338 1 219 1 308 1 19 1 243 1 234 1 49 1 357 1 251 1 38 1 
142 1 206 1 
223 1 330 1 236 2 376 2 280 1 110 1 268 2 353 1 142 1 312 1 25 1 
19 1 252 1 156 1 
236 1 208 1 83 1 276 1 17 1 63 1 268 1 338 1 219 1 308 1 243 1 234 1 142 1 357 1 251 1 38 1 
223 4 236 5 209 1 376 5 210 1 110 4 280 1 45 1 268 5 21 1 353 1 142 1 27 1 49 2 
223 1 236 1 376 1 25 1 110 1 59 1 268 1 
223 3 236 3 142 1 376 3 280 1 110 3 49 1 268 3 
223 1 236 1 376 1 25 1 110 1 59 1 268 1 
223 1 236 1 376 1 280 1 110 1 268 1 353 1 312 1 25 1 
330 1 236 4 137 1 338 1 243 1 142 1 49 1 251 1 208 1 210 1 253 1 350 1 7 1 353 1 14 1 258 1 161 1 357 1 304 1 17 1 110 3 63 1 268 4 219 1 307 1 308 1 169 1 309 1 25 2 314 1 71 1 223 3 118 1 276 1 375 1 376 3 280 2 281 1 231 1 233 1 234 1 326 1 37 1 38 1 329 2 
223 1 330 1 236 2 209 1 376 2 110 1 268 2 142 1 25 1 27 1 49 1 
223 3 236 3 304 1 376 3 102 1 210 1 280 1 110 3 350 1 268 3 353 1 169 1 233 1 270 1 14 1 25 1 161 1 37 1 49 2 
223 2 19 1 236 2 353 1 252 1 376 2 110 2 280 1 49 1 268 2 
236 1 208 1 276 1 17 1 63 1 268 1 338 1 219 1 308 1 243 1 234 1 142 1 251 1 38 1 357 1 
236 1 208 1 276 1 268 1 78 1 338 1 219 1 308 1 243 1 201 1 234 1 142 1 251 1 38 1 357 1 
331 1 332 1 307 2 340 1 46 1 19 2 309 4 269 1 2 1 202 1 314 1 4 2 71 1 316 1 146 1 370 1 252 2 253 1 7 1 187 1 231 1 156 2 326 1 329 2 
223 1 236 1 376 1 110 1 268 1 169 1 287 1 25 1 
348 1 15 1 
348 1 15 1 
155 1 95 1 
155 1 95 1 
155 1 95 1 
348 1 140 1 15 1 
348 1 230 1 15 1 
348 2 39 1 155 1 15 2 95 1 179 1 
348 1 140 1 15 1 
348 1 140 1 15 1 
348 1 15 1 259 1 
348 1 15 1 259 1 
348 1 15 1 259 1 
236 2 135 1 218 1 110 2 268 2 200 1 92 1 365 1 221 1 142 1 247 1 223 2 348 1 29 1 376 2 297 1 103 1 8 1 255 1 230 1 12 1 233 1 15 1 161 1 
348 2 318 1 39 1 29 2 102 1 282 1 200 2 92 1 233 2 343 2 157 1 221 2 365 2 345 1 15 2 174 1 325 1 161 2 247 3 
65 1 285 1 53 1 
65 1 373 1 285 1 
242 1 371 1 65 3 373 1 53 2 199 1 
242 1 262 1 65 2 373 1 53 1 199 1 
242 1 65 2 373 1 53 1 199 2 
214 1 194 1 238 2 197 2 112 1 114 1 339 1 340 1 22 3 176 1 367 1 369 2 116 3 146 1 370 1 319 1 149 1 30 1 102 2 8 1 31 1 226 1 377 1 378 4 255 1 187 1 12 1 324 2 233 5 129 1 261 1 161 5 
214 2 194 1 238 6 197 6 266 1 113 1 112 2 114 6 339 3 340 3 22 8 67 1 176 1 369 6 116 9 146 3 370 3 207 1 149 2 372 5 30 1 102 5 104 1 31 3 226 2 377 2 255 4 378 7 187 3 233 9 159 1 211 5 161 9 80 1 261 1 
214 1 238 2 197 2 112 1 113 1 339 2 340 1 22 3 367 1 369 2 146 1 116 4 370 1 319 1 149 1 30 1 102 3 226 1 377 1 31 1 378 2 255 1 187 1 324 1 233 3 161 3 
214 1 238 4 197 4 112 1 113 1 339 3 340 2 22 5 67 1 367 1 369 4 116 7 146 2 370 2 319 1 149 1 30 1 102 4 104 1 226 1 377 1 31 2 255 2 378 3 187 2 324 2 233 4 159 1 161 4 
232 1 206 1 357 1 
356 1 357 1 
84 1 
308 1 208 1 357 1 
245 1 357 1 
208 1 357 1 
308 1 283 1 208 1 232 2 357 3 10 1 
193 1 0 1 370 1 184 1 332 2 87 1 225 2 298 1 187 1 307 3 306 1 269 3 309 7 346 1 24 1 175 1 4 4 
193 1 0 1 370 1 184 1 332 2 87 1 225 2 298 1 187 1 307 3 306 1 269 3 309 7 346 1 24 1 175 1 4 4 
193 1 0 1 370 1 184 1 332 2 87 1 99 1 225 2 298 1 187 1 307 3 306 1 269 3 309 7 346 1 24 1 175 1 4 4 
193 1 0 2 332 5 1 1 87 2 363 1 306 2 307 15 340 3 309 31 269 10 346 5 24 1 175 1 314 1 71 1 4 16 146 3 370 4 274 1 72 1 184 2 225 3 298 1 9 1 31 3 187 4 32 1 322 3 231 1 131 4 382 1 326 1 329 2 
0 1 193 1 332 3 87 1 307 4 306 1 309 9 269 4 346 1 313 1 175 1 314 2 71 2 4 5 181 1 370 1 184 1 225 2 298 1 187 1 32 1 231 2 326 2 329 4 
108 2 360 1 85 1 361 1 62 1 109 1 335 1 338 1 219 1 20 1 65 2 203 1 271 1 143 1 70 1 368 1 251 1 371 1 373 1 76 1 279 1 53 1 154 1 189 2 284 1 234 1 380 1 285 1 235 1 38 1 
108 3 360 1 85 1 361 1 62 1 335 1 338 1 219 1 139 1 20 1 65 2 344 1 203 1 271 1 143 1 251 1 371 1 373 1 76 2 279 1 53 1 227 1 154 1 189 3 284 1 234 1 380 1 285 1 235 1 38 1 
108 2 360 1 361 1 62 1 338 1 219 1 139 1 20 1 65 2 203 1 271 1 143 1 251 1 371 1 373 1 76 2 279 1 53 1 227 1 189 2 284 1 234 1 285 1 235 1 38 1 
208 1 108 1 85 1 360 2 296 1 335 1 88 1 338 1 219 1 18 1 243 1 189 1 20 2 344 1 234 1 94 1 203 2 300 1 271 2 249 1 357 1 251 1 38 1 
371 1 108 1 373 1 85 1 360 1 361 1 279 1 335 1 53 1 227 1 338 1 219 1 154 1 65 2 189 1 20 1 234 1 380 1 203 1 285 1 271 1 143 1 70 1 368 1 251 1 38 1 
138 1 
236 1 40 1 290 2 238 2 196 1 41 1 338 1 339 2 243 2 94 1 246 1 251 2 208 1 349 2 149 1 98 1 296 1 102 2 350 1 352 2 256 1 158 1 14 1 161 5 261 1 357 1 214 1 215 1 111 2 112 1 268 1 114 6 167 2 219 1 169 1 22 2 176 3 25 1 178 1 27 1 26 1 116 2 28 2 119 1 278 4 376 1 30 1 186 1 226 1 124 1 233 5 234 2 36 2 37 1 38 2 
236 1 119 1 278 2 98 1 376 1 186 1 350 1 111 1 153 1 268 1 114 2 169 1 233 3 158 1 14 1 176 1 25 1 161 3 178 1 27 1 246 1 37 1 
236 1 119 1 278 3 98 1 376 1 102 1 30 1 186 1 350 1 153 1 268 1 114 1 167 1 169 1 233 3 158 1 14 1 176 1 25 1 161 3 178 1 27 1 246 1 37 1 
236 1 111 1 268 1 114 2 167 1 169 1 176 1 25 1 27 1 178 1 246 1 119 1 349 1 98 1 278 3 376 1 30 1 102 1 350 1 186 1 153 1 233 3 158 1 14 1 161 3 37 1 
236 2 107 1 195 1 110 1 111 1 268 2 114 2 169 1 310 1 176 1 25 2 27 1 178 1 246 1 223 1 119 1 349 1 98 1 278 2 375 1 376 2 102 1 30 1 280 1 186 1 350 1 153 1 233 3 158 1 14 1 59 1 161 3 37 1 
214 1 236 1 290 2 238 1 196 1 111 2 112 1 268 1 114 4 167 2 339 2 169 1 22 1 176 2 25 1 178 1 27 1 26 1 246 1 116 2 28 2 119 1 349 2 98 1 278 4 376 1 30 1 102 2 186 1 350 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 261 1 161 4 37 1 
214 1 289 1 236 1 290 2 238 1 111 2 112 1 268 1 114 4 167 2 339 2 169 1 22 1 176 2 25 1 26 1 27 1 178 1 246 1 145 1 28 2 119 1 349 2 75 1 98 1 278 4 376 1 102 1 30 1 350 1 186 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 161 4 261 1 37 1 
214 1 289 1 236 1 290 2 238 1 111 2 112 1 268 1 114 4 167 2 339 2 169 1 22 1 176 2 25 1 26 1 27 1 178 1 246 1 145 1 28 2 119 1 349 2 75 1 98 1 278 4 376 1 102 1 30 1 350 1 186 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 161 4 261 1 37 1 
214 1 236 1 238 1 240 1 111 2 112 1 268 1 114 4 167 2 341 1 169 1 22 1 176 2 25 1 27 1 178 1 246 1 116 2 119 1 349 2 75 1 98 1 278 4 376 1 102 1 30 1 152 2 350 1 186 1 226 1 352 2 256 1 233 4 355 1 158 1 14 1 36 2 213 2 161 4 261 1 37 1 
214 1 289 1 236 1 290 2 238 1 111 3 112 1 268 1 114 5 167 3 339 2 169 1 22 1 176 2 25 1 26 1 27 1 178 1 246 1 145 1 147 1 28 2 119 1 349 3 75 1 98 1 278 5 376 1 102 1 30 1 350 1 186 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 261 1 161 4 37 1 
214 1 289 1 236 1 290 2 238 1 111 3 112 1 268 1 114 5 167 3 339 2 169 1 22 1 176 2 25 1 26 1 27 1 178 1 246 1 145 1 147 1 28 2 119 1 349 3 75 1 98 1 278 5 376 1 102 1 30 1 350 1 186 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 261 1 161 4 37 1 
214 1 236 1 238 1 196 1 240 1 111 2 112 1 268 1 114 4 167 2 169 1 22 1 176 2 25 1 178 1 27 1 246 1 116 2 119 1 349 2 98 1 278 4 376 1 102 1 30 1 152 2 186 1 350 1 226 1 352 2 256 1 233 4 158 1 14 1 36 2 213 2 261 1 161 4 37 1 
0 1 193 1 332 2 306 1 307 3 19 1 46 1 269 2 309 6 142 2 175 1 314 1 206 1 71 1 4 3 370 1 252 1 225 1 253 1 7 1 298 1 187 1 231 1 156 1 326 1 329 2 
81 1 332 1 43 1 137 1 307 6 19 11 340 1 269 2 309 14 142 1 346 1 47 1 314 2 248 1 71 2 4 8 146 2 370 1 72 1 252 4 253 1 7 2 31 2 187 2 322 3 231 2 156 11 131 3 382 1 326 2 162 1 288 1 329 4 
236 2 83 1 43 1 17 1 110 1 336 1 137 1 63 1 268 2 338 1 219 1 307 1 308 1 243 1 141 1 309 2 142 1 314 1 49 1 71 1 248 1 4 1 251 1 223 1 208 1 276 1 74 1 252 1 376 1 253 1 210 1 7 1 231 1 234 1 326 1 357 1 38 1 329 2 
193 1 0 1 134 2 236 3 332 4 43 1 137 1 338 2 243 1 340 2 142 2 346 4 49 1 248 1 4 10 251 3 146 2 208 2 252 7 210 1 253 3 7 3 298 1 156 7 258 2 212 2 357 2 163 1 264 2 17 2 110 1 63 2 268 3 306 1 307 10 219 2 168 1 308 2 19 7 309 20 269 8 171 1 175 1 69 2 314 3 71 3 223 1 370 3 276 2 225 1 376 1 31 2 227 1 187 3 231 3 234 3 326 3 38 3 329 6 
192 1 236 1 359 1 109 1 110 1 137 1 268 1 338 2 219 2 307 1 46 1 243 2 309 2 94 1 49 1 314 2 71 2 248 1 4 1 251 8 223 1 208 2 150 2 376 1 296 1 253 2 7 2 254 1 227 1 126 1 231 2 130 1 234 7 13 1 35 1 326 2 357 3 38 8 329 4 
236 1 332 1 43 1 16 1 110 1 268 1 307 2 19 1 340 1 269 1 309 3 314 1 71 1 4 1 146 1 223 1 370 1 252 1 376 1 253 1 280 1 7 1 31 1 187 1 353 1 231 1 156 1 326 1 329 2 
252 1 253 1 7 1 187 1 19 1 46 1 231 1 269 1 309 2 156 1 346 1 326 1 314 1 71 1 4 2 329 2 316 1 146 1 
370 1 332 1 252 1 253 1 7 1 307 2 19 1 46 1 340 1 231 1 269 1 309 2 156 1 202 1 326 1 314 1 71 1 329 2 
370 1 332 1 252 2 253 1 7 1 31 1 187 1 307 2 340 1 19 2 46 1 231 1 269 2 309 4 156 2 346 1 326 1 314 1 71 1 4 2 329 2 146 1 
192 1 252 1 253 1 7 1 187 1 19 1 231 1 269 1 309 2 156 1 346 1 326 1 314 1 71 1 4 2 329 2 316 1 146 1 
192 1 370 1 332 1 252 1 253 1 7 1 307 2 19 1 340 1 231 1 269 1 309 2 156 1 202 1 326 1 314 1 71 1 329 2 
192 1 370 1 332 1 252 2 253 1 7 1 31 1 187 1 307 2 340 1 19 2 231 1 269 2 309 4 156 2 346 1 326 1 314 1 71 1 4 2 329 2 146 1 
370 1 332 1 252 2 253 1 7 1 31 1 187 1 307 2 340 1 19 2 231 1 269 2 309 4 156 2 346 1 326 1 314 1 71 1 4 2 329 2 146 1 
236 1 17 1 137 1 63 1 268 1 338 1 219 1 307 1 308 1 243 1 309 2 142 1 314 1 4 1 248 1 71 1 251 1 208 1 276 1 253 1 7 1 231 1 234 1 258 1 326 1 38 1 357 1 329 2 
236 1 137 1 268 1 338 1 219 1 307 1 308 1 201 1 243 1 309 2 142 1 96 1 314 1 4 1 248 1 71 1 251 1 208 1 276 1 253 1 7 1 78 1 231 1 234 1 326 1 38 1 357 1 329 2 
370 1 332 1 252 2 43 1 253 1 7 1 31 1 187 1 307 2 340 1 19 2 231 1 269 2 309 4 156 2 346 1 326 1 314 1 71 1 4 2 329 2 146 1 
236 1 332 1 264 1 109 1 17 1 63 1 268 1 338 1 307 2 219 1 308 1 340 1 19 2 269 2 309 4 346 1 314 1 4 2 71 1 146 1 251 1 370 1 208 1 276 1 252 2 253 1 7 1 31 1 187 1 231 1 156 2 234 1 258 1 326 1 38 1 357 1 329 2 
236 1 43 1 110 1 268 1 307 1 340 1 19 1 269 1 309 3 3 1 346 1 314 1 71 1 4 2 146 1 223 1 370 1 252 1 376 1 253 1 280 1 7 1 31 1 187 1 353 1 231 1 156 1 326 1 329 2 
0 1 193 1 332 4 42 1 340 4 346 4 204 2 205 1 4 20 294 1 146 4 250 1 298 1 160 1 260 4 302 1 362 1 364 1 307 21 306 1 269 8 309 41 66 1 311 1 313 1 175 1 314 3 71 3 370 5 275 1 72 3 182 1 321 1 225 1 31 4 187 5 32 1 322 3 231 3 131 4 382 1 326 3 329 6 
193 1 0 1 302 1 42 1 332 4 362 1 364 1 306 1 307 18 340 3 66 1 309 38 269 7 311 1 346 3 313 1 175 1 205 1 204 2 314 4 294 1 71 4 4 20 250 1 146 4 275 1 370 4 182 1 72 3 225 1 321 1 298 1 31 4 32 2 187 5 322 3 231 4 131 4 160 1 260 4 382 1 326 4 329 8 
193 1 0 1 302 1 81 2 42 1 332 7 364 1 306 1 307 25 340 7 66 1 309 52 269 14 311 1 346 7 313 1 175 1 205 1 204 1 314 2 294 1 71 2 4 27 146 7 275 1 370 8 182 1 72 2 225 1 321 1 298 1 31 7 32 1 187 8 322 4 231 2 131 4 160 1 260 4 382 2 326 2 329 4 
164 1 332 3 362 1 364 1 307 10 340 3 309 19 269 6 311 1 346 3 313 1 204 1 314 2 71 2 4 9 146 3 275 2 370 3 182 1 72 1 321 1 31 3 187 3 322 1 231 2 131 2 260 2 382 1 326 2 329 4 
302 1 332 2 42 1 364 1 307 12 340 2 66 1 269 4 309 26 311 1 346 2 313 1 204 2 205 1 314 3 294 1 71 3 4 14 146 3 275 1 370 2 182 1 72 2 321 2 31 3 32 2 187 3 322 2 231 3 131 2 160 1 260 4 326 3 329 6 
348 1 318 1 39 1 200 1 29 1 365 1 221 1 345 1 86 1 15 1 
230 1 103 1 
348 1 200 1 148 1 29 1 365 1 221 1 173 1 15 1 54 1 
140 1 61 1 
259 1 179 1 315 1 
348 1 318 1 39 1 29 1 102 1 282 1 200 1 92 1 233 1 343 1 157 1 221 1 365 1 345 1 15 1 174 1 161 1 247 2 
348 1 318 1 39 1 29 1 102 1 282 1 200 1 92 1 233 1 343 1 157 1 221 1 365 1 345 1 15 1 174 1 161 1 247 2 
348 1 318 1 39 1 29 1 102 1 282 1 200 1 92 1 233 1 343 1 157 1 221 1 365 1 345 1 15 1 174 1 161 1 247 2 
140 1 61 1 179 1 
140 1 61 1 179 1 
259 1 315 1 
259 1 179 1 315 1 
218 1 297 1 
236 2 135 1 333 1 218 1 110 2 268 2 200 1 343 1 365 1 221 1 142 1 247 1 348 1 223 2 29 1 297 1 376 2 103 1 282 1 8 1 378 1 255 1 230 1 12 1 233 1 15 1 161 1 
236 2 43 1 137 1 268 2 338 1 219 1 307 1 90 1 309 2 314 1 71 1 248 1 4 1 251 2 317 1 208 1 150 2 51 1 376 2 253 1 7 1 123 1 125 1 231 1 130 1 13 1 234 2 326 1 357 1 38 2 329 2 
50 1 371 1 373 1 120 1 361 1 109 1 279 1 53 1 241 1 227 1 338 1 219 1 65 2 234 2 203 1 380 1 285 1 251 2 38 2 
183 1 50 1 371 1 373 1 361 1 279 1 53 1 227 1 338 1 219 1 65 2 234 1 203 1 380 1 285 1 251 1 38 1 
208 1 120 1 296 1 88 1 338 1 219 1 243 1 342 1 234 1 203 1 94 1 357 1 251 1 38 1 
50 1 371 1 373 1 120 1 361 1 279 1 53 1 241 1 227 1 338 1 219 1 65 2 234 1 203 1 380 1 285 1 251 1 38 1 
5 1 
56 1 323 1 238 1 22 1 102 1 30 1 206 1 
214 1 28 1 238 1 290 1 30 1 102 2 226 1 112 1 114 1 339 1 233 1 22 1 176 1 161 1 261 1 26 1 116 1 
238 8 41 1 197 6 338 4 89 2 339 6 243 1 340 2 245 2 251 3 146 2 208 3 6 1 149 2 100 2 102 8 10 1 56 1 57 1 356 3 261 4 161 5 357 10 60 2 214 4 217 1 109 1 112 4 114 5 219 3 308 3 22 9 172 2 68 2 177 2 176 3 69 2 180 2 369 6 116 12 370 2 30 2 226 4 31 2 187 2 79 1 323 1 379 1 232 2 233 5 234 3 191 2 37 2 38 3 
302 1 60 2 214 2 238 5 41 1 42 1 197 5 112 2 114 1 339 3 340 2 22 8 172 1 176 1 205 1 294 1 369 5 116 6 146 2 370 2 72 1 149 1 224 1 102 5 30 2 77 1 226 2 31 2 187 2 322 1 233 1 131 1 160 1 161 1 261 2 
60 2 0 1 214 1 289 1 193 1 236 1 238 2 195 1 110 1 112 1 268 1 306 1 310 1 22 2 172 1 25 1 223 1 370 1 277 1 375 1 376 1 280 1 226 1 187 2 233 1 59 1 261 1 161 1 
214 1 238 1 30 1 102 1 226 1 112 1 323 1 56 1 22 1 261 1 
60 2 370 2 238 5 197 5 102 5 31 2 187 2 339 5 340 2 22 5 172 1 69 1 369 5 146 2 116 10 
233 1 102 1 30 1 176 1 161 1 114 1 
214 2 215 1 40 1 238 2 217 1 41 2 113 1 112 2 337 1 338 1 114 4 219 1 243 2 22 2 94 1 176 2 251 4 208 1 149 2 296 1 226 2 57 2 233 3 234 4 106 1 261 1 161 3 357 1 38 4 
236 3 17 1 110 2 137 1 63 1 268 3 338 1 307 1 219 1 308 1 243 1 309 1 142 1 314 1 71 1 251 1 223 2 208 1 118 1 276 1 375 1 376 2 253 1 280 2 7 1 231 1 234 1 258 1 326 1 329 2 38 1 357 1 
214 1 238 2 149 1 41 1 197 2 225 1 30 2 102 4 226 1 112 1 339 2 22 1 261 1 369 2 116 4 
257 1 365 1 221 1 
318 1 365 1 221 1 23 1 297 1 
257 1 365 1 221 1 
257 1 365 1 221 1 
365 1 221 1 295 1 
365 1 221 1 295 1 
365 1 221 1 295 1 
365 1 221 1 
348 1 15 1 
0 1 193 1 332 2 307 4 306 1 309 8 269 2 313 1 175 1 314 1 71 1 4 4 370 1 72 1 225 1 298 1 187 1 322 1 231 1 131 1 160 1 326 1 329 2 
193 1 0 1 332 2 306 1 307 5 244 1 309 11 269 3 346 1 313 1 175 1 314 2 71 2 4 6 146 1 370 1 72 1 225 1 298 1 31 1 187 2 322 1 231 2 131 2 160 1 382 1 326 2 329 4 
193 1 0 1 302 1 42 1 332 3 306 1 307 10 340 2 244 1 309 19 269 4 346 1 313 1 175 1 205 1 314 3 294 1 71 3 4 9 146 2 370 3 72 1 225 1 298 1 31 2 187 3 32 1 322 1 231 3 131 1 160 1 326 3 329 6 
193 1 0 1 302 1 42 1 332 3 306 1 307 7 340 1 244 1 309 17 269 5 346 2 313 1 175 1 205 1 314 3 71 3 4 10 294 1 146 2 370 2 72 1 225 1 298 1 31 2 32 1 187 3 322 1 231 3 131 1 160 1 326 3 329 6 
0 1 193 1 332 2 307 4 306 1 309 8 269 2 313 1 175 1 314 1 71 1 4 4 370 1 72 1 225 1 298 1 187 1 322 1 231 1 131 1 160 1 326 1 329 2 
302 1 42 1 332 1 307 6 340 2 309 12 269 2 346 1 313 1 205 1 314 1 71 1 4 6 294 1 146 2 370 2 72 1 31 2 187 2 322 1 231 1 131 1 160 1 326 1 329 2 
193 1 0 1 302 1 42 1 332 3 306 1 307 8 340 1 244 1 309 18 269 5 346 2 313 1 175 1 205 1 314 4 294 1 71 4 4 10 146 2 370 2 72 1 225 1 298 1 31 2 187 3 32 2 322 1 231 4 131 1 160 1 326 4 329 8 
302 1 42 1 332 3 362 1 307 7 340 2 309 16 269 6 346 3 313 1 205 1 314 4 294 1 71 4 4 9 146 3 370 2 72 1 31 3 187 3 32 2 322 1 231 4 131 1 160 1 326 4 329 8 
0 3 193 1 370 1 332 3 298 1 187 1 307 4 306 3 309 7 269 6 346 3 175 2 4 3 
193 1 0 1 302 1 42 1 332 3 362 1 306 1 307 8 340 1 309 18 269 4 346 1 313 1 175 1 205 1 314 4 294 1 71 4 4 10 146 2 370 2 72 1 225 1 298 1 31 2 187 3 32 2 322 1 231 4 131 1 160 1 326 4 329 8 
193 1 0 1 370 1 332 2 225 1 298 1 187 1 32 1 307 4 306 1 231 2 309 8 269 3 346 1 175 1 326 2 314 2 4 4 71 2 329 4 
0 1 193 1 370 1 332 2 225 1 298 1 187 1 307 3 306 1 269 2 309 6 175 1 206 1 4 3 
370 1 332 1 31 1 187 1 307 2 340 1 244 1 231 1 269 2 309 4 346 1 326 1 314 1 71 1 4 2 329 2 146 1 
370 1 72 1 332 1 31 1 187 1 307 4 322 1 340 1 309 7 269 2 131 2 346 1 382 1 4 3 146 1 
193 1 0 2 81 1 332 5 306 2 307 12 340 2 269 9 309 23 346 4 175 1 314 2 4 11 71 2 146 2 370 3 225 1 298 1 31 2 187 3 32 2 322 2 231 2 131 2 382 1 326 2 162 1 328 1 329 4 
307 1 309 1 131 1 
322 1 309 1 4 1 
370 1 332 2 31 1 187 1 307 3 340 1 231 1 244 1 309 6 269 3 346 1 69 1 326 1 314 1 71 1 4 3 329 2 146 1 
302 1 42 1 332 1 307 6 340 2 309 12 269 2 346 1 313 1 205 1 314 1 71 1 4 6 294 1 146 2 370 2 72 1 31 2 187 2 322 1 231 1 131 1 160 1 326 1 329 2 
193 1 0 1 370 1 332 1 187 1 307 3 306 1 309 6 269 2 346 1 4 3 
0 1 332 1 298 1 32 1 306 1 307 2 231 1 269 2 309 3 346 1 175 1 326 1 314 1 4 1 328 1 71 1 329 2 
0 2 193 1 370 2 277 1 332 3 187 2 306 2 307 6 269 6 309 12 346 3 4 6 
187 1 231 1 309 2 269 1 346 1 313 1 326 1 314 1 71 1 4 2 329 2 146 1 
370 1 332 1 31 1 187 1 307 2 340 1 231 1 269 2 309 4 346 1 313 1 326 1 314 1 71 1 4 2 329 2 146 1 
0 1 332 1 362 1 32 1 307 2 306 1 231 3 309 3 269 2 346 1 313 1 326 3 314 3 328 1 71 3 4 1 329 6 
193 2 0 3 332 7 363 1 362 1 306 3 307 18 340 3 244 1 309 34 269 12 346 5 313 1 175 1 314 5 71 5 4 16 146 3 274 1 370 5 72 1 225 1 298 1 9 1 31 3 32 2 187 5 322 3 231 5 131 4 382 1 326 5 328 1 329 10 
236 1 209 1 142 1 376 1 166 1 27 1 268 1 
358 1 236 1 263 1 82 1 209 1 376 1 166 1 268 1 354 1 293 1 142 1 27 1 
219 1 208 1 243 1 234 1 94 1 296 1 206 1 338 1 357 1 38 1 251 1 
223 1 208 1 236 2 276 1 376 1 110 1 63 1 268 2 338 1 219 1 308 1 243 1 234 1 142 1 49 1 357 1 251 1 38 1 
330 1 236 2 110 1 63 1 268 2 338 1 219 1 308 2 169 1 142 1 25 2 245 1 49 1 251 1 223 2 208 2 276 1 376 2 100 1 57 1 234 1 14 1 38 1 357 3 
330 1 236 2 110 1 268 2 338 1 219 1 308 2 169 1 142 1 25 2 245 1 49 1 251 1 223 2 208 2 276 1 376 2 100 1 78 1 57 1 234 1 14 1 38 1 357 3 
114 1 338 1 219 1 308 1 243 1 48 1 245 1 347 1 251 3 208 1 100 1 30 1 102 1 55 1 232 1 57 1 233 2 234 3 356 1 161 2 37 1 357 4 38 3 
208 1 100 1 102 1 30 1 338 1 114 1 219 1 308 1 243 1 57 1 232 1 233 2 234 3 356 1 245 1 161 2 180 1 347 1 37 1 251 3 38 3 357 4 
219 1 234 1 35 1 338 1 38 1 251 1 
208 2 359 1 150 1 122 1 109 1 254 1 227 1 10 1 338 3 126 1 219 2 308 1 188 1 243 2 130 1 234 6 35 1 144 1 251 7 38 7 357 3 
193 1 0 1 134 1 236 2 332 2 264 1 43 1 109 1 17 1 110 1 63 1 268 2 338 1 307 3 306 1 219 1 308 1 19 1 309 6 269 2 142 2 175 1 314 2 49 1 4 3 71 2 251 1 223 1 370 1 208 1 276 1 252 1 225 1 51 1 376 1 253 2 7 2 298 1 187 1 231 2 156 1 234 1 258 1 326 2 357 1 329 4 38 1 
214 2 238 1 217 1 112 2 114 2 89 1 243 1 22 1 68 1 177 1 176 1 180 1 251 1 102 1 30 1 226 2 378 1 56 1 323 1 232 1 233 3 234 1 356 1 261 2 161 3 37 1 38 1 357 2 
208 1 109 1 10 1 338 2 219 1 79 1 308 1 232 1 234 2 35 1 251 2 38 2 357 2 
208 1 374 1 109 1 296 1 338 1 219 1 243 1 234 4 94 1 347 1 251 4 38 4 357 1 
133 1 208 1 338 2 219 1 168 1 11 1 308 1 188 1 57 1 234 2 144 1 251 2 38 2 357 1 
219 1 243 1 65 1 373 1 234 1 361 1 285 1 338 1 38 1 251 1 
317 1 208 1 109 1 227 1 338 1 219 1 234 2 130 1 251 2 38 2 357 1 
208 2 359 1 374 1 296 1 109 1 338 2 126 1 219 2 243 1 57 1 234 4 130 1 94 1 251 5 38 5 357 3 
208 2 359 1 374 1 296 1 109 1 338 2 219 2 243 1 115 1 57 1 234 4 130 1 94 1 251 5 38 5 357 3 
223 1 208 1 236 2 276 1 376 1 110 1 268 2 338 1 78 1 219 1 308 1 243 1 234 1 142 1 49 1 357 1 251 1 38 1 
208 1 122 1 10 1 338 2 219 1 308 1 188 1 57 1 234 1 144 1 251 1 38 1 357 1 
64 1 142 1 366 1 198 1 327 1 
236 1 195 1 304 1 198 1 110 1 268 1 64 1 169 1 292 1 310 1 93 1 366 1 25 2 223 1 375 1 376 1 30 1 102 1 280 1 350 1 378 1 233 2 14 1 59 1 161 2 327 1 37 1 301 1 
236 1 376 1 198 1 123 1 268 1 125 1 90 1 366 1 327 1 
93 1 366 1 301 1 
284 1 62 1 235 1 206 1 
189 1 108 1 284 1 85 1 62 1 335 1 235 1 
20 1 189 1 271 1 
108 3 85 1 265 1 62 1 335 1 189 3 220 1 284 1 58 1 235 1 70 1 272 2 
189 2 108 2 284 1 85 1 62 1 76 1 335 1 235 1 305 1 
108 1 85 1 185 1 62 1 335 1 53 1 189 1 65 1 128 1 285 1 70 1 
189 1 108 1 85 1 62 1 335 1 235 1 70 1 
189 1 108 1 284 1 85 1 335 1 235 2 70 1 
108 2 73 1 239 1 85 2 62 1 335 2 189 2 299 1 235 1 70 1 
108 3 85 1 62 2 335 1 101 1 76 2 189 3 91 1 284 1 127 1 128 1 235 1 70 1 
108 2 371 1 373 1 85 1 334 1 62 1 335 1 76 1 53 1 65 2 189 2 284 1 285 1 235 1 70 1 
108 4 85 2 62 2 335 2 76 2 305 1 189 4 284 1 127 1 190 1 128 1 235 1 70 1 
189 1 108 1 284 1 85 1 62 1 335 1 235 1 70 1 
108 4 165 1 85 1 265 1 62 3 76 2 335 1 189 4 220 1 284 2 127 1 128 1 235 2 272 1 
108 2 85 1 62 1 335 1 52 1 76 1 151 1 189 2 284 1 235 1 70 1 273 1 
108 3 85 1 121 1 265 1 62 1 335 1 189 3 220 2 284 1 235 1 70 1 272 2 
105 2 229 1 62 2 44 1 
189 1 108 1 85 1 335 1 267 1 70 1 
189 2 108 2 284 1 85 1 62 1 76 1 101 1 335 1 235 1 70 1 
170 1 
189 1 108 1 284 1 85 1 62 1 335 1 235 1 70 1 
108 3 85 1 62 1 76 1 335 1 101 1 189 3 284 1 235 1 70 1 272 1 
127 1 165 1 128 1 62 1 
62 1 235 1 

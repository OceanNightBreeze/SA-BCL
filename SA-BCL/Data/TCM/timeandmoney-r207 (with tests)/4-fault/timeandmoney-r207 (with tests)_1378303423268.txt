#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (134,331) 234 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (134,331) 234 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 263 334 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 2 362 1 363 5 331 1 306 1 261 1 144 9 187 2 264 2 100 1 215 1 270 9 366 2 147 1 368 1 318 1 246 4 291 3 294 1 193 1 152 2 280 2 195 6 230 1 134 1 283 1 231 1 109 2 
27 2 362 1 363 5 331 1 306 1 261 1 144 9 187 2 264 2 100 1 215 1 366 2 270 9 147 1 368 1 318 1 246 4 291 3 294 1 193 1 152 2 280 2 195 6 230 1 134 1 283 1 231 1 109 2 
27 2 362 1 363 6 331 1 306 1 261 1 144 10 187 2 264 2 100 1 215 1 366 2 270 10 147 1 368 1 318 1 246 5 291 4 294 1 193 1 152 2 280 2 195 7 230 1 134 1 283 1 231 1 109 2 
27 2 362 1 363 4 331 1 306 1 261 1 144 7 187 2 264 2 100 1 215 1 366 2 270 7 368 1 318 1 246 3 291 2 294 1 193 1 152 2 280 2 195 4 230 1 134 1 283 1 231 1 109 1 
368 1 27 1 246 2 291 1 362 1 363 3 152 1 195 3 230 1 144 4 187 1 264 1 231 1 215 1 270 4 366 1 147 1 109 2 
368 1 27 1 358 1 362 1 363 1 152 1 306 1 280 1 230 1 198 1 309 1 144 2 187 1 264 1 283 1 270 2 
368 1 246 1 291 1 362 1 363 2 152 2 280 1 195 1 230 1 144 3 187 2 134 1 270 3 
230 1 144 1 134 1 187 1 152 1 270 1 234 1 
230 1 144 1 134 1 187 1 152 1 270 1 234 1 
157 1 342 1 64 1 
128 2 342 1 162 1 
170 2 155 2 141 2 299 2 191 1 52 2 7 1 316 2 
158 1 53 1 52 3 54 1 242 1 7 1 209 1 285 1 55 1 338 1 185 1 141 2 32 1 312 2 168 1 316 2 170 2 171 2 78 1 292 1 191 1 227 1 173 1 103 1 372 2 277 2 296 2 251 1 196 1 197 1 155 2 130 1 156 1 133 1 299 3 108 1 183 1 
170 1 327 1 155 1 141 1 357 1 299 1 36 1 191 1 52 1 316 1 
170 1 327 1 125 1 328 1 60 1 35 1 52 1 323 1 95 1 351 1 157 1 299 1 245 1 342 1 
170 1 327 1 328 2 60 1 35 1 52 1 323 1 351 2 141 1 155 1 95 1 157 1 299 1 342 1 316 1 
148 1 351 1 328 1 90 1 206 1 
351 2 328 2 157 1 90 1 206 1 333 1 342 1 315 1 
351 1 328 1 206 1 
170 1 327 1 328 1 357 1 36 1 191 1 90 1 52 1 351 1 141 1 155 1 43 1 299 1 316 1 
342 1 
351 2 328 2 157 1 90 1 206 1 342 1 216 1 315 1 
84 1 369 1 328 5 149 1 238 1 241 1 90 2 303 2 206 2 163 1 337 1 129 1 324 2 351 5 94 1 157 1 342 1 67 2 315 1 
170 1 158 1 171 1 204 1 78 1 292 1 150 1 52 2 372 1 242 1 338 1 130 1 155 1 299 2 32 1 179 1 312 1 168 1 183 1 316 1 
64 1 7 1 
170 2 52 2 228 1 7 2 141 1 155 1 211 1 299 2 316 1 
150 1 255 1 250 1 
158 1 171 1 293 1 292 1 78 1 52 1 372 1 242 1 7 1 338 1 130 1 299 1 312 1 32 1 168 1 183 1 
170 3 141 1 155 3 299 3 179 1 52 3 7 1 316 3 
170 1 327 1 155 1 299 1 36 1 52 1 316 1 
170 1 327 1 155 1 141 1 211 1 299 1 52 1 228 1 316 1 
158 1 327 1 328 1 204 1 53 1 52 4 54 1 242 1 7 1 209 1 285 1 55 1 338 1 141 2 95 1 311 1 32 1 312 1 168 1 316 3 170 3 171 1 60 1 78 1 292 1 35 1 191 1 173 1 276 1 372 1 277 2 228 1 296 1 251 1 323 1 197 1 130 1 155 3 351 1 156 1 133 1 299 4 179 1 183 1 
170 2 155 1 240 1 299 2 179 1 245 1 52 2 7 1 316 1 
170 3 327 1 328 1 204 1 60 1 35 1 52 3 276 1 228 1 323 1 325 1 141 1 351 1 155 3 95 1 299 3 179 2 342 1 316 3 
170 2 155 2 141 1 150 1 299 2 179 1 52 2 255 1 228 1 316 2 
158 1 171 1 292 1 78 1 52 1 372 1 242 1 7 1 338 1 130 1 299 1 312 1 32 1 168 1 183 1 
158 1 171 1 292 1 78 1 52 1 372 1 7 1 130 1 299 1 312 1 32 1 99 1 33 1 168 1 183 1 
51 1 114 1 54 2 209 1 55 1 185 2 213 1 267 1 145 1 101 1 77 1 127 1 150 2 224 1 173 1 277 2 175 1 251 1 296 4 250 2 197 1 133 1 44 1 255 2 
170 1 327 1 95 1 155 1 222 1 299 1 52 1 316 1 
170 5 204 1 240 1 52 5 228 1 7 1 155 4 141 1 11 1 299 5 179 2 245 1 288 1 316 4 
170 2 327 1 155 2 222 1 299 2 36 1 52 2 316 2 
350 1 207 1 
350 1 207 1 
123 1 151 1 
123 1 151 1 
123 1 151 1 
350 1 207 1 305 1 
350 1 62 1 207 1 
123 1 350 2 71 1 203 1 151 1 207 2 
350 1 207 1 305 1 
350 1 207 1 305 1 
350 1 274 1 207 1 
350 1 274 1 207 1 
350 1 274 1 207 1 
328 2 69 1 364 3 207 2 40 1 61 1 335 1 164 2 93 2 350 2 374 2 351 2 71 1 287 1 135 1 244 1 46 2 74 2 342 1 
328 1 52 2 364 1 207 1 7 1 165 1 286 1 93 1 121 1 287 1 310 1 74 1 314 1 316 2 170 2 102 1 155 2 374 1 350 1 351 1 62 1 299 2 46 1 326 1 
27 1 264 1 366 1 
27 1 309 1 264 1 
27 3 309 1 205 1 376 1 366 2 235 1 
106 1 27 2 309 1 376 1 366 1 235 1 
27 2 309 1 376 2 366 1 235 1 
84 1 328 5 139 2 238 3 330 2 114 1 303 1 90 4 206 1 304 1 162 1 286 1 120 1 10 1 121 1 310 1 342 2 101 1 315 1 290 1 217 1 127 1 224 1 128 3 105 2 129 2 324 1 297 1 351 5 253 1 157 1 67 1 
327 1 328 2 357 1 90 2 52 1 206 1 141 1 265 1 342 1 316 1 170 1 148 1 36 1 191 1 37 1 81 1 351 2 155 1 43 1 157 1 299 1 
328 3 238 3 139 2 330 1 114 1 90 2 303 1 304 1 162 2 286 1 10 1 120 1 342 3 101 1 290 1 369 1 127 1 224 1 105 2 128 4 324 1 297 1 129 2 351 3 157 1 67 1 
328 4 139 4 238 5 330 2 114 2 303 1 90 3 304 2 162 3 286 2 10 1 120 1 342 4 101 2 290 1 369 1 126 1 127 2 224 2 128 7 105 4 324 1 297 1 129 4 351 4 157 1 352 1 201 1 67 1 
49 1 168 1 64 1 
166 1 168 1 
160 1 
78 1 168 1 
49 2 131 1 96 1 78 1 32 1 168 3 
78 1 32 1 168 1 
17 1 168 1 
88 1 79 1 321 1 54 1 336 1 175 2 296 4 279 2 185 3 307 1 263 1 44 3 98 1 167 1 136 1 101 1 
88 1 79 1 321 1 54 1 336 1 175 2 296 4 279 2 185 3 307 1 263 1 44 3 98 1 167 1 136 1 101 1 
88 1 79 1 321 1 54 1 336 1 175 2 296 4 279 2 185 3 307 1 263 1 44 3 98 1 167 1 353 1 136 1 101 1 
112 1 88 1 54 3 336 1 6 1 55 1 185 3 98 2 214 1 268 1 79 1 173 1 321 1 194 1 277 2 175 1 296 6 251 1 279 1 373 1 197 1 44 2 23 1 136 1 
88 1 54 2 336 1 55 2 185 4 307 1 72 1 263 1 98 1 167 1 268 1 101 1 173 2 321 1 277 4 175 3 251 2 296 6 279 2 197 2 42 1 44 4 136 1 
158 1 27 2 50 1 362 1 363 1 332 1 205 1 260 1 30 1 309 1 144 2 187 1 264 1 341 1 312 1 366 1 270 2 367 1 271 1 368 1 171 1 292 1 320 1 372 1 152 1 322 1 280 1 195 1 230 1 65 1 
158 1 27 2 50 1 329 1 362 1 363 1 205 1 332 1 260 1 30 1 309 1 144 3 187 1 264 1 341 1 312 1 366 1 270 3 367 1 271 1 368 1 171 1 292 1 295 1 372 1 152 1 280 1 195 2 65 1 379 1 
368 1 158 1 27 2 171 1 329 1 292 1 362 1 363 1 205 1 332 1 372 1 260 1 280 1 195 2 309 1 144 2 264 1 341 1 312 1 366 1 65 1 367 1 270 2 379 1 271 1 
158 1 257 1 332 2 208 1 144 1 187 1 341 2 12 1 312 1 168 1 269 1 270 1 271 2 171 1 78 1 292 1 295 1 372 1 152 1 154 1 280 2 200 1 183 1 
158 1 27 2 50 1 332 1 205 1 260 1 30 1 309 1 144 1 187 1 264 1 341 1 312 1 366 1 270 1 367 1 271 1 171 1 292 1 372 1 152 1 322 1 280 1 230 1 65 1 379 1 
1 1 
84 1 85 1 327 1 328 5 238 2 239 4 89 2 52 1 95 1 143 1 340 2 58 2 245 1 14 1 342 2 15 2 60 1 292 1 192 1 104 1 297 1 351 5 157 1 200 1 299 1 63 1 25 2 67 1 257 1 158 1 359 1 116 1 303 1 206 6 117 1 162 2 31 1 312 2 73 2 168 1 365 2 315 3 170 1 171 2 125 1 78 1 35 1 226 1 372 2 323 1 128 2 129 2 324 1 178 1 183 2 
85 1 327 1 328 3 239 2 116 1 89 1 52 1 206 2 95 1 245 1 14 1 216 1 315 1 170 1 125 1 60 1 35 1 192 1 104 1 323 1 351 3 299 1 
85 1 327 1 328 3 239 3 116 1 52 1 206 1 95 1 245 1 58 1 14 1 342 1 216 1 315 1 170 1 125 1 60 1 35 1 192 1 104 1 323 1 351 3 157 1 299 1 
85 1 327 1 328 3 239 3 116 1 89 1 52 1 206 2 95 1 245 1 58 1 14 1 342 1 216 1 315 1 15 1 170 1 125 1 60 1 35 1 192 1 104 1 323 1 351 3 157 1 299 1 
85 1 84 1 327 1 328 5 238 1 239 6 89 4 52 1 5 1 95 1 143 1 340 2 245 1 58 4 14 1 342 5 189 1 15 4 60 1 192 1 104 1 351 5 157 5 299 1 25 2 67 1 111 1 259 1 116 1 303 1 206 7 162 2 73 2 365 2 216 1 315 3 170 1 125 1 35 1 226 1 229 1 323 1 324 1 129 1 
84 1 85 1 327 1 328 4 238 1 239 4 89 2 52 1 95 1 143 1 340 2 245 1 58 2 14 1 342 2 15 2 60 1 192 1 104 1 351 4 157 1 299 1 25 2 67 1 116 1 303 1 206 4 162 2 31 1 73 2 365 2 315 2 170 1 125 1 226 1 35 1 323 1 128 2 324 1 129 1 
85 1 84 1 327 1 328 4 238 1 111 1 239 4 259 1 89 2 116 1 52 1 303 1 206 4 162 2 95 1 143 1 340 2 58 2 73 2 245 1 14 1 342 1 365 2 189 1 15 2 315 2 170 1 125 1 60 1 226 1 35 1 192 1 104 1 323 1 129 1 324 1 351 4 157 1 299 1 25 2 67 1 
85 1 84 1 327 1 328 4 238 1 111 1 239 4 259 1 89 2 116 1 52 1 303 1 206 4 162 2 95 1 143 1 340 2 58 2 73 2 245 1 14 1 342 1 365 2 189 1 15 2 315 2 170 1 125 1 60 1 226 1 35 1 192 1 104 1 323 1 129 1 324 1 351 4 157 1 299 1 25 2 67 1 
85 1 84 1 327 1 328 4 237 1 238 1 239 4 140 1 89 2 116 1 52 1 303 1 206 4 4 2 95 1 143 1 58 2 73 2 245 1 14 1 342 1 189 1 15 2 315 2 170 1 125 1 60 1 16 2 35 1 192 1 347 1 104 1 323 1 128 2 129 1 324 1 351 4 157 1 299 1 25 2 67 1 
84 1 85 1 327 1 328 4 238 1 111 1 239 5 259 1 116 1 89 3 303 1 52 1 206 5 162 2 5 1 95 1 143 1 340 2 73 2 245 1 58 3 14 1 342 1 365 2 189 1 315 2 15 3 170 1 125 1 60 1 226 1 35 1 192 1 104 1 323 1 129 1 324 1 351 4 157 1 299 1 25 2 67 1 
84 1 85 1 327 1 328 4 238 1 111 1 239 5 259 1 116 1 89 3 303 1 52 1 206 5 162 2 5 1 95 1 143 1 340 2 73 2 245 1 58 3 14 1 342 1 365 2 189 1 315 2 15 3 170 1 125 1 60 1 226 1 35 1 192 1 104 1 323 1 129 1 324 1 351 4 157 1 299 1 25 2 67 1 
84 1 85 1 327 1 328 4 237 1 238 1 239 4 89 2 52 1 4 2 95 1 143 1 245 1 58 2 14 1 342 1 15 2 60 1 16 2 192 1 104 1 351 4 157 1 299 1 25 2 67 1 116 1 303 1 206 4 31 1 73 2 315 2 170 1 125 1 35 1 323 1 128 2 324 1 129 1 
77 1 150 1 173 1 321 1 54 1 277 2 175 2 250 1 7 1 296 3 251 1 279 1 209 1 55 1 185 2 197 1 307 1 263 1 44 2 133 1 167 1 255 1 64 1 136 1 101 1 
68 1 327 1 302 1 114 1 53 1 54 5 304 2 7 1 209 1 55 2 185 7 186 1 101 2 218 1 127 1 370 1 150 8 224 2 173 2 277 4 175 1 153 1 251 2 296 12 250 8 373 2 196 1 197 2 199 1 44 1 133 2 23 2 255 2 
256 1 158 1 204 1 52 2 53 1 54 1 242 1 7 1 209 1 338 1 55 1 185 1 32 1 312 1 168 1 316 1 170 1 171 1 78 1 292 1 293 1 173 1 372 1 277 2 251 1 296 2 196 1 130 1 155 1 197 1 199 1 83 1 132 1 133 1 299 2 179 1 255 1 183 1 
138 2 53 1 52 3 54 8 242 2 336 4 7 1 55 3 338 2 185 9 57 1 146 2 101 3 292 2 150 7 251 3 296 17 250 7 196 1 197 3 155 1 199 1 156 2 107 2 299 3 255 7 66 1 158 2 204 1 114 2 304 2 209 3 307 1 263 1 312 3 32 2 167 1 168 2 316 1 170 1 76 1 171 3 127 2 78 2 224 2 321 1 173 3 372 3 277 6 175 4 279 1 130 2 133 3 44 8 179 1 375 2 136 1 379 1 183 1 
158 2 257 1 113 1 52 1 53 1 91 1 54 1 209 2 55 2 185 1 243 1 312 8 266 1 168 3 316 1 170 1 77 1 171 7 292 2 78 2 320 1 173 2 372 8 277 4 249 1 251 2 296 2 196 1 252 1 155 1 197 2 133 2 299 1 200 1 179 1 108 2 379 1 183 2 233 1 
114 1 52 1 54 2 304 1 209 1 55 1 185 1 141 1 101 1 316 1 170 1 127 1 150 1 224 1 173 1 277 2 175 1 228 1 250 1 251 1 296 3 197 1 155 1 199 1 44 1 133 1 299 1 180 1 255 1 
77 1 150 1 224 1 173 1 277 2 336 1 250 1 296 2 251 1 209 1 55 1 185 2 197 1 44 1 133 1 255 1 267 1 101 1 
77 1 127 1 51 1 150 1 114 1 173 1 54 2 277 2 175 1 250 1 296 2 251 1 209 1 55 1 197 1 44 1 133 1 255 1 
77 1 127 1 114 1 150 2 224 1 173 1 54 2 277 2 304 1 175 1 336 1 250 2 296 4 251 1 209 1 55 1 185 2 197 1 44 2 133 1 255 2 101 1 
150 1 224 1 173 1 277 2 336 1 250 1 296 2 251 1 209 1 55 1 185 2 197 1 44 1 133 1 243 1 255 1 267 1 101 1 
127 1 51 1 150 1 114 1 173 1 54 2 277 2 175 1 250 1 296 2 251 1 209 1 55 1 197 1 44 1 133 1 243 1 255 1 
127 1 114 1 150 2 224 1 173 1 54 2 277 2 304 1 175 1 336 1 250 2 296 4 251 1 209 1 55 1 185 2 197 1 44 2 133 1 243 1 255 2 101 1 
127 1 114 1 150 2 224 1 173 1 54 2 277 2 304 1 175 1 336 1 250 2 251 1 296 4 209 1 55 1 185 2 197 1 44 2 133 1 255 2 101 1 
158 1 52 1 53 1 54 1 242 1 7 1 209 1 338 1 55 1 185 1 32 1 312 1 168 1 171 1 78 1 292 1 173 1 372 1 277 2 296 2 251 1 196 1 130 1 197 1 156 1 133 1 299 1 183 1 
158 1 161 1 52 1 53 1 54 1 7 1 209 1 55 1 185 1 32 1 312 1 99 1 33 1 168 1 171 1 78 1 292 1 173 1 372 1 277 2 296 2 251 1 196 1 130 1 197 1 133 1 299 1 183 1 
127 1 114 1 150 2 224 1 173 1 54 2 277 2 304 1 175 1 336 1 250 2 296 4 251 1 209 1 55 1 185 2 197 1 199 1 44 2 133 1 255 2 101 1 
158 1 114 1 52 1 54 2 304 1 336 1 242 1 209 1 338 1 55 1 185 2 32 1 312 1 168 1 101 1 146 1 171 1 127 1 292 1 78 1 150 2 224 1 320 1 173 1 372 1 277 2 175 1 250 2 296 4 251 1 130 1 197 1 156 1 44 2 133 1 299 1 255 2 
114 1 52 1 54 1 304 1 336 1 209 1 55 1 185 2 141 1 339 1 101 1 316 1 170 1 127 1 224 1 150 1 173 1 277 2 228 1 251 1 296 3 250 1 197 1 155 1 199 1 44 1 133 1 299 1 255 1 
355 1 184 1 159 1 114 3 54 16 304 3 336 4 55 4 9 1 185 18 307 1 210 1 263 1 72 1 212 1 167 1 313 1 268 2 343 4 101 4 273 1 127 3 172 1 224 3 275 1 321 1 173 4 194 3 277 8 175 4 251 4 296 34 279 1 82 2 373 3 197 4 298 1 282 1 44 8 23 3 22 1 136 1 
355 1 184 1 159 1 114 3 54 15 304 3 336 3 55 4 9 1 185 17 307 1 210 1 263 1 72 1 212 1 167 1 313 1 268 2 343 4 101 4 273 1 127 3 224 3 275 1 321 1 173 4 194 2 277 8 175 2 251 4 296 32 279 1 82 1 373 2 197 4 298 1 282 1 44 5 23 2 22 1 136 1 
355 1 184 1 159 1 114 3 54 14 304 3 336 3 55 3 9 1 185 14 210 1 72 1 212 1 313 1 268 2 343 4 101 3 273 1 127 3 224 3 275 1 173 3 194 2 277 6 175 3 251 3 296 28 82 1 373 2 197 3 298 1 44 6 23 2 22 1 
355 1 159 1 114 3 54 14 304 3 336 3 55 4 9 1 185 16 307 1 210 1 263 1 72 1 212 1 167 1 313 1 268 2 190 1 343 3 101 4 273 1 127 3 224 3 275 1 321 1 173 4 194 2 277 8 175 3 251 4 296 30 279 1 82 1 373 2 197 4 298 1 282 1 44 6 23 2 22 1 136 1 
355 1 184 1 159 2 114 2 54 12 304 3 336 2 55 3 9 1 185 14 210 1 72 1 212 1 313 1 268 2 343 4 101 3 273 1 127 2 224 3 275 1 173 3 194 2 277 6 175 2 251 3 296 26 82 2 373 2 197 3 298 1 44 4 23 2 22 1 
93 1 374 1 350 1 71 1 87 1 135 1 244 1 46 1 74 1 207 1 
62 1 326 1 
93 1 374 1 350 1 181 1 46 1 74 1 47 1 207 1 378 1 
328 1 69 1 364 2 207 1 61 1 335 1 164 1 93 1 351 1 350 1 374 1 71 1 287 1 135 1 244 1 46 1 74 1 342 1 
328 1 69 1 364 2 207 1 61 1 335 1 164 1 93 1 351 1 350 1 374 1 71 1 287 1 135 1 244 1 46 1 74 1 342 1 
328 1 69 1 364 2 207 1 61 1 335 1 164 1 93 1 351 1 350 1 374 1 71 1 287 1 135 1 244 1 46 1 74 1 342 1 
92 1 203 1 305 1 
92 1 203 1 305 1 
274 1 24 1 
274 1 203 1 24 1 
102 1 314 1 
328 1 52 2 90 1 364 1 207 1 335 1 7 1 164 1 165 1 286 1 93 1 121 1 310 1 74 1 314 1 316 2 170 2 102 1 281 1 351 1 374 1 350 1 155 2 62 1 299 2 46 1 326 1 
92 1 305 1 
274 1 203 1 24 1 
158 1 236 1 361 1 52 2 53 1 54 1 209 1 55 1 185 1 312 2 168 1 170 2 171 2 292 1 78 1 319 1 173 1 174 1 372 2 277 2 251 1 296 2 196 1 252 1 197 1 199 1 20 1 133 1 299 2 108 2 233 1 
158 1 356 1 27 2 171 2 110 1 292 1 205 1 320 1 372 2 38 1 260 1 30 1 309 1 264 1 341 1 312 2 366 1 65 1 379 1 
169 1 158 1 27 2 171 1 292 1 205 1 372 1 38 1 260 1 30 1 309 1 264 1 341 1 312 1 366 1 65 1 379 1 
158 1 356 1 257 1 171 1 292 1 78 1 372 1 341 1 12 1 200 1 312 1 300 1 168 1 183 1 
158 1 356 1 27 2 171 1 110 1 292 1 205 1 372 1 38 1 260 1 30 1 309 1 264 1 341 1 312 1 366 1 65 1 379 1 
137 1 
129 1 238 1 157 1 241 1 342 1 64 1 337 1 
84 1 328 1 238 1 303 1 206 1 162 1 340 1 342 2 365 1 315 1 226 1 128 1 129 1 324 1 351 1 157 1 67 1 
84 4 49 2 0 1 328 5 138 2 238 9 139 6 241 1 337 1 56 2 342 8 101 2 292 3 17 2 105 6 297 2 351 5 21 1 157 2 63 1 67 4 158 4 115 2 114 2 303 4 70 2 206 5 304 2 162 6 166 3 32 3 312 3 168 10 34 2 315 3 171 3 124 2 220 2 127 2 78 3 35 2 224 2 320 1 371 1 372 3 39 1 278 2 128 12 324 4 129 8 131 1 45 1 182 2 183 1 
84 2 328 1 139 5 238 8 114 2 303 2 206 1 70 2 304 2 162 3 9 1 313 1 59 1 342 5 101 2 315 1 124 1 273 1 127 2 224 2 194 1 128 6 105 5 373 1 297 1 324 2 129 5 351 1 298 1 157 2 23 1 22 1 63 1 26 1 67 2 
84 1 328 1 238 2 111 1 114 1 303 1 321 1 70 1 334 1 129 2 324 1 351 1 263 1 136 1 101 1 67 1 
84 1 238 1 303 1 241 1 337 1 324 1 129 1 157 1 342 1 67 1 
124 1 138 1 139 5 127 2 238 5 224 2 114 2 70 2 304 2 162 5 105 5 128 10 129 5 342 5 101 2 
351 1 328 1 157 1 206 1 342 1 315 1 
84 1 158 1 257 1 0 1 328 3 359 1 238 2 303 2 206 4 312 4 168 1 315 2 369 1 171 4 292 1 78 1 372 4 324 2 297 2 129 2 178 1 351 3 21 2 200 1 63 2 377 1 67 2 183 2 301 1 
158 1 53 1 52 3 54 1 242 1 7 1 285 1 209 1 338 1 55 1 141 2 312 1 32 1 168 1 316 2 170 2 171 1 292 1 78 1 191 1 173 1 372 1 277 2 296 1 251 1 197 1 155 2 130 1 156 1 133 1 299 3 183 1 
84 1 139 2 238 1 303 1 162 2 279 1 105 2 128 4 129 2 324 1 297 1 157 2 63 1 342 4 67 1 
346 1 374 1 74 1 
374 1 135 1 102 1 202 1 74 1 
346 1 374 1 74 1 
346 1 374 1 74 1 
374 1 74 1 348 1 
374 1 74 1 348 1 
374 1 74 1 348 1 
374 1 74 1 
350 1 207 1 
114 2 54 6 334 1 304 2 336 4 9 1 55 2 185 12 307 1 263 2 72 1 167 1 313 1 268 1 101 5 127 1 273 1 224 2 321 2 173 2 194 1 277 4 175 5 296 18 251 2 279 1 373 1 197 2 298 1 44 9 23 1 22 1 136 2 
114 1 54 5 304 2 336 1 9 1 55 3 185 9 307 1 263 1 72 1 167 1 313 1 268 1 101 3 273 1 127 1 224 2 321 1 173 3 194 1 277 6 175 3 296 14 251 3 279 1 373 1 197 3 298 1 254 1 44 4 23 1 22 1 136 1 
114 2 54 8 304 2 336 1 9 1 55 3 185 8 307 1 263 1 72 1 167 1 313 1 268 1 101 3 273 1 127 2 224 2 321 1 173 3 194 1 277 6 175 3 296 16 251 3 279 1 373 1 197 3 298 1 254 1 44 4 23 1 22 1 136 1 
114 1 54 5 304 2 336 2 9 1 55 3 185 9 307 1 263 1 72 1 167 1 313 1 268 1 101 3 127 1 273 1 224 2 321 1 173 3 194 1 277 6 175 3 296 14 251 3 279 1 373 1 197 3 298 1 254 1 44 5 23 1 22 1 136 1 
114 2 54 6 334 1 304 2 336 4 9 1 55 2 185 12 307 1 263 2 72 1 167 1 313 1 268 1 101 5 127 1 273 1 224 2 321 2 173 2 194 1 277 4 175 5 296 18 251 2 279 1 373 1 197 2 298 1 44 9 23 1 22 1 136 2 
114 2 54 6 304 2 336 1 9 1 55 1 185 6 72 1 313 1 101 2 127 2 273 1 224 2 173 1 194 1 277 2 175 1 296 12 251 1 373 1 197 1 298 1 44 2 23 1 22 1 
114 1 54 6 304 2 336 2 9 1 55 4 185 9 307 1 263 1 72 1 167 1 313 1 268 2 101 3 273 1 127 1 224 2 321 1 173 4 194 1 277 8 175 3 296 15 251 4 279 1 373 1 197 4 298 1 254 1 44 5 23 1 22 1 136 1 
114 2 54 7 304 3 336 3 9 1 55 4 185 9 72 1 313 1 268 2 101 3 273 1 127 2 224 3 173 4 194 1 277 8 175 3 296 16 251 4 373 1 197 4 298 1 282 1 44 6 23 1 22 1 
114 1 321 2 54 2 334 1 175 4 336 3 296 7 279 1 185 5 307 1 44 7 263 2 167 1 136 2 101 3 
114 1 54 6 304 2 336 1 9 1 55 4 185 9 307 1 263 1 72 1 167 1 313 1 268 2 101 3 273 1 127 1 224 2 321 1 173 4 194 1 277 8 175 3 296 15 251 4 279 1 373 1 197 4 298 1 282 1 44 4 23 1 22 1 136 1 
173 2 321 1 54 2 277 4 336 1 175 2 296 5 251 2 279 1 55 2 185 3 197 2 307 1 263 1 44 3 167 1 268 1 136 1 101 1 
185 2 307 1 263 1 44 2 167 1 321 1 54 1 64 1 175 2 136 1 296 3 101 1 279 1 
127 1 114 1 224 1 173 1 54 2 277 2 304 1 175 1 336 1 251 1 296 4 55 1 185 2 197 1 44 2 254 1 101 1 
373 1 185 1 23 1 54 1 194 1 296 2 
302 1 114 3 54 9 334 1 304 2 336 2 55 1 185 11 307 1 186 1 263 2 167 1 268 1 101 5 127 2 370 1 224 2 321 2 173 1 277 2 175 5 296 20 251 1 279 1 373 2 197 1 44 7 23 2 136 2 
373 1 54 1 296 1 
185 1 23 1 296 1 
138 1 127 1 224 1 114 1 173 1 54 3 277 2 304 1 336 1 175 2 251 1 296 6 55 1 185 3 197 1 254 1 44 3 101 1 
114 2 54 6 304 2 336 1 9 1 55 1 185 6 72 1 313 1 101 2 127 2 273 1 224 2 173 1 194 1 277 2 175 1 296 12 251 1 373 1 197 1 298 1 44 2 23 1 22 1 
185 1 263 1 296 1 101 1 
321 1 173 1 54 2 277 2 336 1 175 1 6 1 296 3 251 1 55 1 185 1 197 1 307 1 44 2 167 1 268 1 136 1 
114 1 173 1 321 1 54 3 277 2 334 1 175 2 336 2 251 1 296 7 55 1 185 4 197 1 72 1 44 4 263 1 136 1 101 2 
224 1 173 1 277 2 336 1 251 1 296 2 55 1 185 2 197 1 72 1 44 1 101 1 
127 1 114 1 224 1 173 1 54 2 277 2 304 1 175 1 336 1 251 1 296 4 55 1 185 2 197 1 44 2 72 1 101 1 
173 3 321 1 54 2 277 6 175 1 336 1 6 1 296 3 251 3 55 3 185 1 197 3 282 1 72 1 44 2 268 1 136 1 
112 1 114 1 54 6 334 1 336 3 6 1 55 4 185 6 307 1 263 1 72 1 167 1 268 1 101 2 173 4 321 2 194 1 277 8 175 3 251 4 296 12 373 1 197 4 282 1 44 6 254 1 23 1 136 2 
170 1 240 1 299 1 52 1 245 1 80 1 7 1 
170 1 284 1 240 1 225 1 52 1 80 1 3 1 7 1 349 1 177 1 299 1 245 1 
158 1 257 1 171 1 292 1 78 1 200 1 312 1 168 1 372 1 64 1 183 1 
170 1 158 1 171 1 78 1 292 1 52 2 372 1 242 1 7 1 130 1 155 1 299 2 32 1 179 1 312 1 168 1 183 1 316 1 
170 2 327 1 158 1 171 1 220 1 78 2 292 1 17 1 52 2 372 1 242 1 7 1 323 1 95 1 130 1 155 2 21 1 299 2 32 2 179 1 312 1 168 3 316 1 
170 2 327 1 158 1 171 2 220 1 78 2 292 1 17 1 52 2 372 2 7 1 323 1 262 1 95 1 130 1 155 2 21 1 299 2 32 2 179 1 312 2 168 3 33 1 316 1 
158 1 49 1 328 2 171 3 220 1 78 1 292 1 17 1 221 1 35 1 372 3 206 1 262 1 351 2 308 1 21 1 157 1 166 1 32 1 312 3 168 4 342 1 183 1 
158 1 49 1 328 2 171 3 220 1 78 1 292 1 17 1 35 1 372 3 206 1 56 1 262 1 351 2 21 1 157 1 166 1 32 1 312 3 168 4 342 1 183 1 
158 1 171 1 292 1 113 1 312 1 372 1 
317 1 158 3 171 6 247 1 113 1 78 2 292 2 320 1 91 1 372 7 249 1 8 1 252 1 131 1 312 7 32 1 266 1 168 3 108 1 379 1 183 2 
158 1 236 1 52 2 54 1 242 1 7 1 209 2 55 2 338 1 185 2 307 1 263 1 32 1 312 1 167 1 168 1 101 1 146 1 316 1 170 1 171 1 78 1 292 1 150 1 320 1 321 1 173 2 372 1 277 4 175 2 250 1 296 3 251 2 279 1 130 1 155 1 197 2 199 1 156 1 44 2 133 2 299 2 179 1 375 1 255 1 136 1 
84 2 49 1 0 1 328 3 238 1 115 1 241 1 303 2 90 1 206 2 337 1 56 1 166 1 312 1 168 2 342 1 315 1 171 1 35 1 372 1 278 1 129 1 324 2 351 3 157 1 182 1 183 1 67 2 
49 1 158 2 171 2 113 1 78 1 292 1 320 1 372 2 39 1 131 1 312 2 32 1 168 2 
158 1 257 1 171 4 78 1 292 1 320 1 372 4 262 1 200 1 312 4 168 1 289 1 183 1 
317 1 158 2 171 2 78 1 292 1 372 2 8 1 21 1 312 2 32 1 122 1 168 1 66 1 344 1 
158 1 27 1 171 1 309 1 292 1 264 1 312 1 372 1 65 1 183 1 
158 1 171 2 78 1 292 1 320 1 372 2 174 1 252 1 312 2 168 1 379 1 
257 1 158 2 171 4 78 2 292 2 320 1 372 5 249 1 252 1 21 1 200 1 312 5 266 1 168 3 289 1 183 1 
257 1 158 2 171 4 360 1 78 2 292 2 320 1 372 5 249 1 252 1 21 1 200 1 312 5 168 3 289 1 183 1 
170 1 158 1 171 1 78 1 292 1 52 2 372 1 7 1 130 1 155 1 299 2 32 1 179 1 312 1 168 1 33 1 183 1 316 1 
317 1 158 2 171 1 247 1 78 1 292 1 372 1 8 1 131 1 21 1 312 1 32 1 168 1 
170 1 345 1 20 1 361 1 319 1 97 1 299 1 52 1 41 1 
223 1 18 1 41 1 
48 1 345 1 97 1 7 1 41 1 
345 2 48 2 327 1 328 2 60 1 258 1 223 1 35 1 90 1 276 1 7 1 323 1 41 1 18 1 95 1 351 2 157 1 97 2 342 1 
368 1 362 1 363 1 64 1 
368 1 144 1 362 1 187 1 363 1 152 1 270 1 
280 1 332 1 270 1 
368 1 272 1 362 1 363 1 152 1 176 1 230 1 144 3 187 1 283 2 188 1 270 3 
368 1 195 1 144 2 362 1 187 1 363 1 152 1 270 2 109 1 
27 1 230 1 246 1 144 1 187 1 264 1 363 1 215 1 152 1 366 1 270 1 
230 1 144 1 362 1 187 1 363 1 152 1 270 1 
368 1 230 1 144 1 362 2 187 1 152 1 270 1 
362 1 28 1 363 1 152 2 118 1 230 1 144 2 187 2 13 1 270 2 
368 1 246 1 291 1 362 1 294 1 363 2 152 1 261 1 195 2 230 1 144 3 187 1 270 3 
368 1 27 2 362 1 363 1 205 1 152 1 19 1 195 1 230 1 309 1 144 2 187 1 264 1 270 2 366 1 
368 1 246 1 291 1 362 1 363 2 152 2 195 2 230 1 144 4 187 2 270 4 147 1 109 1 
368 1 230 1 144 1 362 1 187 1 363 1 152 1 270 1 
368 2 272 1 246 1 291 1 362 2 29 1 363 3 152 1 195 2 144 4 187 1 283 1 188 1 270 4 
368 1 362 1 248 1 363 1 152 1 195 1 230 1 142 1 144 2 187 1 354 1 270 2 
368 1 272 1 230 1 144 3 362 1 187 1 363 1 283 2 232 1 188 2 152 1 270 3 
86 2 363 2 2 1 119 1 
219 1 230 1 144 1 187 1 152 1 270 1 
368 1 195 1 230 1 144 2 362 1 187 1 363 1 294 1 152 1 270 2 
75 1 
368 1 230 1 144 1 362 1 187 1 363 1 152 1 270 1 
368 1 195 1 230 1 144 3 362 1 187 1 294 1 363 1 283 1 152 1 270 3 
246 1 291 1 29 1 363 1 
362 1 363 1 

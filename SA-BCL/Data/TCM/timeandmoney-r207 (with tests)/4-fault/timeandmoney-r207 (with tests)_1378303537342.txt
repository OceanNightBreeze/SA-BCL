#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) (175,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) 178 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (101,220,233,237) (175,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (101,220,233,237) (101,220,233,237) (175,310) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
279 1 172 1 212 1 304 1 9 1 268 1 184 1 249 1 206 1 150 1 93 1 300 1 152 1 96 1 
323 1 
219 1 247 1 323 1 312 1 206 2 224 1 304 2 96 1 
190 1 22 1 171 1 174 2 323 1 304 5 199 1 305 1 87 1 328 1 219 1 117 1 312 1 206 5 224 2 225 2 18 2 226 1 96 2 
219 1 323 1 324 1 
294 2 323 1 252 1 
279 2 145 1 212 1 249 2 150 2 268 2 152 2 9 2 
124 1 259 2 211 1 212 1 213 2 6 1 268 2 9 2 218 2 138 1 140 1 222 1 145 1 185 1 311 1 92 1 150 2 54 1 95 1 152 2 188 1 97 1 98 1 279 3 56 1 104 2 235 1 63 1 29 1 200 1 243 2 290 1 33 1 73 1 249 3 38 1 255 1 
279 1 212 1 184 1 249 1 150 1 93 1 300 1 268 1 152 1 9 1 
279 1 321 1 323 1 304 1 268 1 130 1 133 1 219 1 182 1 139 1 249 1 206 1 276 1 300 1 
279 1 323 1 304 2 9 1 268 1 130 1 133 1 219 1 182 1 249 1 206 2 150 1 276 1 152 1 300 1 
206 1 224 1 304 1 19 1 96 1 
219 1 135 1 323 1 312 1 206 2 224 1 304 2 96 1 
206 1 224 1 304 1 
279 2 100 1 268 2 9 1 145 2 147 1 249 2 150 1 152 1 
52 1 198 1 254 1 
279 1 56 1 98 1 211 1 213 1 104 1 6 1 63 1 29 1 200 1 243 1 290 1 145 1 249 1 223 1 255 1 
145 1 324 1 
98 1 279 2 56 1 211 1 6 1 213 1 104 1 63 1 29 1 286 1 268 1 200 1 243 1 290 1 70 1 249 2 52 1 150 1 152 1 255 1 
279 3 145 1 249 3 150 3 9 1 286 1 268 3 152 3 
279 1 184 1 249 1 150 1 300 1 268 1 152 1 
279 1 100 1 147 1 249 1 150 1 300 1 268 1 152 1 9 1 
125 1 259 1 211 1 212 1 6 1 213 1 304 1 9 2 268 3 130 1 218 2 133 1 182 1 138 1 140 1 222 1 145 1 185 1 311 1 150 3 276 1 152 3 188 1 98 1 56 1 279 4 100 1 235 1 104 1 63 1 29 1 286 1 200 1 289 1 243 1 290 1 33 1 70 1 73 1 249 4 206 1 38 1 300 1 255 1 
279 2 145 1 249 2 321 1 149 1 150 1 268 2 152 1 286 1 
125 1 279 3 100 1 323 1 304 1 9 1 286 2 268 3 130 1 133 1 182 1 70 1 249 3 75 1 206 1 150 3 276 1 300 1 152 3 
279 2 100 1 286 1 9 1 268 2 249 2 150 2 52 1 254 1 152 2 
279 1 56 1 98 1 211 1 213 1 104 1 6 1 63 1 29 1 200 1 243 1 290 1 145 1 249 1 255 1 
279 1 98 1 317 1 211 1 213 1 104 1 6 1 63 1 266 1 29 1 200 1 243 1 290 1 145 1 249 1 
259 4 8 1 218 2 11 1 138 1 140 1 185 1 311 1 92 2 52 2 314 1 188 2 229 1 59 1 198 2 109 1 201 1 33 1 71 1 73 1 296 1 77 1 254 2 299 1 
279 1 221 1 249 1 150 1 300 1 268 1 152 1 130 1 
279 5 192 1 100 1 321 1 286 2 268 5 9 1 70 1 161 1 145 1 249 5 149 1 150 4 152 4 
279 2 221 1 184 1 249 2 150 2 300 1 268 2 152 2 
204 1 143 1 91 1 
262 1 204 2 51 1 143 2 205 1 120 1 
204 1 143 1 
204 1 143 1 
51 1 205 1 
51 1 205 1 
51 1 205 1 
12 1 204 1 143 1 
12 1 204 1 143 1 
12 1 204 1 143 1 
204 1 146 1 143 1 
204 1 146 1 143 1 
204 1 146 1 143 1 
189 3 1 2 262 1 60 2 27 1 157 1 194 2 323 1 85 1 304 2 111 1 326 1 159 2 114 2 204 2 163 1 143 2 206 2 39 1 
304 1 216 1 215 1 268 2 145 1 143 1 91 1 150 2 152 2 55 1 189 1 279 2 280 1 156 1 60 1 194 1 62 1 159 1 114 1 160 1 204 1 249 2 206 1 39 1 
123 2 183 1 102 1 196 2 298 1 
330 1 102 1 196 1 
330 1 196 1 298 1 
123 1 183 1 102 2 196 3 298 1 151 1 
123 1 183 1 102 1 196 2 298 1 112 1 
42 1 174 1 214 1 304 5 216 1 306 1 180 2 270 1 219 1 312 1 224 1 314 1 18 1 225 1 96 4 190 2 154 1 153 2 229 1 193 1 156 1 62 1 323 2 31 2 109 1 201 1 328 3 294 3 117 1 206 5 208 1 252 1 
42 2 174 2 214 1 304 9 219 1 312 1 224 6 314 3 19 5 187 1 225 2 18 2 96 7 22 1 190 6 153 6 229 3 193 3 322 1 62 4 323 5 64 1 284 1 31 6 109 3 201 3 328 8 292 1 294 9 117 1 250 5 206 9 208 2 76 1 252 3 
42 1 174 1 304 3 306 1 180 1 219 1 270 1 18 1 225 1 314 1 96 2 22 1 190 2 153 2 229 1 193 1 62 1 323 3 109 1 31 2 201 1 328 3 294 4 206 3 208 1 252 2 
42 1 174 1 304 4 306 1 180 2 219 1 270 1 18 1 225 1 314 2 96 3 22 1 190 4 153 4 229 2 193 2 322 1 62 2 323 4 31 4 109 2 201 2 328 5 292 1 294 7 206 4 208 1 76 1 252 3 
169 1 
290 1 285 1 324 1 
290 1 74 1 
290 1 29 1 
290 3 98 1 234 1 28 1 29 1 285 2 
290 1 98 1 29 1 
290 1 303 1 
188 3 41 1 121 1 228 1 259 7 229 1 236 2 8 2 30 1 113 1 13 1 245 1 36 1 275 1 17 1 92 4 314 1 299 3 
41 1 121 1 122 1 170 1 259 31 176 1 8 5 217 1 218 2 13 1 138 1 140 1 274 3 311 1 17 1 275 2 92 16 314 4 94 1 188 15 228 2 193 3 229 4 61 4 236 3 109 3 113 2 201 3 33 1 244 1 291 1 245 2 36 5 299 10 
41 1 121 1 188 4 228 1 259 9 229 1 236 2 8 3 218 4 113 1 291 1 33 2 245 1 272 1 138 2 140 2 203 1 36 1 311 2 275 1 17 1 92 5 314 1 299 4 
188 3 41 1 121 1 228 1 259 7 229 1 236 2 8 2 113 1 13 1 245 1 36 1 275 1 17 1 92 4 314 1 299 3 
188 3 41 1 121 1 228 1 259 7 229 1 236 2 8 2 113 1 13 1 245 1 36 1 275 1 17 1 92 4 314 1 299 3 
271 1 101 1 233 1 237 1 175 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 178 1 
271 1 101 1 233 1 237 1 175 1 
271 1 220 1 237 1 310 1 
90 1 
0 2 260 4 2 1 3 1 173 1 174 1 6 1 268 1 182 1 89 2 88 1 15 1 16 1 18 1 276 1 190 2 279 1 104 2 29 1 200 1 290 1 293 2 294 2 117 1 206 5 208 1 300 1 40 1 126 1 213 2 304 5 47 2 48 2 130 1 133 1 219 1 137 1 139 1 141 2 49 1 312 3 53 1 224 6 225 1 321 1 323 2 63 2 327 1 243 2 328 2 249 1 252 2 251 1 334 1 166 2 
0 1 279 1 260 2 321 1 304 3 268 1 130 1 327 1 133 1 182 1 139 1 247 1 15 1 249 1 312 1 206 3 53 1 224 2 251 1 334 1 276 1 300 1 
260 3 304 3 268 1 130 1 48 1 133 1 182 1 219 1 139 1 15 1 312 1 53 1 224 1 276 1 279 1 321 1 323 1 327 1 247 1 249 1 206 3 334 1 251 1 300 1 
0 1 260 3 304 3 268 1 130 1 48 1 133 1 182 1 219 1 139 1 15 1 312 1 53 1 224 2 276 1 279 1 321 1 323 1 327 1 247 1 249 1 206 3 334 1 251 1 300 1 166 1 
0 4 260 6 173 1 174 1 84 1 268 1 182 1 273 1 88 1 89 2 15 1 276 1 18 1 190 1 279 1 115 1 293 2 117 1 206 5 300 1 45 1 304 5 47 2 130 1 48 4 133 1 219 5 139 1 141 2 312 3 53 1 224 7 225 1 321 1 323 5 327 1 328 1 248 1 247 1 249 1 251 1 334 1 252 2 166 4 
0 2 126 1 260 4 173 1 174 1 304 4 47 2 268 1 48 2 130 1 133 1 219 1 182 1 89 2 139 1 88 1 141 2 15 1 312 2 53 1 224 4 18 1 225 1 276 1 190 1 279 1 321 1 323 2 327 1 328 1 293 2 294 2 117 1 249 1 206 4 252 2 334 1 251 1 166 2 300 1 
0 2 260 4 173 1 174 1 84 1 45 1 304 4 47 2 268 1 48 2 130 1 133 1 219 1 182 1 89 2 88 1 139 1 141 2 15 1 312 2 53 1 224 4 18 1 276 1 225 1 190 1 279 1 321 1 323 1 327 1 328 1 115 1 293 2 249 1 117 1 206 4 252 2 334 1 251 1 166 2 300 1 
0 2 260 4 173 1 174 1 84 1 45 1 304 4 47 2 268 1 48 2 130 1 133 1 219 1 182 1 89 2 88 1 139 1 141 2 15 1 312 2 53 1 224 4 18 1 276 1 225 1 190 1 279 1 321 1 323 1 327 1 328 1 115 1 293 2 249 1 117 1 206 4 252 2 334 1 251 1 166 2 300 1 
0 2 260 4 261 2 173 1 174 1 265 1 45 1 304 4 47 2 268 1 48 2 130 1 133 1 219 1 182 1 139 1 141 2 15 1 312 2 53 1 224 4 18 1 276 1 225 1 190 1 279 1 321 1 323 1 288 1 327 1 328 1 35 2 162 1 294 2 249 1 117 1 206 4 334 1 251 1 166 2 300 1 
0 3 260 5 173 1 174 1 84 1 45 1 304 4 47 2 268 1 130 1 48 3 133 1 219 1 182 1 89 2 88 1 139 1 273 1 141 2 15 1 312 2 53 1 224 5 18 1 225 1 276 1 190 1 279 1 321 1 323 1 327 1 328 1 115 1 293 2 117 1 249 1 206 4 252 2 334 1 251 1 300 1 166 3 
0 3 260 5 173 1 174 1 84 1 45 1 304 4 47 2 268 1 130 1 48 3 133 1 219 1 182 1 89 2 88 1 139 1 273 1 141 2 15 1 312 2 53 1 224 5 18 1 225 1 276 1 190 1 279 1 321 1 323 1 327 1 328 1 115 1 293 2 117 1 249 1 206 4 252 2 334 1 251 1 300 1 166 3 
0 2 126 1 260 4 261 2 173 1 174 1 304 4 47 2 268 1 48 2 130 1 133 1 219 1 182 1 139 1 141 2 15 1 312 2 53 1 224 4 18 1 225 1 276 1 190 1 279 1 321 1 323 1 327 1 328 1 35 2 162 1 294 2 117 1 249 1 206 4 334 1 251 1 166 2 300 1 
40 1 259 2 6 2 213 7 127 1 268 1 218 4 309 1 138 2 140 2 50 1 49 1 185 2 311 2 150 1 92 1 54 2 152 1 95 1 188 1 227 1 24 1 99 1 279 1 231 1 59 1 104 8 63 2 29 2 286 1 200 2 243 8 329 1 290 3 33 2 249 1 73 2 38 1 167 1 
259 3 8 1 9 1 268 1 218 2 138 1 140 1 185 1 311 1 52 1 150 1 92 1 314 1 152 1 188 2 279 1 100 1 155 1 193 1 229 1 198 1 109 1 201 1 33 1 73 1 249 1 299 1 254 1 168 1 
121 1 41 1 259 6 8 2 218 2 138 1 140 1 145 2 185 1 311 1 17 1 275 1 52 1 92 3 314 1 188 3 229 1 59 1 236 1 198 1 324 1 113 1 33 1 73 1 254 1 299 2 
259 14 80 1 302 1 43 1 176 1 8 1 218 4 138 2 140 2 274 3 145 1 185 2 311 2 52 11 92 8 314 2 94 1 95 1 188 6 155 1 193 2 229 1 61 3 106 1 198 11 109 2 201 1 33 2 36 1 73 1 38 1 299 2 254 4 
259 2 211 1 6 1 213 1 268 1 218 2 138 1 140 1 142 1 145 1 185 1 223 1 311 1 150 1 92 1 313 1 152 1 95 1 188 1 98 1 56 1 279 2 155 1 104 1 63 1 29 1 286 1 200 1 67 1 243 1 290 1 33 1 70 1 73 1 249 2 38 1 254 1 255 1 
258 1 259 20 4 2 6 2 8 4 268 1 181 2 185 3 275 1 17 1 92 10 95 1 188 10 24 1 279 3 98 2 193 2 104 3 29 2 198 7 286 1 109 2 200 2 113 1 201 2 290 2 33 3 36 4 38 1 299 8 41 1 121 1 211 2 213 3 46 1 218 6 138 3 140 3 145 2 311 3 150 1 52 7 314 3 152 1 56 2 229 3 155 1 230 2 319 2 235 2 236 1 63 1 243 3 70 1 249 3 73 3 333 1 254 7 255 2 
259 2 59 1 198 1 109 1 218 2 33 1 138 1 140 1 36 1 73 1 185 1 311 1 52 1 92 2 77 1 314 1 299 1 254 1 
188 2 259 2 229 1 59 1 198 1 8 1 218 2 11 1 201 1 33 1 138 1 140 1 73 1 185 1 311 1 52 1 299 1 254 1 
259 4 8 1 218 2 138 1 140 1 185 1 311 1 92 2 52 2 314 1 188 2 193 1 229 1 59 1 198 2 109 1 201 1 33 1 36 1 73 1 254 2 299 2 
259 2 231 1 198 1 109 1 218 2 33 1 138 1 140 1 36 1 73 1 185 1 311 1 52 1 92 2 77 1 314 1 299 1 254 1 
188 2 259 2 229 1 231 1 198 1 8 1 218 2 11 1 201 1 33 1 138 1 140 1 73 1 185 1 311 1 52 1 299 1 254 1 
259 4 8 1 218 2 138 1 140 1 185 1 311 1 92 2 52 2 314 1 188 2 193 1 229 1 231 1 198 2 109 1 201 1 33 1 36 1 73 1 254 2 299 2 
259 4 8 1 218 2 138 1 140 1 185 1 311 1 92 2 52 2 314 1 188 2 193 1 229 1 198 2 109 1 201 1 33 1 36 1 73 1 254 2 299 2 
259 2 211 1 6 1 213 1 218 2 138 1 140 1 145 1 185 1 311 1 92 1 95 1 188 1 98 1 56 1 279 1 235 1 104 1 63 1 29 1 200 1 243 1 290 1 33 1 249 1 73 1 38 1 255 1 
259 2 211 1 6 1 213 1 266 1 218 2 138 1 140 1 145 1 185 1 311 1 92 1 95 1 188 1 98 1 279 1 317 1 104 1 63 1 29 1 200 1 243 1 290 1 33 1 249 1 73 1 207 1 38 1 
259 4 8 1 218 2 138 1 140 1 185 1 311 1 92 2 52 2 314 1 188 2 193 1 155 1 229 1 198 2 109 1 201 1 33 1 36 1 73 1 254 2 299 2 
259 4 211 1 6 1 213 1 8 1 218 2 138 1 140 1 185 1 311 1 52 2 92 2 314 1 188 2 98 1 56 1 99 1 279 1 229 1 193 1 235 1 319 1 104 1 198 2 29 1 109 1 200 1 201 1 243 1 290 1 33 1 36 1 249 1 73 1 299 2 254 2 255 1 
259 3 9 1 268 1 218 2 138 1 140 1 185 1 311 1 150 1 92 2 52 1 314 1 152 1 188 1 279 1 229 1 100 1 155 1 193 1 198 1 240 1 109 1 201 1 33 1 36 1 73 1 249 1 299 1 254 1 
259 19 176 1 8 3 177 1 218 4 14 1 138 2 272 1 140 2 274 1 311 2 92 9 314 3 94 1 21 1 188 10 57 1 193 3 229 3 195 1 61 2 238 1 110 2 109 3 201 3 33 2 36 3 72 1 118 2 299 6 
259 26 263 1 7 1 8 2 177 2 129 1 218 6 14 1 138 3 272 1 140 3 274 2 311 3 92 14 314 3 94 2 21 2 188 12 57 1 229 2 193 3 61 2 107 1 238 1 110 1 109 3 65 1 201 2 291 2 33 3 36 2 297 1 118 4 299 4 
41 1 121 1 259 41 263 1 7 1 176 1 129 1 8 4 177 2 218 6 14 1 138 3 272 1 140 3 274 3 311 3 275 1 17 1 92 20 314 5 94 3 21 1 188 21 57 1 193 4 229 5 195 1 236 1 61 4 107 1 238 1 110 1 109 4 65 1 113 1 201 4 291 1 33 3 36 4 297 1 118 4 209 1 299 8 
41 1 121 1 259 38 263 1 7 1 176 1 129 1 8 4 177 2 218 8 14 1 138 4 272 1 140 4 274 3 311 4 275 1 17 1 92 20 314 5 94 3 21 1 188 18 57 1 193 4 229 4 195 1 236 1 61 4 107 1 238 1 110 1 109 4 65 1 113 1 201 3 291 2 33 4 36 3 297 1 118 4 209 1 299 7 
41 1 121 1 259 52 80 2 263 1 7 1 176 2 129 1 8 7 177 1 218 4 14 1 138 2 272 1 140 2 274 4 311 2 275 1 17 1 92 27 314 8 94 2 21 1 188 25 57 1 193 7 229 8 236 1 61 4 107 1 238 1 110 1 109 7 65 1 113 1 201 7 291 1 33 2 36 7 297 1 118 4 299 14 
159 1 191 1 114 1 262 1 204 1 163 1 60 1 143 1 157 1 194 1 
91 1 215 1 
66 1 159 1 114 1 58 1 204 1 60 1 143 1 194 1 256 1 
189 2 1 1 262 1 60 1 27 1 157 1 194 1 323 1 85 1 304 1 111 1 159 1 114 1 204 1 163 1 143 1 206 1 39 1 
189 2 1 1 262 1 60 1 27 1 157 1 194 1 323 1 85 1 304 1 111 1 159 1 114 1 204 1 163 1 143 1 206 1 39 1 
189 2 1 1 262 1 60 1 27 1 157 1 194 1 323 1 85 1 304 1 111 1 159 1 114 1 204 1 163 1 143 1 206 1 39 1 
12 1 282 1 120 1 
12 1 282 1 120 1 
281 1 146 1 
281 1 146 1 120 1 
280 1 55 1 
1 1 304 1 216 1 215 1 268 2 145 1 143 1 91 1 150 2 152 2 96 1 55 1 189 1 279 2 280 1 156 1 27 1 60 1 194 1 62 1 159 1 114 1 34 1 160 1 204 1 249 2 206 1 
12 1 282 1 
281 1 146 1 120 1 
259 2 6 1 213 2 268 2 218 2 138 1 140 1 50 1 185 1 311 1 92 1 54 2 95 1 188 1 227 1 279 2 155 1 104 2 283 1 29 1 239 1 200 1 243 2 290 1 331 1 33 1 332 1 73 1 249 2 38 1 253 1 
40 1 5 1 6 1 213 1 104 1 103 1 264 1 63 1 29 1 200 1 243 1 290 1 202 1 49 1 
132 1 243 1 24 1 202 1 5 1 164 1 104 1 213 1 197 1 287 1 
24 1 99 1 5 1 213 2 104 2 197 1 287 1 132 1 243 2 202 1 164 1 
24 1 213 1 104 1 105 1 197 1 132 1 243 1 202 1 164 1 
82 1 
190 1 171 1 174 1 323 1 305 1 219 1 328 1 117 1 225 1 18 1 
190 5 153 5 193 2 229 2 26 1 323 5 109 2 31 5 201 2 181 1 328 5 69 2 294 10 252 5 314 2 
219 1 323 1 206 1 312 1 304 1 224 1 
40 1 3 1 174 2 6 1 213 4 128 2 304 3 179 1 137 2 49 1 16 1 312 2 224 4 18 2 225 2 20 1 22 1 190 2 104 4 63 2 29 1 200 1 243 4 290 1 328 2 117 1 206 3 208 2 119 1 
190 1 328 1 219 1 171 1 323 1 305 1 324 1 
190 1 174 1 323 2 304 1 219 1 328 1 88 1 89 1 293 1 294 1 117 1 206 1 312 1 224 1 252 1 225 1 18 1 
171 1 81 1 174 4 6 3 181 2 18 4 276 2 190 8 99 1 98 3 193 2 26 2 104 3 108 2 29 3 285 2 31 6 109 2 200 4 201 2 290 10 295 1 294 12 117 4 206 5 208 2 119 1 303 2 213 3 128 1 304 5 305 1 131 2 219 2 137 1 312 3 224 5 225 4 314 2 153 6 229 2 234 1 320 2 63 1 323 8 243 3 328 9 69 2 246 2 74 3 165 1 252 6 78 2 79 2 
263 1 174 2 7 1 267 1 304 1 129 1 219 2 137 1 274 1 312 1 224 1 18 2 225 2 314 2 94 1 190 5 153 5 193 2 229 2 26 1 61 1 323 5 107 1 31 5 109 2 65 1 241 1 201 2 328 8 69 2 294 6 117 2 206 1 208 1 252 3 
41 1 172 1 174 1 212 1 84 1 304 1 9 1 268 1 184 1 275 1 150 1 93 1 18 1 225 1 314 2 152 1 190 2 279 1 229 1 26 1 113 1 328 2 69 2 116 1 249 1 117 1 206 1 300 1 
259 1 211 1 212 1 213 1 6 1 268 2 9 2 218 2 138 1 140 1 222 1 145 1 185 1 311 1 150 2 152 2 188 1 279 3 56 1 98 1 104 1 235 1 63 1 29 1 200 1 243 1 290 1 33 1 249 3 73 1 38 1 255 1 
190 2 153 2 174 1 236 1 323 4 31 2 328 1 219 2 137 1 294 4 117 1 208 1 252 2 225 1 18 1 
32 1 60 1 157 1 194 1 55 1 
60 1 194 1 158 1 
60 1 194 1 158 1 
60 1 194 1 158 1 
210 1 60 1 194 1 
210 1 60 1 194 1 
210 1 60 1 194 1 
60 1 194 1 
204 1 143 1 
188 5 41 1 259 10 229 2 8 3 218 2 113 2 33 1 138 1 272 1 140 1 116 1 36 2 311 1 275 2 92 5 314 2 299 5 
259 2 109 1 218 2 33 1 272 1 138 1 140 1 36 1 311 1 92 2 314 1 299 1 
188 2 259 4 229 1 193 1 8 1 109 1 218 2 201 1 33 1 272 1 138 1 140 1 36 1 311 1 92 2 314 1 299 2 
188 2 259 3 195 1 8 1 218 6 113 1 291 1 33 3 272 1 138 3 140 3 36 1 311 3 275 1 37 1 92 1 299 2 
41 2 121 1 122 1 170 1 259 34 176 1 8 7 218 10 10 1 138 5 272 1 140 5 274 3 311 5 275 3 17 1 92 16 314 5 94 1 188 18 193 3 229 5 236 1 61 4 195 1 109 3 113 3 201 3 291 2 244 1 33 5 36 5 37 1 299 12 
41 1 188 4 121 1 259 8 229 1 236 1 8 2 218 4 113 1 33 2 291 1 138 2 140 2 36 1 311 2 17 1 275 1 92 4 314 1 299 3 
188 3 121 1 41 1 259 6 229 1 236 1 324 1 8 2 113 1 17 1 275 1 92 3 314 1 299 2 
188 2 259 4 229 1 193 1 8 1 109 1 218 2 201 1 10 1 33 1 138 1 140 1 36 1 311 1 92 2 314 1 299 2 
188 4 259 7 229 1 193 1 61 2 176 1 8 1 109 1 201 1 274 1 36 1 92 3 314 1 94 1 299 2 
41 1 121 1 259 23 80 1 176 1 8 5 218 4 138 2 140 2 274 2 311 2 275 2 17 1 92 11 314 3 188 12 193 2 229 3 236 1 61 2 106 1 109 2 113 2 201 2 291 2 33 2 36 4 37 1 299 9 
188 1 259 1 61 1 
259 1 274 1 92 1 
188 3 259 6 193 1 229 1 8 2 109 1 218 2 10 1 201 1 181 1 33 1 138 1 140 1 36 1 311 1 92 3 314 1 299 3 
259 12 263 1 7 1 129 1 8 1 218 2 138 1 272 1 140 1 274 1 311 1 92 6 314 2 94 1 188 6 193 2 229 2 61 1 107 1 109 2 65 1 201 2 33 1 36 1 299 2 
41 1 188 3 259 6 229 1 8 1 113 1 36 1 275 1 92 3 314 1 299 2 
121 1 188 2 259 3 8 1 218 2 113 1 291 1 33 1 138 1 140 1 36 1 311 1 275 1 17 1 92 1 37 1 299 2 
121 1 41 1 259 8 8 2 218 2 138 1 272 1 140 1 274 1 311 1 17 1 275 1 92 4 314 1 94 1 188 4 229 1 236 1 61 1 107 1 113 1 33 1 299 2 
41 1 121 1 259 11 176 1 8 2 218 4 10 1 272 1 138 2 140 2 274 1 311 2 275 1 17 1 92 6 314 2 94 1 188 5 229 1 193 1 236 1 61 2 107 1 109 1 113 1 33 2 36 1 299 3 
41 1 121 1 259 19 263 1 7 1 129 1 8 3 218 6 10 1 138 3 272 1 140 3 274 1 311 3 275 1 17 1 92 9 314 3 94 1 188 10 193 2 229 3 236 1 61 1 107 1 109 2 65 1 113 1 201 2 33 3 291 1 36 1 299 4 
41 1 121 1 259 17 263 1 7 1 129 1 8 3 218 6 10 1 138 3 272 1 140 3 274 1 311 3 275 1 17 1 92 10 314 3 94 1 188 7 193 2 229 2 236 1 61 1 107 1 109 2 65 1 113 1 201 1 291 1 33 3 36 2 299 5 
121 1 41 1 259 8 8 2 218 2 138 1 272 1 140 1 274 1 311 1 17 1 275 1 92 4 314 1 94 1 188 4 229 1 236 1 61 1 107 1 113 1 33 1 299 2 
259 12 263 1 7 1 129 1 8 1 218 2 138 1 272 1 140 1 274 1 311 1 92 6 314 2 94 1 188 6 193 2 229 2 61 1 107 1 109 2 65 1 201 2 33 1 36 1 299 2 
41 1 121 1 259 18 263 1 7 1 129 1 8 3 218 8 10 1 138 4 272 1 140 4 274 1 311 4 275 1 17 1 92 10 314 3 94 1 188 8 193 2 229 2 236 1 61 1 107 1 109 2 65 1 113 1 201 1 33 4 291 2 36 2 299 5 
259 16 263 1 7 1 129 1 8 3 218 8 272 1 138 4 140 4 274 1 311 4 92 9 314 3 94 1 188 7 193 3 229 2 61 1 195 1 107 1 109 3 65 1 201 2 33 4 291 2 36 3 299 6 
188 4 121 2 41 1 259 7 229 1 8 3 113 3 36 3 17 1 275 3 92 3 314 1 299 6 
41 1 121 1 259 18 263 1 7 1 129 1 8 3 218 8 272 1 138 4 140 4 274 1 311 4 275 1 17 1 92 10 314 3 94 1 188 8 193 2 229 2 236 1 61 1 195 1 107 1 109 2 65 1 113 1 201 1 33 4 291 2 36 1 299 4 
269 1 279 1 145 1 249 1 321 1 149 1 268 1 
279 1 321 1 44 1 268 1 134 1 242 1 269 1 136 1 68 1 145 1 249 1 149 1 
40 1 99 1 213 4 104 4 6 1 63 1 29 1 200 1 243 4 290 1 49 1 144 1 315 1 
25 1 98 1 83 1 318 1 213 2 104 2 6 1 128 1 29 1 46 1 307 1 200 2 243 2 290 1 
243 1 23 1 330 1 6 1 104 1 213 1 196 1 63 1 298 1 200 1 
227 1 99 1 24 1 213 2 104 2 6 1 283 1 29 1 200 1 243 2 290 1 
40 1 227 1 99 1 213 4 104 5 6 2 127 1 63 1 128 1 29 2 200 2 243 5 290 3 309 1 49 1 144 1 
40 1 277 1 227 1 99 1 213 4 104 5 6 2 63 1 128 1 29 2 200 2 243 5 290 3 309 1 49 1 144 1 
40 1 243 1 290 1 49 1 6 1 104 1 213 1 63 1 29 1 324 1 200 1 
98 1 279 2 211 1 213 1 104 1 6 1 63 1 29 1 286 1 268 1 200 1 243 1 290 1 145 1 249 2 150 1 152 1 255 1 
98 2 279 2 211 1 303 1 213 1 104 1 6 1 128 1 29 2 286 1 268 2 130 1 200 1 133 1 243 1 290 3 145 1 249 2 150 1 300 1 152 2 79 1 255 1 
211 1 303 1 6 1 213 2 266 1 128 1 268 2 130 1 133 1 145 1 150 1 152 2 315 1 279 2 98 2 104 2 29 2 286 1 200 1 243 2 290 3 249 2 300 1 79 1 
172 1 212 1 303 1 6 1 213 2 128 1 304 2 268 1 9 1 308 1 219 1 184 1 150 1 93 1 224 1 276 1 152 1 279 1 98 1 104 2 63 1 323 1 29 1 285 1 200 1 243 2 290 4 249 1 74 1 206 2 300 1 301 1 79 1 
98 1 303 1 213 3 104 3 6 1 63 1 323 1 128 1 29 1 304 2 285 1 200 1 243 3 219 1 290 4 246 1 74 1 206 2 224 1 276 1 315 1 79 1 
243 1 6 1 104 1 213 1 167 1 200 1 
227 1 24 1 99 1 98 1 83 1 232 1 213 6 104 7 234 1 6 2 127 1 63 2 29 2 307 1 200 3 243 7 329 1 290 3 309 1 54 1 167 1 
259 6 6 1 8 2 268 1 185 2 17 1 275 1 92 3 188 3 99 1 279 2 98 1 104 1 29 1 198 1 286 1 200 1 113 1 290 1 33 2 299 2 121 1 41 1 211 1 213 1 218 4 138 2 140 2 145 2 311 2 150 1 52 1 314 1 152 1 56 1 230 1 155 1 229 1 235 1 319 1 236 1 243 1 331 1 249 2 73 2 254 1 255 1 
171 1 174 2 213 1 304 3 305 1 131 1 219 1 312 1 224 2 18 2 225 2 276 1 96 1 190 1 104 1 323 1 63 1 108 1 285 1 243 1 328 1 290 2 246 1 117 2 74 1 206 3 119 1 78 1 
99 1 98 1 213 2 104 2 234 1 6 1 29 1 285 1 200 2 243 2 290 2 295 1 167 1 
98 1 279 2 211 1 213 1 104 1 6 1 63 1 266 1 29 1 286 1 268 1 200 1 243 1 290 1 145 1 249 2 150 1 152 1 
98 1 83 1 232 1 213 1 104 1 234 1 6 1 128 1 29 1 307 1 200 2 243 1 290 1 
257 1 278 1 145 1 186 1 325 1 
257 1 316 1 125 1 278 2 323 1 304 2 130 1 86 1 325 2 133 1 219 1 182 1 145 1 148 1 186 2 206 2 276 1 300 1 96 1 
257 1 278 1 279 1 239 1 268 1 332 1 249 1 186 1 253 1 
316 1 257 1 148 1 

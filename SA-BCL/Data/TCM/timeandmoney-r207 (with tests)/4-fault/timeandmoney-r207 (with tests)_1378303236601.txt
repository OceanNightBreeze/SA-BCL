#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 225 (17,63,160) (17,63,160) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 225 (17,63,160) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (242,264) (21,28,338) (17,63,160) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (14,72) (49,344) (49,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 225 (17,63,160) (17,63,160) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 225 (21,28,338) (21,28,338) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 225 (21,28,338) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (14,72) (14,72) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 225 (21,28,338) (21,28,338) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
215 1 163 2 185 2 292 1 32 1 166 5 266 1 36 2 368 1 299 2 271 1 190 9 88 2 346 1 193 1 326 1 252 6 373 2 112 1 273 1 115 4 274 1 332 3 277 2 94 9 313 1 24 1 208 1 
215 1 163 2 185 2 292 1 32 1 166 5 266 1 36 2 368 1 299 2 271 1 190 9 88 2 346 1 193 1 326 1 252 6 373 2 112 1 273 1 115 4 274 1 332 3 277 2 94 9 313 1 24 1 208 1 
215 1 163 2 185 2 292 1 32 1 166 6 266 1 36 2 368 1 299 2 271 1 190 10 88 2 346 1 193 1 326 1 252 7 373 2 112 1 273 1 115 5 274 1 332 4 277 2 94 10 313 1 24 1 208 1 
215 1 163 2 185 2 32 1 166 4 266 1 36 2 368 1 299 2 271 1 190 7 88 2 346 1 193 1 326 1 252 4 373 2 112 1 273 1 115 3 274 1 332 2 277 1 94 7 313 1 24 1 208 1 
346 1 252 3 163 1 373 1 185 1 292 1 32 1 115 2 166 3 332 1 277 2 368 1 36 1 94 4 299 1 313 1 24 1 190 4 
88 1 346 1 193 1 53 1 163 1 348 1 185 1 7 1 166 1 266 1 368 1 36 1 94 2 299 1 24 1 190 2 
88 1 346 1 215 1 252 1 115 1 166 2 332 1 368 1 36 2 94 3 299 2 24 1 190 3 
320 1 215 1 322 1 163 1 185 1 32 1 292 1 166 5 36 2 368 1 299 2 190 9 88 1 346 1 326 1 252 7 112 1 373 1 115 4 332 3 277 2 94 9 313 1 24 1 
320 1 215 1 322 1 163 1 185 1 32 1 292 1 166 5 36 2 368 1 299 2 190 9 88 1 346 1 326 1 252 7 112 1 373 1 115 4 332 3 277 2 94 9 313 1 24 1 
243 1 180 1 105 1 
243 1 111 1 197 2 
352 2 79 1 39 2 62 2 29 2 280 1 42 2 78 2 
212 1 211 1 285 1 213 1 148 1 125 1 4 1 289 1 29 2 290 1 291 1 78 2 363 1 54 1 79 1 82 1 267 1 170 1 87 1 223 1 302 2 39 3 41 2 62 2 198 1 134 1 42 2 228 1 229 1 352 3 136 2 375 1 140 1 308 2 93 1 379 2 280 1 
352 1 79 1 256 1 34 1 325 1 39 1 62 1 29 1 42 1 78 1 
319 1 124 1 39 1 262 1 253 1 29 1 135 1 352 1 150 1 34 1 310 1 243 1 84 1 180 1 
319 1 39 1 253 2 262 1 62 1 29 1 42 1 78 1 352 1 150 1 34 1 310 1 243 1 84 2 180 1 
294 1 253 1 84 1 248 1 106 1 
294 1 243 1 253 2 269 1 84 2 180 1 128 1 106 1 
253 1 84 1 106 1 
325 1 39 1 253 1 62 1 101 1 29 1 42 1 78 1 256 1 79 1 352 1 34 1 294 1 84 1 
243 1 
142 1 294 1 243 1 253 2 84 2 180 1 128 1 106 1 
161 1 153 1 253 5 100 1 329 1 133 2 92 1 354 2 186 1 35 2 294 2 243 1 367 1 268 1 84 5 180 1 117 1 128 1 106 2 
280 1 105 1 
39 2 40 1 62 1 29 2 42 1 78 1 352 2 280 2 342 1 
365 1 205 1 43 1 
302 1 39 1 213 1 125 1 4 1 134 1 54 1 352 1 33 1 136 1 140 1 82 1 93 1 170 1 379 1 280 1 
352 3 39 3 62 3 29 3 42 1 280 1 270 1 78 3 
352 1 34 1 325 1 39 1 62 1 29 1 78 1 
352 1 34 1 39 1 40 1 62 1 29 1 42 1 342 1 78 1 
284 1 319 1 212 1 211 1 285 1 213 1 148 1 125 1 4 1 289 1 262 1 29 3 290 1 54 1 363 1 78 3 79 1 150 1 82 1 34 1 170 1 84 1 191 1 270 1 87 1 302 1 40 1 39 4 41 2 253 1 62 3 134 1 42 2 228 1 229 1 352 4 136 1 140 1 308 1 93 1 310 1 379 1 280 1 207 1 
352 2 124 1 39 2 62 1 327 1 29 2 280 1 270 1 78 1 
173 1 319 1 284 1 40 1 39 3 253 1 262 1 62 3 29 3 42 1 78 3 352 3 150 1 34 1 310 1 243 1 84 1 207 1 270 2 
352 2 365 1 39 2 40 1 62 2 29 2 42 1 270 1 43 1 78 2 
302 1 39 1 213 1 4 1 125 1 134 1 54 1 352 1 136 1 140 1 82 1 93 1 170 1 379 1 280 1 
302 1 39 1 213 1 125 1 134 1 54 1 352 1 136 1 140 1 82 1 366 1 37 1 170 1 379 1 280 1 
211 1 285 1 148 1 289 1 75 1 290 1 83 1 365 2 340 1 169 1 87 2 303 1 41 2 198 2 228 1 43 2 44 1 64 1 308 4 278 1 279 1 205 2 68 1 145 1 
352 1 150 1 34 1 39 1 51 1 62 1 29 1 78 1 
302 1 284 1 39 2 213 1 125 1 4 1 62 1 29 1 134 1 43 1 54 1 78 1 352 2 136 1 140 1 82 1 93 1 170 1 379 1 270 1 
284 1 124 1 39 5 40 1 62 4 327 1 29 5 42 1 175 1 78 4 352 5 116 1 280 1 270 2 
352 2 34 1 325 1 51 1 39 2 62 2 29 2 78 2 
157 1 236 1 
157 1 236 1 
257 1 276 1 
257 1 276 1 
257 1 276 1 
157 1 236 1 60 1 
157 1 236 1 60 1 
157 1 309 1 236 1 
257 1 139 1 276 1 157 2 236 2 314 1 
157 1 236 1 60 1 
58 1 157 1 236 1 
58 1 157 1 236 1 
58 1 157 1 236 1 
317 1 272 1 236 2 194 1 253 2 132 1 126 2 330 3 353 2 139 1 157 2 45 2 167 1 243 1 246 1 84 2 189 2 26 1 370 2 
283 1 236 1 52 1 29 2 126 1 78 2 167 1 297 1 84 1 189 1 152 1 370 1 174 1 39 2 253 1 62 2 330 1 255 1 352 2 353 1 157 1 309 1 280 1 179 1 
163 1 373 1 185 1 
163 1 185 1 7 1 
264 1 334 1 373 2 25 1 185 3 7 1 
242 1 334 1 373 1 25 1 185 2 7 1 
373 1 334 1 25 2 185 2 7 1 
283 1 235 1 337 1 50 1 52 1 362 1 293 1 80 2 83 1 340 1 35 1 186 1 294 4 243 2 84 5 12 2 128 1 106 1 222 2 303 1 226 1 153 3 253 5 196 1 111 1 197 3 133 1 92 2 354 1 180 1 179 1 145 1 
235 2 337 2 100 1 73 1 362 1 293 3 80 6 83 3 187 1 340 3 186 1 35 2 294 7 243 5 298 1 84 9 12 6 128 1 248 5 106 6 303 3 59 5 153 8 253 9 111 3 254 1 197 9 133 2 176 1 137 1 92 6 354 2 179 4 180 1 145 3 
235 1 337 1 50 1 100 1 293 1 80 2 83 1 340 1 35 1 294 2 243 3 84 3 12 2 222 1 303 1 226 1 153 3 253 3 111 2 197 4 133 1 92 2 354 1 180 1 179 1 145 1 
235 1 337 1 50 1 100 1 293 2 80 4 83 2 340 2 187 1 35 1 294 3 243 4 298 1 84 4 12 4 222 2 303 2 226 1 153 5 253 4 111 3 197 7 133 1 137 1 92 4 354 1 180 1 179 2 145 2 
103 1 125 1 105 1 
125 1 85 1 
250 1 
82 1 125 1 
336 1 103 2 82 1 232 1 125 3 134 1 
82 1 125 1 134 1 
177 1 125 1 
172 1 87 3 181 1 214 1 198 4 9 1 44 2 217 1 83 1 308 7 369 1 158 2 311 1 68 3 145 1 144 1 234 1 
172 1 87 3 181 1 214 1 198 4 9 1 44 2 217 1 83 1 308 7 369 1 158 2 311 1 68 3 145 1 144 1 234 1 
172 1 87 3 181 1 214 1 198 4 9 1 44 2 217 1 83 1 308 7 48 1 369 1 311 1 158 2 68 3 145 1 144 1 234 1 
181 2 121 1 211 1 285 1 214 1 148 1 182 4 290 1 9 1 293 3 217 2 81 1 83 4 340 3 38 3 369 5 172 2 87 15 303 3 41 2 198 16 203 1 351 1 44 5 46 1 308 31 259 1 95 1 311 1 158 3 68 10 144 2 145 4 234 1 
0 1 181 1 211 2 285 2 286 1 148 2 290 2 9 1 217 1 83 1 369 1 172 1 87 4 41 4 198 5 203 1 44 3 308 9 158 2 311 1 68 4 145 1 144 1 234 1 
88 1 302 1 225 1 63 1 136 1 18 1 368 1 36 1 244 1 94 1 260 1 299 1 143 1 379 1 160 1 190 1 
88 1 302 1 225 1 321 1 252 1 63 1 136 1 18 1 36 1 244 1 94 2 260 1 299 1 188 1 379 1 190 2 335 1 
358 1 302 1 88 1 338 1 252 1 185 1 7 1 136 1 264 1 140 1 17 1 18 1 244 1 94 1 260 1 170 1 188 1 379 1 190 1 335 1 
344 1 49 1 88 2 302 1 210 1 14 1 321 1 213 1 136 1 18 2 244 2 36 1 94 1 260 2 299 1 379 1 190 1 
88 1 302 1 225 1 63 1 136 1 18 1 368 1 36 1 244 1 94 1 260 1 299 1 188 1 379 1 160 1 190 1 
151 1 
235 1 238 2 183 2 6 2 150 1 186 1 243 2 245 2 104 1 56 1 192 1 106 6 345 2 302 2 153 2 251 1 253 5 111 2 197 2 352 1 354 1 66 2 310 1 355 4 67 1 312 1 319 1 213 2 261 1 124 1 125 1 262 1 76 1 29 1 127 2 165 1 82 1 35 1 34 1 170 1 84 5 128 3 131 1 39 1 90 1 133 1 135 1 275 1 136 2 92 2 140 1 141 1 178 1 379 2 180 1 
319 1 261 1 124 1 39 1 253 3 262 1 76 1 29 1 127 1 165 1 135 1 352 1 150 1 142 1 34 1 310 1 355 2 84 3 128 1 104 1 131 1 106 2 
319 1 261 1 124 1 39 1 253 3 262 1 76 1 29 1 165 1 135 1 352 1 150 1 142 1 34 1 310 1 243 1 355 3 245 1 84 3 180 1 128 1 104 1 131 1 106 1 
319 1 124 1 261 1 262 1 183 1 29 1 76 1 127 1 165 1 150 1 34 1 243 1 245 1 84 3 128 1 104 1 131 1 106 2 39 1 253 3 135 1 352 1 142 1 310 1 355 3 180 1 
287 1 238 2 183 4 6 2 150 1 339 1 186 1 243 5 245 4 104 1 56 1 106 7 345 2 153 1 253 5 111 2 352 1 307 1 354 1 310 1 66 2 355 6 319 1 261 1 124 1 262 1 76 1 29 1 127 4 165 1 34 1 35 1 84 5 128 3 131 1 39 1 328 1 133 1 135 1 92 1 142 1 377 1 178 1 180 5 
238 2 183 2 6 2 150 1 186 1 243 2 245 2 104 1 56 1 106 4 345 2 153 1 253 4 111 2 197 2 352 1 354 1 310 1 66 2 355 4 319 1 124 1 261 1 262 1 29 1 76 1 127 2 165 1 34 1 35 1 84 4 128 2 131 1 39 1 133 1 135 1 92 1 141 1 178 1 180 1 
319 1 124 1 261 1 238 2 262 1 183 2 29 1 76 1 6 2 127 2 165 1 150 1 339 1 34 1 186 1 35 1 243 1 245 2 84 4 128 2 104 1 56 1 131 1 106 4 345 2 153 1 39 1 253 4 111 2 133 1 135 1 352 1 92 1 307 1 354 1 66 2 310 1 377 1 355 4 178 1 180 1 
319 1 124 1 261 1 238 2 262 1 183 2 29 1 76 1 6 2 127 2 165 1 150 1 339 1 34 1 186 1 35 1 243 1 245 2 84 4 128 2 104 1 56 1 131 1 106 4 345 2 153 1 39 1 253 4 111 2 133 1 135 1 352 1 92 1 307 1 354 1 66 2 310 1 377 1 355 4 178 1 180 1 
319 1 124 1 261 1 238 2 262 1 183 2 29 1 76 1 323 1 127 2 165 1 150 1 34 1 186 1 35 1 243 1 341 1 245 2 84 4 128 2 104 1 131 1 106 4 153 1 39 1 253 4 197 2 133 1 135 1 352 1 92 1 354 1 66 2 310 1 377 1 355 4 159 2 178 1 180 1 209 2 69 1 
319 1 124 1 261 1 238 2 262 1 183 3 29 1 76 1 6 2 127 3 165 1 150 1 339 1 35 1 186 1 34 1 243 1 245 3 84 4 128 2 104 1 56 1 131 1 106 5 345 2 153 1 39 1 253 4 111 2 328 1 133 1 135 1 352 1 92 1 307 1 354 1 66 2 310 1 377 1 355 5 178 1 180 1 
319 1 124 1 261 1 238 2 262 1 183 3 29 1 76 1 6 2 127 3 165 1 150 1 339 1 35 1 186 1 34 1 243 1 245 3 84 4 128 2 104 1 56 1 131 1 106 5 345 2 153 1 39 1 253 4 111 2 328 1 133 1 135 1 352 1 92 1 307 1 354 1 66 2 310 1 377 1 355 5 178 1 180 1 
319 1 261 1 124 1 238 2 262 1 183 2 76 1 29 1 127 2 165 1 150 1 35 1 186 1 34 1 243 1 245 2 84 4 128 2 104 1 131 1 106 4 153 1 39 1 253 4 197 2 133 1 135 1 352 1 92 1 141 1 354 1 66 2 310 1 355 4 159 2 178 1 180 1 209 2 69 1 
181 1 211 1 285 1 148 1 289 1 290 1 9 1 365 1 83 1 105 1 87 3 41 2 198 3 228 1 43 1 44 2 308 6 279 1 205 1 311 1 158 1 280 2 68 2 144 1 145 1 234 1 
120 1 121 1 212 1 211 2 285 2 3 1 148 2 289 2 182 3 359 1 290 2 293 2 81 1 365 4 83 1 340 1 369 1 38 3 87 6 303 2 41 4 374 1 198 8 228 1 202 1 43 11 44 1 375 1 308 14 205 11 280 1 68 2 145 2 
284 1 285 1 211 1 97 1 212 1 213 1 125 1 4 1 148 1 289 1 359 1 29 1 290 1 54 1 78 1 33 1 82 1 365 1 170 1 270 1 87 1 302 1 39 2 41 2 62 1 198 1 134 1 228 1 136 1 350 1 352 2 375 1 140 1 308 2 93 1 379 1 280 1 23 1 
181 1 284 1 285 3 148 3 4 2 288 2 289 3 290 3 54 2 9 1 293 2 340 2 188 1 13 2 302 3 303 2 62 1 198 10 352 3 308 20 205 7 158 1 311 1 68 8 119 1 212 1 211 3 213 1 70 2 125 2 359 1 29 1 361 2 78 1 363 2 83 3 82 2 365 7 170 2 369 4 270 1 86 1 87 10 39 3 41 6 134 2 228 3 43 7 44 4 136 3 375 1 140 2 93 2 333 1 379 3 280 2 144 1 145 3 234 1 
211 2 285 2 122 1 212 1 213 1 125 1 148 2 289 2 29 1 290 2 78 1 82 1 267 1 170 1 270 1 192 1 87 1 302 3 39 1 41 4 62 1 198 1 304 1 228 2 16 1 352 1 136 3 275 1 375 1 140 1 308 2 279 1 143 1 379 3 
211 1 285 1 148 1 289 1 359 1 29 1 290 1 78 1 55 1 293 1 365 1 83 1 340 1 87 2 303 1 40 1 39 1 41 2 62 1 198 1 42 1 228 1 43 1 44 1 352 1 308 3 205 1 68 1 145 1 
303 1 285 1 211 1 148 1 289 1 41 2 198 2 228 1 290 1 43 1 365 1 308 2 279 1 169 1 205 1 369 1 68 1 145 1 
87 2 285 1 211 1 148 1 289 1 41 2 228 1 290 1 43 1 44 1 64 1 365 1 83 1 308 2 340 1 279 1 205 1 68 1 
211 1 285 1 148 1 289 1 290 1 293 1 365 2 83 1 340 1 369 1 87 2 303 1 41 2 198 2 228 1 43 2 44 1 308 4 279 1 205 2 68 2 145 1 
303 1 122 1 285 1 211 1 148 1 289 1 41 2 198 2 228 1 290 1 43 1 365 1 308 2 169 1 205 1 369 1 68 1 145 1 
87 2 122 1 285 1 211 1 148 1 289 1 41 2 228 1 290 1 43 1 44 1 64 1 365 1 83 1 308 2 340 1 205 1 68 1 
211 1 285 1 122 1 148 1 289 1 290 1 293 1 365 2 83 1 340 1 369 1 87 2 303 1 41 2 198 2 228 1 43 2 44 1 308 4 205 2 68 2 145 1 
211 1 285 1 148 1 289 1 290 1 293 1 365 2 83 1 340 1 369 1 87 2 303 1 41 2 198 2 228 1 43 2 44 1 308 4 205 2 68 2 145 1 
285 1 211 1 212 1 213 1 4 1 125 1 148 1 289 1 290 1 54 1 363 1 82 1 170 1 87 1 302 1 39 1 41 2 198 1 134 1 228 1 136 1 352 1 375 1 140 1 308 2 93 1 379 1 280 1 
285 1 211 1 212 1 213 1 125 1 148 1 71 1 289 1 290 1 54 1 82 1 366 1 37 1 170 1 87 1 302 1 39 1 41 2 198 1 134 1 228 1 136 1 352 1 375 1 140 1 308 2 379 1 280 1 
211 1 285 1 148 1 289 1 359 1 290 1 293 1 365 2 83 1 340 1 369 1 87 2 303 1 41 2 198 2 228 1 43 2 44 1 308 4 205 2 68 2 145 1 
285 1 211 1 4 1 125 1 148 1 289 1 290 1 54 1 363 1 293 1 83 1 365 2 82 1 340 1 369 1 170 1 13 1 87 2 302 1 303 1 39 1 41 2 198 2 134 1 228 1 43 2 44 1 136 1 352 1 140 1 308 4 93 1 205 2 143 1 379 1 68 2 145 1 
211 1 285 1 148 1 289 1 359 1 29 1 290 1 78 1 293 1 83 1 365 1 340 1 369 1 87 1 303 1 40 1 39 1 41 2 62 1 198 2 42 1 228 1 43 1 352 1 308 3 205 1 378 1 68 1 145 1 
118 1 0 1 96 1 181 1 121 3 211 3 285 3 27 1 162 1 148 3 74 1 182 4 239 4 31 1 30 1 290 3 9 1 293 4 10 1 81 1 83 5 340 4 38 3 369 4 107 1 87 21 109 1 303 4 89 1 61 1 41 6 198 20 15 1 203 1 349 2 44 4 308 41 158 1 311 1 68 8 144 1 145 5 234 1 
118 1 0 1 96 1 181 1 121 3 211 4 285 4 27 1 162 1 148 4 74 1 182 4 239 4 31 1 30 1 290 4 9 1 293 4 10 1 81 1 83 4 340 3 38 3 369 3 107 1 87 18 109 1 303 4 89 1 61 1 41 8 198 20 15 1 203 2 349 2 44 4 308 38 158 1 311 1 68 7 144 1 145 5 234 1 
118 1 0 1 96 1 181 1 121 2 211 2 285 2 27 1 148 2 74 1 182 4 239 4 30 1 290 2 9 1 293 7 10 1 81 2 83 8 340 7 38 4 369 7 107 1 87 25 109 1 303 7 89 1 61 1 41 4 374 2 198 27 15 1 203 1 349 1 44 7 308 52 158 1 311 1 68 14 144 1 145 8 234 1 
118 2 0 1 121 1 211 2 285 2 27 1 148 2 182 2 239 2 31 1 290 2 293 3 81 1 83 3 340 3 38 1 369 3 107 1 87 10 303 3 89 1 61 1 41 4 198 9 349 1 44 3 19 1 308 19 68 6 145 3 
118 1 0 1 96 1 121 2 211 3 285 3 27 1 148 3 182 2 74 1 239 4 30 1 290 3 293 3 83 2 10 1 340 2 369 2 38 2 87 12 107 1 109 1 303 3 89 1 61 2 41 6 198 14 15 1 203 2 349 2 44 2 308 26 68 4 145 3 
353 1 139 1 157 1 236 1 246 1 132 1 189 1 126 1 370 1 316 1 
174 1 309 1 
353 1 156 1 157 1 168 1 236 1 233 1 189 1 126 1 370 1 
317 1 272 1 236 1 194 1 253 1 132 1 126 1 330 2 353 1 139 1 157 1 45 1 167 1 243 1 246 1 84 1 189 1 370 1 
317 1 272 1 236 1 194 1 253 1 132 1 126 1 330 2 353 1 139 1 157 1 45 1 167 1 243 1 246 1 84 1 189 1 370 1 
317 1 272 1 236 1 194 1 253 1 132 1 126 1 330 2 353 1 139 1 157 1 45 1 167 1 243 1 246 1 84 1 189 1 370 1 
60 1 154 1 314 1 
60 1 154 1 314 1 
58 1 184 1 
58 1 184 1 314 1 
297 1 255 1 
283 1 317 1 236 1 52 1 29 2 126 1 78 2 294 1 297 1 84 1 189 1 152 1 370 1 174 1 39 2 253 1 62 2 330 1 255 1 352 2 353 1 45 1 157 1 309 1 357 1 280 1 179 1 
60 1 154 1 
58 1 184 1 314 1 
285 1 211 1 212 1 125 1 148 1 289 1 359 1 29 2 290 1 82 1 219 1 267 2 170 1 171 1 87 1 302 2 227 1 39 2 41 2 198 1 199 1 200 1 304 1 228 1 352 2 136 2 306 1 375 1 140 1 308 2 379 2 
136 2 302 2 225 1 28 1 244 1 21 1 143 1 188 1 379 2 130 1 
230 1 136 1 302 1 225 1 28 1 244 1 188 1 379 1 
136 1 302 1 14 1 213 1 244 1 72 1 379 1 130 1 
136 1 302 1 225 1 28 1 244 1 21 1 188 1 379 1 130 1 
263 1 
92 1 153 1 243 1 367 1 180 1 117 1 105 1 
6 1 35 1 186 1 243 2 84 1 128 1 56 1 106 1 345 1 153 1 253 1 111 1 197 1 133 1 92 1 354 1 180 1 
235 2 336 1 2 2 288 2 293 2 103 2 186 4 340 2 243 8 300 1 12 6 57 2 106 5 301 1 302 3 108 1 303 2 153 9 110 2 347 1 253 5 111 6 197 12 113 2 354 4 67 1 117 1 315 2 319 2 213 1 125 10 164 2 80 6 82 3 83 2 35 4 367 1 170 4 84 5 128 3 85 3 224 1 134 3 133 4 136 3 91 2 140 3 92 8 177 2 231 2 143 1 379 3 180 2 145 2 
235 1 96 1 121 1 182 1 74 1 30 1 8 1 293 2 80 5 10 1 83 2 35 2 186 2 340 2 243 5 38 1 84 1 12 5 128 1 106 1 109 1 303 2 153 8 253 1 111 3 197 6 113 2 133 2 92 5 354 2 258 1 67 1 180 2 315 1 145 2 
181 1 101 1 29 1 78 1 9 1 79 1 364 1 83 1 339 1 34 1 35 1 186 1 84 1 325 1 39 1 153 2 253 1 62 1 113 2 133 1 42 1 352 1 256 1 92 2 354 1 315 1 144 1 145 2 
153 1 133 1 92 1 354 1 186 1 35 1 367 1 243 1 180 1 117 1 
303 2 153 5 288 1 111 5 197 10 113 2 293 2 92 5 80 5 83 2 340 2 243 5 12 5 315 1 145 2 
243 1 253 1 84 1 180 1 128 1 106 1 
235 2 213 2 125 1 100 1 82 1 35 2 186 1 170 1 84 3 128 2 106 4 192 1 301 2 302 4 153 2 347 1 253 3 195 1 90 1 133 2 136 4 275 1 140 1 92 2 354 2 67 2 312 1 379 4 282 1 
212 1 211 1 285 1 213 1 148 1 4 1 125 1 289 1 29 2 290 1 78 2 363 1 54 1 79 1 82 1 170 1 87 1 302 1 39 3 41 2 62 2 42 2 134 1 229 1 228 1 136 1 352 3 140 1 308 1 93 1 379 1 280 1 
235 1 153 1 111 2 197 4 133 1 80 2 92 2 354 1 186 1 35 1 243 4 67 1 158 1 12 2 180 2 
189 1 129 1 370 1 
189 1 129 1 370 1 
297 1 246 1 189 1 324 1 370 1 
189 1 129 1 370 1 
98 1 189 1 370 1 
98 1 189 1 370 1 
98 1 189 1 370 1 
189 1 370 1 
157 1 236 1 
0 1 96 1 121 1 181 1 211 1 285 1 148 1 182 1 290 1 9 1 83 1 38 1 87 4 41 2 198 4 44 2 308 8 158 1 311 1 68 2 145 1 144 1 234 1 
0 1 96 1 181 1 121 1 211 2 285 2 148 2 182 2 290 2 9 1 293 1 83 1 81 1 38 1 369 1 220 1 87 5 303 1 41 4 198 6 44 2 308 11 158 1 311 1 68 3 144 1 145 2 234 1 
0 1 96 1 181 1 121 1 211 3 285 3 148 3 182 1 74 1 30 1 290 3 9 1 293 2 10 1 83 3 340 2 369 1 38 1 220 1 87 10 109 1 303 2 41 6 198 9 203 1 44 3 308 19 158 1 311 1 68 4 144 1 145 3 234 1 
0 1 96 1 181 1 121 1 211 3 285 3 148 3 182 1 74 1 30 1 290 3 9 1 293 2 10 1 83 2 340 1 369 2 38 1 220 1 87 7 303 2 109 1 41 6 198 10 203 1 44 3 308 17 158 1 311 1 68 5 144 1 145 3 234 1 
0 1 96 1 121 1 181 1 211 1 285 1 148 1 182 1 290 1 9 1 83 1 38 1 87 4 41 2 198 4 44 2 308 8 158 1 311 1 68 2 145 1 144 1 234 1 
0 1 96 1 121 1 211 1 285 1 148 1 182 1 74 1 30 1 290 1 293 2 10 1 83 2 340 2 369 1 38 1 87 6 303 2 109 1 41 2 198 6 44 1 308 12 68 2 145 2 
0 1 96 1 181 1 121 1 211 4 285 4 148 4 182 1 74 1 30 1 290 4 9 1 293 2 10 1 83 2 340 1 369 2 38 1 220 1 87 8 109 1 303 2 41 8 198 10 203 2 44 3 308 18 158 1 311 1 68 5 144 1 145 3 234 1 
0 1 96 1 121 1 211 4 285 4 148 4 182 1 74 1 30 1 31 1 290 4 293 3 10 1 83 2 340 2 369 3 38 1 87 7 109 1 303 3 41 8 198 9 203 2 44 3 308 16 68 6 145 3 
87 4 181 3 198 3 44 3 9 1 83 1 308 7 369 3 311 2 68 6 144 3 145 1 234 1 
0 1 96 1 181 1 121 1 211 4 285 4 148 4 182 1 74 1 30 1 31 1 290 4 9 1 293 2 10 1 83 2 340 1 369 1 38 1 87 8 109 1 303 2 41 8 198 10 203 2 44 3 308 18 158 1 311 1 68 4 144 1 145 3 234 1 
87 4 181 1 285 2 211 2 148 2 41 4 198 4 290 2 203 1 9 1 44 2 83 1 308 8 369 1 158 1 311 1 68 3 145 1 144 1 234 1 
87 3 181 1 198 3 44 2 9 1 83 1 308 6 158 1 311 1 105 1 68 2 144 1 145 1 234 1 
87 2 303 1 285 1 211 1 148 1 41 2 198 2 290 1 44 1 293 1 83 1 308 4 340 1 369 1 68 2 220 1 145 1 
87 4 121 1 303 1 182 2 198 3 44 1 293 1 83 1 81 1 308 7 340 1 38 1 369 1 68 2 145 1 
181 2 285 2 211 2 3 1 148 2 182 2 77 1 290 2 9 1 293 2 81 1 83 3 340 2 369 4 38 2 87 12 303 2 41 4 374 1 198 11 203 2 44 5 308 23 158 1 311 1 68 9 144 2 145 3 234 1 
87 1 308 1 182 1 
308 1 38 1 198 1 
87 3 303 1 211 1 285 1 148 1 288 1 41 2 198 3 290 1 293 1 44 2 83 1 308 6 340 1 369 1 68 3 220 1 145 1 
0 1 96 1 121 1 211 1 285 1 148 1 182 1 74 1 30 1 290 1 293 2 10 1 83 2 340 2 369 1 38 1 87 6 303 2 109 1 41 2 198 6 44 1 308 12 68 2 145 2 
87 3 181 1 198 3 9 1 44 1 83 1 308 6 369 1 68 2 145 1 144 1 
87 2 181 1 285 1 211 1 148 1 41 2 198 1 77 1 290 1 203 1 44 1 308 3 369 1 311 1 68 2 144 1 234 1 
0 1 87 5 181 2 211 1 285 1 148 1 41 2 198 5 290 1 44 3 9 1 364 1 83 2 308 10 369 2 68 5 144 2 145 2 
0 1 303 1 285 1 211 1 148 1 41 2 198 2 290 1 308 2 369 1 68 1 145 1 
87 2 0 1 303 1 285 1 211 1 148 1 41 2 198 2 290 1 44 1 293 1 83 1 308 4 340 1 369 1 68 2 145 1 
87 2 0 1 181 1 285 3 211 3 148 3 41 6 198 1 77 1 31 1 290 3 203 1 44 1 308 3 369 1 68 2 144 1 
0 1 181 3 121 1 211 5 285 5 148 5 182 4 77 1 31 1 290 5 9 2 293 3 81 1 83 5 340 3 38 3 369 5 220 1 87 18 303 3 41 10 198 16 203 2 351 1 44 7 308 34 259 1 95 1 158 1 311 1 68 12 144 3 145 5 234 1 
352 1 65 1 39 1 124 1 327 1 29 1 280 1 
123 1 124 1 39 1 327 1 29 1 240 1 102 1 352 1 11 1 65 1 247 1 280 1 
275 1 136 1 140 1 302 1 82 1 213 1 125 1 170 1 379 1 105 1 192 1 
302 1 39 2 213 1 125 1 4 1 62 1 29 1 134 1 54 1 78 1 352 2 136 1 140 1 82 1 170 1 379 1 280 1 270 1 
301 1 302 1 39 2 125 3 4 1 62 2 164 1 29 2 134 2 54 1 78 1 352 2 136 1 150 1 140 1 177 1 82 2 34 1 310 1 170 1 379 1 280 1 270 1 
301 1 302 2 39 2 125 3 62 2 164 1 29 2 134 2 54 1 78 1 352 2 136 2 150 1 140 1 177 1 82 2 366 1 34 1 310 1 170 1 379 2 280 1 270 1 343 1 
319 1 213 1 125 4 164 1 103 1 265 1 82 1 243 1 170 1 84 2 343 1 106 1 85 1 301 1 302 3 253 2 134 1 136 3 140 1 177 1 356 1 379 3 180 1 
301 1 302 3 319 1 2 1 213 1 125 4 253 2 164 1 134 1 136 3 140 1 177 1 82 1 103 1 243 1 170 1 84 2 379 3 180 1 343 1 85 1 106 1 
136 1 140 1 302 1 371 1 170 1 379 1 
302 2 336 1 213 1 125 1 372 1 5 1 134 1 16 1 136 2 140 1 82 1 204 1 143 1 170 2 379 2 
181 1 285 2 4 1 148 2 289 2 290 2 54 1 9 1 13 1 302 1 62 1 198 3 200 1 352 2 308 6 205 1 311 1 158 1 68 2 211 2 125 1 359 1 361 1 29 1 363 1 78 1 365 1 82 1 83 1 170 1 270 1 87 3 39 2 41 4 134 1 228 2 43 1 136 1 44 2 140 1 93 1 143 1 379 1 280 2 144 1 145 1 234 1 
2 1 319 1 213 1 125 2 103 1 35 2 186 2 294 1 243 1 367 1 84 3 128 1 57 1 85 1 106 2 302 1 153 1 347 1 253 3 133 2 136 1 91 1 92 1 354 2 231 1 379 1 180 1 117 1 
302 2 108 1 336 1 371 1 125 2 134 1 136 2 140 1 103 1 82 1 143 1 170 2 379 2 
302 4 213 1 125 1 201 1 136 4 275 1 140 1 82 1 170 1 143 1 379 4 343 1 192 1 
301 1 119 1 302 2 125 1 372 1 114 1 134 1 136 2 140 1 82 1 204 1 170 2 379 2 206 1 
358 1 136 1 140 1 302 1 213 1 163 1 170 1 379 1 185 1 7 1 
302 2 125 1 199 1 136 2 140 1 82 1 143 1 188 1 170 1 379 2 171 1 
301 1 302 5 213 1 125 3 360 1 201 1 275 1 136 4 218 1 140 2 82 2 143 1 170 2 379 5 171 1 192 1 
301 1 1 1 302 5 213 1 125 3 201 1 275 1 136 4 218 1 140 2 82 2 143 1 170 2 379 5 171 1 192 1 
302 1 39 2 213 1 125 1 62 1 29 1 134 1 54 1 78 1 352 2 136 1 140 1 82 1 366 1 170 1 379 1 280 1 270 1 
301 1 302 1 336 1 125 1 372 1 5 1 134 1 136 1 140 1 82 1 204 1 170 2 379 1 
221 1 147 1 227 1 39 1 29 1 149 1 352 1 306 1 219 1 
376 1 147 1 99 1 
221 1 147 1 237 1 280 1 149 1 
221 2 319 1 146 1 147 1 237 2 253 2 99 1 262 1 149 2 150 1 34 1 376 1 310 1 294 1 243 1 84 2 280 1 180 1 207 1 
166 1 346 1 24 1 105 1 
166 1 346 1 36 1 94 1 299 1 24 1 190 1 
88 1 18 1 190 1 
249 1 166 1 346 1 193 2 295 1 36 1 368 1 94 3 299 1 24 1 190 3 216 1 
166 1 346 1 277 1 36 1 252 1 94 2 299 1 24 1 190 2 
373 1 163 1 185 1 115 1 166 1 368 1 36 1 94 1 299 1 313 1 190 1 
166 1 36 1 368 1 94 1 299 1 24 1 190 1 
346 1 36 1 368 1 94 1 299 1 24 2 190 1 
155 1 241 1 368 1 36 1 94 1 299 1 190 1 
346 1 326 1 252 2 112 1 115 1 166 2 332 1 368 1 36 1 94 3 299 1 24 1 190 3 
346 1 252 1 373 1 163 1 185 2 7 1 166 1 264 1 368 1 36 1 94 2 299 1 24 1 190 2 281 1 
346 1 252 2 292 1 115 1 166 2 332 1 277 1 368 1 36 2 94 4 299 2 24 1 190 4 
166 1 346 1 36 1 368 1 94 1 299 1 24 1 190 1 
346 2 193 1 252 2 216 1 115 1 166 3 332 1 295 1 36 1 94 4 22 1 299 1 24 2 190 4 
166 1 346 1 47 1 36 1 368 1 252 1 322 1 94 2 299 1 24 1 190 2 305 1 
166 1 318 1 346 1 193 2 295 2 36 1 368 1 94 3 299 1 24 1 190 3 216 1 
138 1 166 1 296 1 
331 1 36 1 368 1 94 1 299 1 190 1 
166 1 346 1 326 1 36 1 368 1 252 1 94 2 299 1 24 1 190 2 
20 1 
166 1 346 1 36 1 368 1 94 1 299 1 24 1 190 1 
346 1 193 1 326 1 252 1 166 1 368 1 36 1 94 3 299 1 24 1 190 3 
166 1 332 1 22 1 115 1 
166 1 24 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (22,173) 114 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (22,173) 114 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 3 80 3 183 2 215 1 93 1 286 2 173 1 371 1 332 1 160 2 279 1 336 1 269 1 
22 1 25 9 183 2 93 4 69 1 72 2 52 2 371 3 332 1 34 1 160 2 279 2 336 1 161 2 79 1 80 9 215 6 264 2 59 1 286 5 347 1 143 1 144 1 173 1 319 1 318 1 349 1 269 1 
22 1 25 9 183 2 93 4 69 1 72 2 52 2 371 3 332 1 34 1 160 2 279 2 336 1 161 2 79 1 80 9 215 6 264 2 59 1 286 5 347 1 143 1 144 1 173 1 319 1 318 1 349 1 269 1 
22 1 25 10 183 2 93 5 69 1 72 2 52 2 371 4 332 1 34 1 160 2 279 2 336 1 161 2 79 1 80 10 215 7 264 2 59 1 286 6 347 1 143 1 144 1 173 1 319 1 318 1 349 1 269 1 
22 1 25 7 183 2 93 3 69 1 72 2 52 2 371 2 332 1 34 1 160 2 279 2 336 1 161 1 79 1 80 7 215 4 264 2 59 1 286 4 347 1 143 1 173 1 319 1 318 1 349 1 269 1 
25 4 80 4 183 1 215 3 93 2 264 1 286 3 143 1 347 1 72 1 144 1 52 1 371 1 332 1 160 1 336 1 161 2 269 1 
79 1 25 2 80 2 183 1 48 1 264 1 286 1 123 1 52 1 235 1 349 1 332 1 160 1 279 1 336 1 269 1 
173 1 25 1 114 1 80 1 183 1 160 1 269 1 
173 1 25 1 114 1 80 1 183 1 160 1 269 1 
281 1 273 1 274 1 124 1 364 1 117 1 145 1 192 1 63 1 219 1 84 1 237 1 255 1 131 1 
228 1 
63 2 219 1 328 1 27 1 228 1 50 1 124 2 119 1 
213 1 1 1 297 2 328 1 27 2 228 1 50 1 124 5 17 1 63 5 236 1 219 2 289 1 74 2 44 1 303 1 56 1 197 1 150 2 
328 1 228 1 29 1 
256 2 228 1 51 1 
84 2 237 1 255 2 131 2 117 2 139 1 145 2 192 2 
46 1 225 1 272 1 23 1 180 1 359 1 3 1 156 1 116 1 117 2 203 2 277 1 98 2 237 1 101 1 254 1 255 2 186 1 139 1 211 1 341 2 310 1 374 1 57 1 37 1 216 1 379 1 171 1 145 2 192 3 245 1 218 2 195 1 84 3 290 1 149 2 131 2 
281 1 84 1 273 1 274 1 237 1 255 1 131 1 117 1 145 1 192 1 
274 1 328 1 243 1 228 1 124 1 106 1 192 1 63 1 84 1 8 1 118 1 131 1 322 1 151 1 
274 1 328 1 243 1 228 1 124 2 117 1 145 1 106 1 192 1 63 2 84 1 255 1 131 1 322 1 151 1 
63 1 219 1 27 1 124 1 293 1 
63 2 219 1 328 1 27 1 228 1 49 1 50 1 124 2 
63 1 27 1 124 1 
295 1 225 1 23 1 310 1 180 1 379 1 216 1 117 1 203 1 192 2 380 1 98 1 195 1 84 2 254 1 255 1 186 1 131 1 88 1 341 1 
357 1 283 1 274 1 28 1 117 1 145 1 192 2 84 2 255 1 131 2 139 1 
312 1 377 1 88 1 
225 1 23 1 310 1 180 1 216 1 379 1 203 1 192 1 98 1 195 1 84 1 254 1 186 1 21 1 139 1 341 1 
139 1 29 1 
380 1 84 3 255 3 131 3 117 3 145 1 139 1 192 3 
281 1 84 1 274 1 255 1 131 1 117 1 192 1 
283 1 274 1 28 1 117 1 145 1 192 1 84 1 255 1 131 1 
295 1 225 1 271 1 272 1 23 1 180 1 154 1 359 1 274 1 3 1 156 1 117 3 203 1 98 1 254 1 237 1 255 3 186 1 139 1 211 1 341 1 283 1 310 1 374 1 57 1 243 1 379 1 216 1 171 1 124 1 106 1 145 2 192 4 245 1 218 2 380 1 63 1 195 1 84 4 290 1 149 1 131 3 322 1 151 1 
380 1 345 1 84 2 255 1 118 1 131 2 117 1 139 1 192 2 
295 1 283 1 154 1 274 1 243 1 228 1 124 1 117 3 145 1 106 1 95 1 192 3 380 2 63 1 84 3 255 3 131 3 322 1 151 1 
380 1 283 1 84 2 377 1 255 2 131 2 88 1 117 2 145 1 192 2 
225 1 23 1 310 1 180 1 216 1 379 1 203 1 192 1 98 1 195 1 84 1 254 1 186 1 139 1 341 1 
23 1 310 1 168 1 216 1 379 1 203 1 192 1 96 1 98 1 195 1 84 1 254 1 186 1 139 1 341 1 
272 1 181 1 358 1 359 1 2 1 156 1 3 2 116 2 5 1 234 1 31 1 11 1 189 1 374 1 57 1 312 2 377 2 171 1 16 1 108 1 127 1 218 2 149 4 88 2 
178 1 84 1 274 1 255 1 131 1 117 1 151 1 192 1 
295 1 283 1 345 1 117 4 145 1 192 5 380 2 84 5 268 1 255 4 118 1 131 5 187 1 139 1 
281 1 178 1 84 2 274 1 255 2 131 2 117 2 192 2 
0 1 175 1 66 1 
0 2 333 1 66 2 68 1 104 1 133 1 
0 1 66 1 
0 1 66 1 
333 1 104 1 
333 1 104 1 
333 1 104 1 
0 1 66 1 89 1 
0 1 66 1 89 1 
0 1 66 1 89 1 
0 1 66 1 321 1 
0 1 66 1 321 1 
0 1 66 1 321 1 
152 2 0 2 90 2 309 2 66 2 115 2 360 1 228 1 124 2 133 1 301 2 63 2 53 1 174 1 102 1 176 1 356 1 65 3 224 1 
0 1 152 1 250 1 90 1 66 1 117 2 301 1 30 1 255 2 139 1 309 1 315 1 124 1 192 2 63 1 196 1 84 2 175 1 131 2 20 1 109 1 248 1 65 1 356 1 
264 2 123 1 72 1 257 1 288 2 
52 1 264 1 72 1 
52 1 264 1 123 1 
264 3 123 1 72 2 257 1 288 1 223 1 
264 2 123 1 72 1 257 1 288 1 331 1 
250 1 24 1 358 1 297 1 328 1 251 2 27 1 228 2 51 1 50 1 30 1 31 1 74 1 335 1 303 1 256 3 238 2 76 1 213 3 120 1 343 1 189 1 124 5 108 1 128 1 63 5 219 4 42 2 289 2 109 1 325 1 150 1 
179 1 358 3 299 1 297 2 328 1 251 6 27 6 228 5 51 3 329 1 50 1 230 1 30 4 31 3 136 5 74 2 335 3 303 1 56 1 256 9 213 8 141 1 343 2 189 3 263 1 124 9 108 3 128 1 63 9 219 7 42 6 289 6 325 2 293 5 150 2 
24 1 358 1 297 1 328 1 251 2 228 3 51 2 30 1 31 1 74 1 335 1 56 1 256 4 238 1 76 1 213 3 343 1 189 1 124 3 108 1 63 3 219 2 42 2 289 2 325 1 150 1 
179 1 24 1 358 2 297 1 328 1 251 4 228 4 51 3 230 1 30 2 31 2 74 1 335 2 256 7 56 1 238 2 76 1 213 5 141 1 343 1 189 2 124 4 108 2 63 4 219 3 42 4 289 4 325 1 150 1 
18 1 
195 1 330 1 29 1 
195 1 146 1 
23 1 195 1 
23 1 195 3 81 1 220 1 186 1 330 2 
23 1 195 1 186 1 
177 1 195 1 
110 2 189 1 190 1 227 1 2 4 3 3 184 1 116 2 275 1 16 3 108 1 267 1 129 1 99 1 149 5 323 1 209 1 103 1 
110 3 272 1 358 2 113 1 359 1 67 1 227 3 2 13 184 3 3 19 275 1 116 16 361 1 205 1 31 2 185 1 35 1 335 2 209 2 103 5 188 1 190 2 189 5 374 1 265 3 60 3 171 1 16 8 108 5 267 2 218 2 129 1 149 35 323 1 
110 2 272 2 359 2 2 5 227 1 3 5 184 1 116 3 275 1 205 1 232 1 209 1 103 1 189 1 374 2 190 1 16 4 171 2 108 1 267 1 218 4 129 1 149 8 64 1 
110 2 189 1 190 1 227 1 2 4 3 3 184 1 116 2 275 1 16 3 108 1 267 1 129 1 149 5 323 1 209 1 103 1 
110 2 189 1 190 1 227 1 2 4 184 1 3 4 116 2 275 1 16 3 108 1 267 1 129 1 149 6 323 1 209 1 103 1 
23 1 47 1 310 1 25 1 91 1 80 1 183 1 216 1 203 1 135 2 233 1 97 1 98 1 195 1 160 1 43 1 254 1 279 2 45 1 352 2 258 1 294 2 341 1 
25 1 183 1 72 1 362 1 203 1 135 1 367 1 52 1 369 1 98 1 160 1 73 1 279 1 254 1 259 1 341 1 306 1 80 1 216 1 264 2 123 1 170 1 352 1 294 1 269 1 223 1 
25 2 183 1 72 1 362 1 203 1 135 1 367 1 52 1 98 1 332 1 160 1 73 1 279 1 254 1 336 1 259 1 341 1 306 1 242 1 80 2 215 1 216 1 264 2 286 1 123 1 170 1 352 1 294 1 269 1 223 1 
25 3 183 1 72 1 362 1 203 1 135 1 52 1 369 1 97 1 98 1 332 1 160 1 73 1 279 1 254 1 336 1 259 1 341 1 306 1 80 3 215 2 216 1 264 2 286 1 123 1 170 1 194 1 352 1 294 1 223 1 
25 2 72 1 203 1 135 1 369 1 52 1 98 1 332 1 73 1 279 1 254 1 336 1 341 1 306 1 80 2 215 2 216 1 264 2 286 1 123 1 170 1 194 1 352 1 294 1 223 1 
305 1 
47 1 274 1 328 1 228 2 51 2 50 3 134 1 98 2 138 1 8 1 339 1 341 2 243 1 191 1 106 1 192 1 61 2 63 5 195 1 289 2 198 1 150 1 151 1 200 1 23 1 297 1 300 1 27 6 70 1 71 2 365 2 203 2 302 4 253 2 74 1 303 1 254 1 256 2 206 2 118 1 258 1 213 2 261 1 310 2 216 1 316 2 124 5 39 1 83 1 40 2 84 1 85 1 131 1 322 1 325 1 
261 1 274 1 243 1 300 1 27 2 70 1 50 1 124 3 106 1 302 2 192 1 61 1 63 3 84 1 85 1 198 1 322 1 8 1 118 1 131 1 119 1 151 1 
274 1 328 1 300 1 27 1 70 1 228 1 50 1 302 3 253 1 118 1 8 1 119 1 261 1 243 1 124 3 106 1 192 1 63 3 84 1 85 1 198 1 131 1 322 1 151 1 
274 1 328 1 300 1 70 1 27 2 228 1 50 1 302 3 253 1 118 1 8 1 119 1 261 1 243 1 124 3 316 1 106 1 192 1 61 1 63 3 84 1 85 1 198 1 131 1 322 1 151 1 
274 1 328 5 228 5 50 3 51 2 134 1 8 1 240 1 243 1 58 1 106 1 192 1 61 4 63 5 289 1 198 1 150 1 151 1 297 1 300 1 26 1 70 1 27 7 71 2 365 2 302 6 253 4 74 1 303 1 118 1 206 2 372 1 119 1 212 1 213 1 261 1 316 4 124 5 83 1 40 2 84 1 85 1 322 1 131 1 
274 1 328 1 228 2 51 2 50 2 134 1 8 1 243 1 106 1 192 1 61 2 63 4 289 1 198 1 150 1 151 1 200 1 297 1 300 1 70 1 27 4 71 2 365 2 302 4 253 2 74 1 303 1 256 2 118 1 206 2 213 1 261 1 124 4 316 2 83 1 40 2 84 1 85 1 322 1 131 1 
274 1 297 1 328 1 300 1 26 1 27 4 70 1 228 1 71 2 50 2 51 2 365 2 134 1 302 4 253 2 74 1 303 1 206 2 118 1 8 1 372 1 213 1 261 1 240 1 243 1 316 2 124 4 106 1 192 1 61 2 83 1 63 4 40 2 84 1 289 1 85 1 198 1 131 1 322 1 150 1 151 1 
274 1 297 1 328 1 300 1 26 1 27 4 70 1 228 1 71 2 50 2 51 2 365 2 134 1 302 4 253 2 74 1 303 1 206 2 118 1 8 1 372 1 213 1 261 1 240 1 243 1 316 2 124 4 106 1 192 1 61 2 83 1 63 4 40 2 84 1 289 1 85 1 198 1 131 1 322 1 150 1 151 1 
274 1 297 1 328 1 300 1 27 4 70 1 228 1 202 1 50 2 365 2 302 4 253 2 370 2 74 1 303 1 256 2 118 1 8 1 213 1 261 1 240 1 243 1 314 1 217 2 316 2 124 4 106 1 192 1 61 2 83 1 63 4 40 2 84 1 289 1 85 1 86 1 198 1 131 1 322 1 150 1 151 1 
297 1 274 1 328 1 26 1 300 1 70 1 27 5 228 1 71 2 50 2 51 2 365 2 134 1 302 5 253 3 74 1 303 1 206 2 118 1 8 1 372 1 212 1 213 1 261 1 240 1 243 1 124 4 316 3 106 1 192 1 61 3 83 1 63 4 40 2 84 1 289 1 85 1 198 1 131 1 322 1 150 1 151 1 
297 1 274 1 328 1 26 1 300 1 70 1 27 5 228 1 71 2 50 2 51 2 365 2 134 1 302 5 253 3 74 1 303 1 206 2 118 1 8 1 372 1 212 1 213 1 261 1 240 1 243 1 124 4 316 3 106 1 192 1 61 3 83 1 63 4 40 2 84 1 289 1 85 1 198 1 131 1 322 1 150 1 151 1 
274 1 328 1 228 1 50 2 8 1 243 1 106 1 192 1 61 2 63 4 289 1 198 1 150 1 151 1 200 1 297 1 300 1 70 1 27 4 365 2 302 4 253 2 370 2 74 1 303 1 256 2 118 1 213 1 261 1 217 2 124 4 316 2 83 1 40 2 84 1 85 1 86 1 322 1 131 1 
46 1 272 2 23 2 47 1 181 1 298 1 359 2 156 2 3 1 116 1 117 1 203 8 158 1 369 1 98 7 254 2 255 1 258 1 341 8 310 2 311 1 374 2 57 2 242 1 37 2 216 2 38 1 171 2 192 1 380 1 218 4 245 1 320 1 195 3 84 1 247 1 149 2 131 1 87 1 
272 1 358 1 359 1 2 1 156 1 3 2 116 1 117 1 31 1 335 1 255 1 283 1 312 1 374 1 57 1 189 1 377 1 16 1 171 1 145 1 107 1 108 1 192 1 172 1 218 2 84 1 149 3 131 1 88 1 
110 1 272 1 181 1 359 1 227 1 2 2 156 1 184 1 3 3 275 1 116 2 29 1 139 1 374 1 57 1 190 1 189 1 312 1 377 1 171 1 16 2 108 1 218 2 129 1 149 5 88 1 
46 1 272 2 358 2 359 2 2 2 3 6 156 1 116 8 363 1 31 1 278 1 185 1 335 2 208 1 139 1 103 1 374 2 57 2 312 11 189 2 377 4 60 3 265 3 16 1 171 2 107 1 108 1 348 1 245 1 218 4 149 14 221 1 88 11 
295 1 46 1 225 1 23 1 272 1 180 1 359 1 156 1 3 1 116 1 203 1 117 1 98 1 254 1 137 1 255 1 186 1 337 1 210 1 139 1 341 1 310 1 374 1 57 1 377 1 379 1 216 1 171 1 107 1 192 2 380 1 218 2 245 1 195 1 84 2 149 2 131 1 21 1 
46 1 225 2 272 3 180 2 274 1 182 2 227 1 2 5 184 1 3 11 275 1 98 1 335 2 186 2 139 1 103 1 341 1 188 1 190 1 57 3 189 4 16 4 107 1 108 4 192 3 193 2 245 1 195 2 148 1 149 22 354 2 357 1 295 1 23 2 358 2 359 3 156 3 116 11 203 1 117 1 31 2 254 2 255 1 211 2 166 1 310 1 374 3 312 6 82 2 377 6 216 2 379 2 171 3 218 6 380 1 129 1 84 3 131 1 88 6 
272 1 312 1 181 1 57 1 374 1 358 1 189 1 359 1 2 1 377 1 156 1 116 2 171 1 218 2 234 1 149 2 88 1 103 1 
272 1 312 1 181 1 57 1 374 1 359 1 2 1 377 1 156 1 3 2 16 1 171 1 108 1 218 2 31 1 149 2 88 1 11 1 
272 1 358 1 181 1 359 1 2 2 156 1 3 2 116 2 31 1 335 1 103 1 189 1 374 1 57 1 312 2 377 2 171 1 16 1 108 1 218 2 149 4 88 2 
272 1 312 1 57 1 374 1 358 1 189 1 359 1 2 1 377 1 38 1 156 1 116 2 171 1 218 2 234 1 149 2 88 1 103 1 
272 1 312 1 57 1 374 1 359 1 2 1 377 1 38 1 156 1 3 2 16 1 171 1 108 1 218 2 31 1 149 2 88 1 11 1 
272 1 358 1 359 1 2 2 156 1 3 2 116 2 31 1 335 1 103 1 189 1 374 1 57 1 312 2 377 2 38 1 171 1 16 1 108 1 218 2 149 4 88 2 
272 1 358 1 359 1 2 2 156 1 3 2 116 2 31 1 335 1 103 1 189 1 374 1 57 1 312 2 377 2 171 1 16 1 108 1 218 2 149 4 88 2 
46 1 225 1 23 1 272 1 180 1 359 1 156 1 3 1 116 1 203 1 98 1 254 1 186 1 139 1 211 1 341 1 310 1 57 1 374 1 379 1 216 1 171 1 192 1 218 2 245 1 195 1 84 1 149 2 
46 1 23 1 272 1 359 1 156 1 3 1 116 1 203 1 96 1 98 1 254 1 186 1 139 1 341 1 310 1 57 1 374 1 168 1 379 1 216 1 171 1 126 1 192 1 218 2 245 1 195 1 84 1 149 2 
272 1 358 1 359 1 2 2 156 1 3 2 116 2 31 1 335 1 103 1 189 1 374 1 57 1 312 2 377 2 171 1 16 1 107 1 108 1 218 2 149 4 88 2 
225 1 23 1 272 1 358 1 180 1 359 1 2 2 3 2 156 1 116 2 203 1 31 1 98 1 254 1 335 1 186 1 211 1 103 1 341 1 312 2 189 1 57 1 374 1 242 1 377 2 379 1 216 1 16 1 171 1 108 1 193 1 192 1 218 2 195 1 84 1 149 4 88 2 
272 1 358 1 359 1 2 1 155 1 3 1 156 1 116 2 117 1 31 1 335 1 255 1 103 1 283 1 374 1 57 1 189 1 312 1 377 1 171 1 145 1 108 1 107 1 192 1 218 2 84 1 149 3 131 1 88 1 
153 1 272 2 358 3 359 2 226 1 2 6 3 10 116 9 229 1 368 1 232 1 31 3 185 1 335 3 103 3 214 1 342 2 374 2 189 3 169 2 15 1 60 2 265 1 16 3 171 2 108 3 218 4 149 19 221 1 327 1 
272 3 358 3 359 3 2 4 226 2 3 12 116 14 229 1 205 2 232 1 31 2 185 2 33 1 335 3 163 1 103 2 214 2 342 1 374 3 189 3 169 4 13 1 15 1 60 2 265 2 16 2 171 3 108 2 218 6 381 1 350 1 149 26 382 1 327 1 
272 3 2 9 226 2 227 1 3 21 184 1 275 1 229 1 232 1 185 3 100 1 335 4 103 4 342 1 189 5 190 1 15 1 13 1 60 4 16 5 108 5 350 1 149 40 110 1 358 4 359 3 116 19 205 1 368 1 31 4 33 1 163 1 214 1 374 3 169 4 265 3 171 3 218 6 381 1 129 1 221 1 382 1 327 1 
110 1 272 4 358 4 359 4 227 1 226 2 2 8 184 1 3 19 275 1 116 19 229 1 205 2 368 1 232 1 31 3 33 1 185 3 100 1 335 4 163 1 103 3 214 1 342 1 190 1 374 4 189 5 169 4 13 1 15 1 60 4 265 3 16 5 171 4 108 4 218 8 381 1 129 1 350 1 149 38 382 1 221 1 327 1 
110 1 272 2 358 7 359 2 227 1 226 1 2 15 184 1 3 26 275 1 116 26 229 1 205 1 232 1 31 7 33 1 185 2 335 7 163 1 103 7 214 1 342 1 190 1 374 2 189 8 169 4 13 1 15 1 60 4 265 4 16 8 171 2 108 8 348 2 218 4 381 1 129 1 350 1 149 52 382 1 221 2 327 1 
0 1 152 1 140 1 309 1 90 1 66 1 102 1 176 1 133 1 301 1 
196 1 175 1 
0 1 152 1 309 1 90 1 78 1 66 1 157 1 301 1 231 1 
152 1 0 1 90 1 309 1 66 1 115 1 360 1 228 1 124 1 133 1 301 1 63 1 53 1 174 1 102 1 176 1 356 1 65 2 
152 1 0 1 90 1 309 1 66 1 115 1 360 1 228 1 124 1 133 1 301 1 63 1 53 1 174 1 102 1 176 1 356 1 65 2 
152 1 0 1 90 1 309 1 66 1 115 1 360 1 228 1 124 1 133 1 301 1 63 1 53 1 174 1 102 1 176 1 356 1 65 2 
6 1 68 1 89 1 
6 1 68 1 89 1 
111 1 321 1 
111 1 68 1 321 1 
20 1 248 1 
0 1 152 1 250 1 90 1 66 1 115 1 117 2 301 1 30 1 255 2 139 1 77 1 309 1 315 1 124 1 192 2 63 1 219 1 196 1 84 2 174 1 175 1 20 1 131 2 109 1 248 1 65 1 
6 1 89 1 
111 1 68 1 321 1 
46 1 23 1 272 1 359 1 156 1 3 1 116 1 203 2 98 2 254 1 165 1 341 2 311 1 374 1 57 1 37 2 375 1 216 1 171 1 107 1 192 2 62 1 19 1 218 2 245 1 195 1 320 1 84 2 149 2 131 2 326 1 
23 1 310 1 47 1 91 1 216 1 203 1 98 1 195 1 54 1 254 1 258 1 12 1 294 1 341 1 
264 2 216 1 378 1 123 1 72 1 170 1 203 1 52 1 369 1 98 1 73 1 254 1 12 1 294 1 259 1 223 1 340 1 341 1 
242 1 264 2 216 1 378 1 123 1 72 1 170 1 203 2 52 1 369 1 98 2 73 1 254 1 12 1 294 1 259 1 223 1 340 1 341 2 
264 2 216 1 123 1 72 1 170 1 203 1 52 1 369 1 98 1 73 1 254 1 7 1 294 1 259 1 223 1 340 1 341 1 
132 1 
213 1 1 1 297 1 328 1 228 1 17 1 289 1 74 1 303 1 150 1 
213 5 282 1 358 2 189 2 182 1 251 5 228 5 266 2 51 5 108 2 31 2 42 5 289 5 335 2 256 10 
63 1 328 1 27 1 228 1 124 1 50 1 
23 1 47 1 297 2 27 4 50 2 203 4 98 4 74 2 254 1 303 1 56 1 138 1 258 1 339 1 341 4 213 2 310 2 262 1 121 1 346 2 216 1 191 2 124 3 125 1 63 3 195 1 289 2 325 2 150 2 
213 1 1 1 289 1 328 1 228 1 17 1 29 1 
297 1 328 1 27 1 71 1 228 2 51 1 50 1 134 1 74 1 303 1 256 1 206 1 213 1 124 1 63 1 289 1 150 1 
177 2 1 1 328 2 182 2 228 8 50 3 51 6 330 2 94 2 98 3 55 2 335 2 186 3 341 3 282 2 239 1 142 2 189 2 346 1 242 1 243 2 285 1 191 1 17 1 146 3 108 2 147 1 63 5 195 10 289 8 353 2 150 4 23 3 358 2 297 4 27 5 251 6 203 3 31 2 75 2 74 4 254 3 303 4 256 12 207 2 213 9 310 1 216 4 266 2 124 5 125 1 42 6 220 1 325 2 
358 2 297 2 328 2 27 1 251 5 228 5 50 1 51 3 31 2 185 1 33 1 74 2 303 2 335 2 256 6 213 8 282 1 189 2 13 1 191 1 60 1 265 1 124 1 266 2 108 2 381 1 63 1 350 1 42 5 289 5 291 1 382 1 325 1 222 1 150 2 
273 1 274 1 297 1 227 1 184 1 26 1 364 1 117 1 74 1 303 1 237 1 255 1 281 1 188 1 213 2 282 1 190 1 189 2 266 2 124 1 145 1 108 1 192 1 63 1 84 1 289 2 131 1 150 1 
225 1 272 1 23 1 180 1 359 1 3 1 156 1 203 1 117 2 98 1 237 1 254 1 255 2 186 1 139 1 211 1 341 1 310 1 57 1 374 1 216 1 379 1 171 1 145 2 192 3 245 1 218 2 195 1 84 3 290 1 149 1 131 2 
110 1 297 1 328 1 251 2 228 3 51 2 74 1 303 1 256 4 213 2 191 1 266 1 42 2 289 1 325 1 150 1 
309 1 313 1 20 1 176 1 301 1 
309 1 41 1 301 1 
309 1 41 1 301 1 
309 1 41 1 301 1 
309 1 276 1 301 1 
309 1 276 1 301 1 
309 1 276 1 301 1 
309 1 301 1 
0 1 66 1 
188 1 272 1 374 1 190 1 189 2 359 1 227 2 2 5 184 2 3 5 116 5 171 1 16 3 108 2 232 1 218 2 149 10 103 2 
272 1 374 1 358 1 189 1 359 1 2 1 116 2 171 1 232 1 218 2 149 2 103 1 
272 1 374 1 358 1 189 1 359 1 2 2 3 2 116 2 16 1 171 1 108 1 232 1 218 2 31 1 335 1 149 4 103 1 
296 1 272 3 374 3 359 3 227 1 2 2 3 2 184 1 116 1 171 3 16 1 205 1 368 1 232 1 218 6 149 3 103 1 
110 1 296 1 272 5 113 1 358 3 359 5 227 3 2 12 184 3 3 18 275 1 361 1 116 15 205 2 368 1 232 1 31 3 185 1 35 1 335 3 103 5 190 2 374 5 189 5 60 4 265 3 171 5 16 7 108 5 244 1 218 10 129 1 149 33 221 1 
110 1 272 1 359 1 227 1 2 2 3 4 184 1 116 3 275 1 232 1 185 1 189 1 374 1 190 1 265 1 60 1 171 1 16 2 108 1 218 2 350 1 129 1 149 7 
110 1 272 2 358 1 359 2 227 1 2 3 184 1 3 5 275 1 116 5 232 1 185 1 335 1 103 1 190 1 374 2 189 2 60 2 265 1 16 2 171 2 108 1 218 4 244 1 129 1 350 1 149 10 221 1 
110 1 272 3 358 2 359 3 227 1 2 4 184 1 3 10 275 1 116 8 205 1 232 1 31 2 185 1 33 1 335 2 103 1 190 1 374 3 189 3 13 1 265 1 60 1 171 3 16 3 108 3 244 1 218 6 381 1 129 1 350 1 149 18 382 1 
110 1 272 3 358 2 359 3 227 1 2 5 184 1 3 7 275 1 116 9 205 1 232 1 31 1 185 1 33 1 335 2 103 2 190 1 374 3 189 3 13 1 265 1 60 1 171 3 16 3 108 2 244 1 218 6 381 1 129 1 350 1 149 16 382 1 
110 1 272 1 359 1 227 1 2 2 3 4 184 1 116 3 275 1 232 1 185 1 189 1 374 1 190 1 265 1 60 1 171 1 16 2 108 1 218 2 350 1 129 1 149 7 
272 1 358 2 359 1 2 2 3 6 116 6 232 1 31 2 185 1 33 1 335 2 103 1 374 1 189 2 13 1 265 1 60 1 171 1 16 1 108 2 218 2 381 1 350 1 149 12 382 1 
110 1 272 4 358 2 359 4 227 1 2 5 184 1 3 8 275 1 116 9 205 2 232 1 31 1 185 1 33 1 335 2 103 2 190 1 374 4 189 3 13 1 60 1 265 1 171 4 16 3 108 2 244 1 218 8 381 1 129 1 350 1 149 17 382 1 
272 4 358 3 359 4 2 6 3 7 116 9 205 2 232 1 368 1 31 2 185 1 33 1 335 3 103 3 374 4 189 3 13 1 60 1 265 1 171 4 16 3 108 2 218 8 381 1 350 1 149 16 382 1 
190 1 189 1 227 3 2 6 3 4 184 3 275 2 116 3 16 3 108 1 129 1 149 7 103 3 
110 1 272 4 358 2 359 4 227 1 2 4 184 1 3 8 275 1 116 9 205 2 232 1 368 1 31 1 185 1 33 1 335 2 103 1 190 1 374 4 189 3 13 1 60 1 265 1 171 4 16 3 108 2 218 8 381 1 129 1 350 1 149 17 382 1 
110 1 272 2 189 1 190 1 374 2 359 2 2 3 227 1 3 4 184 1 116 3 275 1 16 2 171 2 108 1 205 1 218 4 129 1 149 7 103 1 
110 1 190 1 189 1 227 1 2 2 3 3 184 1 275 1 116 2 16 2 29 1 108 1 129 1 149 5 
272 1 374 1 358 1 189 1 359 1 2 2 3 2 116 2 16 1 171 1 108 1 244 1 218 2 31 1 335 1 149 4 103 1 
358 1 189 1 2 2 3 4 116 3 60 2 265 1 16 1 108 1 31 1 185 1 149 7 335 1 221 1 103 1 
110 1 296 1 272 2 358 2 359 2 227 2 2 9 184 2 3 12 275 1 116 10 205 2 31 2 278 1 335 2 103 4 190 1 189 3 374 2 265 2 60 2 16 5 171 2 108 3 348 1 218 4 129 1 149 22 221 1 
149 1 3 1 60 1 
149 1 116 1 265 1 
272 1 374 1 358 1 189 1 359 1 182 1 2 3 3 3 116 3 171 1 16 2 108 1 218 2 244 1 31 1 149 6 335 1 103 1 
272 1 358 2 359 1 2 2 3 6 116 6 232 1 31 2 185 1 33 1 335 2 103 1 374 1 189 2 13 1 265 1 60 1 171 1 16 1 108 2 218 2 381 1 350 1 149 12 382 1 
190 1 189 1 227 1 2 2 3 3 184 1 116 3 16 1 108 1 149 6 103 1 
296 1 272 1 374 1 359 1 2 2 227 1 184 1 3 2 116 1 275 1 16 1 171 1 205 1 218 2 129 1 149 3 103 1 
307 1 84 1 345 1 131 1 118 1 139 1 192 1 
307 1 167 1 36 1 345 1 376 1 192 1 84 1 130 1 118 1 131 1 139 1 260 1 
23 1 310 1 47 1 242 1 122 1 216 1 203 4 98 4 195 1 254 1 258 1 373 1 341 4 
112 1 23 1 346 1 92 1 216 2 203 2 98 2 317 1 195 1 254 1 199 1 186 1 292 1 341 2 
52 1 98 1 310 1 254 1 264 1 216 1 123 1 170 1 203 1 341 1 
23 1 242 1 216 1 203 2 369 1 98 2 320 1 195 1 254 1 326 1 341 2 
23 2 47 1 310 1 346 1 242 1 298 1 216 2 203 5 98 4 320 1 195 3 254 2 87 1 258 1 373 1 341 5 
23 2 47 1 310 1 346 1 242 1 298 1 216 2 105 1 203 5 98 4 320 1 195 3 254 2 258 1 373 1 341 5 
23 1 98 1 195 1 47 1 310 1 254 1 216 1 258 1 203 1 29 1 341 1 
23 1 310 1 180 1 379 1 216 1 117 1 203 1 192 2 380 1 98 1 195 1 84 2 254 1 255 1 186 1 131 1 139 1 341 1 
177 1 23 2 180 1 274 1 203 1 117 1 94 1 98 1 254 1 255 2 186 2 139 1 341 1 346 1 216 1 379 1 192 2 380 1 195 3 84 2 131 2 322 1 151 1 
177 1 23 2 274 1 203 2 117 1 94 1 96 1 98 2 254 1 255 2 186 2 139 1 341 2 346 1 122 1 216 1 379 1 192 2 380 1 195 3 84 2 131 2 322 1 151 1 
177 1 23 1 328 1 27 1 228 1 330 1 203 3 94 1 98 3 254 1 186 1 338 1 341 3 310 1 346 1 122 1 243 1 216 1 124 2 146 1 63 2 195 4 324 1 
177 1 23 1 310 1 346 1 122 1 328 1 243 1 216 1 27 1 228 1 124 2 94 1 203 3 330 1 146 1 63 2 98 3 195 4 55 1 254 1 186 1 341 3 
98 1 254 1 247 1 216 1 203 1 341 1 
23 2 310 2 37 1 298 1 242 1 92 1 216 3 203 7 158 1 369 1 98 6 320 1 195 3 247 1 220 1 254 2 186 1 87 1 292 1 249 1 341 7 
225 1 272 2 180 1 227 1 2 2 184 1 3 3 275 1 98 1 186 1 139 1 341 1 57 2 190 1 189 1 242 1 16 2 107 1 108 1 193 1 192 2 195 1 149 5 354 1 110 1 23 1 359 2 156 2 116 2 203 1 117 1 254 1 255 1 211 1 374 2 312 1 377 1 375 1 216 1 379 1 171 2 218 4 380 1 129 1 84 2 131 1 88 1 
1 1 297 2 328 1 27 2 228 1 50 1 203 1 330 1 98 1 74 2 75 1 303 2 55 1 207 1 341 1 213 1 310 1 243 1 124 3 125 1 17 1 146 1 63 3 219 1 195 2 289 1 353 1 150 2 
239 1 23 1 242 1 216 2 330 1 203 2 98 2 195 2 247 1 220 1 254 1 186 1 341 2 
23 1 310 1 379 1 216 1 117 1 203 1 192 2 380 1 96 1 98 1 195 1 84 2 254 1 255 1 186 1 131 1 139 1 341 1 
23 1 346 1 92 1 216 2 203 1 98 1 195 1 220 1 254 1 186 1 292 1 249 1 341 1 
201 1 14 1 192 1 62 1 19 1 84 1 131 1 164 1 165 1 
32 1 366 1 164 1 
201 1 14 1 139 1 10 1 164 1 
201 2 154 1 274 1 328 1 243 1 287 1 14 2 228 1 124 2 366 1 106 1 63 2 219 1 32 1 322 1 139 1 164 1 10 2 151 1 
25 1 332 1 80 1 183 1 160 1 336 1 286 1 269 1 
79 1 25 4 80 4 215 2 183 1 93 1 4 1 286 3 371 1 351 1 332 2 160 1 336 2 304 1 
241 1 246 1 25 2 332 1 80 2 215 1 183 1 160 1 336 1 286 1 269 1 270 1 
280 1 79 2 25 3 80 3 183 1 4 1 286 1 351 2 332 1 160 1 336 1 269 1 
252 1 284 2 286 2 355 1 
25 1 80 1 183 1 160 1 9 1 269 1 
318 1 25 2 332 1 80 2 215 1 183 1 160 1 336 1 286 1 269 1 
344 1 
25 1 332 1 80 1 183 1 160 1 336 1 286 1 269 1 
332 1 336 1 286 1 29 1 
25 1 332 1 80 1 183 1 160 1 336 1 286 1 
80 1 279 1 352 1 
79 2 25 3 80 3 183 1 4 1 286 1 204 1 351 1 332 1 160 1 336 1 269 1 
25 2 332 1 80 2 215 1 183 1 160 1 336 1 161 1 286 1 
52 1 25 1 80 1 183 1 160 1 93 1 264 1 286 1 72 1 347 1 269 1 
25 1 80 1 183 1 160 1 336 1 286 1 269 1 
25 1 332 1 80 1 183 1 160 1 336 2 269 1 
308 1 25 2 80 2 159 1 183 2 160 2 334 1 336 1 286 1 269 1 
25 3 80 3 183 1 215 2 93 1 286 2 319 1 318 1 371 1 332 1 160 1 336 1 269 1 
25 2 80 2 183 1 215 1 264 2 286 1 123 1 72 1 52 1 332 1 160 1 336 1 162 1 269 1 223 1 
25 4 80 4 183 2 215 2 93 1 286 2 144 1 371 1 332 1 160 2 336 1 161 1 269 1 
79 1 25 3 80 3 215 1 183 1 286 1 318 1 332 1 160 1 336 1 269 1 
371 1 93 1 286 1 304 1 
336 1 286 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 177 122 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 177 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 177 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 177 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 177 320 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (156,245) 316 246 (5,243) 247 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 123 (156,245) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (156,245) 316 246 (5,243) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 1 94 1 334 1 211 1 294 1 120 1 
63 1 94 1 334 1 211 1 294 1 120 1 
63 1 94 1 334 1 211 1 294 1 120 1 
63 1 94 1 334 1 211 1 294 1 120 1 
331 3 94 4 244 1 270 1 152 2 334 1 211 1 300 1 129 1 114 1 47 1 197 3 145 1 294 1 189 1 102 2 69 1 120 4 
226 1 331 1 94 2 270 1 334 1 211 1 272 1 2 1 323 1 114 1 47 1 236 1 146 1 294 1 69 1 120 2 
331 2 94 3 270 1 152 1 334 2 211 2 300 1 183 1 2 1 197 1 294 1 69 1 120 3 
331 5 94 9 228 1 334 2 211 2 2 1 29 1 114 1 197 7 145 1 294 1 317 1 102 2 120 9 244 1 270 1 152 4 200 1 300 3 183 1 129 1 47 1 189 1 69 1 
331 5 94 9 228 1 334 2 211 2 2 1 29 1 114 1 197 7 145 1 294 1 317 1 102 2 120 9 244 1 270 1 152 4 200 1 300 3 183 1 129 1 47 1 189 1 69 1 
374 1 42 1 27 1 
42 1 110 2 101 1 
71 2 348 2 58 1 87 2 66 1 111 2 32 2 171 2 
137 1 71 3 23 1 210 1 73 1 111 2 0 1 232 1 97 2 171 2 56 1 234 2 263 1 363 1 364 2 58 1 292 1 217 1 32 2 178 1 348 3 153 1 87 2 202 1 372 2 273 1 373 1 156 1 64 1 158 1 132 1 161 1 92 1 66 1 281 1 208 2 190 1 
346 1 71 1 298 1 348 1 58 1 87 1 111 1 352 1 32 1 171 1 
71 1 298 1 348 1 111 1 322 1 42 1 27 1 45 1 3 1 77 1 117 1 223 1 67 1 6 1 
71 1 298 1 348 1 87 1 111 1 171 1 42 1 27 1 45 1 3 1 77 1 117 2 67 1 6 2 32 1 
49 1 117 1 154 1 351 1 6 1 
42 1 27 1 50 1 91 1 117 2 154 1 351 1 6 2 
117 1 154 1 6 1 
346 1 267 1 71 1 298 1 348 1 87 1 351 1 111 1 352 1 171 1 58 1 117 1 6 1 32 1 
42 1 
42 1 27 1 50 1 117 2 144 1 154 1 351 1 6 2 
82 2 50 1 170 1 371 1 351 2 154 2 38 1 42 1 27 1 128 2 4 1 324 1 117 5 290 1 186 2 341 1 6 5 209 1 282 1 
374 1 66 1 
71 2 348 2 87 1 111 2 287 1 171 1 222 1 66 2 32 1 
96 1 237 1 253 1 
71 1 348 1 151 1 73 1 372 1 232 1 0 1 156 1 56 1 364 1 132 1 66 1 292 1 281 1 208 1 190 1 
164 1 71 2 348 2 73 1 87 1 111 1 372 1 0 1 232 1 56 1 156 1 364 1 132 1 237 1 292 1 281 1 343 1 208 1 190 1 32 1 
164 2 71 5 348 5 87 4 111 5 322 1 171 1 205 1 222 1 133 1 66 1 343 1 31 1 32 4 
346 1 71 2 298 1 348 2 87 2 68 1 111 2 32 2 
164 1 71 3 348 3 87 3 66 1 111 3 171 1 32 3 
346 1 71 1 298 1 348 1 87 1 111 1 32 1 
71 1 298 1 222 1 348 1 87 1 111 1 287 1 32 1 171 1 
164 1 137 1 71 4 23 1 210 1 73 1 111 3 0 1 139 1 232 1 97 1 171 2 56 1 234 2 263 1 363 1 3 1 364 1 77 1 58 1 117 1 216 1 292 1 6 1 343 1 32 3 178 1 298 1 348 4 87 3 202 1 372 1 273 1 373 1 156 1 222 1 45 1 132 1 92 1 66 1 67 1 281 1 190 1 208 1 
164 1 71 2 348 2 87 1 66 1 111 2 322 1 31 1 32 1 
164 2 71 3 298 1 348 3 87 3 111 3 171 1 42 1 222 1 45 1 3 1 77 1 117 1 216 1 67 1 6 1 343 1 119 1 32 3 
164 1 71 2 348 2 87 2 111 2 171 1 222 1 237 1 253 1 32 2 
71 1 348 1 73 1 372 1 232 1 0 1 156 1 56 1 364 1 132 1 66 1 292 1 281 1 208 1 190 1 
71 1 348 1 73 1 138 1 372 1 232 1 0 1 56 1 364 1 132 1 66 1 307 1 292 1 281 1 208 1 
329 1 137 1 23 1 96 2 52 1 97 4 234 2 263 1 75 1 235 1 237 2 176 1 148 1 345 1 369 1 33 1 178 2 202 1 273 1 373 1 274 1 184 1 64 2 253 2 
71 1 298 1 3 1 348 1 87 1 68 1 111 1 32 1 
175 1 118 1 
175 1 118 1 
21 1 65 1 
21 1 65 1 
21 1 65 1 
175 1 106 1 118 1 
175 1 106 1 118 1 
233 1 175 1 118 1 
219 1 21 1 175 2 11 1 65 1 118 2 
175 1 106 1 118 1 
275 1 175 1 118 1 
275 1 175 1 118 1 
275 1 175 1 118 1 
71 2 22 1 348 2 370 1 256 1 181 1 87 2 111 2 231 1 1 1 258 1 233 1 314 1 175 1 196 1 28 1 117 1 66 1 6 1 367 1 118 1 147 1 135 1 32 2 
219 1 256 2 181 2 12 1 25 1 155 1 42 1 314 1 302 1 175 2 196 3 215 2 117 2 326 1 251 1 367 2 118 2 6 2 147 2 
114 1 47 1 145 1 
114 1 47 1 146 1 
141 1 114 3 81 1 145 2 146 1 55 1 
141 1 114 2 145 1 146 1 126 1 55 1 
141 1 114 2 145 1 146 1 55 2 
329 1 70 1 50 1 22 1 109 1 333 1 229 1 170 2 110 3 194 2 258 1 27 1 4 1 117 5 101 1 6 5 368 1 345 1 369 1 61 2 82 1 180 1 370 1 182 2 154 1 351 4 274 1 42 2 128 1 186 1 134 1 209 3 
166 1 329 3 70 3 308 1 49 5 22 4 50 1 333 1 170 6 359 1 110 9 194 6 27 1 4 1 117 9 101 3 6 9 218 1 345 3 369 3 61 6 82 2 83 1 180 2 371 1 154 6 351 7 274 3 42 5 249 1 128 2 186 2 134 2 358 5 209 8 
70 1 329 1 22 1 229 1 170 2 110 4 194 2 27 1 117 3 101 2 6 3 368 1 345 1 369 1 61 2 82 1 180 1 371 1 182 1 351 2 274 1 42 3 128 1 186 1 134 1 209 3 
166 1 70 2 329 2 22 2 229 1 170 4 110 7 194 4 27 1 117 4 101 3 6 4 218 1 368 1 345 2 369 2 61 4 82 1 180 1 371 1 182 2 351 3 274 2 42 4 249 1 128 1 186 1 134 1 209 5 
374 1 157 1 132 1 
169 1 132 1 
163 1 
132 1 73 1 0 1 
199 1 132 1 
132 1 0 1 
297 1 157 2 132 3 73 1 0 1 239 1 
369 1 178 3 329 1 84 1 361 1 97 7 98 1 90 1 64 4 75 3 15 1 46 1 160 1 235 2 59 1 305 2 18 1 
369 1 178 3 329 1 84 1 361 1 97 7 98 1 90 1 64 4 75 3 15 1 46 1 160 1 235 2 59 1 305 2 18 1 
369 1 178 3 329 1 84 1 321 1 361 1 97 7 98 1 90 1 64 4 75 3 15 1 46 1 160 1 235 2 59 1 305 2 18 1 
70 3 329 4 330 1 137 1 23 1 284 1 361 1 97 31 313 1 98 2 234 2 75 10 76 1 235 5 59 5 342 1 7 3 345 3 121 4 369 4 178 15 269 1 84 1 202 1 273 1 90 2 274 3 64 16 15 1 46 1 160 2 305 3 187 1 18 2 
329 1 330 1 137 2 23 2 97 9 98 1 234 4 75 4 235 3 59 1 369 1 178 4 319 1 84 1 202 2 125 1 273 2 90 1 64 5 15 1 46 1 160 1 305 2 18 1 
331 1 255 1 94 2 24 1 334 1 211 1 336 1 2 1 337 1 364 1 114 2 197 1 292 1 81 1 145 1 146 1 294 1 120 2 34 1 10 1 270 1 372 1 204 1 303 1 47 1 250 1 375 1 281 1 208 1 69 1 
331 1 255 1 94 3 334 1 211 1 336 1 2 1 337 1 364 1 114 2 197 2 30 1 81 1 292 1 145 1 146 1 120 3 10 1 270 1 372 1 204 1 303 1 47 1 250 1 224 1 375 1 281 1 208 1 207 1 69 1 
331 1 94 2 2 1 336 1 337 1 364 1 114 2 197 2 30 1 292 1 81 1 145 1 146 1 120 2 10 1 270 1 372 1 204 1 47 1 250 1 375 1 281 1 208 1 207 1 69 1 
332 1 227 1 94 1 334 1 193 1 211 1 372 1 0 1 232 1 2 2 336 2 337 2 354 1 364 1 132 1 250 2 264 1 224 1 292 1 281 1 208 1 120 1 191 1 
255 1 34 1 10 1 94 1 334 1 211 1 372 1 204 1 2 1 336 1 337 1 303 1 114 2 364 1 47 1 30 1 250 1 375 1 81 1 292 1 145 1 146 1 281 1 294 1 208 1 120 1 
108 1 
332 1 50 3 95 1 283 4 285 2 0 1 232 2 4 1 3 1 292 1 101 2 6 5 8 2 298 1 348 1 154 6 248 2 354 1 159 2 304 1 355 1 67 1 208 2 254 1 209 2 165 2 167 1 71 1 170 2 110 2 311 2 111 1 173 1 27 1 364 2 77 1 117 5 82 1 180 1 372 2 322 1 40 1 42 2 185 1 128 1 45 1 44 1 132 1 186 1 223 1 279 1 376 1 93 2 225 1 281 1 
167 1 71 1 50 1 298 1 348 1 283 2 154 2 111 1 322 1 45 1 3 1 77 1 117 3 355 1 223 1 144 1 279 1 67 1 376 1 93 1 6 3 225 1 
167 1 71 1 50 1 283 3 111 1 27 1 3 1 77 1 117 3 144 1 6 3 8 1 298 1 348 1 154 1 322 1 42 1 45 1 223 1 355 1 67 1 279 1 376 1 225 1 
167 1 71 1 50 1 283 3 111 1 27 1 3 1 77 1 117 3 144 1 6 3 8 1 298 1 348 1 154 2 322 1 42 1 45 1 159 1 223 1 355 1 67 1 279 1 376 1 93 1 225 1 
165 2 167 1 71 1 50 3 170 1 283 6 311 2 111 1 285 2 27 5 4 1 3 1 77 1 117 5 144 1 101 2 6 5 8 4 82 1 149 1 298 1 348 1 124 1 271 1 201 1 154 7 88 1 248 2 40 1 322 1 42 5 128 1 45 1 159 4 186 1 223 1 355 1 279 1 67 1 376 1 93 4 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 110 2 283 4 311 2 111 1 285 2 27 1 4 1 3 1 77 1 117 4 101 2 6 4 8 2 82 1 298 1 348 1 154 4 248 2 322 1 40 1 42 2 128 1 45 1 159 2 304 1 223 1 186 1 355 1 279 1 67 1 376 1 93 2 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 283 4 311 2 111 1 285 2 27 1 3 1 4 1 77 1 117 4 101 2 6 4 8 2 82 1 149 1 298 1 348 1 124 1 271 1 154 4 248 2 40 1 322 1 42 1 45 1 128 1 159 2 223 1 355 1 186 1 67 1 279 1 376 1 93 2 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 283 4 311 2 111 1 285 2 27 1 3 1 4 1 77 1 117 4 101 2 6 4 8 2 82 1 149 1 298 1 348 1 124 1 271 1 154 4 248 2 40 1 322 1 42 1 45 1 128 1 159 2 223 1 355 1 186 1 67 1 279 1 376 1 93 2 225 1 254 1 209 1 
165 2 167 1 192 1 71 1 50 2 170 1 110 2 283 4 111 1 285 2 27 1 3 1 4 1 77 1 117 4 80 1 366 2 6 4 8 2 82 1 298 1 348 1 36 2 124 1 154 4 322 1 42 1 45 1 128 1 159 2 223 1 355 1 186 1 67 1 279 1 306 1 376 1 93 2 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 283 5 311 2 111 1 285 2 27 1 4 1 3 1 77 1 117 4 101 2 6 4 8 3 82 1 149 1 298 1 348 1 124 1 271 1 154 5 88 1 248 2 40 1 322 1 42 1 128 1 45 1 159 3 186 1 223 1 355 1 67 1 279 1 376 1 93 3 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 283 5 311 2 111 1 285 2 27 1 4 1 3 1 77 1 117 4 101 2 6 4 8 3 82 1 149 1 298 1 348 1 124 1 271 1 154 5 88 1 248 2 40 1 322 1 42 1 128 1 45 1 159 3 186 1 223 1 355 1 67 1 279 1 376 1 93 3 225 1 254 1 209 1 
165 2 167 1 71 1 50 2 170 1 110 2 283 4 111 1 285 2 27 1 4 1 3 1 77 1 117 4 366 2 6 4 8 2 82 1 298 1 348 1 36 2 154 4 322 1 42 1 128 1 45 1 159 2 304 1 223 1 186 1 355 1 279 1 67 1 376 1 306 1 93 2 225 1 254 1 209 1 
369 1 178 3 329 1 137 1 84 1 96 1 23 1 202 1 97 6 273 1 373 1 98 1 374 1 64 3 263 1 234 2 75 2 15 1 46 1 160 1 235 2 237 1 305 1 66 2 176 1 253 1 
70 2 329 2 137 2 23 2 96 11 310 1 195 1 97 14 234 4 263 1 75 2 78 1 235 1 237 11 59 1 217 1 342 1 7 3 345 1 121 3 369 1 178 6 150 1 269 1 202 2 62 1 273 2 373 2 274 2 64 8 92 1 66 1 253 4 
164 1 137 1 71 2 23 1 73 1 310 1 111 1 0 1 232 1 97 2 56 1 263 1 234 2 364 1 292 1 217 1 343 1 32 1 178 1 268 1 151 1 347 1 348 2 87 1 202 1 372 1 273 1 373 1 156 1 64 1 105 1 132 1 92 1 66 1 281 1 190 1 208 1 253 1 
136 2 329 3 137 3 96 7 232 1 0 2 97 20 98 1 56 2 234 6 143 2 235 4 237 7 59 4 292 2 343 1 345 2 348 3 243 2 202 3 156 2 64 10 15 1 160 1 17 1 305 1 66 2 208 3 253 7 164 1 70 2 71 3 309 1 23 3 73 2 310 1 111 1 263 3 363 2 75 8 364 3 30 1 217 1 32 1 369 3 178 10 84 1 85 1 87 1 372 3 273 3 373 3 274 2 46 1 130 2 132 2 92 1 281 2 190 2 
164 1 71 1 137 2 332 1 23 2 24 1 257 1 111 1 232 2 0 2 140 1 97 2 234 4 263 2 364 8 30 1 292 2 176 1 217 1 344 1 32 1 178 1 179 1 348 1 87 1 202 2 372 7 273 2 373 2 64 1 354 1 278 1 132 3 161 2 92 1 328 1 252 1 281 2 208 8 
70 1 329 1 137 1 71 1 168 1 96 1 23 1 310 1 111 1 97 3 171 1 234 2 263 1 75 1 235 1 237 1 32 1 345 1 369 1 178 2 348 1 87 1 202 1 273 1 373 1 274 1 222 1 64 1 253 1 
33 1 329 1 137 1 96 1 23 1 202 1 97 2 273 1 373 1 274 1 263 1 234 2 64 2 75 1 237 1 59 1 176 1 253 1 
369 1 178 2 137 1 96 1 23 1 202 1 97 2 273 1 373 1 184 1 263 1 234 2 75 1 235 1 237 1 176 1 253 1 345 1 
329 1 70 1 137 1 23 1 96 2 97 4 234 2 263 1 75 2 235 1 237 2 59 1 176 1 345 1 369 1 178 2 202 1 273 1 373 1 274 1 64 2 253 2 
33 1 329 1 137 1 96 1 23 1 202 1 97 2 273 1 373 1 274 1 263 1 234 2 64 2 75 1 278 1 237 1 59 1 253 1 
369 1 178 2 137 1 96 1 23 1 202 1 97 2 273 1 373 1 184 1 263 1 234 2 75 1 278 1 235 1 237 1 253 1 345 1 
329 1 70 1 137 1 23 1 96 2 97 4 234 2 263 1 75 2 235 1 237 2 59 1 345 1 369 1 178 2 202 1 273 1 373 1 274 1 64 2 278 1 253 2 
369 1 178 2 70 1 329 1 137 1 96 2 23 1 202 1 273 1 97 4 373 1 274 1 263 1 234 2 64 2 75 2 235 1 237 2 59 1 345 1 253 2 
71 1 137 1 23 1 73 1 0 1 232 1 97 2 56 1 263 1 234 2 363 1 364 1 292 1 217 1 178 1 348 1 202 1 372 1 273 1 373 1 156 1 64 1 132 1 92 1 66 1 281 1 190 1 208 1 
71 1 137 1 23 1 73 1 138 1 0 1 232 1 97 2 56 1 263 1 234 2 364 1 292 1 217 1 178 1 348 1 202 1 372 1 273 1 39 1 373 1 64 1 132 1 92 1 66 1 307 1 281 1 208 1 
329 1 70 1 137 1 23 1 96 2 310 1 97 4 234 2 263 1 75 2 235 1 237 2 59 1 345 1 369 1 178 2 202 1 273 1 373 1 274 1 64 2 253 2 
329 1 70 1 71 1 137 1 96 2 23 1 73 1 24 1 0 1 97 4 56 1 263 1 234 2 75 2 363 1 364 1 235 1 237 2 59 1 292 1 345 1 369 1 178 2 348 1 202 1 372 1 273 1 373 1 274 1 156 1 64 2 130 1 132 1 281 1 190 1 208 1 253 2 
70 1 329 1 137 1 71 1 23 1 96 1 310 1 111 1 97 3 171 1 234 2 263 1 75 1 237 1 59 1 345 1 32 1 369 1 178 1 348 1 87 1 202 1 273 1 373 1 274 1 222 1 64 2 277 1 253 1 
20 1 70 1 329 1 137 2 23 2 97 9 234 4 75 2 235 1 59 1 238 1 177 1 342 1 7 1 345 1 121 2 369 1 178 5 122 1 35 1 269 1 202 2 125 1 273 2 274 1 64 4 16 1 276 1 107 1 
330 2 20 1 70 2 329 2 137 3 23 3 97 20 234 6 100 1 75 2 235 1 59 1 238 1 177 1 342 2 7 2 60 1 345 1 265 1 369 1 121 2 178 9 35 2 320 1 202 3 125 1 273 3 41 1 274 2 64 11 276 2 162 1 107 3 188 1 
20 1 70 1 329 1 137 2 23 2 97 9 234 4 75 2 235 1 59 1 238 1 177 1 342 1 7 1 345 1 121 2 369 1 178 5 35 1 269 1 320 1 202 2 125 1 273 2 274 1 64 4 16 1 276 1 107 1 
20 1 70 1 329 1 137 2 23 2 97 9 234 4 75 2 235 1 59 1 238 1 177 1 342 1 7 1 345 1 121 2 369 1 178 5 35 1 269 1 320 1 202 2 125 1 273 2 274 1 64 4 16 1 276 1 107 1 
330 1 20 1 70 6 329 7 137 2 23 2 97 46 98 1 100 1 234 4 75 12 78 2 235 6 59 6 238 1 177 1 342 2 7 4 60 1 345 6 265 1 121 4 369 7 178 22 35 1 269 2 84 1 320 1 202 2 125 1 273 2 41 1 274 6 64 24 15 1 46 1 276 1 160 1 305 1 162 1 107 3 188 1 
219 1 301 1 175 1 256 1 181 1 12 1 251 1 118 1 367 1 147 1 
233 1 231 1 
261 1 175 1 256 1 181 1 118 1 367 1 89 1 147 1 335 1 
106 1 259 1 
275 1 339 1 11 1 
219 1 256 1 181 1 12 1 25 1 155 1 42 1 314 1 175 1 196 2 215 1 117 1 326 1 251 1 6 1 367 1 118 1 147 1 
219 1 256 1 181 1 12 1 25 1 155 1 42 1 314 1 175 1 196 2 215 1 117 1 326 1 251 1 6 1 367 1 118 1 147 1 
219 1 256 1 181 1 12 1 25 1 155 1 42 1 314 1 175 1 196 2 215 1 117 1 326 1 251 1 6 1 367 1 118 1 147 1 
106 1 11 1 259 1 
106 1 11 1 259 1 
275 1 339 1 
275 1 339 1 11 1 
28 1 1 1 
71 2 22 1 348 2 370 1 256 1 87 2 181 1 111 2 351 1 231 1 1 1 258 1 312 1 233 1 196 1 175 1 28 1 215 1 117 1 66 1 326 1 367 1 118 1 6 1 147 1 135 1 32 2 
137 1 71 2 23 1 310 1 111 2 0 1 286 1 53 1 97 2 214 1 263 1 99 1 234 2 364 2 292 1 217 1 178 1 348 2 202 1 372 2 273 1 373 1 64 1 132 1 161 2 92 1 328 1 281 1 252 1 206 1 208 2 
51 1 86 1 24 1 372 2 104 1 204 1 336 1 303 1 114 2 364 2 47 1 30 1 375 1 81 1 292 1 145 1 146 1 281 1 208 2 
51 1 372 1 204 1 57 1 336 1 303 1 114 2 364 1 47 1 30 1 375 1 81 1 292 1 145 1 146 1 281 1 208 1 
332 1 227 1 372 1 104 1 0 1 232 1 336 1 142 1 354 1 364 1 132 1 292 1 281 1 208 1 
51 1 86 1 372 1 104 1 204 1 336 1 303 1 114 2 364 1 47 1 30 1 375 1 81 1 292 1 145 1 146 1 281 1 208 1 
13 1 
374 1 42 1 27 1 324 1 170 1 290 1 209 1 
50 1 170 1 110 1 311 1 27 1 4 1 117 1 101 1 6 1 82 1 154 1 40 1 248 1 42 2 128 1 186 1 209 1 
169 2 73 1 232 1 0 1 26 1 4 1 364 1 292 2 5 1 316 1 239 1 82 1 180 1 245 1 246 1 372 1 247 1 128 1 157 1 132 4 186 1 281 1 208 1 209 1 
70 2 329 2 50 1 170 5 110 6 194 5 173 1 262 1 100 1 27 2 4 2 113 1 117 1 365 1 101 3 6 1 342 1 7 1 60 1 345 2 61 5 121 1 369 2 82 2 180 1 154 1 41 1 274 2 43 2 42 5 128 2 186 2 162 1 188 1 209 8 
329 2 71 1 170 2 111 1 171 1 98 1 4 1 58 1 117 1 365 1 291 1 6 1 32 1 346 1 369 1 82 1 149 1 267 1 298 1 348 1 84 1 87 1 352 1 43 2 128 1 160 1 186 1 209 2 
82 1 170 1 42 1 128 1 27 1 4 1 324 1 290 1 186 1 209 1 
61 5 369 2 70 2 329 2 170 5 110 10 194 5 274 2 43 2 42 5 143 1 365 1 101 5 345 2 209 5 
42 1 27 1 50 1 117 1 154 1 6 1 
332 1 50 2 95 1 170 2 112 2 0 1 232 2 173 2 4 1 364 4 340 1 117 3 292 1 6 3 266 1 82 2 180 2 371 1 372 4 154 4 127 1 185 1 128 2 354 1 132 1 186 2 281 1 208 4 209 2 
71 3 137 1 23 1 210 1 73 1 111 2 232 1 0 1 97 1 171 2 56 1 234 2 263 1 363 1 364 1 58 1 292 1 32 2 178 1 348 3 87 2 202 1 372 1 273 1 373 1 156 1 132 1 92 1 66 1 281 1 208 1 190 1 
61 2 82 1 180 1 170 2 110 4 194 2 173 1 42 4 128 1 27 2 4 1 186 1 305 1 101 2 209 1 
296 1 256 1 147 1 
296 1 256 1 147 1 
28 1 256 1 251 1 260 1 147 1 
296 1 256 1 147 1 
9 1 256 1 147 1 
9 1 256 1 147 1 
9 1 256 1 147 1 
256 1 147 1 
175 1 118 1 
369 1 329 1 178 4 330 1 137 2 84 1 23 2 202 2 97 8 273 2 98 1 64 4 234 4 75 3 15 1 46 1 160 1 235 2 305 1 59 1 
369 1 178 3 329 1 84 1 97 6 374 1 98 1 64 3 15 1 75 2 46 1 160 1 235 2 305 1 
369 1 178 2 70 1 329 1 137 1 220 1 23 1 202 1 273 1 97 4 274 1 234 2 64 2 75 2 235 1 59 1 345 1 
369 1 121 2 178 4 70 1 329 1 269 1 97 7 274 1 64 3 75 2 235 1 59 1 342 1 7 1 345 1 
329 3 70 2 330 2 137 2 23 2 195 1 97 23 98 2 172 1 234 4 75 9 78 1 235 5 59 4 7 2 345 2 121 2 369 3 178 12 269 1 84 1 202 2 273 2 274 2 64 11 15 1 46 1 160 2 305 1 
121 1 178 1 97 1 
64 1 97 1 7 1 
369 1 178 3 70 1 329 1 137 1 220 1 23 1 202 1 273 1 97 6 274 1 234 2 64 3 75 3 143 1 235 2 59 1 345 1 
70 2 329 2 137 1 23 1 97 12 234 2 100 1 75 2 235 1 59 1 342 1 7 1 60 1 345 2 121 1 369 2 178 6 202 1 125 1 273 1 41 1 274 2 64 6 162 1 188 1 
369 1 329 1 178 3 84 1 97 6 98 1 64 3 75 2 160 1 235 1 59 1 
178 2 330 1 137 1 23 1 202 1 97 3 273 1 98 1 172 1 64 1 234 2 75 2 15 1 46 1 160 1 235 1 59 1 
369 2 178 5 329 2 137 1 84 1 23 1 202 1 125 1 273 1 97 10 98 2 234 2 64 5 75 5 160 2 235 3 291 1 59 2 
329 1 137 1 23 1 202 1 125 1 273 1 97 2 274 1 234 2 64 2 75 1 59 1 
369 1 178 2 70 1 329 1 137 1 23 1 202 1 125 1 273 1 97 4 274 1 234 2 64 2 75 2 235 1 59 1 345 1 
330 1 178 2 137 3 23 3 202 3 125 1 97 3 273 3 172 1 98 1 234 6 64 1 16 1 75 2 160 1 235 1 59 1 
330 2 70 3 329 5 137 5 23 5 97 34 313 1 98 3 172 1 234 10 75 12 76 1 235 7 59 5 342 1 7 3 345 3 121 4 369 5 178 18 269 1 84 2 220 1 202 5 125 1 273 5 274 3 64 16 15 1 16 1 46 1 160 3 305 1 187 1 
329 1 137 1 23 1 97 8 98 1 234 2 75 2 235 2 342 1 7 1 369 1 121 1 178 4 84 1 202 1 125 1 273 1 64 4 15 1 46 1 160 1 305 1 188 1 
70 1 329 2 137 2 23 2 97 11 98 1 234 4 75 3 235 2 59 1 342 1 7 1 369 1 121 2 178 5 269 1 84 1 220 1 202 2 125 1 273 2 274 1 64 6 15 1 46 1 160 1 305 1 188 1 
70 2 329 3 330 1 137 3 23 3 97 19 98 1 234 6 100 1 75 4 235 3 59 1 342 1 7 1 60 1 345 2 121 1 369 3 178 10 84 1 220 1 202 3 125 1 273 3 41 1 274 2 64 9 15 1 46 1 160 1 305 1 162 1 188 1 
330 1 70 2 329 3 137 3 23 3 97 17 98 1 234 6 100 1 75 5 235 3 59 2 342 1 7 1 60 1 345 1 121 1 369 2 178 7 84 1 220 1 202 3 125 1 273 3 41 1 274 2 64 10 15 1 46 1 160 1 305 1 162 1 188 1 
329 1 137 1 23 1 97 8 98 1 234 2 75 2 235 2 342 1 7 1 369 1 121 1 178 4 84 1 202 1 125 1 273 1 64 4 15 1 46 1 160 1 305 1 188 1 
70 2 329 2 137 1 23 1 97 12 234 2 100 1 75 2 235 1 59 1 342 1 7 1 60 1 345 2 121 1 369 2 178 6 202 1 125 1 273 1 41 1 274 2 64 6 162 1 188 1 
70 2 329 3 330 2 137 4 23 4 97 18 98 1 234 8 100 1 75 5 235 3 59 2 342 1 7 1 60 1 345 1 121 1 369 2 178 8 84 1 220 1 202 4 125 1 273 4 41 1 274 2 64 10 15 1 46 1 160 1 305 1 162 1 188 1 
70 3 329 3 330 2 137 4 23 4 97 16 234 8 100 1 75 6 235 3 59 3 342 1 7 1 60 1 345 2 121 1 369 2 178 7 202 4 125 1 273 4 41 1 274 3 64 9 16 1 162 1 188 1 
369 1 178 4 329 1 84 1 97 7 98 3 64 3 15 2 75 6 46 1 160 3 235 3 59 3 
70 2 329 3 330 2 137 4 23 4 97 18 98 1 234 8 100 1 75 4 235 3 59 1 342 1 7 1 60 1 345 1 121 1 369 2 178 8 84 1 202 4 125 1 273 4 41 1 274 2 64 10 15 1 16 1 46 1 160 1 305 1 162 1 188 1 
71 1 298 1 348 1 350 1 111 1 322 1 198 1 66 1 31 1 
71 1 298 1 348 1 350 1 203 1 111 1 37 1 54 1 322 1 213 1 66 1 280 1 198 1 31 1 
374 1 332 1 354 1 364 1 132 1 292 1 372 1 0 1 232 1 281 1 208 1 
164 1 71 2 348 2 73 1 87 1 111 1 372 1 0 1 232 1 56 1 156 1 364 1 132 1 66 1 292 1 281 1 208 1 32 1 
199 1 164 1 71 2 298 1 123 1 348 2 73 2 87 1 111 2 372 1 0 2 112 1 56 1 156 1 45 1 3 1 364 1 132 3 66 1 292 1 281 1 208 1 32 2 
199 1 164 1 71 2 298 1 123 1 348 2 73 2 87 1 299 1 111 2 372 2 0 2 112 1 56 1 45 1 3 1 364 2 132 3 66 1 292 1 307 1 281 1 208 2 32 2 
199 1 123 1 169 1 73 1 299 1 372 3 154 1 232 1 0 1 112 1 42 1 27 1 157 1 364 3 77 1 131 1 117 2 289 1 132 4 292 1 6 2 281 1 208 3 
199 1 123 1 245 1 169 1 73 1 372 1 0 1 112 1 157 1 364 1 117 1 132 4 292 1 6 1 281 1 208 1 
179 1 364 1 292 1 372 1 281 1 208 1 
318 1 179 1 24 1 73 1 257 1 372 6 232 2 0 2 140 1 364 7 115 1 116 1 161 1 30 1 132 3 292 3 252 1 281 2 344 1 208 7 239 1 
164 1 329 1 137 2 71 2 96 1 23 2 73 1 24 1 310 1 111 1 0 1 97 6 98 1 56 1 214 1 263 2 234 4 75 2 363 1 364 1 235 2 237 1 292 1 32 1 369 1 178 3 348 2 84 1 243 1 87 1 202 2 372 1 273 2 373 2 156 1 64 3 15 1 46 1 160 1 130 1 132 1 305 1 66 2 281 1 208 1 190 1 253 1 
82 1 169 1 245 1 246 1 351 1 372 1 232 1 128 1 157 1 4 1 364 1 340 1 132 2 117 1 186 1 5 1 316 1 6 1 208 1 
179 1 24 1 73 1 372 2 0 1 26 1 157 1 364 2 132 2 292 2 281 1 208 2 239 1 
332 1 24 1 299 1 372 4 232 1 0 1 14 1 354 1 364 4 132 1 292 1 281 1 208 4 
318 1 230 1 73 1 372 2 112 1 0 1 364 2 115 1 132 1 17 1 48 1 292 2 281 1 208 2 
114 1 364 1 47 1 292 1 372 1 146 1 232 1 281 1 208 1 204 1 
364 2 132 1 30 1 24 1 292 1 372 2 0 1 286 1 281 1 252 1 208 2 
332 1 24 1 257 1 372 4 112 1 232 1 0 2 140 1 14 1 354 1 364 5 132 3 292 2 252 1 281 2 208 5 
332 1 24 1 257 1 103 1 372 4 112 1 232 1 0 2 14 1 354 1 364 5 132 3 292 2 252 1 281 2 208 5 
164 1 71 2 348 2 73 1 87 1 111 1 372 1 0 1 232 1 56 1 364 1 132 1 66 1 292 1 307 1 281 1 208 1 32 1 
318 1 73 1 372 1 112 1 0 1 364 1 115 1 116 1 132 1 292 2 281 1 208 1 239 1 
19 1 241 1 66 1 79 1 357 1 
19 2 298 1 241 1 351 1 42 1 338 1 27 1 45 1 315 1 174 1 3 1 77 1 117 2 66 1 216 1 67 1 79 2 6 2 357 2 
71 1 241 1 348 1 111 1 53 1 99 1 79 1 357 1 206 1 
338 1 174 1 241 1 
374 1 331 1 270 1 69 1 
331 1 94 1 270 1 334 1 211 1 69 1 120 1 
2 1 94 1 250 1 
240 1 226 2 331 1 94 3 242 1 270 1 334 1 211 1 362 1 294 1 120 3 69 1 
331 1 94 2 270 1 197 1 334 1 211 1 102 1 69 1 120 2 
331 1 94 1 114 1 47 1 152 1 334 1 145 1 211 1 189 1 294 1 120 1 
331 1 94 1 334 1 211 1 294 1 69 1 120 1 
94 1 270 1 334 1 211 1 294 1 69 2 120 1 
331 1 94 2 334 2 211 2 221 1 293 1 327 1 294 1 69 1 120 2 
331 2 94 3 228 1 270 1 152 1 334 1 211 1 300 1 29 1 197 2 294 1 69 1 120 3 
331 1 94 2 270 1 349 1 334 1 211 1 114 2 47 1 197 1 81 1 145 1 146 1 294 1 69 1 120 2 
331 2 94 4 244 1 270 1 152 1 334 2 211 2 300 1 197 2 294 1 102 1 69 1 120 4 
331 1 94 1 270 1 334 1 211 1 294 1 69 1 120 1 
226 1 331 3 242 1 94 4 270 2 152 1 334 1 211 1 300 1 362 1 197 2 356 1 69 2 120 4 
331 1 94 2 270 1 334 1 211 1 212 1 197 1 294 1 317 1 69 1 120 2 295 1 
226 2 331 1 242 1 94 3 72 1 270 1 334 1 211 1 362 2 294 1 120 3 69 1 
353 1 331 2 325 2 360 1 
94 1 334 1 211 1 294 1 288 1 120 1 
331 1 94 2 228 1 270 1 197 1 334 1 211 1 294 1 69 1 120 2 
74 1 
331 1 94 1 270 1 334 1 211 1 294 1 69 1 120 1 
226 1 331 1 94 3 228 1 270 1 334 1 211 1 197 1 294 1 120 3 69 1 
331 1 152 1 356 1 300 1 
331 1 69 1 

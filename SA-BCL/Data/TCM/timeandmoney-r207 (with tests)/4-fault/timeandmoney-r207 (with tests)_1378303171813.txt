#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (158,182) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (158,182) 30 270 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (158,182) 30 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 2 239 1 2 3 72 2 191 1 170 1 49 1 95 2 216 1 123 6 273 2 197 1 11 1 53 5 307 1 164 1 13 4 278 9 251 1 225 1 148 1 333 9 288 1 290 1 208 2 187 2 232 2 25 1 
169 2 239 1 2 3 72 2 191 1 170 1 49 1 95 2 216 1 123 6 273 2 197 1 11 1 53 5 307 1 164 1 13 4 278 9 251 1 225 1 148 1 333 9 288 1 208 2 290 1 187 2 232 2 25 1 
169 2 239 1 2 4 72 2 191 1 170 1 49 1 95 2 216 1 123 7 273 2 197 1 11 1 53 6 307 1 164 1 13 5 278 10 251 1 225 1 148 1 333 10 288 1 208 2 290 1 187 2 232 2 25 1 
169 2 239 1 2 2 72 1 191 1 170 1 49 1 95 2 216 1 123 4 273 2 197 1 11 1 53 4 307 1 164 1 13 3 278 7 251 1 148 1 333 7 288 1 208 2 290 1 187 2 232 2 25 1 
169 1 2 1 278 4 251 1 72 2 225 1 170 1 95 1 333 4 123 3 11 1 187 1 290 1 53 3 208 1 232 1 164 1 13 2 
169 1 278 2 239 1 191 1 170 1 103 1 95 1 333 2 108 1 273 1 11 1 53 1 290 1 187 1 232 1 234 1 
169 2 278 3 2 1 170 1 333 3 123 1 273 1 11 1 290 1 53 2 232 2 25 1 13 1 
169 2 2 3 71 1 72 2 170 1 95 1 216 1 123 7 273 1 11 1 53 5 13 4 164 1 278 9 251 1 225 1 45 1 148 1 333 9 290 1 208 1 187 1 232 2 25 1 
169 2 2 3 71 1 72 2 170 1 95 1 216 1 123 7 273 1 11 1 53 5 13 4 164 1 278 9 251 1 225 1 45 1 148 1 333 9 290 1 208 1 187 1 232 2 25 1 
230 1 64 1 243 1 
64 1 358 1 309 2 
10 2 143 1 289 2 16 2 198 1 332 2 220 2 144 2 
238 2 1 1 136 1 271 1 29 1 121 2 50 1 171 2 99 2 172 1 34 1 10 2 143 1 345 1 198 1 102 1 327 1 219 2 220 2 144 3 250 1 253 1 203 1 165 1 86 1 16 3 17 1 332 2 351 1 149 1 335 1 289 2 89 1 152 1 189 1 266 1 318 1 
131 1 10 1 143 1 289 1 60 1 16 1 332 1 220 1 144 1 222 1 
202 1 330 1 60 1 16 1 297 1 96 1 62 1 51 1 243 1 10 1 357 1 64 1 112 1 144 1 
202 2 330 1 60 1 16 1 332 1 62 1 51 1 243 1 10 1 289 1 357 2 64 1 112 1 220 1 144 1 
0 1 272 1 202 1 357 1 7 1 
272 1 202 2 252 1 133 1 357 2 64 1 7 1 243 1 
202 1 357 1 7 1 
202 1 60 1 16 1 161 1 332 1 131 1 272 1 143 1 10 1 289 1 357 1 220 1 222 1 144 1 
64 1 
177 1 272 1 202 2 252 1 357 2 64 1 7 1 243 1 
14 1 202 5 252 1 119 1 27 2 160 1 281 1 6 1 7 2 243 1 173 2 300 1 272 2 357 5 64 1 66 1 56 1 80 1 70 2 
238 1 165 1 29 1 254 1 50 1 17 1 16 2 121 1 180 1 332 1 171 1 343 1 172 1 34 1 149 1 10 1 289 1 102 1 318 1 144 2 
230 1 198 1 
16 2 296 1 332 1 342 1 10 2 289 1 198 2 220 1 144 2 
254 1 302 1 92 1 
238 1 165 1 29 1 16 1 121 1 17 1 50 1 171 1 141 1 149 1 34 1 172 1 198 1 102 1 318 1 144 1 
135 1 16 5 296 1 180 2 332 4 96 1 343 1 10 5 228 1 289 4 198 1 163 1 220 1 144 5 
131 1 10 2 289 2 60 1 16 2 332 2 258 1 144 2 
10 3 289 3 16 3 198 1 180 1 332 3 220 1 144 3 
131 1 10 1 289 1 60 1 16 1 332 1 144 1 
10 1 289 1 60 1 16 1 296 1 332 1 342 1 220 1 144 1 
238 1 136 1 271 1 29 1 240 1 50 1 296 1 121 1 51 1 171 1 343 1 99 1 172 1 34 1 10 3 143 1 198 1 102 1 79 1 327 1 219 2 220 2 144 4 202 1 253 1 203 1 86 1 330 1 165 1 60 1 17 1 16 4 180 1 332 3 62 1 149 1 335 1 289 3 89 1 357 1 152 1 189 1 112 1 318 1 
10 2 228 1 289 1 16 2 198 1 180 1 332 1 96 1 144 2 
202 1 330 1 60 1 296 1 16 3 180 2 332 3 62 1 51 1 343 1 10 3 289 3 357 1 64 1 79 1 112 1 267 1 220 1 144 3 
254 1 296 1 16 2 180 1 332 2 10 2 289 2 92 1 220 1 144 2 
238 1 165 1 29 1 16 1 121 1 17 1 50 1 171 1 149 1 34 1 172 1 198 1 102 1 318 1 144 1 
238 1 165 1 16 1 121 1 17 1 50 1 241 1 171 1 34 1 172 1 151 1 198 1 102 1 318 1 144 1 
249 1 211 1 203 1 212 1 310 1 128 1 136 2 271 1 129 1 254 2 349 1 130 1 99 4 335 1 345 2 89 1 233 1 302 2 92 2 189 1 327 1 219 2 113 1 277 1 
10 1 330 1 289 1 60 1 16 1 332 1 258 1 144 1 
20 1 182 1 
20 1 182 1 
158 1 20 1 182 1 57 1 
158 1 20 1 182 1 57 1 
158 1 57 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
20 1 182 1 
202 1 270 1 30 1 357 1 20 1 182 1 183 1 
30 1 20 1 182 1 183 1 
187 1 208 1 95 1 
187 1 95 1 234 1 
58 1 83 1 325 1 208 2 95 3 234 1 
58 1 83 1 208 1 95 2 106 1 234 1 
83 1 58 2 208 1 95 2 234 1 
212 1 119 3 27 1 321 2 214 1 160 2 7 1 122 1 173 1 243 1 272 4 244 1 100 2 12 1 309 3 14 1 202 5 252 1 310 1 130 1 18 2 257 1 284 1 109 1 357 5 358 1 64 2 153 1 113 1 114 1 156 1 70 1 
0 5 212 3 119 8 27 2 159 1 214 2 160 6 7 6 122 2 243 1 173 2 244 4 272 7 100 6 12 3 276 5 221 1 80 1 309 9 84 1 202 9 42 1 14 1 252 1 310 3 130 3 18 6 357 9 358 3 64 5 153 1 113 3 293 1 69 1 70 2 
212 1 119 3 27 1 321 1 214 1 160 2 122 1 243 1 173 1 272 2 244 1 100 2 12 1 80 1 309 4 202 3 310 1 130 1 18 2 109 1 357 3 64 3 358 2 113 1 156 1 70 1 
212 2 119 5 27 1 321 2 159 1 214 1 160 4 122 1 243 1 173 1 244 2 272 3 100 4 12 2 221 1 309 7 80 1 84 1 202 4 310 2 130 2 18 4 109 1 357 4 64 4 358 3 113 2 70 1 156 1 
346 1 230 1 318 1 
318 1 334 1 
295 1 
102 1 318 1 172 1 
329 1 318 1 
102 1 318 1 
346 2 294 1 102 1 331 1 318 3 172 1 
249 2 279 1 128 3 146 1 136 3 348 2 130 1 192 1 105 1 52 1 140 1 99 7 261 1 345 4 132 1 304 1 113 1 
249 2 279 1 128 3 146 1 136 3 348 2 130 1 192 1 105 1 52 1 140 1 99 7 261 1 345 4 132 1 304 1 113 1 
249 2 279 1 128 3 146 1 136 3 348 2 130 1 192 1 105 1 52 1 140 1 99 7 261 1 345 4 301 1 132 1 304 1 113 1 
212 3 271 1 136 11 192 1 31 1 52 4 215 4 99 22 196 1 76 3 345 11 12 3 77 1 327 1 219 2 249 3 178 1 279 1 146 1 310 3 128 7 348 1 130 3 105 1 355 1 89 1 24 1 189 1 113 3 155 1 
3 1 271 2 136 4 192 1 52 1 140 1 99 9 174 1 345 5 304 1 327 2 219 4 249 3 279 1 128 4 146 1 348 2 130 1 105 1 89 2 132 1 189 2 113 1 155 1 
238 1 169 1 117 1 120 1 170 1 121 1 50 1 171 1 95 2 123 1 9 1 325 1 273 1 11 1 53 1 38 1 201 1 278 2 224 1 179 1 17 1 333 2 259 1 229 1 187 1 208 1 290 1 232 1 90 1 234 1 
238 1 169 1 117 1 170 1 121 1 50 1 171 1 95 2 217 1 123 2 9 1 325 1 273 1 11 1 53 1 38 1 201 1 278 3 179 1 17 1 333 3 259 1 260 1 229 1 187 1 208 1 359 1 232 1 90 1 234 1 
238 1 117 1 170 1 121 1 50 1 171 1 95 2 217 1 123 2 9 1 325 1 273 1 11 1 53 1 38 1 278 2 179 1 17 1 333 2 259 1 260 1 208 1 187 1 90 1 234 1 
238 1 169 1 157 1 50 1 121 1 171 1 273 2 36 1 102 1 278 1 165 1 179 2 17 1 46 1 333 1 259 2 21 1 227 1 359 1 232 1 90 2 236 1 318 1 
238 1 169 1 117 1 121 1 50 1 171 1 95 2 9 1 325 1 273 1 38 1 201 1 278 1 224 1 179 1 17 1 333 1 259 1 260 1 229 1 187 1 208 1 290 1 232 1 90 1 234 1 
256 1 
210 2 214 1 4 2 50 1 138 1 94 1 171 2 96 1 51 1 7 6 173 1 10 1 275 1 176 1 102 1 144 1 328 2 14 1 330 1 60 1 17 1 16 1 62 1 22 4 227 1 63 1 23 2 186 1 185 1 64 2 68 2 291 2 112 1 235 1 236 1 70 1 238 2 119 2 27 1 160 2 121 2 193 1 297 1 243 1 305 1 309 2 43 1 202 5 252 3 204 1 165 2 350 2 357 5 358 2 318 1 
177 1 202 3 252 1 330 1 60 1 16 1 51 1 297 1 96 1 62 1 7 2 22 2 63 1 23 1 10 1 185 1 357 3 176 1 186 1 112 1 305 1 144 1 
177 1 202 3 252 1 330 1 60 1 16 1 51 1 297 1 96 1 62 1 7 1 243 1 22 3 63 1 10 1 185 1 357 3 176 1 186 1 64 1 68 1 112 1 305 1 144 1 
177 1 202 3 252 1 330 1 60 1 16 1 51 1 297 1 96 1 62 1 7 2 243 1 22 3 63 1 23 1 10 1 185 1 357 3 176 1 186 1 64 1 68 1 112 1 305 1 144 1 328 1 
210 2 269 1 4 2 138 1 51 1 96 1 7 7 173 1 10 1 176 1 144 1 328 4 177 1 14 1 330 1 60 1 15 1 16 1 62 1 22 6 63 1 23 4 185 1 186 1 64 5 68 4 112 1 235 1 291 2 70 1 118 1 119 1 27 1 160 1 297 1 243 5 35 1 305 1 202 5 252 3 350 2 315 1 357 5 358 2 
210 2 4 2 138 1 51 1 96 1 7 4 173 1 10 1 176 1 144 1 328 2 14 1 330 1 60 1 16 1 62 1 22 4 63 1 23 2 185 1 186 1 64 2 68 2 235 1 112 1 291 2 70 1 119 1 27 1 160 1 297 1 243 1 305 1 309 2 202 4 43 1 252 2 350 2 357 4 358 2 
210 2 119 1 118 1 27 1 4 2 160 1 138 1 96 1 297 1 51 1 7 4 243 1 173 1 10 1 35 1 176 1 305 1 144 1 328 2 202 4 14 1 252 2 330 1 60 1 16 1 350 2 62 1 315 1 22 4 63 1 23 2 186 1 357 4 185 1 64 1 358 2 68 2 291 2 235 1 112 1 70 1 
210 2 119 1 118 1 27 1 4 2 160 1 138 1 96 1 297 1 51 1 7 4 243 1 173 1 10 1 35 1 176 1 305 1 144 1 328 2 202 4 14 1 252 2 330 1 60 1 16 1 350 2 62 1 315 1 22 4 63 1 23 2 186 1 357 4 185 1 64 1 358 2 68 2 291 2 235 1 112 1 70 1 
320 2 119 1 27 1 160 1 322 1 138 1 96 1 297 1 51 1 7 4 243 1 242 2 173 1 10 1 35 1 162 1 176 1 305 1 309 2 144 1 81 1 328 2 202 4 14 1 252 2 330 1 60 1 16 1 350 2 62 1 22 4 63 1 23 2 186 1 357 4 185 1 64 1 68 2 291 2 112 1 70 1 
210 2 269 1 119 1 118 1 27 1 4 2 160 1 138 1 96 1 297 1 51 1 7 5 243 1 173 1 10 1 35 1 176 1 305 1 144 1 328 3 14 1 202 4 252 2 330 1 60 1 16 1 350 2 62 1 315 1 22 5 63 1 23 3 186 1 357 4 185 1 64 1 358 2 68 3 291 2 235 1 112 1 70 1 
210 2 269 1 119 1 118 1 27 1 4 2 160 1 138 1 96 1 297 1 51 1 7 5 243 1 173 1 10 1 35 1 176 1 305 1 144 1 328 3 14 1 202 4 252 2 330 1 60 1 16 1 350 2 62 1 315 1 22 5 63 1 23 3 186 1 357 4 185 1 64 1 358 2 68 3 291 2 235 1 112 1 70 1 
320 2 119 1 27 1 160 1 322 1 138 1 297 1 96 1 51 1 7 4 243 1 242 2 173 1 10 1 176 1 305 1 309 2 144 1 328 2 43 1 14 1 202 4 252 2 330 1 60 1 16 1 350 2 62 1 22 4 63 1 23 2 186 1 357 4 185 1 64 1 68 2 291 2 112 1 70 1 
271 1 136 3 140 1 99 6 345 3 198 2 304 1 302 1 327 1 219 2 277 1 249 2 203 1 146 1 128 2 348 1 254 1 130 1 105 1 335 1 230 1 89 1 132 1 92 1 189 1 113 1 
74 1 136 3 28 1 271 2 215 1 97 1 99 4 76 1 345 1 198 1 302 3 327 2 219 4 82 1 203 2 253 1 60 1 254 3 335 1 89 2 67 1 189 2 319 1 
238 1 1 1 29 1 271 1 136 1 50 1 121 1 171 1 343 1 172 1 34 1 141 1 99 2 10 1 345 1 198 1 102 1 78 1 327 1 219 2 144 2 223 1 203 1 253 1 165 1 17 1 16 2 180 1 332 1 181 1 149 1 335 1 289 1 89 1 67 1 92 1 189 1 318 1 
1 1 212 2 136 10 271 3 50 2 171 3 52 4 140 1 99 20 172 2 10 1 12 2 54 1 102 2 327 3 219 6 144 3 145 1 146 1 16 3 17 2 180 1 332 1 105 1 149 2 335 3 289 1 184 2 67 1 189 3 113 3 238 3 29 2 121 3 343 1 34 2 125 2 345 10 198 2 304 1 302 7 249 4 253 1 203 3 310 2 128 8 348 1 165 1 86 2 254 7 130 3 354 1 260 1 262 2 356 2 89 3 132 1 92 7 318 2 
238 8 1 1 120 1 271 2 136 1 50 2 121 8 171 7 194 1 32 1 98 1 99 2 142 1 10 1 345 1 347 1 199 1 102 2 327 2 219 4 144 1 277 1 250 2 203 2 253 1 311 1 165 2 16 1 17 2 180 1 332 1 260 1 227 1 335 2 289 1 89 2 189 2 318 3 236 1 
212 1 271 1 136 2 296 1 8 1 99 3 10 1 345 1 12 1 302 1 327 1 219 2 220 1 144 1 249 1 203 1 128 1 310 1 254 1 16 1 130 1 332 1 335 1 289 1 89 1 67 1 92 1 189 1 113 1 
203 1 128 1 310 1 271 1 254 1 130 1 52 1 99 2 335 1 345 2 89 1 302 1 233 1 92 1 189 1 327 1 219 2 277 1 
249 1 203 1 212 1 128 1 271 1 136 2 254 1 349 1 99 2 335 1 89 1 302 1 92 1 189 1 327 1 219 2 113 1 277 1 
212 1 271 1 136 2 52 1 99 4 345 2 12 1 302 2 327 1 219 2 277 1 249 1 203 1 310 1 128 2 254 2 130 1 335 1 89 1 189 1 92 2 113 1 
203 1 128 1 310 1 271 1 254 1 130 1 52 1 99 2 335 1 345 2 89 1 199 1 302 1 233 1 92 1 189 1 327 1 219 2 
249 1 203 1 212 1 128 1 271 1 136 2 254 1 349 1 99 2 335 1 89 1 199 1 302 1 92 1 189 1 327 1 219 2 113 1 
212 1 271 1 136 2 52 1 99 4 345 2 12 1 199 1 302 2 327 1 219 2 249 1 203 1 310 1 128 2 254 2 130 1 335 1 89 1 189 1 92 2 113 1 
212 1 271 1 136 2 52 1 99 4 345 2 12 1 302 2 327 1 219 2 249 1 203 1 310 1 128 2 254 2 130 1 335 1 89 1 189 1 92 2 113 1 
238 1 1 1 29 1 271 1 136 1 50 1 121 1 171 1 99 2 172 1 34 1 345 1 198 1 102 1 327 1 219 2 144 1 203 1 253 1 86 1 165 1 17 1 16 1 149 1 335 1 89 1 189 1 318 1 
238 1 1 1 271 1 136 1 50 1 121 1 241 1 171 1 99 2 172 1 34 1 345 1 198 1 102 1 218 1 327 1 219 2 144 1 203 1 253 1 165 1 17 1 16 1 335 1 151 1 89 1 189 1 318 1 
212 1 271 1 136 2 52 1 99 4 345 2 12 1 302 2 327 1 219 2 249 1 203 1 310 1 128 2 254 2 130 1 335 1 89 1 67 1 189 1 92 2 113 1 
238 1 212 1 120 1 136 2 29 1 271 1 50 1 121 1 171 1 52 1 99 4 172 1 34 1 345 2 12 1 102 1 302 2 327 1 219 2 144 1 249 1 203 1 128 2 310 1 86 1 254 2 130 1 17 1 16 1 149 1 335 1 356 1 89 1 92 2 189 1 113 1 318 1 
212 1 136 1 271 1 296 1 52 1 99 3 10 1 345 2 12 1 302 1 327 1 219 2 220 1 144 1 203 1 128 1 310 1 254 1 16 1 130 1 332 1 314 1 335 1 289 1 89 1 67 1 189 1 92 1 113 1 
212 4 3 1 136 21 271 3 139 1 323 1 52 4 215 4 140 1 99 41 12 4 326 4 327 3 219 6 146 1 105 1 283 1 107 1 110 1 231 1 24 3 189 3 111 1 113 5 155 1 76 3 345 20 77 1 247 1 304 1 249 4 41 1 128 8 310 4 44 2 348 1 312 1 130 5 87 1 206 1 89 3 264 1 132 1 
212 3 3 1 271 4 136 18 323 1 139 1 52 3 215 4 140 1 99 38 76 3 345 20 12 4 77 1 247 1 326 4 304 1 327 4 219 8 249 4 41 1 146 1 310 4 128 7 348 1 44 2 312 1 130 5 87 1 283 1 105 1 107 1 206 1 110 1 89 4 231 1 264 1 132 1 24 3 111 1 189 4 113 4 155 2 
212 7 3 1 271 2 136 25 323 1 139 1 52 7 215 4 140 1 99 52 76 4 345 27 12 7 77 2 326 4 304 1 327 2 219 4 249 7 41 1 146 1 310 7 128 14 348 1 44 1 312 1 130 8 87 1 104 2 105 1 107 1 206 1 110 1 89 2 231 1 264 1 132 1 24 2 111 1 189 2 113 8 155 1 
212 3 3 1 271 2 136 10 323 1 324 1 52 3 215 2 99 19 76 1 345 9 12 3 77 1 326 2 327 2 219 4 249 3 310 3 128 6 44 1 312 1 130 3 283 1 110 1 89 2 264 2 24 1 111 1 189 2 113 3 
212 2 3 1 136 12 271 3 323 1 139 1 52 2 215 2 99 26 76 2 345 14 12 3 326 4 327 3 219 6 249 2 41 1 128 4 310 3 44 2 312 1 130 3 87 1 107 1 206 1 110 1 89 3 231 1 264 1 24 2 111 2 189 3 113 2 155 2 
238 2 1 1 338 1 271 1 136 1 50 1 121 2 171 2 194 1 98 1 99 2 10 2 345 1 102 1 303 1 327 1 219 2 144 2 250 2 203 1 253 1 17 1 147 1 16 2 335 1 263 1 89 1 67 1 209 1 189 1 318 1 
238 2 201 1 117 1 120 1 179 1 50 1 17 1 121 2 95 2 171 2 33 1 344 1 260 1 9 1 325 1 187 1 208 1 234 1 190 1 
238 1 201 1 117 1 179 1 121 1 226 1 17 1 50 1 95 2 171 1 344 1 260 1 9 1 325 1 187 1 208 1 234 1 
238 1 85 1 165 1 179 1 50 1 17 1 121 1 171 1 33 1 21 1 227 1 102 1 318 1 236 1 
238 1 201 1 117 1 179 1 50 1 121 1 17 1 95 2 171 1 33 1 344 1 260 1 9 1 325 1 187 1 208 1 234 1 190 1 
280 1 
300 1 119 1 230 1 64 1 160 1 281 1 243 1 
210 1 119 1 27 1 160 1 4 1 7 1 173 1 243 1 309 1 14 1 202 1 252 1 357 1 358 1 64 2 235 1 70 1 
212 2 137 2 214 2 50 4 94 1 171 3 5 1 7 5 172 3 173 4 100 6 12 2 55 1 102 3 14 4 329 2 281 1 17 3 331 1 18 6 61 2 334 3 287 1 64 8 112 2 113 2 70 4 238 3 119 9 120 1 27 4 121 3 160 8 299 1 243 2 300 1 346 2 246 2 126 2 306 2 309 12 202 5 252 3 310 2 165 1 130 2 313 1 353 2 47 2 262 2 357 5 358 6 168 2 318 10 
212 2 119 8 134 1 27 2 214 1 160 5 94 1 7 1 215 1 173 2 243 2 76 1 100 5 246 1 12 2 309 6 202 1 59 1 14 2 41 1 252 1 310 2 130 2 18 5 87 1 107 1 206 1 47 2 357 1 358 3 64 5 231 1 24 1 113 2 70 2 
73 1 118 1 119 2 27 1 160 2 161 1 173 1 143 1 10 1 246 1 220 1 144 1 222 1 14 1 202 1 146 1 60 1 16 1 130 2 332 1 105 1 131 1 47 2 289 1 357 1 132 1 113 1 70 1 
300 1 14 1 119 1 27 1 64 1 160 1 281 1 243 1 70 1 173 1 
212 2 310 2 119 5 130 2 160 5 18 5 262 1 47 2 100 5 246 1 12 2 358 5 64 5 113 2 309 10 
202 1 252 1 357 1 64 1 7 1 243 1 
238 4 119 2 213 1 27 2 214 2 50 1 121 4 160 2 193 1 94 2 171 4 7 4 299 2 173 2 175 1 275 1 102 1 80 1 14 1 202 3 252 2 165 2 17 1 227 1 287 1 357 3 318 1 236 1 70 2 
238 1 136 1 271 1 29 1 121 1 50 1 171 1 99 1 34 1 172 1 10 2 143 1 198 1 102 1 327 1 219 2 220 2 144 3 253 1 203 1 165 1 86 1 16 3 17 1 332 2 149 1 335 1 289 2 89 1 152 1 189 1 318 1 
14 1 119 1 27 1 348 1 214 1 160 2 18 2 94 1 173 1 243 2 100 2 358 2 64 4 309 4 70 1 
37 1 265 1 39 1 
88 1 265 1 248 1 39 1 48 1 
37 1 265 1 39 1 
37 1 265 1 39 1 
360 1 265 1 39 1 
360 1 265 1 39 1 
360 1 265 1 39 1 
265 1 39 1 
20 1 182 1 
3 1 136 4 271 1 215 1 140 1 99 8 76 1 345 4 304 1 327 1 219 2 249 2 146 1 128 2 348 1 130 1 87 1 105 1 89 1 132 1 24 1 189 1 113 1 
3 1 136 5 271 2 52 1 215 2 140 1 99 11 76 1 345 6 12 1 77 1 304 1 327 2 219 4 249 2 146 1 310 1 128 3 348 1 130 2 87 1 105 1 150 1 89 2 132 1 24 1 189 2 113 1 
212 2 3 1 136 10 271 3 52 1 215 1 140 1 99 19 76 1 345 9 12 2 304 1 327 3 219 6 249 3 41 1 146 1 310 2 128 4 348 1 130 3 87 1 105 1 107 1 206 1 150 1 89 3 231 1 132 1 24 1 189 3 113 3 155 1 
212 1 3 1 136 7 271 3 52 2 215 1 140 1 99 17 76 1 345 10 12 2 304 1 327 3 219 6 249 3 41 1 146 1 310 2 128 5 348 1 130 3 87 1 105 1 107 1 206 1 150 1 89 3 231 1 132 1 24 1 189 3 113 2 155 1 
3 1 136 4 271 1 215 1 140 1 99 8 76 1 345 4 304 1 327 1 219 2 249 2 146 1 128 2 348 1 130 1 87 1 105 1 89 1 132 1 24 1 189 1 113 1 
212 2 3 1 136 6 271 1 52 1 215 1 99 12 76 1 345 6 12 2 327 1 219 2 249 1 41 1 310 2 128 2 130 2 87 1 107 1 206 1 89 1 231 1 24 1 189 1 113 2 
212 1 3 1 136 8 271 4 52 2 215 1 140 1 99 18 76 1 345 10 12 2 304 1 327 4 219 8 249 3 41 1 146 1 310 2 128 5 348 1 130 3 87 1 105 1 107 1 206 1 150 1 89 4 231 1 132 1 24 1 189 4 113 2 155 2 
212 2 3 1 136 7 271 4 52 3 215 1 99 16 76 1 345 9 12 3 327 4 219 8 249 3 41 1 310 3 128 6 130 3 87 1 283 1 107 1 206 1 89 4 231 1 24 1 189 4 113 2 155 2 
249 3 146 3 128 6 136 4 130 1 105 3 52 3 140 1 99 7 345 3 132 1 304 2 113 1 
212 1 3 1 136 8 271 4 52 1 215 1 140 1 99 18 76 1 345 10 12 2 304 1 327 4 219 8 249 3 41 1 146 1 310 2 128 4 348 1 130 3 87 1 105 1 283 1 107 1 206 1 89 4 231 1 132 1 24 1 189 4 113 2 155 2 
249 2 128 3 146 1 348 1 136 4 271 2 130 1 105 1 52 1 140 1 99 8 345 4 89 2 132 1 304 1 189 2 327 2 113 1 219 4 155 1 
249 2 146 1 128 2 348 1 136 3 130 1 105 1 140 1 99 6 345 3 230 1 132 1 304 1 113 1 
249 1 212 1 128 2 310 1 136 2 271 1 130 1 52 1 99 4 150 1 345 2 89 1 12 1 189 1 327 1 113 1 219 2 
249 1 212 1 310 1 128 2 136 4 130 1 52 1 215 2 99 7 76 1 345 3 12 1 77 1 24 1 113 1 
73 1 271 1 136 8 52 3 215 1 140 1 99 15 76 1 345 7 304 1 327 1 219 2 82 1 249 3 146 2 128 6 130 2 105 2 89 1 132 1 189 1 113 2 319 1 155 1 
136 1 215 1 99 1 
76 1 345 1 99 1 
249 2 212 1 310 1 128 3 271 1 136 3 130 1 52 1 99 6 150 1 262 1 345 3 89 1 12 1 327 1 189 1 219 2 113 1 
212 2 3 1 136 6 271 1 52 1 215 1 99 12 76 1 345 6 12 2 327 1 219 2 249 1 41 1 310 2 128 2 130 2 87 1 107 1 206 1 89 1 231 1 24 1 189 1 113 2 
249 1 146 1 128 2 136 3 130 1 105 1 52 1 99 6 345 3 132 1 113 1 
249 1 128 2 146 1 136 2 271 1 105 1 52 1 140 1 99 3 345 1 89 1 304 1 189 1 327 1 319 1 219 2 155 1 
249 3 3 1 73 1 146 2 128 5 271 1 136 5 130 2 105 2 52 2 99 10 345 5 89 1 132 1 327 1 189 1 219 2 113 2 
3 1 310 1 128 1 271 1 130 1 52 1 99 2 345 2 89 1 189 1 327 1 219 2 
249 1 212 1 128 2 3 1 310 1 136 2 271 1 130 1 52 1 99 4 345 2 89 1 12 1 189 1 327 1 113 1 219 2 
249 1 3 1 146 1 128 2 136 2 271 3 283 1 105 1 52 1 99 3 345 1 89 3 189 3 327 3 319 1 219 6 155 1 
212 3 3 1 136 18 271 5 31 1 52 5 215 4 140 1 99 34 76 3 345 16 12 3 77 1 304 1 327 5 219 10 249 7 178 1 146 3 310 3 128 12 348 1 130 5 105 3 283 1 355 1 150 1 89 5 132 2 24 1 189 5 319 1 113 5 155 2 
10 1 228 1 16 1 198 1 188 1 96 1 144 1 
205 1 16 1 96 1 298 1 166 1 124 1 10 1 228 1 198 1 188 1 200 1 144 1 
227 1 238 1 230 1 165 1 50 1 17 1 121 1 102 1 171 1 318 1 236 1 
238 1 165 1 50 1 16 2 121 1 17 1 180 1 332 1 171 1 172 1 34 1 149 1 10 1 289 1 198 1 102 1 318 1 144 2 
238 1 121 1 50 1 171 1 51 1 299 1 34 1 172 2 10 2 198 1 102 2 144 2 329 1 330 1 60 1 17 1 16 2 180 1 332 1 149 1 289 2 168 1 318 3 
238 2 121 2 50 1 171 2 51 1 299 1 34 1 172 2 10 2 198 1 102 2 144 2 329 1 330 1 60 1 17 1 16 2 180 1 332 1 151 1 336 1 289 2 168 1 318 3 
238 3 121 3 50 1 341 1 171 3 7 1 195 1 299 1 172 1 243 1 346 1 102 1 202 2 329 1 165 1 17 1 334 1 336 1 357 2 64 1 168 1 112 1 318 4 
238 3 202 2 329 1 165 1 50 1 121 3 17 1 171 3 353 1 7 1 334 1 243 1 172 1 299 1 346 1 336 1 357 2 64 1 102 1 168 1 112 1 318 4 
238 1 142 1 50 1 17 1 121 1 171 1 
250 1 238 7 311 1 120 1 165 2 121 7 17 2 50 3 331 1 171 6 352 1 32 1 98 1 260 1 172 1 142 1 347 1 65 1 102 2 318 3 237 1 
271 2 136 3 50 1 171 1 140 1 172 1 99 6 10 1 102 1 327 2 219 4 144 2 146 1 16 2 17 1 180 1 332 1 105 1 149 1 335 2 289 1 67 1 189 2 113 1 238 1 120 1 29 1 121 1 34 1 125 1 345 3 198 2 303 1 304 1 302 1 249 2 203 2 128 2 86 1 348 1 254 1 130 1 356 1 89 2 132 1 92 1 318 1 
238 1 119 1 27 2 137 1 160 1 121 1 171 1 7 2 243 1 173 2 300 1 272 1 346 1 126 1 306 1 14 2 202 3 252 1 165 1 281 1 353 1 334 1 287 1 357 3 64 1 112 1 318 2 70 2 
238 2 120 1 121 2 17 1 50 2 331 1 313 1 171 2 172 1 142 1 346 1 102 1 318 2 
238 4 120 1 165 1 50 1 121 4 17 1 171 4 227 1 336 1 102 1 91 1 236 1 318 1 
238 2 337 1 121 2 17 1 50 2 171 2 352 1 354 1 299 1 172 1 101 1 102 1 318 1 237 1 
238 1 165 1 187 1 50 1 17 1 121 1 95 1 171 1 234 1 9 1 
238 2 120 1 121 2 147 1 17 1 50 1 171 2 98 1 260 1 102 1 318 1 
238 5 120 1 165 1 121 5 17 2 50 2 171 4 32 1 98 1 299 1 227 1 347 1 102 2 91 1 236 1 318 3 
238 5 120 1 165 1 121 5 17 2 50 2 171 4 32 1 98 1 299 1 227 1 102 2 91 1 236 1 93 1 318 3 
238 1 165 1 50 1 16 2 121 1 17 1 180 1 332 1 171 1 172 1 34 1 10 1 151 1 289 1 198 1 102 1 318 1 144 2 
238 1 121 1 17 1 50 2 331 1 171 1 352 1 299 1 172 1 65 1 102 1 318 1 237 1 
127 1 207 1 198 1 282 1 285 1 
127 2 202 2 330 1 60 1 340 1 51 1 62 1 282 2 285 2 243 1 272 1 207 1 245 1 357 2 64 1 198 1 79 1 112 1 115 1 
10 1 338 1 207 1 263 1 16 1 209 1 282 1 285 1 144 1 
207 1 340 1 115 1 
11 1 170 1 230 1 53 1 
169 1 278 1 11 1 170 1 53 1 232 1 333 1 
278 1 273 1 259 1 
169 1 116 1 278 3 191 2 170 1 333 3 75 1 274 1 11 1 53 1 290 1 232 1 
169 1 278 2 72 1 11 1 170 1 53 1 232 1 333 2 123 1 
169 1 278 1 95 1 333 1 290 1 53 1 208 1 187 1 232 1 164 1 13 1 
169 1 278 1 11 1 53 1 290 1 232 1 333 1 
169 1 278 1 11 2 170 1 290 1 232 1 333 1 
169 2 278 2 333 2 316 1 11 1 53 1 290 1 232 2 154 1 26 1 
169 1 278 3 2 1 170 1 148 1 333 3 216 1 123 2 11 1 290 1 53 2 232 1 13 1 
169 1 278 2 170 1 95 2 333 2 123 1 167 1 325 1 11 1 53 1 290 1 208 1 187 1 232 1 234 1 
169 2 278 4 2 1 72 1 225 1 170 1 333 4 123 2 11 1 290 1 53 2 232 2 13 1 
169 1 278 1 11 1 170 1 53 1 290 1 232 1 333 1 
116 1 169 1 278 4 2 1 191 1 170 2 333 4 123 2 274 1 11 2 53 3 232 1 292 1 13 1 
169 1 40 1 278 2 71 1 170 1 255 1 333 2 123 1 11 1 53 1 290 1 232 1 
116 1 169 1 278 3 191 2 170 1 333 3 274 2 11 1 53 1 290 1 232 1 308 1 
286 2 339 1 53 2 317 1 
169 1 278 1 290 1 232 1 333 1 268 1 
169 1 278 2 11 1 170 1 53 1 290 1 232 1 148 1 333 2 123 1 
19 1 
169 1 278 1 11 1 170 1 53 1 290 1 232 1 333 1 
169 1 278 3 191 1 170 1 148 1 333 3 123 1 11 1 290 1 53 1 232 1 
2 1 53 1 292 1 13 1 
11 1 53 1 

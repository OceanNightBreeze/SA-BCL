#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 4 0 1 23 2 95 1 326 1 216 1 329 1 99 1 279 2 71 1 222 1 253 2 194 2 227 1 169 9 45 1 198 1 153 6 48 1 262 2 203 1 84 2 263 1 50 3 340 5 55 1 239 9 368 2 
93 4 0 1 23 2 95 1 326 1 216 1 329 1 99 1 279 2 71 1 222 1 253 2 194 2 227 1 169 9 45 1 198 1 153 6 48 1 262 2 203 1 84 2 263 1 50 3 340 5 55 1 239 9 368 2 
93 5 0 1 23 2 95 1 326 1 216 1 329 1 99 1 279 2 71 1 222 1 253 2 194 2 227 1 169 10 45 1 198 1 153 7 48 1 262 2 203 1 84 2 263 1 50 4 340 6 55 1 239 10 368 2 
93 3 0 1 23 2 95 1 326 1 216 1 329 1 99 1 279 2 222 1 253 1 194 2 227 1 169 7 45 1 198 1 153 4 48 1 262 2 203 1 84 2 263 1 50 2 340 4 55 1 239 7 368 2 
93 2 23 1 153 3 326 1 216 1 262 1 329 1 84 1 50 1 279 1 340 3 71 1 222 1 253 2 239 4 227 1 368 1 169 4 
23 1 129 1 294 1 110 1 48 1 326 1 262 1 99 1 279 1 340 1 222 1 239 2 194 1 227 1 368 1 169 2 
93 1 23 2 153 1 326 1 262 2 263 1 50 1 340 2 222 1 239 3 194 1 227 1 169 3 
93 4 0 1 23 2 324 1 326 1 216 1 329 1 279 1 71 1 222 1 253 2 254 1 194 1 227 1 169 9 153 7 262 2 203 1 263 1 84 1 50 3 340 5 239 9 368 1 
93 4 0 1 23 2 324 1 326 1 216 1 329 1 279 1 71 1 222 1 253 2 254 1 194 1 227 1 169 9 153 7 262 2 203 1 263 1 84 1 50 3 340 5 239 9 368 1 
185 1 
196 2 163 1 98 1 
170 2 379 2 41 2 273 2 54 1 278 2 287 2 298 1 
37 1 273 2 65 1 275 2 120 1 25 1 278 3 298 1 371 1 41 2 356 2 305 1 170 3 31 1 229 1 173 1 32 1 12 2 132 2 49 1 287 2 133 1 379 2 204 1 341 1 182 1 53 1 54 1 366 1 184 1 22 1 291 1 381 1 211 1 322 1 271 1 92 2 
170 1 379 1 41 1 273 1 365 1 54 1 56 1 159 1 278 1 287 1 
170 1 228 1 163 1 116 1 278 1 40 1 377 1 379 1 19 1 365 1 288 1 266 1 125 1 302 1 
170 1 228 2 163 1 273 1 116 1 278 1 287 1 40 1 377 1 379 1 41 1 365 1 288 2 266 1 302 1 
228 1 18 1 288 1 318 1 206 1 
228 2 163 1 101 1 288 2 318 1 206 1 176 1 266 1 
228 1 288 1 206 1 
149 1 170 1 228 1 273 1 278 1 287 1 379 1 41 1 365 1 318 1 288 1 54 1 56 1 159 1 
163 1 
228 2 163 1 288 2 318 1 206 1 176 1 266 1 144 1 
228 5 163 1 62 1 130 1 176 1 362 1 363 2 167 1 85 1 17 1 111 2 318 2 288 5 301 1 206 2 225 1 192 1 266 1 160 2 
185 1 
170 2 273 1 278 2 287 1 67 1 298 2 379 2 41 1 74 1 
373 1 361 1 
170 1 305 1 229 1 12 1 65 1 132 1 278 1 165 1 298 1 341 1 182 1 366 1 291 1 381 1 322 1 92 1 
305 1 170 2 323 1 229 1 273 1 308 1 65 1 12 1 132 1 278 2 379 1 341 1 41 1 182 1 104 1 366 1 291 1 381 1 322 1 92 1 
170 3 379 3 41 3 273 3 104 1 278 3 287 1 298 1 
170 1 379 1 41 1 273 1 365 1 56 1 278 1 
170 1 379 1 41 1 273 1 365 1 74 1 278 1 287 1 67 1 
37 1 273 3 116 1 65 1 275 2 120 1 25 1 278 4 40 1 298 1 355 1 41 3 356 1 43 1 104 1 74 1 302 1 305 1 170 4 228 1 229 1 308 1 32 1 12 1 132 1 49 1 287 2 133 1 377 1 379 3 341 1 182 1 53 1 365 1 288 1 54 1 366 1 184 1 22 1 291 1 381 1 322 1 211 1 92 1 
170 2 379 2 41 1 273 1 104 1 125 1 278 2 122 1 298 1 
170 3 228 1 163 1 273 3 116 1 308 1 81 1 278 3 287 1 40 1 377 1 379 3 41 3 43 1 288 1 365 1 104 2 74 1 302 1 
170 2 323 1 373 1 273 2 278 2 287 1 379 2 41 2 104 1 74 1 
170 1 305 1 229 1 12 1 65 1 132 1 278 1 298 1 341 1 182 1 366 1 291 1 381 1 322 1 92 1 
170 1 305 1 229 1 12 1 215 1 65 1 132 1 278 1 298 1 166 1 341 1 182 1 366 1 381 1 92 1 
37 2 38 1 63 1 242 1 2 1 275 2 25 1 370 1 142 1 143 1 356 4 300 1 7 1 31 2 373 2 32 1 361 2 49 1 33 1 53 1 184 1 22 1 136 1 
170 1 379 1 116 1 41 1 273 1 365 1 281 1 278 1 
170 5 273 4 308 1 278 5 122 1 287 1 298 1 379 5 41 4 20 1 104 2 125 1 74 1 320 1 
170 2 379 2 41 2 273 2 281 1 365 1 56 1 278 2 
191 1 14 1 
191 1 14 1 
114 1 199 1 
114 1 199 1 
114 1 199 1 
344 1 191 1 14 1 
344 1 191 1 14 1 
191 1 14 1 245 1 
114 1 199 1 138 1 191 2 14 2 107 1 
344 1 191 1 14 1 
296 1 191 1 14 1 
296 1 191 1 14 1 
296 1 191 1 14 1 
284 1 228 2 163 1 189 2 64 2 138 1 191 2 14 2 261 1 155 3 343 1 26 1 288 2 183 1 321 1 382 1 380 2 44 2 240 2 
273 2 64 1 191 1 278 2 298 1 245 1 246 1 145 1 124 1 41 2 105 1 44 1 258 1 170 2 228 1 14 1 155 1 261 1 379 2 288 1 237 1 380 1 240 1 187 1 
279 1 368 1 84 1 
279 1 129 1 368 1 
134 1 315 1 279 3 129 1 339 1 84 2 
134 1 315 1 279 2 129 1 172 1 84 1 
315 1 134 2 279 2 129 1 84 1 
293 2 163 2 137 2 370 1 98 1 246 1 143 1 124 1 299 1 300 1 225 3 8 1 9 1 196 3 228 5 176 1 376 2 233 1 363 1 85 2 17 1 33 1 111 1 288 5 318 4 264 1 206 1 160 1 266 1 347 1 90 1 187 1 
293 6 163 5 137 6 350 1 370 3 98 3 143 3 124 4 332 5 102 1 299 3 300 3 301 1 225 8 79 1 9 2 196 9 228 9 176 1 363 2 85 6 17 1 33 3 18 5 51 1 111 2 288 9 318 7 264 2 206 6 87 1 266 1 160 2 90 1 268 1 
293 2 163 3 137 2 370 1 98 2 143 1 124 1 299 1 300 1 301 1 225 3 8 1 9 1 196 4 228 3 376 1 233 1 363 1 85 2 33 1 111 1 318 2 288 3 264 1 266 1 160 1 
293 4 163 4 137 4 350 1 370 2 98 3 143 2 124 2 299 2 300 2 301 1 225 5 8 1 79 1 9 1 196 7 228 4 376 2 233 1 363 1 85 4 33 2 111 1 288 4 264 1 318 3 266 1 160 1 268 1 
185 1 
366 1 327 1 
141 1 
305 1 366 1 
305 1 366 3 65 1 80 1 178 1 147 2 
305 1 366 1 65 1 
366 1 193 1 
37 3 38 2 31 4 242 3 96 1 310 1 370 1 328 1 314 2 33 1 356 7 28 1 6 1 76 1 59 1 334 1 348 1 
37 3 38 2 31 4 242 3 96 1 310 1 370 1 328 1 314 2 33 1 356 7 28 1 6 1 76 1 59 1 334 1 348 1 
37 3 38 2 31 4 242 3 96 1 310 1 370 1 328 1 314 2 33 1 356 7 236 1 28 1 6 1 76 1 59 1 334 1 348 1 
108 1 37 10 197 1 38 1 31 10 242 4 310 1 13 1 352 3 370 3 66 1 314 1 143 3 181 1 33 3 356 20 299 3 300 3 34 1 76 2 89 1 303 4 334 3 
37 5 38 3 242 5 276 1 275 2 25 1 370 2 328 1 356 11 220 1 28 1 6 1 76 1 334 2 31 6 32 1 260 1 310 1 314 1 181 1 33 2 53 1 184 1 59 1 348 1 
23 1 115 1 214 1 190 1 326 1 279 2 372 1 42 1 249 1 222 1 29 1 106 1 282 1 194 1 227 1 169 2 129 1 229 1 153 1 339 1 12 1 132 1 262 1 84 1 340 1 341 1 35 1 239 2 368 1 92 1 
23 1 115 1 214 1 119 1 190 1 326 1 279 2 372 1 42 1 29 1 106 1 194 1 227 1 169 3 129 1 229 1 339 1 153 2 12 1 132 1 262 1 84 1 340 1 341 1 35 1 239 3 267 1 368 1 208 1 92 1 
115 1 214 1 326 1 279 2 372 1 42 1 106 1 194 1 227 1 169 2 129 1 229 1 153 2 339 1 12 1 132 1 84 1 340 1 341 1 35 1 239 2 267 1 208 1 368 1 92 1 
23 1 369 1 214 2 119 1 354 1 3 1 42 2 372 2 194 2 78 1 169 1 305 1 306 1 229 1 46 1 12 1 132 1 262 1 341 1 182 1 366 1 239 1 92 1 
23 1 129 1 229 1 115 1 339 1 214 1 190 1 12 1 132 1 262 1 84 1 279 2 341 1 42 1 372 1 249 1 222 1 35 1 29 1 106 1 239 1 194 1 267 1 368 1 169 1 92 1 
200 1 
188 1 241 2 354 1 40 1 98 2 195 1 302 1 255 1 9 1 196 2 305 1 152 2 46 1 12 2 15 2 312 1 363 1 156 2 17 1 111 1 19 1 364 1 365 1 206 6 366 1 266 1 160 1 163 2 116 1 164 1 278 1 123 1 225 2 125 1 226 1 127 1 170 1 228 5 229 1 171 1 131 2 230 2 175 4 176 3 132 2 232 1 83 2 377 1 85 2 379 1 341 1 182 2 288 5 292 1 92 2 
116 1 278 1 40 1 144 1 125 1 226 1 302 1 255 1 127 1 170 1 228 3 171 1 175 2 176 1 377 1 156 1 379 1 19 1 288 3 365 1 206 2 292 1 
163 1 116 1 278 1 40 1 144 1 125 1 226 1 302 1 255 1 127 1 170 1 228 3 171 1 175 3 230 1 176 1 377 1 379 1 19 1 288 3 365 1 206 1 266 1 292 1 
241 1 163 1 116 1 278 1 40 1 144 1 125 1 226 1 302 1 255 1 127 1 170 1 228 3 171 1 175 3 230 1 176 1 377 1 156 1 379 1 19 1 288 3 365 1 206 2 266 1 292 1 
1 1 188 1 241 4 40 1 98 2 144 1 255 1 302 1 195 1 152 2 15 2 363 1 156 4 205 1 17 1 19 1 111 1 365 1 206 7 266 5 160 1 209 1 210 1 163 5 116 1 278 1 225 1 125 1 226 1 127 1 170 1 228 5 171 1 131 2 175 6 230 4 176 3 377 1 83 2 379 1 85 1 288 5 135 1 292 1 
188 1 241 2 40 1 98 2 255 1 302 1 195 1 196 2 152 2 15 2 363 1 156 2 17 1 111 1 19 1 365 1 206 4 160 1 266 1 163 2 116 1 278 1 123 1 225 1 125 1 226 1 127 1 170 1 228 4 171 1 131 2 175 4 230 2 176 2 377 1 83 2 379 1 85 1 288 4 292 1 
188 1 241 2 163 1 116 1 278 1 40 1 98 2 225 1 125 1 226 1 195 1 302 1 255 1 127 1 170 1 228 4 171 1 152 2 131 2 230 2 175 4 176 2 15 2 83 2 377 1 363 1 156 2 85 1 379 1 205 1 17 1 19 1 111 1 288 4 365 1 206 4 135 1 266 1 160 1 292 1 209 1 
188 1 241 2 163 1 116 1 278 1 40 1 98 2 225 1 125 1 226 1 195 1 302 1 255 1 127 1 170 1 228 4 171 1 152 2 131 2 230 2 175 4 176 2 15 2 83 2 377 1 363 1 156 2 85 1 379 1 205 1 17 1 19 1 111 1 288 4 365 1 206 4 135 1 266 1 160 1 292 1 209 1 
241 2 163 1 116 1 243 1 353 2 278 1 40 1 225 1 125 1 226 1 195 1 302 1 255 1 127 1 196 2 170 1 228 4 171 1 152 2 230 2 175 4 176 2 83 2 377 1 363 1 156 2 85 1 379 1 17 1 19 1 111 1 288 4 365 1 206 4 319 2 21 1 266 1 289 1 160 1 292 1 209 1 
188 1 1 1 241 3 163 1 116 1 278 1 40 1 98 2 225 1 125 1 226 1 195 1 302 1 255 1 127 1 170 1 228 4 171 1 152 2 131 2 175 5 230 3 176 2 15 2 83 2 377 1 363 1 156 3 85 1 379 1 17 1 205 1 111 1 19 1 288 4 365 1 135 1 206 5 266 1 160 1 292 1 209 1 
188 1 1 1 241 3 163 1 116 1 278 1 40 1 98 2 225 1 125 1 226 1 195 1 302 1 255 1 127 1 170 1 228 4 171 1 152 2 131 2 175 5 230 3 176 2 15 2 83 2 377 1 363 1 156 3 85 1 379 1 17 1 205 1 111 1 19 1 288 4 365 1 135 1 206 5 266 1 160 1 292 1 209 1 
241 2 353 2 40 1 255 1 302 1 195 1 196 2 152 2 363 1 156 2 17 1 111 1 19 1 365 1 21 1 319 2 206 4 160 1 266 1 163 1 116 1 278 1 123 1 225 1 125 1 226 1 127 1 170 1 228 4 171 1 175 4 230 2 176 2 377 1 83 2 379 1 85 1 288 4 292 1 
63 1 53 1 32 1 275 2 184 1 25 1 185 1 22 1 49 1 
37 5 38 1 242 2 275 4 120 1 25 2 352 2 370 2 298 1 143 2 247 1 4 1 356 11 299 2 300 1 303 2 334 1 335 1 109 1 373 8 31 6 32 2 361 8 49 1 313 1 33 1 53 2 365 1 34 1 184 2 22 2 272 1 
36 1 37 1 273 1 295 1 65 1 275 2 165 1 25 1 278 2 120 1 298 1 41 1 356 2 104 1 305 1 170 2 229 1 373 1 31 1 360 1 308 1 32 1 12 1 132 1 49 1 379 1 341 1 204 1 182 1 53 1 366 1 184 1 291 1 22 1 381 1 322 1 92 1 272 1 
37 10 38 4 242 6 244 2 298 2 143 2 41 1 356 20 299 2 104 1 300 2 6 1 305 2 308 1 12 1 47 1 361 7 49 3 314 1 204 1 317 1 158 2 53 3 366 2 112 2 22 3 59 1 322 2 272 1 273 1 65 2 275 6 120 1 278 3 25 3 370 3 328 1 28 1 334 2 170 3 229 2 373 7 31 10 285 2 32 3 132 1 133 2 379 1 341 2 33 3 182 1 184 3 291 2 381 2 348 1 92 1 
37 1 273 1 63 1 275 4 278 1 25 2 120 1 354 1 70 1 371 2 331 1 41 1 356 2 104 1 282 1 148 1 358 1 170 1 305 2 229 2 31 1 46 1 32 2 12 8 132 7 375 1 49 2 286 1 379 1 341 2 204 1 182 2 53 2 366 3 57 1 184 2 267 1 22 2 92 8 
37 2 38 1 273 1 242 1 275 2 25 1 278 1 370 1 143 1 41 1 356 3 299 1 73 1 300 1 74 1 170 1 373 1 31 1 32 1 361 1 49 1 287 1 379 1 33 1 53 1 184 1 22 1 272 1 
373 1 31 2 242 1 63 1 32 1 275 2 361 1 25 1 49 1 370 1 143 1 356 2 53 1 184 1 7 1 22 1 334 1 
37 2 38 1 373 1 242 1 63 1 32 1 275 2 361 1 25 1 49 1 33 1 356 2 53 1 300 1 184 1 22 1 136 1 
37 2 38 1 63 1 242 2 275 2 25 1 370 1 143 1 356 4 299 1 300 1 334 1 31 2 373 2 32 1 361 2 49 1 33 1 53 1 184 1 22 1 
373 1 31 2 242 1 32 1 275 2 361 1 25 1 286 1 49 1 370 1 143 1 356 2 53 1 184 1 7 1 22 1 334 1 
37 2 38 1 373 1 242 1 32 1 275 2 361 1 25 1 286 1 49 1 33 1 356 2 53 1 300 1 184 1 22 1 136 1 
37 2 38 1 373 2 31 2 242 1 32 1 275 2 361 2 25 1 286 1 49 1 370 1 143 1 33 1 356 4 53 1 299 1 300 1 184 1 22 1 
37 2 38 1 373 2 31 2 242 2 32 1 275 2 361 2 25 1 49 1 370 1 143 1 33 1 356 4 53 1 299 1 300 1 184 1 22 1 334 1 
37 1 65 1 275 2 278 1 25 1 120 1 298 1 356 2 305 1 170 1 31 1 229 1 32 1 12 1 132 1 49 1 133 1 204 1 341 1 182 1 53 1 366 1 184 1 291 1 22 1 381 1 322 1 92 1 
37 1 65 1 215 1 275 2 278 1 25 1 120 1 298 1 166 1 356 2 305 1 170 1 31 1 229 1 32 1 12 1 132 1 49 1 180 1 204 1 341 1 182 1 53 1 366 1 184 1 22 1 381 1 92 1 
37 2 38 1 242 2 275 2 25 1 370 1 143 1 356 4 299 1 300 1 334 1 31 2 373 2 32 1 361 2 49 1 33 1 53 1 184 1 22 1 272 1 
37 2 38 1 242 2 65 1 275 2 278 1 25 1 370 1 143 1 356 4 299 1 300 1 282 1 334 1 305 1 170 1 373 2 31 2 229 1 32 1 12 1 132 1 361 2 49 1 133 1 341 1 33 1 53 1 366 1 184 1 112 1 291 1 22 1 381 1 322 1 92 1 
37 1 273 1 242 1 275 2 25 1 278 1 370 1 143 1 41 1 356 3 299 1 300 1 224 1 74 1 334 1 170 1 31 2 373 1 32 1 361 1 49 1 287 1 379 1 33 1 53 1 184 1 22 1 272 1 
37 10 38 3 242 6 275 4 325 1 25 2 352 1 370 3 143 3 5 2 356 19 220 1 299 3 223 1 300 3 303 2 334 3 11 1 31 9 32 2 177 2 231 1 33 3 53 2 34 1 367 1 184 2 89 1 212 1 91 1 
37 8 38 1 242 2 275 2 325 1 25 1 352 2 370 2 69 1 143 2 5 1 248 1 356 18 220 1 299 2 223 2 300 1 256 1 303 2 334 1 11 2 31 10 307 1 32 1 374 1 177 2 181 2 33 1 53 1 367 1 184 1 89 2 60 1 91 1 
37 17 38 2 242 5 275 4 325 1 25 2 352 3 370 4 69 1 143 4 5 1 248 1 356 32 220 1 299 4 223 2 300 4 256 1 303 4 334 3 150 1 11 1 31 15 307 1 32 2 374 1 177 3 181 1 33 4 53 2 34 1 367 1 184 2 89 3 60 1 212 1 91 1 
37 15 38 3 242 6 275 4 325 1 25 2 352 3 370 4 69 1 143 4 5 1 248 1 356 31 220 1 299 4 223 2 300 3 256 1 303 4 334 3 150 1 11 1 31 16 307 1 32 2 374 1 177 3 181 2 33 3 53 2 34 1 367 1 184 2 89 3 60 1 212 1 91 1 
37 24 38 7 242 14 275 2 325 1 25 1 352 4 370 8 328 1 69 1 143 7 5 1 248 1 356 50 220 1 299 7 223 1 300 7 28 1 6 1 256 1 303 4 334 7 335 2 11 1 31 26 307 1 32 1 374 1 177 3 314 1 181 1 33 8 53 1 34 2 367 1 184 1 89 2 59 1 60 1 348 1 91 1 
284 1 345 1 64 1 138 1 183 1 191 1 14 1 44 1 380 1 240 1 
237 1 245 1 
349 1 64 1 97 1 191 1 14 1 44 1 380 1 240 1 234 1 
284 1 228 1 163 1 189 1 64 1 138 1 191 1 14 1 261 1 155 2 26 1 288 1 183 1 321 1 382 1 380 1 44 1 240 1 
284 1 228 1 163 1 189 1 64 1 138 1 191 1 14 1 261 1 155 2 26 1 288 1 183 1 321 1 382 1 380 1 44 1 240 1 
284 1 228 1 163 1 189 1 64 1 138 1 191 1 14 1 261 1 155 2 26 1 288 1 183 1 321 1 382 1 380 1 44 1 240 1 
316 1 344 1 107 1 
316 1 344 1 107 1 
280 1 296 1 
280 1 296 1 107 1 
145 1 105 1 
189 1 273 2 64 1 278 2 191 1 298 1 245 1 246 1 145 1 124 1 41 2 105 1 44 1 258 1 170 2 228 1 359 1 14 1 155 1 379 2 288 1 318 1 237 1 321 1 380 1 240 1 187 1 
316 1 344 1 
280 1 296 1 107 1 
37 1 139 1 275 2 25 1 278 2 120 1 70 1 371 2 331 1 103 1 356 2 305 1 336 1 170 2 128 1 229 1 31 1 32 1 12 2 132 2 49 1 202 1 379 2 341 1 204 1 53 1 366 1 184 1 22 1 92 2 272 1 
129 1 229 1 115 1 339 1 12 2 132 2 24 1 330 1 84 1 279 2 341 1 372 1 29 1 106 1 267 1 282 1 368 1 92 2 10 1 
129 1 115 1 229 1 339 1 12 1 132 1 330 1 84 1 279 2 341 1 372 1 221 1 29 1 106 1 267 1 368 1 92 1 
305 1 229 1 46 1 12 1 132 1 24 1 354 1 341 1 3 1 372 1 182 1 366 1 126 1 92 1 
129 1 115 1 229 1 339 1 12 1 132 1 24 1 330 1 84 1 279 2 341 1 372 1 29 1 106 1 267 1 368 1 92 1 10 1 
162 1 
185 1 
188 1 163 2 98 1 225 1 196 1 228 1 131 1 176 1 15 1 363 1 85 1 17 1 111 1 288 1 206 1 160 1 266 1 
293 6 137 6 244 2 98 6 143 2 299 2 300 2 192 1 357 1 147 2 302 2 193 1 9 2 305 2 259 2 196 12 12 3 154 1 311 1 363 4 17 4 157 2 111 4 366 8 206 5 266 2 160 4 163 8 117 2 274 2 164 1 65 2 370 2 327 3 217 2 68 2 225 9 282 1 228 5 229 2 130 1 80 1 132 3 176 3 82 1 85 8 341 3 342 1 86 1 33 2 182 1 288 5 290 2 92 3 
293 5 163 5 137 5 164 1 297 1 352 1 370 2 121 1 68 1 217 2 98 3 143 2 248 1 299 2 300 2 225 8 256 1 303 1 9 1 196 6 228 1 307 1 176 1 374 1 363 2 85 5 17 2 33 2 111 2 288 1 206 1 160 2 266 2 89 1 60 1 
273 1 278 1 370 2 328 1 68 1 217 2 41 1 225 2 6 1 170 1 149 1 228 1 260 1 287 1 363 1 85 2 379 1 17 1 33 1 111 1 365 1 288 1 54 1 135 1 56 1 160 1 159 1 348 1 
163 1 130 1 363 1 85 1 17 1 111 1 192 1 225 1 160 1 266 1 
196 10 293 5 163 5 137 5 244 1 370 2 68 1 217 2 98 5 143 2 85 5 33 2 299 2 300 2 225 5 
228 1 163 1 288 1 206 1 176 1 266 1 
164 2 354 1 301 1 225 2 9 2 305 1 228 3 229 1 46 1 12 4 132 4 176 2 232 1 82 1 363 2 85 2 341 1 17 1 86 2 52 1 182 2 111 2 364 1 288 3 366 1 206 4 160 2 161 1 92 4 
37 1 273 2 65 1 275 2 120 1 278 3 25 1 298 1 41 2 356 1 170 3 305 1 229 1 32 1 12 1 132 1 49 1 287 2 133 1 379 2 341 1 182 1 53 1 54 1 366 1 184 1 291 1 22 1 381 1 211 1 322 1 92 1 
196 4 293 2 163 4 137 2 164 1 314 1 98 2 363 1 85 2 17 1 111 1 225 1 160 1 266 2 9 1 
251 1 44 1 380 1 
251 1 44 1 380 1 
145 1 284 1 179 1 44 1 380 1 
251 1 44 1 380 1 
235 1 44 1 380 1 
235 1 44 1 380 1 
235 1 44 1 380 1 
44 1 380 1 
191 1 14 1 
37 5 38 2 242 4 275 2 25 1 370 2 328 1 356 10 28 1 6 1 334 2 31 5 32 1 260 1 181 1 33 2 53 1 184 1 59 1 348 1 
185 1 
37 2 38 1 31 2 242 2 151 1 32 1 275 2 25 1 370 1 143 1 33 1 356 4 53 1 299 1 300 1 184 1 334 1 
37 4 38 1 31 3 242 2 352 1 370 1 143 1 33 1 356 7 299 1 300 1 34 1 89 1 303 2 334 1 
37 10 38 3 242 5 352 2 370 4 328 1 143 2 356 20 299 2 300 2 28 1 6 1 303 2 334 2 335 1 31 10 260 1 313 1 181 1 33 4 34 1 59 1 348 1 
37 1 356 1 303 1 
31 1 356 1 352 1 
37 3 31 3 38 2 151 1 242 3 32 1 275 2 244 1 25 1 370 1 143 1 33 1 356 6 53 1 299 1 300 1 184 1 334 1 
37 6 38 1 242 2 275 2 352 1 25 1 370 2 143 2 248 1 356 12 220 1 299 2 300 2 303 1 256 1 334 1 31 6 307 1 32 1 374 1 33 2 53 1 184 1 89 1 60 1 
37 3 31 3 38 1 242 2 370 1 328 1 33 1 356 6 6 1 334 1 348 1 
181 1 37 1 356 1 277 1 
37 5 38 3 31 5 242 5 32 1 275 2 260 1 25 1 370 2 328 1 33 2 356 10 53 1 220 1 184 1 6 2 334 2 348 2 
31 2 242 1 32 1 275 2 25 1 370 1 143 1 356 2 220 1 53 1 184 1 334 1 
37 2 38 1 31 2 242 2 32 1 275 2 25 1 370 1 143 1 33 1 356 4 220 1 53 1 299 1 300 1 184 1 334 1 
37 2 38 1 31 1 242 2 32 2 275 4 277 1 25 2 181 1 356 3 220 1 53 2 184 2 6 1 334 1 212 1 348 1 
37 12 38 3 242 6 275 6 25 3 352 3 370 4 328 1 66 1 143 2 356 24 220 1 299 2 300 2 28 1 6 1 303 3 334 3 108 1 31 12 197 1 151 1 32 3 260 1 181 1 33 4 53 3 184 3 89 1 59 1 348 1 212 1 
37 4 38 2 242 2 275 2 352 1 25 1 370 1 328 1 356 8 220 1 28 1 6 1 303 1 31 4 307 1 32 1 314 1 33 1 53 1 184 1 89 1 59 1 348 1 
37 5 38 2 242 3 275 4 25 2 352 1 370 2 328 1 143 1 356 11 220 1 299 1 28 1 6 1 303 2 334 1 31 6 307 1 151 1 32 2 314 1 33 1 53 2 34 1 184 2 89 1 59 1 348 1 
37 7 38 1 242 2 275 4 352 1 25 2 370 2 143 2 248 1 356 13 220 1 299 2 300 2 303 1 256 1 334 1 31 6 151 1 307 1 32 2 374 1 181 1 33 2 53 2 184 2 89 1 60 1 
37 4 38 1 242 2 275 4 352 1 25 2 370 2 143 2 248 1 356 11 220 1 299 2 300 1 303 1 256 1 334 1 31 7 151 1 307 1 32 2 374 1 181 1 33 1 53 2 184 2 89 1 60 1 
37 4 38 2 242 2 275 2 352 1 25 1 370 1 328 1 356 8 220 1 28 1 6 1 303 1 31 4 307 1 32 1 314 1 33 1 53 1 184 1 89 1 59 1 348 1 
37 6 38 1 242 2 275 2 352 1 25 1 370 2 143 2 248 1 356 12 220 1 299 2 300 2 303 1 256 1 334 1 31 6 307 1 32 1 374 1 33 2 53 1 184 1 89 1 60 1 
37 5 38 1 242 2 275 4 25 2 352 1 370 2 143 2 248 1 356 12 220 1 299 2 300 1 256 1 303 1 334 1 31 7 307 1 151 1 32 2 374 1 181 2 33 1 53 2 184 2 89 1 60 1 
37 5 38 2 242 4 275 4 25 2 352 1 370 2 143 2 248 1 356 12 220 1 299 2 300 1 256 1 303 1 334 2 31 7 307 1 32 2 374 1 181 2 33 1 53 2 184 2 89 1 60 1 212 1 
37 4 38 3 31 3 242 6 370 1 328 1 33 1 356 7 28 1 6 3 59 2 334 3 348 3 
37 5 38 1 242 2 275 4 25 2 352 1 370 2 143 2 248 1 356 12 220 1 299 2 300 1 256 1 303 1 334 1 31 7 307 1 32 2 374 1 181 2 33 1 53 2 184 2 89 1 60 1 212 1 
170 1 379 1 125 1 278 1 58 1 122 1 298 1 
170 1 94 1 201 1 278 1 140 1 122 1 298 1 379 1 219 1 125 1 75 1 58 1 
182 1 12 1 132 1 185 1 92 1 
305 1 170 2 273 1 229 1 65 1 12 1 132 1 278 2 298 1 379 1 341 1 41 1 182 1 104 1 366 1 291 1 381 1 92 1 
273 1 116 1 65 2 278 2 298 1 4 1 41 2 104 1 193 1 170 2 305 2 229 1 12 1 132 1 377 1 379 2 341 1 342 1 86 1 365 2 366 3 291 1 381 1 92 1 
273 1 116 1 65 2 278 2 298 1 166 1 4 1 41 2 104 1 193 1 170 2 305 2 229 1 12 1 132 1 377 1 379 2 341 1 342 1 86 1 365 2 366 3 381 1 92 1 
163 1 273 1 65 1 278 1 327 1 41 1 147 1 193 1 302 1 170 1 149 1 305 1 228 2 229 1 12 1 132 1 287 1 379 1 341 1 342 1 86 1 365 1 54 1 288 2 206 1 366 4 56 1 159 1 238 1 266 1 269 1 92 1 
163 1 273 1 117 1 65 1 278 1 327 1 41 1 147 1 193 1 302 1 170 1 149 1 305 1 228 2 229 1 12 1 132 1 287 1 379 1 341 1 342 1 86 1 365 1 54 1 288 2 206 1 366 4 56 1 159 1 266 1 92 1 
341 1 229 1 12 1 132 1 92 1 358 1 
213 1 305 2 229 2 12 7 80 1 65 1 132 6 375 1 70 1 371 1 341 3 182 2 366 3 57 1 207 1 30 1 267 1 282 1 148 1 358 1 92 7 
37 3 38 2 273 1 242 2 65 1 139 1 275 4 25 2 278 2 370 1 328 1 298 2 41 1 356 6 104 1 28 1 6 1 282 1 305 1 170 2 373 1 31 3 229 1 32 2 12 1 132 1 361 1 49 2 314 1 133 1 379 1 341 1 33 1 158 1 53 2 366 1 184 2 112 1 22 2 291 1 59 1 381 1 322 1 348 1 272 1 92 1 
163 1 117 1 274 1 327 1 225 1 192 1 147 1 302 1 228 3 130 1 12 1 132 1 176 1 82 1 363 2 85 1 17 2 157 1 182 1 111 2 288 3 318 1 366 2 206 2 266 1 160 2 290 1 92 1 
305 1 229 1 12 2 80 1 65 1 132 2 341 2 366 2 357 1 282 1 147 1 358 1 92 2 
305 1 229 1 46 1 338 1 12 4 132 4 354 1 341 1 182 1 366 1 282 1 304 1 92 4 
305 1 229 1 118 1 12 2 65 1 132 2 341 2 86 1 146 1 366 1 207 1 88 1 30 1 92 2 
279 1 129 1 341 1 229 1 115 1 182 1 12 1 132 1 368 1 92 1 
336 1 305 1 229 1 12 2 132 2 70 1 341 1 366 1 282 1 267 1 92 2 
305 2 229 2 46 1 12 5 132 4 375 1 354 1 70 1 341 2 86 1 182 1 366 3 282 1 148 1 304 1 92 5 
305 2 229 2 46 1 174 1 12 5 132 4 354 1 70 1 341 2 86 1 182 1 366 3 282 1 148 1 304 1 92 5 
305 1 170 2 273 1 229 1 65 1 12 1 132 1 278 2 298 1 166 1 379 1 341 1 41 1 182 1 104 1 366 1 381 1 92 1 
213 1 305 1 229 1 12 1 80 1 65 1 132 1 341 2 86 1 366 1 207 1 30 1 92 1 
170 1 128 1 113 1 379 1 103 1 39 1 252 1 278 1 202 1 
252 1 333 1 100 1 
113 1 61 1 39 1 252 1 298 1 
113 2 228 2 163 1 116 1 61 2 39 2 377 1 40 1 298 1 100 1 346 1 43 1 365 1 252 1 318 1 288 2 266 1 333 1 302 1 
185 1 
23 1 340 1 239 1 326 1 227 1 169 1 262 1 
214 1 239 1 194 1 
23 1 326 1 218 1 262 1 99 2 340 1 72 1 222 1 239 3 77 1 227 1 169 3 
23 1 340 1 153 1 253 1 239 2 326 1 227 1 169 2 262 1 
93 1 279 1 23 1 340 1 222 1 239 1 368 1 329 1 169 1 262 1 84 1 
23 1 340 1 222 1 239 1 227 1 169 1 262 1 
23 1 222 1 239 1 326 1 227 2 169 1 262 1 
23 2 340 1 309 1 222 1 239 2 227 1 270 1 169 2 262 2 378 1 
0 1 93 1 23 1 153 2 326 1 262 1 203 1 50 1 340 2 222 1 239 3 227 1 169 3 
23 1 129 1 339 1 153 1 326 1 262 1 84 1 279 2 340 1 222 1 250 1 239 2 227 1 368 1 169 2 
93 1 50 1 23 2 340 2 71 1 153 2 222 1 253 1 239 4 326 1 227 1 169 4 262 2 
23 1 340 1 222 1 239 1 326 1 227 1 169 1 262 1 
283 1 93 1 23 1 153 2 326 2 262 1 99 1 50 1 340 3 72 1 239 4 77 1 227 2 169 4 
23 1 340 1 337 1 153 1 222 1 324 1 239 2 326 1 227 1 169 2 262 1 257 1 
23 1 326 1 16 1 262 1 99 2 340 1 72 2 222 1 239 3 77 1 227 1 169 3 
168 1 340 2 351 1 27 2 
23 1 222 1 265 1 239 1 169 1 262 1 
0 1 23 1 340 1 153 1 222 1 239 2 326 1 227 1 169 2 262 1 
186 1 
23 1 340 1 222 1 239 1 326 1 227 1 169 1 262 1 
0 1 23 1 153 1 326 1 262 1 99 1 340 1 222 1 239 3 227 1 169 3 
283 1 93 1 50 1 340 1 
340 1 227 1 

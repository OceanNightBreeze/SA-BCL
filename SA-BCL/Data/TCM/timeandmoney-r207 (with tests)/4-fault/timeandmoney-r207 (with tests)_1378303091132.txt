#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 362 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 127 345 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
177 1 322 9 57 6 80 1 162 1 272 1 326 1 342 2 200 2 182 9 347 1 37 1 67 3 13 1 187 1 188 2 374 2 206 1 255 1 313 1 207 1 194 2 316 5 21 2 174 1 125 4 159 2 97 1 
177 1 322 9 57 6 80 1 162 1 272 1 326 1 342 2 200 2 182 9 347 1 37 1 67 3 13 1 187 1 188 2 374 2 206 1 255 1 313 1 207 1 194 2 316 5 21 2 174 1 125 4 159 2 97 1 
177 1 322 10 57 7 80 1 162 1 272 1 326 1 342 2 200 2 182 10 347 1 37 1 67 4 13 1 187 1 188 2 374 2 206 1 255 1 313 1 207 1 194 2 316 6 21 2 174 1 125 5 159 2 97 1 
177 1 322 7 57 4 80 1 162 1 272 1 326 1 342 2 200 2 182 7 347 1 67 2 13 1 187 1 188 2 374 2 206 1 255 1 313 1 207 1 194 2 316 4 21 1 174 1 125 3 159 2 97 1 
188 1 322 4 57 3 374 1 162 1 206 1 272 1 342 1 200 1 194 1 316 3 21 2 182 4 347 1 37 1 67 1 125 2 13 1 
87 1 322 2 374 1 162 1 342 1 255 1 200 1 194 1 316 1 105 1 182 2 25 1 347 1 174 1 13 1 159 1 
322 3 57 1 80 1 162 1 200 2 194 2 316 2 182 3 347 1 67 1 125 1 13 1 159 1 
322 9 57 7 80 1 162 1 272 1 342 1 200 2 182 9 140 1 347 1 37 1 67 3 13 1 17 1 188 1 374 1 206 1 313 1 207 1 194 2 316 5 21 2 125 4 159 1 
322 9 57 7 80 1 162 1 272 1 342 1 200 2 182 9 140 1 347 1 37 1 67 3 13 1 17 1 188 1 374 1 206 1 313 1 207 1 194 2 316 5 21 2 125 4 159 1 
168 1 372 1 225 1 
210 2 353 1 225 1 
254 2 138 1 333 2 309 1 192 2 44 2 366 2 38 2 
341 1 320 2 98 1 303 1 221 1 134 1 100 2 5 1 343 1 62 1 138 1 278 2 226 1 280 1 139 1 363 1 333 2 281 1 12 1 366 3 38 3 39 1 231 1 334 1 254 2 309 1 192 2 44 2 311 1 120 1 314 2 377 1 195 1 48 2 354 1 262 1 157 1 
254 1 373 1 333 1 251 1 309 1 192 1 283 1 44 1 366 1 38 1 
372 1 373 1 286 1 237 1 133 1 192 1 355 1 172 1 225 1 91 1 340 1 218 1 38 1 366 1 
254 1 372 1 373 1 286 1 237 2 192 1 44 1 355 1 172 1 225 1 333 1 340 1 218 2 38 1 366 1 
213 1 85 1 237 1 141 1 218 1 
213 1 372 1 237 2 141 1 218 2 357 1 158 1 225 1 
213 1 237 1 218 1 
254 1 373 1 237 1 309 1 192 1 44 1 8 1 251 1 333 1 141 1 283 1 218 1 38 1 366 1 
225 1 
213 1 372 1 237 2 141 1 218 2 357 1 225 1 275 1 
16 1 144 1 372 1 237 5 238 1 89 1 357 1 305 1 82 2 225 1 211 1 213 2 65 1 295 2 141 2 218 5 86 1 285 2 128 1 
168 1 138 1 
254 1 19 1 192 2 44 1 138 2 183 1 333 1 38 2 366 2 
99 1 270 1 107 1 
320 1 311 1 120 1 5 1 195 1 138 1 278 1 226 1 363 1 48 1 281 1 12 1 366 1 38 1 231 1 176 1 
320 1 192 1 44 1 311 1 5 1 120 1 257 1 338 1 195 1 226 1 278 1 363 1 48 1 333 1 107 1 281 1 12 1 231 1 38 2 366 2 
254 1 138 1 333 3 192 3 44 3 366 3 38 3 338 1 
373 1 333 1 192 1 283 1 44 1 366 1 38 1 
254 1 373 1 183 1 19 1 333 1 192 1 44 1 366 1 38 1 
341 1 320 1 221 1 134 1 100 2 355 1 5 1 62 1 138 1 226 1 278 1 280 1 183 1 139 1 363 1 333 3 281 1 12 1 231 1 366 4 38 4 334 1 254 2 373 1 286 1 237 1 309 1 192 3 44 3 311 1 288 1 120 1 314 1 172 1 257 1 291 1 338 1 377 1 195 1 48 1 354 1 340 1 262 1 218 1 
138 1 43 1 333 1 133 1 192 2 44 1 366 2 38 2 338 1 
254 1 234 1 373 1 286 1 237 1 192 3 44 3 288 1 355 1 172 1 225 1 257 1 338 2 183 1 333 3 340 1 218 1 38 3 366 3 
254 1 99 1 192 2 44 2 338 1 183 1 333 2 107 1 38 2 366 2 
320 1 311 1 120 1 5 1 195 1 138 1 278 1 226 1 363 1 48 1 281 1 12 1 366 1 38 1 231 1 
320 1 189 1 311 1 120 1 5 1 6 1 195 1 138 1 278 1 363 1 48 1 12 1 366 1 38 1 231 1 
341 2 303 2 31 1 221 1 269 1 99 2 270 2 134 1 100 2 62 1 102 1 280 1 107 2 252 1 186 1 334 1 71 1 117 1 314 4 289 1 155 1 262 1 244 1 51 1 
307 1 373 1 333 1 192 1 44 1 366 1 38 1 172 1 
254 1 43 1 133 1 192 5 135 1 44 4 119 1 257 1 338 2 138 1 183 1 333 4 38 5 366 5 
307 1 373 1 333 2 192 2 283 1 44 2 366 2 38 2 
131 1 327 1 
131 1 327 1 
4 1 224 1 
4 1 224 1 
4 1 224 1 
301 1 131 1 327 1 
131 1 149 1 327 1 
53 1 131 2 4 1 224 1 327 2 265 1 
301 1 131 1 327 1 
301 1 131 1 327 1 
131 1 217 1 327 1 
131 1 217 1 327 1 
131 1 217 1 327 1 
300 1 53 1 302 2 287 2 131 2 237 2 115 2 118 1 356 1 327 2 225 1 46 1 315 3 218 2 219 1 96 1 263 2 79 2 202 1 
130 1 245 1 268 1 29 1 131 1 327 1 137 1 138 1 333 2 38 2 366 2 202 1 287 1 237 1 115 1 192 2 44 2 90 1 149 1 315 1 258 1 218 1 263 1 79 1 
188 1 374 1 342 1 
87 1 374 1 342 1 
87 1 188 2 2 1 190 1 374 3 256 1 
87 1 188 1 190 1 374 2 256 1 369 1 
87 1 188 1 190 2 374 2 256 1 
268 1 29 1 30 1 81 1 357 1 82 1 225 2 328 2 249 1 65 1 141 4 285 1 349 1 186 1 16 2 113 2 372 1 237 5 117 1 353 1 193 1 289 1 258 1 210 3 212 1 211 3 213 1 295 1 216 1 153 2 244 1 218 5 
267 1 268 4 325 1 3 1 357 1 82 2 225 5 9 1 362 1 65 1 85 5 141 7 349 1 285 2 186 3 16 6 144 1 113 6 371 5 372 1 237 9 117 3 353 3 193 2 289 3 210 9 212 2 211 8 214 1 213 6 295 2 216 3 153 6 244 3 218 9 
268 1 30 1 81 1 82 1 225 3 8 1 328 1 333 1 251 1 141 2 283 1 366 1 38 1 285 1 186 1 16 2 144 1 254 1 113 2 373 1 372 1 237 3 309 1 192 1 117 1 44 1 353 2 193 1 289 1 210 4 212 1 211 3 295 1 216 1 153 2 218 3 244 1 
268 1 30 1 81 1 82 1 225 2 328 1 362 1 141 1 285 1 186 1 16 2 144 1 113 2 237 2 117 1 353 2 193 1 289 1 210 4 212 1 211 3 295 1 216 1 153 2 218 2 244 1 
168 1 311 1 72 1 
311 1 110 1 
299 1 
311 1 5 1 
179 1 12 1 72 2 311 3 5 1 112 1 
12 1 311 1 5 1 
104 1 311 1 
341 3 303 4 114 1 117 1 240 2 314 7 102 2 35 1 93 1 346 1 252 3 296 1 109 1 126 1 284 1 186 1 69 1 
341 3 303 4 114 1 117 1 240 2 314 7 102 2 35 1 93 1 346 1 252 3 296 1 109 1 126 1 284 1 186 1 69 1 
341 3 303 4 114 1 117 1 240 2 314 7 102 2 35 1 93 1 346 1 252 3 126 1 296 1 109 1 284 1 197 1 186 1 69 1 
341 15 56 1 303 16 100 2 62 1 34 1 102 5 35 2 280 1 346 2 252 10 109 1 284 1 308 4 186 4 69 5 253 1 334 1 191 1 114 2 240 3 117 4 312 1 314 31 289 3 93 1 216 3 26 3 126 1 262 1 296 2 244 3 50 1 175 1 
341 4 303 5 100 4 61 1 62 2 102 3 35 1 166 1 280 2 346 1 252 4 284 1 186 1 69 1 334 2 114 1 117 1 240 2 314 9 93 1 262 2 296 1 126 1 50 1 
320 1 321 1 322 2 2 1 57 1 162 1 342 1 200 1 181 1 361 1 63 1 278 1 182 2 347 1 13 1 350 1 87 1 188 1 169 1 374 2 120 1 148 1 208 1 194 1 316 1 195 1 48 1 196 1 319 1 159 1 
320 1 321 1 2 1 322 3 57 2 162 1 342 1 359 1 200 1 276 1 361 1 63 1 278 1 182 3 347 1 350 1 203 1 87 1 188 1 169 1 374 2 120 1 148 1 208 1 194 1 316 1 195 1 48 1 196 1 159 1 
320 1 321 1 322 2 2 1 57 2 162 1 342 1 359 1 276 1 361 1 63 1 278 1 182 2 347 1 350 1 87 1 188 1 169 1 374 2 120 1 208 1 316 1 195 1 48 1 159 1 
320 1 350 2 203 1 321 2 322 1 311 1 120 1 5 1 200 1 194 1 195 1 74 1 329 1 278 1 63 2 227 1 182 1 363 1 48 1 11 1 167 1 198 1 159 2 
320 1 321 1 322 1 2 1 342 1 359 1 200 1 181 1 361 1 63 1 278 1 182 1 13 1 350 1 87 1 188 1 169 1 374 2 120 1 148 1 208 1 194 1 195 1 48 1 196 1 159 1 
247 1 
54 2 5 1 165 1 65 1 68 1 16 2 352 4 310 1 353 2 311 1 120 1 172 1 122 1 259 2 20 1 210 2 22 1 74 1 211 2 212 1 213 6 23 1 218 5 264 2 320 2 178 1 132 1 133 1 357 3 355 1 82 1 225 2 330 2 278 2 227 1 331 1 363 2 364 2 38 1 366 1 285 1 233 1 372 1 373 1 286 1 237 5 336 2 192 1 91 1 195 1 295 1 48 2 340 1 243 1 298 2 
178 1 352 2 373 1 286 1 132 1 237 3 133 1 192 1 357 1 355 1 172 1 275 1 91 1 259 1 20 1 213 2 331 1 340 1 243 1 218 3 38 1 366 1 
178 1 132 1 133 1 355 1 357 1 225 1 275 1 330 1 331 1 366 1 38 1 373 1 352 3 372 1 286 1 237 3 192 1 172 1 91 1 20 1 213 1 340 1 243 1 218 3 
178 1 132 1 133 1 357 1 355 1 225 1 275 1 330 1 331 1 366 1 38 1 373 1 352 3 372 1 286 1 237 3 192 1 172 1 91 1 20 1 259 1 213 2 340 1 243 1 218 3 264 1 
54 2 8 1 165 1 65 1 251 1 16 1 254 1 352 4 309 1 310 1 353 2 172 1 259 4 20 1 211 1 213 7 218 5 264 4 178 1 132 1 133 1 355 1 357 3 33 1 82 1 225 1 275 1 330 2 331 1 333 1 364 2 283 1 366 2 38 2 285 1 372 1 373 2 286 1 237 5 239 1 192 2 88 1 336 2 44 1 242 1 91 1 295 1 340 1 243 1 94 1 298 2 
178 1 54 2 132 1 133 1 357 2 355 1 82 1 225 2 330 2 331 1 165 1 65 1 364 2 38 1 366 1 285 1 16 1 372 1 373 1 352 4 286 1 237 4 336 2 310 1 192 1 353 2 172 1 91 1 259 2 20 1 210 2 22 1 211 1 213 4 295 1 340 1 243 1 218 4 264 2 298 2 
54 2 8 1 165 1 65 1 251 1 16 1 254 1 352 4 309 1 310 1 353 2 172 1 20 1 259 2 211 1 213 4 218 4 264 2 178 1 132 1 133 1 355 1 357 2 33 1 82 1 225 1 330 2 331 1 333 1 364 2 283 1 38 2 366 2 285 1 373 2 372 1 286 1 237 4 239 1 192 2 336 2 44 1 91 1 295 1 340 1 243 1 94 1 298 2 
54 2 8 1 165 1 65 1 251 1 16 1 254 1 352 4 309 1 310 1 353 2 172 1 20 1 259 2 211 1 213 4 218 4 264 2 178 1 132 1 133 1 355 1 357 2 33 1 82 1 225 1 330 2 331 1 333 1 364 2 283 1 38 2 366 2 285 1 373 2 372 1 286 1 237 4 239 1 192 2 336 2 44 1 91 1 295 1 340 1 243 1 94 1 298 2 
54 2 8 1 65 1 251 1 16 1 254 1 352 4 309 1 310 1 172 1 20 1 259 2 210 2 211 1 213 4 173 2 218 4 264 2 178 1 132 1 32 2 133 1 223 1 355 1 357 2 82 1 225 1 330 2 331 1 333 1 283 1 38 2 366 2 285 1 235 1 373 2 372 1 286 1 237 4 239 1 192 2 44 1 91 1 295 1 340 1 243 1 297 1 298 2 
54 2 8 1 165 1 65 1 251 1 16 1 254 1 352 5 309 1 310 1 353 2 172 1 259 3 20 1 211 1 213 5 218 4 264 3 178 1 132 1 133 1 355 1 357 2 33 1 82 1 225 1 330 3 331 1 333 1 364 2 283 1 38 2 366 2 285 1 373 2 372 1 286 1 237 4 239 1 88 1 192 2 336 2 44 1 91 1 295 1 340 1 243 1 94 1 298 2 
54 2 8 1 165 1 65 1 251 1 16 1 254 1 352 5 309 1 310 1 353 2 172 1 259 3 20 1 211 1 213 5 218 4 264 3 178 1 132 1 133 1 355 1 357 2 33 1 82 1 225 1 330 3 331 1 333 1 364 2 283 1 38 2 366 2 285 1 373 2 372 1 286 1 237 4 239 1 88 1 192 2 336 2 44 1 91 1 295 1 340 1 243 1 94 1 298 2 
178 1 54 2 132 1 32 2 133 1 357 2 355 1 82 1 225 1 330 2 331 1 65 1 38 1 366 1 285 1 16 1 372 1 373 1 352 4 286 1 237 4 310 1 192 1 172 1 91 1 259 2 20 1 210 2 22 1 211 1 213 4 295 1 340 1 173 2 243 1 218 4 297 1 264 2 298 2 
341 3 168 1 334 1 303 3 221 1 99 1 270 1 114 1 240 1 117 1 134 1 100 2 314 6 62 1 102 2 35 1 138 2 93 1 280 1 107 1 252 2 262 1 126 1 284 1 51 1 186 1 
341 6 221 1 303 8 99 4 270 11 134 2 100 4 62 2 102 1 138 1 280 2 332 1 107 11 252 2 308 3 40 1 186 1 69 1 334 2 191 1 117 2 312 1 314 14 289 1 377 1 216 2 26 3 261 1 262 2 244 2 157 1 52 1 129 1 
320 1 341 1 221 1 303 1 99 1 134 1 100 2 5 1 62 1 138 1 226 1 278 1 363 1 84 1 280 1 332 1 333 1 281 1 12 1 231 1 366 2 38 2 334 1 146 1 192 1 44 1 311 1 120 1 314 2 257 1 338 1 377 1 195 1 48 1 317 1 262 1 157 1 176 1 
341 10 0 2 55 2 303 10 99 7 100 6 5 2 62 3 102 4 107 7 12 2 252 8 69 4 204 2 114 1 117 3 311 2 120 2 314 20 257 1 354 2 216 2 126 1 262 3 320 3 323 1 221 3 270 7 134 3 359 1 35 1 138 2 278 3 226 2 363 1 332 1 280 3 333 1 281 2 230 1 284 1 38 3 366 3 231 2 367 1 186 3 334 3 192 1 240 1 44 1 290 2 289 2 338 1 377 1 195 2 93 1 48 3 244 2 157 1 
320 8 341 1 199 1 221 2 303 1 60 1 134 2 100 4 5 2 359 1 343 2 62 2 278 7 227 1 363 2 280 2 333 1 366 1 38 1 232 1 334 2 236 1 192 1 44 1 311 3 241 1 120 2 314 2 338 1 377 1 195 2 75 1 74 1 48 8 77 1 319 1 262 2 157 1 51 1 
341 2 334 1 254 1 303 1 221 1 99 1 270 1 192 1 117 1 134 1 44 1 100 2 314 3 289 1 62 1 102 1 332 1 280 1 183 1 333 1 216 1 107 1 252 1 244 1 262 1 366 1 38 1 368 1 186 1 
334 1 221 1 303 2 99 1 270 1 134 1 117 1 100 2 314 2 62 1 280 1 107 1 252 1 155 1 262 1 244 1 51 1 69 1 
341 2 334 1 221 1 31 1 99 1 270 1 134 1 100 2 314 2 62 1 289 1 102 1 280 1 107 1 252 1 262 1 51 1 186 1 
341 2 334 1 221 1 303 2 99 2 270 2 134 1 117 1 100 2 314 4 289 1 62 1 102 1 280 1 216 1 107 2 252 2 262 1 244 1 51 1 186 1 69 1 
199 1 334 1 221 1 303 2 99 1 270 1 134 1 117 1 100 2 314 2 62 1 280 1 107 1 252 1 155 1 262 1 244 1 69 1 
341 2 199 1 334 1 221 1 31 1 99 1 270 1 134 1 100 2 314 2 62 1 289 1 102 1 280 1 107 1 252 1 262 1 186 1 
341 2 199 1 334 1 221 1 303 2 99 2 270 2 134 1 117 1 100 2 314 4 289 1 62 1 102 1 280 1 216 1 107 2 252 2 262 1 244 1 186 1 69 1 
341 2 334 1 221 1 303 2 99 2 270 2 134 1 117 1 100 2 314 4 289 1 62 1 102 1 280 1 216 1 107 2 252 2 262 1 244 1 186 1 69 1 
320 1 341 1 303 1 221 1 134 1 100 2 5 1 62 1 138 1 226 1 278 1 363 1 280 1 281 1 12 1 231 1 38 1 366 1 334 1 311 1 120 1 314 2 377 1 195 1 48 1 354 1 262 1 157 1 
320 1 341 1 303 1 221 1 134 1 100 2 5 1 62 1 6 1 138 1 36 1 278 1 363 1 280 1 12 1 231 1 38 1 366 1 334 1 189 1 311 1 120 1 314 2 377 1 195 1 48 1 262 1 157 1 
341 2 334 1 221 1 303 2 99 2 270 2 134 1 117 1 100 2 314 4 289 1 62 1 102 1 332 1 280 1 216 1 107 2 252 2 262 1 244 1 186 1 69 1 
341 2 320 1 303 2 221 1 99 2 270 2 134 1 100 2 5 1 62 1 102 1 226 1 278 1 280 1 107 2 281 1 252 2 12 1 231 1 38 1 366 1 186 1 69 1 334 1 117 1 311 1 120 1 314 4 289 1 290 1 195 1 48 1 354 1 216 1 244 1 319 1 262 1 
341 1 221 1 303 2 99 1 270 1 134 1 100 2 62 1 183 1 280 1 332 1 333 1 107 1 252 1 38 1 366 1 186 1 69 1 254 1 334 1 351 1 192 1 117 1 44 1 314 3 289 1 216 1 262 1 244 1 
341 17 303 15 59 1 100 6 61 1 201 1 62 3 7 1 102 2 345 1 163 1 83 1 280 3 142 1 252 5 308 4 186 4 69 3 42 3 334 3 191 3 335 1 117 4 312 1 73 1 314 32 289 4 150 2 92 1 215 1 216 4 26 3 262 3 244 4 127 1 50 1 380 1 
341 16 303 17 59 1 100 8 61 1 201 1 62 4 7 1 102 3 345 1 163 1 83 1 280 4 142 1 252 6 308 4 186 3 69 3 42 4 334 4 191 3 335 1 117 4 312 1 73 1 314 33 289 3 150 2 92 1 215 1 216 4 26 3 262 4 244 4 127 1 50 2 380 1 
341 22 303 24 59 1 100 4 61 1 201 1 62 2 102 6 345 1 35 1 163 1 83 1 280 2 142 1 252 12 284 1 308 4 186 7 69 6 42 3 334 2 191 2 114 1 240 1 117 7 312 2 73 1 314 46 289 6 150 1 92 1 93 1 215 1 216 6 26 4 126 1 262 2 244 6 127 1 50 1 380 1 129 2 
341 10 303 9 59 1 100 4 61 1 62 2 7 1 102 3 345 1 163 1 280 2 252 6 308 2 186 3 69 3 42 2 334 2 191 1 117 3 312 1 73 1 314 19 289 3 150 1 216 3 26 1 262 2 244 3 127 2 220 1 
341 11 303 13 59 2 100 6 61 1 62 3 201 1 102 1 345 1 163 1 83 1 280 3 142 1 252 2 308 2 186 2 69 1 42 3 334 3 191 2 117 3 73 1 314 24 289 2 150 2 92 1 215 1 216 3 26 2 262 3 244 3 127 1 50 2 380 1 
53 1 131 1 287 1 115 1 219 1 95 1 327 1 263 1 79 1 46 1 
130 1 149 1 
131 1 287 1 273 1 115 1 108 1 327 1 263 1 121 1 79 1 
300 1 53 1 302 1 287 1 131 1 237 1 115 1 118 1 327 1 225 1 46 1 315 2 218 1 219 1 96 1 263 1 79 1 202 1 
300 1 53 1 302 1 287 1 131 1 237 1 115 1 118 1 327 1 225 1 46 1 315 2 218 1 219 1 96 1 263 1 79 1 202 1 
300 1 53 1 302 1 287 1 131 1 237 1 115 1 118 1 327 1 225 1 46 1 315 2 218 1 219 1 96 1 263 1 79 1 202 1 
301 1 250 1 265 1 
301 1 250 1 265 1 
161 1 217 1 
161 1 217 1 265 1 
137 1 245 1 
130 1 245 1 268 1 302 1 29 1 131 1 358 1 327 1 137 1 138 1 333 2 141 1 366 2 38 2 287 1 237 1 115 1 192 2 118 1 44 2 90 1 149 1 315 1 258 1 218 1 263 1 79 1 
301 1 250 1 
161 1 217 1 265 1 
320 2 341 1 221 1 303 1 134 1 100 2 5 1 343 2 62 1 278 2 332 1 280 1 366 2 38 2 334 1 236 1 145 1 192 2 311 1 120 1 314 2 377 1 195 1 75 1 47 1 48 2 154 1 49 1 262 1 157 1 266 1 
320 2 87 1 350 1 188 1 169 1 2 1 18 1 374 2 342 1 120 1 359 1 148 1 208 1 195 1 278 2 48 2 319 1 27 1 15 1 
320 1 87 1 350 1 188 1 169 1 2 1 374 2 342 1 120 1 359 1 148 1 208 1 195 1 278 1 76 1 48 1 15 1 
320 1 350 1 18 1 311 1 120 1 5 1 209 1 195 1 329 1 74 1 278 1 227 1 363 1 48 1 
320 1 87 1 350 1 188 1 169 1 2 1 18 1 374 2 342 1 120 1 359 1 148 1 208 1 195 1 278 1 48 1 27 1 15 1 
116 1 
16 1 168 1 211 1 372 1 238 1 89 1 225 1 
357 1 82 1 225 2 165 1 65 1 364 1 285 1 16 1 372 1 237 1 336 1 353 1 210 1 211 1 213 1 295 1 218 1 
58 2 5 3 248 1 164 1 104 2 65 4 348 2 12 3 110 3 68 1 16 8 113 6 170 2 204 2 117 2 311 10 72 2 353 6 120 3 210 12 211 9 212 2 213 5 318 1 216 2 124 2 319 1 218 5 320 3 179 1 357 3 82 4 225 8 278 3 363 1 228 2 285 4 186 2 41 2 372 2 286 2 237 5 238 1 337 2 89 1 289 2 376 1 195 4 295 4 48 3 152 2 153 6 378 1 244 2 
357 1 82 2 225 4 201 1 83 1 65 2 142 1 308 1 285 2 186 2 41 1 16 4 113 5 372 1 237 1 191 1 117 2 353 3 289 2 210 6 211 7 213 1 24 1 92 1 295 2 215 1 216 2 153 5 26 1 218 1 244 2 
82 1 33 1 8 1 35 1 228 1 65 1 251 1 333 1 283 1 366 1 38 1 185 1 285 1 186 1 41 2 16 2 254 1 373 1 237 1 114 1 309 1 192 1 117 2 44 1 211 2 295 1 93 1 218 1 
16 1 372 1 238 1 89 1 82 1 225 1 211 1 65 1 295 1 285 1 
16 5 113 5 204 1 117 2 353 5 225 5 289 2 210 10 211 5 228 1 216 2 153 5 244 2 186 2 41 2 
213 1 372 1 237 1 218 1 357 1 225 1 
320 4 136 1 357 2 5 1 82 2 164 2 278 4 227 1 65 1 363 2 285 2 68 2 16 2 144 1 237 3 311 1 120 1 122 1 195 1 212 2 211 2 74 1 294 1 213 4 23 1 295 2 48 4 318 1 218 3 
341 1 320 1 221 1 134 1 100 2 5 1 62 1 138 1 278 1 226 1 280 1 363 1 139 1 333 2 281 1 12 1 366 3 38 3 231 1 334 1 254 2 309 1 192 2 44 2 311 1 120 1 314 1 377 1 195 1 48 1 354 1 262 1 
16 2 113 2 372 2 240 1 353 2 82 1 225 4 210 4 212 1 211 1 65 1 295 1 153 2 285 1 68 1 
115 1 14 1 79 1 
137 1 271 1 115 1 219 1 79 1 
115 1 14 1 79 1 
115 1 14 1 79 1 
1 1 115 1 79 1 
1 1 115 1 79 1 
1 1 115 1 79 1 
115 1 79 1 
131 1 327 1 
341 4 303 4 100 2 61 1 62 1 102 2 35 1 280 1 252 2 284 1 308 1 186 1 334 1 191 1 114 1 240 1 117 1 314 8 92 1 93 1 26 1 262 1 126 1 
341 5 303 6 61 1 100 4 62 2 102 2 35 1 280 2 252 3 284 1 308 2 186 1 69 1 334 2 191 1 114 1 240 1 117 2 312 1 314 11 92 1 93 1 216 1 26 1 126 1 262 2 244 1 78 1 
341 7 303 6 100 6 61 1 62 3 201 1 102 1 83 1 280 3 142 1 252 2 308 1 186 2 69 1 334 3 191 1 117 2 314 13 289 2 92 1 215 1 216 2 26 1 262 3 244 2 50 1 78 1 
341 4 303 7 100 6 61 1 62 3 201 1 102 1 280 3 83 1 142 1 252 2 308 1 186 1 69 1 334 3 191 1 117 2 314 11 289 1 92 1 215 1 216 2 26 1 262 3 244 2 50 1 78 1 
341 4 303 4 100 2 61 1 62 1 102 2 35 1 280 1 252 2 284 1 308 1 186 1 334 1 191 1 114 1 240 1 117 1 314 8 92 1 93 1 26 1 262 1 126 1 
341 6 303 6 100 2 61 1 62 1 201 1 102 1 280 1 83 1 142 1 252 2 308 1 186 2 69 1 334 1 191 1 117 2 314 12 289 2 92 1 215 1 216 2 26 1 262 1 244 2 
341 5 303 7 100 8 61 1 62 4 201 1 102 1 83 1 280 4 142 1 252 2 308 1 186 1 69 1 334 4 191 1 117 2 314 12 289 1 92 1 215 1 216 2 26 1 262 4 244 2 50 2 78 1 
341 5 303 7 61 1 100 8 62 4 201 1 7 1 102 2 83 1 280 4 142 1 252 4 308 1 186 1 69 2 334 4 191 1 117 2 314 12 289 1 92 1 215 1 216 2 26 1 262 4 244 2 50 2 
341 4 303 3 114 3 117 1 314 7 102 3 35 3 93 1 252 6 126 2 284 1 186 1 69 3 
341 5 303 7 61 1 100 8 62 4 201 1 7 1 102 1 83 1 280 4 142 1 252 2 308 1 186 1 69 1 334 4 191 1 117 2 314 12 289 1 92 1 215 1 216 2 26 1 262 4 244 2 50 2 
341 4 334 2 303 4 114 1 240 1 117 1 100 4 314 8 62 2 102 2 35 1 93 1 280 2 252 3 262 2 126 1 50 1 284 1 186 1 69 1 
341 3 168 1 303 3 114 1 240 1 117 1 314 6 102 2 35 1 93 1 252 2 126 1 284 1 186 1 
341 2 334 1 303 2 117 1 100 2 314 4 289 1 62 1 102 1 280 1 216 1 252 2 262 1 244 1 78 1 186 1 69 1 
341 4 303 3 191 1 117 1 312 1 314 7 289 1 102 1 216 1 26 1 252 2 244 1 308 2 186 1 69 1 
341 12 303 11 324 1 100 4 62 2 102 5 35 2 280 2 252 9 284 1 308 2 40 1 186 3 69 4 334 2 114 2 240 1 117 3 312 1 314 23 289 2 93 1 216 2 26 2 126 1 244 2 262 2 50 2 129 1 
341 1 308 1 314 1 
303 1 26 1 314 1 
341 3 334 1 204 1 303 3 117 1 100 2 314 6 62 1 289 1 102 2 280 1 216 1 252 3 262 1 244 1 78 1 186 1 69 1 
341 6 303 6 100 2 61 1 62 1 201 1 102 1 280 1 83 1 142 1 252 2 308 1 186 2 69 1 334 1 191 1 117 2 314 12 289 2 92 1 215 1 216 2 26 1 262 1 244 2 
341 3 303 3 114 1 117 1 314 6 102 1 35 1 93 1 252 2 186 1 69 1 
341 2 334 1 303 1 324 1 114 1 100 2 314 3 62 1 102 1 35 1 280 1 252 2 126 1 262 1 50 1 284 1 69 1 
341 5 334 1 303 5 114 2 117 2 100 2 61 1 314 10 62 1 102 3 35 2 280 1 93 1 252 5 262 1 185 1 186 2 69 2 
334 1 303 2 117 1 61 1 100 2 314 2 62 1 280 1 252 1 262 1 244 1 69 1 
341 2 334 1 303 2 117 1 61 1 100 2 314 4 289 1 62 1 102 1 280 1 216 1 252 2 262 1 244 1 186 1 69 1 
341 2 334 3 303 1 324 1 114 1 61 1 100 6 314 3 62 3 7 1 102 1 35 1 280 3 252 2 262 3 50 1 69 1 
341 18 303 16 324 1 100 10 61 1 62 5 34 1 7 1 102 7 35 3 280 5 252 12 284 1 308 4 186 5 69 5 253 1 334 5 191 1 114 3 240 1 117 5 312 1 314 34 289 3 93 2 216 3 26 3 126 1 262 5 244 3 50 2 175 1 78 1 
138 1 43 1 192 1 133 1 260 1 366 1 38 1 
370 1 43 1 133 1 192 1 101 1 138 1 184 1 123 1 66 1 260 1 38 1 366 1 
320 1 195 1 168 1 74 1 278 1 227 1 48 1 363 1 311 1 120 1 5 1 
320 1 192 1 44 1 311 1 5 1 120 1 338 1 195 1 138 1 278 1 226 1 363 1 48 1 333 1 12 1 231 1 38 2 366 2 
320 1 355 1 5 2 164 1 104 1 138 1 226 1 278 1 333 1 12 2 366 2 38 2 231 1 373 1 192 2 337 1 44 2 311 3 120 1 172 1 338 1 195 1 48 1 
320 2 355 1 5 2 6 1 164 1 104 1 138 1 278 2 333 1 229 1 12 2 366 2 38 2 231 1 373 1 192 2 337 1 44 2 311 3 120 1 172 1 338 1 195 1 48 2 
320 3 372 1 286 1 205 1 237 2 337 1 147 1 311 4 72 1 5 1 120 1 225 1 195 1 164 1 104 1 278 3 213 1 363 1 48 3 229 1 12 1 218 2 110 1 
320 3 372 1 286 1 237 2 337 1 311 4 72 1 5 1 120 1 225 1 195 1 164 1 104 1 278 3 213 1 363 1 48 3 152 1 229 1 12 1 218 2 110 1 
320 1 195 1 278 1 48 1 60 1 120 1 
320 7 236 1 179 1 180 1 60 1 311 3 241 1 5 2 120 2 343 1 359 1 103 1 195 3 278 6 363 2 48 7 77 1 282 1 12 1 319 1 232 1 
341 3 320 1 55 1 303 3 221 2 99 1 270 1 134 2 100 4 5 1 62 2 102 2 35 1 138 2 278 1 226 1 280 2 332 1 333 1 107 1 281 1 252 2 12 1 284 1 231 1 366 2 38 2 186 1 334 2 114 1 192 1 240 1 117 1 44 1 311 1 120 1 314 6 290 1 338 1 195 1 93 1 48 1 354 1 126 1 262 2 319 1 266 1 
320 1 357 1 82 2 225 1 278 1 363 1 65 2 141 1 348 1 110 1 285 2 16 1 372 1 170 1 286 1 237 3 238 1 89 1 311 2 72 1 211 1 213 2 48 1 295 2 152 1 318 1 124 1 218 3 
320 2 179 1 60 1 72 1 311 2 5 1 120 1 248 1 195 2 278 2 48 2 12 1 319 1 
320 4 246 1 311 1 5 1 120 1 195 1 74 1 278 4 227 1 363 1 48 4 229 1 319 1 
320 2 323 1 311 1 5 1 120 1 164 1 151 1 103 1 195 2 360 1 278 2 48 2 282 1 12 1 
320 1 87 1 195 1 278 1 48 1 363 1 374 1 342 1 120 1 208 1 
320 2 236 1 311 1 5 1 120 1 359 1 195 1 278 2 48 2 154 1 319 1 
320 5 236 1 246 1 311 3 5 2 120 2 241 1 164 1 195 2 74 1 278 4 227 1 363 1 48 5 77 1 319 1 
320 5 236 1 246 1 311 3 5 2 120 2 241 1 164 1 195 2 74 1 278 4 227 1 363 1 48 5 319 1 156 1 
320 1 192 1 44 1 311 1 5 1 120 1 338 1 6 1 195 1 138 1 278 1 363 1 48 1 333 1 12 1 231 1 38 2 366 2 
320 1 179 1 180 1 311 1 5 1 120 1 164 1 103 1 195 2 278 1 48 1 282 1 12 1 
293 1 138 1 45 1 306 1 160 1 
372 1 373 1 286 1 237 2 355 1 45 2 288 1 172 1 306 2 225 1 293 1 138 1 106 1 10 1 340 1 141 1 365 1 218 2 160 2 
293 1 145 1 47 1 192 1 49 1 366 1 38 1 45 1 160 1 
293 1 10 1 365 1 
316 1 168 1 162 1 347 1 
194 1 316 1 322 1 182 1 162 1 347 1 200 1 
63 1 322 1 159 1 
194 1 316 1 322 3 182 3 162 1 347 1 255 2 111 1 274 1 375 1 200 1 13 1 
194 1 316 1 21 1 322 2 182 2 57 1 162 1 347 1 200 1 
188 1 322 1 374 1 272 1 342 1 200 1 194 1 316 1 182 1 125 1 13 1 
194 1 316 1 322 1 182 1 162 1 200 1 13 1 
194 1 322 1 182 1 162 2 347 1 200 1 13 1 
194 2 316 1 28 1 279 1 322 2 182 2 162 1 304 1 200 2 13 1 
194 1 316 2 322 3 182 3 57 2 162 1 347 1 125 1 67 1 313 1 207 1 200 1 13 1 
87 1 188 1 322 2 2 1 57 1 374 2 162 1 342 1 200 1 194 1 316 1 182 2 347 1 143 1 13 1 
194 2 316 2 21 1 322 4 182 4 57 2 162 1 347 1 37 1 125 1 67 1 200 2 13 1 
194 1 316 1 322 1 182 1 162 1 347 1 200 1 13 1 
322 4 57 2 162 2 255 1 274 1 375 1 200 1 194 1 316 3 277 1 182 4 347 2 67 1 125 1 
194 1 316 1 64 1 171 1 322 2 182 2 57 1 140 1 162 1 347 1 200 1 13 1 
322 3 70 1 162 1 255 2 375 1 200 1 274 2 194 1 316 1 182 3 347 1 13 1 
339 1 316 2 292 1 344 2 
194 1 322 1 182 1 379 1 200 1 13 1 
194 1 316 1 322 2 182 2 57 1 162 1 347 1 313 1 200 1 13 1 
222 1 
194 1 316 1 322 1 182 1 162 1 347 1 200 1 13 1 
194 1 316 1 322 3 182 3 57 1 162 1 347 1 255 1 313 1 200 1 13 1 
316 1 277 1 125 1 67 1 
316 1 162 1 

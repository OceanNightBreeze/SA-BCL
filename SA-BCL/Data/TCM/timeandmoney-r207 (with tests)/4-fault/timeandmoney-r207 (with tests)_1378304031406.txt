#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 317 222 377 340 293 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 317 222 377 340 293 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 317 222 377 340 293 34 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 317 222 377 340 293 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 317 222 377 340 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 171 1 245 1 352 3 266 4 198 1 353 1 130 2 276 1 154 2 225 1 11 2 135 1 255 9 136 5 300 1 301 1 16 6 160 1 92 9 345 1 19 1 20 1 73 2 308 2 330 1 50 1 264 2 
0 2 171 1 245 1 352 3 266 4 198 1 353 1 130 2 276 1 154 2 225 1 11 2 135 1 255 9 136 5 300 1 301 1 16 6 160 1 92 9 345 1 19 1 20 1 73 2 308 2 330 1 50 1 264 2 
0 2 171 1 245 1 352 4 266 5 198 1 353 1 130 2 276 1 154 2 225 1 11 2 135 1 255 10 136 6 300 1 301 1 16 7 160 1 92 10 345 1 19 1 20 1 73 2 308 2 330 1 50 1 264 2 
0 2 171 1 245 1 352 2 266 3 198 1 353 1 130 2 276 1 154 2 225 1 11 1 135 1 255 7 136 4 300 1 301 1 16 4 160 1 92 7 345 1 19 1 20 1 73 2 308 2 50 1 264 2 
0 1 255 4 136 3 16 3 352 1 266 2 198 1 92 4 345 1 130 1 19 1 20 1 276 1 154 1 308 1 330 1 11 2 264 1 
135 1 0 1 14 1 136 1 255 2 301 1 92 2 209 1 345 1 19 1 275 1 276 1 154 1 308 1 73 1 264 1 
255 3 136 2 16 1 352 1 266 1 353 1 92 3 345 1 19 1 276 1 308 2 73 1 264 2 
171 1 0 1 266 4 352 3 353 1 198 1 130 1 276 1 360 1 154 1 11 2 255 9 136 5 16 7 160 1 92 9 345 1 19 1 20 1 73 1 308 2 330 1 195 1 264 2 
171 1 0 1 266 4 352 3 353 1 198 1 130 1 276 1 360 1 154 1 11 2 255 9 136 5 16 7 160 1 92 9 345 1 19 1 20 1 73 1 308 2 330 1 195 1 264 2 
95 1 199 1 23 1 
95 1 282 2 307 1 
221 2 254 1 218 2 28 2 193 2 279 2 331 2 220 1 
3 1 218 3 26 1 28 3 175 1 220 1 149 1 150 1 5 1 221 2 319 1 226 2 104 2 341 1 228 1 279 2 107 2 111 1 254 1 368 1 370 1 89 1 113 2 189 1 165 1 286 1 303 1 166 1 167 2 374 1 288 1 193 2 213 1 72 1 122 1 331 2 96 1 
373 1 221 1 254 1 218 1 146 1 28 1 193 1 279 1 331 1 227 1 
218 2 146 2 28 2 199 1 219 1 176 1 178 1 272 1 221 1 279 2 227 1 280 1 254 1 284 1 137 1 373 1 95 1 287 1 118 1 193 1 331 1 
254 1 218 2 146 2 137 1 28 2 284 1 199 1 219 1 176 1 373 1 272 2 221 2 95 1 118 2 193 2 227 1 331 2 279 2 280 1 
272 1 36 1 118 1 343 1 350 1 
272 2 95 1 36 1 118 2 199 1 29 1 294 1 350 1 
272 1 118 1 350 1 
254 1 218 1 146 1 137 1 28 1 373 1 272 1 221 1 36 1 118 1 193 1 227 1 331 1 279 1 
95 1 
272 2 95 1 36 1 118 2 199 1 187 1 29 1 350 1 
173 2 1 1 39 1 40 1 233 1 199 1 29 1 268 1 201 2 272 5 273 1 94 2 304 1 95 1 249 1 36 2 118 5 108 1 350 2 
218 2 89 1 28 2 175 1 189 1 77 1 286 1 150 1 5 1 193 1 213 1 72 1 194 1 226 1 104 1 331 1 279 1 207 1 107 1 96 1 
23 1 220 1 
218 2 302 1 28 2 247 1 220 2 221 1 193 1 279 2 331 1 
74 1 215 1 77 1 
218 1 28 1 89 1 175 1 189 1 220 1 286 1 150 1 5 1 213 1 226 1 72 1 59 1 104 1 107 1 96 1 
218 5 334 1 302 1 28 5 220 1 260 1 221 1 287 1 193 4 194 2 121 1 331 4 279 5 207 1 
373 1 218 2 146 1 28 2 9 1 193 2 279 2 331 2 
221 1 218 3 28 3 193 3 194 1 279 3 331 3 220 1 
373 1 218 1 146 1 28 1 193 1 279 1 331 1 
221 1 218 1 146 1 302 1 28 1 193 1 247 1 279 1 331 1 
3 1 146 2 149 1 150 1 151 1 5 1 104 1 341 1 107 1 207 1 12 1 254 1 302 1 113 1 303 1 166 1 167 2 118 1 213 1 72 1 122 1 218 4 28 4 219 1 175 1 176 1 220 1 272 1 221 2 319 1 226 1 279 3 280 1 86 1 368 1 284 1 89 1 189 1 286 1 374 1 288 1 193 3 194 1 331 3 96 1 
260 1 218 2 287 1 28 2 193 1 194 1 279 2 331 1 220 1 
218 3 146 1 302 1 28 3 284 1 219 1 176 1 221 1 272 1 95 1 118 1 193 3 194 2 331 3 279 3 207 1 216 1 86 1 280 1 
221 1 218 2 302 1 28 2 193 2 194 1 215 1 77 1 279 2 331 2 
218 1 28 1 89 1 189 1 175 1 220 1 286 1 150 1 5 1 213 1 226 1 72 1 104 1 107 1 96 1 
218 1 75 1 28 1 89 1 189 1 175 1 220 1 286 1 150 1 5 1 226 1 72 1 104 1 252 1 107 1 
2 1 3 1 26 2 200 1 246 1 77 2 149 1 317 1 202 1 319 1 205 1 341 2 322 1 283 1 113 4 303 1 117 1 167 2 374 1 288 1 46 1 74 2 215 2 123 1 
218 1 146 1 28 1 193 1 9 1 219 1 279 1 331 1 
103 1 290 1 
103 1 290 1 
185 1 313 1 
185 1 313 1 
185 1 313 1 
103 1 54 1 290 1 
181 1 103 1 290 1 
185 1 313 1 212 1 53 1 103 2 290 2 
103 1 54 1 290 1 
103 1 54 1 290 1 
339 1 103 1 290 1 
339 1 103 1 290 1 
339 1 103 1 290 1 
311 1 25 1 231 1 218 2 326 1 28 2 190 1 148 1 31 1 220 1 236 1 272 1 118 1 306 1 193 2 181 1 103 1 242 1 290 1 279 2 331 2 110 1 109 1 295 1 
311 3 186 1 325 1 326 2 148 2 31 2 190 1 67 1 18 1 356 1 272 2 95 1 212 1 82 1 118 2 49 2 103 2 242 2 290 2 
0 1 154 1 130 1 
0 1 154 1 209 1 
0 3 206 1 209 1 130 2 158 1 143 1 
0 2 168 1 206 1 209 1 130 1 143 1 
0 2 206 2 209 1 130 1 143 1 
312 2 173 1 27 1 199 1 201 1 29 1 317 1 272 5 357 2 273 3 274 2 222 1 36 4 321 1 205 1 108 2 109 1 364 1 231 1 40 1 282 3 94 1 95 2 239 1 238 1 118 5 306 1 46 1 307 1 51 1 123 1 350 1 
312 6 173 2 199 1 336 1 268 1 29 1 201 2 317 3 272 9 357 6 273 8 222 3 36 7 321 1 155 1 205 3 105 1 108 6 38 5 231 4 40 1 282 9 343 5 344 1 66 1 257 1 94 2 95 5 238 2 118 9 46 3 307 3 51 2 123 3 350 6 
312 2 173 1 199 1 201 1 268 1 317 1 272 3 273 3 357 2 274 1 222 1 36 2 205 1 108 2 364 1 231 1 282 4 94 1 95 3 239 1 238 1 118 3 46 1 307 2 51 1 123 1 
312 4 173 1 199 1 336 1 201 1 268 1 317 2 272 4 357 4 273 5 274 2 222 2 36 3 155 1 205 2 108 4 364 1 231 2 282 7 66 1 94 1 95 4 239 1 238 1 118 4 46 2 307 3 51 1 123 2 
320 1 23 1 175 1 
61 1 175 1 
349 1 
72 1 175 1 189 1 
365 1 175 1 
175 1 189 1 
152 1 320 2 72 1 24 1 175 3 189 1 
244 1 234 1 41 1 26 4 283 2 113 7 347 1 117 3 6 2 99 1 79 1 101 1 46 1 169 1 375 1 341 3 123 1 
244 1 234 1 41 1 26 4 283 2 113 7 347 1 117 3 6 2 99 1 79 1 101 1 46 1 169 1 375 1 341 3 123 1 
244 1 234 1 41 1 26 4 283 2 113 7 355 1 347 1 117 3 6 2 99 1 79 1 101 1 46 1 169 1 375 1 341 3 123 1 
244 1 127 1 26 16 317 3 99 1 6 3 180 1 79 1 319 1 101 2 222 3 250 1 205 3 362 1 84 3 341 15 133 1 234 2 41 2 283 5 113 31 64 1 347 1 303 1 117 10 42 4 167 2 374 1 288 1 375 2 169 5 46 4 47 1 123 4 
217 1 244 1 26 5 6 2 79 1 319 2 101 1 362 1 106 1 341 4 234 1 41 1 283 3 113 9 303 2 347 1 117 4 167 4 374 2 288 2 46 1 169 1 375 1 123 1 
0 2 332 1 315 1 130 1 150 1 4 1 276 1 154 1 226 1 104 1 107 1 158 1 136 1 255 2 16 1 162 1 371 1 92 2 140 1 209 1 345 1 258 1 286 1 19 1 261 1 376 1 308 1 73 1 291 1 264 1 
0 2 144 1 332 1 315 1 130 1 150 1 4 1 131 1 276 1 154 1 226 1 104 1 158 1 107 1 367 1 136 1 255 3 16 2 162 1 371 1 92 3 209 1 258 1 286 1 19 1 376 1 308 1 73 1 291 1 264 1 
0 2 144 1 332 1 130 1 150 1 4 1 131 1 276 1 154 1 226 1 104 1 107 1 158 1 136 1 255 2 16 2 162 1 371 1 92 2 209 1 286 1 19 1 376 1 73 1 291 1 
367 1 332 2 255 1 162 2 112 1 163 1 175 1 189 1 92 1 285 1 286 1 150 1 5 1 55 1 4 2 58 1 73 2 308 1 226 1 104 1 107 1 264 1 142 1 
0 2 144 1 332 1 315 1 130 1 150 1 4 1 154 1 226 1 104 1 107 1 158 1 255 1 162 1 371 1 92 1 140 1 209 1 345 1 258 1 286 1 376 1 308 1 73 1 291 1 264 1 
138 1 
146 1 199 3 201 1 150 1 5 2 100 4 338 1 57 1 58 1 104 2 108 2 107 2 296 2 62 2 297 1 15 1 112 1 65 2 348 2 263 1 118 5 307 2 120 1 350 6 173 1 218 1 28 1 314 1 29 3 175 1 219 1 176 1 270 2 178 1 272 5 273 2 226 2 134 1 279 1 183 2 280 1 40 1 235 2 282 2 284 1 189 1 286 1 141 1 94 1 43 1 95 4 238 1 287 1 44 1 196 1 
218 1 146 1 28 1 199 2 29 1 219 1 176 1 178 1 272 3 100 2 279 1 134 1 280 1 297 1 15 1 235 1 284 1 187 1 95 2 287 1 118 3 120 1 350 2 196 1 
297 1 15 1 218 1 146 1 28 1 284 1 199 2 219 1 65 1 176 1 178 1 272 2 100 3 95 2 287 1 118 2 120 1 134 1 279 1 280 1 196 1 
218 1 146 1 28 1 199 3 29 1 219 1 176 1 178 1 272 3 100 3 279 1 134 1 280 1 297 1 15 1 235 1 284 1 187 1 65 1 348 1 95 3 287 1 118 3 120 1 350 2 196 1 
146 2 199 4 201 1 100 5 108 1 296 2 254 1 297 1 62 2 15 1 65 3 348 4 263 1 211 1 118 5 120 1 307 2 350 7 173 1 218 2 28 2 354 1 219 1 29 3 176 1 178 1 270 2 271 1 221 1 272 5 273 1 132 1 227 1 134 1 279 2 183 2 280 1 230 1 40 1 235 4 137 1 284 1 187 1 141 1 373 1 94 1 95 4 287 1 193 1 331 1 196 1 
146 1 199 3 201 1 100 4 108 1 296 2 297 1 62 2 15 1 65 2 348 2 263 1 118 4 120 1 307 2 350 4 173 1 218 1 28 1 219 1 29 2 176 1 178 1 270 2 272 4 273 1 279 1 134 1 183 2 280 1 40 1 282 2 235 2 284 1 141 1 94 1 95 4 43 1 287 1 196 1 
173 1 218 1 146 1 28 1 354 1 199 3 29 2 219 1 201 1 176 1 270 2 178 1 272 4 273 1 100 4 132 1 279 1 134 1 183 2 108 1 296 2 280 1 62 2 297 1 15 1 40 1 235 2 284 1 65 2 141 1 348 2 94 1 95 3 263 1 287 1 211 1 118 4 307 2 120 1 350 4 196 1 
173 1 218 1 146 1 28 1 354 1 199 3 29 2 219 1 201 1 176 1 270 2 178 1 272 4 273 1 100 4 132 1 279 1 134 1 183 2 108 1 296 2 280 1 62 2 297 1 15 1 40 1 235 2 284 1 65 2 141 1 348 2 94 1 95 3 263 1 287 1 211 1 118 4 307 2 120 1 350 4 196 1 
173 1 218 1 146 1 28 1 199 3 29 2 219 1 201 1 176 1 178 1 179 2 272 4 273 1 100 4 132 1 279 1 134 1 108 1 363 1 296 2 280 1 62 2 297 1 15 1 40 1 235 2 324 2 282 2 284 1 65 2 141 1 191 1 348 2 94 1 95 3 287 1 118 4 119 1 120 1 350 4 196 1 
173 1 218 1 146 1 354 1 28 1 199 3 29 2 201 1 219 1 176 1 270 2 178 1 272 4 273 1 100 5 132 1 279 1 134 1 183 2 108 1 296 2 280 1 62 2 297 1 230 1 40 1 15 1 235 3 284 1 65 3 141 1 348 3 94 1 95 3 263 1 211 1 287 1 118 4 307 2 120 1 350 5 196 1 
173 1 218 1 146 1 354 1 28 1 199 3 29 2 201 1 219 1 176 1 270 2 178 1 272 4 273 1 100 5 132 1 279 1 134 1 183 2 108 1 296 2 280 1 62 2 297 1 230 1 40 1 15 1 235 3 284 1 65 3 141 1 348 3 94 1 95 3 263 1 211 1 287 1 118 4 307 2 120 1 350 5 196 1 
146 1 199 3 201 1 100 4 108 1 296 2 297 1 62 2 15 1 65 2 348 2 118 4 120 1 350 4 173 1 218 1 28 1 219 1 29 2 176 1 178 1 179 2 272 4 273 1 279 1 134 1 363 1 280 1 40 1 282 2 324 2 235 2 284 1 141 1 94 1 95 3 43 1 287 1 196 1 
3 1 244 1 234 1 26 3 283 2 113 6 200 1 77 1 220 2 347 1 149 1 303 1 6 1 117 2 79 1 167 2 319 1 374 1 288 1 46 1 23 1 375 1 74 1 215 1 341 3 123 1 
3 2 128 1 26 8 76 1 77 11 220 1 149 1 317 2 319 2 222 2 250 1 359 1 277 1 205 1 84 3 341 6 283 1 113 14 165 1 303 2 117 2 42 3 167 4 21 1 374 2 288 2 169 1 46 1 47 1 74 11 215 4 122 1 123 2 
3 1 218 2 26 1 28 2 175 1 220 1 149 1 150 1 5 1 319 1 277 1 361 1 226 1 104 1 59 1 341 1 279 1 182 1 107 1 323 1 207 1 89 1 113 2 189 1 286 1 165 1 303 1 167 2 374 1 288 1 213 1 193 1 72 1 194 1 215 1 331 1 122 1 96 1 
144 1 244 1 3 3 149 3 150 2 5 1 56 2 6 1 248 1 205 2 104 3 341 10 107 3 207 1 298 2 256 1 113 20 165 1 347 1 303 3 117 8 167 6 213 2 169 4 72 2 74 7 215 7 122 1 123 3 310 1 218 3 26 10 28 3 175 2 77 7 220 2 317 2 79 1 319 3 81 2 222 2 277 1 226 3 279 1 368 2 234 1 283 4 89 2 189 2 286 2 374 3 288 3 328 2 375 1 46 3 193 1 194 1 331 1 96 2 
265 1 144 1 218 1 3 2 26 1 28 1 200 1 175 3 149 2 150 2 5 2 319 2 8 1 226 8 58 1 104 7 341 1 279 1 228 2 107 8 87 1 161 1 112 1 113 2 90 1 189 2 286 2 165 1 303 2 261 1 167 4 374 2 288 2 193 1 48 1 194 1 170 1 331 1 122 1 
3 1 218 1 26 1 28 1 77 1 149 1 317 1 221 1 319 1 222 1 277 1 205 1 341 2 279 1 366 1 302 1 283 1 113 3 303 1 117 1 167 2 374 1 288 1 193 1 46 1 74 1 215 1 331 1 123 1 
2 1 3 1 26 2 113 2 200 1 77 1 149 1 303 1 317 1 117 1 167 2 319 1 374 1 288 1 169 1 74 1 215 1 123 1 
3 1 283 1 113 2 200 1 77 1 246 1 149 1 303 1 117 1 167 2 319 1 374 1 288 1 46 1 74 1 205 1 215 1 341 2 
3 1 26 2 200 1 77 2 149 1 317 1 319 1 222 1 205 1 341 2 283 1 113 4 303 1 117 2 167 2 374 1 288 1 169 1 46 1 74 2 215 2 123 1 
2 1 3 1 161 1 26 2 113 2 77 1 149 1 303 1 317 1 117 1 167 2 319 1 374 1 288 1 169 1 74 1 215 1 123 1 
3 1 161 1 283 1 113 2 77 1 246 1 149 1 303 1 117 1 167 2 319 1 374 1 288 1 46 1 74 1 205 1 215 1 341 2 
3 1 26 2 77 2 149 1 317 1 319 1 222 1 205 1 341 2 161 1 283 1 113 4 303 1 117 2 167 2 374 1 288 1 169 1 46 1 74 2 215 2 123 1 
3 1 26 2 77 2 149 1 317 1 319 1 222 1 205 1 341 2 283 1 113 4 303 1 117 2 167 2 374 1 288 1 169 1 46 1 74 2 215 2 123 1 
218 1 3 1 26 1 28 1 175 1 220 1 149 1 150 1 5 1 319 1 226 1 104 1 341 1 107 1 368 1 89 1 113 2 189 1 165 1 286 1 303 1 167 2 374 1 288 1 213 1 72 1 122 1 96 1 
75 1 218 1 3 1 26 1 28 1 175 1 220 1 149 1 150 1 5 1 203 1 319 1 226 1 252 1 104 1 341 1 107 1 89 1 113 2 189 1 165 1 286 1 303 1 167 2 374 1 288 1 72 1 122 1 
3 1 26 2 77 2 149 1 317 1 319 1 222 1 277 1 205 1 341 2 283 1 113 4 303 1 117 2 167 2 374 1 288 1 169 1 46 1 74 2 215 2 123 1 
218 1 3 1 26 2 28 1 175 1 77 2 149 1 150 1 317 1 56 1 319 1 222 1 205 1 226 1 104 1 341 2 107 1 368 1 283 1 89 1 113 4 189 1 286 1 303 1 117 2 261 1 167 2 374 1 288 1 46 1 169 1 213 1 74 2 72 1 215 2 123 1 96 1 
3 1 218 1 26 2 28 1 77 1 149 1 317 1 221 1 319 1 222 1 277 1 205 1 341 1 279 1 302 1 113 3 303 1 192 1 117 1 167 2 374 1 288 1 46 1 169 1 193 1 74 1 215 1 331 1 123 1 
217 1 125 1 26 12 293 1 269 1 34 1 317 3 319 2 80 1 222 3 250 1 251 1 102 2 205 2 340 1 84 3 341 12 208 3 283 1 113 24 327 1 303 2 117 3 42 4 167 4 374 2 71 1 288 2 169 2 46 2 47 3 123 3 377 1 
217 1 125 1 26 12 293 1 269 1 34 1 317 3 319 2 80 1 222 3 250 1 251 1 102 2 205 2 340 1 84 3 341 12 208 3 283 2 113 24 327 1 303 2 117 4 42 4 167 4 374 2 71 1 288 2 169 2 46 2 47 3 123 3 377 1 
217 1 244 1 125 1 128 2 26 19 293 1 34 1 317 5 6 1 79 1 319 1 80 1 222 5 250 2 102 1 205 4 340 1 84 4 341 17 208 2 234 1 283 5 113 36 347 1 303 1 117 9 42 4 167 2 374 1 288 1 375 1 169 4 46 5 47 2 123 6 377 1 
217 1 26 9 293 1 269 1 34 1 317 3 319 2 80 1 222 3 250 1 102 1 205 3 84 1 341 10 208 2 283 3 113 19 327 2 303 2 69 1 117 6 42 2 167 4 374 2 71 1 288 2 169 3 46 3 47 1 123 3 
217 1 125 1 208 2 26 6 113 11 293 2 303 1 34 1 317 1 42 2 80 1 167 2 319 1 222 1 374 1 288 1 47 2 102 2 340 1 84 2 341 5 123 1 377 1 
186 1 159 1 212 1 325 1 326 1 103 1 31 1 290 1 242 1 148 1 
236 1 181 1 
326 1 22 1 103 1 31 1 290 1 242 1 148 1 52 1 346 1 
97 1 54 1 
172 1 339 1 53 1 
311 2 186 1 325 1 326 1 190 1 148 1 31 1 67 1 356 1 272 1 95 1 212 1 82 1 118 1 49 1 103 1 242 1 290 1 
311 2 186 1 325 1 326 1 190 1 148 1 31 1 67 1 356 1 272 1 95 1 212 1 82 1 118 1 49 1 103 1 242 1 290 1 
311 2 186 1 325 1 326 1 190 1 148 1 31 1 67 1 356 1 272 1 95 1 212 1 82 1 118 1 49 1 103 1 242 1 290 1 
97 1 53 1 54 1 
97 1 53 1 54 1 
172 1 339 1 
172 1 339 1 53 1 
25 1 110 1 
311 1 25 1 231 1 218 2 326 1 28 2 148 1 31 1 220 1 236 1 356 1 272 1 35 1 36 1 118 1 193 2 306 1 181 1 49 1 103 1 242 1 290 1 279 2 331 2 110 1 109 1 295 1 
3 1 218 2 174 1 26 1 28 2 175 1 337 1 149 1 150 1 319 1 277 1 226 2 104 2 341 1 279 2 228 2 107 2 87 1 342 1 113 2 189 1 114 1 286 1 165 1 303 1 167 2 374 1 288 1 309 1 170 1 122 1 
0 2 144 1 332 1 371 1 209 1 130 1 286 1 33 1 68 1 258 1 150 1 17 1 261 1 154 1 376 1 226 2 104 2 158 1 107 2 
0 2 144 1 332 1 369 1 371 1 209 1 130 1 258 1 286 1 17 1 150 1 154 1 376 1 226 1 104 1 158 1 107 1 
332 1 112 1 175 1 189 1 286 1 33 1 150 1 5 1 223 1 226 1 58 1 104 1 107 1 142 1 
0 2 144 1 332 1 371 1 209 1 130 1 286 1 33 1 68 1 258 1 17 1 150 1 154 1 376 1 226 1 104 1 158 1 107 1 
240 1 
273 1 95 1 39 1 233 1 199 1 23 1 108 1 
173 1 199 1 201 1 29 1 270 1 272 1 273 1 108 1 183 1 40 1 282 1 94 1 95 2 263 1 118 1 307 1 350 1 
312 3 292 1 173 2 333 1 29 1 201 2 175 3 176 1 30 1 177 1 150 1 317 1 5 1 272 2 357 3 273 4 222 1 153 1 205 1 156 1 226 1 104 1 85 1 108 3 107 1 298 1 61 2 40 2 282 6 189 1 286 2 305 1 94 2 95 3 238 1 118 2 46 1 307 3 24 1 72 1 123 1 350 2 
312 4 173 1 125 1 201 1 317 2 357 4 273 6 222 2 205 2 340 1 84 1 108 4 40 1 282 2 42 1 94 1 95 1 329 1 307 1 46 2 47 1 123 2 377 1 124 1 
173 1 218 1 146 1 28 1 354 1 201 1 177 2 272 1 221 1 273 2 60 1 227 1 279 1 108 2 254 1 40 1 234 1 137 1 347 1 373 1 94 1 118 1 375 1 46 1 193 1 123 2 331 1 243 1 
173 1 40 1 39 1 233 1 199 1 201 1 94 1 273 1 95 1 108 1 
312 5 298 1 282 10 177 2 317 2 357 5 273 5 95 5 222 2 307 5 46 2 205 2 123 2 108 5 243 1 
272 1 95 1 118 1 199 1 29 1 350 1 
173 2 314 1 268 1 175 1 201 2 29 2 150 1 5 2 272 3 273 2 338 2 57 1 226 4 58 1 104 4 278 1 229 1 107 4 108 2 40 1 112 1 189 1 286 1 94 2 262 1 238 2 118 3 45 2 350 4 
218 3 3 1 28 3 175 1 220 1 149 1 150 1 5 1 221 2 319 1 226 1 104 1 341 1 279 2 107 1 254 1 368 1 89 1 113 1 189 1 286 1 303 1 166 1 167 2 374 1 288 1 193 2 213 1 72 1 122 1 331 2 96 1 
312 2 173 1 40 1 282 4 199 2 201 1 6 1 357 2 94 1 273 1 95 4 338 1 238 1 307 2 108 2 
326 1 10 1 31 1 
93 1 25 1 186 1 326 1 31 1 
326 1 10 1 31 1 
326 1 10 1 31 1 
351 1 326 1 31 1 
351 1 326 1 31 1 
351 1 326 1 31 1 
326 1 31 1 
103 1 290 1 
217 1 244 1 26 4 6 1 79 1 319 1 84 1 340 1 341 4 234 1 283 2 113 8 303 1 347 1 117 2 42 1 167 2 374 1 288 1 46 1 375 1 47 1 123 1 
217 1 244 1 26 6 267 1 317 1 6 1 79 1 319 2 222 1 250 1 340 1 84 1 341 5 234 1 283 2 113 11 347 1 303 2 117 3 42 2 167 4 374 2 288 2 46 1 375 1 169 1 47 1 123 2 
217 1 125 1 26 3 113 5 303 1 317 1 42 1 167 2 319 1 222 1 374 1 288 1 47 1 340 1 84 1 341 2 123 1 377 1 
217 1 125 1 26 3 113 5 303 1 317 1 42 1 167 2 319 1 222 1 374 1 288 1 47 1 340 1 84 1 341 2 123 1 377 1 
217 1 244 1 26 4 6 1 79 1 319 1 84 1 340 1 341 4 234 1 283 2 113 8 303 1 347 1 117 2 42 1 167 2 374 1 288 1 46 1 375 1 47 1 123 1 
217 1 125 1 26 3 113 5 303 1 317 1 42 1 167 2 319 1 222 1 374 1 288 1 47 1 340 1 84 1 341 2 123 1 377 1 
217 1 125 1 26 3 113 5 267 1 303 2 317 1 42 1 167 4 319 2 222 1 374 2 288 2 47 1 84 1 340 1 341 2 123 1 377 1 
217 1 125 1 26 3 113 5 269 1 303 2 317 1 42 1 167 4 319 2 222 1 374 2 288 2 47 1 84 1 340 1 341 2 123 1 377 1 
244 1 234 3 26 3 283 3 113 7 347 1 117 6 79 2 46 1 375 3 169 3 341 4 123 1 
217 1 125 1 26 3 113 5 269 1 303 2 317 1 42 1 167 4 319 2 222 1 374 2 288 2 47 1 84 1 340 1 341 2 123 1 377 1 
244 1 234 1 26 4 283 2 113 8 347 1 303 2 6 1 117 3 79 1 167 4 319 2 374 2 288 2 46 1 169 1 375 1 362 1 341 4 123 1 
244 1 234 1 26 3 283 2 113 6 347 1 6 1 117 2 79 1 23 1 375 1 46 1 341 3 123 1 
26 2 283 1 113 4 267 1 303 1 317 1 117 2 167 2 319 1 222 1 374 1 288 1 46 1 169 1 205 1 341 2 123 1 
26 3 283 1 113 7 317 1 117 2 42 2 222 1 250 1 46 1 169 1 205 1 47 1 84 1 341 4 123 1 
244 1 128 1 26 11 76 1 317 2 6 1 79 1 319 2 222 2 250 1 205 2 362 2 83 1 84 2 341 12 234 2 283 5 113 23 347 1 303 2 117 9 42 2 167 4 374 2 288 2 375 2 169 4 46 3 123 3 
42 1 113 1 341 1 
26 1 113 1 84 1 
298 1 26 3 283 2 113 6 267 1 303 1 317 1 117 3 319 1 167 2 222 1 374 1 288 1 169 1 46 1 205 1 341 3 123 1 
217 1 125 1 26 3 113 5 303 1 317 1 42 1 167 2 319 1 222 1 374 1 288 1 47 1 340 1 84 1 341 2 123 1 377 1 
117 2 234 1 26 3 283 1 169 1 375 1 46 1 113 6 341 3 123 1 347 1 
244 1 234 1 26 1 283 1 113 3 303 1 117 2 79 1 167 2 319 1 374 1 288 1 169 1 375 1 83 1 362 1 341 2 
217 1 234 2 26 5 283 3 113 10 303 1 347 1 117 5 319 1 167 2 374 1 288 1 375 2 169 2 46 2 60 1 341 5 123 2 
217 1 26 2 113 2 303 1 317 1 117 1 167 2 319 1 374 1 288 1 169 1 123 1 
217 1 26 2 283 1 113 4 303 1 317 1 117 2 167 2 319 1 222 1 374 1 288 1 46 1 169 1 205 1 341 2 123 1 
217 1 234 1 26 1 283 1 113 3 269 1 303 3 117 2 167 6 319 3 374 3 288 3 375 1 169 1 362 1 83 1 341 2 
217 1 244 1 26 16 267 1 269 1 317 3 6 1 180 1 79 1 319 5 222 3 250 1 83 1 362 2 205 3 84 3 341 18 133 1 234 3 283 7 113 34 64 1 347 2 303 5 117 12 42 4 167 10 374 5 288 5 375 3 169 5 46 5 47 1 123 5 
260 1 318 1 218 1 287 1 28 1 279 1 220 1 
281 1 218 1 28 1 129 1 220 1 98 1 260 1 318 1 287 1 157 1 279 1 184 1 
5 1 112 1 23 1 58 1 226 1 175 1 189 1 104 1 286 1 107 1 150 1 
218 2 89 1 28 2 175 1 189 1 220 1 286 1 150 1 5 1 193 1 72 1 194 1 226 1 104 1 331 1 279 1 107 1 96 1 
218 2 146 1 28 2 175 3 219 1 220 1 150 1 226 1 104 1 279 2 107 1 280 1 365 1 89 1 189 2 286 1 237 1 45 1 193 2 194 1 72 2 331 1 96 1 
75 1 218 2 146 1 28 2 175 3 219 1 220 1 150 1 226 2 104 2 279 2 107 2 280 1 253 1 365 1 89 1 189 2 286 1 237 1 45 1 193 2 194 1 72 2 331 1 
218 1 146 1 28 1 199 1 175 2 176 1 272 2 221 1 320 1 226 1 104 1 279 1 37 1 227 1 107 1 61 1 254 1 137 1 373 1 95 1 118 2 45 1 193 1 331 1 350 1 
218 1 146 1 28 1 199 1 175 1 176 1 30 1 272 2 221 1 226 1 104 1 227 1 279 1 107 1 61 1 254 1 137 1 373 1 95 1 118 2 45 1 193 1 331 1 350 1 
226 1 48 1 104 1 286 1 107 1 150 1 
265 1 144 1 145 1 90 1 189 2 175 3 115 1 286 3 150 2 5 2 261 1 8 1 241 1 48 1 226 7 24 1 72 1 104 6 170 1 228 1 107 7 
244 1 3 2 218 2 26 3 28 2 175 1 337 1 77 1 220 2 149 2 150 1 56 1 6 1 79 1 319 2 277 1 226 1 104 1 341 3 279 1 107 1 368 1 234 1 283 2 89 1 113 6 189 1 286 1 347 1 303 2 117 2 167 4 261 1 374 2 288 2 328 1 46 1 375 1 193 1 213 1 74 1 72 1 194 1 215 1 123 1 331 1 96 1 
146 1 199 2 201 2 5 1 153 1 156 1 104 1 60 1 107 1 108 5 61 1 254 1 347 1 262 1 118 3 123 2 350 2 173 2 218 1 28 1 29 1 175 1 176 1 30 1 177 2 272 3 221 1 273 4 36 1 226 1 85 1 227 1 279 1 40 2 39 1 233 1 234 1 137 1 373 1 94 2 95 2 375 1 46 2 193 1 331 1 243 1 
189 1 175 2 286 2 150 1 305 1 261 1 320 1 48 1 226 2 24 1 72 1 104 2 107 2 
253 1 126 1 112 1 189 1 175 1 286 1 150 1 5 1 261 1 226 4 58 1 104 4 107 4 
145 1 189 1 175 1 115 1 286 2 78 1 150 1 204 1 45 1 226 2 72 1 104 2 107 2 310 1 
0 1 5 1 154 1 371 1 226 1 104 1 209 1 286 1 107 1 150 1 
144 1 342 1 189 1 175 1 286 1 150 1 261 1 226 2 104 2 170 1 107 2 
126 1 112 1 189 2 175 3 90 1 286 2 150 2 5 1 261 1 45 1 8 1 58 1 226 5 104 4 170 1 107 5 
126 1 197 1 112 1 189 2 175 3 90 1 286 2 150 2 5 1 261 1 45 1 58 1 226 5 104 4 170 1 107 5 
218 2 75 1 89 1 28 2 175 1 189 1 220 1 286 1 150 1 5 1 193 1 72 1 194 1 226 1 104 1 331 1 279 1 107 1 
145 1 189 1 175 1 115 1 286 2 150 1 45 1 241 1 226 1 24 1 72 1 104 1 107 1 
210 1 63 1 147 1 91 1 220 1 
218 1 146 2 28 1 147 1 199 1 219 1 176 1 221 1 272 2 36 1 279 1 227 1 86 1 280 1 13 1 254 1 63 1 299 1 284 1 137 1 91 1 259 1 373 1 210 1 95 1 118 2 193 1 331 1 
218 1 174 1 28 1 147 1 91 1 114 1 210 1 309 1 279 1 
13 1 147 1 259 1 
19 1 136 1 276 1 23 1 
19 1 136 1 255 1 276 1 308 1 92 1 264 1 
4 1 255 1 73 1 
135 2 136 1 255 3 92 3 345 1 32 1 19 1 7 1 276 1 289 1 308 1 264 1 
19 1 136 1 255 2 16 1 276 1 308 1 11 1 92 2 264 1 
0 1 255 1 136 1 266 1 198 1 92 1 345 1 130 1 154 1 308 1 264 1 
136 1 255 1 276 1 308 1 92 1 345 1 264 1 
19 1 255 1 276 2 308 1 92 1 345 1 264 1 
136 1 255 2 232 1 335 1 164 1 92 2 345 1 276 1 308 2 264 2 
171 1 255 3 136 2 160 1 16 2 352 1 266 1 92 3 345 1 19 1 276 1 308 1 264 1 
0 2 88 1 136 1 255 2 16 1 209 1 92 2 345 1 130 1 19 1 276 1 154 1 308 1 158 1 264 1 
255 4 136 2 16 2 352 1 266 1 92 4 345 1 19 1 276 1 308 2 330 1 11 1 264 2 
19 1 136 1 255 1 276 1 308 1 92 1 345 1 264 1 
135 1 255 4 136 3 16 2 352 1 266 1 92 4 32 1 316 1 19 2 7 1 276 2 308 1 264 1 
136 1 255 2 16 1 92 2 345 1 372 1 19 1 276 1 360 1 214 1 308 1 264 1 
135 2 136 1 255 3 92 3 345 1 32 1 116 1 19 1 7 2 276 1 308 1 264 1 
136 2 358 1 224 1 188 2 
255 1 70 1 308 1 92 1 345 1 264 1 
19 1 171 1 136 1 255 2 16 1 276 1 308 1 92 2 345 1 264 1 
139 1 
19 1 136 1 255 1 276 1 308 1 92 1 345 1 264 1 
171 1 19 1 135 1 136 1 255 3 16 1 276 1 308 1 92 3 345 1 264 1 
136 1 266 1 352 1 316 1 
136 1 276 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
124 2 162 1 211 4 0 1 105 1 89 1 214 1 308 1 257 9 50 2 259 1 217 1 198 6 289 5 145 2 76 1 245 2 33 1 203 3 270 1 207 9 376 1 14 2 322 1 379 1 350 2 101 1 102 2 
124 2 289 5 145 2 162 1 76 1 211 4 245 2 0 1 33 1 105 1 203 3 270 1 89 1 214 1 308 1 50 2 257 9 259 1 207 9 376 1 14 2 217 1 322 1 350 2 379 1 101 1 198 6 102 2 
124 2 289 6 145 2 162 1 76 1 211 5 245 2 0 1 33 1 105 1 203 4 270 1 89 1 214 1 308 1 50 2 257 10 259 1 207 10 376 1 14 2 217 1 322 1 350 2 379 1 101 1 198 7 102 2 
124 2 289 4 145 2 162 1 76 1 211 3 245 2 0 1 33 1 105 1 203 2 270 1 89 1 214 1 308 1 50 2 257 7 207 7 376 1 14 1 217 1 322 1 350 2 379 1 101 1 198 4 102 2 
289 3 145 1 162 1 76 1 211 2 245 1 33 1 203 1 270 1 214 1 50 1 257 4 259 1 207 4 14 2 350 1 198 3 102 1 
273 1 124 1 289 1 16 1 145 1 162 1 76 1 0 1 21 1 214 1 257 2 50 1 207 2 322 1 350 1 102 1 
124 1 289 2 162 1 76 1 211 1 203 1 214 1 308 1 257 3 207 3 350 2 198 1 102 2 
124 1 62 1 289 5 145 1 162 1 76 1 245 1 211 4 356 1 33 1 203 3 270 1 89 1 214 1 308 1 50 1 257 9 259 1 207 9 14 2 217 1 350 2 198 7 102 2 
124 1 62 1 289 5 145 1 162 1 76 1 245 1 211 4 356 1 33 1 203 3 270 1 89 1 214 1 308 1 50 1 257 9 259 1 207 9 14 2 217 1 350 2 198 7 102 2 
41 1 212 1 48 1 
41 1 282 2 34 1 
295 2 146 1 285 2 26 1 95 2 11 2 56 2 171 2 
228 1 125 1 327 1 209 1 83 1 103 1 164 2 86 1 133 1 285 3 334 2 26 1 216 1 262 1 171 2 6 1 146 1 93 1 292 2 293 2 29 1 95 2 294 1 11 2 56 2 343 1 223 1 345 1 295 3 317 1 318 1 99 1 156 1 297 1 321 1 38 1 324 2 
295 1 285 1 154 1 26 1 374 1 298 1 95 1 11 1 56 1 171 1 
41 1 175 1 112 1 147 1 114 1 151 1 11 1 212 1 295 1 285 1 298 1 226 1 70 1 365 1 
41 1 175 2 112 1 147 1 114 2 95 1 56 1 11 1 212 1 295 1 285 1 298 1 226 1 70 1 171 1 
175 1 191 1 114 1 135 1 44 1 
41 1 212 1 175 2 191 1 256 1 114 2 135 1 362 1 
175 1 191 1 114 1 
175 1 275 1 114 1 95 1 56 1 11 1 295 1 285 1 154 1 135 1 374 1 26 1 298 1 171 1 
41 1 
41 1 212 1 175 2 191 1 256 1 114 2 135 1 307 1 
41 1 263 1 175 5 191 2 85 1 114 5 42 2 246 1 32 1 212 1 371 1 213 1 256 1 135 2 286 2 158 2 159 1 363 1 121 1 
146 1 48 1 
146 1 194 1 95 1 11 2 56 1 316 1 295 2 285 2 298 1 171 1 27 1 
144 1 224 1 19 1 
228 1 5 1 146 1 327 1 292 1 86 1 294 1 223 1 345 1 295 1 285 1 99 1 334 1 297 1 262 1 324 1 
228 1 327 1 292 1 193 1 19 1 294 1 86 1 95 1 56 1 11 1 223 1 345 1 295 2 285 2 99 1 334 1 297 1 100 1 262 1 324 1 
295 3 146 1 285 3 193 1 95 3 171 1 11 3 56 3 
295 1 285 1 154 1 298 1 95 1 11 1 56 1 
194 1 95 1 56 1 11 1 295 1 285 1 298 1 171 1 27 1 
228 1 125 1 327 1 83 1 193 1 194 1 86 1 133 1 285 4 334 1 134 1 6 1 147 1 93 1 146 1 292 1 293 1 95 3 294 1 56 3 11 3 345 1 295 4 99 1 100 1 297 1 156 1 298 2 209 1 164 2 26 1 216 1 70 1 262 1 171 2 175 1 112 1 114 1 29 1 181 1 223 1 316 1 226 1 321 1 324 1 
146 1 193 1 95 1 56 1 11 2 316 1 295 2 285 2 298 1 173 1 365 1 
41 1 175 1 112 1 147 1 114 1 193 2 194 1 95 3 56 3 11 3 295 3 285 3 134 1 100 1 298 1 299 1 226 1 70 1 171 1 
144 1 193 1 194 1 19 1 95 2 56 2 11 2 295 2 285 2 171 1 
228 1 146 1 327 1 292 1 86 1 294 1 223 1 345 1 295 1 285 1 99 1 334 1 297 1 262 1 324 1 
228 1 146 1 292 1 150 1 86 1 294 1 223 1 345 1 295 1 372 1 285 1 334 1 297 1 262 1 324 1 
209 1 83 1 19 2 279 1 164 2 20 1 137 1 216 1 361 1 261 1 144 2 6 1 93 1 293 4 265 1 117 1 94 1 29 2 224 2 155 1 156 1 249 1 38 2 380 1 
95 1 56 1 11 1 357 1 295 1 285 1 298 1 70 1 
248 1 295 5 146 1 285 5 100 1 193 2 194 1 139 1 95 4 171 1 11 5 56 4 173 1 365 1 
295 1 285 1 154 1 298 1 95 1 11 1 56 1 
25 1 52 1 
25 1 52 1 
352 1 291 1 
352 1 291 1 
352 1 291 1 
153 1 25 1 52 1 
352 1 111 1 25 2 291 1 52 2 122 1 
25 1 170 1 52 1 
25 1 170 1 52 1 
25 1 170 1 52 1 
25 1 52 1 110 1 
25 1 52 1 110 1 
25 1 52 1 110 1 
41 1 219 2 175 2 200 1 276 1 114 2 368 1 104 2 54 3 130 1 222 2 96 1 25 2 336 1 237 2 15 2 52 2 122 1 92 1 
219 1 175 1 146 1 276 1 75 1 8 1 114 1 104 1 54 1 95 2 11 2 56 2 232 1 295 2 153 1 285 2 25 1 271 1 237 1 157 1 15 1 52 1 288 1 61 1 
145 1 50 1 245 1 
273 1 145 1 50 1 
273 1 145 3 258 1 338 1 245 2 189 1 
273 1 145 2 258 1 338 1 138 1 245 1 
273 1 145 2 258 1 338 2 245 1 
41 2 191 1 17 2 330 1 42 1 232 1 196 1 212 1 282 3 213 2 256 1 309 2 137 1 136 1 135 4 361 1 91 1 286 1 3 1 175 5 263 3 73 2 74 1 75 1 114 5 116 1 117 1 246 1 34 1 157 1 380 1 158 1 
41 5 191 6 17 6 229 1 330 3 42 2 44 5 212 1 282 9 281 1 213 6 256 1 309 6 137 3 135 7 361 3 91 2 286 2 142 1 175 9 263 8 176 1 74 2 114 9 116 1 117 3 246 1 221 5 32 1 34 3 79 1 348 1 157 4 380 3 158 2 
41 3 17 2 330 1 42 1 212 1 282 4 213 2 309 2 137 1 135 2 136 1 361 1 91 1 286 1 3 1 175 3 263 3 73 1 74 1 114 3 117 1 32 1 34 2 157 1 158 1 380 1 
41 4 17 4 229 1 330 2 42 1 212 1 282 7 213 4 309 4 137 2 136 1 135 3 361 2 91 1 286 1 3 1 142 1 175 4 263 5 73 2 74 1 114 4 117 2 32 1 34 3 79 1 157 2 158 1 380 2 
228 1 180 1 48 1 
228 1 195 1 
353 1 
228 1 262 1 
228 3 345 1 28 1 180 2 355 1 262 1 
228 1 345 1 262 1 
228 1 367 1 
303 1 329 1 113 1 293 7 29 3 117 1 340 1 268 1 23 1 35 1 118 1 155 2 37 2 261 3 380 1 38 4 364 1 
303 1 329 1 113 1 293 7 29 3 117 1 340 1 268 1 23 1 35 1 118 1 155 2 37 2 261 3 380 1 38 4 364 1 
301 1 303 1 329 1 113 1 293 7 29 3 117 1 340 1 268 1 23 1 35 1 118 1 155 2 37 2 261 3 380 1 38 4 364 1 
274 1 303 1 329 1 209 1 330 1 277 1 46 2 164 2 137 1 361 1 261 4 364 2 6 1 93 1 53 1 293 11 29 6 117 1 342 1 10 1 268 1 118 1 35 2 205 1 37 1 155 2 156 1 225 1 38 5 380 1 
303 1 209 2 329 1 164 4 23 1 261 4 364 1 6 2 93 2 113 1 178 1 293 9 117 1 29 4 340 1 57 1 35 1 118 1 205 1 37 2 155 3 156 2 380 1 38 5 
124 1 273 1 162 1 129 1 86 1 167 1 214 1 50 1 257 2 334 1 238 1 109 1 198 1 199 1 289 1 145 2 292 1 201 1 76 1 245 1 55 1 77 1 294 1 373 1 207 2 347 1 350 1 189 1 324 1 102 1 
124 1 273 1 162 1 129 1 86 1 214 1 50 1 257 3 334 1 238 1 109 1 198 2 4 1 312 1 199 1 289 1 145 2 292 1 243 1 201 1 245 1 77 1 294 1 373 1 207 3 347 1 350 1 189 1 324 1 102 1 
273 1 312 1 124 1 289 1 145 2 162 1 243 1 292 1 201 1 245 1 294 1 86 1 77 1 129 1 214 1 50 1 257 2 373 1 334 1 207 2 347 1 238 1 189 1 198 2 324 1 
124 2 228 1 129 2 165 1 86 1 257 1 334 1 262 1 218 1 238 2 4 1 242 1 292 1 201 2 182 1 294 1 267 1 223 1 207 1 350 1 60 1 324 1 102 1 
124 1 273 1 129 1 86 1 167 1 50 1 257 1 334 1 238 1 109 1 312 1 199 1 145 2 292 1 201 1 76 1 245 1 77 1 294 1 373 1 207 1 347 1 350 1 189 1 324 1 102 1 
272 1 
228 1 191 4 42 1 43 1 278 1 332 1 231 1 86 1 282 1 88 1 234 3 236 1 285 1 334 2 335 1 286 1 147 1 149 1 292 2 246 1 151 1 294 1 11 1 12 1 247 1 295 1 98 1 298 1 158 1 60 1 165 1 213 2 256 2 215 1 260 1 72 1 70 1 262 1 174 1 365 1 263 2 175 4 112 1 74 1 114 4 223 2 370 1 34 1 119 1 36 1 187 1 226 1 324 2 
191 2 307 1 234 2 256 1 285 1 215 1 72 1 70 1 365 1 175 3 112 1 147 1 114 3 151 1 11 1 370 1 247 1 295 1 98 1 36 1 298 1 226 1 
41 1 191 1 307 1 212 1 234 3 256 1 285 1 215 1 72 1 70 1 365 1 175 3 112 1 147 1 149 1 114 3 151 1 11 1 247 1 295 1 98 1 36 1 298 1 226 1 
41 1 191 2 307 1 212 1 234 3 256 1 285 1 215 1 72 1 70 1 365 1 175 3 112 1 147 1 149 1 114 3 151 1 11 1 370 1 247 1 295 1 98 1 36 1 119 1 298 1 226 1 
41 5 190 1 191 7 42 1 278 1 88 1 234 6 236 2 285 1 335 2 286 1 147 1 149 4 151 1 246 1 11 1 247 1 295 1 98 1 298 1 158 1 64 1 307 1 212 5 213 1 168 1 256 3 215 1 68 1 260 2 70 1 72 1 365 1 175 5 263 1 112 1 114 5 370 4 34 2 315 1 119 4 36 1 187 2 226 1 
41 2 191 4 42 1 278 1 88 1 282 2 234 4 236 2 285 1 335 2 286 1 147 1 149 2 246 1 151 1 11 1 247 1 295 1 98 1 298 1 158 1 212 1 213 1 256 2 215 1 260 2 70 1 72 1 174 1 365 1 175 4 263 1 112 1 114 4 34 2 370 2 36 1 119 2 187 2 226 1 
41 1 191 4 64 1 42 1 278 1 212 1 88 1 168 1 213 1 234 4 256 2 236 2 285 1 215 1 68 1 335 2 260 2 72 1 70 1 286 1 365 1 263 1 175 4 112 1 147 1 149 2 114 4 151 1 246 1 11 1 370 2 34 2 247 1 295 1 119 2 98 1 36 1 187 2 298 1 226 1 158 1 
41 1 191 4 64 1 42 1 278 1 212 1 88 1 168 1 213 1 234 4 256 2 236 2 285 1 215 1 68 1 335 2 260 2 72 1 70 1 286 1 365 1 263 1 175 4 112 1 147 1 149 2 114 4 151 1 246 1 11 1 370 2 34 2 247 1 295 1 119 2 98 1 36 1 187 2 298 1 226 1 158 1 
41 1 325 1 191 4 42 1 127 2 253 2 212 1 282 2 88 1 168 1 213 1 234 4 256 2 285 1 215 1 260 2 72 1 70 1 286 1 239 1 365 1 263 1 175 4 112 1 147 1 149 2 114 4 179 1 151 1 246 1 11 1 370 2 247 1 295 1 119 2 98 1 36 1 187 2 298 1 226 1 158 1 
41 1 190 1 191 5 64 1 42 1 278 1 212 1 88 1 168 1 213 1 234 5 256 2 236 2 285 1 68 1 215 1 335 2 260 2 72 1 70 1 286 1 365 1 263 1 175 4 112 1 147 1 149 3 114 4 246 1 151 1 11 1 34 2 370 3 247 1 295 1 98 1 36 1 119 3 187 2 298 1 226 1 158 1 
41 1 190 1 191 5 64 1 42 1 278 1 212 1 88 1 168 1 213 1 234 5 256 2 236 2 285 1 68 1 215 1 335 2 260 2 72 1 70 1 286 1 365 1 263 1 175 4 112 1 147 1 149 3 114 4 246 1 151 1 11 1 34 2 370 3 247 1 295 1 98 1 36 1 119 3 187 2 298 1 226 1 158 1 
41 1 325 1 191 4 42 1 127 2 253 2 212 1 282 2 88 1 213 1 234 4 256 2 285 1 215 1 260 2 72 1 70 1 286 1 174 1 365 1 263 1 175 4 112 1 147 1 149 2 114 4 151 1 246 1 11 1 370 2 247 1 295 1 119 2 98 1 36 1 187 2 298 1 226 1 158 1 
209 1 83 1 329 1 19 1 164 2 48 1 23 1 216 1 261 2 144 1 6 1 93 1 146 2 113 1 293 6 265 1 340 1 117 1 29 3 118 1 224 1 155 2 37 1 156 1 380 1 38 3 
209 2 83 2 330 2 126 1 277 3 46 3 19 11 164 4 137 1 216 1 361 2 261 2 144 4 6 2 146 1 93 2 53 1 293 14 29 6 117 1 202 1 31 1 10 1 343 1 35 1 224 11 155 1 156 2 321 1 38 8 380 2 188 1 323 1 
228 1 327 1 209 1 83 1 193 1 164 2 86 1 285 2 334 1 359 1 216 1 262 1 5 1 144 1 6 1 146 1 93 1 148 1 292 1 293 2 29 1 202 1 294 1 95 1 11 1 56 1 223 1 343 1 345 1 295 2 99 1 297 1 100 1 156 1 378 1 321 1 38 1 324 1 
228 2 327 2 329 1 83 3 330 2 193 1 86 2 87 1 132 2 133 2 285 3 334 3 137 2 144 7 6 3 146 2 93 3 292 3 293 20 340 1 202 1 95 1 294 2 56 1 11 1 343 1 345 2 295 3 99 2 155 4 156 3 100 1 297 2 351 2 302 2 209 3 19 7 252 1 164 6 23 1 216 3 360 1 361 2 261 8 262 2 312 1 113 1 264 2 117 3 29 10 223 1 118 1 224 7 35 4 37 1 321 1 380 3 38 10 324 3 
123 1 228 3 209 2 83 2 193 1 103 2 164 4 86 2 165 1 284 1 285 1 334 8 216 2 262 2 312 1 366 1 241 1 6 2 93 2 292 7 115 1 293 2 265 1 55 1 29 1 95 1 294 2 11 1 56 1 223 2 343 1 13 1 295 1 156 2 120 1 321 1 38 1 60 1 324 8 
209 1 83 1 330 1 45 1 19 1 194 1 164 2 285 1 137 1 216 1 361 1 261 1 171 1 144 1 6 1 93 1 293 3 117 1 29 2 202 1 95 1 56 1 11 1 295 1 224 1 155 1 156 1 380 1 38 1 
144 1 6 1 93 1 83 1 209 1 293 2 19 1 265 1 164 2 35 1 224 1 216 1 156 1 361 1 261 1 249 1 380 1 38 2 
144 1 6 1 93 1 83 1 209 1 293 2 19 1 265 1 117 1 29 2 164 2 20 1 224 1 155 1 137 1 216 1 156 1 261 1 
144 2 6 1 93 1 83 1 209 1 330 1 293 4 19 2 265 1 29 2 117 1 164 2 35 1 224 2 155 1 137 1 216 1 156 1 361 1 261 2 380 1 38 2 
144 1 6 1 93 1 83 1 209 1 293 2 19 1 164 2 13 1 35 1 224 1 216 1 156 1 361 1 261 1 249 1 380 1 38 2 
144 1 6 1 93 1 83 1 209 1 293 2 19 1 117 1 29 2 164 2 20 1 13 1 224 1 155 1 137 1 216 1 156 1 261 1 
144 2 6 1 93 1 83 1 209 1 330 1 293 4 19 2 29 2 117 1 164 2 13 1 35 1 224 2 155 1 137 1 216 1 156 1 361 1 261 2 380 1 38 2 
144 2 6 1 93 1 83 1 209 1 330 1 293 4 19 2 29 2 117 1 164 2 35 1 224 2 155 1 137 1 216 1 156 1 361 1 261 2 380 1 38 2 
228 1 327 1 83 1 209 1 164 2 86 1 133 1 285 1 334 1 216 1 262 1 6 1 146 1 93 1 292 1 293 2 29 1 294 1 343 1 223 1 345 1 295 1 99 1 297 1 156 1 321 1 38 1 324 1 
228 1 83 1 209 1 164 2 86 1 358 1 285 1 334 1 216 1 262 1 6 1 146 1 93 1 150 1 292 1 293 2 29 1 294 1 343 1 223 1 345 1 295 1 372 1 297 1 156 1 321 1 38 1 324 1 
144 2 6 1 93 1 83 1 209 1 330 1 293 4 19 2 29 2 117 1 202 1 164 2 35 1 224 2 155 1 137 1 216 1 156 1 361 1 261 2 380 1 38 2 
351 1 228 1 327 1 83 1 209 1 330 1 19 2 164 2 86 1 133 1 285 1 334 1 137 1 216 1 361 1 261 2 262 1 144 2 6 1 93 1 292 1 293 4 29 2 117 1 55 1 294 1 345 1 295 1 35 1 224 2 99 1 155 1 297 1 156 1 38 2 380 1 324 1 
81 1 209 1 83 1 330 1 194 1 19 1 164 2 285 1 137 1 216 1 361 1 261 1 171 1 144 1 6 1 93 1 293 3 29 1 117 1 202 1 95 1 56 1 11 1 295 1 35 1 224 1 156 1 380 1 38 2 
326 4 250 1 329 1 209 3 251 1 330 4 18 1 277 3 46 4 164 6 49 1 23 1 1 1 137 4 361 4 261 8 240 1 6 3 7 1 93 3 113 1 53 3 293 41 339 1 340 1 369 1 29 21 117 5 10 1 344 1 57 1 346 2 118 1 35 4 205 1 184 1 37 1 155 4 156 3 375 1 59 1 38 20 380 5 
326 4 250 1 329 1 209 4 251 1 330 4 18 1 277 3 46 4 164 8 49 1 23 1 1 1 137 3 361 4 261 7 240 1 6 4 7 1 93 4 113 1 53 3 293 38 339 1 340 1 369 1 29 18 117 4 10 1 344 1 57 1 346 2 118 1 35 3 205 2 184 1 37 1 155 4 156 4 375 1 59 1 38 20 380 5 
326 4 250 1 329 1 209 2 251 1 330 7 18 1 277 4 46 4 164 4 23 1 1 1 137 7 361 7 261 14 6 2 7 1 93 2 113 1 53 2 293 52 339 1 340 1 369 1 29 25 117 8 10 2 344 1 57 1 346 1 118 1 35 7 205 1 184 1 37 1 155 7 156 2 375 1 59 1 38 27 380 8 188 2 
326 2 250 1 209 2 330 3 277 1 46 2 164 4 49 1 137 3 361 3 261 6 6 2 93 2 53 1 293 19 339 1 369 1 29 10 117 3 10 1 344 1 57 1 346 1 35 3 185 1 155 3 156 2 375 2 38 9 380 3 
326 4 250 1 209 3 251 1 330 3 18 1 277 2 46 2 164 6 1 1 137 2 361 3 261 4 6 3 7 1 93 3 53 2 293 26 339 1 117 2 29 12 369 1 344 2 57 1 346 2 35 2 205 2 184 1 155 2 156 3 375 1 38 14 59 1 380 3 
219 1 313 1 25 1 336 1 237 1 104 1 130 1 52 1 15 1 122 1 
153 1 61 1 
219 1 67 1 25 1 237 1 104 1 287 1 52 1 15 1 337 1 
41 1 219 1 175 1 200 1 276 1 114 1 368 1 104 1 54 2 130 1 222 1 25 1 336 1 237 1 15 1 52 1 122 1 92 1 
41 1 219 1 175 1 200 1 276 1 114 1 368 1 104 1 54 2 130 1 222 1 25 1 336 1 237 1 15 1 52 1 122 1 92 1 
41 1 219 1 175 1 200 1 276 1 114 1 368 1 104 1 54 2 130 1 222 1 25 1 336 1 237 1 15 1 52 1 122 1 92 1 
111 1 30 1 170 1 
111 1 30 1 170 1 
349 1 110 1 
111 1 349 1 110 1 
271 1 288 1 
104 1 65 1 232 1 285 2 25 1 135 1 237 1 52 1 92 1 288 1 219 1 175 1 146 1 114 1 8 1 75 1 54 1 95 2 222 1 56 2 11 2 295 2 153 1 271 1 157 1 15 1 61 1 
30 1 170 1 
111 1 349 1 110 1 
227 1 228 1 209 1 83 1 103 2 163 1 305 1 164 2 86 1 283 1 284 1 285 2 334 2 216 1 262 1 197 1 366 1 6 1 93 1 292 2 293 2 29 1 202 1 294 1 11 2 343 1 295 2 156 1 321 1 38 1 324 2 
273 1 312 1 40 1 199 1 145 2 292 2 245 1 55 1 294 1 86 1 220 1 77 1 50 1 334 2 373 1 90 1 238 1 189 1 324 2 
273 1 312 1 40 1 199 1 145 2 292 1 245 1 77 1 86 1 294 1 50 1 334 1 373 1 238 1 189 1 141 1 324 1 
228 1 292 1 47 1 294 1 86 1 165 1 267 1 223 1 334 1 90 1 262 1 238 1 60 1 324 1 
273 1 312 1 40 1 199 1 145 2 292 1 245 1 294 1 220 1 77 1 86 1 50 1 334 1 373 1 90 1 238 1 189 1 324 1 
210 1 
41 1 212 1 263 1 213 1 85 1 159 1 48 1 
41 2 191 1 42 1 278 1 212 1 282 1 213 1 236 1 256 1 335 1 286 1 263 1 175 1 114 1 246 1 34 1 158 1 
41 8 228 10 191 5 85 1 84 2 330 2 42 4 280 1 332 1 195 3 86 3 132 2 282 12 334 3 137 2 51 1 2 2 286 4 147 2 292 3 55 1 246 4 9 1 294 4 345 3 204 2 206 2 158 4 159 1 63 2 17 6 355 1 212 2 24 2 213 8 106 2 256 3 309 6 311 1 361 2 71 1 262 3 263 9 175 5 367 2 74 2 114 5 180 2 117 2 223 1 34 6 380 2 80 2 324 3 
41 5 63 1 191 1 17 5 251 1 330 2 42 2 18 1 277 1 46 1 332 1 212 2 233 1 282 6 24 2 213 5 256 1 309 5 1 1 137 2 361 2 286 2 175 1 263 8 74 1 114 1 53 1 117 2 246 2 34 3 58 1 184 1 158 2 59 1 380 2 
63 1 275 1 329 1 42 1 23 1 24 2 213 2 285 1 68 1 26 1 286 1 171 1 175 1 263 2 114 1 117 1 246 1 95 1 56 1 11 1 295 1 118 1 154 1 374 1 319 1 298 1 158 1 380 2 
41 1 263 1 85 1 42 1 246 1 212 1 213 1 286 1 158 1 159 1 
41 5 263 5 63 1 17 5 330 2 117 2 132 1 34 5 282 10 24 2 213 5 309 5 137 2 361 2 380 2 
41 1 212 1 175 1 191 1 256 1 114 1 
228 2 191 4 208 1 160 1 43 1 42 2 231 1 332 2 86 2 165 1 22 1 213 2 256 2 334 4 51 2 262 2 286 2 263 2 175 3 177 1 74 2 114 3 292 4 314 1 246 1 294 3 9 1 32 1 223 2 345 1 377 1 158 2 60 1 324 4 
228 1 125 1 327 1 83 1 209 1 164 2 86 1 133 1 285 3 334 1 26 1 216 1 262 1 171 2 6 1 146 1 93 1 292 1 293 1 29 1 95 2 294 1 11 2 56 2 223 1 345 1 295 3 99 1 156 1 297 1 321 1 324 1 
41 4 263 1 17 2 74 1 42 1 246 1 332 1 34 2 212 2 282 4 213 2 309 2 37 1 286 1 158 1 
219 1 333 1 336 1 237 1 288 1 
219 1 237 1 140 1 
219 1 237 1 140 1 
219 1 237 1 140 1 
219 1 143 1 237 1 
219 1 143 1 237 1 
219 1 143 1 237 1 
219 1 237 1 
25 1 52 1 
209 1 329 1 277 1 46 1 164 2 23 1 1 1 261 2 6 1 93 1 113 1 53 1 293 8 117 1 29 4 340 1 57 1 118 1 37 1 155 2 156 1 380 1 38 4 
329 1 209 2 330 1 277 1 46 2 164 4 23 1 1 1 361 1 261 3 6 2 93 2 113 1 53 1 293 11 117 1 340 1 29 5 341 1 10 1 57 1 118 1 35 1 37 1 155 2 156 2 38 6 380 2 
329 1 209 3 251 1 330 2 277 1 18 1 46 1 164 6 23 1 1 1 137 2 361 2 261 4 6 3 93 3 113 1 53 1 293 19 340 1 29 10 117 3 341 1 57 1 118 1 35 1 205 1 184 1 37 1 155 3 156 3 38 9 59 1 380 3 
329 1 209 3 330 2 251 1 277 1 18 1 46 1 164 6 23 1 1 1 137 1 361 2 261 5 6 3 93 3 113 1 53 1 293 17 340 1 29 7 117 2 341 1 57 1 118 1 35 2 205 1 184 1 37 1 155 3 156 3 38 10 59 1 380 3 
209 1 329 1 277 1 46 1 164 2 23 1 1 1 261 2 6 1 93 1 113 1 53 1 293 8 117 1 29 4 340 1 57 1 118 1 37 1 155 2 156 1 380 1 38 4 
6 1 93 1 209 1 251 1 330 2 53 1 18 1 293 12 277 1 46 1 117 2 29 6 164 2 57 1 35 1 1 1 184 1 155 1 137 2 156 1 361 2 261 2 380 2 59 1 38 6 
329 1 209 4 251 1 330 2 18 1 277 1 46 1 164 8 23 1 1 1 137 1 361 2 261 5 6 4 93 4 113 1 53 1 293 18 340 1 29 8 117 2 341 1 57 1 118 1 35 2 205 2 184 1 37 1 155 3 156 4 38 10 59 1 380 3 
209 4 251 1 330 3 18 1 277 1 46 1 164 8 49 1 1 1 137 2 361 3 261 6 6 4 93 4 53 1 293 16 29 7 117 2 57 1 35 3 205 2 184 1 155 3 156 4 38 9 59 1 380 3 
113 2 329 3 293 7 29 4 117 1 340 1 23 1 118 3 35 3 155 3 261 6 380 1 38 3 
329 1 209 4 251 1 330 2 18 1 277 1 46 1 164 8 23 1 49 1 1 1 137 1 361 2 261 4 6 4 93 4 113 1 53 1 293 18 340 1 29 8 117 2 57 1 118 1 35 1 205 2 184 1 37 1 155 3 156 4 38 10 59 1 380 3 
6 2 93 2 209 2 113 1 329 1 293 8 117 1 29 4 340 1 164 4 23 1 35 1 118 1 205 1 37 1 155 2 156 2 261 3 380 1 38 4 
113 1 329 1 293 6 29 3 340 1 117 1 48 1 23 1 118 1 37 1 155 2 261 2 380 1 38 3 
6 1 93 1 209 1 330 1 293 4 29 2 117 1 164 2 341 1 35 1 155 1 137 1 156 1 361 1 261 2 380 1 38 2 
53 1 330 1 293 7 277 1 46 2 117 1 29 4 10 1 35 1 155 1 137 1 361 1 261 2 38 3 380 1 
274 1 329 2 209 2 330 2 277 2 126 1 46 2 164 4 23 1 137 2 361 2 261 9 6 2 93 2 113 1 293 23 340 1 29 12 117 3 10 1 118 2 35 4 205 2 37 1 155 5 156 2 380 3 38 11 188 1 
293 1 46 1 29 1 
293 1 277 1 38 1 
6 1 93 1 209 1 330 1 293 6 29 3 117 1 164 2 341 1 132 1 35 1 137 1 155 2 156 1 361 1 261 3 380 1 38 3 
6 1 93 1 209 1 251 1 330 2 53 1 18 1 293 12 277 1 46 1 117 2 29 6 164 2 57 1 35 1 1 1 184 1 155 1 137 2 156 1 361 2 261 2 380 2 59 1 38 6 
329 1 293 6 117 1 29 3 23 1 118 1 35 1 155 1 261 2 380 1 38 3 
274 1 6 1 93 1 329 1 113 1 209 1 293 3 29 2 340 1 164 2 35 1 118 1 205 1 155 1 156 1 261 2 38 1 
6 1 93 1 209 1 329 2 293 10 29 5 117 2 164 2 57 1 23 1 118 2 35 2 155 3 156 1 319 1 261 5 38 5 380 2 
6 1 93 1 209 1 293 2 164 2 57 1 35 1 156 1 361 1 261 1 380 1 38 2 
6 1 93 1 209 1 330 1 293 4 29 2 117 1 164 2 57 1 35 1 155 1 137 1 156 1 361 1 261 2 380 1 38 2 
274 1 6 3 93 3 209 3 329 1 293 3 29 2 164 6 49 1 57 1 118 1 35 1 205 1 155 1 156 3 261 2 38 1 
274 1 209 4 329 2 277 1 46 1 164 8 23 1 49 1 261 6 6 4 93 4 113 1 53 1 293 15 117 2 29 8 340 1 342 1 341 1 57 1 35 3 118 2 205 1 155 3 319 1 156 4 380 2 38 7 
295 1 146 1 285 1 310 1 11 1 173 1 365 1 
146 1 11 1 166 1 295 1 296 1 169 1 285 1 310 1 186 1 108 1 173 1 365 1 
228 1 334 1 292 1 262 1 294 1 86 1 165 1 48 1 60 1 223 1 324 1 
228 1 146 1 327 1 292 1 193 1 294 1 95 1 86 1 56 1 11 1 223 1 345 1 295 2 285 2 334 1 297 1 262 1 324 1 
228 3 327 1 193 1 86 1 285 2 334 1 51 1 2 1 70 1 262 2 367 1 112 1 146 1 292 1 95 2 294 1 11 2 56 1 316 1 345 2 295 2 297 1 298 2 324 1 
228 3 193 1 86 1 285 2 334 1 51 1 2 1 70 1 262 2 367 1 112 1 146 1 150 1 292 1 95 2 294 1 11 2 56 1 316 1 345 2 295 2 297 1 298 2 324 1 
41 1 228 4 191 1 328 1 195 1 86 1 254 1 212 1 334 3 51 1 2 1 262 1 175 2 367 1 147 1 114 2 292 3 180 1 294 1 223 1 345 1 320 1 324 3 
41 1 367 1 175 2 228 4 191 1 147 1 114 2 84 1 292 3 180 1 195 1 294 1 86 1 223 1 212 1 345 1 334 3 51 1 2 1 320 1 262 1 324 3 
334 1 292 1 120 1 294 1 86 1 324 1 
312 1 366 1 123 1 241 1 228 3 292 6 103 1 115 1 355 1 55 1 314 1 86 2 294 3 223 2 22 1 345 1 152 1 334 7 120 1 262 2 324 7 
351 1 228 1 327 1 329 1 209 2 83 2 193 1 19 1 305 1 164 4 86 1 23 1 133 1 285 2 334 1 216 2 261 2 262 1 144 1 6 2 146 2 93 2 113 1 292 1 293 6 264 1 29 3 117 1 340 1 55 1 202 1 294 1 95 1 11 1 56 1 345 1 295 2 224 1 118 1 99 1 37 1 155 2 297 1 156 2 38 3 380 1 324 1 
41 1 228 2 191 2 85 1 84 1 42 2 195 1 212 1 213 1 106 1 256 1 334 1 135 1 286 2 263 1 175 3 147 1 114 3 292 1 180 1 246 2 9 1 223 1 204 1 206 1 158 2 159 1 324 1 
228 2 292 2 180 1 355 1 55 1 280 1 86 1 294 2 345 1 334 2 120 1 262 1 324 2 
228 1 292 4 55 1 294 1 165 1 86 1 223 1 66 1 334 4 320 1 262 1 60 1 324 4 
228 1 160 1 208 1 292 2 314 1 86 1 294 2 87 1 22 1 345 1 334 2 51 1 262 1 324 2 
273 1 145 1 50 1 373 1 334 1 292 1 294 1 86 1 223 1 324 1 
312 1 366 1 228 1 292 2 163 1 55 1 86 1 294 1 334 2 262 1 324 2 
366 1 241 1 228 3 292 4 115 1 55 1 165 1 86 2 294 2 223 1 66 1 334 5 51 1 262 2 60 1 324 5 
366 1 228 3 292 4 115 1 55 1 165 1 86 2 294 2 223 1 131 1 66 1 334 5 51 1 262 2 60 1 324 5 
228 1 146 1 292 1 150 1 193 1 294 1 95 1 86 1 56 1 11 1 223 1 345 1 295 2 285 2 334 1 297 1 262 1 324 1 
228 1 292 1 355 1 314 1 86 1 294 2 22 1 345 1 152 1 334 1 51 1 262 1 324 1 
227 1 230 1 331 1 244 1 11 1 283 1 295 1 285 1 197 1 
230 1 266 1 39 1 
146 1 230 1 244 1 331 1 300 1 
41 1 275 1 230 1 128 1 331 1 212 1 285 1 26 1 134 1 135 1 70 1 171 1 175 2 112 1 147 1 114 2 244 1 95 1 266 1 11 1 56 1 295 1 154 1 374 1 298 2 226 1 300 1 39 1 
289 1 214 1 162 1 48 1 
289 1 214 1 257 1 162 1 207 1 350 1 102 1 
124 1 257 1 129 1 
289 1 161 1 162 1 76 1 354 1 0 2 183 1 214 1 257 3 207 3 350 1 102 1 
289 1 214 1 257 2 162 1 207 2 14 1 350 1 198 1 102 1 
289 1 145 1 76 1 211 1 245 1 33 1 257 1 50 1 207 1 350 1 102 1 
289 1 214 1 257 1 207 1 76 1 350 1 102 1 
214 2 257 1 162 1 207 1 76 1 350 1 102 1 
289 1 76 1 306 1 269 1 214 1 235 1 257 2 207 2 350 2 102 2 
289 2 162 1 76 1 211 1 203 1 89 1 214 1 257 3 207 3 217 1 350 1 198 2 102 1 
273 1 289 1 145 2 162 1 76 1 245 1 97 1 214 1 257 2 50 1 207 2 350 1 189 1 198 1 102 1 
289 2 162 1 76 1 211 1 203 1 214 1 257 4 259 1 207 4 14 1 350 2 198 2 102 2 
289 1 214 1 257 1 162 1 207 1 76 1 350 1 102 1 
289 3 161 1 162 2 354 1 211 1 0 1 203 1 214 2 257 4 69 1 207 4 350 1 198 2 102 1 
289 1 162 1 192 1 76 1 356 1 255 1 214 1 257 2 207 2 350 1 198 1 102 1 
289 1 161 2 162 1 354 1 76 1 0 2 214 1 257 3 207 3 350 1 172 1 102 1 
289 2 82 2 304 1 78 1 
290 1 257 1 207 1 76 1 350 1 102 1 
89 1 289 1 214 1 257 2 162 1 207 2 76 1 350 1 198 1 102 1 
107 1 
289 1 214 1 257 1 162 1 207 1 76 1 350 1 102 1 
89 1 289 1 214 1 257 3 162 1 207 3 76 1 0 1 350 1 198 1 102 1 
203 1 289 1 69 1 211 1 
289 1 214 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 38 1 205 3 137 1 138 1 63 1 92 9 8 2 191 1 43 2 69 1 44 5 17 2 375 1 144 1 73 6 309 2 282 1 310 1 149 9 122 1 313 1 376 1 314 1 267 2 225 2 104 4 127 1 
253 2 38 1 205 3 137 1 138 1 63 1 92 9 8 2 191 1 43 2 69 1 44 5 17 2 375 1 144 1 73 6 282 1 309 2 310 1 149 9 122 1 313 1 376 1 314 1 267 2 225 2 104 4 127 1 
253 2 38 1 205 4 137 1 138 1 63 1 92 10 8 2 191 1 43 2 69 1 44 6 17 2 375 1 144 1 73 7 282 1 309 2 310 1 149 10 122 1 313 1 376 1 314 1 267 2 225 2 104 5 127 1 
253 2 38 1 205 2 137 1 138 1 63 1 92 7 8 2 191 1 43 2 69 1 44 4 17 2 375 1 144 1 73 4 282 1 309 1 310 1 149 7 122 1 376 1 314 1 267 2 225 2 104 3 127 1 
44 3 253 1 205 1 73 3 309 2 149 4 122 1 137 1 313 1 314 1 267 1 8 1 92 4 225 1 127 1 191 1 104 2 43 1 
44 1 17 1 149 2 122 1 137 1 112 1 314 1 63 1 267 1 123 1 92 2 153 1 8 1 225 1 43 1 69 1 
44 2 17 1 38 1 205 1 73 1 149 3 122 1 137 1 314 1 267 2 92 3 104 1 43 2 
253 1 158 1 38 1 205 3 137 1 92 9 8 1 191 1 43 2 44 5 17 1 73 7 309 2 310 1 119 1 149 9 122 1 376 1 313 1 314 1 267 2 104 4 127 1 225 1 
253 1 158 1 38 1 205 3 137 1 92 9 8 1 191 1 43 2 44 5 17 1 73 7 309 2 310 1 119 1 149 9 122 1 376 1 313 1 314 1 267 2 104 4 127 1 225 1 
130 1 107 1 210 1 
140 2 6 1 210 1 
274 2 279 2 173 2 52 1 59 2 379 2 380 1 42 2 
254 1 293 1 321 1 109 2 59 3 135 1 185 1 369 2 209 1 42 2 273 1 274 3 238 1 67 1 68 1 114 1 261 1 279 2 264 1 217 1 357 1 120 1 24 1 359 1 247 1 199 2 173 2 289 1 52 1 290 2 105 1 226 1 342 1 106 1 379 2 380 1 36 2 
274 1 279 1 173 1 59 1 218 1 379 1 380 1 42 1 
130 1 193 1 279 1 110 1 59 1 184 1 324 1 210 1 198 1 274 1 260 1 301 1 239 1 82 1 
130 1 193 1 279 1 110 2 59 1 184 1 324 1 42 1 210 1 198 1 173 1 274 1 239 2 82 1 379 1 
110 1 9 1 239 1 362 1 151 1 
130 1 189 1 110 2 9 1 239 2 275 1 151 1 210 1 
110 1 239 1 151 1 
274 1 279 1 173 1 110 1 9 1 59 1 239 1 218 1 379 1 380 1 25 1 42 1 
210 1 
130 1 110 2 9 1 239 2 275 1 151 1 210 1 354 1 
130 2 39 1 110 5 255 1 59 1 368 2 207 1 42 1 165 1 210 2 167 1 274 1 190 1 9 2 370 1 239 5 275 1 143 2 279 1 97 1 48 1 218 1 22 2 246 2 25 1 151 2 358 2 124 1 28 4 173 1 125 1 129 2 379 1 55 1 380 1 228 5 
321 1 279 1 109 1 59 2 217 1 185 1 209 1 42 1 359 1 247 1 113 1 199 1 274 2 290 1 240 1 68 1 226 1 342 1 379 1 116 1 
52 1 107 1 
279 2 145 1 59 2 150 1 42 1 274 2 173 1 52 2 379 1 
18 1 240 1 343 1 
321 1 109 1 59 1 217 1 185 1 209 1 247 1 359 1 199 1 274 1 52 1 290 1 226 1 68 1 342 1 262 1 
113 1 173 1 274 3 279 3 52 1 59 3 379 3 42 3 
274 1 279 1 184 1 59 1 295 1 379 1 42 1 
274 1 279 1 173 1 184 1 145 1 59 1 379 1 150 1 42 1 
293 1 321 1 109 1 110 1 59 4 184 1 135 1 185 1 369 2 324 1 209 1 42 3 139 1 113 1 274 4 67 1 239 1 68 1 114 1 261 1 116 1 193 1 279 3 264 1 217 1 357 1 120 1 150 1 359 1 247 1 198 1 315 1 199 1 173 2 289 1 52 1 290 1 105 1 226 1 342 1 82 1 379 3 380 1 36 1 
172 1 113 1 274 2 279 2 301 1 52 1 59 2 379 1 42 1 
193 1 279 3 110 1 184 1 59 3 150 1 324 1 42 3 210 1 198 1 113 2 315 1 173 1 274 3 239 1 168 1 82 1 379 3 116 1 
18 1 279 2 59 2 150 1 42 2 113 1 173 1 274 2 240 1 379 2 
321 1 109 1 59 1 217 1 185 1 209 1 247 1 359 1 199 1 274 1 52 1 290 1 226 1 68 1 342 1 
321 1 109 1 59 1 217 1 185 1 209 1 359 1 199 1 258 1 274 1 52 1 290 1 226 1 10 1 68 1 
254 2 293 1 135 1 369 2 91 1 166 1 347 1 67 1 303 1 240 2 114 1 143 1 18 2 307 1 284 1 21 1 357 2 120 1 289 1 174 1 54 1 129 1 343 2 36 4 
193 1 237 1 274 1 279 1 184 1 59 1 379 1 42 1 
279 5 59 5 150 1 42 4 172 1 154 1 113 2 274 5 173 1 301 1 52 1 31 1 379 4 116 1 
237 1 274 2 279 2 184 1 59 2 295 1 379 2 42 2 
216 1 194 1 
216 1 194 1 
348 1 160 1 
348 1 160 1 
348 1 160 1 
216 1 194 1 263 1 
216 1 194 1 263 1 
216 1 194 1 270 1 
348 1 216 2 194 2 330 1 223 1 160 1 
216 1 194 1 263 1 
216 1 194 1 308 1 
216 1 194 1 308 1 
216 1 194 1 308 1 
45 1 194 2 216 2 70 2 110 2 346 1 3 2 26 1 210 1 61 1 288 1 340 1 330 1 224 2 317 2 239 2 79 3 276 1 142 2 
157 1 364 1 110 1 346 1 270 1 59 2 3 1 42 2 274 2 239 1 12 1 142 1 216 1 194 1 96 1 279 2 283 1 146 1 100 1 317 1 224 1 52 1 79 1 379 2 
253 1 8 1 225 1 
8 1 153 1 225 1 
253 2 8 3 153 1 374 1 361 1 14 1 
253 1 8 2 153 1 374 1 361 1 243 1 
253 1 8 2 153 1 374 1 361 2 
130 1 157 1 110 5 368 1 111 2 6 1 165 1 210 2 328 2 94 1 140 3 9 4 239 5 95 1 275 1 143 1 277 2 334 1 307 1 337 1 283 1 22 1 151 1 100 1 358 1 28 3 78 1 128 1 54 1 129 1 227 1 228 2 
130 1 204 1 110 9 368 2 111 6 6 3 327 5 210 5 165 1 349 1 328 6 140 9 259 1 9 7 370 1 141 1 239 9 95 2 371 1 275 1 143 3 16 1 334 2 307 3 337 1 22 2 151 6 100 4 358 2 28 8 128 3 54 3 129 3 362 5 228 6 
130 1 110 3 368 1 111 2 6 2 210 3 328 2 94 1 140 4 9 2 370 1 239 3 95 1 277 1 143 1 334 1 307 1 22 1 100 1 358 1 28 3 128 1 54 1 129 1 227 1 228 2 
130 1 204 1 110 4 368 1 111 4 6 3 210 4 328 4 94 1 140 7 9 3 370 1 141 1 239 4 95 1 277 2 143 2 16 1 334 1 307 2 22 1 100 2 358 1 28 5 128 2 54 2 129 2 227 1 228 4 
185 1 305 1 107 1 
185 1 304 1 
181 1 
185 1 209 1 
359 1 341 1 185 3 305 2 209 1 101 1 
359 1 185 1 209 1 
185 1 372 1 
254 4 97 1 47 1 132 1 2 2 88 1 357 3 166 2 347 3 167 1 125 1 129 1 241 1 115 1 175 1 143 1 36 7 
254 4 97 1 47 1 132 1 2 2 88 1 357 3 166 2 347 3 167 1 125 1 129 1 241 1 115 1 175 1 143 1 36 7 
254 4 97 1 47 1 132 1 2 2 88 1 357 3 166 2 347 3 167 1 235 1 125 1 129 1 241 1 115 1 175 1 143 1 36 7 
293 1 0 3 254 16 132 2 323 1 367 1 88 1 135 1 2 3 369 2 208 1 166 5 347 10 167 2 114 1 241 1 115 5 143 4 97 1 307 3 47 2 23 4 357 15 120 1 29 1 125 2 128 3 54 3 129 4 175 1 269 1 291 1 381 1 36 31 
254 5 293 2 97 1 47 1 132 1 2 2 135 2 357 4 120 2 369 4 166 3 347 4 167 1 29 1 125 1 114 2 129 1 241 1 175 1 115 1 143 1 36 9 252 1 320 1 
253 1 321 1 202 1 109 1 365 1 206 1 60 1 137 1 298 1 92 2 8 2 211 1 68 1 43 1 14 1 44 1 17 1 215 1 118 1 73 1 149 2 122 1 221 1 314 1 267 1 153 1 199 1 290 1 225 1 53 1 
253 1 321 1 202 1 109 1 365 1 206 1 298 1 92 3 8 2 211 1 332 1 68 1 43 1 14 1 44 1 306 1 17 1 215 1 118 1 73 2 149 3 122 1 314 1 267 1 153 1 199 1 290 1 225 1 53 1 250 1 
253 1 321 1 202 1 109 1 206 1 298 1 92 2 8 2 211 1 332 1 68 1 14 1 44 1 306 1 17 1 215 1 73 2 149 2 122 1 314 1 153 1 199 1 290 1 225 1 53 1 
108 1 321 1 202 2 109 1 256 1 206 2 185 1 209 1 92 1 211 2 68 1 11 1 43 1 213 1 17 2 49 1 149 1 267 1 199 1 290 1 30 1 226 1 250 1 
253 1 321 1 202 1 109 1 365 1 206 1 60 1 137 1 298 1 92 1 8 2 211 1 68 1 43 1 14 1 306 1 17 1 215 1 118 1 149 1 267 1 153 1 199 1 290 1 225 1 53 1 
212 1 
108 1 109 2 110 5 59 1 162 2 6 2 209 1 210 2 165 1 300 2 260 1 301 1 68 1 117 2 19 1 20 1 74 1 22 1 312 2 75 1 358 1 222 1 27 1 28 2 316 1 318 2 226 2 82 1 363 1 228 2 130 1 321 1 180 1 366 2 184 1 368 1 185 1 230 2 90 1 324 1 140 2 274 1 239 5 95 1 275 3 193 1 279 1 244 1 49 1 151 6 339 4 198 1 199 2 290 2 344 1 
180 1 110 3 59 1 184 1 230 1 90 1 324 1 274 1 301 1 260 1 239 3 275 1 354 1 193 1 279 1 19 1 151 2 339 2 198 1 82 1 363 1 344 1 
130 1 180 1 110 3 59 1 184 1 162 1 90 1 324 1 210 1 274 1 301 1 260 1 239 3 275 1 354 1 193 1 279 1 19 1 151 1 339 3 198 1 82 1 363 1 344 1 
130 1 180 1 110 3 59 1 184 1 162 1 230 1 90 1 324 1 210 1 300 1 274 1 301 1 260 1 239 3 275 1 354 1 193 1 279 1 19 1 151 2 339 3 198 1 82 1 363 1 344 1 
110 5 59 1 162 4 6 2 210 5 165 1 299 1 300 4 65 1 260 1 301 1 169 1 170 1 354 1 117 2 19 1 22 1 74 1 312 2 75 1 358 1 28 1 318 2 82 1 363 1 228 1 130 5 180 1 366 2 184 1 368 1 230 4 90 1 324 1 274 1 239 5 275 3 242 1 193 1 279 1 151 7 339 6 198 1 344 1 
110 4 59 1 162 2 6 2 165 1 210 2 300 2 301 1 260 1 117 2 19 1 22 1 74 1 312 2 75 1 358 1 222 1 28 1 318 2 82 1 363 1 228 1 130 1 180 1 366 2 184 1 368 1 230 2 90 1 324 1 274 1 140 2 239 4 275 2 193 1 279 1 151 4 339 4 198 1 344 1 
130 1 180 1 366 2 110 4 59 1 184 1 162 2 368 1 230 2 90 1 6 2 324 1 210 1 165 1 300 2 65 1 274 1 301 1 260 1 239 4 275 2 169 1 170 1 193 1 117 2 279 1 19 1 74 1 22 1 312 2 151 4 75 1 358 1 339 4 28 1 198 1 318 2 82 1 363 1 344 1 228 1 
130 1 180 1 366 2 110 4 59 1 184 1 162 2 368 1 230 2 90 1 6 2 324 1 210 1 165 1 300 2 65 1 274 1 301 1 260 1 239 4 275 2 169 1 170 1 193 1 117 2 279 1 19 1 74 1 22 1 312 2 151 4 75 1 358 1 339 4 28 1 198 1 318 2 82 1 363 1 344 1 228 1 
130 1 229 1 131 2 180 1 110 4 59 1 184 1 162 2 368 1 230 2 90 1 324 1 210 1 165 1 300 2 65 1 140 2 274 1 301 1 260 1 239 4 353 1 275 2 192 2 193 1 117 2 279 1 19 1 74 1 22 1 151 4 358 1 339 4 28 1 198 1 318 2 82 1 32 1 363 1 344 1 228 1 
130 1 180 1 366 2 110 4 59 1 184 1 368 1 162 3 230 3 90 1 6 2 324 1 210 1 165 1 299 1 65 1 300 3 274 1 301 1 260 1 239 4 275 2 169 1 170 1 193 1 117 2 279 1 19 1 74 1 22 1 312 2 151 5 75 1 358 1 339 5 28 1 198 1 318 2 82 1 363 1 344 1 228 1 
130 1 180 1 366 2 110 4 59 1 184 1 368 1 162 3 230 3 90 1 6 2 324 1 210 1 165 1 299 1 65 1 300 3 274 1 301 1 260 1 239 4 275 2 169 1 170 1 193 1 117 2 279 1 19 1 74 1 22 1 312 2 151 5 75 1 358 1 339 5 28 1 198 1 318 2 82 1 363 1 344 1 228 1 
110 4 59 1 162 2 165 1 210 1 300 2 301 1 260 1 117 2 19 1 22 1 74 1 358 1 222 1 28 1 318 2 82 1 363 1 228 1 229 1 130 1 180 1 131 2 184 1 368 1 230 2 90 1 324 1 274 1 140 2 239 4 275 2 192 2 193 1 279 1 151 4 339 4 198 1 344 1 
293 1 254 3 135 1 2 1 369 2 166 2 347 2 167 1 67 1 240 1 114 1 241 1 143 1 18 1 97 1 357 3 120 1 125 1 289 1 52 2 174 1 129 1 343 1 175 1 107 1 36 6 
293 2 0 3 254 8 367 1 135 2 369 4 163 1 208 1 166 1 347 2 351 1 67 2 240 11 114 2 115 1 15 1 143 2 18 4 307 1 264 1 23 3 357 6 311 1 120 2 196 1 289 1 52 1 128 2 54 2 129 1 106 1 343 11 36 14 
321 1 293 1 254 1 109 1 183 1 59 2 161 1 135 1 185 1 369 2 163 1 40 1 209 1 42 1 113 1 274 2 67 1 68 1 114 1 262 1 116 1 18 1 279 1 217 1 264 1 357 1 120 1 359 1 247 1 199 1 289 1 52 1 290 1 226 1 342 1 379 1 106 1 36 2 
293 3 254 10 109 3 1 1 59 3 2 1 163 1 164 2 209 2 166 4 257 2 347 8 167 1 113 1 67 3 68 2 114 3 115 4 116 1 306 1 18 7 307 2 264 1 217 2 357 10 120 3 359 2 125 1 226 1 128 2 129 3 175 1 319 2 35 1 36 20 321 2 135 3 185 2 369 6 325 1 42 1 274 3 240 7 241 1 143 3 97 1 279 1 280 2 247 2 199 3 289 3 52 2 290 3 105 2 54 2 342 2 106 1 379 1 343 7 
108 1 321 2 293 2 85 1 254 1 109 8 182 1 59 1 135 2 185 3 369 4 232 1 42 1 209 2 113 1 274 1 67 2 68 2 114 2 13 1 306 1 279 1 49 1 264 1 286 1 357 1 120 2 24 2 221 1 248 1 199 8 289 2 290 7 360 1 174 1 226 2 379 1 106 1 36 2 
293 1 254 1 59 1 135 1 369 2 163 1 42 1 166 1 297 1 347 1 274 1 67 1 240 1 114 1 143 1 18 1 279 1 307 1 357 2 150 1 120 1 173 1 289 1 128 1 54 1 129 1 343 1 379 1 36 3 
293 1 254 2 18 1 135 1 120 1 369 2 91 1 347 1 289 1 67 1 240 1 174 1 114 1 54 1 343 1 115 1 143 1 36 2 
293 1 18 1 307 1 135 1 357 2 120 1 369 2 166 1 347 1 289 1 67 1 240 1 174 1 303 1 114 1 129 1 343 1 36 2 
254 2 293 1 135 1 369 2 166 1 347 2 67 1 240 2 114 1 115 1 143 1 18 2 307 1 357 2 120 1 289 1 128 1 174 1 54 1 129 1 343 2 36 4 
293 1 254 2 18 1 135 1 120 1 369 2 232 1 91 1 347 1 289 1 67 1 240 1 114 1 54 1 343 1 115 1 143 1 36 2 
293 1 18 1 307 1 135 1 357 2 120 1 369 2 232 1 166 1 347 1 289 1 67 1 240 1 303 1 114 1 129 1 343 1 36 2 
254 2 293 1 135 1 369 2 232 1 166 1 347 2 67 1 240 2 114 1 115 1 143 1 18 2 307 1 357 2 120 1 289 1 128 1 54 1 129 1 343 2 36 4 
254 2 293 1 135 1 369 2 166 1 347 2 67 1 240 2 114 1 115 1 143 1 18 2 307 1 357 2 120 1 289 1 128 1 54 1 129 1 343 2 36 4 
254 1 321 1 293 1 109 1 59 1 135 1 185 1 369 2 209 1 274 1 67 1 68 1 114 1 217 1 264 1 357 1 120 1 359 1 247 1 199 1 289 1 52 1 290 1 105 1 226 1 342 1 106 1 36 2 
254 1 321 1 293 1 109 1 59 1 135 1 185 1 369 2 209 1 258 1 274 1 67 1 68 1 10 1 114 1 217 1 264 1 357 1 120 1 359 1 152 1 199 1 289 1 52 1 290 1 226 1 106 1 36 2 
254 2 293 1 135 1 369 2 163 1 166 1 347 2 67 1 240 2 114 1 115 1 143 1 18 2 307 1 357 2 120 1 289 1 128 1 54 1 129 1 343 2 36 4 
254 2 321 1 293 1 109 1 59 1 135 1 185 1 369 2 209 1 166 1 347 2 274 1 67 1 240 2 68 1 114 1 115 1 143 1 18 2 307 1 280 1 217 1 357 2 120 1 221 1 359 1 247 1 199 1 289 1 290 1 105 1 128 1 54 1 129 1 342 1 343 2 36 4 
293 1 254 2 59 1 135 1 369 2 163 1 42 1 347 1 274 1 67 1 240 1 114 1 115 1 143 1 18 1 307 1 279 1 148 1 357 1 150 1 120 1 173 1 289 1 128 1 54 1 129 1 379 1 343 1 36 3 
293 2 0 1 254 9 367 1 135 2 369 4 208 1 166 3 347 6 114 2 115 3 143 3 71 1 307 3 356 2 281 1 23 2 357 10 120 2 265 2 378 1 128 3 54 3 129 3 83 1 34 1 178 1 252 1 33 1 36 19 
293 3 254 14 0 2 367 2 135 3 369 6 41 1 166 1 347 2 114 3 115 1 143 3 373 1 307 2 356 4 281 1 23 2 357 12 120 3 265 1 197 1 50 1 378 2 29 2 155 1 77 1 128 3 54 3 129 2 34 1 178 2 252 1 33 1 36 26 
254 20 0 3 293 3 2 1 208 1 166 3 347 7 167 1 114 3 115 4 307 4 71 1 356 4 23 4 357 21 120 3 265 1 29 1 125 1 77 1 128 4 129 5 175 1 36 41 33 1 178 1 34 1 134 1 367 3 135 3 369 6 41 1 241 1 143 5 373 1 97 1 281 1 197 1 378 2 50 1 155 1 54 4 252 1 
254 20 0 3 293 4 2 1 208 1 166 4 347 7 167 1 114 4 115 3 307 3 71 1 356 4 23 4 357 18 120 4 265 1 29 2 125 1 77 1 128 4 129 4 175 1 36 38 33 1 178 1 34 1 134 1 367 3 135 4 369 8 41 1 241 1 143 5 373 1 97 1 281 1 197 1 378 2 50 1 155 1 54 4 252 1 
293 2 0 4 254 27 367 2 2 1 135 2 369 4 41 1 208 2 166 7 347 14 167 1 114 2 241 1 115 7 143 8 373 1 97 1 307 7 356 4 281 1 23 4 357 25 120 2 196 2 265 1 197 1 50 1 378 1 29 1 125 1 155 1 77 1 128 7 54 7 129 8 175 1 34 1 178 1 252 1 33 1 36 52 
288 1 216 1 194 1 330 1 317 1 224 1 3 1 276 1 142 1 84 1 
364 1 270 1 
216 1 194 1 317 1 224 1 331 1 86 1 294 1 3 1 142 1 
45 1 194 1 216 1 70 1 346 1 110 1 3 1 210 1 61 1 288 1 340 1 330 1 224 1 317 1 239 1 79 2 276 1 142 1 
45 1 194 1 216 1 70 1 346 1 110 1 3 1 210 1 61 1 288 1 340 1 330 1 224 1 317 1 239 1 79 2 276 1 142 1 
45 1 194 1 216 1 70 1 346 1 110 1 3 1 210 1 61 1 288 1 340 1 330 1 224 1 317 1 239 1 79 2 276 1 142 1 
223 1 263 1 171 1 
223 1 263 1 171 1 
308 1 80 1 
223 1 308 1 80 1 
146 1 12 1 
157 1 364 1 110 1 270 1 59 2 3 1 42 2 274 2 9 1 239 1 12 1 142 1 45 1 70 1 216 1 194 1 96 1 279 2 283 1 146 1 100 1 317 1 224 1 52 1 79 1 201 1 379 2 
263 1 171 1 
223 1 308 1 80 1 
321 1 322 1 293 1 85 1 254 1 109 2 59 2 135 1 185 1 4 1 369 2 163 1 209 1 236 1 274 2 67 1 68 1 114 1 279 2 147 1 264 1 287 1 357 1 120 1 24 2 248 1 199 2 289 1 290 2 106 1 36 2 
253 1 306 1 179 1 321 1 109 2 345 1 118 1 186 1 221 1 298 1 8 2 153 1 199 2 211 1 290 2 225 1 68 1 53 1 14 1 
253 1 306 1 336 1 321 1 109 1 345 1 118 1 298 1 8 2 153 1 199 1 211 1 290 1 225 1 53 1 68 1 14 1 
179 1 108 1 321 1 109 1 49 1 185 1 209 1 7 1 199 1 211 1 290 1 68 1 226 1 213 1 
253 1 306 1 179 1 321 1 109 1 345 1 118 1 186 1 298 1 8 2 153 1 199 1 211 1 290 1 225 1 68 1 53 1 14 1 
37 1 
130 1 28 1 190 1 207 1 107 1 210 1 228 1 
130 1 366 1 110 1 368 1 6 1 165 1 210 2 140 1 239 1 275 1 22 1 312 1 151 1 75 1 358 1 28 1 228 1 
109 3 110 5 207 1 111 6 6 6 209 3 62 1 165 4 210 8 64 2 68 4 304 3 214 2 305 2 307 2 22 4 221 1 358 4 359 3 28 9 316 1 126 2 226 1 128 2 129 2 177 1 319 2 228 8 130 2 321 3 368 4 271 1 185 10 272 2 188 2 326 1 328 6 190 1 140 12 239 5 95 2 275 3 372 2 143 2 245 2 246 2 99 1 151 5 101 1 198 2 199 3 290 3 54 2 55 2 
130 2 0 1 110 1 367 1 368 2 187 1 111 5 6 3 165 2 210 5 328 5 140 6 239 1 95 1 275 1 143 2 373 1 307 2 23 1 22 2 246 2 151 1 358 2 197 1 50 1 28 8 316 1 155 1 103 1 77 1 128 2 54 2 129 2 55 1 228 5 
110 1 255 1 59 1 368 1 42 1 165 1 167 1 274 1 239 1 169 1 143 2 97 1 279 1 22 1 218 1 246 2 25 1 358 1 28 2 173 1 125 1 129 1 379 1 55 1 380 1 228 2 
130 1 368 1 22 1 207 1 165 1 358 1 210 1 28 1 190 1 228 1 
307 2 246 2 111 5 6 5 210 5 328 5 28 5 140 10 128 2 54 2 129 2 55 1 319 1 143 2 228 5 
130 1 110 1 239 1 275 1 151 1 210 1 
108 1 321 1 109 4 110 3 368 2 185 1 209 1 62 2 165 1 370 1 239 3 68 1 95 2 275 2 20 1 49 1 22 2 99 1 151 4 358 2 27 1 28 2 199 4 316 2 290 4 226 2 268 1 156 1 228 2 
293 1 321 1 109 1 59 3 135 1 185 1 369 2 42 2 209 1 274 3 67 1 68 1 261 1 114 1 279 2 264 1 217 1 357 1 120 1 247 1 359 1 199 1 173 2 289 1 52 1 290 1 105 1 226 1 342 1 379 2 380 1 36 1 
130 2 2 1 368 1 22 1 111 2 6 2 165 1 358 1 210 4 328 2 28 1 140 4 316 1 95 1 228 2 
203 1 317 1 142 1 
203 1 317 1 142 1 
317 1 146 1 276 1 266 1 142 1 
203 1 317 1 142 1 
76 1 317 1 142 1 
76 1 317 1 142 1 
76 1 317 1 142 1 
317 1 142 1 
216 1 194 1 
254 4 293 2 97 1 2 1 135 2 357 4 120 2 369 4 166 2 347 3 167 1 29 1 125 1 114 2 129 1 241 1 115 1 175 1 143 1 36 8 
254 3 97 1 2 1 357 3 166 2 347 2 167 1 125 1 129 1 241 1 175 1 107 1 143 1 36 6 
293 1 254 2 307 1 135 1 357 2 98 1 120 1 369 2 166 1 347 2 128 1 114 1 54 1 129 1 115 1 143 1 36 4 
0 1 254 3 307 1 367 1 23 2 357 4 208 1 166 1 347 2 128 1 54 1 129 1 115 1 143 1 36 7 
254 11 0 2 293 2 2 1 135 2 369 4 208 1 166 5 347 9 167 2 114 2 241 1 115 4 143 3 15 1 97 1 307 2 23 2 357 12 120 2 196 1 29 2 125 2 128 2 54 2 81 1 129 3 175 1 36 23 
23 1 357 1 36 1 
254 1 0 1 36 1 
293 1 254 3 307 1 135 1 98 1 357 3 120 1 369 2 166 2 347 3 128 1 114 1 54 1 129 1 115 1 319 1 143 1 36 6 
0 1 293 1 254 6 367 1 135 1 369 2 166 1 347 2 114 1 115 1 143 2 373 1 307 2 23 1 357 6 120 1 197 1 50 1 155 1 77 1 128 2 54 2 129 2 36 12 252 1 
254 3 97 1 357 3 166 1 347 2 167 1 125 1 129 1 115 1 143 1 36 6 
254 1 293 1 135 1 357 2 120 1 369 2 166 1 347 2 167 1 29 1 125 1 81 1 114 1 241 1 115 1 175 1 36 3 
293 1 254 5 97 1 255 1 135 1 357 5 120 1 369 2 166 3 347 5 167 2 125 2 114 1 129 2 115 2 143 2 252 1 36 10 
293 1 254 2 135 1 120 1 369 2 347 1 114 1 54 1 115 1 143 1 252 1 36 2 
293 1 254 2 307 1 135 1 357 2 120 1 369 2 166 1 347 2 128 1 114 1 54 1 129 1 115 1 143 1 252 1 36 4 
293 3 254 1 71 1 135 3 357 2 120 3 369 6 166 1 347 2 167 1 29 1 125 1 81 1 114 3 115 1 36 3 252 1 
293 5 0 3 254 16 323 1 367 1 2 1 135 5 369 10 208 1 166 7 347 12 167 3 114 5 241 1 115 5 143 5 97 2 71 1 307 3 23 4 357 18 98 1 120 5 29 2 125 3 128 3 81 1 54 3 129 5 175 1 269 1 291 1 252 1 36 34 
0 1 293 1 254 4 367 1 2 1 135 1 369 2 166 2 347 2 167 1 114 1 241 1 143 1 97 1 23 1 357 4 120 1 155 1 125 1 129 1 175 1 36 8 252 1 
293 2 0 1 254 6 367 1 2 1 135 2 369 4 208 1 166 2 347 3 167 1 114 2 241 1 115 1 143 2 97 1 23 2 357 5 98 1 120 2 125 1 155 1 128 1 54 1 129 1 175 1 36 11 252 1 
0 1 293 3 254 9 367 1 2 1 135 3 369 6 166 3 347 4 167 1 114 3 241 1 115 1 143 3 373 1 97 1 307 2 23 1 98 1 357 10 120 3 197 1 50 1 29 1 125 1 155 1 77 1 128 2 54 2 129 3 175 1 36 19 252 1 
0 1 293 3 254 10 367 1 2 1 135 3 369 6 166 3 347 5 167 1 114 3 241 1 115 2 143 3 373 1 97 1 307 1 23 1 98 1 357 7 120 3 197 1 50 1 29 1 125 1 155 1 77 1 128 2 54 2 129 2 175 1 36 17 252 1 
0 1 293 1 254 4 367 1 2 1 135 1 369 2 166 2 347 2 167 1 114 1 241 1 143 1 97 1 23 1 357 4 120 1 155 1 125 1 129 1 175 1 36 8 252 1 
0 1 293 1 254 6 367 1 135 1 369 2 166 1 347 2 114 1 115 1 143 2 373 1 307 2 23 1 357 6 120 1 197 1 50 1 155 1 77 1 128 2 54 2 129 2 36 12 252 1 
293 4 0 1 254 10 367 1 2 1 135 4 369 8 166 3 347 5 167 1 114 4 241 1 115 2 143 3 373 1 97 1 307 1 23 1 357 8 98 1 120 4 197 1 50 1 29 2 125 1 155 1 77 1 128 2 54 2 129 2 175 1 36 18 252 1 
293 4 0 1 254 9 367 1 135 4 369 8 166 3 347 6 114 4 115 3 143 3 373 1 71 1 307 2 23 1 357 7 120 4 197 1 50 1 29 2 155 1 77 1 128 3 54 3 129 2 36 16 252 1 
254 3 97 1 357 4 166 3 347 6 167 3 125 3 129 1 241 1 175 2 115 3 143 1 36 7 
293 4 0 1 254 10 367 1 2 1 135 4 369 8 166 3 347 4 167 1 114 4 241 1 115 1 143 3 373 1 97 1 71 1 307 1 23 1 357 8 120 4 197 1 50 1 29 2 125 1 155 1 77 1 128 2 54 2 129 2 175 1 36 18 252 1 
172 1 274 1 279 1 301 1 52 1 59 1 249 1 
46 1 279 1 338 1 133 1 59 1 234 1 172 1 274 1 301 1 52 1 249 1 352 1 
108 1 321 1 199 1 109 1 290 1 49 1 68 1 226 1 185 1 209 1 107 1 
321 1 279 1 109 1 59 2 217 1 185 1 209 1 42 1 359 1 247 1 113 1 199 1 274 2 52 1 290 1 68 1 226 1 379 1 
321 1 109 1 59 2 184 1 185 3 272 1 324 1 42 2 209 2 62 1 113 1 274 2 68 1 372 1 193 1 279 2 217 1 247 1 359 2 199 1 52 1 290 1 379 1 
321 1 109 2 59 2 184 1 185 3 272 1 324 1 42 2 209 2 62 1 113 1 274 2 10 1 68 1 372 1 193 1 279 2 217 1 359 2 199 2 52 1 290 2 200 1 379 1 
130 1 321 1 109 3 110 2 87 1 185 4 272 1 209 1 296 1 62 1 210 1 239 2 68 1 304 1 305 1 372 1 151 1 359 1 198 1 199 3 290 3 200 1 226 1 
130 1 321 1 109 3 110 2 185 4 272 1 151 1 209 1 210 1 62 1 359 1 198 1 199 3 290 3 239 2 200 1 226 1 68 1 304 1 372 1 214 1 305 1 
321 1 199 1 109 1 290 1 68 1 360 1 
306 1 321 2 109 7 182 1 286 1 185 3 24 1 221 1 209 2 101 1 248 1 329 1 359 1 199 7 290 6 302 1 360 1 226 2 68 3 13 1 278 1 
254 3 321 1 293 2 109 1 59 2 2 1 135 2 185 1 369 4 163 1 164 1 209 1 42 1 166 2 347 2 167 1 236 1 113 1 274 2 67 2 240 1 68 1 114 2 241 1 143 1 18 1 97 1 279 1 280 1 217 1 357 3 120 2 221 1 359 1 247 1 199 1 125 1 289 2 52 2 290 1 105 1 129 1 342 1 343 1 379 1 175 1 36 6 
130 1 109 1 110 3 368 2 185 2 207 1 210 1 165 2 64 1 190 1 9 1 239 3 304 1 275 1 214 1 305 1 245 1 22 2 99 1 151 2 358 2 28 1 198 1 199 1 290 1 126 1 226 1 228 1 
321 1 109 2 185 2 221 1 326 1 209 1 101 1 359 1 199 2 290 2 360 1 68 2 305 1 
108 1 321 1 109 4 49 1 185 1 221 1 209 1 199 4 290 4 333 1 200 1 68 1 226 1 
321 1 109 2 185 1 325 1 209 1 62 1 329 1 359 1 377 1 199 2 290 2 302 1 68 2 176 1 
298 1 8 1 153 1 321 1 199 1 109 1 290 1 225 1 68 1 226 1 
306 1 321 1 109 2 185 1 287 1 221 1 209 1 248 1 199 2 290 2 68 1 
108 1 321 2 109 5 182 1 49 1 286 1 185 3 221 1 209 2 62 1 248 1 199 5 290 4 333 1 226 1 68 2 
108 1 159 1 321 2 109 5 182 1 49 1 185 3 221 1 209 2 62 1 248 1 199 5 290 4 333 1 226 1 68 2 
321 1 279 1 109 1 59 2 217 1 185 1 209 1 42 1 359 1 113 1 199 1 274 2 52 1 290 1 68 1 226 1 10 1 379 1 
321 1 109 1 185 1 209 1 62 1 101 1 329 1 359 1 199 1 290 1 302 1 68 2 278 1 
102 1 322 1 274 1 279 1 58 1 59 1 147 1 4 1 57 1 
292 1 93 1 58 1 
233 1 102 1 52 1 58 1 57 1 
130 1 193 1 292 1 110 2 58 1 184 1 285 1 324 1 210 1 233 2 102 2 198 1 93 1 315 1 9 1 52 1 239 2 82 1 57 2 
44 1 314 1 122 1 107 1 
44 1 314 1 267 1 92 1 149 1 43 1 122 1 
17 1 92 1 202 1 
44 1 149 3 121 1 122 1 136 1 5 1 137 1 267 1 63 2 314 1 92 3 43 1 
44 1 314 1 267 1 92 2 73 1 309 1 149 2 43 1 122 1 
44 1 253 1 149 1 137 1 267 1 92 1 8 1 191 1 104 1 225 1 43 1 
44 1 314 1 267 1 92 1 149 1 43 1 137 1 
314 2 267 1 92 1 149 1 43 1 122 1 137 1 
44 1 195 1 149 2 137 1 314 1 267 2 92 2 66 1 43 2 56 1 
44 2 73 2 205 1 310 1 149 3 122 1 137 1 376 1 314 1 267 1 92 3 104 1 43 1 
44 1 253 1 73 1 149 2 122 1 137 1 220 1 314 1 267 1 153 1 8 2 92 2 225 1 43 1 14 1 
44 2 73 2 205 1 309 1 149 4 122 1 137 1 313 1 314 1 267 2 92 4 104 1 43 2 
44 1 314 1 267 1 92 1 149 1 43 1 122 1 137 1 
44 3 73 2 205 1 149 4 121 1 122 2 5 1 63 1 314 2 267 1 92 4 104 1 43 1 251 1 
44 1 335 1 355 1 73 1 149 2 119 1 122 1 137 1 314 1 267 1 92 2 43 1 
44 1 149 3 121 1 122 1 5 2 137 1 267 1 63 2 314 1 92 3 51 1 43 1 
44 2 350 1 231 2 219 1 
267 1 92 1 149 1 43 1 89 1 137 1 
44 1 314 1 267 1 92 2 73 1 149 2 43 1 122 1 137 1 376 1 
72 1 
44 1 314 1 267 1 92 1 149 1 43 1 122 1 137 1 
44 1 314 1 63 1 267 1 92 3 73 1 149 3 43 1 122 1 137 1 376 1 
44 1 205 1 104 1 251 1 
44 1 314 1 

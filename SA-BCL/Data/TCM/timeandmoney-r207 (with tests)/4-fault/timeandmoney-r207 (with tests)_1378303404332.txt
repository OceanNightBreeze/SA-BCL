#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 300 162 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 300 167 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 300 167 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 300 167 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 300 167 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 301 166 343 369 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 243 9 242 78 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 243 9 242 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
142 1 223 3 317 9 67 1 168 2 170 1 146 1 171 2 270 1 75 2 123 2 206 1 205 9 54 1 326 5 254 2 101 4 79 6 231 2 279 1 255 1 80 1 281 1 104 2 216 1 288 1 221 1 313 1 
142 1 223 3 317 9 67 1 168 2 170 1 146 1 171 2 270 1 75 2 123 2 206 1 205 9 54 1 326 5 254 2 101 4 79 6 231 2 279 1 255 1 80 1 281 1 104 2 216 1 288 1 221 1 313 1 
142 1 223 4 317 10 67 1 168 2 170 1 146 1 171 2 270 1 75 2 123 2 206 1 205 10 54 1 326 6 254 2 101 5 79 7 231 2 279 1 255 1 80 1 281 1 104 2 216 1 288 1 221 1 313 1 
142 1 223 2 317 7 67 1 168 1 146 1 171 2 270 1 75 2 123 2 206 1 205 7 54 1 326 4 254 2 101 3 79 4 231 2 279 1 255 1 80 1 281 1 104 2 216 1 288 1 221 1 313 1 
223 1 255 1 317 4 67 1 168 2 104 1 170 1 146 1 171 1 288 1 123 1 205 4 206 1 326 3 254 1 79 3 101 2 231 1 
255 1 80 1 317 2 256 1 104 1 146 1 171 1 270 1 97 1 288 1 75 1 205 2 356 1 326 1 254 1 231 1 
223 3 142 1 86 1 317 9 67 1 168 2 170 1 146 1 171 2 75 1 123 1 205 9 54 1 206 1 326 5 101 4 79 7 254 1 231 1 255 1 104 2 288 1 313 1 375 1 
223 3 142 1 86 1 317 9 67 1 168 2 170 1 146 1 171 2 75 1 123 1 205 9 54 1 206 1 326 5 101 4 79 7 254 1 231 1 255 1 104 2 288 1 313 1 375 1 
142 1 223 1 255 1 317 3 104 2 146 1 171 2 288 1 75 1 205 3 326 2 101 1 79 1 
166 2 224 1 89 2 25 1 70 1 343 1 71 2 293 2 72 1 74 2 201 3 173 1 323 1 121 1 363 1 297 2 8 1 301 2 10 1 30 1 103 1 13 2 368 1 305 2 35 1 283 1 259 1 258 1 62 1 219 1 220 1 239 1 311 1 373 3 43 1 139 1 23 1 
74 1 201 1 305 1 98 1 229 1 297 1 70 1 373 1 71 1 195 1 
196 1 90 1 145 1 71 1 234 1 147 1 201 1 119 1 204 1 296 1 125 1 373 1 243 1 195 1 
196 2 305 1 90 1 145 1 71 1 234 1 147 1 74 1 201 1 119 1 204 2 125 1 297 1 373 1 195 1 
196 1 204 1 250 1 273 1 58 1 
196 2 305 1 1 1 70 1 58 1 71 1 147 1 74 1 40 1 201 1 107 1 98 1 204 2 273 1 229 1 297 1 125 1 373 1 195 1 
196 1 204 1 58 1 
331 1 77 2 147 1 
74 2 201 2 305 2 35 1 297 2 70 1 373 2 71 2 
196 1 305 1 70 1 71 1 40 1 74 1 201 1 98 1 204 1 273 1 229 1 297 1 373 1 195 1 
147 1 
196 2 305 1 1 1 70 1 58 1 71 1 147 1 74 1 40 1 201 1 98 1 204 2 273 1 229 1 297 1 125 1 373 1 22 1 195 1 
196 5 1 1 24 2 70 1 91 1 71 1 147 2 51 2 74 1 201 1 98 1 204 5 273 2 229 1 297 1 207 1 125 2 5 2 28 1 302 1 29 1 232 1 305 1 211 4 129 2 330 2 282 5 58 2 233 1 37 1 371 1 40 1 310 2 373 1 240 1 64 1 267 1 195 1 
306 1 125 1 147 1 
305 1 35 2 71 2 148 1 227 1 74 1 201 2 297 1 373 2 
303 1 159 1 321 1 
166 1 368 1 35 1 258 1 343 1 293 1 62 1 219 1 201 1 264 1 173 1 239 1 373 1 43 1 301 1 10 1 
35 1 306 1 
368 1 166 1 305 1 46 1 258 1 343 1 159 1 71 1 293 1 62 1 219 1 201 2 173 1 239 1 297 1 373 2 43 1 301 1 314 1 10 1 
305 4 46 2 35 1 71 5 227 1 74 1 201 5 190 1 297 4 373 5 9 1 325 1 314 1 243 1 
201 2 305 2 229 1 297 2 48 1 373 2 71 2 195 1 
74 1 201 3 305 3 46 1 35 1 297 3 373 3 71 3 
201 1 305 1 229 1 297 1 373 1 71 1 195 1 
74 1 227 1 201 1 305 1 297 1 373 1 71 1 148 1 195 1 
196 1 166 1 224 1 46 1 89 2 90 1 70 1 145 1 49 1 343 1 71 3 293 1 72 1 74 2 227 1 201 4 173 1 323 1 121 1 119 1 363 1 204 1 297 3 301 1 10 1 30 1 103 1 13 1 368 1 305 3 35 1 283 1 258 1 62 1 234 1 219 1 220 1 18 1 239 1 311 1 373 4 43 1 314 1 195 1 
201 2 305 1 46 1 35 1 297 1 373 2 9 1 71 2 243 1 
196 1 305 3 46 2 15 1 90 1 145 1 71 3 234 1 147 1 74 1 227 1 201 3 18 1 119 1 204 1 297 3 373 3 314 1 195 1 
74 1 227 1 201 2 305 2 46 1 297 2 373 2 159 1 71 2 321 1 
166 1 368 1 35 1 258 1 343 1 293 1 62 1 219 1 201 1 173 1 239 1 373 1 43 1 301 1 10 1 
166 1 368 1 35 1 133 1 343 1 293 1 62 1 201 1 173 1 189 1 239 1 373 1 43 1 301 1 10 1 
338 1 224 1 340 1 89 2 93 1 199 1 72 1 51 1 321 2 116 1 121 1 99 1 363 1 30 2 103 1 32 1 13 4 303 2 347 1 330 1 283 1 159 2 39 1 23 2 
201 1 305 1 90 1 297 1 373 1 48 1 71 1 195 1 
135 1 130 1 152 1 
135 2 56 1 151 1 307 1 268 1 152 2 
135 1 152 1 
135 1 152 1 
56 1 151 1 
56 1 151 1 
56 1 151 1 
135 1 262 1 152 1 
135 1 262 1 152 1 
135 1 262 1 152 1 
135 1 348 1 152 1 
135 1 348 1 152 1 
135 1 348 1 152 1 
196 1 197 1 225 1 71 2 269 1 272 1 360 1 201 2 204 1 297 2 366 1 76 1 208 1 230 1 152 1 305 2 35 1 130 1 215 1 187 1 135 1 16 1 238 1 373 2 
328 1 196 2 197 2 280 1 68 1 69 2 225 2 169 1 307 1 215 2 147 1 187 2 136 1 135 2 360 3 204 2 366 1 355 1 152 2 
123 1 14 2 213 1 356 1 231 2 
294 1 123 1 14 1 213 1 356 1 231 2 
123 1 254 1 231 1 
356 1 254 1 231 1 
123 2 14 1 213 1 247 1 356 1 231 3 
196 5 1 1 112 1 358 2 24 1 269 1 95 1 147 2 51 1 272 1 26 1 99 1 204 5 273 4 176 2 125 1 5 1 76 1 77 3 277 1 232 1 211 3 347 1 330 1 282 2 331 1 58 1 236 1 287 1 310 1 161 1 336 2 
339 1 196 9 1 1 358 6 24 2 342 5 95 2 147 5 51 3 272 4 26 3 99 3 204 9 150 1 250 5 273 7 176 6 125 1 5 2 77 9 302 1 11 1 155 1 232 1 211 8 347 3 330 3 282 6 331 3 58 6 287 2 310 2 161 1 21 1 374 1 
196 3 112 1 24 1 358 2 95 1 147 3 272 1 51 1 26 1 99 1 204 3 273 2 125 1 176 2 5 1 77 4 277 1 302 1 211 3 347 1 330 1 282 2 331 2 287 1 310 1 336 1 
339 1 196 4 112 1 358 4 24 1 95 1 147 4 272 2 51 2 26 2 99 2 204 4 273 3 125 1 176 4 5 1 77 7 302 1 277 1 155 1 211 5 347 2 330 2 282 4 331 3 287 1 310 1 336 2 21 1 
365 1 10 1 
31 1 
306 1 115 1 10 1 
239 1 43 1 10 1 
335 1 10 1 
43 1 10 1 
198 1 239 1 111 1 43 1 115 2 10 3 
32 3 13 7 182 1 330 1 359 1 3 1 233 1 199 2 51 1 226 1 41 1 228 1 207 1 28 1 126 2 299 1 23 4 30 3 
224 1 89 2 3 1 359 5 199 5 72 1 226 2 51 4 322 1 117 1 26 3 99 3 228 2 207 2 344 1 100 4 28 2 126 3 299 1 209 1 30 15 103 1 32 10 13 31 347 3 330 4 283 1 132 1 233 1 263 1 265 1 41 1 20 3 23 16 
224 2 89 4 359 1 3 1 199 3 72 2 51 1 226 1 117 1 295 1 228 1 207 1 126 2 28 1 30 4 103 2 32 4 13 9 330 1 283 2 332 1 233 1 41 1 23 5 
32 3 13 7 330 1 359 1 3 1 233 1 199 2 51 1 226 1 41 1 228 1 207 1 28 1 126 2 299 1 23 4 30 3 
32 3 13 7 330 1 359 1 3 1 233 1 199 2 51 1 226 1 41 1 228 1 207 1 28 1 126 2 299 1 23 4 30 3 
357 1 166 1 317 2 88 1 47 1 66 1 92 1 247 1 146 1 293 1 171 1 200 1 27 1 75 1 123 1 205 2 326 1 301 1 79 1 254 1 231 2 255 1 368 1 156 1 104 1 62 1 333 1 351 1 288 1 356 1 
357 1 166 1 317 3 88 1 47 1 66 1 92 1 247 1 146 1 293 1 171 1 73 1 200 1 75 1 123 1 205 3 326 1 301 1 179 1 254 1 79 2 231 2 154 1 255 1 368 1 156 1 104 1 62 1 351 1 356 1 
357 1 166 1 317 2 47 1 66 1 92 1 247 1 146 1 293 1 73 1 75 1 123 1 205 2 326 1 301 1 179 1 79 2 254 1 231 2 255 1 368 1 156 1 62 1 351 1 356 1 
166 1 357 2 317 1 66 2 2 1 343 1 293 1 171 1 118 1 75 2 122 1 205 1 301 1 10 1 154 1 368 1 156 2 104 1 60 1 36 1 62 1 43 1 44 1 
368 1 166 1 357 1 47 1 88 1 317 1 66 1 156 1 92 1 104 1 247 1 171 1 293 1 62 1 351 1 333 1 200 1 73 1 75 1 288 1 123 1 205 1 356 1 301 1 254 1 231 2 
175 1 
166 2 196 2 1 1 24 1 343 2 293 2 95 1 96 1 118 1 204 2 5 1 301 2 10 2 232 1 368 3 369 1 211 1 282 1 257 1 58 2 62 2 82 1 188 1 310 1 83 1 239 1 191 1 43 2 44 1 
210 1 196 3 180 1 1 1 183 1 90 1 145 1 58 2 71 1 50 1 234 1 201 1 119 1 204 3 296 1 373 1 324 1 127 1 346 2 22 1 195 1 243 1 
196 3 1 1 90 1 145 1 71 1 147 1 201 1 119 1 204 3 296 1 125 1 324 1 127 1 346 3 210 1 180 1 183 1 58 1 134 1 234 1 373 1 22 1 243 1 195 1 
210 1 196 3 180 1 1 1 183 1 90 1 145 1 58 2 71 1 134 1 50 1 234 1 201 1 119 1 204 3 296 1 373 1 324 1 127 1 346 3 22 1 376 1 195 1 243 1 
87 1 196 5 1 3 45 1 90 1 145 1 292 2 248 1 50 4 147 1 201 2 98 1 204 5 296 1 297 1 5 1 252 1 346 4 210 1 305 1 211 1 58 7 310 1 22 1 315 1 24 1 70 1 114 2 71 2 74 1 119 1 120 1 229 1 125 1 177 2 324 1 127 1 276 1 367 2 232 1 180 1 183 1 282 1 331 2 134 2 234 1 40 1 373 2 376 4 195 2 243 1 
196 4 45 1 1 2 90 1 145 1 292 2 50 2 147 1 201 2 98 1 204 4 296 1 297 1 5 1 346 4 210 1 305 1 211 1 58 4 158 1 310 1 24 1 70 1 114 2 71 2 74 1 119 1 229 1 125 1 177 2 324 1 77 2 276 1 127 1 367 2 232 1 180 1 183 1 282 1 331 2 134 2 234 1 40 1 373 2 195 2 243 1 376 2 
315 1 196 4 1 2 45 1 24 1 90 1 292 2 145 1 114 2 71 1 248 1 50 2 147 1 201 1 119 1 204 4 296 1 125 1 177 2 252 1 5 1 324 1 276 1 127 1 346 4 367 2 210 1 232 1 180 1 211 1 183 1 282 1 331 2 58 4 134 2 234 1 310 1 373 1 376 2 243 1 195 1 
196 4 45 1 1 2 90 1 145 1 292 2 248 1 50 2 147 1 201 2 98 1 204 4 296 1 297 1 5 1 252 1 346 4 210 1 305 1 211 1 58 4 310 1 315 1 24 1 70 1 114 2 71 2 74 1 119 1 229 1 125 1 177 2 324 1 127 1 276 1 367 2 232 1 180 1 183 1 282 1 331 2 134 2 234 1 40 1 373 2 195 2 243 1 376 2 
196 4 45 1 143 2 1 2 90 1 145 1 50 2 147 1 201 2 98 1 204 4 296 1 297 1 5 1 252 1 346 4 210 1 305 1 211 1 58 4 308 1 310 1 316 1 24 1 70 1 114 2 71 2 74 1 119 1 229 1 125 1 324 1 77 2 127 1 367 2 232 1 180 1 183 1 282 1 134 2 234 1 40 1 237 2 334 1 373 2 195 2 243 1 376 2 
196 4 45 1 1 2 90 1 145 1 292 2 248 1 50 3 147 1 201 2 98 1 204 4 296 1 297 1 5 1 252 1 346 5 210 1 305 1 211 1 58 5 310 1 315 1 24 1 70 1 114 2 71 2 74 1 120 1 119 1 229 1 125 1 177 2 324 1 127 1 276 1 367 2 232 1 180 1 183 1 282 1 331 2 134 3 234 1 40 1 373 2 376 3 195 2 243 1 
196 4 45 1 1 2 90 1 145 1 292 2 248 1 50 3 147 1 201 2 98 1 204 4 296 1 297 1 5 1 252 1 346 5 210 1 305 1 211 1 58 5 310 1 315 1 24 1 70 1 114 2 71 2 74 1 120 1 119 1 229 1 125 1 177 2 324 1 127 1 276 1 367 2 232 1 180 1 183 1 282 1 331 2 134 3 234 1 40 1 373 2 376 3 195 2 243 1 
196 3 1 1 143 1 45 1 24 1 90 1 145 1 114 2 71 1 50 1 147 1 201 1 119 1 204 3 296 1 125 1 5 1 77 2 324 1 127 1 346 3 367 2 210 1 232 1 180 1 211 1 183 1 282 1 58 2 158 1 134 1 308 1 234 1 237 2 310 1 373 1 376 1 243 1 195 1 
166 1 224 1 46 1 89 2 343 1 293 1 71 1 72 1 321 1 201 2 173 1 121 1 323 1 363 1 297 1 178 1 301 1 10 1 30 1 103 1 368 1 13 2 305 1 34 1 35 1 283 1 258 1 259 1 62 1 217 1 81 1 219 1 264 1 239 1 373 2 43 1 314 1 23 1 
244 1 341 1 46 1 89 6 3 1 343 1 199 4 293 3 51 3 201 3 99 2 207 1 297 1 301 3 10 2 103 3 13 20 303 7 305 1 347 2 259 1 258 2 159 7 217 1 62 2 219 2 311 2 314 1 23 10 166 3 224 3 113 1 359 4 71 1 72 3 73 1 321 7 172 2 26 2 361 2 173 2 323 1 121 3 363 3 126 1 28 1 30 10 32 8 368 2 35 2 330 3 283 3 233 1 38 2 41 1 239 2 373 3 43 2 193 2 
166 7 290 1 224 2 46 1 89 4 343 2 71 1 293 8 72 2 73 1 201 1 118 1 27 1 121 2 323 1 363 2 297 1 301 8 10 3 30 1 103 2 368 2 13 2 305 1 349 1 283 2 259 1 214 1 62 2 309 1 39 1 63 1 373 1 289 1 43 2 139 2 23 1 222 1 44 1 
224 1 89 2 199 1 71 1 72 1 321 1 52 1 51 1 74 1 227 1 201 1 26 1 121 1 99 1 363 1 297 1 30 2 32 1 103 1 303 1 13 3 305 1 347 1 330 1 283 1 159 1 217 1 373 1 23 1 
224 1 89 2 3 1 199 2 72 1 321 1 51 1 121 1 363 1 207 1 28 1 126 1 30 3 103 1 32 2 13 6 303 1 306 1 330 1 35 2 283 1 159 1 233 1 39 1 41 1 23 3 
224 2 89 4 359 1 199 1 72 2 51 2 321 4 26 2 203 1 323 1 121 2 99 2 363 1 344 1 100 3 30 6 12 1 209 1 32 2 103 2 13 14 303 11 347 1 35 1 330 1 283 2 259 1 159 11 217 1 286 1 19 1 20 3 23 8 
32 1 103 1 303 1 13 2 224 1 89 2 359 1 283 1 159 1 72 1 321 1 39 1 116 1 51 1 121 1 99 1 363 1 23 2 
32 1 103 1 338 1 303 1 13 2 224 1 347 1 89 2 330 1 283 1 199 1 159 1 72 1 321 1 39 1 121 1 363 1 30 2 
224 1 89 2 359 1 199 1 72 1 51 1 321 2 26 1 99 1 121 1 363 1 30 2 103 1 32 2 13 4 303 2 347 1 330 1 283 1 159 2 39 1 23 2 
32 1 103 1 303 1 13 2 224 1 89 2 359 1 283 1 214 1 159 1 72 1 321 1 116 1 51 1 121 1 99 1 363 1 23 2 
32 1 103 1 338 1 303 1 13 2 224 1 347 1 89 2 330 1 283 1 214 1 199 1 159 1 72 1 321 1 121 1 363 1 30 2 
224 1 89 2 359 1 199 1 72 1 51 1 321 2 26 1 99 1 121 1 363 1 30 2 103 1 32 2 13 4 303 2 347 1 330 1 283 1 214 1 159 2 23 2 
224 1 89 2 359 1 199 1 72 1 51 1 321 2 26 1 99 1 121 1 363 1 30 2 103 1 32 2 13 4 303 2 347 1 330 1 283 1 159 2 23 2 
166 1 224 1 89 2 343 1 293 1 72 1 201 1 173 1 121 1 323 1 363 1 301 1 10 1 30 1 103 1 13 2 368 1 35 1 283 1 259 1 258 1 62 1 219 1 239 1 311 1 373 1 43 1 23 1 
166 1 224 1 89 2 343 1 293 1 72 1 201 1 173 1 121 1 323 1 363 1 301 1 10 1 30 1 103 1 13 2 368 1 35 1 283 1 259 1 133 1 62 1 189 1 239 1 373 1 266 1 43 1 23 1 
224 1 89 2 359 1 199 1 72 1 51 1 321 2 26 1 99 1 121 1 363 1 30 2 103 1 32 2 13 4 303 2 347 1 330 1 283 1 159 2 217 1 23 2 
166 1 224 1 89 2 359 1 199 1 293 1 72 1 321 2 51 1 201 1 26 1 173 1 27 1 99 1 121 1 363 1 301 1 10 1 30 2 32 2 103 1 303 2 13 4 368 1 347 1 330 1 283 1 258 1 159 2 62 1 219 1 239 1 311 1 373 1 43 1 193 1 23 2 
224 1 89 2 359 1 71 1 72 1 51 1 321 1 74 1 227 1 201 1 26 1 121 1 99 1 363 1 297 1 30 1 32 1 103 1 13 3 303 1 305 1 347 1 330 1 283 1 159 1 217 1 312 1 373 1 23 2 
224 2 89 4 359 1 199 1 72 2 51 1 295 1 26 1 99 1 124 1 364 1 344 1 7 1 100 2 300 1 30 5 209 1 103 2 32 2 13 9 212 1 347 1 330 1 283 2 260 1 162 1 192 1 20 1 23 4 
224 3 167 1 89 6 359 1 199 1 72 3 149 1 271 1 51 2 117 2 295 1 26 2 99 2 362 1 124 1 364 2 344 2 7 3 100 2 300 1 102 1 30 9 32 2 103 3 13 20 212 1 347 1 330 1 283 3 285 1 138 1 192 2 20 2 23 11 
224 2 167 1 89 4 359 1 199 1 72 2 51 1 295 1 26 1 99 1 124 1 364 1 344 1 7 1 100 2 300 1 30 5 209 1 103 2 32 2 13 9 212 1 347 1 330 1 283 2 260 1 192 1 20 1 23 4 
224 2 167 1 89 4 359 1 199 1 72 2 51 1 295 1 26 1 99 1 124 1 364 1 344 1 7 1 100 2 300 1 30 5 209 1 103 2 32 2 13 9 212 1 347 1 330 1 283 2 260 1 192 1 20 1 23 4 
224 2 167 1 89 4 3 1 359 6 199 6 72 2 149 1 271 1 51 7 117 1 295 1 26 6 203 2 99 6 362 1 124 1 364 1 207 1 344 2 7 3 100 4 126 1 28 1 300 1 102 1 30 22 209 2 103 2 32 12 13 46 212 1 347 6 330 7 283 2 285 1 233 1 138 1 41 1 192 1 20 4 23 24 
135 1 197 1 68 1 225 1 307 1 355 1 215 1 320 1 152 1 187 1 
130 1 230 1 
135 1 304 1 197 1 291 1 225 1 4 1 215 1 152 1 187 1 
53 1 262 1 
348 1 350 1 268 1 
328 1 196 1 197 1 280 1 68 1 69 1 225 1 307 1 215 1 147 1 187 1 136 1 135 1 360 2 204 1 366 1 355 1 152 1 
328 1 196 1 197 1 280 1 68 1 69 1 225 1 307 1 215 1 147 1 187 1 136 1 135 1 360 2 204 1 366 1 355 1 152 1 
328 1 196 1 197 1 280 1 68 1 69 1 225 1 307 1 215 1 147 1 187 1 136 1 135 1 360 2 204 1 366 1 355 1 152 1 
53 1 268 1 262 1 
53 1 268 1 262 1 
348 1 350 1 
348 1 350 1 268 1 
238 1 16 1 
196 1 197 1 69 1 225 1 71 2 269 1 272 1 360 1 201 2 204 1 273 1 297 2 76 1 298 1 208 1 230 1 152 1 328 1 305 2 35 1 130 1 215 1 187 1 135 1 16 1 238 1 373 2 
166 2 290 1 224 1 89 2 293 2 71 2 72 1 201 2 202 1 121 1 323 1 363 1 301 2 10 1 30 1 103 1 368 1 13 2 349 1 283 1 259 1 185 1 62 1 217 1 372 1 109 1 373 2 43 1 163 1 139 2 23 1 
368 1 166 2 357 1 128 1 88 1 47 1 247 1 293 2 62 1 351 1 73 1 27 1 123 1 354 1 356 1 301 2 85 1 254 1 231 2 
166 1 357 1 368 1 88 1 47 1 247 1 293 1 62 1 351 1 73 1 249 1 123 1 354 1 356 1 301 1 254 1 231 2 
368 1 166 1 357 1 343 1 293 1 36 1 62 1 118 1 43 1 301 1 85 1 140 1 10 1 44 1 
368 1 166 1 357 1 128 1 88 1 47 1 247 1 293 1 62 1 351 1 73 1 123 1 354 1 356 1 301 1 85 1 254 1 231 2 
352 1 
196 1 1 1 24 1 70 1 292 1 71 1 147 1 74 1 201 1 98 1 204 1 229 1 297 1 125 1 177 1 5 1 77 1 276 1 232 1 305 1 211 1 282 1 331 1 58 1 40 1 310 1 373 1 195 1 
196 2 1 1 343 1 94 1 293 1 95 1 147 3 51 1 99 1 204 2 5 2 301 1 10 4 211 4 57 1 347 1 58 2 61 1 62 1 310 2 111 1 166 1 24 2 358 3 115 1 26 1 174 1 365 2 176 3 275 1 77 6 232 2 368 2 129 1 330 1 282 3 331 3 370 1 234 1 38 1 239 1 43 1 337 1 
196 1 1 1 95 1 147 5 51 2 149 1 201 1 98 1 99 2 204 1 297 1 5 2 344 1 100 1 253 1 211 8 305 1 347 2 257 1 58 1 157 1 310 2 20 1 24 2 358 5 70 1 71 1 271 1 74 1 26 2 362 1 229 1 125 2 176 5 77 6 232 2 129 2 330 2 282 5 331 3 285 1 37 1 40 1 138 1 373 1 195 1 
315 1 196 1 24 1 70 1 91 1 71 1 51 2 74 1 201 1 98 1 204 1 229 1 207 1 297 1 5 1 28 1 232 1 129 2 211 2 305 1 330 1 282 2 233 1 37 1 40 1 310 1 373 1 195 1 
166 1 224 1 89 2 70 1 343 1 293 1 71 2 72 1 74 2 201 3 173 1 323 1 121 1 363 1 297 2 301 1 10 1 30 1 103 1 13 1 368 1 305 2 35 1 283 1 258 1 62 1 219 1 220 1 239 1 311 1 373 3 43 1 
232 1 211 1 358 2 24 1 282 2 331 2 257 1 95 1 147 4 310 1 176 2 125 2 5 1 77 4 126 1 
232 1 211 1 24 1 282 1 147 1 310 1 125 1 5 1 64 1 29 1 
129 2 211 5 358 5 347 2 330 2 282 5 331 5 37 1 38 1 147 5 51 2 26 2 99 2 176 5 77 10 
196 1 305 1 1 1 70 1 58 1 71 1 147 1 74 1 40 1 201 1 98 1 204 1 229 1 297 1 125 1 373 1 195 1 
232 1 196 1 166 2 1 1 211 1 369 1 24 1 282 1 257 1 58 2 343 2 293 2 95 1 160 1 188 1 310 1 204 1 5 1 301 2 
211 1 306 1 125 1 282 1 64 1 147 1 29 1 
238 1 197 1 144 1 355 1 215 1 
197 1 110 1 215 1 
197 1 110 1 215 1 
197 1 110 1 215 1 
197 1 215 1 165 1 
197 1 215 1 165 1 
197 1 215 1 165 1 
197 1 215 1 
135 1 152 1 
103 1 32 5 13 10 224 1 89 2 359 2 330 2 283 1 91 1 199 3 233 1 72 1 51 2 295 1 207 2 28 2 23 5 30 5 
103 1 32 1 13 2 224 1 89 2 359 1 283 1 72 1 51 1 295 1 99 1 23 2 
32 2 103 1 13 4 224 1 347 1 89 2 330 1 359 1 283 1 199 1 72 1 51 1 295 1 26 1 99 1 23 2 30 2 
103 3 32 2 13 3 224 3 89 6 359 1 131 1 283 3 260 1 199 1 72 3 117 1 295 1 207 1 28 1 23 1 30 2 
224 5 89 10 3 1 359 5 199 7 72 5 51 5 117 2 322 1 295 1 26 3 99 3 207 3 344 1 100 4 126 1 28 3 30 18 209 1 103 5 32 12 13 34 347 3 330 5 131 1 132 1 283 5 260 1 233 2 235 1 265 1 41 1 20 3 23 16 
224 1 89 2 3 1 199 2 72 1 51 1 295 1 207 1 344 1 100 1 126 1 28 1 30 4 103 1 32 2 13 8 330 1 283 1 233 1 138 1 41 1 20 1 23 4 
224 2 89 4 3 1 359 1 199 2 72 2 51 2 295 1 26 1 99 1 207 1 344 1 100 2 126 1 28 1 30 5 209 1 103 2 32 3 13 11 330 1 283 2 233 1 235 1 138 1 41 1 20 1 23 6 
224 3 89 6 3 1 359 1 199 3 72 3 149 1 271 1 51 3 117 1 295 1 26 2 99 2 362 1 207 1 344 1 100 1 126 1 28 1 30 10 103 3 32 4 13 19 347 2 330 3 283 3 285 1 233 1 235 1 138 1 41 1 20 1 23 9 
224 3 89 6 3 1 359 2 199 3 72 3 271 1 51 3 149 1 117 1 295 1 26 2 99 2 362 1 207 1 344 1 100 1 126 1 28 1 30 7 103 3 32 5 13 17 347 1 330 2 283 3 285 1 233 1 235 1 138 1 41 1 20 1 23 10 
224 1 89 2 3 1 199 2 72 1 51 1 295 1 207 1 344 1 100 1 126 1 28 1 30 4 103 1 32 2 13 8 330 1 283 1 233 1 138 1 41 1 20 1 23 4 
224 1 89 2 359 1 199 1 72 1 271 1 51 2 149 1 295 1 26 2 99 2 362 1 344 1 100 1 30 6 103 1 32 2 13 12 347 2 330 2 283 1 285 1 138 1 20 1 23 6 
224 4 89 8 3 1 359 2 199 3 72 4 149 1 271 1 51 3 117 2 295 1 26 2 99 2 362 1 207 1 344 1 100 1 126 1 28 1 30 8 103 4 32 5 13 18 347 1 330 2 283 4 285 1 233 1 235 1 138 1 41 1 20 1 23 10 
224 4 89 8 359 3 199 3 72 4 149 1 271 1 51 3 117 2 295 1 26 3 99 3 362 1 344 1 100 1 30 7 103 4 32 6 13 16 347 2 330 2 283 4 260 1 285 1 138 1 20 1 23 9 
32 6 13 7 330 1 3 2 359 3 199 3 233 1 51 1 41 1 207 3 28 3 23 3 30 4 
224 4 89 8 3 1 359 1 199 3 72 4 149 1 271 1 51 3 117 2 295 1 26 2 99 2 362 1 207 1 344 1 100 1 126 1 28 1 30 8 103 4 32 4 13 18 347 1 330 2 283 4 260 1 285 1 233 1 138 1 41 1 20 1 23 10 
32 3 103 2 13 8 224 2 89 4 330 1 359 1 3 1 283 2 233 1 199 2 72 2 51 1 117 1 41 1 207 1 126 1 28 1 23 4 30 4 
32 2 13 6 306 1 3 1 330 1 199 2 233 1 51 1 41 1 207 1 126 1 28 1 23 3 30 3 
32 2 103 1 13 4 224 1 347 1 89 2 330 1 359 1 283 1 199 1 235 1 72 1 51 1 26 1 99 1 23 2 30 2 
32 2 13 7 347 1 330 1 359 1 199 1 51 1 26 1 99 1 344 1 100 2 20 1 23 3 30 4 209 1 
224 2 89 4 3 1 359 4 199 5 72 2 51 3 117 2 26 2 203 1 99 2 207 2 100 2 126 1 28 2 209 1 30 12 12 1 32 9 103 2 13 23 347 2 330 3 283 2 131 1 233 1 41 1 20 2 23 11 
13 1 100 1 30 1 
13 1 20 1 23 1 
103 1 32 3 13 6 224 1 347 1 89 2 359 1 330 1 283 1 199 2 38 1 72 1 235 1 51 1 26 1 99 1 23 3 30 3 
224 1 89 2 359 1 199 1 72 1 271 1 51 2 149 1 295 1 26 2 99 2 362 1 344 1 100 1 30 6 103 1 32 2 13 12 347 2 330 2 283 1 285 1 138 1 20 1 23 6 
32 2 13 6 330 1 359 1 233 1 199 1 51 1 207 1 28 1 23 3 30 3 
32 2 103 1 13 3 224 1 89 2 359 1 3 1 131 1 283 1 199 1 72 1 117 1 41 1 207 1 28 1 23 1 30 2 
105 1 0 1 318 1 9 1 78 1 242 1 164 1 243 1 
9 1 242 1 243 1 
368 1 166 1 305 1 46 1 35 1 258 1 343 1 71 1 293 1 62 1 201 2 173 1 239 1 297 1 373 2 43 1 301 1 10 1 
166 1 46 1 90 1 293 1 71 2 201 2 173 1 119 1 297 2 301 1 10 3 368 1 305 1 35 1 258 1 59 1 62 1 353 1 239 2 335 1 373 2 43 2 195 1 
166 2 46 1 90 1 293 2 71 2 201 2 173 1 119 1 297 2 301 2 10 3 368 1 305 1 35 1 284 1 59 1 62 1 189 1 353 1 239 2 335 1 373 2 43 2 195 1 
166 3 196 2 245 1 65 1 343 1 115 1 293 3 147 1 204 2 365 1 125 1 301 3 10 4 368 1 284 1 58 1 59 1 62 1 234 1 353 1 239 1 335 1 43 1 
368 1 196 2 166 3 284 1 59 1 58 1 343 1 293 3 61 1 115 1 62 1 234 1 147 1 239 1 204 2 353 1 365 1 125 1 335 1 43 1 301 3 10 4 
368 1 166 1 293 1 62 1 301 1 222 1 
166 6 368 3 290 1 33 1 343 2 293 7 62 2 309 1 82 1 73 1 27 1 83 1 239 1 63 1 111 1 289 1 43 2 139 1 301 7 10 3 222 1 
46 1 89 4 3 1 293 1 199 2 51 1 201 2 297 1 207 1 301 1 10 1 103 2 13 6 303 1 305 1 258 1 159 1 217 1 62 1 219 1 311 1 23 3 166 1 224 2 71 1 72 2 321 1 361 1 173 1 27 1 121 2 363 2 28 1 126 1 30 3 32 2 368 1 330 1 35 2 283 2 185 1 233 1 41 1 239 1 373 2 43 1 193 1 
196 3 1 1 91 1 343 1 293 1 147 2 51 2 201 1 98 1 204 3 207 1 297 1 5 2 301 1 10 2 211 4 305 1 58 2 61 1 160 1 310 2 64 1 166 1 24 2 70 1 115 1 71 1 74 1 174 1 365 1 273 1 229 1 125 2 28 1 29 1 232 2 129 2 330 2 282 5 370 1 233 1 37 1 234 1 40 1 373 1 337 1 195 1 
368 1 166 4 284 1 343 1 293 4 62 1 118 1 27 1 108 1 43 1 301 4 10 1 44 1 
244 1 166 2 368 2 293 2 62 1 82 1 96 1 83 1 353 1 239 1 191 1 43 1 301 2 10 1 
368 1 166 1 343 1 356 1 293 1 62 1 301 1 351 1 254 1 231 1 
166 2 368 1 290 1 293 2 62 1 73 1 27 1 372 1 43 1 301 2 10 1 
166 4 368 2 290 1 343 1 293 5 62 2 309 1 118 1 27 1 108 1 353 1 63 1 43 2 301 5 10 3 44 1 
166 4 368 2 290 1 343 1 293 5 62 2 309 1 186 1 118 1 27 1 108 1 353 1 43 2 301 5 10 3 44 1 
368 1 166 1 118 1 306 1 43 1 343 1 293 1 62 1 301 1 10 1 44 1 
368 1 166 1 305 1 46 1 35 1 343 1 71 1 293 1 62 1 201 2 173 1 189 1 239 1 297 1 373 2 43 1 301 1 10 1 
166 1 368 2 33 1 293 1 62 1 82 1 83 1 353 1 239 1 111 1 43 1 301 1 10 1 
166 2 368 2 115 1 293 2 62 1 27 1 239 1 111 1 275 1 43 1 301 2 10 2 222 1 
17 1 329 1 35 1 6 1 241 1 
196 2 329 1 35 1 90 1 145 1 234 1 147 1 137 1 17 2 18 1 119 1 204 2 273 1 125 1 6 2 241 2 345 1 194 1 195 1 
329 1 71 1 201 1 17 1 202 1 109 1 373 1 241 1 163 1 
137 1 329 1 194 1 
255 1 317 1 205 1 104 1 146 1 171 1 326 1 
75 1 66 1 205 1 
255 1 317 3 184 1 104 1 171 1 146 1 270 2 288 1 205 3 84 1 326 1 278 1 
255 1 317 2 205 2 168 1 104 1 146 1 171 1 326 1 79 1 
317 1 104 1 171 1 288 1 123 1 205 1 206 1 326 1 101 1 254 1 231 1 
255 1 317 1 288 1 205 1 104 1 171 1 326 1 
255 2 317 1 288 1 205 1 104 1 146 1 171 1 
141 1 255 1 317 2 288 1 251 1 205 2 55 1 104 2 171 2 326 1 
223 1 255 1 317 3 104 1 146 1 171 1 288 1 205 3 54 1 313 1 326 2 79 2 101 1 
255 1 317 2 104 1 247 1 146 1 171 1 261 1 288 1 123 1 205 2 356 1 326 1 254 1 79 1 231 2 
223 1 255 1 317 4 168 1 104 2 170 1 146 1 171 2 288 1 205 4 326 2 79 2 101 1 
255 1 317 3 288 1 54 1 205 3 104 1 146 1 171 1 326 1 270 1 79 1 
153 1 223 1 326 1 101 1 
255 1 326 1 
255 1 317 1 288 1 205 1 104 1 146 1 171 1 326 1 
153 1 223 1 255 2 317 4 184 1 104 1 146 2 171 1 270 1 84 1 205 4 326 3 79 2 101 1 
255 1 317 2 104 1 171 1 146 1 319 1 288 1 42 1 205 2 326 1 375 1 79 1 
255 1 317 3 288 1 84 2 205 3 184 1 246 1 104 1 146 1 171 1 326 1 270 2 
106 1 274 2 326 2 218 1 
181 1 317 1 288 1 205 1 104 1 171 1 
255 1 317 2 288 1 54 1 205 2 104 1 146 1 171 1 326 1 79 1 
327 1 
255 1 317 1 288 1 205 1 104 1 146 1 171 1 326 1 
255 1 306 1 146 1 326 1 

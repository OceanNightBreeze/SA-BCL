#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 329 181 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 329 181 327 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (1,113) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 2 290 1 309 3 79 1 304 1 218 1 69 2 70 2 220 1 166 1 167 1 102 3 242 1 
157 1 85 5 261 2 303 1 190 1 304 6 218 1 70 2 69 2 220 1 237 1 193 1 166 1 167 3 141 1 242 1 244 1 94 1 96 2 290 2 97 2 309 9 79 4 332 1 293 1 11 2 352 1 102 9 
157 1 85 5 261 2 303 1 190 1 304 6 218 1 70 2 69 2 220 1 237 1 193 1 166 1 167 3 141 1 242 1 244 1 94 1 96 2 290 2 97 2 309 9 79 4 332 1 293 1 11 2 352 1 102 9 
157 1 85 6 261 2 303 1 190 1 304 7 218 1 70 2 69 2 220 1 237 1 193 1 166 1 167 4 141 1 242 1 244 1 94 1 96 2 290 2 97 2 309 10 79 5 332 1 293 1 11 2 352 1 102 10 
85 4 261 2 303 1 190 1 304 4 218 1 70 2 69 2 220 1 237 1 193 1 166 1 167 2 141 1 242 1 244 1 94 1 96 2 290 2 97 1 309 7 79 3 332 1 293 1 11 2 352 1 102 7 
157 1 96 1 85 3 97 2 309 4 79 2 261 1 11 1 303 1 304 3 352 1 218 1 69 1 70 1 220 1 167 1 102 4 242 1 
341 1 94 1 85 1 131 1 96 1 290 1 292 1 309 2 11 1 218 1 69 1 70 1 220 1 102 2 242 1 244 1 
157 1 85 5 108 1 261 1 303 1 304 7 218 1 70 2 69 2 220 1 193 1 167 3 166 1 242 1 96 1 290 1 97 2 79 4 309 9 293 1 11 1 352 1 102 9 209 1 
157 1 85 5 108 1 261 1 303 1 304 7 218 1 70 2 69 2 220 1 193 1 167 3 166 1 242 1 96 1 290 1 97 2 79 4 309 9 293 1 11 1 352 1 102 9 209 1 
211 1 34 1 65 1 35 1 300 1 201 1 264 1 164 1 26 1 115 1 14 1 54 1 296 1 143 1 
172 1 
65 2 229 1 176 1 14 2 172 1 54 1 297 1 163 1 
198 1 199 1 65 5 176 1 78 1 162 1 163 1 204 1 138 1 229 2 14 5 253 1 172 1 326 1 54 2 62 2 140 1 338 2 347 2 
172 1 353 1 163 1 
172 1 153 1 58 2 
107 1 34 2 35 1 201 2 296 2 143 2 264 2 26 2 
107 1 20 1 214 2 110 1 161 1 67 1 88 1 280 1 264 2 26 2 322 1 194 1 143 2 56 2 247 2 175 1 34 3 35 1 36 1 201 3 57 1 271 1 310 1 39 1 334 1 177 1 125 1 205 1 41 1 178 1 314 2 61 1 296 2 230 1 257 1 185 2 63 1 
115 1 34 1 211 1 35 1 300 1 201 1 296 1 143 1 264 1 26 1 
210 1 34 1 120 1 65 1 201 1 213 1 351 1 163 1 115 1 14 1 172 1 173 1 296 1 357 1 
210 1 34 1 120 1 65 2 201 1 213 1 264 1 163 1 26 1 115 1 14 2 172 1 296 1 143 1 357 1 
65 1 229 1 151 1 14 1 54 1 
65 2 229 1 176 1 168 1 14 2 172 1 54 1 163 1 
65 1 229 1 14 1 
107 2 34 2 201 2 136 1 137 1 264 1 26 1 296 2 143 1 
248 1 1 1 328 1 
107 1 247 1 34 1 175 1 201 1 57 1 67 1 189 1 88 1 280 1 125 1 205 1 194 1 185 1 56 1 63 1 
247 1 175 1 34 2 201 2 57 1 67 1 47 1 88 1 280 1 264 1 205 1 125 1 306 1 194 1 296 1 143 1 328 1 185 1 63 1 56 1 
107 1 353 1 
107 1 34 3 201 3 47 1 296 3 143 3 264 3 26 1 
115 1 34 1 300 1 201 1 296 1 143 1 264 1 
115 1 34 1 201 1 296 1 136 1 143 1 137 1 264 1 26 1 
107 1 210 1 65 1 213 1 214 1 110 1 161 1 67 1 47 1 88 1 280 1 137 1 264 3 26 2 115 1 322 1 306 1 194 1 286 1 143 3 56 1 247 1 175 1 34 4 120 1 10 1 35 1 201 4 57 1 271 1 310 1 39 1 334 1 177 1 205 1 125 1 41 1 178 1 14 1 314 2 296 3 185 1 63 1 357 1 
107 1 52 1 34 2 201 2 173 1 296 2 47 1 143 1 264 1 
210 1 34 3 120 1 65 1 201 3 213 1 47 2 137 1 264 3 26 1 115 1 14 1 306 1 325 1 286 1 172 1 296 3 143 3 357 1 
34 2 1 1 201 2 47 1 137 1 264 2 26 1 296 2 143 2 328 1 
107 1 247 1 34 1 175 1 201 1 57 1 67 1 88 1 280 1 125 1 205 1 194 1 185 1 56 1 63 1 
107 1 247 1 34 1 175 1 201 1 57 1 67 1 88 1 50 1 205 1 194 1 258 1 185 1 56 1 63 1 
1 2 110 1 214 4 113 1 48 1 53 1 322 1 267 1 32 1 328 2 75 1 248 2 36 2 331 1 308 1 271 1 310 1 39 1 272 1 334 1 41 2 82 1 314 2 84 1 
115 1 33 1 34 1 120 1 201 1 296 1 143 1 264 1 
107 1 34 5 201 5 47 2 148 1 137 1 264 4 26 1 52 1 306 1 173 1 296 5 268 1 143 4 
33 1 115 1 34 2 300 1 201 2 296 2 143 2 264 2 
317 1 349 1 86 1 
317 2 101 1 349 2 278 1 121 1 124 1 
317 1 349 1 
317 1 349 1 
121 1 124 1 
121 1 124 1 
121 1 124 1 
317 1 349 1 266 1 
317 1 349 1 266 1 
317 1 349 1 266 1 
317 1 349 1 203 1 
317 1 349 1 203 1 
317 1 349 1 203 1 
317 1 349 1 117 1 181 1 184 1 329 1 
65 1 317 1 349 1 14 1 117 1 181 1 327 1 184 1 329 1 
96 2 131 1 179 1 59 2 261 1 
96 1 261 1 11 1 
96 1 131 1 11 1 
40 1 96 3 131 1 59 1 179 1 261 2 
96 2 131 1 59 1 179 1 261 1 3 1 
259 2 65 5 212 2 134 1 281 1 283 1 163 1 219 2 191 1 53 1 138 2 326 1 172 2 54 4 267 1 197 1 347 1 199 3 176 1 58 3 272 1 149 1 335 1 127 1 42 1 229 1 14 5 84 1 62 1 153 1 338 1 339 1 
259 6 65 9 343 1 212 6 301 1 134 2 22 1 262 1 89 1 163 1 191 4 53 3 138 6 74 5 172 5 326 1 241 1 54 7 267 3 347 2 199 8 176 1 78 1 58 9 272 3 149 1 335 3 229 6 151 5 14 9 84 3 62 2 153 3 338 2 339 2 
259 2 65 3 134 1 212 2 163 1 283 1 191 1 219 1 53 1 138 2 172 3 54 2 197 1 267 1 347 1 199 3 78 1 58 4 272 1 335 1 14 3 84 1 62 1 153 2 338 1 339 1 
259 4 65 4 212 4 134 1 262 1 89 1 163 1 283 1 191 2 219 2 53 2 138 4 172 4 241 1 54 3 197 1 267 2 347 1 199 5 78 1 58 7 272 2 335 2 14 4 84 2 62 1 153 3 338 1 339 1 
186 1 
13 1 57 1 353 1 
57 1 174 1 
175 1 57 1 
175 1 13 2 57 3 318 1 88 1 333 1 
175 1 57 1 88 1 
57 1 106 1 
158 1 21 1 224 1 225 1 331 3 36 4 319 1 214 7 80 1 48 2 12 1 53 1 41 3 346 2 267 1 142 1 93 1 156 1 
158 1 214 6 110 1 111 1 48 1 238 1 196 1 346 1 142 1 93 1 224 2 36 3 331 2 80 1 310 1 271 1 334 1 41 3 100 1 128 1 314 2 15 1 183 1 156 1 
158 1 21 1 225 1 224 1 331 4 36 5 214 9 110 2 80 1 48 3 310 2 271 2 312 1 334 2 12 1 53 1 41 4 128 1 29 1 314 4 346 2 267 1 93 1 156 1 
158 1 21 1 224 1 225 1 331 3 36 4 214 7 80 1 48 2 12 1 53 1 41 3 346 2 267 1 142 1 93 1 156 1 
158 1 21 1 224 1 225 1 331 3 36 4 214 7 80 1 48 2 12 1 53 1 41 3 346 2 267 1 142 1 93 1 156 1 
247 1 175 1 299 2 233 2 250 1 290 2 291 1 57 1 309 1 188 1 69 1 70 1 273 2 205 1 102 1 274 1 194 1 170 1 104 1 208 1 185 1 63 1 56 1 
46 1 247 1 18 1 96 2 131 1 299 1 249 1 233 1 290 1 109 1 309 1 261 1 11 1 69 1 70 1 273 1 40 1 336 1 205 1 102 1 222 1 7 1 242 1 185 1 63 1 56 1 
46 1 18 1 85 1 299 1 131 1 233 1 159 1 109 1 261 1 304 1 218 1 70 1 69 1 220 1 7 1 222 1 242 1 56 1 247 1 96 2 290 1 309 2 11 1 273 1 336 1 40 1 205 1 102 2 185 1 63 1 
46 1 18 1 85 1 299 1 131 1 233 1 261 1 304 2 218 1 70 1 69 1 220 1 55 1 7 1 222 1 56 1 247 1 96 2 249 1 290 1 309 3 11 1 273 1 40 1 336 1 205 1 102 3 274 1 185 1 63 1 
46 1 18 1 85 1 299 1 131 1 233 1 261 1 304 2 218 1 220 1 55 1 222 1 56 1 247 1 96 2 249 1 290 1 309 2 11 1 273 1 40 1 205 1 102 2 185 1 63 1 
206 1 
134 1 87 1 138 2 92 2 194 2 324 1 326 1 8 1 56 2 247 2 199 2 288 4 98 1 291 1 330 1 201 1 57 1 58 2 205 1 14 5 254 2 62 1 296 1 153 2 338 1 154 1 63 1 210 1 342 1 65 5 213 1 163 1 115 1 71 1 73 2 172 2 170 1 173 1 347 1 175 1 34 1 120 1 176 3 227 1 38 1 122 1 351 1 123 2 83 2 229 6 129 2 130 2 45 1 185 2 357 1 
210 1 65 3 213 1 115 1 71 1 173 1 34 1 120 1 288 2 98 1 176 1 201 1 330 1 38 1 351 1 122 1 229 2 14 3 296 1 130 1 297 1 357 1 
210 1 65 3 213 1 163 1 115 1 71 1 92 1 172 1 173 1 34 1 120 1 288 3 98 1 176 1 201 1 330 1 38 1 351 1 122 1 229 1 14 3 296 1 297 1 357 1 
210 1 65 3 213 1 163 1 115 1 71 1 92 1 172 1 173 1 34 1 120 1 288 3 176 1 98 1 201 1 330 1 38 1 351 1 122 1 229 2 14 3 129 1 296 1 130 1 297 1 357 1 
132 1 138 1 92 2 326 1 143 1 199 1 288 4 98 1 201 2 330 1 252 1 337 1 14 5 254 2 296 2 62 1 297 1 338 1 153 2 154 1 210 1 211 1 65 5 300 1 213 1 23 1 264 1 26 1 164 1 163 1 115 2 71 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 3 38 1 122 1 351 1 123 2 83 2 229 7 129 4 130 4 45 1 357 1 
87 1 138 1 92 2 326 1 199 1 288 4 98 1 201 1 330 1 58 2 14 4 254 2 296 1 62 1 338 1 153 2 154 1 210 1 65 4 213 1 163 1 115 1 71 1 73 2 172 2 173 1 347 1 34 1 120 1 176 2 38 1 122 1 351 1 123 2 83 2 229 4 129 2 130 2 45 1 357 1 
132 1 138 1 92 2 326 1 143 1 199 1 288 4 98 1 330 1 201 2 337 1 14 4 254 2 62 1 296 2 338 1 153 2 154 1 210 1 211 1 65 4 300 1 213 1 264 1 26 1 164 1 163 1 115 2 71 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 2 38 1 122 1 351 1 123 2 83 2 229 4 129 2 130 2 45 1 357 1 
132 1 138 1 92 2 326 1 143 1 199 1 288 4 98 1 330 1 201 2 337 1 14 4 254 2 62 1 296 2 338 1 153 2 154 1 210 1 211 1 65 4 300 1 213 1 264 1 26 1 164 1 163 1 115 2 71 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 2 38 1 122 1 351 1 123 2 83 2 229 4 129 2 130 2 45 1 357 1 
187 2 138 1 92 2 326 1 143 1 199 1 288 4 98 1 330 1 201 2 58 2 150 1 14 4 254 2 103 2 62 1 296 2 338 1 154 1 210 1 211 1 65 4 300 1 213 1 264 1 26 1 164 1 163 1 115 2 71 1 345 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 2 38 1 122 1 351 1 229 4 129 2 44 1 130 2 357 1 
132 1 138 1 92 3 326 1 143 1 199 1 288 5 98 1 330 1 201 2 337 1 14 4 254 2 296 2 62 1 338 1 153 2 154 1 210 1 211 1 65 4 300 1 213 1 23 1 264 1 26 1 164 1 163 1 115 2 71 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 2 38 1 122 1 351 1 123 2 83 2 229 5 129 3 130 3 45 1 357 1 
132 1 138 1 92 3 326 1 143 1 199 1 288 5 98 1 330 1 201 2 337 1 14 4 254 2 296 2 62 1 338 1 153 2 154 1 210 1 211 1 65 4 300 1 213 1 23 1 264 1 26 1 164 1 163 1 115 2 71 1 73 2 172 1 173 1 347 1 31 1 34 2 120 1 35 1 176 2 38 1 122 1 351 1 123 2 83 2 229 5 129 3 130 3 45 1 357 1 
187 2 87 1 138 1 92 2 326 1 199 1 288 4 98 1 201 1 330 1 58 2 14 4 254 2 103 2 296 1 62 1 338 1 154 1 210 1 65 4 213 1 163 1 115 1 71 1 73 2 172 1 173 1 347 1 34 1 120 1 176 2 38 1 122 1 351 1 229 4 129 2 44 1 130 2 357 1 
159 1 20 2 110 2 214 2 47 1 264 1 321 1 322 2 116 1 194 2 170 1 243 1 143 1 56 8 247 8 34 1 175 2 249 1 201 1 36 1 291 1 202 1 57 3 308 1 271 2 310 2 39 2 334 2 177 1 205 2 41 1 60 1 180 1 314 4 295 1 296 1 257 1 185 7 63 2 
1 1 110 1 214 3 48 1 137 1 264 1 26 1 322 1 53 1 285 1 267 1 143 1 328 1 34 1 248 1 331 1 201 1 36 1 271 1 310 1 39 1 272 1 334 1 335 1 41 2 314 2 84 1 296 1 340 1 
107 2 21 1 1 1 110 1 214 6 48 2 322 1 53 1 346 1 267 1 328 1 248 1 225 1 331 2 36 3 80 1 308 1 271 1 310 1 353 1 39 1 334 1 12 1 41 3 314 2 156 1 
107 1 1 3 110 2 214 11 111 2 48 1 282 1 115 1 114 1 322 1 53 1 221 1 267 2 93 1 328 8 118 1 270 1 248 8 77 1 331 2 36 6 271 2 310 2 39 2 272 2 334 2 177 1 335 2 41 5 100 2 314 4 84 1 340 1 
34 1 1 1 36 1 201 1 214 1 110 1 47 1 271 1 310 1 39 1 264 1 334 1 322 1 306 1 314 2 296 1 257 1 348 1 143 1 144 1 340 1 
232 2 1 7 48 4 47 1 88 2 280 2 236 2 53 3 322 3 194 1 239 1 143 1 328 7 93 4 56 3 247 3 249 1 248 7 201 3 331 8 57 2 334 3 335 2 12 1 205 2 296 1 257 1 156 1 340 1 63 2 107 2 21 1 110 3 214 20 67 2 264 1 27 1 306 1 346 1 267 3 119 1 34 3 175 2 225 1 226 2 36 10 80 1 228 2 271 3 310 3 39 3 272 2 177 1 125 2 41 10 178 2 314 6 84 2 185 3 
248 1 331 1 1 1 36 2 214 2 110 1 308 1 310 1 271 1 39 1 272 1 334 1 322 1 314 2 267 1 93 1 328 1 75 1 
248 1 331 1 1 1 214 2 110 1 308 1 48 1 310 1 271 1 39 1 334 1 322 1 53 1 41 2 82 1 314 2 84 1 328 1 
1 2 110 1 214 4 48 1 322 1 53 1 267 1 328 2 93 1 248 2 36 2 331 2 308 1 271 1 310 1 272 1 39 1 334 1 335 1 41 2 314 2 84 1 
248 1 331 1 1 1 36 2 214 2 110 1 310 1 271 1 39 1 272 1 334 1 322 1 180 1 314 2 267 1 93 1 328 1 75 1 
248 1 331 1 1 1 214 2 110 1 48 1 310 1 271 1 39 1 334 1 322 1 53 1 41 2 82 1 180 1 314 2 84 1 328 1 
1 2 110 1 214 4 48 1 322 1 53 1 267 1 328 2 93 1 248 2 36 2 331 2 271 1 310 1 272 1 39 1 334 1 335 1 41 2 180 1 314 2 84 1 
248 2 331 2 1 2 36 2 110 1 214 4 48 1 310 1 271 1 39 1 272 1 334 1 335 1 53 1 322 1 41 2 314 2 84 1 267 1 93 1 328 2 
107 1 214 2 110 1 67 1 88 1 280 1 322 1 194 1 56 1 247 1 175 1 34 1 36 1 201 1 57 1 310 1 271 1 39 1 334 1 177 1 205 1 125 1 178 1 41 1 314 2 257 1 185 1 63 1 
107 1 214 2 110 1 67 1 88 1 50 1 322 1 194 1 56 1 247 1 175 1 34 1 36 1 201 1 57 1 310 1 271 1 39 1 334 1 177 1 205 1 41 1 314 2 257 1 258 1 185 1 63 1 64 1 
1 2 110 1 214 4 48 1 322 1 53 1 267 1 328 2 93 1 248 2 36 2 331 2 271 1 310 1 272 1 39 1 334 1 335 1 41 2 314 2 84 1 340 1 
159 1 1 2 214 4 110 1 48 1 67 1 88 1 280 1 53 1 322 1 267 1 93 1 328 2 56 1 247 1 175 1 34 1 248 2 331 2 36 2 226 1 201 1 57 1 310 1 271 1 272 1 39 1 334 1 335 1 205 1 125 1 41 2 178 1 314 2 84 1 185 1 63 1 
277 1 1 1 110 1 214 3 137 1 264 1 26 1 53 1 322 1 267 1 143 1 93 1 328 1 34 1 248 1 331 1 201 1 36 2 271 1 310 1 39 1 272 1 334 1 335 1 41 1 314 2 84 1 296 1 340 1 
21 1 110 4 214 33 112 1 111 2 48 3 25 1 279 1 265 1 53 4 238 2 91 1 169 1 346 1 267 4 93 3 287 1 76 1 225 1 331 6 36 17 80 1 271 4 310 4 272 3 334 4 312 1 335 3 12 1 41 16 100 2 207 1 128 2 314 8 43 1 315 3 84 3 105 1 156 1 316 1 155 1 
110 3 214 26 112 1 111 2 48 2 25 1 279 1 265 1 53 2 91 2 238 2 169 2 267 3 93 2 331 4 36 14 271 3 310 3 294 1 272 3 334 3 312 1 335 3 41 12 100 2 207 1 128 2 314 6 43 1 315 4 84 2 105 1 316 1 155 1 
21 1 110 4 214 37 112 1 111 3 48 3 25 1 279 1 265 1 53 4 238 3 91 2 169 1 346 1 267 4 93 4 287 1 225 1 331 7 36 19 80 1 271 4 310 4 294 1 272 3 334 4 312 1 335 3 12 1 355 1 41 18 100 3 207 1 128 2 314 8 43 1 315 4 84 3 105 1 156 1 316 1 155 1 
21 1 110 4 214 35 112 1 111 2 48 2 25 1 279 1 265 1 53 4 238 2 91 1 169 1 346 1 267 4 93 3 287 1 225 1 331 5 36 18 80 1 271 4 310 4 294 1 272 3 334 4 312 1 335 3 12 1 41 17 100 2 207 1 128 2 314 8 43 1 315 4 84 3 105 1 156 1 316 1 155 1 
110 3 214 28 112 1 111 2 48 3 25 1 279 1 265 1 53 3 238 2 91 1 169 1 267 3 93 3 331 6 36 14 271 3 310 3 294 1 272 3 334 3 312 1 335 3 41 14 100 2 207 1 128 2 314 6 43 1 315 4 84 3 105 1 316 1 155 1 
20 2 110 1 214 2 322 1 116 1 4 1 307 1 56 2 247 2 175 1 34 2 145 1 201 2 36 1 57 1 202 1 310 1 271 1 39 1 334 1 177 1 205 1 41 1 314 2 296 2 356 1 257 1 185 2 63 1 340 1 298 1 
247 1 175 1 299 1 250 1 291 1 57 1 235 1 192 1 205 1 194 1 170 1 185 1 63 1 56 1 
247 1 19 1 18 1 96 2 131 1 299 1 249 1 251 1 261 1 11 1 40 1 192 1 205 1 7 1 222 1 185 1 56 1 63 1 
247 2 19 1 18 1 96 2 131 1 299 1 249 1 159 1 251 1 261 1 11 1 40 1 192 1 205 1 7 1 222 1 185 2 63 1 56 2 
247 1 18 1 96 2 131 1 299 1 249 1 289 1 251 1 261 1 11 1 40 1 205 1 7 1 222 1 185 1 56 1 63 1 
90 1 
198 1 199 1 162 1 163 1 138 1 326 1 172 1 62 1 338 1 347 1 
259 5 223 1 232 1 199 5 212 5 58 10 272 2 335 2 53 2 138 5 172 5 84 2 267 2 153 5 245 2 
65 1 229 1 176 1 14 1 172 1 163 1 
342 2 65 3 134 2 302 1 165 1 138 2 194 2 171 1 326 1 170 1 8 1 347 2 56 4 247 4 175 1 199 2 176 2 78 1 291 1 57 1 227 1 205 1 229 4 14 3 62 2 275 2 338 2 185 4 63 1 
198 1 199 1 138 1 172 1 162 1 353 1 163 1 
65 1 163 1 138 1 326 1 172 2 347 1 199 1 176 1 58 1 123 1 83 1 229 1 14 1 62 1 153 1 45 1 338 1 
232 2 134 2 318 1 88 3 53 2 138 8 194 1 5 2 326 4 245 2 56 3 198 1 247 3 199 9 9 2 57 10 58 12 335 2 205 4 13 2 14 5 62 4 338 4 106 2 153 6 63 3 259 6 342 1 159 1 65 5 260 2 212 6 302 1 215 1 162 1 163 2 72 1 172 8 267 2 347 4 174 3 175 3 223 2 176 3 311 2 81 2 272 2 229 5 84 2 275 1 182 2 231 1 185 3 357 2 
259 5 342 1 65 1 134 1 212 5 111 1 25 1 279 1 265 1 163 2 53 2 238 1 138 5 139 1 326 2 172 5 267 2 347 2 245 2 223 1 199 8 176 1 58 6 272 2 335 2 100 1 207 1 229 1 152 1 14 1 84 2 62 2 105 1 338 2 153 3 
211 1 65 1 21 1 300 1 264 1 164 1 26 1 115 1 53 1 138 2 326 1 267 2 347 1 143 1 245 2 223 1 34 1 199 2 35 1 201 1 80 1 147 1 337 1 14 1 62 1 296 1 338 1 156 1 
107 1 214 1 110 1 161 1 67 1 88 1 280 1 264 2 26 2 322 1 194 1 143 2 56 1 247 1 34 3 175 1 35 1 201 3 57 1 271 1 310 1 39 1 334 1 177 1 125 1 205 1 41 1 178 1 314 2 296 2 185 1 63 1 
259 2 199 1 342 1 212 2 134 1 58 4 163 2 138 2 346 1 326 1 172 4 62 1 153 2 338 1 347 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
117 1 329 1 
317 1 349 1 
21 1 331 5 36 5 110 1 214 10 80 2 147 1 48 3 271 1 310 1 334 1 312 1 53 2 41 5 314 2 267 2 93 2 156 2 
36 2 331 1 110 1 214 2 310 1 271 1 272 1 312 1 334 1 314 2 267 1 93 1 
331 2 36 2 110 1 214 4 48 1 310 1 271 1 272 1 312 1 334 1 335 1 53 1 41 2 314 2 84 1 267 1 93 1 
331 2 36 1 214 3 110 3 80 1 48 1 310 3 271 3 312 1 334 3 41 2 128 1 196 1 314 6 93 1 287 1 156 1 
133 1 21 1 110 4 214 15 111 1 48 3 53 2 238 1 196 1 267 2 93 3 287 1 225 1 331 6 36 7 80 2 147 1 271 4 310 4 334 4 312 1 12 1 41 8 100 1 128 1 314 8 183 1 156 2 
21 2 214 24 110 2 111 1 48 5 279 1 25 1 265 1 53 4 238 1 346 1 267 5 93 4 225 1 36 14 331 9 80 2 147 1 271 2 310 2 272 2 334 2 312 1 335 2 12 1 41 10 100 1 128 1 207 1 314 4 84 1 105 1 156 2 
133 1 21 1 214 17 110 3 111 1 48 3 279 1 25 1 265 1 53 2 238 1 346 1 267 3 93 1 225 1 36 10 331 4 80 1 271 3 310 3 272 2 312 1 334 3 335 2 12 1 41 7 100 1 128 1 207 1 314 6 84 1 105 1 156 1 
133 1 21 1 214 19 110 3 111 1 48 3 279 1 25 1 265 1 53 3 238 1 346 1 267 3 93 1 225 1 36 9 331 4 80 1 271 3 310 3 272 2 334 3 312 1 335 2 12 1 41 10 100 1 207 1 128 1 314 6 84 2 105 1 156 1 
133 1 21 1 214 17 110 3 111 1 48 3 279 1 25 1 265 1 53 2 238 1 346 1 267 3 93 2 225 1 36 10 331 5 80 1 271 3 310 3 272 2 334 3 312 1 335 2 12 1 41 7 100 1 128 1 207 1 314 6 84 1 105 1 156 1 
21 2 214 24 110 2 111 1 48 5 279 1 25 1 265 1 53 4 238 1 346 1 267 5 93 4 225 1 36 14 331 9 80 2 147 1 271 2 310 2 272 2 334 2 312 1 335 2 12 1 41 10 100 1 128 1 207 1 314 4 84 1 105 1 156 2 
214 12 110 1 111 1 48 1 279 1 25 1 265 1 53 2 238 1 267 2 93 1 36 6 331 2 271 1 310 1 272 2 334 1 312 1 335 2 41 6 100 1 207 1 314 2 84 2 105 1 
133 1 21 1 214 18 110 4 111 1 48 3 25 1 279 1 265 1 53 2 238 1 346 1 267 3 93 2 225 1 36 10 331 5 80 1 271 4 310 4 272 2 334 4 312 1 335 2 12 1 41 8 100 1 207 1 128 2 314 8 84 1 105 1 156 1 
214 16 110 4 111 1 48 3 25 1 279 1 265 1 53 2 238 1 267 3 93 3 287 1 36 9 331 6 271 4 310 4 272 3 312 1 334 4 335 3 41 7 100 1 207 1 128 2 314 8 84 2 105 1 
225 1 21 1 331 6 36 3 214 7 80 3 48 3 12 2 53 1 41 4 267 1 93 3 156 3 
21 1 214 18 110 4 111 1 48 3 25 1 279 1 265 1 53 2 238 1 346 1 267 3 93 1 287 1 225 1 36 10 331 4 80 1 271 4 310 4 272 2 312 1 334 4 335 2 12 1 41 8 100 1 207 1 128 2 314 8 84 1 105 1 156 1 
21 1 225 1 36 4 331 3 214 8 110 2 80 1 48 2 310 2 271 2 334 2 12 1 53 1 41 4 128 1 314 4 346 1 267 1 93 1 156 1 
225 1 21 1 331 2 36 3 214 6 80 1 48 2 353 1 12 1 53 1 41 3 346 1 267 1 156 1 
133 1 331 2 36 2 110 1 214 4 48 1 310 1 271 1 272 1 334 1 335 1 53 1 41 2 314 2 84 1 267 1 93 1 
41 1 100 1 238 1 36 1 214 2 111 1 
21 2 214 25 110 1 111 2 48 4 53 5 221 1 346 1 267 5 93 4 270 1 225 1 36 13 77 1 331 8 80 2 147 1 310 1 271 1 272 2 334 1 335 2 12 1 41 12 100 2 128 1 314 2 84 2 156 2 
41 1 100 1 214 1 
36 1 214 1 111 1 
232 1 133 1 36 3 331 3 110 1 214 6 48 2 271 1 310 1 272 1 334 1 335 1 53 1 41 3 314 2 84 1 267 1 93 1 
214 12 110 1 111 1 48 1 279 1 25 1 265 1 53 2 238 1 267 2 93 1 36 6 331 2 271 1 310 1 272 2 334 1 312 1 335 2 41 6 100 1 207 1 314 2 84 2 105 1 
21 1 36 3 331 2 214 6 80 1 48 1 53 1 41 3 267 1 93 1 156 1 
225 1 36 1 331 2 214 3 110 1 80 1 48 1 310 1 271 1 334 1 12 1 41 2 128 1 196 1 314 2 93 1 156 1 
107 1 34 1 52 1 28 1 201 1 296 1 173 1 
107 1 17 1 34 1 201 1 350 1 135 1 217 1 52 1 28 1 240 1 173 1 296 1 
247 4 175 1 159 1 291 1 234 1 57 1 205 1 194 1 195 1 170 1 185 4 56 4 63 1 
247 2 246 1 175 1 57 1 88 1 68 1 205 2 323 1 255 1 239 1 275 1 185 2 56 2 63 1 
247 1 205 1 96 1 131 1 194 1 222 1 11 1 185 1 63 1 56 1 
247 2 205 1 175 1 249 1 159 1 57 1 202 1 356 1 185 2 63 1 56 2 
247 5 175 2 159 1 291 1 202 1 57 3 205 2 60 1 194 1 195 1 170 1 275 1 243 1 185 4 56 5 63 2 
247 5 175 2 159 1 291 1 37 1 202 1 57 3 205 2 194 1 195 1 170 1 275 1 243 1 185 4 56 5 63 2 
247 1 205 1 175 1 291 1 194 1 57 1 170 1 353 1 185 1 63 1 56 1 
107 1 247 1 175 1 34 2 201 2 57 1 67 1 47 1 88 1 264 1 205 1 125 1 194 1 296 1 143 1 185 1 56 1 63 1 
107 1 210 1 47 1 67 1 88 2 264 2 115 1 143 1 56 1 247 1 34 2 175 2 120 1 9 1 201 2 57 3 125 1 205 1 296 2 275 1 106 1 185 1 63 1 
107 1 210 1 234 1 47 1 67 1 88 2 50 1 264 2 115 1 143 1 56 2 247 2 34 2 175 2 120 1 9 1 201 2 57 3 205 1 296 2 275 1 106 1 185 2 63 1 
65 2 66 1 234 1 88 1 163 1 194 1 172 1 174 1 56 3 247 3 175 1 9 1 57 4 313 1 205 1 13 1 229 1 14 2 275 1 106 1 185 3 63 1 357 1 
247 3 175 1 65 2 9 1 234 1 57 4 88 1 311 1 163 1 205 1 13 1 229 1 194 1 14 2 172 1 275 1 106 1 185 3 174 1 357 1 56 3 63 1 
247 1 321 1 205 1 185 1 63 1 56 1 
247 7 175 2 249 1 159 1 20 1 202 1 318 1 57 3 88 1 49 1 321 1 205 3 323 1 60 1 194 2 295 1 255 1 243 1 185 6 56 7 63 2 
107 2 159 1 21 1 1 1 214 6 110 2 48 2 67 1 47 1 88 1 280 1 264 1 53 1 322 2 346 1 267 1 143 1 328 1 56 1 247 1 175 1 34 2 248 1 225 1 36 3 331 2 201 2 226 1 57 1 80 1 228 1 310 2 271 2 39 2 334 2 12 1 205 1 125 1 41 3 178 1 314 4 296 1 185 1 156 1 63 1 340 1 298 1 
65 3 260 1 302 1 162 1 163 1 138 1 194 1 172 1 326 2 54 1 347 2 174 1 56 1 198 1 247 1 199 1 176 1 57 2 311 1 81 1 13 1 229 2 14 3 62 2 338 2 182 1 185 1 357 1 
247 2 175 1 159 1 318 1 57 2 88 1 321 1 205 2 13 1 72 1 185 2 56 2 63 1 
107 1 247 1 175 1 34 2 201 2 57 1 67 1 47 1 88 1 50 1 264 1 205 1 194 1 296 1 143 1 185 1 56 1 63 1 
247 1 175 1 318 1 57 1 88 1 49 1 205 2 323 1 255 1 275 1 185 1 56 1 63 1 
107 1 126 1 99 1 200 1 30 1 
107 1 210 1 120 1 65 2 160 1 200 2 213 1 51 1 163 1 115 1 99 1 126 2 14 2 286 1 172 1 6 1 54 1 30 2 357 1 
34 1 4 1 99 1 126 1 145 1 200 1 201 1 307 1 296 1 
160 1 99 1 51 1 
220 1 85 1 102 1 309 1 242 1 218 1 70 1 69 1 
85 3 309 4 79 1 304 2 218 2 69 1 70 1 305 1 220 2 167 1 284 1 102 4 244 1 276 1 
220 1 85 1 344 1 102 2 146 1 309 2 242 1 304 1 218 1 70 1 69 1 209 1 
85 1 309 3 69 1 70 1 263 1 218 1 305 1 220 1 102 3 284 2 242 1 244 2 
269 1 85 2 24 2 216 1 
102 1 309 1 256 1 242 1 70 1 69 1 
220 1 85 1 102 2 309 2 293 1 242 1 304 1 218 1 70 1 69 1 
95 1 
220 1 85 1 102 1 309 1 242 1 218 1 70 1 69 1 
220 1 85 1 353 1 218 1 
220 1 85 1 102 1 309 1 218 1 70 1 69 1 
233 1 290 1 309 1 
85 1 0 1 309 3 69 1 70 1 218 1 305 1 220 1 102 3 284 1 242 1 244 2 
220 1 85 1 97 1 102 2 309 2 304 1 218 1 70 1 69 1 
96 1 85 1 102 1 79 1 309 1 261 1 11 1 242 1 352 1 70 1 69 1 
220 1 85 1 102 1 309 1 242 1 70 1 69 1 
220 2 102 1 309 1 242 1 218 1 70 1 69 1 
85 1 309 2 2 1 69 2 70 2 220 1 354 1 102 2 16 1 242 1 
85 2 309 3 79 1 293 1 304 2 218 1 69 1 70 1 220 1 193 1 167 1 102 3 242 1 
85 1 131 1 96 2 309 2 261 1 320 1 11 1 304 1 218 1 69 1 70 1 40 1 220 1 102 2 242 1 
157 1 85 2 97 1 309 4 79 1 304 2 218 1 69 2 70 2 220 1 167 1 102 4 242 1 
220 1 85 1 102 3 309 3 293 1 242 1 304 1 218 1 244 1 70 1 69 1 
85 1 167 1 79 1 276 1 
220 1 85 1 

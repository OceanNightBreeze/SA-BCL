#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 42 39 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 308 232 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
233 1 164 1 147 2 277 2 64 2 65 4 2 9 336 1 313 6 285 1 258 1 72 1 241 3 55 9 197 1 242 2 13 5 157 1 374 1 19 1 244 1 114 2 182 1 183 1 304 1 273 1 119 2 251 2 
233 1 164 1 147 2 277 2 64 2 65 4 2 9 336 1 313 6 285 1 258 1 72 1 241 3 55 9 197 1 242 2 13 5 157 1 374 1 19 1 244 1 114 2 182 1 183 1 304 1 273 1 119 2 251 2 
233 1 164 1 147 2 277 2 64 2 65 5 2 10 336 1 313 7 285 1 258 1 72 1 241 4 55 10 197 1 242 2 13 6 157 1 374 1 19 1 244 1 114 2 182 1 183 1 304 1 273 1 119 2 251 2 
233 1 164 1 147 2 277 2 64 2 65 3 2 7 336 1 313 4 285 1 258 1 72 1 241 2 55 7 197 1 242 2 13 4 157 1 374 1 19 1 244 1 114 2 182 1 304 1 273 1 119 2 251 1 
197 1 13 3 147 1 64 1 277 1 65 2 157 1 2 4 313 3 114 1 244 1 183 1 72 1 273 1 241 1 119 1 251 2 55 4 
197 1 62 1 242 1 13 1 277 1 64 1 157 1 2 2 334 1 336 1 114 1 258 1 101 1 273 1 119 1 55 2 
233 1 197 1 242 1 13 2 277 2 65 1 157 1 2 3 313 1 114 2 273 1 241 1 55 3 
233 1 164 1 147 1 65 4 277 2 64 1 2 9 313 7 72 1 241 3 55 9 197 1 242 1 13 5 157 1 32 1 374 1 114 2 244 1 183 1 273 1 119 1 330 1 251 2 
233 1 164 1 147 1 65 4 277 2 64 1 2 9 313 7 72 1 241 3 55 9 197 1 242 1 13 5 157 1 32 1 374 1 114 2 244 1 183 1 273 1 119 1 330 1 251 2 
271 1 
117 2 170 1 236 1 
21 1 225 2 279 2 312 2 24 2 250 2 219 1 314 2 
63 1 165 1 148 1 279 2 312 2 46 1 97 1 314 2 283 1 171 1 194 1 104 1 219 1 318 1 262 2 220 1 371 2 320 1 225 3 110 1 111 1 230 2 18 1 269 1 21 1 84 1 186 1 270 1 115 1 22 2 206 1 24 2 250 3 188 1 121 1 209 2 208 1 
324 1 237 1 225 1 279 1 312 1 187 1 24 1 250 1 219 1 314 1 
122 1 78 1 139 1 128 1 225 1 363 1 314 1 170 1 213 1 7 1 141 1 324 1 274 1 250 1 
78 1 139 1 128 2 279 1 225 1 312 1 363 2 314 1 170 1 213 1 7 1 324 1 24 1 274 1 250 1 
128 1 311 1 129 1 363 1 30 1 
7 1 50 1 128 2 129 1 205 1 363 2 30 1 170 1 
128 1 363 1 30 1 
166 1 128 1 279 1 225 1 129 1 312 1 363 1 314 1 324 1 237 1 187 1 24 1 219 1 250 1 
170 1 
7 1 128 2 129 1 205 1 363 2 303 1 30 1 170 1 
145 1 263 2 128 5 129 2 363 5 200 2 14 1 177 1 80 1 170 1 7 1 36 1 368 1 205 1 196 1 38 1 329 1 54 2 30 2 
271 1 
225 2 279 1 312 1 302 1 314 2 365 1 21 2 24 1 250 2 
41 1 179 1 143 1 
220 1 371 1 165 1 320 1 225 1 46 1 18 1 171 1 21 1 29 1 22 1 250 1 209 1 208 1 121 1 318 1 
220 1 41 1 371 1 165 1 320 1 225 2 46 1 312 1 314 1 18 1 171 1 22 1 118 1 358 1 24 1 250 2 121 1 208 1 209 1 318 1 
122 1 225 5 279 1 312 4 300 1 47 1 314 5 365 1 133 1 21 1 118 1 358 2 24 4 250 5 
324 1 225 2 312 2 187 1 74 1 24 2 250 2 314 2 
21 1 279 1 225 3 312 3 358 1 24 3 250 3 314 3 
324 1 225 1 312 1 187 1 24 1 250 1 314 1 
324 1 225 1 279 1 312 1 302 1 24 1 250 1 314 1 365 1 
63 1 165 1 148 1 128 1 279 2 46 1 312 3 363 1 97 1 314 3 365 1 213 1 283 1 51 1 171 1 194 1 104 1 219 1 318 1 262 2 220 1 371 1 320 1 78 1 139 1 225 4 230 1 18 1 204 1 324 1 21 1 84 1 186 1 22 1 118 1 206 1 24 3 358 1 274 1 250 4 188 1 121 1 208 1 209 1 
122 1 21 1 225 2 312 1 300 1 24 1 358 1 250 2 314 2 
78 1 139 1 128 1 279 1 225 3 312 3 363 1 314 3 365 1 170 1 213 1 366 1 204 1 324 1 118 1 274 1 358 2 24 3 250 3 
41 1 279 1 225 2 312 2 179 1 314 2 365 1 358 1 24 2 250 2 
220 1 371 1 165 1 320 1 225 1 46 1 18 1 171 1 21 1 22 1 250 1 209 1 208 1 121 1 318 1 
220 1 371 1 320 1 224 1 225 1 46 1 5 1 18 1 171 1 21 1 22 1 250 1 209 1 208 1 121 1 
307 1 63 1 41 1 126 1 42 1 95 1 283 1 215 1 194 2 75 1 221 1 262 2 12 1 179 1 243 1 230 3 203 1 269 1 84 1 186 1 247 1 206 1 188 1 143 1 
324 1 78 1 225 1 312 1 74 1 24 1 250 1 314 1 
246 1 107 1 
246 1 107 1 
210 1 298 1 
210 1 298 1 
210 1 298 1 
160 1 246 1 107 1 
144 1 246 1 107 1 
293 1 210 1 246 2 176 1 107 2 298 1 
160 1 246 1 107 1 
160 1 246 1 107 1 
282 1 246 1 107 1 
282 1 246 1 107 1 
282 1 246 1 107 1 
144 1 128 1 312 2 45 1 66 1 68 1 363 1 314 2 315 1 135 1 370 1 292 1 107 1 34 1 225 2 299 1 108 1 228 1 21 1 246 1 24 2 250 2 376 1 252 1 
198 1 176 1 79 1 128 2 34 2 107 2 45 3 68 2 363 2 168 1 15 2 268 1 170 1 142 1 246 2 135 2 370 1 175 1 376 2 
147 1 64 1 119 1 
62 1 64 1 119 1 
62 1 147 2 364 1 119 3 130 1 229 1 
62 1 147 1 321 1 364 1 119 2 229 1 
62 1 147 1 364 2 119 2 229 1 
145 1 126 1 42 1 190 1 127 1 128 5 129 4 91 1 363 5 93 1 152 1 170 1 7 1 315 1 54 1 30 1 75 1 263 1 295 2 35 1 200 1 108 1 180 1 36 1 247 1 117 1 205 1 38 3 359 1 252 1 39 1 
145 1 126 3 254 1 42 3 190 1 128 9 311 5 129 7 91 2 363 9 93 2 152 3 27 1 170 2 98 1 7 1 193 1 287 5 196 1 30 6 54 2 75 3 263 2 158 1 108 4 200 2 36 3 247 3 117 3 205 1 38 8 359 3 40 1 39 3 
126 1 127 1 42 1 128 3 129 2 91 1 363 3 93 1 152 1 170 2 236 1 7 1 196 1 54 1 75 1 263 1 295 1 200 1 108 1 180 1 36 1 247 1 117 2 38 3 359 1 39 1 
126 2 254 1 127 1 42 2 128 4 91 1 129 3 363 4 93 1 152 2 170 2 236 1 7 1 193 1 196 1 54 1 75 2 263 1 295 2 200 1 108 2 180 1 36 2 247 2 117 3 38 5 359 2 40 1 39 2 
271 1 
220 1 335 1 
357 1 
220 1 320 1 121 1 
220 1 57 1 
220 1 320 1 
220 3 320 1 217 1 348 1 169 2 121 1 
308 1 12 2 43 2 362 1 167 1 112 1 230 4 214 1 99 1 203 3 269 3 194 1 247 1 85 1 116 1 253 1 
308 1 12 2 43 2 362 1 167 1 112 1 230 4 214 1 99 1 203 3 269 3 194 1 247 1 85 1 116 1 253 1 
308 1 12 2 43 2 167 1 362 1 112 1 230 4 214 1 99 1 203 3 269 3 194 1 247 1 85 1 116 1 253 1 305 1 
87 1 308 1 63 1 146 1 126 3 43 3 42 3 167 1 362 1 96 1 214 2 99 2 283 1 216 1 340 4 194 13 369 1 174 3 75 3 262 2 12 4 266 1 112 1 230 25 203 6 269 12 84 1 85 2 247 4 116 2 253 2 188 1 39 3 207 1 
308 1 63 2 43 2 362 1 167 1 96 1 99 1 214 1 283 2 194 2 262 4 12 3 155 1 264 1 230 6 203 4 269 4 84 2 247 1 85 1 116 1 188 2 253 1 
62 1 147 1 64 1 277 1 2 2 46 1 94 1 313 1 130 1 52 1 239 1 73 1 343 1 55 2 76 1 197 1 371 1 242 1 13 1 199 1 157 1 223 1 301 1 114 1 184 1 22 1 273 1 119 2 209 1 208 1 
62 1 147 1 64 1 277 1 2 3 46 1 94 1 130 1 313 2 52 1 239 1 73 1 343 1 55 3 76 1 197 1 371 1 242 1 13 1 372 1 157 1 223 1 301 1 82 1 114 1 248 1 22 1 119 2 209 1 208 1 
62 1 147 1 64 1 2 2 46 1 313 2 130 1 52 1 73 1 343 1 55 2 76 1 197 1 242 1 371 1 13 1 372 1 157 1 223 1 301 1 248 1 22 1 119 2 209 1 208 1 
88 1 26 1 277 1 2 1 44 1 278 1 46 1 4 1 153 1 171 1 52 2 134 1 343 2 261 1 55 1 76 2 220 1 371 1 242 2 320 1 138 1 267 1 82 1 114 1 22 1 354 1 208 2 121 1 209 1 
62 1 147 1 64 1 277 1 2 1 46 1 94 1 130 1 52 1 239 1 73 1 343 1 55 1 76 1 371 1 242 1 372 1 223 1 301 1 114 1 184 1 22 1 273 1 119 2 209 1 208 1 
212 1 
145 1 123 1 124 1 26 1 128 2 278 1 46 1 363 2 93 1 4 1 171 2 54 1 30 2 344 1 261 1 220 1 371 2 320 1 263 1 200 1 267 1 36 1 22 2 205 1 38 1 208 2 121 1 209 2 
0 1 122 1 78 1 139 1 332 1 128 3 225 1 227 1 363 3 303 1 6 2 314 1 140 1 213 1 375 1 141 1 324 1 205 1 30 2 274 1 331 1 250 1 
0 1 122 1 332 1 128 3 363 3 6 3 314 1 213 1 170 1 7 1 30 1 105 1 78 1 139 1 225 1 303 1 375 1 140 1 141 1 324 1 205 1 274 1 250 1 331 1 
105 1 0 1 122 1 78 1 332 1 139 1 128 3 225 1 227 1 296 1 363 3 303 1 6 3 314 1 170 1 140 1 213 1 375 1 7 1 141 1 324 1 205 1 30 2 274 1 331 1 250 1 
145 1 0 1 89 2 332 1 6 6 280 2 236 2 7 5 238 1 54 1 105 4 156 1 296 4 200 1 303 1 113 1 17 2 205 3 356 1 250 1 120 1 122 1 128 5 211 1 363 5 314 1 213 1 170 5 132 2 30 7 78 1 139 1 263 1 225 1 227 4 178 1 140 1 375 1 36 1 141 1 324 1 38 1 274 1 331 1 
145 1 0 1 89 2 332 1 6 4 280 2 236 2 7 1 54 1 105 2 294 1 296 2 200 1 17 2 117 2 205 2 120 1 250 1 122 1 128 4 363 4 314 1 213 1 132 2 170 2 30 4 78 1 139 1 263 1 225 1 227 2 178 1 140 1 375 1 36 1 141 1 324 1 38 1 274 1 331 1 
145 1 0 1 122 1 89 2 332 1 128 4 363 4 280 2 6 4 314 1 170 1 236 2 132 2 213 1 7 1 238 1 30 4 54 1 105 2 78 1 263 1 139 1 156 1 225 1 227 2 296 2 200 1 178 1 17 2 375 1 140 1 36 1 141 1 324 1 205 2 38 1 356 1 274 1 120 1 250 1 331 1 
145 1 0 1 122 1 89 2 332 1 128 4 363 4 280 2 6 4 314 1 170 1 236 2 132 2 213 1 7 1 238 1 30 4 54 1 105 2 78 1 263 1 139 1 156 1 225 1 227 2 296 2 200 1 178 1 17 2 375 1 140 1 36 1 141 1 324 1 205 2 38 1 356 1 274 1 120 1 250 1 331 1 
145 1 0 1 122 1 332 1 128 4 363 4 191 1 280 2 6 4 314 1 170 1 131 2 132 2 213 1 7 1 257 1 30 4 54 1 105 2 78 1 263 1 139 1 225 1 227 2 296 2 373 1 200 1 178 1 375 1 140 1 36 1 141 1 324 1 83 2 117 2 205 2 38 1 356 1 274 1 250 1 331 1 
145 1 0 1 122 1 89 2 332 1 128 4 363 4 280 2 6 5 314 1 170 1 236 2 132 2 213 1 7 1 238 1 54 1 30 5 105 3 78 1 263 1 139 1 156 1 225 1 296 3 227 3 200 1 178 1 17 2 375 1 140 1 113 1 36 1 141 1 324 1 205 2 38 1 356 1 274 1 120 1 250 1 331 1 
145 1 0 1 122 1 89 2 332 1 128 4 363 4 280 2 6 5 314 1 170 1 236 2 132 2 213 1 7 1 238 1 54 1 30 5 105 3 78 1 263 1 139 1 156 1 225 1 296 3 227 3 200 1 178 1 17 2 375 1 140 1 113 1 36 1 141 1 324 1 205 2 38 1 356 1 274 1 120 1 250 1 331 1 
145 1 0 1 332 1 6 4 280 2 7 1 54 1 105 2 294 1 296 2 200 1 117 2 205 2 250 1 122 1 128 4 363 4 314 1 213 1 132 2 131 2 170 1 257 1 30 4 78 1 139 1 263 1 225 1 227 2 178 1 140 1 375 1 36 1 141 1 324 1 83 2 38 1 274 1 331 1 
262 2 307 1 63 1 283 1 84 1 186 1 271 1 206 1 188 1 
63 2 41 10 361 1 126 2 42 2 97 1 283 2 340 3 216 1 194 8 174 3 75 2 12 1 262 4 319 1 226 1 266 1 179 2 230 14 203 1 269 6 21 1 84 2 186 2 270 1 353 1 327 1 247 2 206 1 188 2 39 2 143 10 
165 1 63 1 46 1 312 1 69 1 314 1 97 1 171 1 283 1 9 1 29 1 194 1 318 1 220 1 262 2 371 1 319 1 320 1 225 2 322 1 179 1 230 2 18 1 269 1 21 1 84 1 186 1 270 1 22 1 118 1 206 1 24 1 358 1 250 2 121 1 208 1 209 1 188 1 
41 5 43 1 42 2 46 2 150 1 97 1 283 3 194 8 53 2 341 2 104 2 12 4 202 1 18 2 203 4 21 1 247 3 22 1 118 1 358 1 24 1 206 3 250 3 253 1 209 1 208 2 121 2 308 1 63 3 165 2 126 2 167 1 362 1 256 2 312 1 314 1 214 1 171 1 218 2 75 2 318 2 262 6 220 2 371 1 319 1 320 2 225 3 179 5 230 15 269 7 186 3 84 3 270 1 188 3 39 2 143 5 
63 1 234 1 26 1 278 1 46 1 4 1 97 1 171 1 283 1 194 1 261 1 220 1 262 2 371 2 320 1 110 1 267 1 230 2 323 1 269 1 84 1 186 1 270 1 22 2 206 1 208 2 121 1 209 2 188 1 
262 2 319 1 63 1 42 1 225 1 279 1 312 1 230 2 314 1 60 1 365 1 269 2 283 1 186 1 84 1 247 1 24 1 206 1 250 1 39 1 188 1 
307 1 262 2 63 1 42 1 243 1 230 1 283 1 269 1 186 1 84 1 247 1 206 1 188 1 
12 1 307 1 262 2 41 1 63 1 126 1 95 1 179 1 230 2 203 1 283 1 186 1 84 1 194 2 206 1 75 1 188 1 143 1 
307 1 63 1 41 1 126 1 42 1 283 1 194 2 75 1 262 2 12 1 179 1 230 3 203 1 269 1 84 1 186 1 247 1 206 1 39 1 188 1 143 1 
262 2 234 1 63 1 42 1 243 1 230 1 283 1 269 1 186 1 84 1 247 1 206 1 188 1 
12 1 262 2 41 1 234 1 63 1 126 1 95 1 179 1 230 2 203 1 283 1 186 1 84 1 194 2 206 1 75 1 188 1 143 1 
63 1 234 1 41 1 126 1 42 1 283 1 194 2 75 1 262 2 12 1 179 1 230 3 203 1 269 1 84 1 186 1 247 1 206 1 39 1 188 1 143 1 
63 1 41 1 126 1 42 1 283 1 194 2 75 1 262 2 12 1 179 1 230 3 203 1 269 1 84 1 186 1 247 1 206 1 39 1 188 1 143 1 
165 1 63 1 46 1 97 1 171 1 283 1 194 1 104 1 318 1 220 1 262 2 371 1 320 1 225 1 230 2 18 1 269 1 21 1 186 1 84 1 270 1 22 1 206 1 250 1 121 1 208 1 209 1 188 1 
63 1 46 1 5 1 97 1 171 1 283 1 194 1 220 1 262 2 371 1 320 1 224 1 225 1 230 2 18 1 269 1 21 1 186 1 84 1 270 1 22 1 272 1 206 1 250 1 121 1 208 1 209 1 188 1 
63 1 41 1 126 1 42 1 283 1 194 2 75 1 262 2 12 1 319 1 179 1 230 3 203 1 269 1 84 1 186 1 247 1 206 1 39 1 188 1 143 1 
41 1 165 1 63 1 126 1 42 1 256 1 46 1 283 1 194 2 104 1 75 1 318 1 12 1 220 1 262 2 371 1 320 1 199 1 225 1 179 1 230 3 18 1 203 1 269 1 186 1 84 1 247 1 22 1 206 1 250 1 121 1 208 1 209 1 188 1 39 1 143 1 
63 1 126 1 42 1 279 1 312 1 314 1 365 1 283 1 194 1 75 1 262 2 319 1 225 1 159 1 230 2 269 1 84 1 186 1 247 1 206 1 24 1 250 1 188 1 39 1 
63 2 309 1 126 2 42 2 235 1 283 2 340 2 216 1 194 7 10 1 174 1 75 2 262 4 12 2 264 1 265 1 297 1 266 1 350 1 81 1 230 11 352 1 203 2 269 4 84 2 247 2 188 2 39 2 
63 1 309 2 126 1 42 1 235 1 283 1 340 2 194 8 289 1 174 2 75 1 262 2 264 1 265 4 266 2 81 2 230 15 59 1 350 1 352 1 269 7 84 1 247 1 249 1 188 1 39 1 
63 2 309 1 126 2 42 2 235 1 283 2 340 2 216 1 194 8 289 1 174 1 75 2 262 4 12 1 264 1 265 2 297 1 266 1 350 1 81 1 230 13 352 1 203 1 269 5 84 2 247 2 188 2 39 2 
63 2 309 1 126 2 42 2 235 1 283 2 340 2 216 1 194 8 289 1 174 1 75 2 262 4 12 1 264 1 265 2 297 1 266 1 350 1 81 1 230 13 352 1 203 1 269 5 84 2 247 2 188 2 39 2 
308 3 63 1 309 1 126 5 43 3 42 5 167 3 362 3 235 1 214 3 283 1 340 4 216 2 194 18 289 1 174 4 75 5 262 2 12 7 264 1 265 4 226 2 266 2 350 1 59 1 81 1 230 37 352 1 203 7 269 19 84 1 247 8 249 1 253 3 188 1 39 5 
142 1 246 1 176 1 107 1 34 1 67 1 68 1 135 1 175 1 376 1 
144 1 228 1 
172 1 338 1 246 1 107 1 34 1 68 1 86 1 135 1 376 1 
160 1 328 1 
293 1 282 1 325 1 
198 1 176 1 79 1 128 1 34 1 107 1 45 2 363 1 68 1 168 1 15 1 170 1 142 1 246 1 370 1 135 1 175 1 376 1 
198 1 176 1 79 1 128 1 34 1 107 1 45 2 363 1 68 1 168 1 15 1 170 1 142 1 246 1 370 1 135 1 175 1 376 1 
198 1 176 1 79 1 128 1 34 1 107 1 45 2 363 1 68 1 168 1 15 1 170 1 142 1 246 1 370 1 135 1 175 1 376 1 
293 1 160 1 328 1 
293 1 160 1 328 1 
282 1 325 1 
293 1 282 1 325 1 
66 1 292 1 
144 1 128 1 129 1 45 1 66 1 312 2 363 1 68 1 314 2 8 1 315 1 135 1 292 1 79 1 225 2 107 1 34 1 299 1 108 1 228 1 15 1 21 1 246 1 24 2 250 2 376 1 252 1 
63 1 46 1 314 2 97 1 283 1 28 1 284 1 194 1 11 1 220 1 262 2 319 1 371 2 320 1 225 2 110 2 230 2 323 1 181 1 269 1 84 1 186 1 270 1 22 2 355 1 61 1 206 1 250 2 208 1 209 2 188 1 
76 1 62 1 371 2 147 1 372 1 125 1 199 1 64 1 276 1 223 1 33 1 46 1 301 1 94 1 130 1 22 2 119 2 208 1 209 2 
76 1 62 1 371 1 147 1 372 1 64 1 223 1 33 1 46 1 301 1 3 1 94 1 130 1 22 1 119 2 209 1 208 1 
276 1 26 1 44 1 278 1 46 1 4 1 171 1 291 1 261 1 76 1 220 1 371 1 320 1 267 1 354 1 22 1 209 1 121 1 208 2 
76 1 62 1 371 1 147 1 372 1 125 1 64 1 276 1 223 1 33 1 46 1 301 1 94 1 130 1 22 1 119 2 208 1 209 1 
16 1 
271 1 
145 1 89 1 128 1 363 1 236 1 170 2 7 1 54 1 30 1 263 1 200 1 17 1 36 1 117 1 205 1 38 1 120 1 
145 3 42 2 1 2 90 2 46 1 93 2 335 3 192 1 49 1 152 4 236 4 7 1 195 2 344 1 54 3 200 3 247 2 22 1 117 8 205 3 359 4 208 2 121 1 209 1 126 2 128 5 363 5 169 2 170 5 367 2 171 1 217 1 218 2 260 1 30 5 75 2 220 6 77 2 371 1 320 1 263 3 36 5 326 2 38 8 274 2 39 2 
145 1 166 1 279 1 90 1 312 1 93 1 314 1 152 2 236 1 170 2 7 1 281 1 340 1 237 1 344 1 54 1 174 1 219 1 263 1 225 1 266 1 200 1 201 1 36 2 324 1 117 2 249 1 187 1 38 2 24 1 359 2 250 1 
145 1 308 1 126 1 263 1 128 1 90 1 363 1 200 1 36 2 214 1 247 1 238 1 38 2 54 1 232 1 253 1 
145 1 263 1 200 1 14 1 177 1 170 1 36 1 7 1 38 1 54 1 
126 1 42 1 90 1 152 1 236 1 170 1 36 1 247 1 117 2 38 2 359 1 75 1 39 1 
7 1 128 1 363 1 205 1 30 1 170 1 
145 1 123 1 124 1 149 1 26 1 128 1 278 1 46 1 363 1 93 1 4 1 171 2 54 1 30 2 344 1 261 1 220 1 371 2 320 1 263 1 200 1 267 1 36 1 22 2 205 1 38 1 208 2 121 1 209 2 
63 1 165 1 148 1 279 2 312 2 46 1 97 1 314 2 283 1 171 1 194 1 104 1 219 1 318 1 262 2 220 1 371 1 320 1 225 3 230 1 18 1 21 1 186 1 84 1 22 1 24 2 206 1 250 3 188 1 209 1 208 1 121 1 
145 1 43 1 263 1 200 1 93 1 152 2 236 2 170 4 36 2 7 2 117 4 38 1 359 2 54 1 344 1 
347 1 68 1 135 1 
337 1 142 1 68 1 135 1 292 1 
347 1 68 1 135 1 
347 1 68 1 135 1 
185 1 68 1 135 1 
185 1 68 1 135 1 
185 1 68 1 135 1 
68 1 135 1 
246 1 107 1 
308 1 12 2 262 4 63 2 43 1 362 1 167 1 230 5 96 1 214 1 203 3 269 3 283 2 84 2 247 1 194 2 116 1 188 2 253 1 
271 1 
12 1 262 2 63 1 126 1 42 1 230 3 203 1 283 1 269 1 84 1 194 2 247 1 23 1 75 1 188 1 39 1 
12 1 126 1 42 1 266 1 230 6 203 1 269 2 340 2 216 1 194 4 247 1 174 1 75 1 39 1 
308 1 63 2 126 2 43 1 42 2 167 1 362 1 96 2 214 2 283 2 216 1 340 2 194 10 174 2 75 2 12 5 262 4 226 1 230 18 20 1 203 7 269 8 84 2 247 3 327 1 116 2 253 2 39 2 188 2 
340 1 194 1 230 1 
269 1 174 1 230 1 
262 2 12 2 63 1 126 1 42 1 230 5 203 2 283 1 269 2 84 1 194 3 247 1 23 1 218 1 75 1 188 1 39 1 
262 2 63 1 264 1 266 1 230 2 269 1 283 1 84 1 340 1 194 1 249 1 174 1 188 1 
308 1 269 1 247 1 230 1 
12 1 262 2 63 1 167 1 362 1 230 3 96 1 214 1 20 1 203 2 269 1 283 1 84 1 194 2 116 1 253 1 188 1 
12 2 308 1 126 1 230 4 214 1 203 3 269 2 247 2 194 2 116 1 232 1 253 1 
262 2 63 1 264 1 42 1 230 1 283 1 269 1 84 1 247 1 188 1 
12 1 262 2 63 1 126 1 264 1 42 1 230 3 203 1 283 1 269 1 84 1 194 2 247 1 75 1 188 1 39 1 
262 6 12 1 63 3 264 1 297 1 96 1 230 3 20 1 214 1 203 2 283 3 269 1 84 3 194 2 116 1 188 3 253 1 
87 1 308 2 63 5 146 1 126 3 43 1 42 3 167 1 362 1 96 2 214 2 283 5 340 4 216 1 194 14 174 3 75 3 262 10 12 4 264 1 266 1 297 1 230 25 20 1 203 6 269 11 84 5 247 5 116 2 23 1 253 2 207 1 188 5 39 3 
63 1 126 2 42 2 92 1 283 1 339 1 340 1 194 6 290 1 174 1 75 2 262 2 12 1 264 1 349 1 266 1 230 10 203 1 269 4 84 1 247 2 249 1 188 1 39 2 
308 1 63 2 126 2 43 1 42 2 167 1 362 1 214 1 283 2 340 2 216 1 194 7 174 2 75 2 262 4 12 4 264 1 226 1 266 1 230 13 203 4 269 6 84 2 247 3 23 1 249 1 253 1 188 2 39 2 
308 2 63 2 126 1 43 1 362 1 167 1 214 2 283 2 340 1 194 3 174 1 262 4 12 3 264 1 266 1 230 8 203 4 269 5 84 2 247 3 116 1 23 1 249 1 232 1 188 2 253 2 
308 2 63 2 126 1 43 1 362 1 167 1 214 2 283 2 340 1 194 3 174 1 262 4 12 4 264 1 266 1 230 8 203 7 269 5 84 2 247 3 116 3 23 1 249 1 232 1 188 2 253 2 
63 1 126 2 42 2 92 1 283 1 339 1 340 1 194 6 290 1 174 1 75 2 262 2 12 1 264 1 349 1 266 1 230 10 203 1 269 4 84 1 247 2 249 1 188 1 39 2 
262 2 63 1 264 1 266 1 230 2 269 1 283 1 84 1 340 1 194 1 249 1 174 1 188 1 
262 4 63 2 264 1 266 1 230 2 269 1 283 2 84 2 340 1 194 1 23 1 249 1 174 1 188 2 
262 4 63 2 264 1 297 1 266 1 230 2 269 1 283 2 84 2 340 1 194 1 249 1 174 1 188 2 
12 4 308 2 126 1 43 1 362 1 167 1 230 6 214 2 203 7 269 4 194 2 247 3 116 3 232 1 253 2 
262 4 63 2 264 1 297 1 266 1 230 2 269 1 283 2 84 2 340 1 194 1 249 1 174 1 188 2 
122 1 21 1 225 1 300 1 231 1 250 1 314 1 
122 1 225 1 300 1 48 1 314 1 21 1 102 1 103 1 173 1 259 1 231 1 250 1 
371 1 171 1 22 1 271 1 209 1 
220 1 371 1 320 1 225 2 312 1 46 1 314 1 18 1 171 1 21 1 22 1 358 1 24 1 250 2 121 1 208 1 209 1 318 1 
220 3 137 1 371 1 78 1 320 2 225 2 312 1 46 1 57 1 314 2 213 1 18 1 324 1 21 1 22 1 316 1 358 1 24 2 250 2 121 2 208 1 209 1 318 1 
46 1 312 1 5 1 314 2 213 1 316 1 220 3 371 2 137 1 320 2 78 1 225 2 57 1 18 1 324 1 162 1 21 1 22 2 24 2 358 1 250 2 209 2 208 1 121 2 
220 4 137 1 371 3 320 1 25 1 128 2 46 1 363 2 57 1 335 1 169 1 170 1 7 1 171 1 162 1 22 3 316 1 342 1 274 1 30 1 121 1 208 1 209 3 
220 4 137 1 371 3 320 1 128 2 46 1 363 2 57 1 335 1 169 1 170 1 7 1 171 1 162 1 22 3 316 1 195 1 274 1 30 1 121 1 208 1 209 3 
371 1 22 1 46 1 136 1 208 1 209 1 
220 3 360 1 371 6 372 1 320 2 199 1 26 1 46 2 110 1 4 1 151 1 171 2 100 1 28 1 154 1 217 1 22 7 136 1 209 7 121 1 208 3 
308 1 41 1 63 2 165 1 43 1 167 1 362 1 256 1 46 1 312 1 314 1 214 1 283 2 284 1 194 1 53 1 104 1 318 1 12 2 220 1 262 4 319 1 371 1 320 1 199 1 225 2 179 1 230 3 18 1 203 2 269 2 21 1 84 2 186 2 247 1 22 1 206 2 24 1 358 1 250 2 253 1 121 1 208 1 188 2 209 1 143 1 
145 2 149 1 128 3 1 1 129 1 363 3 335 1 169 1 170 1 7 1 367 1 171 1 195 1 54 2 30 2 77 1 220 2 371 1 263 2 200 2 14 1 177 1 36 1 22 1 205 1 38 1 274 1 209 1 
220 2 371 2 320 1 199 1 46 1 169 1 217 1 22 2 260 1 136 1 209 2 121 1 208 2 
220 1 371 2 320 1 199 1 26 1 278 1 46 1 267 1 4 1 171 1 22 2 208 2 121 1 209 2 261 1 
220 1 137 1 371 2 320 1 26 1 278 1 46 1 4 1 22 2 345 1 209 2 121 1 208 2 261 1 
62 1 371 1 171 1 64 1 223 1 22 1 46 1 119 1 208 1 209 1 
181 1 220 1 371 2 320 1 372 1 28 1 199 1 22 2 46 1 208 1 209 2 
360 1 26 1 278 1 46 2 4 1 151 1 171 1 28 1 261 1 220 3 371 2 320 2 199 1 267 1 22 3 208 3 209 3 121 1 
360 1 26 1 278 1 46 2 4 1 171 1 28 1 261 1 346 1 220 3 371 2 320 2 199 1 267 1 22 3 208 3 209 3 121 1 
220 1 371 1 320 1 225 2 312 1 46 1 5 1 314 1 18 1 171 1 21 1 22 1 358 1 24 1 250 2 121 1 208 1 209 1 
220 1 137 1 371 1 320 1 26 1 46 1 4 1 100 1 217 1 22 1 209 1 121 1 208 2 
56 1 21 1 286 1 37 1 317 1 
163 1 56 2 78 1 139 1 255 1 128 2 129 1 363 2 109 1 170 1 213 1 7 1 204 1 324 1 21 1 37 1 286 2 317 2 274 1 
225 1 314 1 286 1 37 1 355 1 61 1 317 1 250 1 11 1 
163 1 37 1 109 1 
271 1 
114 1 197 1 13 1 277 1 157 1 2 1 55 1 
242 1 2 1 343 1 
189 1 197 1 13 1 277 1 106 1 2 3 157 1 114 1 258 2 273 1 240 1 55 3 
114 1 197 1 13 1 277 1 157 1 2 2 313 1 251 1 55 2 
244 1 114 1 147 1 13 1 64 1 65 1 277 1 2 1 273 1 119 1 55 1 
114 1 13 1 277 1 157 1 2 1 273 1 55 1 
114 1 197 1 277 1 157 2 2 1 273 1 55 1 
13 1 277 2 157 1 2 2 114 2 161 1 273 1 31 1 55 2 306 1 
164 1 197 1 13 2 277 1 65 1 157 1 2 3 374 1 313 2 114 1 273 1 241 1 55 3 
197 1 62 1 13 1 147 1 310 1 277 1 64 1 157 1 2 2 130 1 313 1 114 1 273 1 119 2 55 2 
197 1 13 2 277 2 65 1 157 1 2 4 313 2 114 2 183 1 273 1 241 1 251 1 55 4 
114 1 197 1 13 1 277 1 157 1 2 1 273 1 55 1 
189 1 197 2 13 3 277 1 65 1 157 2 2 4 313 2 114 1 258 1 288 1 240 1 241 1 55 4 
197 1 13 1 277 1 157 1 2 2 313 1 58 1 114 1 273 1 275 1 330 1 55 2 
189 2 197 1 13 1 277 1 2 3 157 1 351 1 114 1 258 2 240 1 273 1 55 3 
71 1 13 2 333 1 70 2 
114 1 222 1 277 1 2 1 273 1 55 1 
114 1 197 1 13 1 277 1 157 1 2 2 273 1 313 1 374 1 55 2 
245 1 
114 1 197 1 13 1 277 1 157 1 2 1 273 1 55 1 
197 1 13 1 277 1 2 3 157 1 313 1 374 1 114 1 258 1 273 1 55 3 
13 1 65 1 288 1 241 1 
13 1 157 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 226 (19,129) 222 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 226 111 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 226 (19,129) 222 341 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (6,107) (35,322) (35,322) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (97,110,247,278) (97,110,247,278) (70,183,215) (70,183,215) (70,183,215) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (97,110,247,278) (97,110,247,278) (70,183,215) (70,183,215) (70,183,215) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (97,110,247,278) (97,110,247,278) (70,183,215) (70,183,215) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (97,110,247,278) (97,110,247,278) (70,183,215) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 226 111 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 226 (19,129) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 80 290 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 226 (19,129) (19,129) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (6,107) (6,107) 
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 92 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 226 (19,129) 222 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 67 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
231 1 247 2 12 1 110 1 235 1 250 3 192 1 139 1 273 1 239 2 278 3 97 2 259 1 
102 1 55 1 247 2 321 1 12 1 110 6 250 9 18 2 64 1 259 2 76 1 231 3 185 1 233 1 33 2 235 1 191 1 268 2 192 4 139 1 273 1 239 5 240 1 277 2 278 9 44 1 97 2 312 1 
102 1 55 1 247 2 321 1 12 1 110 6 250 9 18 2 64 1 259 2 76 1 231 3 185 1 233 1 33 2 235 1 191 1 268 2 192 4 139 1 273 1 239 5 240 1 277 2 278 9 44 1 97 2 312 1 
102 1 55 1 247 2 321 1 12 1 110 7 250 10 18 2 64 1 259 2 76 1 231 4 185 1 233 1 33 2 235 1 191 1 268 2 192 5 139 1 273 1 239 6 240 1 277 2 278 10 44 1 97 2 312 1 
102 1 55 1 247 2 321 1 12 1 110 4 250 7 18 2 64 1 259 2 76 1 231 2 185 1 233 1 33 1 235 1 191 1 268 2 192 3 139 1 273 1 239 4 277 2 278 7 44 1 97 2 312 1 
102 1 231 1 247 1 12 1 110 3 33 2 235 1 191 1 268 1 250 4 192 2 139 1 18 1 239 3 240 1 277 1 278 4 97 1 
247 1 12 1 235 1 250 2 268 1 139 1 18 1 64 1 239 1 68 1 256 1 278 2 97 1 179 1 312 1 259 1 
102 1 247 2 321 1 12 1 110 7 250 9 18 1 259 1 76 1 297 1 231 3 33 2 235 1 191 1 192 4 268 1 139 1 343 1 273 1 239 5 240 1 277 1 278 9 97 2 
102 1 247 2 321 1 12 1 110 7 250 9 18 1 259 1 76 1 297 1 231 3 33 2 235 1 191 1 192 4 268 1 139 1 343 1 273 1 239 5 240 1 277 1 278 9 97 2 
1 1 314 1 339 1 131 1 326 1 193 1 15 1 309 1 115 1 221 1 223 1 73 1 75 1 227 1 
136 1 
136 1 166 1 10 1 144 1 131 2 221 1 234 1 223 2 
334 2 229 1 153 2 10 1 131 5 234 1 214 1 136 1 195 1 286 1 85 1 66 2 87 1 347 1 144 2 221 2 223 5 204 1 26 1 
136 1 67 1 234 1 
136 1 135 1 52 2 
193 2 314 2 1 1 309 2 339 2 115 2 132 1 73 2 
0 1 49 1 1 1 314 1 129 1 339 1 301 1 193 1 309 1 115 1 222 1 73 1 226 1 282 2 333 1 
193 1 15 1 314 1 1 1 309 1 339 1 115 1 73 1 75 1 227 1 
123 1 339 1 131 1 234 1 161 1 136 1 193 1 15 1 38 1 251 1 86 1 257 1 223 1 73 1 
314 1 123 1 339 1 131 2 234 1 136 1 193 1 15 1 38 1 251 1 86 1 309 1 115 1 223 2 73 1 
144 1 131 1 221 1 223 1 189 1 
136 1 53 1 10 1 144 1 131 2 221 1 234 1 223 2 
144 1 131 1 223 1 
314 1 186 1 339 2 58 1 132 2 193 2 309 1 115 1 73 2 
152 1 156 1 246 1 
301 1 226 1 282 1 111 1 
193 1 169 1 309 1 339 1 301 1 115 1 73 1 119 1 226 1 282 1 
67 1 132 1 
193 5 314 1 169 1 21 1 309 4 339 5 58 1 115 4 257 1 132 1 145 1 180 1 73 5 119 2 
193 2 15 1 329 1 309 2 339 2 115 2 73 2 75 1 
193 3 314 1 309 3 339 3 115 3 132 1 119 1 73 3 
193 1 15 1 309 1 339 1 115 1 73 1 75 1 
193 1 15 1 314 1 309 1 186 1 339 1 115 1 58 1 73 1 
1 1 314 2 123 1 338 1 129 1 339 3 301 1 131 1 58 1 193 3 15 1 251 1 38 1 341 1 169 1 86 1 309 3 115 3 222 1 223 1 119 1 73 3 226 1 282 1 
193 2 309 1 339 2 115 1 257 1 132 1 145 1 73 2 119 1 
314 1 123 1 338 1 339 3 58 1 131 1 109 1 136 1 193 3 15 1 38 1 251 1 169 1 86 1 309 3 115 3 223 1 119 2 73 3 
314 1 152 1 156 1 339 2 58 1 193 2 309 2 115 2 119 1 73 2 
301 1 226 1 282 1 
80 1 301 1 282 1 
149 2 152 2 54 1 317 1 156 2 9 1 105 2 246 2 106 1 320 1 158 1 160 1 60 2 113 1 225 1 292 1 184 1 260 4 237 1 84 1 306 1 89 1 95 1 45 1 
193 1 15 1 251 1 309 1 329 1 339 1 115 1 73 1 
122 1 154 1 83 1 
293 1 122 2 63 1 83 2 104 1 175 1 
122 1 83 1 
122 1 83 1 
104 1 175 1 
104 1 175 1 
104 1 175 1 
272 1 122 1 83 1 
272 1 122 1 83 1 
272 1 122 1 83 1 
122 1 83 1 220 1 
122 1 83 1 220 1 
122 1 83 1 220 1 
208 1 2 1 154 1 57 1 248 1 249 1 174 1 115 2 71 1 223 1 116 1 117 1 73 2 122 1 339 2 131 1 132 1 193 2 194 1 270 1 83 1 309 2 43 1 348 1 
293 1 148 1 2 2 122 2 7 1 57 2 131 2 36 1 136 1 194 2 20 1 83 2 198 2 90 1 223 2 71 3 43 1 203 1 348 2 
268 2 124 1 277 1 179 1 37 2 
268 1 18 1 277 1 
268 1 18 1 179 1 
268 3 124 1 103 1 277 2 179 1 37 1 
268 2 216 1 124 1 277 1 179 1 37 1 
208 1 48 1 50 1 153 1 52 3 10 1 113 1 66 1 221 4 116 1 223 5 26 1 334 1 182 2 261 1 131 5 234 1 135 1 136 2 270 1 237 1 236 1 84 1 85 2 346 1 311 2 89 1 144 1 281 1 202 2 205 1 204 3 
208 4 48 1 150 1 50 3 153 2 52 9 157 1 10 1 214 1 62 1 113 3 66 2 221 7 223 9 118 1 26 1 334 2 261 2 125 1 131 9 234 1 189 5 135 3 137 1 136 5 237 3 84 3 85 6 311 6 89 3 144 6 202 6 205 2 204 8 207 5 
208 1 153 1 50 1 52 4 214 1 113 1 66 1 221 2 223 3 334 1 182 1 261 1 131 3 234 1 136 3 135 2 236 1 237 1 84 1 85 2 311 2 89 1 281 1 205 1 204 3 202 2 
208 2 150 1 153 1 50 2 52 7 214 1 113 2 66 1 221 3 223 4 118 1 334 1 182 2 261 1 125 1 131 4 234 1 136 4 135 3 236 1 237 2 84 2 85 4 311 4 89 2 281 1 202 4 205 1 204 5 
176 1 
127 1 67 1 93 1 
283 1 93 1 
147 1 344 1 93 1 
4 1 93 1 
344 1 93 1 
147 1 127 2 344 1 93 3 13 1 188 1 
149 4 151 1 260 7 54 2 5 1 105 3 160 3 323 1 269 1 237 1 342 1 113 1 327 1 252 1 218 1 308 1 332 1 280 2 
244 4 149 16 151 1 50 3 54 5 317 1 8 1 105 15 59 1 160 10 60 2 323 2 327 2 113 4 328 1 252 2 218 1 225 1 332 5 292 1 260 31 295 1 296 1 269 2 237 4 342 1 84 3 197 1 308 1 310 1 143 3 89 3 95 1 280 3 
149 5 151 1 54 3 317 2 105 4 160 4 60 4 323 1 113 1 327 1 252 1 218 1 177 1 225 2 332 1 292 2 260 9 78 1 269 1 237 1 197 1 308 1 95 2 280 2 
149 4 151 1 260 7 54 2 105 3 160 3 323 1 269 1 237 1 342 1 113 1 327 1 252 1 308 1 218 1 332 1 280 2 
149 4 151 1 260 7 54 2 105 3 160 3 323 1 269 1 237 1 342 1 113 1 327 1 252 1 308 1 218 1 332 1 280 2 
6 1 130 2 301 1 247 1 322 1 35 1 190 1 250 1 305 2 88 1 278 1 97 1 96 2 282 1 259 2 
183 1 130 1 247 1 30 1 110 1 235 1 215 1 250 1 305 1 17 1 217 1 278 2 70 1 97 1 96 1 282 1 259 1 
183 1 130 1 247 1 110 1 235 1 215 1 250 1 305 1 17 1 217 1 276 1 278 2 70 1 97 1 96 1 282 1 259 1 
183 1 130 1 247 1 30 1 110 2 190 1 165 1 215 1 250 2 305 1 17 1 217 1 278 3 97 1 96 1 282 1 259 1 
215 1 305 1 250 1 217 1 130 1 30 1 278 2 110 2 96 1 259 1 282 1 165 1 
128 1 
10 2 108 1 284 1 15 1 287 1 288 1 223 4 291 1 26 1 27 1 123 1 300 1 131 4 301 2 133 1 135 1 38 1 238 1 144 4 313 3 47 1 153 1 51 1 245 1 316 1 52 1 161 1 324 1 251 1 66 1 173 1 254 1 257 1 73 1 74 1 334 1 261 1 263 1 339 1 267 1 193 1 85 2 86 1 204 2 282 2 
313 2 245 1 10 1 161 1 324 1 166 1 284 1 15 1 251 1 173 1 257 1 288 1 223 3 73 1 74 1 123 1 339 1 131 3 193 1 38 1 86 1 144 2 
313 3 245 1 10 1 161 1 324 1 166 1 284 1 15 1 251 1 173 1 257 1 223 3 73 1 74 1 123 1 339 1 131 3 267 1 234 1 193 1 136 1 38 1 86 1 144 1 
313 3 245 1 10 1 161 1 324 1 166 1 284 1 15 1 251 1 173 1 257 1 288 1 223 3 73 1 291 1 74 1 123 1 339 1 131 3 267 1 234 1 193 1 136 1 38 1 86 1 144 2 
10 3 108 1 15 1 284 1 288 4 223 5 291 4 26 1 123 1 300 2 131 5 234 5 134 1 136 5 135 2 38 1 140 1 238 2 144 7 46 1 313 6 47 2 153 1 245 1 316 1 161 1 324 1 166 1 251 1 66 1 173 1 257 1 73 1 74 1 334 1 263 2 339 1 265 1 267 4 193 1 85 1 86 1 275 1 204 1 
313 4 47 2 153 1 52 2 245 1 316 1 10 2 108 1 161 1 324 1 284 1 15 1 251 1 66 1 173 1 288 2 257 1 223 4 73 1 291 2 26 1 27 1 74 1 334 1 123 1 263 2 300 2 339 1 131 4 234 1 267 2 136 2 135 2 193 1 38 1 238 2 85 1 86 1 144 4 204 1 
313 4 47 2 153 1 316 1 245 1 10 2 108 1 161 1 324 1 284 1 15 1 251 1 66 1 173 1 288 2 257 1 223 4 73 1 291 2 26 1 74 1 334 1 123 1 263 2 300 2 339 1 131 4 234 1 267 2 134 1 136 1 135 2 193 1 38 1 238 2 140 1 85 1 86 1 144 4 46 1 204 1 
313 4 47 2 153 1 316 1 245 1 10 2 108 1 161 1 324 1 284 1 15 1 251 1 66 1 173 1 288 2 257 1 223 4 73 1 291 2 26 1 74 1 334 1 123 1 263 2 300 2 339 1 131 4 234 1 267 2 134 1 136 1 135 2 193 1 38 1 238 2 140 1 85 1 86 1 144 4 46 1 204 1 
313 4 47 2 153 1 52 2 245 1 10 2 108 1 161 1 61 2 324 1 325 1 284 1 15 1 251 1 66 1 173 1 288 2 257 1 223 4 73 1 291 2 181 1 26 1 74 1 334 1 123 1 263 2 339 1 131 4 340 2 234 1 267 2 136 1 193 1 38 1 85 1 86 1 144 4 91 1 46 1 204 1 
313 5 47 2 153 1 316 1 245 1 10 2 108 1 161 1 324 1 284 1 15 1 251 1 66 1 173 1 257 1 288 3 223 4 73 1 26 1 291 3 74 1 334 1 123 1 263 2 300 2 339 1 131 4 234 1 267 3 134 1 136 1 135 2 193 1 38 1 238 2 140 1 85 1 86 1 144 5 275 1 46 1 204 1 
313 5 47 2 153 1 316 1 245 1 10 2 108 1 161 1 324 1 284 1 15 1 251 1 66 1 173 1 257 1 288 3 223 4 73 1 26 1 291 3 74 1 334 1 123 1 263 2 300 2 339 1 131 4 234 1 267 3 134 1 136 1 135 2 193 1 38 1 238 2 140 1 85 1 86 1 144 5 275 1 46 1 204 1 
313 4 47 2 153 1 52 2 245 1 10 2 108 1 161 1 61 2 324 1 325 1 284 1 15 1 251 1 66 1 173 1 288 2 257 1 223 4 73 1 291 2 26 1 27 1 74 1 334 1 123 1 263 2 339 1 131 4 340 2 234 1 267 2 136 1 193 1 38 1 85 1 86 1 144 4 204 1 
149 1 101 1 155 1 317 2 105 1 320 1 60 4 211 1 115 1 225 2 73 1 119 1 120 1 333 1 292 2 184 2 260 2 339 1 301 2 193 1 271 1 306 2 309 1 276 1 95 2 282 4 
314 1 149 1 152 1 50 1 54 1 156 1 317 1 246 1 105 2 58 1 160 1 60 2 212 1 113 1 172 1 115 1 225 1 73 1 292 1 184 1 260 3 339 1 193 1 237 1 84 1 306 1 309 1 89 1 95 1 
149 3 152 1 151 1 54 2 156 1 317 1 105 3 246 1 320 1 160 2 60 2 323 1 113 1 218 1 67 1 225 1 292 1 184 1 260 6 132 2 269 1 237 1 306 1 308 1 95 1 280 1 
101 1 244 3 149 8 152 11 50 2 54 1 317 2 156 4 105 6 246 11 160 2 59 1 60 4 212 1 113 1 255 1 332 1 225 2 292 2 184 2 260 14 296 1 126 1 132 1 271 1 237 2 84 2 42 1 306 1 143 3 89 1 94 1 95 2 
99 1 101 1 149 1 156 1 317 1 105 1 60 2 212 1 111 1 169 1 115 1 225 1 73 1 119 1 226 1 292 1 184 1 260 2 262 1 339 1 301 1 193 1 271 1 40 1 306 1 309 1 95 1 282 1 
292 1 101 1 100 1 260 1 184 1 317 1 105 1 339 1 301 1 60 2 212 1 193 1 169 1 306 1 309 1 115 1 95 1 225 1 119 1 73 1 282 1 
292 1 149 2 152 1 260 2 184 1 156 1 317 1 246 1 320 1 158 1 160 1 60 2 237 1 84 1 306 1 95 1 332 1 225 1 
292 1 152 1 260 2 184 1 54 1 156 1 317 1 9 1 246 1 105 2 320 1 160 1 60 2 113 1 306 1 89 1 95 1 225 1 
149 2 50 1 152 2 54 1 317 1 156 2 246 2 105 2 320 1 160 2 60 2 113 1 225 1 332 1 292 1 184 1 260 4 237 1 84 1 306 1 89 1 95 1 
292 1 149 2 152 1 260 2 184 1 155 1 156 1 317 1 246 1 158 1 160 1 60 2 237 1 84 1 306 1 95 1 332 1 225 1 
292 1 152 1 260 2 184 1 54 1 155 1 156 1 317 1 9 1 246 1 105 2 160 1 60 2 113 1 306 1 89 1 95 1 225 1 
149 2 50 1 152 2 155 1 54 1 317 1 156 2 246 2 105 2 160 2 60 2 113 1 225 1 332 1 292 1 184 1 260 4 237 1 84 1 306 1 89 1 95 1 
149 2 50 1 152 2 54 1 317 1 156 2 246 2 105 2 160 2 60 2 113 1 225 1 332 1 292 1 260 4 184 1 237 1 84 1 306 1 89 1 95 1 
129 1 301 1 226 1 282 1 
80 1 301 1 290 1 282 1 
149 2 50 1 152 2 54 1 317 1 156 2 246 2 105 2 160 2 60 2 212 1 113 1 225 1 332 1 292 1 184 1 260 4 237 1 84 1 306 1 89 1 95 1 
19 1 129 1 276 1 226 1 282 1 
314 1 149 2 50 1 152 1 317 1 156 1 105 1 246 1 58 1 160 1 60 2 212 1 113 1 115 1 332 1 225 1 73 1 292 1 184 1 260 3 339 1 81 1 193 1 237 1 84 1 306 1 309 1 89 1 95 1 
244 2 149 9 50 3 54 3 317 2 105 10 319 1 59 1 160 6 60 4 168 1 170 1 113 3 171 1 331 1 225 2 332 3 292 2 260 19 296 1 78 1 298 1 264 2 187 2 237 3 84 3 143 1 89 3 95 2 146 1 
315 1 149 14 244 2 50 3 54 2 317 3 105 12 319 1 160 4 60 6 168 1 113 2 170 2 171 2 22 1 24 1 69 1 332 2 225 3 178 1 292 3 260 26 78 1 296 2 264 1 187 4 237 3 196 1 84 3 197 2 143 2 89 2 95 3 146 1 
105 21 113 5 22 1 218 1 24 1 225 3 292 3 296 3 298 1 237 5 308 1 143 3 146 1 149 20 244 4 315 1 50 4 151 1 54 4 317 3 319 1 160 8 59 1 60 6 323 1 168 1 170 1 171 2 69 1 332 4 178 1 260 41 78 1 264 1 187 4 269 1 196 1 84 4 197 1 89 4 95 3 200 1 280 1 
315 1 244 4 149 20 151 1 50 4 54 4 317 4 105 18 319 1 59 1 160 7 60 8 323 1 168 1 170 1 113 4 171 2 218 1 22 1 24 1 69 1 178 1 225 4 332 3 292 4 260 38 296 3 78 1 298 1 264 1 187 4 269 1 237 5 196 1 84 4 197 2 308 1 143 3 89 3 200 1 95 4 280 1 146 1 
315 1 244 4 149 27 151 1 50 7 54 7 317 2 105 25 319 1 59 2 160 14 60 4 323 1 168 1 170 1 113 8 171 1 218 1 22 1 24 1 69 1 178 1 225 2 332 7 292 2 260 52 126 2 296 2 78 1 264 1 187 4 269 1 237 8 196 1 84 7 197 1 308 1 143 4 89 7 95 2 280 1 146 1 
98 1 293 1 194 1 148 1 122 1 2 1 83 1 57 1 348 1 36 1 
154 1 249 1 
28 1 194 1 122 1 2 1 83 1 330 1 114 1 57 1 348 1 
272 1 232 1 
63 1 241 1 220 1 
293 1 148 1 2 1 122 1 7 1 131 1 57 1 36 1 136 1 194 1 83 1 198 1 90 1 223 1 71 2 43 1 203 1 348 1 
293 1 148 1 2 1 122 1 7 1 131 1 57 1 36 1 136 1 194 1 83 1 198 1 90 1 223 1 71 2 43 1 203 1 348 1 
293 1 148 1 2 1 122 1 7 1 131 1 57 1 36 1 136 1 194 1 83 1 198 1 90 1 223 1 71 2 43 1 203 1 348 1 
272 1 63 1 232 1 
272 1 63 1 232 1 
241 1 220 1 
63 1 241 1 220 1 
248 1 117 1 
208 1 2 1 154 1 7 1 57 1 248 1 249 1 174 1 115 2 221 1 223 1 71 1 116 1 117 1 73 2 121 1 122 1 339 2 131 1 132 1 193 2 194 1 270 1 83 1 198 1 309 2 348 1 
193 1 41 1 339 1 162 1 73 1 206 1 
305 1 294 1 6 1 301 1 107 1 282 1 
305 1 17 1 294 1 217 1 274 1 307 1 30 1 282 1 
294 1 30 1 305 1 17 1 307 1 274 1 217 1 276 1 282 2 
305 1 17 1 217 1 274 1 30 1 224 1 282 1 
219 1 
334 1 229 1 153 1 234 1 136 1 66 1 85 1 347 1 26 1 204 1 
50 2 52 10 135 5 136 5 237 2 39 2 84 2 113 2 85 5 345 1 142 1 311 5 89 2 202 5 204 5 
136 1 10 1 131 1 144 1 234 1 223 1 
334 2 228 1 153 2 51 1 261 2 10 2 131 3 301 2 133 1 112 1 304 1 214 1 85 2 66 2 254 2 144 4 223 3 72 2 282 4 26 1 204 2 
136 1 229 1 85 1 67 1 347 1 234 1 204 1 
334 1 153 1 52 1 316 1 10 1 300 1 131 1 234 1 136 2 135 1 238 1 66 1 85 1 144 1 223 1 26 1 204 1 
334 1 153 1 66 1 301 1 92 1 282 1 26 1 
3 1 244 1 153 2 50 2 52 6 10 1 16 1 113 2 66 2 22 1 254 1 24 1 69 1 223 1 178 1 26 2 334 2 261 1 296 1 131 1 234 2 135 3 136 5 237 2 196 1 39 2 84 2 85 5 345 1 311 5 143 1 144 1 89 2 202 5 204 8 
1 1 314 1 153 1 151 1 323 1 326 1 15 1 113 1 66 1 115 1 223 1 73 1 26 1 75 1 227 1 334 1 339 1 131 1 269 1 193 1 237 2 39 2 140 1 85 2 345 1 199 1 309 1 204 2 
193 1 314 1 1 1 129 1 309 1 339 1 301 1 115 1 222 1 73 1 226 1 282 1 
334 1 153 1 261 1 52 4 234 2 135 2 136 4 85 2 66 1 311 2 254 1 280 1 202 2 26 1 204 1 
148 1 337 1 57 1 248 1 348 1 
138 1 57 1 348 1 
138 1 57 1 348 1 
138 1 57 1 348 1 
141 1 57 1 348 1 
141 1 57 1 348 1 
141 1 57 1 348 1 
57 1 348 1 
122 1 83 1 
292 1 149 5 260 10 151 1 78 1 54 3 317 1 105 5 160 5 60 2 323 2 269 2 237 2 113 2 199 1 95 1 225 1 332 2 
292 1 149 2 260 2 78 1 317 1 160 1 60 2 237 1 84 1 95 1 225 1 332 1 
292 1 149 2 50 1 260 4 54 1 78 1 317 1 105 2 160 2 60 2 237 1 113 1 84 1 89 1 95 1 225 1 332 1 
292 3 149 1 260 3 78 1 54 1 298 1 317 3 105 2 160 2 60 6 32 1 323 1 269 1 197 1 95 3 225 3 332 1 
244 4 149 16 151 2 50 3 54 7 317 5 105 18 59 1 160 12 60 10 323 3 164 1 113 5 328 1 218 1 225 5 332 5 292 5 295 1 260 34 296 1 78 1 298 1 32 1 269 3 237 5 84 3 197 2 308 1 310 1 143 3 89 3 95 5 280 1 
244 1 149 4 151 1 54 2 317 1 105 4 160 2 60 2 323 1 113 1 22 1 218 1 225 1 292 1 260 8 296 1 78 1 269 1 237 1 308 1 143 1 95 1 280 1 
244 2 149 6 151 1 50 1 54 2 317 2 105 5 59 1 160 3 60 4 323 1 164 1 113 1 218 1 22 1 225 2 332 1 292 2 260 11 296 1 78 1 269 1 237 2 84 1 308 1 143 1 95 2 280 1 
244 1 149 9 151 1 50 2 54 3 317 3 105 10 160 4 60 6 323 1 164 1 113 3 218 1 22 1 69 1 24 1 332 1 225 3 178 1 292 3 260 19 296 1 78 1 269 1 237 3 196 1 84 2 197 1 308 1 143 1 89 2 95 3 280 1 
244 1 149 10 151 1 50 2 54 3 317 3 105 7 160 5 60 6 323 1 164 1 113 2 218 1 22 1 69 1 24 1 332 2 225 3 178 1 292 3 260 17 296 1 78 1 269 1 237 3 196 1 84 2 197 1 308 1 143 1 89 1 95 3 280 1 
244 1 149 4 151 1 54 2 317 1 105 4 160 2 60 2 323 1 113 1 22 1 218 1 225 1 292 1 260 8 296 1 78 1 269 1 237 1 308 1 143 1 95 1 280 1 
244 1 149 6 50 2 54 1 317 1 105 6 160 2 60 2 113 2 22 1 69 1 24 1 332 1 225 1 178 1 292 1 260 12 296 1 78 1 237 2 196 1 84 2 143 1 89 2 95 1 
244 1 149 10 151 1 50 2 54 3 317 4 105 8 160 5 60 8 323 1 164 1 113 2 218 1 22 1 24 1 69 1 332 2 225 4 178 1 292 4 260 18 296 1 78 1 269 1 237 3 196 1 84 2 197 2 308 1 143 1 89 1 95 4 280 1 
244 1 149 9 50 3 54 3 317 4 105 7 160 6 60 8 113 2 22 1 24 1 69 1 332 3 225 4 178 1 292 4 260 16 296 1 78 1 298 1 237 3 196 1 84 3 197 2 143 1 89 2 95 4 
149 3 260 7 151 1 54 3 105 4 160 6 323 3 269 3 237 1 113 1 308 1 218 2 332 3 
244 1 149 10 151 1 50 2 54 3 317 4 105 8 160 4 60 8 323 1 113 2 218 1 22 1 24 1 69 1 332 1 225 4 178 1 292 4 260 18 296 1 78 1 298 1 269 1 237 3 196 1 84 2 197 2 308 1 143 1 89 1 95 4 280 1 
292 2 149 4 151 1 260 8 54 2 317 2 105 4 160 3 60 4 323 1 269 1 237 1 113 1 197 1 308 1 218 1 95 2 280 1 332 1 225 2 
149 3 151 1 260 6 54 2 105 3 160 2 323 1 269 1 237 1 113 1 67 1 308 1 218 1 280 1 
292 1 149 2 50 1 260 4 54 1 317 1 105 2 160 2 60 2 164 1 237 1 113 1 84 1 89 1 95 1 225 1 332 1 
244 2 149 3 260 7 50 1 54 1 296 1 105 4 59 1 160 2 237 1 113 1 84 1 143 1 89 1 332 1 
149 11 244 2 151 1 50 2 54 5 317 2 105 12 160 9 59 1 60 4 323 2 113 3 218 1 332 4 225 2 292 2 260 23 126 1 32 1 269 2 237 3 84 2 197 2 308 1 143 2 89 2 94 1 95 2 280 1 
244 1 260 1 105 1 
149 1 260 1 143 1 
292 1 149 3 260 6 50 1 54 2 317 1 105 3 160 3 60 2 164 1 237 1 84 1 113 1 142 1 89 1 95 1 225 1 332 1 
244 1 149 6 50 2 54 1 317 1 105 6 160 2 60 2 113 2 22 1 69 1 24 1 332 1 225 1 178 1 292 1 260 12 296 1 78 1 237 2 196 1 84 2 143 1 89 2 95 1 
149 3 151 1 260 6 54 1 105 3 160 2 323 1 269 1 237 1 113 1 332 1 
292 1 149 1 260 3 54 1 317 1 105 2 160 2 60 2 323 1 32 1 269 1 197 1 218 1 308 1 95 1 332 1 225 1 
193 1 77 1 339 1 257 1 132 1 145 1 73 1 
77 1 339 1 266 1 132 1 11 1 193 1 23 1 257 1 279 1 145 1 258 1 73 1 
29 1 230 1 301 1 276 1 282 4 
65 1 282 1 
301 1 282 1 
30 1 276 1 282 2 
301 1 276 1 282 2 
301 1 276 1 282 2 
67 1 301 1 282 1 
193 1 309 1 339 1 301 1 115 1 73 1 119 1 282 1 
193 1 309 1 339 1 115 1 72 1 73 1 119 1 282 1 
193 1 309 1 339 1 115 1 72 1 73 1 119 1 282 1 
131 1 223 1 72 1 282 1 
131 1 223 1 72 1 282 1 
282 1 14 1 
301 1 282 1 
292 1 184 1 79 1 317 1 339 1 60 2 212 1 193 1 306 1 309 1 115 1 276 1 95 1 225 1 119 1 73 1 282 1 
334 1 228 1 153 1 66 1 301 1 131 1 221 1 223 1 282 1 26 1 
282 1 14 1 
193 1 309 1 339 1 301 1 115 1 73 1 119 1 282 1 
72 1 282 1 
167 1 318 1 132 1 82 1 302 1 
243 1 123 1 338 1 299 1 318 2 131 2 132 1 234 1 82 2 302 1 303 1 136 1 15 1 251 1 38 1 167 2 86 1 221 1 223 2 
41 1 167 1 318 1 162 1 302 1 206 1 
299 1 302 1 303 1 
250 1 139 1 239 1 247 1 12 1 278 1 97 1 235 1 
231 1 247 1 12 2 110 2 163 1 250 4 192 1 139 2 239 3 278 4 201 1 25 1 97 1 312 1 
297 1 56 1 247 1 12 1 110 1 235 1 250 2 139 1 239 1 278 2 97 1 242 1 
247 1 12 1 34 1 235 1 250 3 139 1 239 1 278 3 201 2 25 1 97 1 312 2 
335 2 239 2 210 1 31 1 
250 1 209 1 247 1 278 1 97 1 235 1 
250 2 139 1 239 1 247 1 12 1 278 2 110 1 97 1 76 1 235 1 
336 1 
250 1 139 1 239 1 247 1 12 1 278 1 97 1 235 1 
139 1 239 1 67 1 12 1 
250 1 139 1 239 1 247 1 12 1 278 1 97 1 
250 1 96 1 259 1 
247 1 12 1 213 1 235 1 250 3 139 1 239 1 278 3 201 1 97 1 25 1 312 2 
250 2 139 1 239 1 247 1 12 1 278 2 110 1 33 1 97 1 
102 1 247 1 235 1 250 1 192 1 268 1 18 1 239 1 277 1 278 1 97 1 
250 1 139 1 239 1 247 1 278 1 97 1 235 1 
250 1 139 2 247 1 12 1 278 1 97 1 235 1 
159 1 247 2 235 1 250 2 139 1 239 1 253 1 278 2 289 1 97 2 
231 1 247 1 321 1 12 1 110 2 235 1 250 3 192 1 139 1 239 2 278 3 97 1 76 1 
103 1 247 1 12 1 110 1 235 1 268 2 250 2 139 1 285 1 18 1 239 1 277 1 278 2 179 1 97 1 
231 1 247 2 12 1 110 2 33 1 235 1 250 4 192 1 139 1 239 2 240 1 278 4 97 2 
250 3 139 1 239 1 247 1 12 1 278 3 110 1 97 1 312 1 76 1 235 1 
192 1 239 1 231 1 163 1 
139 1 239 1 

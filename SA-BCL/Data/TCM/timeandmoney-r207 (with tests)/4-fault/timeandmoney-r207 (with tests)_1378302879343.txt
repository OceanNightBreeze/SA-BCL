#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 252 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 248 342 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 65 6 39 9 273 1 236 5 68 9 355 1 91 2 115 1 166 1 219 3 198 2 74 1 317 1 123 1 28 2 204 1 100 1 149 4 183 2 291 1 59 1 16 2 60 1 299 1 271 2 19 1 160 2 
64 1 65 6 39 9 273 1 236 5 68 9 355 1 91 2 115 1 166 1 219 3 198 2 74 1 317 1 123 1 28 2 204 1 100 1 149 4 183 2 291 1 59 1 16 2 60 1 299 1 271 2 19 1 160 2 
64 1 65 7 39 10 273 1 236 6 68 10 355 1 91 2 115 1 166 1 219 4 198 2 74 1 317 1 123 1 28 2 204 1 100 1 149 5 183 2 291 1 59 1 16 2 60 1 299 1 271 2 19 1 160 2 
64 1 65 4 39 7 273 1 236 4 68 7 91 2 115 1 166 1 219 2 198 2 74 1 317 1 123 1 28 2 204 1 100 1 149 3 183 2 291 1 59 1 16 1 60 1 299 1 271 2 19 1 160 2 
28 1 65 3 39 4 236 3 204 1 149 2 68 4 183 1 355 1 91 1 219 1 115 1 198 1 16 2 317 1 19 1 160 1 123 1 
28 1 320 1 39 2 236 1 204 1 100 1 68 2 183 1 91 1 59 1 198 1 116 1 296 1 271 1 19 1 123 1 
219 1 28 2 65 1 198 2 39 3 74 1 236 2 204 1 149 1 271 1 68 3 19 1 123 1 
28 2 272 1 65 7 39 9 273 1 236 5 204 1 149 4 68 9 183 1 355 1 91 1 291 1 115 1 219 3 198 2 16 2 74 1 317 1 105 1 271 1 19 1 160 1 123 1 
28 2 272 1 65 7 39 9 273 1 236 5 204 1 149 4 68 9 183 1 355 1 91 1 291 1 115 1 219 3 198 2 16 2 74 1 317 1 105 1 271 1 19 1 160 1 123 1 
66 1 335 1 308 1 
66 1 246 1 316 2 
326 2 358 2 367 1 221 2 368 2 260 2 200 1 54 2 
258 1 85 1 332 1 2 1 215 1 260 2 313 1 192 1 24 1 358 2 197 1 220 1 221 3 242 1 279 1 25 1 200 1 95 1 98 1 48 2 341 2 367 1 368 2 370 1 50 1 290 1 53 2 80 2 54 2 326 3 372 1 103 1 158 1 61 2 376 1 35 1 329 1 
326 1 358 1 221 1 368 1 147 1 260 1 200 1 43 1 54 1 96 1 
99 1 66 1 245 1 177 1 40 1 29 1 150 1 54 1 82 1 326 1 335 1 154 1 221 1 96 1 
66 1 368 1 177 1 40 1 29 1 260 1 150 1 54 1 82 2 358 1 326 1 335 1 154 2 221 1 96 1 
155 1 13 1 154 1 189 1 82 1 
66 1 335 1 155 1 154 2 139 1 189 1 284 1 82 2 
155 1 154 1 82 1 
189 1 368 1 147 1 260 1 43 1 82 1 54 1 358 1 326 1 154 1 221 1 200 1 270 1 96 1 
66 1 
66 1 335 1 155 1 187 1 154 2 189 1 284 1 82 2 
66 1 189 2 352 2 178 1 237 2 312 1 88 1 82 5 194 1 208 1 335 1 154 5 155 2 6 1 33 1 130 1 254 2 284 1 121 1 
98 1 48 1 341 1 85 1 332 1 368 1 215 1 260 1 53 1 54 1 24 1 326 2 372 1 210 1 221 2 279 1 62 1 131 1 329 1 95 1 
367 1 308 1 
367 2 368 1 260 1 113 1 54 2 326 2 358 1 221 2 264 1 
210 1 216 1 63 1 
98 1 48 1 341 1 85 1 367 1 332 1 215 1 53 1 24 1 326 1 372 1 221 1 279 1 106 1 329 1 95 1 
358 1 326 3 367 1 221 3 368 3 131 1 260 3 54 3 
326 1 221 1 368 1 147 1 260 1 54 1 96 1 
326 1 358 1 221 1 368 1 264 1 260 1 113 1 54 1 96 1 
258 1 85 1 332 1 40 1 67 1 215 1 260 3 313 1 192 1 90 1 24 1 358 2 197 1 220 1 221 4 279 1 264 1 200 1 95 1 96 1 98 1 48 1 341 1 367 1 177 1 368 3 50 1 29 1 150 1 290 1 53 1 80 1 54 3 82 1 326 4 372 1 154 1 158 1 61 2 62 1 131 1 376 1 35 1 329 1 
99 1 326 2 367 1 306 1 221 2 368 1 260 1 131 1 54 2 
161 1 66 1 40 1 368 3 177 1 67 1 29 1 260 3 150 1 82 1 54 3 358 1 326 3 154 1 221 3 264 1 62 1 131 2 96 1 
368 2 260 2 216 1 54 2 358 1 326 2 210 1 221 2 264 1 131 1 
98 1 48 1 341 1 85 1 367 1 332 1 215 1 53 1 24 1 326 1 372 1 221 1 279 1 95 1 329 1 
48 1 341 1 85 1 367 1 332 1 215 1 53 1 24 1 326 1 372 1 221 1 93 1 159 1 95 1 329 1 
108 1 258 2 135 1 216 2 313 1 112 1 197 1 220 1 97 1 364 1 146 1 50 1 80 4 55 1 294 1 210 2 103 2 83 1 158 1 61 2 298 1 63 2 234 1 35 1 
326 1 221 1 368 1 260 1 150 1 54 1 217 1 96 1 
27 1 99 1 306 1 367 1 368 4 235 1 260 4 54 5 326 5 358 1 221 5 264 1 62 1 131 2 
326 2 221 2 368 2 147 1 260 2 217 1 54 2 96 1 
301 1 255 1 
301 1 255 1 
315 1 344 1 
315 1 344 1 
315 1 344 1 
211 1 301 1 255 1 
211 1 301 1 255 1 
46 1 301 1 255 1 
196 1 366 1 315 1 344 1 301 2 255 2 
211 1 301 1 255 1 
14 1 301 1 255 1 
14 1 301 1 255 1 
14 1 301 1 255 1 
66 1 366 1 179 1 247 1 227 1 3 2 82 2 356 1 128 1 15 1 154 2 141 2 319 2 360 1 283 2 338 2 255 2 301 2 302 3 
10 1 213 1 367 1 21 1 368 2 260 2 165 1 54 2 82 1 3 1 15 1 326 2 154 1 221 2 156 1 297 1 319 1 283 1 45 1 46 1 338 1 255 1 301 1 302 1 
183 1 160 1 91 1 
296 1 183 1 91 1 
73 1 226 1 296 1 183 3 160 2 218 1 
73 1 296 1 69 1 183 2 160 1 218 1 
73 1 296 1 183 2 160 1 218 2 
213 1 107 2 66 2 352 1 189 4 135 1 190 1 109 1 237 1 353 1 312 3 261 1 335 1 6 1 316 3 45 1 284 1 362 2 223 2 246 1 146 1 178 2 151 1 82 5 55 1 32 1 155 1 154 5 83 1 156 1 254 1 132 1 
0 5 66 5 133 1 259 1 162 1 189 7 352 2 135 3 190 3 109 2 237 2 312 8 88 1 333 1 335 1 6 1 316 9 284 1 362 6 223 6 13 5 246 3 146 3 178 6 78 1 228 1 82 9 55 3 32 2 155 6 154 9 83 3 156 4 254 2 132 1 
107 1 66 3 189 2 352 1 109 1 190 1 135 1 237 1 353 1 312 3 88 1 335 1 316 4 362 2 223 2 246 2 146 1 178 2 151 1 82 3 55 1 32 1 154 3 83 1 156 1 254 1 
107 2 66 4 133 1 259 1 162 1 352 1 189 3 109 1 190 2 135 2 237 1 353 1 312 5 88 1 335 1 316 7 362 4 223 4 246 3 146 2 178 4 151 1 82 4 55 2 32 1 154 4 83 2 156 2 254 1 
209 1 308 1 329 1 
248 1 329 1 
374 1 
329 1 95 1 
209 2 332 1 104 1 18 1 329 3 95 1 
332 1 329 1 95 1 
7 1 329 1 
257 2 258 3 180 1 249 1 31 1 80 7 55 1 294 2 103 4 241 1 83 1 231 1 230 1 212 1 233 1 234 3 256 1 
257 2 258 3 180 1 249 1 31 1 80 7 55 1 294 2 103 4 241 1 83 1 231 1 230 1 212 1 233 1 234 3 256 1 
257 2 258 3 180 1 249 1 31 1 80 7 55 1 294 2 103 4 241 1 83 1 231 1 230 1 280 1 212 1 233 1 234 3 256 1 
257 1 126 1 258 4 146 1 135 1 190 1 31 1 80 8 55 1 252 1 278 1 294 1 103 4 83 1 233 2 234 2 120 1 36 2 377 1 256 1 
257 2 258 4 191 1 313 2 277 1 220 2 180 1 249 1 80 9 31 1 55 1 294 3 295 1 103 5 83 1 230 1 231 1 158 2 61 4 212 1 233 1 234 4 35 2 256 1 
37 1 65 1 188 1 39 2 236 1 215 1 23 1 68 2 91 1 4 1 262 1 24 1 198 1 123 1 341 1 48 1 28 1 11 1 144 1 226 1 204 1 346 1 53 1 184 1 183 2 296 1 271 1 19 1 20 1 160 1 
37 1 65 2 188 1 39 3 236 1 215 1 23 1 68 3 91 1 262 1 24 1 198 1 361 1 265 1 341 1 48 1 28 1 11 1 144 1 226 1 343 1 204 1 346 1 53 1 183 2 296 1 271 1 19 1 20 1 160 1 
37 1 65 2 188 1 39 2 236 1 215 1 23 1 68 2 91 1 24 1 361 1 341 1 48 1 144 1 226 1 343 1 204 1 346 1 53 1 183 2 296 1 271 1 19 1 20 1 160 1 
365 1 28 1 48 1 341 1 38 1 175 1 144 2 39 1 188 2 215 1 23 2 68 1 53 1 185 1 24 1 372 1 198 1 157 1 271 2 265 1 329 1 95 1 47 1 
37 1 11 1 28 1 48 1 341 1 144 1 39 1 188 1 226 1 343 1 215 1 23 1 346 1 68 1 53 1 183 2 184 1 91 1 24 1 262 1 198 1 296 1 271 1 20 1 160 1 123 1 
285 1 
330 2 40 1 237 1 89 1 137 1 335 1 199 1 6 1 92 1 284 3 95 1 47 1 96 1 48 2 341 2 99 1 245 1 145 1 246 2 202 1 289 2 150 1 53 2 152 1 54 1 102 2 57 1 155 6 154 5 157 1 254 1 66 2 352 1 109 1 215 1 312 2 24 1 71 1 221 1 316 2 26 1 173 2 122 4 177 1 178 2 127 2 29 1 79 2 325 1 82 5 326 1 372 2 327 2 328 1 329 1 
40 1 137 1 221 1 92 1 284 1 96 1 122 2 99 1 245 1 202 1 177 1 29 1 150 1 54 1 82 3 57 1 102 1 326 1 154 3 155 2 187 1 328 1 
330 1 66 1 40 1 137 1 335 1 221 1 92 1 284 1 96 1 122 3 99 1 245 1 202 1 177 1 29 1 150 1 54 1 82 3 57 1 326 1 155 1 154 3 187 1 328 1 
330 1 66 1 40 1 137 1 335 1 221 1 92 1 284 1 96 1 122 3 99 1 245 1 202 1 177 1 29 1 150 1 54 1 82 3 57 1 102 1 326 1 187 1 154 3 155 2 327 1 328 1 
330 4 40 1 237 1 238 1 137 1 335 5 6 1 92 1 284 3 96 1 99 1 245 1 145 1 202 1 246 2 203 1 150 1 289 2 54 1 102 4 57 1 154 5 155 7 254 1 351 1 66 5 352 1 163 1 312 1 221 1 122 6 173 2 321 1 177 1 178 1 127 2 29 1 79 2 325 1 82 5 326 1 187 1 327 4 328 1 
330 2 40 1 237 1 137 1 335 1 6 1 199 1 92 1 284 2 96 1 99 1 245 1 145 1 202 1 246 2 150 1 289 2 54 1 57 1 102 2 154 4 155 4 254 1 66 2 352 1 312 1 221 1 316 2 122 4 173 2 177 1 178 1 127 2 29 1 79 2 325 1 82 4 326 1 327 2 328 1 
330 2 351 1 66 1 40 1 352 1 163 1 237 1 312 1 137 1 335 1 221 1 6 1 92 1 284 2 173 2 96 1 122 4 99 1 245 1 321 1 145 1 246 2 202 1 177 1 178 1 127 2 29 1 289 2 79 2 150 1 325 1 54 1 82 4 102 2 57 1 326 1 155 4 154 4 327 2 254 1 328 1 
330 2 351 1 66 1 40 1 352 1 163 1 237 1 312 1 137 1 335 1 221 1 6 1 92 1 284 2 173 2 96 1 122 4 99 1 245 1 321 1 145 1 246 2 202 1 177 1 178 1 127 2 29 1 289 2 79 2 150 1 325 1 54 1 82 4 102 2 57 1 326 1 155 4 154 4 327 2 254 1 328 1 
330 2 1 1 66 1 40 1 352 1 163 1 237 1 312 1 137 1 335 1 221 1 6 1 316 2 282 2 92 1 284 2 143 1 96 1 122 4 99 1 245 1 145 1 202 1 177 1 178 1 127 2 29 1 79 2 150 1 54 1 82 4 251 1 102 2 57 1 326 1 155 4 154 4 327 2 269 2 254 1 328 1 
330 3 351 1 66 1 352 1 40 1 163 1 237 1 238 1 312 1 137 1 335 1 6 1 221 1 92 1 284 2 173 2 96 1 122 5 99 1 245 1 321 1 145 1 246 2 202 1 177 1 178 1 127 2 29 1 289 2 79 2 150 1 325 1 54 1 82 4 57 1 102 3 326 1 154 4 155 5 254 1 327 3 328 1 
330 3 351 1 66 1 352 1 40 1 163 1 237 1 238 1 312 1 137 1 335 1 6 1 221 1 92 1 284 2 173 2 96 1 122 5 99 1 245 1 321 1 145 1 246 2 202 1 177 1 178 1 127 2 29 1 289 2 79 2 150 1 325 1 54 1 82 4 57 1 102 3 326 1 154 4 155 5 254 1 327 3 328 1 
330 2 40 1 237 1 137 1 335 1 6 1 199 1 282 2 92 1 284 2 96 1 99 1 245 1 145 1 202 1 150 1 54 1 251 1 57 1 102 2 154 4 155 4 254 1 66 1 352 1 312 1 221 1 316 2 122 4 177 1 178 1 127 2 29 1 79 2 82 4 326 1 269 2 327 2 328 1 
257 1 258 3 308 1 216 1 313 1 197 1 220 1 364 1 367 2 180 1 50 1 249 1 80 6 55 1 294 2 210 1 103 3 230 1 231 1 83 1 212 1 158 1 61 2 234 2 63 1 35 1 
258 6 190 2 135 2 2 1 216 4 313 2 164 1 278 1 197 2 220 2 76 1 126 1 367 1 225 1 146 1 369 1 50 1 31 1 80 14 229 1 55 2 294 1 210 11 103 8 83 1 158 2 61 4 376 1 234 2 63 11 36 3 35 2 377 3 
85 1 258 1 332 1 215 1 2 1 111 1 260 1 216 1 313 1 164 1 24 1 197 1 220 1 221 2 169 1 279 1 95 1 98 1 339 1 341 1 48 1 367 1 368 1 50 1 53 1 80 2 54 1 326 2 372 1 103 1 62 1 61 2 158 1 131 1 106 1 376 1 35 1 329 1 
85 2 86 2 332 2 190 1 135 1 2 1 192 2 197 3 334 1 279 2 281 2 95 2 98 2 341 1 48 1 146 1 50 3 249 1 53 1 250 1 54 1 55 2 294 3 210 4 103 7 212 1 158 3 61 6 62 1 63 4 257 1 258 7 215 2 260 1 216 4 313 3 164 1 354 1 24 2 220 3 221 3 119 1 367 2 368 1 180 1 80 14 326 3 372 1 231 1 230 1 83 2 131 1 234 3 376 1 35 3 329 2 
258 1 275 1 215 2 2 1 260 1 313 2 4 1 114 1 24 2 197 2 220 2 221 1 25 2 75 1 47 1 95 2 364 1 341 8 48 7 322 1 368 1 343 1 50 2 51 1 53 8 80 2 54 1 206 1 56 1 326 1 372 2 103 1 158 2 61 4 157 1 131 1 376 1 35 2 329 3 
258 2 190 1 135 1 260 1 216 1 313 1 164 1 358 1 197 1 220 1 221 1 264 1 368 1 146 1 50 1 80 3 54 1 55 1 326 1 294 1 210 1 268 1 103 1 83 1 158 1 61 2 234 1 63 1 35 1 
364 1 135 1 50 1 216 1 313 1 31 1 80 2 112 1 55 1 197 1 210 1 220 1 103 2 61 2 158 1 234 1 63 1 35 1 
364 1 108 1 258 2 146 1 50 1 216 1 313 1 80 2 294 1 197 1 210 1 220 1 83 1 61 2 158 1 234 1 63 1 35 1 
258 2 135 1 190 1 216 2 313 1 197 1 220 1 364 1 146 1 50 1 80 4 31 1 55 1 294 1 210 2 103 2 83 1 158 1 61 2 63 2 234 2 35 1 
135 1 50 1 216 1 313 1 31 1 80 2 112 1 56 1 55 1 197 1 210 1 220 1 103 2 61 2 158 1 234 1 63 1 35 1 
108 1 258 2 146 1 50 1 216 1 313 1 80 2 56 1 294 1 197 1 210 1 220 1 83 1 61 2 158 1 234 1 63 1 35 1 
258 2 135 1 190 1 216 2 313 1 197 1 220 1 146 1 50 1 80 4 31 1 55 1 56 1 294 1 210 2 103 2 83 1 158 1 61 2 63 2 234 2 35 1 
258 2 146 1 190 1 135 1 50 1 216 2 313 1 31 1 80 4 55 1 294 1 197 1 210 2 220 1 103 2 83 1 61 2 158 1 234 2 63 2 35 1 
85 1 258 1 332 1 2 1 215 1 313 1 192 1 24 1 197 1 220 1 221 1 279 1 95 1 98 1 341 1 48 1 367 1 50 1 53 1 80 2 326 1 372 1 103 1 61 2 158 1 376 1 35 1 329 1 
85 1 258 1 332 1 274 1 2 1 215 1 313 1 24 1 197 1 220 1 221 1 93 1 95 1 341 1 48 1 367 1 50 1 53 1 80 2 326 1 372 1 103 1 61 2 158 1 159 1 376 1 35 1 329 1 
258 2 135 1 190 1 216 2 313 1 164 1 197 1 220 1 146 1 50 1 80 4 31 1 55 1 294 1 210 2 103 2 83 1 158 1 61 2 63 2 234 2 35 1 
258 2 85 1 332 1 135 1 190 1 215 1 216 2 313 1 192 1 4 1 24 1 197 1 220 1 221 1 279 1 281 1 95 1 98 1 341 1 48 1 146 1 50 1 53 1 31 1 80 4 55 1 326 1 294 1 210 2 103 2 83 1 61 2 158 1 234 2 63 2 35 1 329 1 
258 1 190 1 135 1 260 1 216 1 313 1 164 1 70 1 358 1 197 1 220 1 221 1 264 1 146 1 368 1 50 1 31 1 80 3 54 1 55 1 326 1 210 1 103 2 83 1 158 1 61 2 234 1 63 1 35 1 
258 10 190 3 135 3 313 2 278 1 44 2 220 2 244 1 142 1 125 2 126 1 77 1 146 3 148 1 80 19 31 3 207 1 55 3 58 1 294 3 295 1 103 9 83 3 158 2 61 4 232 1 234 6 36 2 35 2 377 1 
258 12 87 1 190 3 135 3 191 2 313 3 278 2 44 4 220 3 244 1 9 1 363 1 125 1 146 2 148 2 31 2 80 26 207 1 55 3 292 1 58 1 294 2 295 1 103 14 83 2 158 3 61 6 232 2 17 1 234 4 34 1 35 3 36 2 377 2 
87 1 135 4 190 4 191 1 278 3 44 4 244 1 142 1 9 1 146 4 148 2 249 1 55 5 207 1 292 1 58 1 294 4 295 1 103 20 350 1 61 6 158 3 212 1 17 1 257 1 258 21 313 3 220 3 363 1 125 1 126 1 180 1 31 4 80 41 83 5 230 1 231 1 232 1 234 8 34 1 377 3 35 3 36 4 
257 1 258 18 87 1 190 4 135 4 191 2 313 4 278 3 44 4 220 4 244 1 142 1 9 1 363 1 125 1 126 1 146 3 148 2 180 1 249 1 80 38 31 3 207 1 55 5 292 1 58 1 294 4 295 1 103 20 350 1 231 1 230 1 83 4 212 1 158 4 61 8 17 1 232 1 34 1 234 7 36 4 35 4 377 3 
257 1 258 25 87 1 190 7 135 7 191 1 313 2 278 2 44 4 220 2 244 1 9 1 363 1 125 1 126 2 146 7 148 1 180 1 249 1 80 52 31 7 229 2 207 1 55 8 292 1 58 1 294 7 295 1 103 27 231 1 230 1 83 8 212 1 158 2 61 4 17 1 232 1 34 1 234 14 36 4 35 2 377 4 
366 1 227 1 319 1 360 1 52 1 283 1 338 1 3 1 301 1 255 1 
10 1 46 1 
349 1 101 1 319 1 324 1 283 1 338 1 3 1 301 1 255 1 
66 1 366 1 179 1 247 1 227 1 82 1 3 1 128 1 15 1 154 1 141 1 319 1 360 1 283 1 338 1 255 1 301 1 302 2 
66 1 366 1 179 1 247 1 227 1 82 1 3 1 128 1 15 1 154 1 141 1 319 1 360 1 283 1 338 1 255 1 301 1 302 2 
66 1 366 1 179 1 247 1 227 1 82 1 3 1 128 1 15 1 154 1 141 1 319 1 360 1 283 1 338 1 255 1 301 1 302 2 
196 1 134 1 211 1 
196 1 134 1 211 1 
14 1 8 1 
196 1 14 1 8 1 
21 1 297 1 
213 1 189 1 21 1 260 2 136 1 3 1 165 1 221 2 141 1 319 1 283 1 45 1 338 1 46 1 10 1 367 1 368 2 247 1 82 1 54 2 326 2 154 1 156 1 297 1 301 1 255 1 302 1 
134 1 211 1 
196 1 14 1 8 1 
258 1 215 1 2 1 313 1 164 1 24 1 197 1 220 1 221 2 25 2 94 1 95 1 341 2 48 2 322 1 50 1 53 2 182 1 80 2 54 2 348 1 206 1 129 1 326 2 153 1 103 1 61 2 158 1 376 1 35 1 329 1 
48 2 341 2 144 1 226 1 343 1 215 1 346 1 53 2 183 2 91 1 4 1 24 1 262 1 296 1 117 1 140 1 373 1 20 1 160 1 
48 1 341 1 144 1 226 1 323 1 343 1 215 1 346 1 53 1 183 2 91 1 262 1 24 1 296 1 373 1 20 1 160 1 
48 1 341 1 144 1 215 1 53 1 185 1 24 1 372 1 117 1 318 1 157 1 329 1 95 1 47 1 
48 1 341 1 144 1 226 1 343 1 215 1 346 1 53 1 183 2 91 1 262 1 24 1 296 1 117 1 140 1 373 1 20 1 160 1 
337 1 
194 1 208 1 66 1 335 1 178 1 308 1 312 1 
66 2 352 1 237 1 312 1 335 1 6 1 316 1 284 1 173 1 246 1 178 1 289 1 325 1 82 1 155 1 154 1 254 1 
48 1 341 1 342 1 332 1 352 1 309 1 215 2 237 1 248 1 53 1 24 1 372 1 6 1 254 1 18 1 329 1 95 1 
66 5 352 2 109 1 190 2 135 2 237 2 42 1 312 8 278 1 335 2 6 2 72 2 359 1 316 6 284 1 9 1 362 5 223 5 363 1 12 1 246 3 146 2 178 5 152 1 82 1 55 2 292 1 154 1 155 1 83 2 254 2 17 1 34 1 36 1 377 1 
352 1 237 1 260 1 312 2 43 1 5 1 358 1 221 1 6 1 72 2 200 1 96 1 12 1 321 1 368 1 147 1 178 2 249 1 82 1 54 1 55 2 326 1 154 1 230 1 231 1 83 1 254 1 270 1 
66 1 352 1 178 1 237 1 312 1 194 1 208 1 335 1 6 1 254 1 
12 1 66 5 246 5 146 2 190 2 135 2 178 5 312 5 55 2 334 1 72 2 316 10 83 2 362 5 223 5 
66 1 335 1 154 1 155 1 284 1 82 1 
305 1 352 2 109 2 215 1 237 2 311 1 312 2 88 1 89 1 24 1 6 1 336 2 26 1 284 2 95 1 47 1 341 4 48 4 178 2 53 4 152 2 82 3 186 1 372 2 155 4 154 3 254 2 157 1 329 1 
258 1 85 1 332 1 215 1 260 2 313 1 192 1 24 1 358 2 197 1 220 1 221 3 279 1 200 1 95 1 98 1 341 1 48 1 367 1 368 2 50 1 290 1 53 1 80 1 54 2 326 3 372 1 158 1 61 2 376 1 35 1 329 1 
257 1 66 4 246 2 352 1 178 2 109 1 237 1 312 1 152 1 335 2 6 1 316 4 254 1 362 2 223 2 
331 1 283 1 3 1 
331 1 283 1 3 1 
214 1 21 1 227 1 283 1 3 1 
331 1 283 1 3 1 
283 1 81 1 3 1 
283 1 81 1 3 1 
283 1 81 1 3 1 
283 1 3 1 
301 1 255 1 
257 1 258 4 180 1 191 1 249 1 313 2 80 8 31 1 55 1 294 2 220 2 103 4 83 1 231 1 230 1 61 4 158 2 212 1 234 3 35 2 
257 1 258 3 308 1 180 1 249 1 80 6 55 1 294 2 103 3 230 1 231 1 83 1 212 1 234 2 
224 1 258 2 146 1 190 1 135 1 313 1 80 4 31 1 55 1 294 1 220 1 103 2 83 1 61 2 158 1 234 2 35 1 
126 1 258 4 146 1 190 1 135 1 80 7 31 1 55 1 278 1 294 1 103 3 83 1 234 2 36 2 377 1 
257 1 258 12 135 2 190 2 191 2 313 2 314 1 220 2 126 1 225 1 146 2 180 1 249 2 31 4 80 23 229 1 55 3 294 5 103 11 231 1 230 2 83 3 212 1 61 4 158 2 234 9 377 2 36 2 35 2 
258 1 80 1 36 1 
103 1 80 1 377 1 
224 1 258 3 146 1 190 1 135 1 313 1 80 6 31 1 55 1 334 1 294 2 220 1 103 3 83 1 158 1 61 2 234 3 35 1 
258 6 190 2 135 2 313 1 278 1 220 1 9 1 363 1 146 2 31 1 80 12 55 2 292 1 294 1 295 1 103 6 83 2 158 1 61 2 17 1 34 1 234 2 377 1 36 1 35 1 
55 1 294 1 258 3 103 3 230 1 83 1 231 1 249 1 31 1 234 2 80 6 
258 2 180 1 191 1 249 1 313 1 31 1 80 3 294 1 314 1 220 1 103 1 230 1 212 1 61 2 158 1 234 2 35 1 
258 5 249 2 313 1 31 2 80 10 5 1 55 2 294 3 220 1 295 1 103 5 230 2 231 1 83 2 158 1 61 2 234 5 35 1 
135 1 313 1 80 2 31 1 55 1 295 1 220 1 103 2 61 2 158 1 234 1 35 1 
258 2 146 1 190 1 135 1 313 1 80 4 31 1 55 1 294 1 295 1 220 1 103 2 83 1 61 2 158 1 234 2 35 1 
258 2 191 1 249 1 313 3 80 3 31 1 314 1 294 1 295 1 220 3 103 1 230 1 61 6 158 3 142 1 234 2 35 3 
258 6 313 3 5 1 278 1 220 3 142 1 120 1 224 1 180 1 249 1 31 2 80 12 55 2 294 2 295 1 103 6 83 2 231 1 230 1 158 3 61 6 212 1 234 4 36 1 35 3 377 1 
257 1 258 4 313 1 278 1 220 1 9 1 180 1 249 1 80 8 55 1 294 2 295 1 103 4 83 1 230 1 231 1 158 1 61 2 212 1 234 2 377 1 36 1 35 1 
257 1 258 5 190 1 135 1 313 2 278 1 220 2 9 1 224 1 126 1 180 1 249 1 80 11 31 1 55 2 294 2 295 1 103 6 83 1 231 1 230 1 212 1 158 2 61 4 234 3 36 2 35 2 377 1 
257 1 258 10 190 2 135 2 191 1 313 3 278 1 220 3 9 1 363 1 224 1 146 2 180 1 249 1 31 1 80 19 55 3 292 1 294 3 295 1 103 9 231 1 230 1 83 3 212 1 158 3 61 6 17 1 34 1 234 4 377 1 36 1 35 3 
257 1 258 7 190 2 135 2 191 1 313 3 278 1 220 3 9 1 363 1 224 1 146 1 180 1 249 1 31 2 80 17 55 3 292 1 294 3 295 1 103 10 231 1 230 1 83 2 212 1 158 3 61 6 17 1 34 1 234 5 377 1 36 1 35 3 
257 1 258 4 313 1 278 1 220 1 9 1 180 1 249 1 80 8 55 1 294 2 295 1 103 4 83 1 230 1 231 1 158 1 61 2 212 1 234 2 377 1 36 1 35 1 
258 6 190 2 135 2 313 1 278 1 220 1 9 1 363 1 146 2 31 1 80 12 55 2 292 1 294 1 295 1 103 6 83 2 158 1 61 2 17 1 34 1 234 2 377 1 36 1 35 1 
257 1 258 8 190 2 135 2 191 2 313 4 278 1 220 4 9 1 363 1 224 1 146 1 180 1 249 1 31 2 80 18 55 3 292 1 294 3 295 1 103 10 231 1 230 1 83 2 212 1 158 4 61 8 17 1 34 1 234 5 36 1 35 4 377 1 
258 7 190 3 135 3 191 2 313 4 278 1 220 4 142 1 9 1 363 1 146 2 31 3 80 16 55 3 292 1 294 3 295 1 103 9 83 2 158 4 61 8 17 1 34 1 234 6 36 1 35 4 377 1 
258 4 180 1 249 3 80 7 31 3 55 1 294 3 103 3 83 1 230 3 231 1 212 2 234 6 
257 1 258 8 190 2 135 2 191 2 313 4 278 1 220 4 142 1 9 1 363 1 146 1 180 1 249 1 31 1 80 18 55 3 292 1 294 3 295 1 103 10 231 1 230 1 83 2 212 1 158 4 61 8 17 1 34 1 234 4 36 1 35 4 377 1 
286 1 99 1 326 1 367 1 306 1 221 1 54 1 
286 1 99 1 367 1 306 1 22 1 54 1 357 1 167 1 326 1 221 1 118 1 303 1 
24 1 341 1 48 1 372 1 308 1 215 1 157 1 53 1 329 1 95 1 47 1 
98 1 48 1 341 1 85 1 367 1 332 1 368 1 215 1 260 1 53 1 54 1 24 1 326 2 372 1 221 2 131 1 329 1 95 1 
98 1 48 1 341 1 85 1 367 1 332 2 368 1 215 1 29 1 260 2 150 1 53 1 54 2 24 1 326 2 221 2 7 1 336 1 201 1 131 1 96 1 329 3 95 2 
85 1 332 2 215 1 260 2 24 1 221 2 7 1 336 1 201 1 95 2 96 1 341 2 48 2 367 1 368 1 29 1 345 1 150 1 53 2 54 2 326 2 131 1 159 1 329 3 
304 1 48 3 341 3 66 1 288 1 40 1 332 1 215 1 345 1 248 1 53 3 82 2 24 1 372 1 335 1 154 2 155 1 209 1 7 1 336 1 201 1 95 1 329 4 
48 3 341 3 66 1 40 1 332 1 215 1 345 1 248 1 53 3 82 2 24 1 372 1 335 1 154 2 155 1 209 1 7 1 168 1 336 1 201 1 95 1 329 4 
24 1 341 1 48 1 275 1 215 1 53 1 
48 6 341 7 322 1 332 1 275 1 343 1 110 1 276 1 215 3 51 1 53 7 239 1 4 1 114 1 24 2 372 2 25 1 18 1 75 1 95 2 329 3 
257 1 258 3 85 1 332 1 86 1 215 1 260 1 216 1 313 2 164 1 192 1 4 1 24 1 197 2 220 2 221 2 279 1 281 1 95 1 98 1 48 1 341 1 367 2 368 1 180 1 50 2 249 1 53 1 80 6 54 1 55 1 326 2 294 2 210 1 153 1 103 3 83 1 231 1 230 1 212 1 61 4 158 2 131 1 63 1 234 2 35 2 329 1 
66 1 352 2 189 1 40 1 237 2 311 1 312 1 194 1 335 1 6 2 168 1 170 1 284 1 172 1 341 1 48 1 178 1 248 1 53 1 82 3 208 1 372 1 154 3 155 2 209 1 254 2 84 1 329 2 
48 1 341 1 332 1 275 1 309 1 215 2 53 1 24 1 209 1 374 1 18 1 95 1 329 1 
340 1 48 4 341 4 215 1 345 1 53 4 4 1 24 1 372 1 157 1 47 1 95 1 329 1 
48 2 341 2 332 1 276 1 371 1 205 1 215 2 53 2 239 1 24 1 253 1 336 1 95 1 329 1 
24 1 341 1 48 1 372 1 296 1 215 1 53 1 183 1 20 1 91 1 
48 2 341 2 322 1 343 1 215 1 53 2 182 1 4 1 24 1 95 1 329 1 
340 1 48 4 341 5 322 1 215 2 51 1 53 5 4 1 24 2 372 1 336 1 157 1 75 1 47 1 95 2 329 3 
48 2 341 2 322 1 332 1 276 1 205 1 215 3 239 1 53 2 347 1 4 1 24 2 372 1 253 1 157 1 95 2 329 2 
48 1 341 1 85 1 367 1 332 1 368 1 215 1 260 1 53 1 54 1 24 1 326 2 372 1 221 2 131 1 159 1 329 1 95 1 
48 1 341 1 332 1 110 1 276 1 215 2 53 1 239 1 24 1 336 1 18 1 95 1 329 1 
326 1 129 1 221 1 41 1 181 1 171 1 54 1 94 1 348 1 
124 1 181 1 300 1 
367 1 41 1 181 1 171 1 193 1 
124 1 66 1 367 1 307 1 40 1 189 1 177 1 67 1 29 1 41 2 150 1 181 1 82 2 193 2 335 1 154 2 300 1 171 2 96 1 
236 1 308 1 204 1 19 1 
28 1 198 1 39 1 236 1 204 1 68 1 19 1 
39 1 23 1 271 1 
28 1 39 3 236 1 310 1 204 1 267 1 68 3 138 1 198 1 59 2 19 1 123 1 
28 1 65 1 198 1 16 1 39 2 236 1 204 1 68 2 19 1 
115 1 28 1 198 1 39 1 236 1 149 1 68 1 183 1 160 1 91 1 123 1 
28 1 198 1 39 1 236 1 68 1 19 1 123 1 
28 1 198 1 39 1 204 1 68 1 19 2 123 1 
28 2 287 1 39 2 236 1 49 1 68 2 198 2 375 1 19 1 123 1 
28 1 65 2 39 3 273 1 236 2 204 1 149 1 68 3 291 1 219 1 198 1 19 1 123 1 
28 1 65 1 39 2 226 1 236 1 204 1 68 2 183 2 91 1 198 1 296 1 222 1 19 1 160 1 123 1 
219 1 28 2 65 2 198 2 16 1 39 4 236 2 204 1 149 1 68 4 19 1 355 1 123 1 
28 1 198 1 39 1 236 1 204 1 68 1 19 1 123 1 
28 1 65 2 39 4 236 3 204 2 267 1 149 1 68 4 219 1 138 1 59 1 198 1 263 1 19 2 
272 1 240 1 28 1 65 1 293 1 198 1 39 2 236 1 204 1 68 2 19 1 123 1 
28 1 138 1 59 2 198 1 39 3 176 1 236 1 204 1 267 2 68 3 19 1 123 1 
266 1 236 2 30 1 243 2 
28 1 174 1 198 1 39 1 68 1 123 1 
291 1 28 1 65 1 198 1 39 2 236 1 204 1 68 2 19 1 123 1 
195 1 
28 1 198 1 39 1 236 1 204 1 68 1 19 1 123 1 
291 1 28 1 65 1 59 1 198 1 39 3 236 1 204 1 68 3 19 1 123 1 
219 1 263 1 236 1 149 1 
236 1 19 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 77 275 208 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 77 275 208 99 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 77 275 208 (105,124) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 77 275 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 77 275 208 (105,124) (105,124) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 77 275 208 (105,124) (105,124) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 331 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 331 256 90 66 61 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 331 256 90 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 331 256 90 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 331 256 90 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 331 256 90 66 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 77 20 155 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 77 275 208 (105,124) (105,124) 101 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 77 275 208 99 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 77 7 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 77 7 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 77 7 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 77 7 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 77 7 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 2 134 1 2 1 300 1 57 1 11 4 303 1 305 9 91 6 220 2 23 1 63 1 269 1 148 1 190 1 33 2 318 1 158 1 284 1 242 2 163 5 290 3 47 2 249 2 123 1 168 9 51 2 130 1 
53 2 134 1 2 1 300 1 57 1 11 4 303 1 305 9 91 6 220 2 23 1 63 1 269 1 148 1 190 1 33 2 318 1 158 1 284 1 242 2 163 5 290 3 47 2 249 2 123 1 168 9 51 2 130 1 
53 2 134 1 2 1 300 1 57 1 11 5 303 1 305 10 91 7 220 2 23 1 63 1 269 1 148 1 190 1 33 2 318 1 158 1 284 1 242 2 163 6 290 4 47 2 249 2 123 1 168 10 51 2 130 1 
53 2 134 1 2 1 300 1 57 1 11 3 303 1 305 7 91 4 220 2 23 1 63 1 269 1 148 1 190 1 33 2 318 1 158 1 284 1 242 2 163 4 290 2 47 2 249 1 123 1 168 7 51 2 
53 1 33 1 2 1 300 1 57 1 11 2 305 4 91 3 220 1 163 3 290 1 47 1 249 2 269 1 168 4 148 1 51 1 130 1 
33 1 53 1 2 1 300 1 303 1 284 1 305 2 242 1 220 1 163 1 64 1 47 1 168 2 148 1 295 1 150 1 
33 2 2 1 300 1 11 1 305 3 242 1 91 1 220 2 163 2 290 1 63 1 168 3 148 1 
53 1 2 1 300 1 5 1 57 1 11 4 91 7 305 9 220 2 63 1 269 1 148 1 190 1 33 2 318 1 160 1 242 1 163 5 290 3 47 1 249 2 168 9 51 1 130 1 
53 1 2 1 300 1 5 1 57 1 11 4 91 7 305 9 220 2 63 1 269 1 148 1 190 1 33 2 318 1 160 1 242 1 163 5 290 3 47 1 249 2 168 9 51 1 130 1 
250 1 274 1 52 1 
236 1 274 1 92 2 
208 1 77 1 275 1 
208 1 77 1 99 1 275 1 
208 1 124 1 77 1 275 1 
60 1 282 1 307 1 287 1 22 1 185 1 268 1 26 1 313 1 274 1 52 1 212 1 232 1 172 1 
77 1 275 1 
221 1 8 1 179 1 282 1 212 1 
8 1 260 1 179 1 98 1 282 2 274 1 52 1 212 2 
179 1 282 1 212 1 
8 1 208 1 124 1 77 1 282 1 275 1 212 1 105 1 
274 1 
8 1 76 1 179 1 98 1 282 2 274 1 52 1 212 2 
195 2 175 1 8 2 179 2 282 5 42 1 17 1 80 2 283 1 164 1 121 2 327 1 98 1 274 1 28 1 170 1 297 1 52 1 212 5 
178 1 321 1 
178 1 321 1 
108 1 188 1 
108 1 188 1 
108 1 188 1 
178 1 321 1 238 1 
165 1 178 1 321 1 
108 1 188 1 178 2 321 2 322 1 149 1 
178 1 321 1 238 1 
178 1 321 1 238 1 
309 1 178 1 321 1 
309 1 178 1 321 1 
309 1 178 1 321 1 
291 1 279 1 259 1 178 1 77 1 321 1 282 1 272 1 212 1 194 1 131 1 
279 2 74 1 259 1 178 2 321 2 282 2 322 1 201 1 291 3 144 2 310 1 329 1 186 1 274 1 272 2 212 2 255 1 131 2 194 2 
53 1 47 1 51 1 
53 1 47 1 150 1 
53 3 223 1 141 1 51 2 150 1 117 1 
53 2 223 1 258 1 51 1 150 1 117 1 
53 2 223 2 51 1 150 1 117 1 
87 1 8 4 177 1 179 1 59 1 17 2 267 1 217 1 19 1 92 3 222 2 224 1 97 1 98 1 229 1 273 2 274 2 195 1 196 1 236 1 106 1 154 1 79 2 282 5 80 1 42 3 121 1 164 1 206 1 48 1 212 5 52 1 
87 1 8 7 177 3 179 6 136 1 59 3 17 6 217 2 19 3 92 9 221 5 98 1 229 3 273 6 274 5 231 1 195 2 68 1 196 2 236 3 34 1 79 6 282 9 80 2 42 8 204 1 164 1 121 2 206 4 48 3 170 1 211 1 212 9 52 1 257 5 
8 2 177 1 59 1 17 2 217 1 19 1 92 4 222 1 224 1 229 1 274 3 273 2 275 1 105 1 195 1 196 1 236 2 154 1 77 1 79 2 282 3 80 1 42 3 121 1 206 1 208 1 124 1 48 1 170 1 52 1 212 3 
8 1 177 1 59 1 17 2 217 1 19 1 92 4 222 1 224 1 229 1 274 2 273 2 231 1 195 1 196 1 236 2 154 1 79 2 282 2 80 1 42 3 121 1 206 1 48 1 170 1 212 2 
109 1 250 1 210 1 230 1 161 1 
198 1 161 1 
104 1 
16 1 161 1 67 1 
133 1 161 1 
16 1 161 1 
226 1 304 1 230 2 16 1 161 3 67 1 
277 1 70 1 72 1 12 2 266 4 215 1 216 3 182 1 311 1 48 1 227 1 229 1 100 1 252 2 253 1 298 3 193 7 
277 1 70 1 72 1 12 2 266 4 215 1 216 3 182 1 311 1 48 1 227 1 229 1 100 1 252 2 253 1 298 3 193 7 
277 1 278 1 70 1 72 1 12 2 266 4 215 1 216 3 182 1 311 1 48 1 227 1 229 1 100 1 252 2 253 1 298 3 193 7 
177 3 12 3 59 3 215 1 266 16 216 15 19 3 18 1 182 2 147 1 311 2 227 1 187 1 25 3 100 5 229 4 29 1 193 31 277 1 70 2 72 2 199 1 43 2 240 1 286 1 116 4 324 1 48 4 50 1 252 5 296 1 253 1 171 1 298 10 
299 1 12 2 266 5 215 1 216 4 18 1 182 1 311 1 227 1 229 1 100 1 193 9 72 1 70 1 43 4 113 1 240 2 48 1 50 2 296 2 252 3 253 1 171 2 298 4 
53 2 55 2 2 1 300 1 10 1 301 1 302 1 58 1 91 1 305 2 220 1 184 1 141 1 139 1 138 1 65 1 148 1 150 1 33 1 73 2 38 1 40 2 242 1 163 1 288 1 47 1 207 1 209 1 168 2 51 1 254 1 
53 2 55 1 300 1 10 1 301 1 262 1 302 1 58 1 305 3 91 2 220 1 141 1 138 1 139 1 65 1 148 1 150 1 33 1 73 1 36 1 40 1 242 1 163 1 288 1 325 1 47 1 207 1 168 3 51 1 254 1 
53 2 55 1 300 1 10 1 262 1 302 1 305 2 91 2 138 1 139 1 141 1 65 1 148 1 150 1 73 1 36 1 40 1 242 1 163 1 288 1 47 1 207 1 168 2 51 1 254 1 
33 1 197 1 54 1 55 1 71 1 73 1 156 1 10 2 320 1 40 1 16 1 161 1 242 2 305 1 220 1 183 1 288 1 138 2 325 1 139 2 168 1 169 1 254 1 
53 2 33 1 2 1 55 1 73 1 301 1 10 1 302 1 262 1 58 1 40 1 242 1 305 1 220 1 288 1 141 1 139 1 138 1 47 1 207 1 65 1 209 1 168 1 51 1 150 1 254 1 
244 1 
176 1 179 2 13 1 16 1 17 2 183 2 22 1 93 1 185 1 268 1 96 2 26 1 98 1 192 1 195 1 37 1 39 1 40 2 282 3 42 2 112 1 114 1 287 1 289 1 288 1 121 1 212 3 55 2 60 1 218 1 217 1 307 1 225 1 313 1 314 1 232 1 71 1 73 2 156 1 80 1 161 1 164 1 83 1 331 1 254 1 172 1 
176 1 179 2 13 1 60 1 307 1 22 1 185 1 268 1 24 1 96 2 26 1 313 1 98 1 314 1 232 1 76 1 282 3 114 1 287 1 83 1 212 3 172 1 
176 1 179 1 13 1 60 1 307 1 22 1 185 1 268 1 96 3 26 1 313 1 98 1 314 1 274 1 232 1 76 1 282 3 114 1 287 1 83 1 212 3 52 1 172 1 333 1 
176 1 179 2 13 1 60 1 307 1 22 1 185 1 268 1 24 1 96 3 26 1 313 1 98 1 314 1 274 1 232 1 76 1 281 1 282 3 114 1 287 1 83 1 212 3 52 1 172 1 333 1 
176 1 179 3 13 1 90 1 60 1 17 1 61 1 218 1 307 1 22 1 93 1 185 1 268 1 24 2 96 2 26 1 313 1 98 1 314 1 66 1 191 1 232 1 195 1 37 1 76 1 281 2 282 3 42 1 112 1 80 1 114 1 287 1 121 1 164 1 83 1 331 1 212 3 172 1 256 1 
176 1 13 1 60 1 17 1 218 1 307 1 22 1 93 1 185 1 268 1 96 2 26 1 313 1 314 1 232 1 195 1 37 1 282 2 42 1 80 1 112 1 114 1 287 1 121 1 164 1 83 1 331 1 212 2 172 1 
176 1 13 1 60 1 90 1 17 1 218 1 307 1 22 1 93 1 185 1 268 1 96 2 26 1 313 1 314 1 191 1 232 1 195 1 37 1 282 2 42 1 112 1 80 1 114 1 287 1 164 1 121 1 83 1 331 1 212 2 172 1 256 1 
176 1 13 1 60 1 90 1 17 1 218 1 307 1 22 1 93 1 185 1 268 1 96 2 26 1 313 1 314 1 191 1 232 1 195 1 37 1 282 2 42 1 112 1 80 1 114 1 287 1 164 1 121 1 83 1 331 1 212 2 172 1 256 1 
0 1 176 1 179 4 13 1 60 1 15 1 17 1 218 2 92 2 307 1 22 1 95 2 185 1 24 2 268 1 96 4 26 1 313 1 98 2 314 1 274 1 232 1 195 1 37 2 281 2 282 4 42 1 200 1 80 1 114 1 287 1 164 1 121 1 83 1 331 1 294 2 52 1 212 4 172 1 333 2 256 1 
176 1 179 1 13 1 60 1 90 1 17 1 218 1 307 1 22 1 93 1 185 1 268 1 24 1 96 3 26 1 313 1 314 1 66 1 191 1 232 1 195 1 37 1 281 1 282 2 42 1 112 1 80 1 114 1 287 1 121 1 164 1 83 1 331 1 212 2 172 1 256 1 333 1 
176 1 179 1 13 1 60 1 90 1 17 1 218 1 307 1 22 1 93 1 185 1 268 1 24 1 96 3 26 1 313 1 314 1 66 1 191 1 232 1 195 1 37 1 281 1 282 2 42 1 112 1 80 1 114 1 287 1 121 1 164 1 83 1 331 1 212 2 172 1 256 1 333 1 
0 1 176 1 179 4 13 1 17 1 92 2 22 1 185 1 95 2 268 1 24 2 96 4 26 1 98 2 274 1 195 1 37 2 281 2 282 4 42 1 114 1 287 1 121 1 49 1 294 2 212 4 52 1 60 1 218 2 307 1 313 1 314 1 232 1 80 1 164 1 83 1 331 1 172 1 333 2 
6 1 177 4 214 1 12 1 59 4 215 1 266 20 181 4 216 21 18 1 19 4 182 1 21 1 227 1 25 3 187 1 270 1 100 4 229 5 102 1 317 1 193 41 235 1 70 1 107 1 111 1 43 6 113 1 240 3 286 3 81 1 116 4 119 1 45 1 48 5 50 3 126 1 252 4 296 3 253 1 171 3 84 2 298 8 
6 1 177 4 214 1 12 1 59 4 215 1 266 20 181 4 216 18 18 2 19 3 182 1 21 1 227 1 25 3 187 1 270 1 100 3 229 4 102 1 317 1 193 38 235 1 70 1 107 1 111 1 43 8 113 1 240 4 286 3 81 1 116 4 119 1 45 1 48 5 50 4 126 1 252 4 296 4 253 1 171 4 84 2 298 7 
56 2 6 1 177 7 214 1 12 1 59 7 215 1 266 27 181 4 216 25 18 1 19 7 182 1 21 1 227 1 25 4 187 2 100 7 229 8 102 1 317 1 193 52 235 1 70 1 107 1 43 4 113 1 240 2 286 2 81 1 116 4 119 1 45 1 48 8 50 2 126 1 252 7 296 2 253 1 171 2 84 1 298 14 
6 1 177 3 59 3 266 9 181 2 216 10 19 3 25 1 187 1 270 1 30 1 100 3 229 3 102 2 317 1 193 19 107 1 43 4 113 1 240 2 286 1 116 2 119 1 48 3 50 2 252 3 296 2 171 2 84 1 298 6 
6 1 177 3 214 1 59 3 266 14 216 12 181 4 18 2 19 2 21 1 25 2 100 2 229 2 102 1 317 1 193 26 235 1 107 1 43 6 113 1 240 3 286 2 81 1 116 2 119 2 45 1 48 3 50 3 252 2 296 3 126 1 171 3 298 4 84 2 
279 1 74 1 310 1 178 1 321 1 322 1 272 1 173 1 194 1 131 1 
69 1 165 1 
279 1 46 1 157 1 178 1 321 1 272 1 306 1 194 1 131 1 
238 1 241 1 
309 1 293 1 149 1 
279 1 74 1 259 1 178 1 321 1 282 1 322 1 201 1 291 2 144 1 310 1 329 1 186 1 274 1 272 1 212 1 131 1 194 1 
279 1 74 1 259 1 178 1 321 1 282 1 322 1 201 1 291 2 144 1 310 1 329 1 186 1 274 1 272 1 212 1 131 1 194 1 
279 1 74 1 259 1 178 1 321 1 282 1 322 1 201 1 291 2 144 1 310 1 329 1 186 1 274 1 272 1 212 1 131 1 194 1 
238 1 149 1 241 1 
238 1 149 1 241 1 
309 1 293 1 
309 1 293 1 149 1 
247 1 213 1 
69 1 106 1 279 1 8 1 213 1 155 1 178 1 77 1 321 1 282 1 20 1 291 1 247 1 165 1 206 1 144 1 329 1 97 1 272 1 212 1 131 1 194 1 
55 2 60 2 16 1 266 1 216 1 185 2 145 1 189 1 228 1 232 2 276 1 193 2 73 2 75 1 38 2 40 2 161 1 43 2 240 1 202 1 162 1 243 1 288 1 245 1 120 1 330 1 332 1 50 1 296 1 254 1 171 1 
53 2 1 1 234 1 55 2 73 2 301 1 262 1 302 1 40 2 288 1 184 1 141 1 138 1 246 1 47 1 207 1 51 1 150 1 254 1 
53 2 55 1 73 1 319 1 301 1 262 1 302 1 40 1 288 1 141 1 138 1 246 1 47 1 207 1 51 1 150 1 254 1 
1 1 55 1 153 1 73 1 71 1 156 1 320 1 40 1 16 1 161 1 183 1 288 1 138 1 254 1 
53 2 1 1 234 1 55 1 73 1 301 1 262 1 302 1 40 1 288 1 141 1 138 1 246 1 47 1 207 1 51 1 150 1 254 1 
125 1 
250 1 42 1 274 1 17 1 28 1 297 1 52 1 
195 1 93 1 121 1 164 1 17 1 42 1 112 1 80 1 
177 2 265 1 264 2 179 5 16 1 17 8 19 2 92 12 183 1 184 1 98 3 28 1 273 6 274 8 31 2 192 1 195 4 198 3 40 2 41 1 282 5 42 9 115 1 118 1 288 2 205 2 121 4 48 2 297 1 52 2 212 5 132 2 55 2 59 2 217 2 146 2 226 1 313 2 230 2 315 2 229 2 67 1 233 2 236 6 73 2 79 6 80 4 161 6 164 4 254 1 174 2 
132 2 177 2 214 1 179 1 59 2 17 5 180 1 217 1 19 2 92 6 25 1 98 1 315 1 273 5 274 5 229 2 192 1 195 2 235 1 236 3 79 5 282 1 42 8 80 2 286 1 81 1 116 1 45 1 121 2 164 2 48 2 126 1 127 1 212 1 52 2 
195 1 132 2 70 1 77 1 282 1 42 2 17 1 80 1 182 1 164 1 121 1 208 1 124 1 48 1 227 1 229 1 275 1 212 1 191 1 101 1 105 1 
195 1 80 1 17 1 42 1 164 1 121 1 28 1 274 1 297 1 52 1 
132 2 236 5 177 2 79 5 59 2 17 5 42 5 19 2 92 10 205 1 48 2 315 1 273 5 274 5 229 2 
179 1 98 1 282 1 274 1 52 1 212 1 
55 4 179 4 16 1 17 2 217 2 62 2 183 2 225 1 98 2 192 2 195 2 73 4 71 1 156 1 40 4 282 3 80 2 42 2 161 1 115 1 82 1 288 1 289 1 121 2 164 1 167 1 170 1 254 1 212 3 
208 1 77 1 99 1 275 1 
195 1 236 2 12 1 79 2 17 2 80 1 42 1 217 1 92 4 164 1 121 1 273 2 274 4 52 2 192 1 
279 1 110 1 194 1 
152 1 279 1 74 1 213 1 194 1 
279 1 110 1 194 1 
279 1 110 1 194 1 
279 1 323 1 194 1 
279 1 323 1 194 1 
279 1 323 1 194 1 
279 1 194 1 
178 1 321 1 
12 1 266 4 215 1 216 4 182 1 25 1 227 1 229 1 193 8 235 1 70 1 43 2 113 1 240 1 286 1 116 1 48 1 50 1 296 1 252 2 253 1 171 1 298 2 
177 1 12 1 59 1 215 1 266 6 216 5 182 1 227 1 25 1 187 1 27 1 229 1 100 1 193 11 235 1 70 1 113 1 43 4 240 2 286 1 116 2 48 2 50 2 252 2 296 2 253 1 171 2 298 3 
177 2 214 1 12 1 59 2 215 1 266 9 216 10 19 2 18 1 182 1 227 1 25 1 27 1 100 1 229 3 193 19 235 1 70 1 43 6 113 1 240 3 286 1 81 1 116 1 45 1 48 3 50 3 296 3 126 1 252 3 253 1 171 3 298 4 
177 2 214 1 12 1 59 2 215 1 266 10 216 7 18 1 19 1 182 1 227 1 25 1 27 1 100 2 229 2 193 17 235 1 70 1 43 6 113 1 240 3 286 1 116 1 81 1 45 1 48 3 50 3 296 3 126 1 252 3 253 1 171 3 298 5 
12 1 266 4 215 1 216 4 182 1 25 1 227 1 229 1 193 8 235 1 70 1 43 2 113 1 240 1 286 1 116 1 48 1 50 1 296 1 252 2 253 1 171 1 298 2 
177 2 214 1 59 2 266 6 216 6 19 2 25 1 100 1 229 2 193 12 235 1 43 2 113 1 240 1 286 1 116 1 81 1 45 1 48 2 50 1 296 1 126 1 252 1 171 1 298 2 
177 2 214 1 12 1 59 2 215 1 266 10 216 8 19 1 18 2 182 1 227 1 25 1 27 1 100 2 229 2 193 18 235 1 70 1 43 8 113 1 240 4 286 1 81 1 116 1 45 1 48 3 50 4 296 4 126 1 252 3 253 1 171 4 298 5 
177 3 214 1 59 3 266 9 216 7 19 2 18 2 25 1 270 1 100 3 229 2 193 16 235 1 113 1 43 8 240 4 286 1 81 1 116 1 45 1 48 3 50 4 296 4 126 1 252 3 171 4 298 6 
70 3 215 1 266 3 216 4 182 3 227 1 48 1 229 1 252 3 100 3 253 2 193 7 298 6 
177 2 214 1 12 1 59 2 215 1 266 10 216 8 19 1 18 2 182 1 227 1 25 1 270 1 100 1 229 2 193 18 235 1 70 1 113 1 43 8 240 4 286 1 81 1 116 1 45 1 48 3 50 4 296 4 126 1 252 3 253 1 171 4 298 4 
70 1 12 1 266 4 43 4 215 1 216 4 240 2 18 1 182 1 48 1 227 1 50 2 229 1 100 1 252 2 296 2 253 1 171 2 193 8 298 3 
70 1 250 1 48 1 227 1 12 1 229 1 252 2 266 3 253 1 215 1 216 3 193 6 298 2 182 1 
177 1 59 1 43 2 266 2 216 2 240 1 19 1 48 1 27 1 50 1 252 1 229 1 296 1 100 1 171 1 298 2 193 4 
177 1 59 1 266 3 216 4 19 1 286 1 116 2 25 1 187 1 48 1 252 1 229 1 100 1 193 7 298 2 
56 1 177 2 12 1 59 2 215 1 266 11 216 12 19 2 18 2 182 2 142 1 227 1 187 1 25 2 100 4 229 3 193 23 70 2 237 1 43 4 240 2 116 2 48 3 50 2 252 5 296 2 253 1 171 2 298 9 
216 1 193 1 116 1 
25 1 266 1 193 1 
177 1 59 1 43 2 266 3 240 1 216 3 19 1 205 1 48 1 50 1 27 1 296 1 100 1 229 1 252 2 171 1 193 6 298 3 
177 2 214 1 59 2 266 6 216 6 19 2 25 1 100 1 229 2 193 12 235 1 43 2 113 1 240 1 286 1 116 1 81 1 45 1 48 2 50 1 296 1 126 1 252 1 171 1 298 2 
70 1 48 1 227 1 100 1 252 1 229 1 266 3 216 3 298 2 182 1 193 6 
70 1 266 1 43 2 215 1 216 2 240 1 18 1 182 1 142 1 50 1 100 1 252 1 296 1 253 1 171 1 298 2 193 3 
70 2 43 2 113 1 266 5 240 1 216 5 182 2 227 1 48 2 50 1 296 1 252 3 100 2 229 2 171 1 101 1 298 5 193 10 
177 1 113 1 43 2 266 2 240 1 48 1 50 1 296 1 100 1 171 1 193 2 298 1 
177 1 59 1 113 1 43 2 266 2 216 2 240 1 19 1 48 1 50 1 252 1 229 1 296 1 100 1 171 1 298 2 193 4 
70 1 113 1 43 6 266 1 216 2 240 3 18 1 182 1 142 1 270 1 50 3 296 3 252 1 100 1 171 3 193 3 298 2 
177 3 12 1 59 3 215 1 266 16 216 18 18 2 19 3 182 3 142 1 147 1 227 2 25 3 187 1 270 1 27 1 29 1 100 5 229 5 193 34 70 3 199 1 43 10 113 1 240 5 286 1 116 4 48 5 50 5 296 5 252 7 253 1 171 5 298 12 
308 1 185 1 26 1 60 1 239 1 232 1 203 1 
85 1 280 1 9 1 239 1 60 1 203 1 308 1 140 1 94 1 185 1 26 1 232 1 
183 1 288 1 55 1 71 1 73 1 156 1 250 1 40 1 16 1 161 1 254 1 
7 1 77 1 
7 1 77 1 
7 1 77 1 
133 1 151 1 55 3 73 3 198 1 179 1 40 3 282 2 16 1 161 4 62 1 44 1 183 1 288 1 143 1 313 1 274 1 230 1 52 1 212 2 254 1 103 1 67 1 
133 1 151 1 55 3 73 3 198 1 179 1 40 3 282 2 16 1 161 4 62 1 183 1 288 1 313 1 274 1 230 1 52 1 212 2 31 1 254 1 103 1 67 1 
288 1 55 1 73 1 88 1 40 1 254 1 
55 7 73 6 88 1 38 1 262 1 263 1 78 1 159 1 89 1 40 7 16 2 161 3 202 1 219 1 183 2 184 1 288 3 226 1 254 2 32 1 67 1 
7 1 77 1 
55 1 8 1 264 1 179 2 17 1 183 1 146 1 313 1 98 1 274 1 28 1 230 1 31 1 195 2 73 1 198 1 40 1 282 3 42 1 80 2 161 2 115 1 121 2 164 2 297 1 52 1 212 3 174 1 
55 1 73 1 88 1 40 1 41 1 16 1 161 2 288 2 226 1 230 1 254 1 104 1 67 1 
55 4 73 4 71 1 156 1 40 4 16 1 161 1 183 1 288 1 184 1 166 1 254 1 103 1 
86 1 55 2 73 2 261 1 159 1 89 1 40 2 16 1 161 1 137 1 62 1 288 2 254 1 67 1 
53 1 183 1 288 1 55 1 73 1 47 1 302 1 40 1 150 1 254 1 
55 2 73 2 262 1 40 2 16 1 161 1 202 1 184 1 288 1 120 1 254 1 
55 5 71 1 73 4 156 1 263 1 78 1 40 5 16 2 161 3 202 1 62 1 183 1 184 1 288 2 166 1 254 2 
55 5 71 1 73 4 156 1 78 1 40 5 16 2 161 3 202 1 62 1 183 1 184 1 288 2 166 1 312 1 254 2 
7 1 77 1 
55 1 73 1 159 1 89 1 40 1 16 1 161 1 62 1 219 1 288 2 226 1 254 1 67 1 
163 1 300 1 250 1 148 1 
33 1 163 1 300 1 168 1 148 1 305 1 220 1 
10 1 242 1 305 1 
33 1 2 1 3 1 300 1 284 2 305 3 220 1 163 1 248 1 328 1 168 3 148 1 
33 1 163 1 300 1 249 1 168 2 148 1 91 1 305 2 220 1 
53 1 33 1 163 1 2 1 47 1 57 1 11 1 168 1 51 1 305 1 220 1 
33 1 163 1 2 1 168 1 148 1 305 1 220 1 
33 1 2 1 300 1 168 1 148 2 305 1 220 1 
33 2 2 1 35 1 305 2 220 2 163 1 122 1 168 2 148 1 251 1 
33 1 2 1 318 1 300 1 11 1 305 3 91 2 220 1 163 2 290 1 168 3 148 1 190 1 
53 2 33 1 2 1 300 1 305 2 91 1 220 1 163 1 141 1 47 1 168 2 148 1 51 1 150 1 129 1 
33 2 2 1 300 1 11 1 305 4 91 2 220 2 163 2 290 1 249 1 168 4 148 1 130 1 
33 1 163 1 2 1 300 1 168 1 148 1 305 1 220 1 
33 1 3 1 4 1 300 2 11 1 284 1 91 2 305 4 220 1 163 3 290 1 328 1 168 4 148 2 
33 1 2 1 5 1 300 1 305 2 91 1 220 1 163 1 168 2 271 1 148 1 316 1 
33 1 3 1 2 1 300 1 285 1 284 2 305 3 220 1 163 1 328 2 168 3 148 1 
163 2 326 1 135 2 128 1 
33 1 2 1 292 1 168 1 305 1 220 1 
33 1 163 1 2 1 300 1 168 2 148 1 190 1 91 1 305 2 220 1 
14 1 
33 1 163 1 2 1 300 1 168 1 148 1 305 1 220 1 
33 1 2 1 300 1 284 1 91 1 305 3 220 1 163 1 168 3 148 1 190 1 
4 1 163 1 290 1 11 1 
163 1 148 1 

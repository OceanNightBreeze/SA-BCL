#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 144 (121,296,361) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 2 55 1 132 9 267 3 226 4 319 1 251 2 6 1 233 2 365 5 270 1 95 6 271 1 199 2 26 1 43 9 44 1 276 1 151 2 327 1 118 1 101 1 75 1 329 1 306 2 79 1 123 2 49 1 
155 2 55 1 132 9 267 3 226 4 319 1 251 2 6 1 233 2 365 5 270 1 95 6 271 1 199 2 26 1 43 9 44 1 276 1 151 2 327 1 118 1 101 1 75 1 329 1 306 2 79 1 123 2 49 1 
155 2 55 1 132 10 267 4 226 5 319 1 251 2 6 1 233 2 365 6 270 1 95 7 271 1 199 2 26 1 43 10 44 1 276 1 151 2 327 1 118 1 101 1 75 1 329 1 306 2 79 1 123 2 49 1 
155 1 55 1 132 7 267 2 226 3 319 1 251 2 6 1 233 2 365 4 270 1 95 4 271 1 199 2 26 1 43 7 44 1 276 1 151 2 327 1 118 1 101 1 75 1 306 2 79 1 123 2 49 1 
155 2 43 4 44 1 276 1 151 1 132 4 267 1 118 1 101 1 75 1 226 2 329 1 306 1 251 1 123 1 233 1 365 3 95 3 
105 1 43 2 338 1 276 1 132 2 278 1 101 1 75 1 319 1 306 1 251 1 123 1 365 1 233 1 271 1 199 1 
43 3 276 1 132 3 267 1 101 1 75 1 226 1 306 2 79 1 123 2 365 2 95 1 199 1 
155 2 158 1 132 9 267 3 4 1 226 4 251 1 365 5 233 1 270 1 95 7 199 1 43 9 44 1 276 1 327 1 151 1 118 1 101 1 75 1 329 1 79 1 306 2 123 2 
155 2 158 1 132 9 267 3 4 1 226 4 251 1 365 5 233 1 270 1 95 7 199 1 43 9 44 1 276 1 327 1 151 1 118 1 101 1 75 1 329 1 79 1 306 2 123 2 
149 1 41 1 315 1 
149 1 130 1 120 2 
68 2 24 1 70 2 0 2 56 2 36 2 51 2 52 1 
266 1 337 1 0 2 311 1 56 3 159 1 160 1 36 2 224 1 60 2 108 1 62 1 65 1 42 1 22 1 172 2 173 1 200 1 201 1 68 2 237 2 147 1 24 1 70 2 150 1 275 1 181 1 80 1 263 1 330 1 213 2 51 3 127 1 287 1 52 1 103 2 243 1 
68 1 24 1 70 1 0 1 56 1 293 1 36 1 51 1 145 1 187 1 
373 1 176 1 149 1 56 1 315 1 36 1 339 1 240 1 122 1 165 1 81 1 51 1 254 1 187 1 
68 1 176 1 149 1 0 1 70 1 56 1 315 1 36 1 339 1 240 2 165 2 81 1 51 1 254 1 187 1 
165 1 140 1 117 1 378 1 240 1 
302 1 363 1 165 2 149 1 140 1 315 1 117 1 240 2 
165 1 140 1 240 1 
68 1 24 1 0 1 70 1 293 1 56 1 36 1 117 1 240 1 165 1 126 1 51 1 145 1 187 1 
149 1 
302 1 165 2 149 1 364 1 140 1 315 1 117 1 240 2 
302 1 115 1 190 1 149 1 315 1 222 1 99 1 117 2 249 1 240 5 165 5 260 2 166 2 182 2 140 2 186 1 321 1 94 1 352 1 
41 1 52 1 
68 1 0 1 70 1 56 2 36 2 37 1 51 2 324 1 52 2 
15 1 280 1 
237 1 147 1 116 1 56 1 150 1 275 1 108 1 263 1 65 1 51 1 172 1 127 1 287 1 173 1 52 1 103 1 
290 1 68 1 147 1 236 1 237 1 70 1 150 1 56 2 275 1 36 1 108 1 263 1 65 1 15 1 127 1 51 2 172 1 287 1 173 1 103 1 
85 1 290 1 68 4 236 2 70 4 0 1 56 5 36 5 37 1 136 1 122 1 210 1 51 5 52 1 
68 2 244 1 70 2 56 2 36 2 51 2 145 1 187 1 
68 3 236 1 0 1 70 3 56 3 36 3 51 3 52 1 
68 1 70 1 56 1 36 1 51 1 145 1 187 1 
68 1 70 1 0 1 56 1 36 1 51 1 324 1 37 1 187 1 
290 1 337 1 0 2 56 4 159 1 160 1 36 3 339 1 37 1 341 1 60 2 108 1 165 1 65 1 42 1 22 1 172 1 173 1 254 1 200 1 201 1 68 3 147 1 176 1 236 1 237 1 24 1 70 3 150 1 275 1 239 1 240 1 181 1 80 1 81 1 263 1 213 1 127 1 51 4 287 1 52 1 187 1 103 1 243 1 
122 1 68 1 236 1 70 1 56 2 36 2 51 2 52 1 136 1 
290 1 68 3 236 2 176 1 149 1 0 1 70 3 56 3 36 3 339 1 37 1 341 1 240 1 165 1 81 1 51 3 254 1 187 1 288 1 
68 2 236 1 98 1 0 1 70 2 56 2 36 2 37 1 15 1 51 2 
237 1 147 1 56 1 150 1 275 1 108 1 263 1 65 1 51 1 172 1 127 1 173 1 287 1 52 1 103 1 
237 1 147 1 56 1 150 1 100 1 263 1 65 1 30 1 51 1 172 1 127 1 173 1 287 1 52 1 103 1 
159 1 160 1 224 2 86 1 60 2 170 1 42 1 22 1 113 1 256 1 303 1 177 1 98 2 238 1 152 1 280 2 181 1 80 2 380 1 213 4 214 1 15 2 243 1 265 1 
68 1 244 1 70 1 56 1 36 1 51 1 254 1 187 1 
35 1 121 1 
35 1 121 1 
35 1 144 1 296 1 121 1 
35 1 144 1 296 1 121 1 
144 1 296 1 
139 1 35 1 121 1 
35 1 144 1 296 1 121 1 
35 1 361 1 121 1 
139 1 35 1 121 1 
139 1 35 1 121 1 
35 1 286 1 121 1 
35 1 286 1 121 1 
35 1 286 1 121 1 
106 1 189 1 35 1 292 1 56 2 36 2 18 1 361 1 165 1 229 1 7 1 141 1 367 1 68 2 70 2 326 1 47 1 72 1 206 1 121 1 240 1 334 1 51 2 52 1 
16 1 106 2 374 1 149 1 35 2 326 2 292 2 18 2 206 1 134 1 121 2 240 2 348 1 165 2 91 1 111 2 8 1 367 3 272 1 
251 1 151 1 233 1 
251 1 338 1 233 1 
338 1 57 1 151 2 233 3 11 1 328 1 
342 1 338 1 57 1 151 1 233 2 11 1 
338 1 151 1 57 1 233 2 11 2 
33 2 34 1 220 1 315 1 130 1 86 1 317 1 249 3 229 1 228 1 166 1 165 5 196 2 140 1 232 1 141 1 321 2 234 2 256 1 302 1 177 1 149 2 203 1 99 1 117 4 120 3 240 5 260 1 380 1 182 1 333 1 334 1 
310 1 33 6 34 1 220 3 315 1 130 3 86 3 317 2 249 8 38 1 165 9 166 2 196 6 140 6 92 1 141 4 321 6 171 1 94 1 256 3 302 1 96 5 177 3 149 5 99 1 117 7 120 9 378 5 240 9 260 2 380 3 182 2 333 2 53 1 381 1 
33 2 220 1 315 1 130 2 86 1 317 1 249 3 228 1 166 1 165 3 196 2 232 1 141 1 321 2 94 1 234 1 256 1 149 3 177 1 117 2 120 4 240 3 260 1 380 1 182 1 333 1 
33 4 220 2 315 1 130 3 86 2 317 1 249 5 38 1 166 1 165 4 228 1 196 4 92 1 232 1 141 2 321 4 94 1 234 2 256 2 149 4 177 2 117 3 120 7 240 4 260 1 380 2 182 1 333 1 53 1 
41 1 50 1 287 1 
90 1 287 1 
298 1 
263 1 287 1 173 1 
287 1 382 1 
263 1 287 1 
263 1 46 1 50 2 287 3 173 1 371 1 
273 1 177 1 157 1 152 2 224 4 77 1 138 1 167 1 80 3 214 3 322 1 110 2 213 7 125 1 112 1 9 1 256 1 
273 1 177 1 157 1 152 2 224 4 77 1 138 1 167 1 80 3 214 3 322 1 110 2 213 7 125 1 112 1 9 1 256 1 
273 1 177 1 157 1 152 2 224 4 77 1 138 1 167 1 80 3 214 3 322 1 308 1 110 2 213 7 125 1 112 1 9 1 256 1 
354 1 157 1 192 1 219 1 220 3 159 2 221 3 224 11 86 3 60 4 320 1 63 4 322 1 42 2 110 1 112 4 9 2 256 3 146 1 273 1 177 3 277 1 152 2 279 2 181 2 77 1 80 12 380 3 213 23 214 6 128 1 243 2 
159 2 224 5 194 1 60 4 167 1 138 1 42 2 110 2 322 1 112 1 9 1 368 1 256 1 273 1 177 1 152 3 279 1 181 2 77 1 80 4 213 9 214 4 125 1 243 2 
356 1 338 1 132 2 362 1 251 1 109 1 169 1 365 1 233 2 172 1 95 1 114 1 199 1 369 1 237 1 147 1 43 2 276 1 151 1 328 1 258 1 74 1 101 1 75 1 306 1 123 1 29 1 127 1 103 1 188 1 
338 1 132 3 61 1 362 1 251 1 109 1 169 1 365 1 233 2 172 1 95 2 114 1 199 1 369 1 237 1 147 1 43 3 276 1 151 1 328 1 258 1 74 1 101 1 180 1 306 1 48 1 123 1 127 1 103 1 188 1 
338 1 132 2 61 1 362 1 251 1 169 1 365 1 233 2 172 1 95 2 199 1 114 1 369 1 237 1 147 1 43 2 276 1 151 1 328 1 74 1 101 1 48 1 127 1 103 1 188 1 
58 1 132 1 169 2 65 1 172 1 344 1 114 2 199 2 147 1 237 1 43 1 305 1 74 2 180 1 306 1 184 1 123 1 263 1 284 1 336 1 127 1 287 1 103 1 
147 1 237 1 338 1 43 1 151 1 132 1 328 1 258 1 74 1 75 1 362 1 306 1 251 1 48 1 109 1 123 1 169 1 29 1 233 2 127 1 172 1 188 1 369 1 199 1 103 1 114 1 
204 1 
36 1 130 2 339 1 249 2 39 1 140 6 93 1 301 1 254 1 302 3 147 1 149 2 345 1 99 1 259 1 260 1 208 2 12 1 102 1 263 1 51 1 103 2 355 2 56 1 314 1 315 1 107 1 358 1 316 2 164 2 165 5 166 1 65 2 321 2 66 1 269 4 172 2 372 2 174 1 373 1 237 2 176 1 377 2 120 2 240 5 122 1 182 1 81 1 241 2 333 1 284 1 336 1 127 1 287 1 187 1 
56 1 36 1 339 1 164 1 165 3 39 1 364 1 140 2 93 1 66 1 269 2 254 1 302 1 373 1 176 1 345 1 240 3 122 1 81 1 102 1 51 1 187 1 
56 1 36 1 315 1 339 1 165 3 39 1 364 1 140 1 93 1 66 1 269 3 254 1 302 1 373 1 176 1 149 1 345 1 240 3 122 1 81 1 102 1 241 1 51 1 187 1 
56 1 36 1 315 1 339 1 164 1 165 3 39 1 364 1 140 2 93 1 66 1 269 3 254 1 372 1 302 1 373 1 176 1 149 1 345 1 240 3 122 1 81 1 102 1 241 1 51 1 187 1 
36 1 130 2 339 1 249 1 39 1 140 7 93 1 301 1 254 1 302 3 149 5 148 1 345 1 99 1 205 1 260 1 208 2 102 1 351 1 51 1 355 2 56 1 315 5 316 2 164 4 165 5 166 1 364 1 66 1 321 1 269 6 366 1 372 4 174 1 373 1 176 1 377 2 240 5 122 1 81 1 182 1 241 4 31 1 187 1 
36 1 130 2 339 1 249 1 39 1 140 4 93 1 301 1 254 1 302 2 149 2 345 1 99 1 260 1 208 2 102 1 51 1 355 2 56 1 107 1 315 1 316 2 164 2 165 4 166 1 66 1 321 1 269 4 174 1 372 2 373 1 176 1 377 2 120 2 240 4 122 1 81 1 182 1 241 2 187 1 
355 2 56 1 315 1 36 1 130 2 316 2 339 1 249 1 164 2 166 1 165 4 39 1 140 4 93 1 321 1 66 1 269 4 301 1 366 1 254 1 372 2 174 1 302 2 373 1 176 1 149 1 148 1 345 1 99 1 377 2 240 4 122 1 260 1 208 2 81 1 182 1 102 1 351 1 241 2 51 1 187 1 
355 2 56 1 315 1 36 1 130 2 316 2 339 1 249 1 164 2 166 1 165 4 39 1 140 4 93 1 321 1 66 1 269 4 301 1 366 1 254 1 372 2 174 1 302 2 373 1 176 1 149 1 148 1 345 1 99 1 377 2 240 4 122 1 260 1 208 2 81 1 182 1 102 1 351 1 241 2 51 1 187 1 
17 2 56 1 315 1 36 1 316 2 339 1 249 1 164 2 166 1 165 4 39 1 140 4 230 1 93 1 321 1 66 1 269 4 301 1 254 1 372 2 302 2 373 1 176 1 202 2 149 1 345 1 99 1 377 2 120 2 179 1 240 4 122 1 260 1 81 1 182 1 102 1 351 1 241 2 51 1 187 1 264 1 
355 2 56 1 315 1 36 1 130 2 316 2 339 1 249 1 164 3 166 1 165 4 39 1 140 5 93 1 321 1 66 1 269 5 301 1 366 1 254 1 174 1 372 3 302 2 373 1 176 1 149 1 148 1 345 1 99 1 377 2 240 4 122 1 260 1 208 2 182 1 81 1 102 1 351 1 241 3 31 1 51 1 187 1 
355 2 56 1 315 1 36 1 130 2 316 2 339 1 249 1 164 3 166 1 165 4 39 1 140 5 93 1 321 1 66 1 269 5 301 1 366 1 254 1 174 1 372 3 302 2 373 1 176 1 149 1 148 1 345 1 99 1 377 2 240 4 122 1 260 1 208 2 182 1 81 1 102 1 351 1 241 3 31 1 51 1 187 1 
36 1 339 1 249 1 39 1 140 4 93 1 301 1 254 1 302 2 202 2 149 1 345 1 99 1 260 1 102 1 51 1 17 2 56 1 107 1 315 1 316 2 164 2 165 4 166 1 230 1 66 1 321 1 269 4 372 2 373 1 176 1 377 2 120 2 240 4 122 1 81 1 182 1 241 2 187 1 
177 1 98 1 160 1 159 1 224 3 152 2 280 1 181 1 60 2 77 1 138 1 167 1 80 3 41 1 110 1 213 6 214 2 322 1 42 1 125 1 15 1 22 1 52 2 113 1 256 1 243 1 
354 1 337 1 312 1 129 1 220 2 159 2 160 2 221 2 161 1 224 6 86 1 19 1 250 1 60 4 63 2 42 2 112 1 343 1 22 1 256 1 177 2 98 3 152 1 280 8 181 2 80 5 380 2 214 2 213 11 15 8 52 1 187 1 243 2 
290 1 337 1 129 1 1 1 56 2 159 1 160 1 36 1 224 1 108 1 60 2 62 1 65 1 42 1 172 1 22 1 173 1 68 1 147 1 237 1 236 1 116 1 98 1 70 1 150 1 275 1 181 1 349 1 80 1 263 1 213 2 127 1 51 2 287 1 52 1 103 1 243 1 289 1 
290 1 337 1 129 1 36 1 247 2 86 2 138 1 42 3 256 3 201 2 147 2 98 7 150 2 152 4 263 2 212 2 213 20 214 6 15 7 51 3 52 2 309 2 103 1 56 3 357 1 220 2 160 3 159 3 224 10 60 6 108 2 167 1 62 1 65 1 110 1 322 1 172 1 22 3 112 2 173 2 68 1 237 1 236 1 177 3 70 1 375 2 275 2 280 7 379 1 181 3 77 1 80 10 380 2 125 1 127 2 287 2 243 3 
266 1 337 1 356 1 56 1 36 1 159 2 160 2 224 1 359 1 88 1 3 1 163 1 60 4 62 1 65 2 299 1 42 2 172 7 22 2 173 1 113 1 23 1 235 1 68 1 236 1 147 4 237 7 304 1 70 1 281 1 181 2 80 1 48 1 211 1 263 3 213 2 335 1 284 1 51 1 127 3 336 1 287 4 103 6 243 2 
0 1 129 1 56 1 220 1 159 1 160 1 36 1 224 1 86 1 37 1 60 2 42 1 22 1 256 1 68 1 177 1 98 1 70 1 152 1 280 1 181 1 380 1 80 2 13 1 214 1 213 3 15 1 51 1 243 1 
303 1 177 1 98 1 160 1 159 1 224 2 280 1 181 1 60 2 380 1 214 1 213 2 42 1 15 1 112 1 22 1 113 1 243 1 
98 1 160 1 159 1 152 1 86 1 280 1 181 1 60 2 80 2 170 1 214 1 213 2 42 1 15 1 22 1 113 1 243 1 256 1 
220 1 159 1 160 1 224 2 86 1 60 2 42 1 22 1 112 1 113 1 256 1 177 1 98 2 152 1 280 2 181 1 380 1 80 2 213 4 214 2 15 2 243 1 
303 1 177 1 98 1 160 1 159 1 224 2 359 1 280 1 181 1 60 2 380 1 214 1 213 2 42 1 15 1 112 1 22 1 243 1 
98 1 160 1 159 1 152 1 86 1 359 1 280 1 181 1 60 2 80 2 170 1 214 1 213 2 42 1 15 1 22 1 243 1 256 1 
177 1 98 2 220 1 160 1 159 1 152 1 86 1 224 2 359 1 280 2 181 1 60 2 80 2 380 1 214 1 213 4 42 1 15 2 22 1 256 1 243 1 
177 1 98 2 220 1 160 1 159 1 152 1 86 1 224 2 280 2 181 1 60 2 80 2 380 1 214 2 42 1 213 4 15 2 112 1 22 1 256 1 243 1 
337 1 56 1 160 1 159 1 224 1 108 1 60 2 62 1 65 1 42 1 172 1 22 1 173 1 201 1 147 1 237 1 150 1 275 1 181 1 80 1 263 1 213 2 127 1 51 1 287 1 52 1 103 1 243 1 
337 1 156 1 56 1 160 1 159 1 224 1 60 2 62 1 65 1 42 1 172 1 22 1 173 1 147 1 237 1 150 1 100 1 181 1 80 1 263 1 213 2 30 1 127 1 51 1 287 1 52 1 103 1 243 1 
177 1 98 2 129 1 220 1 160 1 159 1 152 1 86 1 224 2 280 2 181 1 60 2 80 2 380 1 214 2 213 4 42 1 15 2 112 1 22 1 256 1 243 1 
356 1 56 1 220 1 160 1 159 1 86 1 224 2 247 1 108 1 60 2 42 1 112 1 172 1 22 1 173 1 256 1 201 1 147 1 237 1 177 1 98 2 150 1 275 1 152 1 280 2 181 1 80 2 380 1 263 1 214 2 213 4 15 2 127 1 51 1 287 1 103 1 243 1 
104 1 0 1 129 1 56 1 220 1 159 1 160 1 36 1 86 1 224 2 37 1 60 2 42 1 112 1 22 1 256 1 68 1 177 1 70 1 98 1 280 1 181 1 80 1 380 1 214 1 213 3 15 1 51 1 243 1 
354 1 218 1 245 1 192 2 220 4 159 4 221 2 131 1 224 15 86 4 162 1 360 1 137 1 60 8 268 1 21 1 297 1 64 3 63 3 42 4 112 3 368 1 256 4 177 4 25 1 152 3 279 2 181 4 261 1 80 16 380 4 185 1 282 1 213 31 214 6 243 4 
354 2 218 1 245 1 192 2 220 7 159 3 221 4 131 2 248 1 224 24 86 6 360 1 137 1 60 6 21 1 297 2 64 4 63 4 42 3 112 4 343 2 368 1 256 6 177 7 25 1 152 4 279 2 181 3 261 1 80 22 380 7 185 1 282 1 214 8 213 46 243 3 
354 2 218 1 245 1 192 3 220 7 159 4 221 5 131 1 248 1 224 25 86 5 162 1 360 1 137 1 60 8 21 1 297 2 64 4 63 5 42 4 343 2 112 6 368 1 256 5 177 7 25 1 152 4 279 2 181 4 261 1 80 21 380 7 185 1 282 1 213 46 214 10 285 1 243 4 
354 1 218 1 245 1 192 2 220 4 159 4 221 2 131 1 248 1 224 16 86 4 162 1 360 1 137 1 60 8 21 1 297 1 64 4 63 3 42 4 112 3 368 1 256 4 177 4 25 1 152 2 279 2 181 4 261 1 80 17 380 4 185 1 282 1 213 33 214 5 243 4 
354 2 218 1 245 1 192 2 220 7 159 3 221 4 131 1 248 1 224 27 86 7 360 1 137 1 60 6 138 1 167 1 21 1 297 1 64 4 63 4 110 1 322 1 42 3 343 2 112 6 368 1 256 8 177 8 25 1 152 8 279 2 181 3 77 1 261 1 80 27 380 7 185 1 282 1 125 1 213 54 214 14 243 3 
348 1 106 1 91 1 35 1 292 1 326 1 18 1 8 1 89 1 121 1 
189 1 361 1 
54 1 106 1 35 1 307 1 292 1 326 1 18 1 253 1 121 1 
139 1 135 1 
313 1 295 1 286 1 
16 1 106 1 149 1 35 1 326 1 292 1 18 1 206 1 134 1 240 1 121 1 348 1 165 1 91 1 111 1 8 1 367 2 272 1 
16 1 106 1 149 1 35 1 326 1 292 1 18 1 206 1 134 1 240 1 121 1 348 1 165 1 91 1 111 1 8 1 367 2 272 1 
16 1 106 1 149 1 35 1 326 1 292 1 18 1 206 1 134 1 240 1 121 1 348 1 165 1 91 1 111 1 8 1 367 2 272 1 
139 1 295 1 135 1 
139 1 295 1 135 1 
313 1 286 1 
313 1 295 1 286 1 
47 1 72 1 
106 1 189 1 35 1 56 2 292 1 36 2 18 1 134 1 361 1 165 1 229 1 195 1 7 1 141 1 111 1 367 1 68 2 70 2 326 1 47 1 117 1 72 1 240 1 121 1 334 1 51 2 52 1 
266 2 337 1 129 1 56 2 160 1 36 2 159 1 224 1 59 1 3 1 60 2 62 1 252 1 42 1 172 2 22 1 147 1 237 2 274 1 207 1 181 1 80 1 14 1 263 1 213 2 335 1 127 1 51 2 287 1 103 2 243 1 
147 1 237 2 356 1 338 1 151 1 376 1 328 1 258 1 347 1 5 1 362 1 251 1 48 1 233 2 127 1 172 2 103 2 114 1 188 1 
237 1 147 1 338 1 151 1 376 1 328 1 133 1 258 1 362 1 251 1 48 1 233 2 172 1 127 1 103 1 114 1 188 1 
147 1 237 1 58 1 347 1 263 1 65 1 284 1 127 1 172 1 336 1 287 1 242 1 103 1 114 1 
147 1 237 1 338 1 151 1 376 1 328 1 258 1 347 1 5 1 362 1 251 1 48 1 233 2 172 1 127 1 103 1 114 1 188 1 
84 1 
190 1 149 1 41 1 315 1 321 1 222 1 249 1 
355 1 315 1 130 1 249 1 166 1 165 1 140 1 321 1 174 1 302 1 149 2 99 1 120 1 240 1 260 1 208 1 182 1 
190 1 33 6 130 6 339 2 86 2 249 9 340 1 90 3 40 1 140 5 196 6 10 1 256 2 302 3 147 4 149 8 99 4 260 4 262 2 263 3 50 2 216 2 103 3 356 1 314 1 220 2 315 2 222 1 223 2 166 4 165 5 65 1 321 8 67 2 172 3 173 3 371 1 237 3 177 2 375 2 71 1 73 2 120 12 240 5 78 2 380 2 182 4 183 2 331 2 333 2 127 3 83 1 287 10 382 2 
354 1 33 8 218 1 245 1 192 1 314 1 220 4 315 2 221 2 130 5 223 1 86 4 360 1 249 13 137 1 165 1 166 2 140 1 196 8 63 2 321 8 143 1 343 1 256 4 302 1 149 7 177 4 99 2 120 10 240 1 260 2 261 1 380 4 182 2 333 1 283 1 216 3 
0 1 56 1 293 1 36 1 223 1 249 2 166 1 165 1 138 1 322 1 321 2 366 1 145 1 256 1 68 1 177 2 24 1 70 1 99 1 240 1 77 1 260 1 182 1 126 1 51 1 215 1 216 2 187 1 
190 1 149 1 315 1 222 1 99 1 249 1 260 1 166 1 182 1 321 1 
33 5 177 2 149 5 375 1 220 2 130 5 223 1 86 2 249 5 120 10 380 2 196 5 321 5 216 2 256 2 
302 1 165 1 149 1 140 1 315 1 240 1 
314 2 249 2 340 1 166 2 165 3 140 4 231 1 65 2 321 2 94 1 172 4 302 2 147 1 237 4 71 2 99 1 259 1 240 3 260 2 12 1 182 2 263 1 332 1 333 2 284 1 127 1 336 1 287 1 103 4 
337 1 0 2 56 3 159 1 36 2 160 1 60 2 108 1 65 1 42 1 172 1 22 1 173 1 200 1 201 1 68 2 237 1 147 1 24 1 70 2 150 1 275 1 181 1 80 1 263 1 213 1 51 3 127 1 287 1 52 1 103 1 243 1 
33 2 149 4 314 1 315 2 130 2 99 1 249 1 120 4 260 1 166 1 182 1 196 2 110 1 321 2 333 1 
292 1 18 1 318 1 
292 1 47 1 18 1 8 1 325 1 
292 1 18 1 318 1 
292 1 18 1 318 1 
292 1 18 1 246 1 
292 1 18 1 246 1 
292 1 18 1 246 1 
292 1 18 1 
35 1 121 1 
177 1 159 2 224 4 152 2 279 1 181 2 60 4 77 1 138 1 167 1 80 4 110 1 213 8 214 3 42 2 125 1 322 1 112 1 256 1 243 2 
177 1 152 2 224 3 77 1 167 1 138 1 80 3 41 1 110 1 125 1 322 1 214 2 213 6 256 1 
177 1 220 1 159 1 152 1 86 1 224 2 181 1 60 2 80 2 380 1 214 2 42 1 213 4 198 1 112 1 256 1 243 1 
354 1 177 2 192 1 220 2 221 2 152 1 224 6 86 2 80 6 380 2 63 2 214 2 213 12 112 1 343 1 256 2 
354 1 220 2 221 2 159 2 161 1 224 11 86 2 60 4 138 1 167 1 320 1 63 2 110 1 322 2 42 2 112 4 343 1 256 3 177 3 152 5 279 2 181 2 77 2 380 2 80 12 125 1 214 9 213 23 243 2 
80 1 63 1 213 1 
221 1 213 1 224 1 
177 1 375 1 220 1 159 1 224 3 86 1 152 2 60 2 181 1 80 3 380 1 42 1 213 6 214 3 198 1 112 1 243 1 256 1 
354 1 218 1 245 1 192 1 220 4 221 2 159 1 224 11 86 4 360 1 137 1 60 2 63 2 42 1 343 1 112 2 368 1 256 4 177 4 152 2 181 1 261 1 80 11 380 4 213 22 214 4 243 1 
177 1 224 3 152 1 77 1 138 1 80 3 213 6 322 1 214 2 112 1 256 1 
159 1 224 1 152 1 279 1 181 1 60 2 77 1 167 1 80 2 320 1 214 2 322 1 213 3 42 1 125 1 112 1 243 1 
177 2 159 1 152 3 224 5 60 2 181 1 77 2 138 1 80 5 42 1 322 2 214 5 213 10 215 1 112 2 368 1 243 1 256 2 
177 1 159 1 224 2 181 1 60 2 380 1 42 1 213 2 214 1 112 1 368 1 243 1 
177 1 220 1 159 1 152 1 86 1 224 2 181 1 60 2 80 2 380 1 214 2 42 1 213 4 112 1 368 1 256 1 243 1 
159 3 152 1 224 1 279 1 162 1 181 3 60 6 77 1 80 2 320 1 213 3 42 3 322 1 214 2 112 1 368 1 243 3 
192 1 159 4 221 1 224 7 162 1 60 8 138 1 167 1 320 1 63 1 42 4 322 2 112 3 198 1 368 1 256 2 146 1 177 2 152 3 279 1 181 4 77 2 80 8 214 6 213 15 125 1 215 1 243 4 
218 1 245 1 192 1 220 2 221 1 159 2 224 14 86 1 360 1 137 1 60 4 138 2 167 1 63 1 110 1 322 2 42 2 112 4 368 1 256 4 177 5 152 5 279 1 181 2 77 2 80 10 261 1 380 2 125 1 213 24 214 9 215 1 243 2 
354 1 192 1 220 1 159 2 221 1 224 6 137 1 60 4 138 1 167 1 63 2 110 1 322 1 42 2 198 1 112 1 368 1 256 1 177 2 152 2 181 2 77 1 80 5 380 1 125 1 213 11 214 3 243 2 
354 1 218 1 245 1 192 1 220 4 221 2 159 3 224 14 86 4 360 1 137 1 60 6 138 1 167 1 63 2 110 1 322 1 42 3 198 1 343 1 112 2 368 1 256 5 177 5 152 4 279 1 181 3 77 1 261 1 80 15 380 4 125 1 213 29 214 6 243 3 
354 1 218 1 245 1 192 1 220 4 221 2 159 3 224 15 86 3 360 1 137 1 60 6 138 1 167 1 63 2 110 1 322 1 42 3 198 1 343 1 112 3 368 1 256 4 177 5 152 4 279 1 181 3 77 1 261 1 80 12 380 4 125 1 213 27 214 7 243 3 
218 1 245 1 192 1 220 2 221 1 159 2 224 14 86 1 360 1 137 1 60 4 138 2 167 1 63 1 110 1 322 2 42 2 112 4 368 1 256 4 177 5 152 5 279 1 181 2 77 2 80 10 261 1 380 2 125 1 213 24 214 9 215 1 243 2 
354 1 218 1 245 1 192 1 220 4 221 2 159 1 224 11 86 4 360 1 137 1 60 2 63 2 42 1 343 1 112 2 368 1 256 4 177 4 152 2 181 1 261 1 80 11 380 4 213 22 214 4 243 1 
354 1 218 1 245 1 192 1 220 4 159 4 221 2 224 15 86 3 360 1 137 1 60 8 138 1 167 1 63 2 110 1 322 1 42 4 198 1 343 1 112 3 368 1 256 4 177 5 152 4 279 2 181 4 77 1 261 1 80 13 380 4 125 1 213 28 214 7 243 4 
354 1 192 1 220 1 159 2 221 1 224 3 86 1 162 1 137 1 60 4 63 2 42 2 368 1 256 1 177 1 152 1 181 2 80 4 380 1 213 7 214 1 243 2 
177 1 152 3 224 3 77 3 167 2 138 1 80 4 213 7 125 1 322 3 214 6 112 3 256 1 
354 1 192 1 220 1 159 2 221 1 224 3 86 1 162 1 137 1 60 4 63 2 42 2 368 1 256 1 177 1 152 1 181 2 80 4 380 1 213 7 214 1 243 2 
122 1 69 1 56 1 36 1 51 1 52 1 136 1 
69 1 56 1 294 1 36 1 119 1 136 1 76 1 122 1 300 1 51 1 52 1 255 1 
147 1 237 1 41 1 263 1 65 1 284 1 127 1 336 1 172 1 287 1 103 1 
68 1 147 1 236 1 237 1 70 1 150 1 56 2 36 1 275 1 263 1 65 1 51 2 172 1 127 1 287 1 173 1 52 1 103 1 
68 1 147 1 236 1 237 1 70 2 150 1 56 2 36 2 71 1 275 1 73 1 81 1 263 2 51 2 172 1 127 1 254 1 287 3 173 2 52 1 187 1 103 1 382 1 
56 2 36 2 172 2 173 2 254 1 370 1 68 1 237 2 236 1 147 1 70 2 150 1 71 1 100 1 73 1 81 1 263 2 127 1 51 2 287 3 52 1 103 2 187 1 382 1 
315 1 339 1 90 1 165 2 140 1 65 1 172 3 173 1 370 1 237 3 147 1 149 1 71 1 346 1 73 1 240 2 263 1 50 1 82 1 127 1 287 4 103 3 382 1 
147 1 237 3 149 1 315 1 71 1 339 1 73 1 240 2 165 2 90 1 140 1 262 1 263 1 65 1 50 1 172 3 127 1 173 1 287 4 370 1 103 3 382 1 
147 1 237 1 304 1 127 1 172 1 103 1 
235 1 237 6 147 3 304 1 356 1 27 1 88 1 163 1 281 1 48 1 263 2 211 1 65 2 335 1 172 6 127 2 173 1 287 3 103 5 371 1 
129 1 36 1 247 1 138 1 42 2 256 1 201 1 147 1 98 1 150 1 152 2 263 1 212 1 214 2 213 6 15 1 51 2 52 2 103 1 356 1 56 2 160 2 159 2 224 3 108 1 60 4 167 1 322 1 110 1 172 1 22 2 173 1 68 1 237 1 236 1 177 1 70 1 274 1 275 1 280 1 181 2 77 1 80 3 125 1 127 1 287 1 243 2 
190 1 315 1 222 1 339 1 249 1 340 1 166 2 165 3 90 1 140 2 65 1 321 1 172 1 67 1 302 1 237 1 149 1 99 2 117 1 240 3 260 2 182 2 183 1 262 1 331 1 50 1 287 2 103 1 
237 2 147 2 304 1 356 1 263 1 50 1 172 2 83 1 127 1 173 1 287 2 103 2 371 1 
217 1 147 1 237 4 356 1 263 1 65 1 284 1 172 4 336 1 127 1 287 1 370 1 103 4 
237 2 147 2 71 1 88 1 350 1 263 1 211 1 299 1 172 2 127 1 173 1 287 1 103 2 23 1 
362 1 147 1 237 1 251 1 338 1 65 1 233 1 127 1 172 1 103 1 
237 2 147 1 356 1 48 1 14 1 263 1 335 1 172 2 127 1 287 1 103 2 
217 1 235 1 237 5 147 2 356 1 71 1 163 1 263 2 65 1 284 1 335 1 336 1 172 5 127 2 287 3 103 4 
217 1 237 5 147 2 356 1 71 1 193 1 163 1 263 2 65 1 284 1 335 1 336 1 172 5 127 2 287 3 103 4 
68 1 147 1 236 1 237 1 70 1 150 1 56 2 36 1 100 1 263 1 65 1 51 2 172 1 127 1 287 1 173 1 52 1 103 1 
147 2 237 1 211 1 263 1 71 1 127 1 27 1 172 1 287 1 173 1 88 1 371 1 103 1 
227 1 28 1 124 1 2 1 52 1 
176 1 149 1 2 2 315 1 339 1 117 1 257 1 87 1 341 1 240 2 28 1 227 2 165 2 81 1 124 2 254 1 52 1 187 1 32 1 
28 1 227 1 56 1 252 1 2 1 36 1 51 1 59 1 207 1 
28 1 257 1 87 1 
41 1 276 1 365 1 101 1 
306 1 43 1 123 1 276 1 365 1 132 1 101 1 
132 1 74 1 199 1 
175 1 319 2 306 1 153 1 43 3 123 1 45 1 276 1 365 1 132 3 101 1 75 1 
155 1 306 1 43 2 123 1 276 1 365 1 132 2 95 1 101 1 
43 1 44 1 151 1 132 1 75 1 226 1 306 1 251 1 123 1 365 1 233 1 
306 1 43 1 123 1 276 1 365 1 132 1 75 1 
306 1 43 1 123 1 276 2 132 1 101 1 75 1 
178 1 43 2 276 1 132 2 75 1 306 2 123 2 365 1 197 1 323 1 
43 3 276 1 327 1 132 3 267 1 101 1 75 1 226 1 306 1 123 1 365 2 270 1 95 2 
338 1 43 2 276 1 151 1 132 2 328 1 20 1 101 1 75 1 306 1 251 1 123 1 365 1 233 2 95 1 
329 1 155 1 306 2 43 4 123 2 276 1 365 2 132 4 267 1 95 2 101 1 226 1 75 1 
306 1 43 1 123 1 276 1 365 1 132 1 101 1 75 1 
43 4 45 1 276 2 132 4 267 1 101 2 226 1 319 1 306 1 153 1 209 1 123 1 365 3 95 2 
158 1 43 2 276 1 132 2 101 1 75 1 225 1 306 1 123 1 365 1 142 1 95 1 
43 3 45 2 276 1 132 3 101 1 75 1 319 2 306 1 153 1 168 1 123 1 365 1 
191 1 291 1 97 2 365 2 
306 1 43 1 123 1 132 1 154 1 75 1 
306 1 43 2 123 1 276 1 365 1 132 2 270 1 95 1 101 1 75 1 
353 1 
306 1 43 1 123 1 276 1 365 1 132 1 101 1 75 1 
319 1 306 1 43 3 123 1 276 1 365 1 132 3 270 1 95 1 101 1 75 1 
209 1 365 1 267 1 226 1 
276 1 365 1 

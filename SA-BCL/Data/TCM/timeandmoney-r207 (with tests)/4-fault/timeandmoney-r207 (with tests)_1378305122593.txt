#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 76 23 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 76 207 232 186 (6,81) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 76 90 225 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 76 90 225 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 76 90 225 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 76 90 225 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 76 90 225 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 76 247 150 162 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 76 23 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 76 207 232 1 32 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 76 23 178 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 76 207 232 186 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 76 207 232 186 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 76 23 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 76 23 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 76 113 356 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 76 113 356 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 76 113 356 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 76 113 356 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 76 113 356 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 76 23 178 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 166 217 19 (269,295) (269,295) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 76 247 91 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 76 247 150 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 76 247 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 76 207 232 1 32 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 76 207 161 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 166 217 19 (269,295) (269,295) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 76 207 161 262 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 76 207 232 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 76 207 232 1 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 166 217 19 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 76 247 91 194 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 166 217 19 (269,295) (269,295) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 76 247 91 181 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 1 123 1 124 2 350 2 164 1 165 1 278 4 307 1 145 1 279 1 309 2 258 2 7 1 335 1 203 1 289 2 290 9 29 1 31 3 206 9 49 1 359 1 263 6 114 5 344 2 116 1 272 2 365 1 
38 1 123 1 124 2 350 2 164 1 165 1 278 4 307 1 145 1 279 1 309 2 258 2 7 1 335 1 203 1 289 2 290 9 29 1 31 3 206 9 49 1 359 1 263 6 114 5 344 2 116 1 272 2 365 1 
38 1 123 1 124 2 350 2 164 1 165 1 278 5 307 1 145 1 279 1 309 2 258 2 7 1 335 1 203 1 289 2 290 10 29 1 31 4 206 10 49 1 359 1 263 7 114 6 344 2 116 1 272 2 365 1 
38 1 123 1 124 1 350 2 164 1 278 3 307 1 145 1 279 1 309 2 258 2 7 1 335 1 203 1 289 2 290 7 29 1 31 2 206 7 49 1 359 1 263 4 114 4 344 2 116 1 272 2 365 1 
124 2 350 1 289 1 290 4 164 1 165 1 29 1 278 2 31 1 279 1 206 4 359 1 263 3 309 1 114 3 344 1 272 1 365 1 
350 1 290 2 279 1 206 2 233 1 359 1 309 1 182 1 114 1 344 1 116 1 22 1 272 1 365 1 258 1 335 1 
350 2 290 3 278 1 31 1 279 1 206 3 49 1 359 1 263 1 309 2 114 2 365 1 258 1 
38 1 124 2 350 2 164 1 278 4 165 1 279 1 309 2 258 1 203 1 289 1 290 9 29 1 31 3 49 1 206 9 359 1 235 1 263 7 114 5 344 1 138 1 272 1 365 1 
38 1 124 2 350 2 164 1 278 4 165 1 279 1 309 2 258 1 203 1 289 1 290 9 29 1 31 3 49 1 206 9 359 1 235 1 263 7 114 5 344 1 138 1 272 1 365 1 
129 1 260 1 215 1 
260 1 64 1 355 2 
92 2 179 2 18 2 358 2 306 1 221 2 234 2 362 1 
16 1 141 1 18 2 99 1 2 2 144 1 76 1 127 1 146 1 306 1 221 2 196 2 280 1 80 1 23 1 45 1 171 1 133 1 334 1 177 2 26 1 179 3 27 1 65 1 338 1 88 1 89 1 358 2 10 1 234 3 362 1 92 2 297 1 267 1 268 1 214 1 121 1 
92 1 179 1 18 1 327 1 75 1 358 1 306 1 221 1 234 1 104 1 
277 1 18 1 326 1 327 2 75 1 100 1 40 1 306 1 221 1 104 1 129 1 315 1 230 1 179 2 358 2 152 1 260 1 234 2 50 1 92 1 120 1 
179 1 18 1 277 1 327 1 100 2 358 1 40 1 152 1 260 1 221 1 234 1 50 2 129 1 92 1 315 1 
349 1 100 1 287 1 51 1 50 1 
129 1 349 1 305 1 100 2 260 1 287 1 274 1 50 2 
100 1 287 1 50 1 
349 1 179 1 18 1 327 1 75 1 100 1 358 1 306 1 221 1 234 1 104 1 50 1 92 1 230 1 
260 1 
129 1 349 1 305 1 100 2 260 1 287 1 261 1 50 2 
349 2 125 1 66 1 305 1 319 2 100 5 260 1 330 1 197 2 67 1 50 5 129 1 156 2 184 1 256 1 245 1 287 2 163 1 108 1 
215 1 362 1 
179 2 18 1 358 2 221 1 234 2 362 2 282 1 321 1 92 1 
204 1 6 1 15 1 
26 1 179 1 65 1 2 1 88 1 144 1 41 1 196 1 234 1 280 1 362 1 297 1 267 1 268 1 214 1 177 1 
92 1 179 3 18 3 219 1 358 3 221 3 234 3 362 1 
179 1 18 1 327 1 358 1 221 1 234 1 104 1 
282 1 321 1 92 1 179 1 18 1 327 1 358 1 221 1 234 1 
304 1 16 1 191 1 18 3 277 1 99 1 327 1 2 1 100 1 144 1 40 1 219 1 127 1 146 1 252 1 306 1 221 3 196 1 280 1 80 1 282 1 45 1 171 1 334 1 315 1 177 1 26 1 179 4 65 1 338 1 88 1 89 1 358 3 152 1 10 1 234 4 362 1 50 1 92 2 297 1 267 1 268 1 214 1 121 1 
179 2 18 1 326 1 327 1 219 1 358 2 221 1 234 2 169 1 362 1 61 1 
304 1 179 3 277 1 18 3 327 1 100 1 219 2 358 3 40 1 252 1 152 1 260 1 221 3 234 3 50 1 282 1 92 1 159 1 315 1 
179 2 18 2 219 1 358 2 221 2 234 2 282 1 92 1 6 1 15 1 
26 1 179 1 65 1 2 1 88 1 144 1 196 1 234 1 280 1 362 1 297 1 267 1 268 1 214 1 177 1 
26 1 57 1 179 1 151 1 2 1 88 1 144 1 196 1 234 1 362 1 297 1 267 1 268 1 214 1 177 1 
232 1 204 1 99 2 352 1 89 1 76 1 146 1 10 1 207 1 80 1 227 1 81 1 6 1 45 1 171 1 270 1 15 1 334 2 200 1 186 1 121 1 302 1 
179 1 18 1 250 1 327 1 358 1 152 1 221 1 234 1 
26 1 179 2 65 1 18 1 2 1 88 1 144 1 219 1 358 1 252 1 221 1 196 1 234 2 280 1 297 1 267 1 268 1 214 1 15 1 177 1 
179 5 18 4 326 1 327 1 219 2 358 5 252 1 221 4 234 5 169 1 362 1 282 1 92 1 137 1 83 1 61 1 
179 2 250 1 18 2 327 1 358 2 221 2 234 2 104 1 
226 1 254 1 
226 1 254 1 
82 1 3 1 
82 1 3 1 
82 1 3 1 
226 1 254 1 228 1 
226 1 254 1 201 1 
94 1 226 2 254 2 82 1 3 1 33 1 
226 1 254 1 228 1 
226 1 254 1 228 1 
226 1 254 1 180 1 
226 1 254 1 180 1 
226 1 254 1 180 1 
348 1 316 1 17 1 143 2 39 2 60 2 100 2 260 1 353 3 42 1 33 1 360 1 50 2 226 2 342 2 254 2 53 1 285 1 314 2 
348 1 216 1 188 1 71 1 18 2 143 1 60 1 100 1 221 2 353 1 222 1 226 1 254 1 284 1 314 1 201 1 179 2 358 2 234 2 362 1 50 1 342 1 35 1 244 1 
289 1 344 1 272 1 
344 1 272 1 233 1 
289 2 276 1 298 1 272 3 233 1 134 1 
289 1 298 1 272 2 233 1 8 1 134 1 
289 1 298 1 272 2 233 1 134 2 
216 1 188 1 349 4 305 1 1 1 352 1 100 5 102 1 77 2 197 1 330 1 129 1 132 1 284 1 287 1 354 1 64 1 355 3 108 2 232 1 319 1 259 1 260 2 207 1 50 5 156 1 184 3 345 2 212 2 118 1 270 1 347 1 
188 4 349 7 305 1 1 3 352 3 100 9 195 1 102 1 328 5 330 1 197 2 129 1 132 2 287 6 64 3 355 9 108 6 337 1 232 3 319 2 260 5 293 1 340 1 207 3 51 5 50 9 156 2 184 8 345 6 240 1 212 6 185 1 270 3 245 1 347 2 
188 1 349 2 1 1 352 1 100 3 77 1 197 1 129 1 132 1 64 2 108 2 355 4 232 1 259 1 319 1 260 3 207 1 50 3 156 1 184 3 345 2 212 2 118 1 270 1 245 1 347 1 
188 2 349 3 1 2 352 2 100 4 195 1 77 2 197 1 129 1 132 1 64 3 355 7 108 4 232 2 319 1 259 1 260 4 293 1 207 2 50 4 156 1 184 5 345 4 240 1 212 4 118 1 270 2 245 1 347 1 
59 1 267 1 215 1 
325 1 267 1 
312 1 
267 1 268 1 
59 2 72 1 267 3 268 1 257 1 144 1 
267 1 268 1 144 1 
267 1 243 1 
76 1 90 1 225 1 25 1 
76 1 90 1 225 1 25 1 
126 1 76 1 90 1 225 1 25 1 
76 1 90 1 225 1 25 1 
76 1 90 1 225 1 25 1 
350 1 276 1 2 1 279 1 196 1 198 1 309 1 313 1 5 1 106 1 258 1 177 1 26 1 289 1 290 2 292 1 47 1 320 1 206 2 233 1 359 1 361 1 263 1 34 1 114 1 344 1 297 1 213 1 272 2 365 1 
276 1 350 1 2 1 279 1 196 1 309 1 313 1 5 1 106 1 258 1 177 1 26 1 289 1 290 3 292 1 135 1 111 1 47 1 320 1 206 3 233 1 359 1 361 1 263 2 34 1 114 1 344 1 297 1 241 1 272 2 
276 1 2 1 279 1 196 1 313 1 5 1 106 1 258 1 177 1 26 1 289 1 290 2 292 1 135 1 320 1 206 2 233 1 359 1 361 1 263 2 114 1 297 1 344 1 241 1 272 2 
350 1 351 1 2 1 101 1 196 1 281 1 309 1 5 2 106 2 258 2 177 1 107 1 26 1 202 1 290 1 88 1 292 2 111 1 206 1 297 1 267 1 268 1 346 1 
350 1 276 1 2 1 196 1 309 1 313 1 5 1 106 1 258 1 177 1 26 1 289 1 290 1 292 1 135 1 47 1 320 1 206 1 233 1 361 1 34 1 344 1 297 1 213 1 272 2 365 1 
264 1 
324 2 73 1 277 1 74 2 326 1 2 2 327 1 40 1 330 1 168 1 129 1 130 1 132 1 287 6 177 2 87 2 288 4 179 1 88 2 234 1 50 5 341 1 184 2 297 1 346 1 246 1 55 2 187 1 248 1 97 1 249 1 351 1 305 3 100 5 196 2 197 1 147 2 315 1 355 2 64 2 108 2 26 1 319 1 358 1 152 1 260 2 154 1 156 1 115 1 266 2 267 1 268 1 120 1 37 2 323 1 
324 1 248 1 73 1 277 1 326 1 305 1 327 1 100 3 40 1 130 1 315 1 287 2 288 2 179 1 358 1 152 1 234 1 261 1 50 3 115 1 120 1 323 1 
248 1 288 3 179 1 277 1 73 1 326 1 327 1 100 2 358 1 40 1 152 1 234 1 50 2 130 1 115 1 315 1 120 1 37 1 323 1 
324 1 248 1 73 1 277 1 305 1 326 1 327 1 100 3 40 1 130 1 147 1 315 1 287 2 288 3 179 1 358 1 152 1 234 1 261 1 50 3 115 1 120 1 323 1 37 1 
324 4 277 1 73 1 326 1 74 2 75 1 327 2 40 1 221 1 167 1 330 1 129 2 130 1 287 7 230 1 87 2 288 5 179 2 234 2 50 5 92 1 184 1 246 1 55 2 248 1 18 1 192 1 305 3 100 5 306 1 197 1 104 1 20 1 147 4 315 1 63 1 108 1 64 2 319 1 358 2 152 1 260 2 261 1 154 1 156 1 115 1 266 2 364 1 120 1 323 1 37 3 
324 2 277 1 73 1 326 1 74 2 327 1 40 1 330 1 130 1 129 1 287 4 87 2 288 4 179 1 234 1 50 4 184 1 246 1 55 2 187 1 248 1 305 2 100 4 197 1 147 2 315 1 108 1 64 2 355 2 319 1 358 1 152 1 260 2 154 1 156 1 115 1 266 2 120 1 323 1 37 2 
324 2 248 1 73 1 277 1 192 1 305 2 74 2 326 1 327 1 100 4 40 1 197 1 330 1 129 1 130 1 20 1 147 2 287 4 315 1 64 2 108 1 87 2 288 4 179 1 319 1 358 1 152 1 260 1 234 1 154 1 50 4 156 1 184 1 115 1 266 2 364 1 246 1 120 1 55 2 37 2 323 1 
324 2 248 1 73 1 277 1 192 1 305 2 74 2 326 1 327 1 100 4 40 1 197 1 330 1 129 1 130 1 20 1 147 2 287 4 315 1 64 2 108 1 87 2 288 4 179 1 319 1 358 1 152 1 260 1 234 1 154 1 50 4 156 1 184 1 115 1 266 2 364 1 246 1 120 1 55 2 37 2 323 1 
324 2 248 1 73 1 277 1 305 2 74 2 326 1 327 1 100 4 40 1 197 1 330 1 129 1 311 1 130 1 20 1 147 2 44 1 287 4 174 2 315 1 355 2 108 1 288 4 179 1 319 1 358 1 152 1 260 1 339 2 234 1 154 1 50 4 156 1 184 1 115 1 299 1 120 1 55 2 37 2 323 1 
324 3 248 1 73 1 277 1 192 1 305 2 74 2 326 1 327 1 100 4 40 1 197 1 330 1 129 1 130 1 20 1 147 3 315 1 287 5 63 1 64 2 108 1 87 2 288 5 179 1 319 1 358 1 152 1 260 1 234 1 154 1 50 4 156 1 184 1 115 1 266 2 364 1 246 1 120 1 55 2 323 1 37 3 
324 3 248 1 73 1 277 1 192 1 305 2 74 2 326 1 327 1 100 4 40 1 197 1 330 1 129 1 130 1 20 1 147 3 315 1 287 5 63 1 64 2 108 1 87 2 288 5 179 1 319 1 358 1 152 1 260 1 234 1 154 1 50 4 156 1 184 1 115 1 266 2 364 1 246 1 120 1 55 2 323 1 37 3 
324 2 277 1 73 1 326 1 74 2 327 1 40 1 330 1 130 1 129 1 174 2 287 4 288 4 179 1 234 1 339 2 50 4 184 1 55 2 187 1 248 1 305 2 100 4 197 1 311 1 147 2 315 1 108 1 355 2 319 1 358 1 152 1 260 1 154 1 156 1 115 1 120 1 323 1 37 2 
217 1 89 1 146 1 10 1 80 1 295 1 332 1 19 1 12 1 45 1 269 1 171 1 215 1 200 1 121 1 
204 1 99 1 89 1 76 1 146 1 10 1 236 1 80 1 45 1 171 1 139 1 15 1 162 1 334 1 247 1 121 1 150 1 
179 1 18 1 99 1 219 1 358 1 89 1 76 1 127 1 252 1 146 1 221 1 223 1 10 1 234 1 236 1 80 1 255 1 23 1 45 1 171 1 334 1 121 1 
18 1 1 1 99 2 2 1 144 1 219 1 76 1 146 2 252 1 127 1 221 1 196 1 280 1 310 1 80 2 6 1 45 2 171 2 333 1 334 2 177 1 26 1 232 1 179 2 65 1 338 1 204 1 88 1 89 2 358 1 30 1 32 1 10 2 234 2 207 1 236 1 297 1 239 1 267 1 268 1 214 1 15 1 121 2 
178 1 2 1 88 1 89 1 76 1 146 1 196 1 10 1 80 1 23 1 45 1 171 1 271 1 177 1 121 1 
232 1 179 1 18 1 1 1 358 1 89 1 76 1 146 1 221 1 10 1 234 1 207 1 236 1 80 1 282 1 92 1 45 1 171 1 176 1 121 1 
80 1 232 1 45 1 89 1 76 1 146 1 171 1 10 1 200 1 186 1 207 1 121 1 
204 1 99 2 352 1 89 1 146 1 10 1 80 1 332 1 227 1 12 1 6 1 45 1 171 1 270 1 15 1 334 2 200 1 121 1 
80 1 232 1 1 1 45 1 89 1 76 1 146 1 171 1 10 1 200 1 207 1 121 1 
80 1 232 1 45 1 89 1 76 1 146 1 171 1 271 1 10 1 186 1 207 1 121 1 
204 1 99 2 352 1 89 1 146 1 10 1 80 1 332 1 227 1 12 1 6 1 45 1 171 1 270 1 15 1 271 1 334 2 121 1 
80 1 232 1 1 1 45 1 89 1 76 1 146 1 171 1 271 1 10 1 207 1 121 1 
80 1 232 1 1 1 45 1 89 1 76 1 146 1 171 1 10 1 207 1 121 1 
99 1 2 1 144 1 76 1 146 1 127 1 196 1 280 1 80 1 23 1 45 1 171 1 334 1 177 1 26 1 179 1 65 1 338 1 88 1 89 1 10 1 234 1 362 1 297 1 267 1 268 1 214 1 121 1 
57 1 99 1 2 1 144 1 76 1 146 1 127 1 196 1 79 1 80 1 23 1 45 1 171 1 334 1 177 1 26 1 179 1 151 1 88 1 89 1 10 1 234 1 362 1 297 1 267 1 268 1 214 1 121 1 
80 1 232 1 1 1 45 1 89 1 76 1 146 1 171 1 10 1 207 1 121 1 236 1 
2 1 1 1 144 1 76 1 146 1 196 1 280 1 198 1 80 1 45 1 171 1 333 1 177 1 26 1 232 1 179 1 65 1 338 1 89 1 10 1 234 1 207 1 297 1 267 1 268 1 214 1 121 1 
232 1 179 1 18 1 1 1 358 1 89 1 76 1 205 1 146 1 221 1 10 1 234 1 207 1 236 1 80 1 282 1 92 1 45 1 171 1 121 1 
80 1 131 1 113 1 356 1 99 1 45 1 89 1 105 1 76 1 334 1 10 1 229 1 43 1 121 1 
80 1 131 1 113 1 356 1 99 1 45 1 89 1 105 1 76 1 334 1 10 1 229 1 43 1 121 1 
80 1 131 1 113 1 356 1 99 1 45 1 89 1 105 1 76 1 334 1 10 1 229 1 43 1 121 1 
80 1 131 1 113 1 356 1 99 1 45 1 89 1 105 1 76 1 334 1 10 1 229 1 43 1 121 1 
80 1 131 1 113 1 356 1 99 1 45 1 89 1 105 1 76 1 334 1 10 1 229 1 43 1 121 1 
226 1 342 1 254 1 285 1 143 1 60 1 314 1 14 1 42 1 33 1 
244 1 201 1 
237 1 226 1 342 1 254 1 251 1 143 1 60 1 314 1 122 1 
348 1 17 1 143 1 39 1 60 1 100 1 260 1 353 2 42 1 33 1 360 1 50 1 226 1 342 1 254 1 53 1 285 1 314 1 
348 1 17 1 143 1 39 1 60 1 100 1 260 1 353 2 42 1 33 1 360 1 50 1 226 1 342 1 254 1 53 1 285 1 314 1 
348 1 17 1 143 1 39 1 60 1 100 1 260 1 353 2 42 1 33 1 360 1 50 1 226 1 342 1 254 1 53 1 285 1 314 1 
94 1 93 1 228 1 
94 1 93 1 228 1 
211 1 180 1 
94 1 211 1 180 1 
71 1 35 1 
216 1 188 1 349 1 71 1 18 2 39 1 143 1 60 1 100 1 221 2 353 1 222 1 226 1 254 1 284 1 314 1 201 1 179 2 358 2 234 2 362 1 50 1 342 1 53 1 35 1 244 1 301 1 
93 1 228 1 
94 1 211 1 180 1 
178 1 179 2 110 1 89 1 358 2 76 1 146 1 253 1 10 1 234 2 236 1 80 1 23 1 45 1 286 1 171 1 121 1 56 1 
26 1 190 1 289 1 276 1 2 2 135 1 320 1 196 2 233 1 361 1 198 1 155 1 34 1 344 1 297 1 272 2 199 1 106 1 177 2 
26 1 289 1 276 1 2 1 135 1 320 1 196 1 233 1 361 1 155 1 34 1 344 1 297 1 272 2 106 1 177 1 303 1 
26 1 202 1 317 1 351 1 2 1 88 1 196 1 297 1 267 1 268 1 346 1 199 1 106 1 177 1 
26 1 190 1 289 1 276 1 2 1 135 1 320 1 196 1 233 1 361 1 155 1 34 1 344 1 297 1 272 2 199 1 106 1 177 1 
128 1 
129 1 184 1 125 1 66 1 260 1 215 1 108 1 
305 1 100 1 197 1 330 1 129 1 287 1 64 1 108 1 355 1 87 1 319 1 260 2 50 1 156 1 184 1 266 1 246 1 
325 3 125 1 277 2 2 3 1 2 330 4 129 2 132 2 170 2 172 2 287 5 177 3 232 2 9 2 88 1 50 5 341 1 296 1 343 1 184 9 297 3 345 6 13 1 54 2 243 2 142 2 59 2 305 3 100 5 352 2 144 3 196 3 103 1 197 4 198 1 257 1 62 2 149 1 355 12 64 6 108 8 26 4 66 1 319 4 260 8 32 2 153 2 207 2 209 2 156 4 267 10 268 3 212 6 270 2 
218 1 1 2 352 2 197 1 330 1 24 1 173 1 355 2 64 1 108 4 232 2 319 1 260 1 91 1 181 1 207 2 363 1 156 1 184 6 345 4 212 4 139 1 270 2 247 1 
217 1 142 2 18 1 327 1 75 1 100 1 306 1 221 1 197 1 330 1 104 1 19 1 230 1 108 2 179 1 9 1 319 1 358 1 234 1 262 1 207 2 50 1 156 1 92 1 184 2 364 1 161 1 270 1 
125 1 66 1 319 1 260 1 330 1 197 1 156 1 129 1 184 1 108 1 
142 2 232 2 9 1 1 2 352 2 260 5 32 1 207 2 184 5 345 5 212 5 270 2 108 5 355 10 64 5 
129 1 305 1 100 1 260 1 287 1 50 1 
97 1 249 1 351 1 305 2 2 4 100 3 196 4 197 2 330 1 132 2 287 4 177 4 108 2 26 1 319 2 88 2 50 3 341 2 156 2 296 2 343 1 184 2 297 1 267 1 268 1 242 1 117 1 346 1 245 1 
16 1 18 2 99 1 2 1 144 1 127 1 306 1 146 1 196 1 221 2 280 1 80 1 45 1 171 1 334 1 177 1 26 1 179 3 65 1 338 1 88 1 89 1 358 2 10 1 234 3 362 1 92 2 297 1 267 1 268 1 214 1 121 1 
319 1 260 4 90 1 330 1 197 1 341 1 156 1 129 2 132 1 184 1 345 2 212 2 64 2 355 4 108 2 
342 1 11 1 314 1 
189 1 342 1 35 1 314 1 42 1 
342 1 11 1 314 1 
342 1 11 1 314 1 
342 1 291 1 314 1 
342 1 291 1 314 1 
342 1 291 1 314 1 
342 1 314 1 
226 1 254 1 
217 1 193 1 89 2 166 1 10 2 80 2 295 1 332 1 19 1 12 1 45 2 269 1 121 2 
217 1 295 1 332 1 19 1 12 1 269 1 215 1 
80 1 232 1 1 1 45 1 89 1 76 1 10 1 207 1 121 1 4 1 
99 1 76 1 139 1 334 1 247 1 91 1 
99 1 76 1 139 1 334 1 247 1 150 1 
99 1 139 1 334 1 
76 1 247 1 
232 1 1 1 99 1 76 1 334 1 32 1 207 1 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
161 1 76 1 207 1 
217 1 193 1 99 1 89 1 166 1 10 1 208 1 80 1 295 1 332 1 19 1 12 1 45 1 269 1 334 1 121 1 
217 1 332 1 19 1 161 1 12 1 76 1 262 1 207 1 
80 1 232 1 45 1 89 1 105 1 76 1 10 1 207 1 121 1 
80 1 232 1 1 1 45 1 89 1 105 1 76 1 10 1 207 1 121 1 
217 1 89 2 10 2 166 1 80 2 183 1 19 1 332 1 12 1 105 1 45 2 121 2 
99 1 194 1 89 3 76 1 10 3 91 1 4 1 80 3 183 1 105 1 45 3 139 1 334 1 247 1 121 3 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
99 1 89 2 76 1 10 2 181 1 91 1 4 1 80 2 45 2 105 1 139 1 334 1 247 1 121 2 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
99 1 89 1 76 1 10 1 181 1 91 1 80 1 105 1 45 1 139 1 334 1 247 1 121 1 
99 1 89 2 76 1 10 2 181 1 91 1 4 1 80 2 105 1 45 2 139 1 334 1 247 1 121 2 
99 1 89 2 76 1 10 2 181 1 91 1 80 2 183 1 45 2 105 1 139 1 334 1 247 1 121 2 
217 1 295 1 332 1 19 1 12 1 269 1 166 1 
99 1 89 2 76 1 10 2 181 1 91 1 80 2 183 1 45 2 105 1 139 1 334 1 247 1 121 2 
179 1 136 1 326 1 327 1 61 1 358 1 234 1 362 1 169 1 
86 1 179 1 326 1 327 1 357 1 358 1 78 1 308 1 234 1 362 1 169 1 136 1 61 1 85 1 
26 1 297 1 351 1 267 1 268 1 2 1 88 1 346 1 215 1 196 1 177 1 
26 1 179 2 18 1 65 1 2 1 88 1 144 1 219 1 358 1 221 1 196 1 234 2 362 1 297 1 267 1 268 1 214 1 177 1 
26 1 179 2 18 2 65 1 327 1 2 1 144 2 219 1 358 2 152 1 221 1 196 1 234 2 362 1 296 1 297 1 267 3 268 2 243 1 54 1 214 1 315 1 177 1 
18 2 2 2 327 1 219 1 144 2 196 2 221 1 315 1 177 2 26 1 179 2 151 1 358 2 152 1 234 2 362 1 68 1 296 1 297 1 267 3 268 2 54 1 243 1 214 1 
325 1 96 1 59 1 277 1 2 3 100 2 144 1 196 3 129 1 287 1 177 3 26 1 88 1 260 1 50 2 68 1 296 1 297 1 265 1 267 4 268 1 54 1 243 1 
26 1 325 1 277 1 59 1 2 3 88 1 100 2 144 1 260 1 196 3 50 2 209 1 68 1 129 1 296 1 297 1 267 4 268 1 243 1 54 1 287 1 177 3 
26 1 158 1 297 1 2 1 196 1 177 1 
0 1 26 3 141 1 46 1 2 7 88 2 135 1 144 1 112 1 196 7 294 1 198 1 238 1 158 1 297 2 267 3 268 2 257 1 140 1 119 1 177 6 
217 1 18 1 2 1 144 1 219 1 146 2 253 1 221 1 196 1 280 1 80 2 198 1 332 1 19 1 45 2 171 2 333 1 177 1 26 1 179 2 65 1 338 1 89 2 358 1 10 2 234 2 236 1 295 1 297 1 239 1 267 1 268 1 12 1 269 1 214 1 121 2 
349 1 325 1 125 1 59 1 277 1 305 1 2 1 100 3 196 1 197 2 330 2 129 1 170 1 62 1 287 2 177 1 108 1 66 1 319 2 88 1 260 1 153 1 50 3 209 1 156 2 184 1 343 1 267 2 
26 2 59 1 2 2 144 1 196 2 103 1 198 1 158 1 297 1 267 2 268 1 257 1 177 2 
26 1 351 1 28 1 2 4 88 1 196 4 198 1 68 1 297 1 267 1 268 1 346 1 177 4 
26 2 2 2 144 1 220 1 196 2 224 1 238 1 296 1 297 1 267 1 268 1 148 1 119 1 177 2 
26 1 344 1 297 1 2 1 88 1 272 1 196 1 233 1 361 1 177 1 
26 1 198 1 210 1 297 1 267 1 268 1 46 1 2 2 135 1 196 2 177 2 
0 1 26 2 351 1 28 1 2 5 46 1 88 1 196 5 198 1 296 1 297 2 267 3 268 2 346 1 140 1 177 4 
26 2 70 1 351 1 28 1 2 5 46 1 88 1 196 5 198 1 296 1 297 2 267 3 268 2 346 1 140 1 177 4 
26 1 179 2 18 1 151 1 2 1 88 1 144 1 219 1 358 1 221 1 196 1 234 2 362 1 297 1 267 1 268 1 214 1 177 1 
26 2 2 1 144 1 112 1 196 1 238 1 296 1 297 1 267 1 268 1 257 1 119 1 177 1 
98 1 179 1 110 1 358 1 234 1 283 1 286 1 36 1 56 1 
283 1 318 1 273 1 
283 1 157 1 98 1 36 1 362 1 
336 1 304 1 349 1 98 2 277 1 318 1 327 1 100 2 40 1 152 1 260 1 362 1 50 2 129 1 283 1 157 2 273 1 315 1 36 2 
114 1 279 1 215 1 359 1 
309 1 114 1 350 1 290 1 279 1 206 1 359 1 
292 1 206 1 258 1 
350 1 290 3 206 3 279 1 359 1 309 1 114 1 69 1 116 2 365 1 300 1 231 1 
309 1 124 1 114 1 350 1 290 2 279 1 206 2 359 1 263 1 
309 1 289 1 114 1 350 1 344 1 290 1 278 1 29 1 272 1 206 1 365 1 
309 1 114 1 350 1 290 1 206 1 365 1 359 1 
309 1 350 1 290 1 279 1 206 1 365 1 359 2 
275 1 350 2 290 2 206 2 359 1 309 2 114 1 160 1 84 1 365 1 
38 1 203 1 350 1 290 3 278 1 31 1 279 1 206 3 359 1 263 2 309 1 114 2 365 1 
350 1 276 1 289 1 290 2 279 1 206 2 48 1 233 1 359 1 263 1 309 1 114 1 344 1 272 2 365 1 
124 1 350 2 290 4 165 1 278 1 31 1 279 1 206 4 359 1 263 2 309 2 114 2 365 1 
309 1 114 1 350 1 290 1 279 1 206 1 365 1 359 1 
109 1 350 1 290 4 278 1 31 1 279 2 206 4 359 2 263 2 309 1 114 3 69 1 116 1 300 1 
350 1 58 1 290 2 206 2 279 1 359 1 263 1 309 1 52 1 114 1 138 1 365 1 
350 1 290 3 206 3 279 1 359 1 309 1 114 1 69 1 116 2 365 1 300 2 175 1 
331 1 322 1 114 2 329 2 
309 1 350 1 290 1 21 1 206 1 365 1 
38 1 309 1 114 1 350 1 290 2 279 1 206 2 365 1 359 1 263 1 
95 1 
309 1 114 1 350 1 290 1 279 1 206 1 365 1 359 1 
38 1 309 1 114 1 350 1 290 3 116 1 279 1 206 3 365 1 359 1 263 1 
109 1 114 1 278 1 31 1 
114 1 359 1 

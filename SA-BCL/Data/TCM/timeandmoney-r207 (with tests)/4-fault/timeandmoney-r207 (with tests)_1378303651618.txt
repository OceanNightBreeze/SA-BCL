#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 156 114 285 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 156 114 285 157 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 156 114 285 (3,77) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 156 114 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 156 114 285 (3,77) (3,77) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 156 81 90 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 138 38 74 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 156 114 285 (3,77) (3,77) 239 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 156 114 285 157 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 257 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 156 205 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 156 205 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 156 205 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 156 205 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 156 205 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
166 1 5 3 48 2 6 1 168 2 246 4 95 1 211 1 175 1 252 2 13 1 304 9 183 9 309 2 102 1 184 2 310 1 311 1 26 1 269 5 117 2 198 1 118 1 155 2 283 1 200 1 332 1 127 6 
166 1 5 3 48 2 6 1 168 2 246 4 95 1 211 1 175 1 252 2 13 1 304 9 183 9 309 2 102 1 184 2 310 1 311 1 26 1 269 5 198 1 117 2 118 1 155 2 283 1 200 1 332 1 127 6 
166 1 5 4 48 2 6 1 168 2 246 5 95 1 211 1 175 1 252 2 13 1 304 10 183 10 309 2 102 1 184 2 310 1 311 1 26 1 269 6 198 1 117 2 118 1 155 2 283 1 200 1 332 1 127 7 
166 1 5 2 48 2 6 1 168 2 246 3 95 1 211 1 175 1 252 2 13 1 304 7 183 7 309 2 102 1 184 2 310 1 311 1 26 1 269 4 198 1 117 1 118 1 155 2 283 1 332 1 127 4 
5 1 48 1 269 3 168 1 246 2 95 1 252 1 304 4 117 2 118 1 155 1 200 1 183 4 102 1 184 1 311 1 332 1 127 3 
269 1 48 1 168 1 321 1 252 1 304 2 283 1 183 2 309 1 102 1 184 1 310 1 202 1 311 1 288 1 332 1 
5 1 269 2 168 2 246 1 211 1 252 2 304 3 183 3 309 1 102 1 311 1 332 1 127 1 
5 3 6 1 48 1 168 2 246 4 95 1 211 1 252 2 13 1 304 9 183 9 309 1 102 1 184 1 311 1 25 1 223 1 269 5 117 2 118 1 155 1 200 1 127 7 332 1 
5 3 6 1 48 1 168 2 246 4 95 1 211 1 252 2 13 1 304 9 183 9 309 1 102 1 184 1 311 1 25 1 223 1 269 5 117 2 118 1 155 1 200 1 127 7 332 1 
199 1 62 1 257 1 
75 1 267 2 199 1 
156 1 285 1 114 1 
156 1 157 1 285 1 114 1 
3 1 156 1 285 1 114 1 
191 1 70 1 271 1 230 1 52 1 53 1 176 1 325 1 76 1 199 1 62 1 84 1 65 1 40 1 
156 1 114 1 
76 1 70 1 247 1 85 1 330 1 
76 2 199 1 70 2 62 1 247 1 122 1 330 1 203 1 
76 1 70 1 247 1 
77 1 76 1 3 1 156 1 70 1 285 1 114 1 330 1 
199 1 
76 2 199 1 70 2 62 1 247 1 122 1 274 1 330 1 
293 1 70 5 71 1 193 2 247 2 296 1 76 5 199 1 279 1 97 2 215 1 62 1 140 1 122 1 19 2 141 1 87 1 330 2 42 1 
244 1 22 1 
244 1 22 1 
107 1 24 1 
107 1 24 1 
107 1 24 1 
268 1 244 1 22 1 
147 1 244 1 22 1 
290 1 107 1 244 2 284 1 22 2 24 1 
268 1 244 1 22 1 
268 1 244 1 22 1 
244 1 22 1 96 1 
244 1 22 1 96 1 
244 1 22 1 96 1 
76 1 206 1 154 1 244 1 156 1 70 1 111 1 22 1 94 1 172 1 136 1 
206 3 222 1 244 2 192 1 70 2 111 2 94 2 172 2 277 2 136 2 76 2 116 1 199 1 180 1 154 1 284 1 282 1 182 1 22 2 
155 1 48 1 184 1 
48 1 184 1 288 1 
137 1 155 2 48 3 270 1 217 1 288 1 
137 1 214 1 155 1 48 2 217 1 288 1 
137 2 155 1 48 2 217 1 288 1 
92 1 242 1 293 3 8 1 247 1 139 2 97 1 15 1 62 1 307 1 19 1 141 2 142 1 185 2 267 3 70 5 193 1 33 1 73 1 75 1 76 5 78 1 199 2 36 2 122 1 286 1 328 1 88 1 330 4 42 1 160 1 162 1 
92 3 242 4 293 8 8 3 247 6 296 1 139 6 97 2 181 1 62 1 307 2 19 2 141 6 20 1 104 1 66 1 267 9 70 9 193 2 73 3 75 3 76 9 78 3 199 5 79 1 36 6 122 1 85 5 286 2 158 1 328 3 330 7 42 1 129 5 162 1 
92 1 242 1 293 3 8 1 296 1 139 2 97 1 15 1 62 1 307 1 19 1 141 2 185 1 267 4 70 3 193 1 73 1 75 2 76 3 199 3 78 1 36 2 286 1 328 1 330 2 160 1 
92 2 242 2 293 5 8 2 296 1 139 4 97 1 15 1 62 1 307 1 19 1 141 4 185 2 66 1 267 7 70 4 193 1 73 2 75 3 76 4 199 4 78 2 79 1 36 4 286 1 328 2 158 1 330 3 160 1 
235 1 190 1 291 1 121 1 226 1 
121 1 169 1 
121 1 257 1 231 1 
121 1 319 1 
318 1 
291 1 121 1 
190 1 291 1 110 1 121 3 231 2 299 1 
208 1 171 1 55 2 101 1 218 4 144 8 264 2 266 2 273 14 272 5 78 3 119 1 238 6 37 1 239 1 328 3 126 2 89 1 
208 1 171 1 55 2 101 1 218 4 144 8 264 2 266 2 273 14 272 7 78 3 119 1 238 6 37 1 239 1 328 3 126 2 89 3 
208 1 171 1 55 2 101 1 218 4 144 8 264 2 266 2 273 14 272 5 78 3 119 1 238 6 37 1 239 1 240 1 328 3 89 1 126 2 
45 1 92 3 47 1 165 1 131 4 8 3 208 2 209 3 298 1 249 1 171 1 250 1 55 3 101 2 218 7 144 21 264 3 187 1 266 2 29 2 273 40 272 14 73 3 78 6 119 1 327 1 238 19 239 1 37 1 328 6 287 1 126 3 89 7 204 1 43 1 
208 1 298 2 250 2 171 1 55 2 101 1 218 5 263 1 144 9 264 2 187 2 266 2 29 4 273 16 272 7 195 1 78 3 238 7 239 1 37 1 328 3 126 2 89 2 204 2 43 1 
164 2 48 2 168 1 12 2 174 1 252 1 301 2 14 1 304 2 99 1 183 2 309 1 102 1 184 1 311 1 146 1 314 1 269 1 270 1 316 1 229 1 322 1 324 1 35 1 155 1 281 1 329 1 288 1 127 1 332 1 44 1 
164 1 48 2 168 1 11 1 12 1 252 1 301 1 14 1 304 3 99 1 183 3 309 1 18 1 102 1 184 1 311 1 188 1 146 1 269 1 270 1 316 1 229 1 322 1 35 1 155 1 281 1 329 1 288 1 127 2 44 1 
164 1 48 2 12 1 301 1 14 1 304 2 99 1 183 2 309 1 18 1 102 1 184 1 311 1 188 1 146 1 269 1 316 1 270 1 229 1 322 1 281 1 155 1 329 1 288 1 127 2 
146 2 291 1 164 1 109 1 245 1 168 1 295 1 31 1 10 1 229 2 11 1 12 1 252 1 278 1 301 1 304 1 14 2 281 1 121 1 16 1 183 1 309 2 329 1 
164 1 48 2 168 1 12 1 252 1 301 1 14 1 304 1 99 1 183 1 309 1 184 1 188 1 146 1 316 1 270 1 229 1 322 1 324 1 35 1 155 1 281 1 329 1 288 1 332 1 44 1 
49 1 
1 4 164 2 4 2 247 6 170 2 12 2 176 1 251 1 178 1 179 2 97 1 16 1 100 1 19 1 105 2 21 2 267 2 191 1 193 1 31 2 271 1 199 2 280 1 281 1 121 1 122 3 39 1 42 1 40 1 291 1 293 2 207 1 294 1 295 1 52 1 135 1 53 1 300 1 301 2 62 1 307 1 216 2 141 2 65 1 151 2 70 5 224 1 230 1 320 1 323 1 75 2 76 5 325 1 84 1 329 1 
1 2 247 2 52 1 135 1 53 1 176 1 178 1 216 1 65 1 191 1 70 3 224 1 271 1 230 1 274 1 320 1 323 1 325 1 76 3 84 1 122 1 40 1 
1 3 247 1 52 1 135 1 53 1 176 1 178 1 62 1 105 1 65 1 191 1 70 3 224 1 271 1 230 1 274 1 320 1 323 1 325 1 76 3 199 1 84 1 122 1 40 1 
1 3 247 2 52 1 135 1 53 1 176 1 178 1 179 1 62 1 216 1 105 1 65 1 191 1 70 3 224 1 271 1 230 1 274 1 320 1 323 1 325 1 76 3 199 1 122 1 84 1 40 1 
1 6 4 2 247 7 170 2 176 1 251 1 178 1 179 4 97 1 19 1 105 4 21 2 265 1 189 1 191 1 193 1 271 1 274 1 194 1 199 5 122 3 39 1 40 1 41 1 42 1 46 1 293 1 52 1 135 1 53 1 62 5 216 4 141 1 65 1 70 5 151 2 224 1 230 1 320 1 323 1 75 2 325 1 76 5 84 1 
1 4 4 2 247 4 170 2 251 1 176 1 178 1 179 2 97 1 19 1 21 2 105 2 267 2 191 1 193 1 271 1 199 2 122 2 39 1 40 1 42 1 293 1 207 1 52 1 135 1 53 1 62 1 216 2 141 1 65 1 70 4 151 2 224 1 230 1 320 1 323 1 75 2 325 1 76 4 84 1 
1 4 293 1 4 2 247 4 170 2 52 1 135 1 53 1 251 1 176 1 178 1 179 2 97 1 62 1 216 2 19 1 141 1 105 2 21 2 65 1 189 1 191 1 151 2 70 4 224 1 193 1 271 1 230 1 194 1 320 1 323 1 75 2 325 1 76 4 199 1 122 2 84 1 39 1 40 1 41 1 42 1 
1 4 293 1 4 2 247 4 170 2 52 1 135 1 53 1 251 1 176 1 178 1 179 2 97 1 62 1 216 2 19 1 141 1 105 2 21 2 65 1 189 1 191 1 151 2 70 4 224 1 193 1 271 1 230 1 194 1 320 1 323 1 75 2 325 1 76 4 199 1 122 2 84 1 39 1 40 1 41 1 42 1 
1 4 293 1 4 2 247 4 52 1 135 1 53 1 176 1 178 1 179 2 253 2 303 1 97 1 62 1 216 2 19 1 141 1 105 2 21 2 65 1 267 2 67 1 191 1 70 4 224 1 193 1 271 1 230 1 194 1 320 1 323 1 325 1 76 4 199 1 122 2 84 1 201 2 39 1 40 1 331 1 42 1 
1 5 293 1 4 2 247 5 170 2 52 1 135 1 53 1 251 1 176 1 178 1 179 3 97 1 62 1 216 3 19 1 141 1 21 2 105 3 65 1 265 1 189 1 191 1 151 2 70 4 224 1 193 1 271 1 230 1 194 1 320 1 323 1 75 2 325 1 76 4 199 1 122 2 84 1 39 1 42 1 41 1 40 1 
1 5 293 1 4 2 247 5 170 2 52 1 135 1 53 1 251 1 176 1 178 1 179 3 97 1 62 1 216 3 19 1 141 1 21 2 105 3 65 1 265 1 189 1 191 1 151 2 70 4 224 1 193 1 271 1 230 1 194 1 320 1 323 1 75 2 325 1 76 4 199 1 122 2 84 1 39 1 42 1 41 1 40 1 
1 4 4 2 247 4 176 1 178 1 253 2 179 2 97 1 19 1 21 2 105 2 267 2 191 1 193 1 271 1 199 1 122 2 201 2 39 1 40 1 42 1 293 1 207 1 52 1 135 1 53 1 303 1 62 1 216 2 141 1 65 1 70 4 224 1 230 1 320 1 323 1 325 1 76 4 84 1 
92 3 47 1 7 1 131 2 8 3 209 1 298 2 250 2 305 1 59 2 218 3 64 1 263 1 144 9 312 2 145 1 187 2 28 1 29 4 225 1 227 1 273 19 272 6 73 3 78 3 327 1 238 10 328 3 89 3 204 2 
92 3 131 2 8 2 209 2 298 3 250 3 138 1 59 1 305 1 218 2 64 1 263 1 144 14 27 1 312 4 145 2 187 3 29 6 225 1 227 2 272 4 273 26 317 1 73 3 197 1 74 1 78 3 327 2 238 12 38 1 328 2 89 2 43 2 204 3 
92 4 47 1 7 1 131 4 8 4 209 3 298 3 171 1 250 3 55 1 138 1 59 1 305 1 261 1 218 4 64 1 263 1 144 20 264 1 27 1 312 4 145 2 187 3 266 1 29 6 225 1 227 1 317 1 273 41 272 8 73 4 197 1 74 1 78 5 327 3 238 21 37 1 38 1 328 5 126 1 89 4 43 1 204 3 
92 4 47 1 7 1 131 4 8 3 209 3 298 4 171 1 250 4 55 1 138 1 59 1 305 1 261 1 218 4 64 1 263 1 144 20 264 1 27 1 312 4 145 2 187 4 266 1 29 8 225 1 227 1 317 1 273 38 272 7 73 4 197 1 74 1 78 5 327 3 238 18 37 1 38 1 328 4 126 1 89 3 43 2 204 4 
163 2 92 7 47 2 131 4 8 7 209 4 298 2 171 1 250 2 55 1 138 1 59 1 305 1 218 7 64 1 263 1 144 27 264 1 27 1 312 4 145 1 187 2 266 1 29 4 225 1 227 1 317 1 273 52 272 14 73 7 197 1 74 1 78 8 327 2 238 25 37 1 38 1 328 8 126 1 89 7 43 1 204 2 
268 1 255 1 
290 1 103 1 96 1 
116 1 222 1 244 1 284 1 111 1 22 1 94 1 172 1 136 1 212 1 
147 1 108 1 
56 1 244 1 17 1 83 1 111 1 22 1 94 1 172 1 136 1 
206 2 222 1 244 1 70 1 111 1 94 1 172 1 277 1 136 1 76 1 116 1 199 1 180 1 154 1 284 1 282 1 182 1 22 1 
206 2 222 1 244 1 70 1 111 1 94 1 172 1 277 1 136 1 76 1 116 1 199 1 180 1 154 1 284 1 282 1 182 1 22 1 
206 2 222 1 244 1 70 1 111 1 94 1 172 1 277 1 136 1 76 1 116 1 199 1 180 1 154 1 284 1 282 1 182 1 22 1 
290 1 268 1 255 1 
290 1 268 1 255 1 
103 1 96 1 
290 1 103 1 96 1 
258 1 152 1 
147 1 242 1 206 1 108 1 244 1 70 1 111 1 33 1 94 1 152 1 172 1 277 1 136 1 76 1 156 1 81 1 282 1 258 1 142 1 22 1 330 1 90 1 
0 1 291 1 164 2 134 1 52 2 297 1 298 1 250 1 12 2 176 2 174 2 57 1 301 2 254 1 144 1 187 1 29 2 112 1 113 1 273 2 234 1 115 1 281 1 80 1 121 1 84 2 238 1 123 1 125 1 329 1 204 1 
146 1 314 1 164 2 148 1 68 1 48 2 270 1 32 1 12 2 322 1 301 2 35 1 155 1 281 1 99 1 184 1 288 1 329 1 188 1 
146 1 164 1 148 1 2 1 48 2 270 1 12 1 322 1 301 1 35 1 155 1 281 1 99 1 184 1 288 1 329 1 188 1 
146 1 291 1 164 1 315 1 68 1 31 1 295 1 12 1 301 1 278 1 281 1 121 1 16 1 329 1 
146 1 164 1 148 1 68 1 48 2 270 1 32 1 12 1 322 1 301 1 35 1 155 1 281 1 99 1 184 1 288 1 329 1 188 1 
153 1 
199 1 293 1 62 1 140 1 71 1 257 1 141 1 
293 1 247 1 170 1 251 1 97 1 62 1 19 1 141 1 267 1 151 1 70 1 193 1 75 1 76 1 199 2 122 1 42 1 
92 2 164 3 243 1 8 2 247 5 169 2 9 2 12 3 97 4 100 1 19 4 23 2 190 3 267 12 106 2 110 1 193 4 31 1 34 2 199 8 281 4 121 10 122 3 36 6 42 4 40 2 292 1 291 3 293 9 50 2 301 3 139 6 306 1 140 1 62 2 63 1 307 2 61 2 141 8 143 1 314 1 69 2 70 5 71 1 232 2 231 2 319 3 73 2 75 6 76 5 78 2 326 2 328 2 329 3 
92 1 293 5 131 1 8 1 247 1 9 1 209 1 138 1 302 1 139 4 97 2 62 1 19 2 141 3 267 6 70 1 193 2 317 1 73 1 197 1 74 1 75 3 76 1 199 4 78 1 327 1 122 1 36 4 38 1 328 1 42 2 
266 1 3 1 293 2 70 1 193 1 9 2 114 1 77 1 76 1 55 1 78 1 97 1 156 1 285 1 239 1 19 1 328 1 141 1 41 1 42 1 264 1 
293 1 193 1 71 1 199 1 97 1 140 1 62 1 19 1 141 1 42 1 
106 1 92 2 267 10 293 5 8 2 9 2 73 2 75 5 139 5 78 2 199 5 36 5 141 5 328 2 23 1 
76 1 199 1 70 1 62 1 247 1 122 1 
291 1 292 1 164 4 243 2 293 2 247 4 295 1 296 1 210 1 12 4 300 1 301 4 97 2 307 2 100 2 16 1 19 2 141 2 70 3 193 2 31 2 76 3 236 1 280 1 281 1 121 1 122 2 329 1 42 1 
156 1 157 1 285 1 114 1 
267 4 293 1 193 1 75 2 139 2 199 4 97 1 307 1 62 2 36 2 100 1 19 1 141 2 126 1 42 1 
124 1 111 1 94 1 
116 1 60 1 258 1 111 1 94 1 
124 1 111 1 94 1 
124 1 111 1 94 1 
111 1 94 1 128 1 
111 1 94 1 128 1 
111 1 94 1 128 1 
111 1 94 1 
244 1 22 1 
298 2 171 1 250 2 55 2 218 4 144 9 264 2 187 2 266 2 29 4 272 7 273 17 78 3 238 8 239 1 37 1 328 3 89 3 126 1 43 1 204 2 
266 1 272 2 273 5 171 1 55 1 78 1 238 2 257 1 37 1 328 1 218 2 126 1 144 3 264 1 
92 1 29 2 150 1 8 1 272 2 273 4 298 1 250 1 73 1 78 1 238 2 328 1 218 1 144 2 89 1 204 1 187 1 
92 1 47 1 131 2 8 1 209 1 273 7 272 2 73 1 78 1 327 1 238 4 328 1 218 1 144 3 89 1 
92 2 163 1 47 1 131 2 8 2 209 2 298 1 171 1 250 1 54 1 55 2 218 5 144 13 264 2 187 1 266 2 29 2 273 25 272 7 73 2 78 5 238 12 239 1 37 1 328 5 126 1 89 2 43 1 204 1 
131 1 238 1 273 1 
209 1 273 1 144 1 
92 1 29 2 150 1 8 1 273 6 272 3 298 1 250 1 73 1 78 1 238 3 328 1 23 1 218 2 144 3 89 1 187 1 204 1 
92 2 131 1 8 2 209 1 298 1 250 1 138 1 218 1 263 1 144 6 187 1 29 2 273 12 317 1 272 2 73 2 197 1 74 1 78 2 327 1 238 6 328 2 38 1 89 1 204 1 
266 1 273 6 272 2 55 1 78 1 238 3 328 1 218 1 144 3 89 1 264 1 
29 2 272 2 273 3 298 1 250 1 171 1 55 1 308 1 238 2 37 1 218 1 144 1 89 1 264 1 43 1 204 1 187 1 
266 1 29 2 272 5 273 10 298 1 250 1 55 2 78 2 238 5 239 1 328 2 218 3 263 1 89 2 144 5 264 2 187 1 204 1 
29 2 273 2 272 1 298 1 250 1 73 1 78 1 263 1 144 2 89 1 204 1 187 1 
92 1 29 2 8 1 272 2 273 4 298 1 250 1 73 1 78 1 238 2 328 1 218 1 263 1 144 2 89 1 204 1 187 1 
29 6 7 1 273 3 272 2 298 3 250 3 55 1 308 1 238 2 218 1 263 1 89 1 144 1 264 1 43 1 204 3 187 3 
45 1 92 2 165 1 131 3 7 1 8 2 209 3 298 4 249 1 171 1 250 4 55 2 218 5 263 1 144 16 264 2 187 4 266 2 29 8 150 1 273 31 272 9 73 2 78 5 327 1 238 15 239 1 37 1 328 5 126 1 89 4 43 1 204 4 
131 1 209 1 298 1 250 1 171 1 55 2 218 4 263 1 144 8 264 2 187 1 266 2 29 2 273 15 272 5 74 1 78 3 327 1 238 7 239 1 37 1 328 3 89 1 126 1 204 1 
92 1 47 1 131 2 209 1 298 2 171 1 250 2 55 2 218 4 263 1 144 10 264 2 187 2 266 2 29 4 150 1 273 18 272 6 73 1 74 1 78 4 327 1 238 8 239 1 37 1 328 3 126 1 89 2 204 2 
92 2 131 1 8 2 209 1 298 3 171 1 250 3 55 2 138 1 218 5 263 1 144 13 264 2 187 3 266 2 29 6 150 1 273 26 317 1 272 7 73 2 197 1 74 1 78 5 327 1 238 13 239 1 37 1 328 5 38 1 126 1 89 2 204 3 43 1 
92 2 131 1 8 1 209 1 298 3 171 1 250 3 55 2 138 1 218 5 263 1 144 14 264 2 187 3 266 2 29 6 150 1 273 24 317 1 272 9 73 2 197 1 74 1 78 5 327 1 238 10 239 1 37 1 328 4 38 1 126 1 89 4 43 1 204 3 
131 1 209 1 298 1 250 1 171 1 55 2 218 4 263 1 144 8 264 2 187 1 266 2 29 2 273 15 272 5 74 1 78 3 327 1 238 7 239 1 37 1 328 3 89 1 126 1 204 1 
92 2 131 1 8 2 209 1 298 1 250 1 138 1 218 1 263 1 144 6 187 1 29 2 273 12 317 1 272 2 73 2 197 1 74 1 78 2 327 1 238 6 328 2 38 1 89 1 204 1 
92 2 131 1 8 1 209 1 298 4 171 1 250 4 55 2 138 1 218 5 263 1 144 14 264 2 187 4 266 2 29 8 150 1 273 25 317 1 272 7 73 2 197 1 74 1 78 5 327 1 238 11 239 1 37 1 38 1 328 4 126 1 89 2 204 4 43 2 
92 3 131 1 7 1 8 2 209 1 298 4 250 4 138 1 218 3 263 1 144 9 187 4 29 8 273 16 317 1 272 6 73 3 197 1 74 1 78 3 327 1 238 7 38 1 328 2 89 3 204 4 43 2 
266 1 273 7 272 6 171 1 55 3 78 1 238 4 37 2 328 1 218 3 89 3 144 3 264 3 
92 2 131 1 7 1 8 1 209 1 298 4 171 1 250 4 55 2 138 1 218 5 263 1 144 14 264 2 187 4 266 2 29 8 273 25 317 1 272 7 73 2 197 1 74 1 78 5 327 1 238 11 239 1 37 1 38 1 328 4 126 1 89 2 204 4 43 2 
91 1 241 1 256 1 84 1 52 1 230 1 176 1 
91 1 241 1 30 1 248 1 230 1 52 1 233 1 176 1 256 1 120 1 84 1 313 1 
205 1 156 1 
190 1 164 1 220 1 291 1 243 1 110 1 12 1 301 1 58 1 281 2 121 1 329 1 219 1 
301 1 291 1 164 1 281 1 121 1 16 1 295 1 257 1 31 1 329 1 12 1 
205 1 156 1 
205 1 156 1 
205 1 156 1 
190 1 93 1 291 1 164 3 243 1 132 1 70 2 31 1 247 1 169 1 231 1 319 1 12 3 76 2 301 3 199 1 281 1 62 1 61 1 121 4 260 1 329 1 40 1 
190 1 291 1 164 3 243 1 70 2 50 1 31 1 247 1 169 1 231 1 319 1 12 3 76 2 301 3 199 1 281 1 62 1 61 1 121 4 260 1 329 1 40 1 
301 1 164 1 281 1 329 1 12 1 289 1 
314 1 190 1 164 7 220 1 291 2 110 1 31 2 72 1 297 1 12 7 174 1 177 1 213 1 301 6 58 1 281 3 121 3 329 2 219 1 289 1 188 1 
205 1 156 1 
292 1 164 1 293 1 50 1 247 2 12 1 301 1 97 2 62 1 140 1 19 2 141 1 70 3 69 1 71 1 31 1 193 2 232 1 231 1 319 1 76 3 199 1 326 1 121 2 122 1 330 1 42 2 40 1 
314 1 190 1 164 2 291 1 110 1 231 1 12 2 301 2 306 1 281 2 121 2 329 1 289 1 
314 1 301 4 291 1 164 4 149 1 281 1 121 1 16 1 295 1 31 1 260 1 329 1 12 4 
190 1 164 2 291 1 243 1 228 1 12 2 301 2 58 1 281 2 121 1 159 1 329 1 219 1 333 1 
301 1 164 1 281 1 48 1 99 1 31 1 184 1 288 1 329 1 12 1 
301 2 314 1 291 1 164 2 281 1 121 1 123 1 297 1 329 1 12 2 188 1 
314 1 164 5 291 2 149 1 243 1 295 1 31 1 72 1 297 1 12 5 177 1 301 4 281 2 121 3 16 1 329 2 
314 1 164 5 291 2 149 1 243 1 221 1 295 1 31 1 72 1 297 1 12 5 301 4 281 2 121 3 16 1 329 2 
269 1 257 1 102 1 311 1 
252 1 304 1 269 1 168 1 183 1 102 1 311 1 
183 1 309 1 229 1 
167 1 269 1 168 1 276 1 252 1 304 3 283 2 183 3 102 1 311 1 332 1 161 1 
252 1 117 1 304 2 269 1 168 1 183 2 102 1 311 1 127 1 
269 1 48 1 168 1 246 1 95 1 252 1 304 1 155 1 183 1 184 1 332 1 
252 1 304 1 269 1 168 1 183 1 311 1 332 1 
252 1 304 1 168 1 183 1 102 1 311 2 332 1 
269 1 168 2 133 1 252 2 304 2 183 2 262 1 86 1 311 1 332 1 
5 1 6 1 269 2 168 1 246 1 252 1 13 1 304 3 183 3 102 1 311 1 332 1 127 2 
269 1 48 2 168 1 270 1 252 1 304 2 155 1 82 1 183 2 102 1 184 1 311 1 288 1 332 1 127 1 
5 1 269 2 168 2 246 1 252 2 304 4 117 1 200 1 183 4 102 1 311 1 332 1 127 2 
252 1 304 1 269 1 168 1 183 1 102 1 311 1 332 1 
5 1 269 3 168 1 246 1 276 1 196 1 252 1 304 4 283 1 183 4 102 2 311 2 161 1 127 2 
223 1 269 1 168 1 51 1 252 1 304 2 183 2 259 1 102 1 311 1 332 1 127 1 
269 1 168 1 275 1 276 2 252 1 304 3 283 2 183 3 102 1 311 1 161 1 332 1 
269 2 98 2 186 1 173 1 
252 1 130 1 304 1 168 1 183 1 332 1 
252 1 304 2 269 1 6 1 168 1 183 2 102 1 311 1 127 1 332 1 
237 1 
252 1 304 1 269 1 168 1 183 1 102 1 311 1 332 1 
269 1 6 1 168 1 252 1 304 3 283 1 183 3 102 1 311 1 127 1 332 1 
5 1 269 1 246 1 196 1 
269 1 311 1 

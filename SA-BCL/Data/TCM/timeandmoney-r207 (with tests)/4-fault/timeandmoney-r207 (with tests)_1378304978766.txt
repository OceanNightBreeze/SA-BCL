#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 (57,60) (57,60) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 (57,60) (57,60) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 (57,60) (57,60) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 (57,60) (57,60) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 160 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 293 160 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (47,208,235,273) (47,208,235,273) 346 170 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 59 1 332 1 208 3 40 2 235 1 6 3 44 1 328 1 273 2 47 2 330 1 186 1 
159 1 293 1 294 1 332 1 60 1 77 1 208 7 40 2 235 4 103 1 6 6 346 1 169 1 44 1 193 1 328 2 273 2 57 1 141 1 275 1 47 2 330 2 370 1 186 2 
159 1 293 1 294 1 332 1 60 1 77 1 208 7 40 2 235 4 103 1 6 6 346 1 169 1 44 1 193 1 328 2 273 2 57 1 141 1 275 1 47 2 330 2 370 1 186 2 
159 1 293 1 294 1 332 1 60 1 77 1 208 7 40 2 235 4 103 1 6 6 346 1 169 1 44 1 193 1 328 2 273 2 57 1 141 1 275 1 47 2 330 2 370 1 186 2 
159 1 293 1 294 1 332 1 60 1 77 1 208 7 40 2 235 4 103 1 6 6 346 1 169 1 44 1 193 1 328 2 273 2 57 1 141 1 275 1 47 2 330 2 370 1 186 2 
346 1 293 1 273 1 332 1 47 1 208 2 235 1 6 1 
99 1 118 1 59 1 332 1 281 1 208 2 40 1 362 1 103 1 6 2 169 1 273 1 275 1 47 1 186 1 370 1 
159 1 160 1 293 1 294 1 332 1 208 7 40 2 235 5 6 6 346 1 44 1 328 2 273 2 47 2 330 2 96 1 186 1 
159 1 160 1 293 1 294 1 332 1 208 7 40 2 235 5 6 6 346 1 44 1 328 2 273 2 47 2 330 2 96 1 186 1 
2 1 250 1 282 1 201 1 189 1 54 1 204 1 137 1 364 1 271 1 311 1 151 1 66 1 379 1 
171 1 
171 1 311 1 366 1 66 2 335 1 268 1 137 2 55 1 
171 1 0 1 146 1 335 2 79 1 137 5 80 1 190 1 55 1 5 2 223 1 311 2 366 1 66 5 11 1 246 1 352 2 108 1 197 2 
171 1 48 1 55 1 
171 1 173 1 289 2 
9 1 282 2 250 2 54 2 189 1 204 2 364 2 379 2 
301 1 356 1 302 1 280 2 230 1 282 3 250 2 189 1 61 2 90 1 209 1 255 1 364 2 168 1 9 1 65 1 35 2 368 1 93 1 264 1 95 1 36 1 340 1 145 1 54 2 203 2 204 3 323 1 21 1 295 2 82 1 297 1 272 1 28 1 87 1 135 1 379 2 
271 1 151 1 282 1 250 1 2 1 54 1 189 1 204 1 364 1 379 1 
171 1 282 1 54 1 204 1 137 1 326 1 55 1 245 1 260 1 64 1 46 1 151 1 66 1 154 1 
171 1 250 1 282 1 54 1 204 1 137 2 364 1 55 1 260 1 64 1 46 1 151 1 66 2 154 1 379 1 
311 1 66 1 20 1 335 1 137 1 
171 1 311 1 366 1 107 1 66 2 335 1 137 2 55 1 
66 1 335 1 137 1 
301 1 355 1 248 1 250 1 282 2 54 1 203 1 61 1 90 1 204 2 209 1 255 1 82 1 364 1 259 1 65 1 35 1 340 1 87 1 135 1 
282 2 250 1 54 2 204 2 234 1 364 1 9 2 140 1 379 1 
248 1 39 1 148 1 
301 1 282 1 203 1 61 1 90 1 204 1 209 1 255 1 82 1 9 1 65 1 35 1 340 1 87 1 125 1 135 1 
48 1 9 1 
355 1 9 1 282 3 250 3 54 3 204 3 364 3 379 1 
271 1 151 1 282 1 250 1 54 1 204 1 364 1 
151 1 140 1 282 1 250 1 54 1 204 1 234 1 364 1 379 1 
301 1 355 1 356 1 302 1 280 1 230 1 282 4 250 3 189 1 90 1 61 1 209 1 137 1 255 1 306 1 364 3 168 1 260 1 259 1 64 1 9 1 65 1 35 1 140 1 66 1 93 1 264 1 340 1 100 1 54 3 203 1 204 4 323 1 21 1 295 2 82 1 297 1 46 1 151 1 154 1 28 1 87 1 135 1 379 2 
355 1 9 1 282 2 250 1 54 2 204 2 326 1 364 1 381 1 
355 2 171 1 100 1 250 3 282 3 54 3 204 3 137 1 364 3 43 1 259 1 260 1 64 1 46 1 151 1 140 1 66 1 154 1 379 1 
355 1 248 1 39 1 250 2 282 2 54 2 204 2 364 2 140 1 379 1 
301 1 282 1 203 1 61 1 90 1 204 1 209 1 255 1 82 1 9 1 35 1 65 1 340 1 87 1 135 1 
301 1 282 1 203 1 61 1 204 1 209 1 82 1 262 1 9 1 35 1 65 1 340 1 87 1 317 1 135 1 
356 1 248 2 205 1 302 1 280 4 334 1 363 1 336 1 337 1 168 1 308 1 368 2 264 1 39 2 128 1 21 1 295 2 148 2 347 1 297 1 181 1 133 1 28 2 110 1 
64 1 151 1 282 1 250 1 54 1 204 1 241 1 364 1 
355 2 250 4 282 5 54 5 204 5 166 1 326 1 364 4 105 1 259 1 9 1 140 1 381 1 379 1 
271 1 151 1 282 2 250 2 54 2 204 2 241 1 364 2 
212 1 101 1 252 1 
212 2 252 2 361 1 342 1 372 1 256 1 
212 1 252 1 
212 1 252 1 
342 1 256 1 
342 1 256 1 
342 1 256 1 
212 1 252 1 81 1 
212 1 252 1 81 1 
212 1 252 1 81 1 
49 1 212 1 252 1 
49 1 212 1 252 1 
49 1 212 1 252 1 
171 1 127 1 17 2 78 2 252 2 251 2 137 2 372 1 34 3 242 1 129 2 243 1 285 1 327 1 237 1 212 2 24 1 66 2 228 2 
331 1 250 2 282 2 251 1 252 1 137 1 34 1 364 2 237 1 9 1 263 1 212 1 66 1 92 1 214 1 67 1 369 1 54 2 78 1 101 1 204 2 129 1 228 1 157 1 
169 2 99 1 77 1 210 1 16 2 
169 1 77 1 370 1 
169 1 99 1 370 1 
169 3 99 1 77 2 85 1 16 1 210 1 
169 2 99 1 303 1 77 1 16 1 210 1 
188 1 334 1 335 1 137 5 254 2 336 1 5 1 311 4 313 1 338 1 366 1 66 5 214 1 67 1 289 3 315 1 369 1 197 1 38 2 171 2 146 2 173 1 266 1 128 1 79 1 55 1 223 3 182 1 133 1 352 1 134 2 298 1 
136 1 188 2 334 3 207 1 335 6 137 9 336 3 5 2 311 7 313 2 366 1 66 9 11 1 289 9 369 4 315 1 197 2 198 1 72 1 38 6 171 5 172 1 146 6 173 3 20 5 128 3 79 1 55 1 223 8 182 3 133 3 352 2 109 1 134 6 378 5 
188 1 334 1 137 3 254 1 336 1 5 1 311 2 313 1 338 1 66 3 11 1 369 1 289 4 197 1 38 2 171 3 146 2 173 2 128 1 55 1 223 3 182 1 352 1 133 1 134 2 298 1 
188 1 334 2 207 1 137 4 254 2 336 2 5 1 313 1 311 3 338 1 66 4 11 1 289 7 369 2 197 1 198 1 72 1 38 4 171 4 146 4 173 3 128 2 55 1 223 5 182 2 352 1 133 2 134 4 298 1 
265 1 
122 1 48 1 65 1 
65 1 319 1 
301 1 65 1 
301 1 120 1 122 2 65 3 340 1 86 1 
301 1 65 1 340 1 
65 1 187 1 
116 1 249 1 280 7 128 1 296 1 257 1 347 3 308 2 106 1 132 1 123 1 368 4 274 1 13 1 133 1 28 3 353 1 247 2 
58 1 116 3 280 34 249 2 231 1 359 1 334 3 257 1 336 3 63 1 168 1 308 6 7 1 310 3 123 1 368 17 264 1 13 3 14 1 68 1 174 1 21 1 295 2 128 5 244 4 347 13 106 7 297 1 132 1 274 2 182 3 133 5 28 17 353 1 247 1 
280 9 249 1 116 1 63 1 257 1 168 2 308 3 213 1 123 1 368 5 264 2 13 1 128 1 21 2 295 4 347 4 106 1 297 2 153 1 274 1 133 1 28 4 247 2 353 1 
116 1 249 1 280 7 128 1 257 1 347 3 308 2 106 1 132 1 123 1 368 4 274 1 13 1 133 1 28 3 247 2 353 1 
116 1 249 1 280 7 128 1 257 1 347 3 308 2 106 1 132 1 123 1 368 4 274 1 13 1 133 1 28 3 247 2 353 1 
301 1 114 2 115 1 61 1 209 1 208 1 6 1 91 2 35 1 65 1 367 2 76 1 203 1 147 1 273 1 178 1 351 1 47 1 226 1 87 1 135 1 186 2 380 1 
113 1 114 1 332 1 32 1 61 1 208 1 284 1 6 1 258 1 91 1 169 2 35 1 367 1 370 1 98 1 99 1 199 1 77 1 203 1 130 1 273 1 47 1 85 1 87 1 186 1 135 1 
114 1 118 1 59 1 332 1 32 1 61 1 208 2 235 1 284 1 6 2 258 1 91 1 169 2 35 1 367 1 370 1 98 1 99 1 199 1 77 1 203 1 40 1 130 1 23 1 273 1 47 1 85 1 87 1 186 1 135 1 
113 1 114 1 118 1 59 1 32 1 61 1 208 3 235 2 284 1 6 3 91 1 169 2 35 1 367 1 370 1 98 1 99 1 199 1 77 1 203 1 40 1 344 1 130 1 273 1 351 1 85 1 47 1 87 1 186 1 135 1 
113 1 114 1 118 1 59 1 32 1 61 1 208 2 235 2 284 1 6 2 91 1 169 2 35 1 367 1 370 1 98 1 99 1 77 1 203 1 40 1 344 1 85 1 87 1 186 1 135 1 
320 1 
88 2 279 1 282 1 335 6 137 5 3 1 5 1 196 1 289 2 197 1 97 2 144 1 146 2 54 1 18 1 203 2 343 2 204 1 55 1 245 1 151 1 154 1 352 1 354 2 301 1 115 1 163 1 61 2 209 2 260 1 64 1 261 2 313 1 366 3 35 2 65 1 66 5 314 1 316 1 69 1 37 1 171 2 74 1 220 4 173 2 79 1 326 1 374 2 223 2 46 1 375 2 226 1 87 1 329 1 135 1 
220 2 163 1 282 1 54 1 204 1 335 2 268 1 137 3 3 1 326 1 64 1 245 1 260 1 46 1 366 1 151 1 375 1 66 3 154 1 196 1 329 1 37 1 
171 1 220 3 163 1 282 1 54 1 204 1 335 1 268 1 137 3 3 1 326 1 55 1 374 1 64 1 245 1 260 1 46 1 366 1 151 1 66 3 154 1 196 1 329 1 37 1 
282 1 163 1 335 2 137 3 3 1 260 1 64 1 261 1 366 1 66 3 196 1 37 1 171 1 220 3 54 1 204 1 268 1 326 1 55 1 374 1 245 1 46 1 151 1 375 1 154 1 329 1 
88 2 2 1 282 2 189 1 335 7 137 5 3 1 5 1 196 1 239 1 197 1 97 2 146 1 201 1 54 2 204 2 343 2 102 1 55 1 245 1 150 1 151 2 154 1 352 1 155 1 354 2 250 1 163 1 364 1 64 1 260 1 261 4 366 3 66 5 37 1 69 1 171 1 73 1 74 1 220 4 173 2 268 1 79 1 326 1 271 1 374 2 223 1 46 1 375 4 329 1 379 1 
88 2 282 1 335 4 137 4 3 1 5 1 196 1 289 2 197 1 97 2 146 1 54 1 18 1 204 1 343 2 55 1 245 1 151 1 154 1 352 1 354 2 163 1 64 1 260 1 261 2 366 2 66 4 37 1 69 1 171 2 74 1 220 4 173 2 79 1 326 1 374 2 223 1 46 1 375 2 329 1 
88 2 282 1 163 1 335 4 137 4 3 1 5 1 260 1 64 1 261 2 366 2 66 4 196 1 239 1 69 1 37 1 197 1 97 2 171 1 73 1 74 1 146 1 220 4 173 2 54 1 343 2 204 1 79 1 326 1 55 1 374 2 245 1 223 1 46 1 151 1 375 2 154 1 352 1 329 1 155 1 354 2 
88 2 282 1 163 1 335 4 137 4 3 1 5 1 260 1 64 1 261 2 366 2 66 4 196 1 239 1 69 1 37 1 197 1 97 2 171 1 73 1 74 1 146 1 220 4 173 2 54 1 343 2 204 1 79 1 326 1 55 1 374 2 245 1 223 1 46 1 151 1 375 2 154 1 352 1 329 1 155 1 354 2 
88 2 282 2 2 1 189 1 335 2 137 4 3 1 5 1 238 1 196 1 289 2 197 1 97 2 146 1 54 2 201 1 204 2 104 2 345 2 55 1 245 1 151 2 154 1 352 1 250 1 163 1 364 1 307 1 64 1 260 1 366 2 66 4 37 1 69 1 217 1 73 1 171 1 220 2 79 1 326 1 271 1 223 1 46 1 329 1 379 1 
88 2 2 1 282 2 189 1 335 5 137 4 3 1 5 1 196 1 239 1 197 1 97 2 146 1 201 1 54 2 204 2 343 2 55 1 245 1 150 1 151 2 154 1 352 1 155 1 354 2 250 1 163 1 364 1 64 1 260 1 261 3 366 2 66 4 37 1 69 1 73 1 171 1 74 1 220 5 173 2 79 1 326 1 271 1 374 3 223 1 46 1 375 3 329 1 379 1 
88 2 2 1 282 2 189 1 335 5 137 4 3 1 5 1 196 1 239 1 197 1 97 2 146 1 201 1 54 2 204 2 343 2 55 1 245 1 150 1 151 2 154 1 352 1 155 1 354 2 250 1 163 1 364 1 64 1 260 1 261 3 366 2 66 4 37 1 69 1 73 1 171 1 74 1 220 5 173 2 79 1 326 1 271 1 374 3 223 1 46 1 375 3 329 1 379 1 
88 1 282 1 163 1 335 1 137 3 3 1 5 1 307 1 260 1 64 1 366 1 66 3 196 1 289 1 69 1 37 1 197 1 97 1 146 1 220 2 54 1 18 1 204 1 79 1 326 1 345 1 104 1 245 1 223 1 46 1 151 1 154 1 352 1 329 1 
113 1 278 1 355 1 301 2 356 2 302 2 280 2 115 1 282 1 250 1 61 8 360 1 209 2 337 1 364 1 168 2 121 1 287 1 65 3 35 7 368 1 264 2 95 2 145 1 54 1 203 8 204 1 21 2 295 4 323 1 23 1 297 2 56 1 226 1 87 2 28 1 276 1 135 2 277 1 
248 1 356 1 302 1 280 3 250 1 282 1 334 1 364 1 336 1 308 1 168 1 309 1 312 1 140 1 368 1 264 1 39 1 54 1 204 1 148 1 21 1 295 2 128 1 347 1 297 1 182 1 133 1 28 2 379 1 
248 1 356 1 48 1 302 1 116 1 280 6 337 1 257 1 168 1 308 2 9 2 123 1 368 3 264 1 13 1 39 1 21 1 295 2 128 1 148 1 347 2 297 1 133 1 28 3 353 1 247 1 
356 2 248 11 302 1 206 1 280 14 231 1 359 1 334 2 336 1 308 1 168 2 310 3 312 1 9 1 368 8 264 2 15 1 145 1 39 4 323 1 21 2 295 4 148 11 128 1 244 3 347 2 270 1 106 1 297 2 182 2 133 2 28 6 156 1 
301 1 355 1 356 1 302 1 280 2 282 2 250 1 90 1 61 1 209 1 255 1 364 1 168 1 259 1 312 1 9 1 65 1 35 1 368 1 264 1 340 1 125 1 70 1 145 1 39 1 54 1 203 1 204 2 295 2 21 1 323 1 82 1 222 1 297 1 87 1 28 1 184 1 135 1 
280 20 230 2 232 1 282 3 334 2 90 2 336 2 9 2 12 1 13 1 341 2 340 2 145 1 200 1 54 1 203 3 204 3 21 3 295 6 148 7 347 8 106 4 297 3 28 10 247 1 353 1 113 1 355 1 301 2 356 3 248 7 302 3 116 1 250 1 61 3 209 1 119 2 255 2 257 1 364 1 167 2 365 2 308 4 168 3 259 1 312 1 35 3 65 2 123 1 368 10 264 3 39 7 128 3 323 1 82 2 182 2 133 3 87 2 135 2 
248 1 356 1 302 1 280 2 39 1 334 1 148 1 295 2 21 1 363 1 337 1 347 1 168 1 106 1 297 1 368 2 264 1 133 1 
248 1 356 1 302 1 280 2 39 1 148 1 295 2 21 1 128 1 337 1 336 1 347 1 308 1 168 1 297 1 264 1 181 1 28 2 
356 1 248 2 302 1 280 4 334 1 337 1 336 1 168 1 308 1 368 2 264 1 39 2 21 1 295 2 148 2 128 1 347 2 106 1 297 1 182 1 133 1 28 2 
248 1 356 1 302 1 280 2 39 1 334 1 148 1 295 2 21 1 363 1 347 1 168 1 106 1 297 1 368 2 264 1 133 1 277 1 
248 1 356 1 302 1 280 2 39 1 148 1 295 2 21 1 128 1 336 1 347 1 308 1 168 1 297 1 264 1 181 1 28 2 277 1 
356 1 248 2 302 1 280 4 334 1 336 1 168 1 308 1 368 2 264 1 39 2 21 1 295 2 148 2 128 1 347 2 106 1 297 1 182 1 133 1 28 2 277 1 
248 2 356 1 302 1 280 4 39 2 334 1 128 1 148 2 295 2 21 1 336 1 308 1 347 2 168 1 106 1 297 1 368 2 264 1 182 1 133 1 28 2 
301 1 356 1 302 1 280 2 230 1 282 1 90 1 61 1 209 1 255 1 168 1 9 1 35 1 65 1 368 1 264 1 340 1 145 1 203 1 204 1 295 2 21 1 323 1 82 1 297 1 87 1 28 1 135 1 
301 1 356 1 302 1 280 2 282 1 61 1 209 1 168 1 262 1 9 1 35 1 65 1 368 1 264 1 340 1 317 1 290 1 145 1 203 1 204 1 295 2 21 1 323 1 82 1 297 1 87 1 28 1 135 1 
356 1 248 2 302 1 280 4 334 1 336 1 168 1 308 1 312 1 368 2 264 1 39 2 21 1 295 2 148 2 128 1 347 2 106 1 297 1 182 1 133 1 28 2 
301 1 248 2 356 1 302 1 280 4 230 1 282 1 334 1 90 1 61 1 255 1 336 1 167 1 308 1 168 1 35 1 65 1 368 2 264 1 340 1 39 2 203 1 204 1 128 1 148 2 295 2 21 1 82 1 347 2 23 1 106 1 297 1 182 1 133 1 28 2 87 1 135 1 
356 1 248 1 302 1 280 3 250 1 282 1 334 1 336 1 364 1 168 1 312 1 140 1 368 2 264 1 39 1 54 1 204 1 128 1 21 1 295 2 148 1 347 1 106 1 297 1 182 1 133 1 28 1 227 1 379 1 
280 19 231 1 359 1 334 3 165 1 236 2 336 3 308 3 168 2 310 1 368 9 264 2 126 1 318 1 267 1 21 2 295 4 128 3 175 1 244 2 347 6 348 1 106 3 131 2 297 2 153 1 182 3 133 3 28 10 299 1 
280 26 359 2 334 3 165 1 305 1 236 1 63 2 336 2 308 2 168 3 310 2 368 14 264 3 318 1 240 1 267 2 128 2 21 3 295 6 175 2 176 1 244 2 347 4 106 2 131 4 297 3 153 1 26 1 182 3 133 3 28 12 29 1 299 1 185 1 
116 1 280 41 231 1 359 3 334 4 165 1 305 1 236 1 257 1 63 1 336 4 308 4 168 3 310 3 123 1 368 20 264 3 13 1 126 1 318 1 240 1 267 2 21 3 295 6 128 5 175 1 176 1 244 4 347 8 106 4 131 4 297 3 153 1 376 1 26 1 182 4 133 5 28 21 29 1 299 1 247 1 353 1 185 1 
116 1 280 38 231 1 359 3 334 4 165 1 305 1 236 1 257 1 63 2 336 3 308 4 168 4 310 3 123 1 368 20 264 4 13 1 126 1 318 1 240 1 267 2 21 4 295 8 128 4 175 1 176 1 244 4 347 7 106 3 131 4 297 4 153 1 376 1 26 1 182 4 133 5 28 18 29 1 299 1 247 1 353 1 185 1 
116 1 206 2 280 52 231 2 359 2 334 7 165 1 305 1 236 1 257 1 63 1 336 7 308 7 168 2 310 4 123 1 368 27 264 2 13 1 318 1 240 1 267 1 21 2 295 4 128 8 175 1 176 1 244 4 347 14 106 7 131 4 297 2 153 1 26 1 182 7 133 8 28 25 29 1 299 1 247 1 353 1 185 1 
212 1 24 1 19 1 78 1 251 1 252 1 228 1 372 1 129 1 243 1 
101 1 157 1 
211 1 358 1 212 1 322 1 78 1 251 1 252 1 228 1 129 1 
171 1 127 1 17 1 78 1 252 1 251 1 137 1 372 1 34 2 242 1 129 1 243 1 285 1 237 1 212 1 24 1 66 1 228 1 
171 1 127 1 17 1 78 1 252 1 251 1 137 1 372 1 34 2 242 1 129 1 243 1 285 1 237 1 212 1 24 1 66 1 228 1 
171 1 127 1 17 1 78 1 252 1 251 1 137 1 372 1 34 2 242 1 129 1 243 1 285 1 237 1 212 1 24 1 66 1 228 1 
286 1 361 1 81 1 
286 1 361 1 81 1 
49 1 112 1 
49 1 361 1 112 1 
263 1 92 1 
331 1 282 2 250 2 251 1 252 1 137 1 34 1 364 2 285 1 311 1 9 1 263 1 212 1 66 1 92 1 214 1 67 1 369 1 17 1 54 2 78 1 101 1 204 2 22 1 129 1 228 1 157 1 
286 1 81 1 
49 1 361 1 112 1 
301 1 278 1 356 1 302 1 50 1 161 1 280 2 282 2 61 2 168 1 312 1 65 1 35 2 368 1 264 1 95 2 145 1 321 1 54 2 203 2 204 2 295 2 21 1 323 1 269 1 297 1 224 1 87 1 28 1 276 1 135 1 
301 1 114 1 115 1 203 1 61 1 209 1 65 1 35 1 139 1 226 1 124 1 87 1 135 1 380 1 
113 1 98 1 99 1 114 1 77 1 203 1 61 1 191 1 284 1 130 1 169 2 35 1 139 1 85 1 27 1 87 1 370 1 135 1 
113 1 98 1 99 1 114 1 77 1 203 2 61 2 191 1 284 1 130 1 169 2 23 1 35 2 139 1 85 1 87 1 27 1 370 1 135 1 
113 1 98 1 99 1 114 1 77 1 203 1 61 1 191 1 284 1 130 1 169 2 373 1 35 1 85 1 87 1 370 1 135 1 
283 1 
171 1 0 1 146 1 79 1 5 1 55 1 223 1 246 1 352 1 197 1 
38 5 171 5 219 1 146 5 173 5 334 2 119 1 128 2 336 2 223 5 182 2 133 2 289 10 134 5 229 2 
171 1 366 1 66 1 335 1 137 1 55 1 
301 1 279 1 115 1 61 4 209 2 335 4 137 3 5 2 313 2 194 2 65 1 35 4 366 2 66 3 11 1 316 1 197 2 144 2 146 2 203 4 79 1 324 1 223 2 45 1 179 1 226 1 352 2 87 1 135 1 
171 1 223 1 48 1 0 1 146 1 246 1 55 1 
335 1 137 1 5 1 366 1 66 1 289 1 197 1 171 2 74 1 146 1 173 1 343 1 79 1 55 1 223 1 352 1 354 1 
0 1 187 2 334 2 335 5 137 5 336 2 5 4 194 1 10 2 195 2 94 2 340 3 289 12 197 4 142 1 144 1 146 8 203 3 55 2 23 1 350 2 154 2 246 1 352 4 111 2 301 3 61 3 209 1 119 2 164 1 313 2 122 2 65 10 35 3 366 3 66 5 38 6 171 8 219 2 319 3 173 6 128 2 79 4 84 1 223 9 179 1 377 2 182 2 86 1 133 2 87 3 134 6 229 2 135 4 
359 1 334 2 335 1 137 1 305 1 336 2 5 2 8 1 310 1 313 1 366 1 66 1 289 6 197 2 371 1 144 1 38 5 240 1 171 5 219 1 146 5 173 3 128 2 79 2 176 1 244 1 55 2 223 8 26 1 182 2 352 2 133 2 134 5 185 1 229 2 
58 1 116 1 282 1 2 1 250 1 189 1 137 1 257 1 364 1 5 1 66 1 239 1 13 1 197 1 219 1 146 2 201 1 54 1 204 1 128 1 79 1 271 1 223 2 151 1 352 1 133 2 229 2 379 1 
301 1 356 1 302 1 280 1 230 1 282 3 250 2 189 1 61 1 90 1 209 1 255 1 364 2 168 1 9 1 35 1 65 1 93 1 264 1 340 1 54 2 203 1 204 3 323 1 21 1 295 2 82 1 297 1 28 1 87 1 135 1 379 2 
38 2 171 4 146 2 173 2 79 1 5 1 55 2 313 1 223 1 289 4 352 1 134 2 197 1 247 1 144 1 
291 1 263 1 24 1 78 1 251 1 
51 1 78 1 251 1 
51 1 78 1 251 1 
51 1 78 1 251 1 
333 1 78 1 251 1 
333 1 78 1 251 1 
333 1 78 1 251 1 
78 1 251 1 
212 1 252 1 
58 1 116 2 280 10 21 1 295 2 128 2 257 1 168 1 308 3 347 5 106 2 297 1 153 1 368 5 264 1 13 2 133 2 28 5 
280 2 334 1 295 2 21 1 168 1 347 1 106 1 297 1 153 1 368 2 264 1 133 1 
280 4 334 1 128 1 295 2 21 1 336 1 308 1 347 2 168 1 106 1 297 1 153 1 368 2 264 1 182 1 133 1 28 2 
280 3 116 1 295 6 21 3 63 1 168 3 308 1 347 2 106 1 297 3 153 1 25 1 368 1 264 3 13 1 28 2 126 1 
116 3 280 34 231 1 359 1 334 3 62 1 257 2 63 2 336 3 7 1 168 5 308 7 310 3 123 1 368 16 264 5 13 3 14 1 126 1 174 1 21 5 295 10 128 5 244 4 347 12 106 5 297 5 153 1 25 1 182 3 133 5 28 18 247 1 353 1 
280 8 116 1 359 1 257 1 168 1 308 2 310 1 123 1 368 4 264 1 13 1 128 1 21 1 295 2 244 1 347 2 297 1 153 1 133 1 28 4 247 1 185 1 353 1 
116 1 280 11 231 1 359 1 334 1 62 1 257 1 308 2 168 2 310 1 123 1 368 6 264 2 13 1 128 1 21 2 295 4 244 2 347 3 106 1 297 2 153 1 182 1 133 2 28 5 247 1 353 1 185 1 
116 1 280 19 359 1 334 2 62 1 305 1 257 1 336 2 63 1 168 3 308 3 310 1 123 1 368 9 264 3 13 1 240 1 21 3 295 6 128 3 176 1 244 1 347 4 106 1 297 3 153 1 26 1 182 2 133 3 28 10 247 1 353 1 185 1 
116 1 280 17 359 1 334 2 62 1 305 1 257 1 63 1 336 1 168 3 308 3 310 1 123 1 368 10 264 3 13 1 240 1 21 3 295 6 128 2 244 1 176 1 347 5 106 2 297 3 153 1 26 1 182 2 133 3 28 7 247 1 353 1 185 1 
280 8 116 1 359 1 257 1 168 1 308 2 310 1 123 1 368 4 264 1 13 1 128 1 21 1 295 2 244 1 347 2 297 1 153 1 133 1 28 4 247 1 185 1 353 1 
280 12 359 1 334 2 305 1 336 2 168 1 308 1 310 1 368 6 264 1 240 1 21 1 295 2 128 2 244 1 176 1 347 2 106 1 297 1 153 1 26 1 182 2 133 2 28 6 185 1 
116 1 280 18 359 1 334 2 62 1 305 1 257 1 336 1 63 2 168 4 308 3 310 1 123 1 368 10 264 4 13 1 240 1 21 4 295 8 128 2 176 1 244 1 347 5 106 2 297 4 153 1 26 1 182 2 133 3 28 8 247 1 353 1 185 1 
280 16 359 1 334 3 305 1 336 2 63 2 168 4 308 3 310 1 368 9 264 4 126 1 240 1 21 4 295 8 128 2 176 1 244 1 347 6 106 3 297 4 153 1 26 1 182 3 133 3 28 7 185 1 
280 7 116 3 128 1 257 1 308 3 347 6 106 3 123 1 368 3 13 3 133 1 28 4 353 2 
116 1 280 18 359 1 334 2 305 1 257 1 336 1 63 2 168 4 308 3 310 1 123 1 368 10 264 4 13 1 126 1 240 1 21 4 295 8 128 2 176 1 244 1 347 4 106 1 297 4 153 1 26 1 182 2 133 3 28 8 247 1 353 1 185 1 
280 8 116 1 128 1 295 4 21 2 257 1 63 1 347 3 308 2 168 2 106 1 297 2 123 1 368 4 264 2 13 1 133 1 28 4 247 1 353 1 
48 1 116 1 280 6 128 1 257 1 308 2 347 2 123 1 368 3 13 1 133 1 28 3 247 1 353 1 
280 4 334 1 128 1 295 2 21 1 62 1 336 1 308 1 347 2 168 1 106 1 297 1 368 2 264 1 182 1 133 1 28 2 
280 7 231 1 359 1 334 1 128 1 336 1 244 2 308 1 347 2 310 1 106 1 368 3 182 1 133 1 28 4 
116 2 280 23 206 1 231 1 334 2 257 1 336 2 63 2 308 5 168 2 310 2 123 1 368 11 264 2 13 2 128 3 295 4 21 2 244 2 347 9 270 1 106 4 297 2 25 1 182 2 133 3 28 12 247 1 353 1 
280 1 28 1 244 1 
310 1 280 1 368 1 
280 6 334 1 119 1 21 1 295 2 128 1 62 1 336 1 168 1 347 3 308 2 106 1 297 1 368 3 264 1 182 1 133 1 28 3 
280 12 359 1 334 2 305 1 336 2 168 1 308 1 310 1 368 6 264 1 240 1 21 1 295 2 128 2 244 1 176 1 347 2 106 1 297 1 153 1 26 1 182 2 133 2 28 6 185 1 
280 6 116 1 128 1 257 1 308 1 347 2 106 1 368 3 13 1 133 1 28 3 
116 1 280 3 295 2 21 1 63 1 347 2 308 1 168 1 106 1 297 1 123 1 368 1 25 1 264 1 13 1 28 2 353 1 
9 1 349 1 282 1 54 1 204 1 326 1 381 1 
233 1 282 1 54 1 204 1 326 1 42 1 9 1 349 1 225 1 30 1 158 1 381 1 
301 1 357 1 115 1 75 1 203 4 61 4 209 1 23 1 35 4 65 1 226 1 87 1 135 1 
301 1 89 1 202 1 203 2 61 2 325 1 52 1 194 1 35 2 65 1 12 1 340 1 87 1 135 2 
169 1 99 1 35 1 61 1 203 1 209 1 87 1 284 1 370 1 135 1 
301 1 278 1 113 1 23 1 65 1 35 2 61 2 203 2 87 1 135 1 269 1 
278 1 301 2 115 1 75 1 203 5 61 5 209 1 23 1 121 1 194 1 35 4 65 3 56 1 226 1 87 2 135 2 
278 1 301 2 115 1 1 1 75 1 203 5 61 5 209 1 23 1 121 1 194 1 35 4 65 3 226 1 87 2 135 2 
301 1 48 1 115 1 65 1 35 1 226 1 61 1 203 1 209 1 87 1 135 1 
301 1 355 1 250 1 282 2 54 1 203 1 61 1 204 2 209 1 255 1 82 1 364 1 9 1 65 1 35 1 340 1 87 1 135 1 
355 1 301 2 187 1 282 2 250 2 61 1 255 1 364 1 64 1 9 1 194 1 35 1 65 3 94 1 340 2 54 2 203 1 204 2 82 1 46 1 151 1 87 1 135 1 
355 1 301 2 357 1 187 1 282 2 250 2 61 2 364 1 64 1 262 1 9 1 194 1 35 2 65 3 94 1 340 2 54 2 203 2 204 2 82 1 46 1 151 1 87 1 135 1 
301 1 171 1 357 1 187 1 162 1 319 1 203 3 61 3 209 1 335 1 137 2 55 1 122 1 194 1 288 1 35 3 65 4 66 2 154 1 94 1 340 1 87 1 135 1 
301 1 171 1 357 1 187 1 319 1 203 3 61 3 209 1 335 1 137 2 55 1 122 1 194 1 35 3 65 4 66 2 195 1 154 1 94 1 340 1 87 1 135 1 
287 1 35 1 61 1 203 1 87 1 135 1 
113 1 278 1 301 2 89 1 203 7 61 7 360 1 209 2 23 1 121 1 287 1 52 1 35 6 65 3 56 1 95 1 86 1 340 1 87 2 143 1 135 3 
301 1 355 1 248 1 356 2 302 2 280 6 116 1 230 1 282 2 250 1 61 1 90 1 255 1 257 1 364 1 167 1 308 2 168 2 312 1 9 2 65 1 35 1 123 1 368 3 264 2 13 1 340 1 341 1 39 1 321 1 54 1 203 1 204 2 148 1 128 1 295 4 21 2 82 1 347 2 23 1 297 2 133 1 28 3 87 1 247 1 353 1 135 1 
0 1 61 1 209 1 335 2 137 3 5 2 311 1 122 1 35 1 10 1 65 2 366 1 66 3 195 1 197 2 171 1 146 1 319 1 203 1 79 2 55 1 223 1 350 1 179 1 154 1 377 1 246 1 352 2 
301 1 203 2 61 2 164 1 23 1 122 1 287 1 35 2 65 2 86 1 340 1 87 1 135 2 
301 1 355 1 250 1 282 2 54 1 203 1 61 1 204 2 209 1 82 1 364 1 262 1 9 1 65 1 35 1 340 1 87 1 135 1 
301 1 89 1 203 1 61 1 52 1 194 1 35 1 65 1 86 1 340 1 87 1 143 1 135 2 
9 1 41 1 83 1 31 1 53 1 
171 1 292 1 117 1 218 1 100 1 137 2 41 2 55 1 83 2 64 1 260 1 311 1 9 1 46 1 151 1 66 2 154 1 53 1 31 2 
161 1 50 1 282 1 54 1 204 1 41 1 224 1 31 1 53 1 
292 1 117 1 53 1 
118 1 59 1 273 1 332 1 47 1 208 1 40 1 6 1 
71 1 118 2 59 2 208 4 33 1 40 3 235 2 103 1 6 4 328 1 273 1 177 1 47 1 330 1 
118 1 332 1 59 1 221 1 208 2 40 1 235 1 6 2 273 1 47 1 183 1 96 1 
71 1 332 1 59 1 118 1 208 3 40 1 103 2 6 3 192 1 273 1 177 2 47 1 
180 1 40 2 215 1 138 2 
273 1 332 1 47 1 208 1 253 1 6 1 
159 1 118 1 59 1 273 1 332 1 47 1 208 2 40 1 235 1 6 2 
339 1 
118 1 59 1 273 1 332 1 47 1 208 1 40 1 6 1 
48 1 118 1 59 1 40 1 
118 1 59 1 273 1 47 1 208 1 40 1 6 1 
91 1 186 1 6 1 
71 1 149 1 118 1 59 1 273 1 332 1 177 1 47 1 208 3 40 1 103 2 6 3 
346 1 273 1 47 1 208 2 235 1 6 1 
169 1 328 1 273 1 332 1 77 1 47 1 208 1 40 1 4 1 370 1 6 1 
118 1 273 1 332 1 47 1 208 1 40 1 6 1 
118 2 59 1 273 1 332 1 47 1 208 1 6 1 
118 1 332 1 304 1 208 2 40 1 6 2 273 2 152 1 47 2 300 1 
159 1 118 1 59 1 332 1 294 1 208 3 40 2 235 2 6 3 328 1 273 1 47 1 330 1 
99 1 118 1 59 1 332 1 77 1 208 2 40 1 235 1 6 2 169 2 273 1 47 1 85 1 216 1 370 1 
346 1 170 1 273 1 332 1 47 1 208 2 235 1 6 1 
159 1 332 1 59 1 118 1 208 3 40 1 235 1 103 1 6 3 273 1 47 1 
328 1 33 1 40 1 330 1 
118 1 40 1 

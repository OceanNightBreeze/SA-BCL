#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (4,190) (4,190) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (4,190) (4,190) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (4,190) (4,190) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (4,190) (4,190) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
272 1 4 1 223 1 263 1 347 1 220 1 169 1 83 1 58 1 34 1 190 1 
272 1 4 1 223 1 263 1 347 1 220 1 169 1 83 1 58 1 34 1 190 1 
272 1 4 1 223 1 263 1 347 1 220 1 169 1 83 1 58 1 34 1 190 1 
272 1 4 1 223 1 263 1 347 1 220 1 169 1 83 1 58 1 34 1 190 1 
268 3 72 1 341 1 231 1 220 4 136 1 111 1 58 4 356 2 138 1 223 1 64 1 224 2 347 1 183 1 169 1 350 3 134 1 
341 1 78 1 220 2 1 1 16 1 58 2 83 1 138 1 223 1 347 1 183 1 169 1 350 1 134 1 381 1 34 1 
268 1 72 1 341 1 220 3 58 3 223 2 224 1 347 1 169 2 350 2 134 1 195 1 34 1 
268 7 220 9 129 1 58 9 111 1 356 2 223 2 224 4 321 1 64 1 182 1 183 1 134 1 34 1 72 3 341 1 231 1 285 1 136 1 138 1 347 1 169 2 350 5 195 1 
268 7 220 9 129 1 58 9 111 1 356 2 223 2 224 4 321 1 64 1 182 1 183 1 134 1 34 1 72 3 341 1 231 1 285 1 136 1 138 1 347 1 169 2 350 5 195 1 
289 1 232 1 188 1 
361 2 289 1 312 1 
273 2 326 2 322 2 310 1 143 1 254 2 157 2 162 2 
51 1 318 1 177 1 273 2 5 2 153 2 276 1 115 1 322 2 154 1 225 1 67 1 133 1 90 1 33 1 301 1 254 2 70 1 157 3 368 1 326 3 305 2 159 1 14 2 187 1 15 1 310 1 162 2 216 1 346 1 46 1 23 1 335 1 378 1 143 1 105 1 380 2 
61 1 273 1 326 1 322 1 310 1 367 1 254 1 157 1 162 1 28 1 
326 1 25 1 232 1 351 1 164 1 273 1 61 1 102 1 139 1 113 1 289 1 104 1 323 1 157 1 
326 1 25 1 232 1 351 1 164 2 162 1 273 1 61 1 113 1 289 1 104 2 322 1 323 1 254 1 157 1 
197 1 96 1 104 1 251 1 164 1 
197 1 289 1 232 1 96 1 12 1 104 2 57 1 164 2 
96 1 104 1 164 1 
197 1 326 1 310 1 164 1 28 1 162 1 61 1 273 1 104 1 322 1 206 1 367 1 254 1 157 1 
289 1 
197 1 289 1 232 1 96 1 12 1 104 2 296 1 164 2 
340 2 197 2 247 2 144 1 232 1 94 1 96 2 352 1 12 1 120 1 284 1 164 5 42 1 289 1 103 1 104 5 7 1 24 1 324 2 
188 1 143 1 
326 2 161 1 162 1 273 2 322 1 143 2 254 1 157 2 246 1 
165 1 244 1 266 1 
326 1 305 1 51 1 177 1 187 1 5 1 153 1 276 1 346 1 20 1 378 1 154 1 225 1 67 1 143 1 157 1 
145 1 326 2 305 1 51 1 177 1 187 1 162 1 273 1 5 1 276 1 153 1 346 1 225 1 154 1 141 1 378 1 67 1 254 1 266 1 157 2 
145 2 326 5 148 1 186 1 162 4 359 1 273 5 139 1 322 1 141 1 143 1 254 4 157 5 246 1 
61 1 273 2 181 1 326 2 367 1 254 2 157 2 162 2 
145 1 273 3 326 3 322 1 143 1 254 3 157 3 162 3 
61 1 273 1 326 1 367 1 254 1 157 1 162 1 
61 1 273 1 326 1 161 1 322 1 254 1 157 1 162 1 246 1 
145 1 25 1 51 1 250 1 351 1 177 1 273 3 61 1 5 1 276 1 113 1 153 1 115 1 322 2 225 1 154 1 67 1 133 1 33 1 323 1 254 3 70 1 157 4 368 1 326 4 305 1 159 1 14 1 187 1 310 1 162 3 164 1 216 1 346 1 104 1 23 1 335 1 141 1 378 1 143 1 105 1 380 2 245 1 246 1 
273 2 145 1 326 2 139 1 148 1 143 1 254 1 157 2 162 1 
145 2 326 3 25 1 351 1 164 1 162 3 61 1 273 3 113 1 289 1 104 1 322 1 141 1 349 1 323 1 254 3 245 1 246 1 157 3 
145 1 326 2 162 2 165 1 273 2 322 1 254 2 246 1 157 2 266 1 
5 1 326 1 276 1 305 1 153 1 346 1 51 1 177 1 187 1 225 1 154 1 378 1 67 1 143 1 157 1 
93 1 5 1 326 1 276 1 305 1 153 1 346 1 177 1 187 1 225 1 378 1 67 1 143 1 252 1 157 1 
80 1 297 1 87 1 275 1 115 2 301 2 70 1 303 1 368 1 14 4 212 1 73 1 374 1 259 1 121 1 165 2 261 1 216 1 23 1 335 1 244 2 105 1 380 2 266 2 
61 1 273 1 326 1 181 1 25 1 254 1 157 1 162 1 
317 1 222 1 
317 1 222 1 
366 1 372 1 
366 1 372 1 
366 1 372 1 
317 1 365 1 222 1 
317 1 365 1 222 1 
317 1 168 1 222 1 
317 2 253 1 214 1 366 1 372 1 222 2 
317 1 365 1 222 1 
317 1 353 1 222 1 
317 1 353 1 222 1 
317 1 353 1 222 1 
317 1 128 1 295 1 130 1 222 1 273 2 227 1 228 1 156 1 254 2 157 2 326 2 370 1 97 1 162 2 164 1 376 1 241 1 333 1 104 1 168 1 143 1 49 1 314 1 
53 1 317 2 213 1 309 1 2 1 214 1 222 2 164 2 345 1 376 2 262 1 289 1 333 2 104 2 334 2 228 2 227 3 156 1 49 2 
138 1 183 1 136 1 
138 1 183 1 381 1 
166 1 205 1 183 3 136 2 381 1 203 1 
166 1 183 2 344 1 136 1 381 1 203 1 
166 1 183 2 136 1 381 1 203 2 
247 1 197 4 200 2 80 1 128 1 130 1 56 1 82 2 87 1 361 3 29 1 7 2 302 1 324 1 340 1 370 1 94 1 96 1 232 1 342 1 233 1 12 1 212 1 284 3 164 5 121 1 312 1 289 2 242 1 104 5 379 2 315 1 
106 1 197 7 247 2 339 1 80 3 27 1 56 2 82 6 251 5 87 3 361 9 29 1 279 5 7 6 32 1 209 1 302 2 324 2 340 2 185 1 370 4 96 6 232 1 94 1 12 1 212 3 284 8 164 9 121 3 312 3 289 5 242 3 104 9 24 1 379 6 
197 2 247 1 200 1 80 1 56 1 82 2 87 1 361 4 7 2 302 1 324 1 340 1 370 1 232 1 342 1 233 1 212 1 284 3 164 3 121 1 289 3 312 2 242 1 104 3 24 1 379 2 
106 1 247 1 197 3 200 2 80 2 27 1 56 1 82 4 87 2 361 7 7 4 302 1 324 1 340 1 185 1 370 2 232 1 342 1 233 1 212 2 284 5 164 4 121 2 289 4 312 3 242 2 104 4 379 4 24 1 
336 1 187 1 188 1 
198 1 187 1 
237 1 
346 1 187 1 67 1 
271 1 187 1 
346 1 187 1 
336 2 98 1 151 1 187 3 237 1 346 1 67 1 
303 2 10 1 107 2 219 1 149 1 80 1 38 1 14 7 74 1 39 1 259 3 87 1 115 3 89 1 301 4 170 1 69 1 
303 2 10 1 107 2 219 1 149 1 80 1 38 1 14 7 74 1 39 1 259 3 87 1 115 3 89 1 301 4 170 1 69 1 
303 2 10 1 107 2 219 1 149 1 80 1 38 1 14 7 74 1 39 1 259 3 239 1 87 1 115 3 89 1 301 4 170 1 69 1 
107 3 219 2 149 1 269 1 80 4 54 1 85 1 112 1 86 4 87 4 277 3 115 15 89 2 301 16 69 1 35 1 10 1 303 5 368 1 14 31 38 2 212 3 39 2 74 5 259 10 121 3 192 1 216 1 242 3 22 1 335 1 105 1 380 2 170 1 
107 2 219 1 149 1 80 1 87 1 115 4 31 1 89 1 301 5 69 1 303 3 368 2 14 9 38 1 74 1 39 1 259 4 192 1 216 2 335 2 105 2 380 4 170 1 172 1 
268 1 50 1 125 1 294 1 338 1 220 2 58 2 5 1 223 1 62 1 153 1 276 1 183 2 205 1 225 1 134 1 34 1 184 1 341 1 305 1 234 1 136 1 40 1 138 1 238 1 347 1 292 1 169 1 350 1 381 1 
268 2 50 1 125 1 294 1 338 1 220 3 58 3 357 1 5 1 223 1 62 1 153 1 276 1 205 1 183 2 300 1 225 1 134 1 34 1 184 1 341 1 305 1 307 1 136 1 40 1 138 1 238 1 169 1 350 1 381 1 
268 2 50 1 125 1 338 1 220 2 58 2 357 1 5 1 153 1 276 1 183 2 205 1 225 1 134 1 34 1 184 1 341 1 305 1 307 1 136 1 40 1 238 1 138 1 350 1 381 1 
50 2 125 2 79 1 338 2 220 1 58 1 5 1 223 1 153 1 276 1 225 1 300 1 34 2 305 1 187 1 236 1 163 1 137 1 101 1 346 1 45 1 378 1 169 1 
50 1 125 1 294 1 338 1 220 1 58 1 5 1 223 1 62 1 153 1 276 1 183 2 205 1 225 1 34 1 184 1 305 1 307 1 234 1 136 1 40 1 138 1 238 1 347 1 169 1 381 1 
332 1 
247 1 52 2 56 1 5 2 60 1 61 1 153 2 113 1 7 2 157 1 158 1 340 1 255 4 305 2 12 3 257 2 163 1 164 5 19 2 312 2 346 1 348 2 122 2 77 1 316 1 176 1 79 1 25 1 351 1 81 1 361 2 273 1 276 1 362 2 278 1 225 1 323 1 324 1 325 1 326 1 232 1 96 6 94 1 284 2 187 1 286 2 99 1 191 1 102 1 139 1 289 2 104 5 47 1 378 2 243 1 
176 1 25 1 351 1 296 1 81 1 273 1 60 1 61 1 113 1 323 1 157 1 326 1 255 2 96 2 12 1 286 1 164 3 102 1 139 1 104 3 243 1 77 1 
176 1 25 1 351 1 296 1 81 1 273 1 60 1 61 1 113 1 323 1 157 1 326 1 255 3 96 1 232 1 12 1 164 3 19 1 102 1 139 1 289 1 104 3 243 1 77 1 
176 1 25 1 351 1 296 1 81 1 273 1 60 1 61 1 113 1 362 1 323 1 157 1 326 1 255 3 96 2 232 1 12 1 286 1 164 3 19 1 102 1 139 1 289 1 104 3 243 1 77 1 
247 1 176 1 25 1 52 2 351 1 296 1 81 1 273 1 60 1 61 1 113 1 362 4 116 1 7 1 323 1 324 1 157 1 325 1 340 1 37 1 326 1 255 6 94 1 232 5 96 7 12 3 284 1 257 2 286 4 287 1 164 5 19 4 288 1 102 1 139 1 312 2 289 5 104 5 348 2 122 2 243 1 77 1 218 1 316 1 
247 1 52 2 61 1 60 1 113 1 7 1 157 1 340 1 255 4 12 2 257 2 164 4 19 2 312 2 122 2 348 2 77 1 316 1 176 1 25 1 351 1 81 1 273 1 361 2 362 2 323 1 324 1 325 1 326 1 94 1 96 4 232 1 284 1 286 2 102 1 191 1 139 1 289 2 104 4 243 1 
247 1 176 1 25 1 52 2 351 1 81 1 273 1 60 1 61 1 113 1 362 2 116 1 7 1 323 1 157 1 324 1 325 1 340 1 37 1 326 1 255 4 232 1 96 4 94 1 12 2 284 1 286 2 257 2 164 4 19 2 102 1 139 1 289 1 312 2 104 4 348 2 122 2 243 1 77 1 218 1 316 1 
247 1 176 1 25 1 52 2 351 1 81 1 273 1 60 1 61 1 113 1 362 2 116 1 7 1 323 1 157 1 324 1 325 1 340 1 37 1 326 1 255 4 232 1 96 4 94 1 12 2 284 1 286 2 257 2 164 4 19 2 102 1 139 1 289 1 312 2 104 4 348 2 122 2 243 1 77 1 218 1 316 1 
247 1 176 1 25 1 351 1 270 1 81 1 180 1 361 2 274 1 273 1 60 1 61 1 113 1 362 2 116 1 7 1 323 1 157 1 324 1 325 1 340 1 326 1 255 4 232 1 96 4 94 1 12 2 13 2 284 1 286 2 257 2 18 2 164 4 19 2 102 1 139 1 289 1 104 4 122 2 243 1 77 1 
247 1 176 1 25 1 52 2 351 1 81 1 273 1 60 1 61 1 113 1 362 3 116 1 7 1 323 1 324 1 157 1 325 1 340 1 37 1 326 1 255 5 232 1 94 1 96 5 12 2 284 1 257 2 286 3 164 4 19 3 288 1 102 1 139 1 289 1 312 2 104 4 348 2 122 2 243 1 77 1 218 1 316 1 
247 1 176 1 25 1 52 2 351 1 81 1 273 1 60 1 61 1 113 1 362 3 116 1 7 1 323 1 324 1 157 1 325 1 340 1 37 1 326 1 255 5 232 1 94 1 96 5 12 2 284 1 257 2 286 3 164 4 19 3 288 1 102 1 139 1 289 1 312 2 104 4 348 2 122 2 243 1 77 1 218 1 316 1 
247 1 61 1 60 1 113 1 7 1 157 1 340 1 255 4 13 2 12 2 257 2 18 2 164 4 19 2 122 2 77 1 176 1 25 1 351 1 81 1 274 1 273 1 361 2 362 2 323 1 324 1 325 1 326 1 94 1 96 4 232 1 284 1 286 2 102 1 191 1 139 1 289 1 104 4 243 1 
107 1 219 1 149 1 80 1 87 1 115 3 301 3 69 1 70 1 303 2 368 1 14 6 188 1 39 1 259 2 165 1 261 1 216 1 23 1 335 1 244 1 105 1 380 2 143 2 170 1 266 1 
318 1 269 1 80 2 112 1 86 3 358 1 87 1 277 3 115 6 133 1 301 8 70 2 303 1 368 2 283 1 256 1 14 14 212 2 343 1 74 1 259 2 121 1 375 1 165 4 216 2 242 2 23 1 335 2 244 11 143 1 105 2 380 4 266 11 
145 1 51 1 318 1 177 1 202 1 59 1 5 1 273 1 276 1 153 1 115 1 225 1 154 1 67 1 133 1 301 1 254 1 70 1 157 2 368 1 326 2 305 1 256 1 14 2 187 1 162 1 165 1 44 1 346 1 216 1 20 1 23 1 378 1 335 1 141 1 143 1 380 2 105 1 
107 1 145 1 248 2 51 2 149 1 5 3 153 3 115 10 154 2 67 2 8 2 301 10 69 1 254 1 157 3 70 3 303 6 305 3 256 1 14 20 212 2 307 1 74 4 215 1 162 1 259 10 121 2 165 7 216 3 346 2 23 3 170 1 266 7 174 1 219 1 318 1 80 3 177 2 87 3 273 1 276 2 225 2 133 1 33 2 368 3 326 3 327 2 187 2 39 1 189 1 242 2 291 2 378 1 141 1 335 3 244 7 143 2 105 3 380 6 
145 1 79 1 318 1 179 1 360 1 273 1 5 8 276 2 153 7 88 1 115 1 225 2 226 1 155 1 133 1 91 1 301 1 254 1 157 1 70 2 368 2 326 1 305 8 306 1 14 2 307 1 187 3 15 2 162 1 163 1 261 1 216 2 346 2 23 2 378 2 335 2 292 1 105 2 380 4 
80 1 87 1 273 1 115 2 322 1 301 1 254 1 70 1 157 1 303 1 368 1 326 1 256 1 212 1 14 3 259 1 162 1 121 1 165 1 216 1 242 1 23 1 335 1 244 1 105 1 380 2 266 1 246 1 173 1 
368 1 14 2 212 1 80 1 73 1 74 1 259 1 165 1 261 1 216 1 23 1 335 1 244 1 380 2 105 1 301 2 266 1 70 1 
303 1 368 1 14 2 297 1 259 1 121 1 87 1 165 1 261 1 216 1 23 1 115 2 335 1 244 1 380 2 105 1 266 1 70 1 
80 1 87 1 115 2 301 2 70 1 303 1 368 1 212 1 14 4 74 1 259 2 121 1 165 2 261 1 216 1 242 1 23 1 335 1 244 2 105 1 380 2 266 2 
368 1 14 2 212 1 80 1 73 1 74 1 179 1 259 1 165 1 216 1 23 1 335 1 244 1 380 2 105 1 301 2 266 1 70 1 
303 1 368 1 14 2 179 1 297 1 259 1 121 1 87 1 165 1 216 1 23 1 115 2 335 1 244 1 380 2 105 1 266 1 70 1 
80 1 179 1 87 1 115 2 301 2 70 1 303 1 368 1 212 1 14 4 74 1 259 2 121 1 165 2 216 1 242 1 23 1 335 1 244 2 105 1 380 2 266 2 
80 1 87 1 115 2 301 2 70 1 303 1 368 1 14 4 212 1 74 1 259 2 121 1 165 2 216 1 242 1 23 1 335 1 244 2 105 1 380 2 266 2 
51 1 318 1 177 1 5 1 276 1 153 1 115 1 225 1 154 1 67 1 33 1 133 1 301 1 157 1 70 1 368 1 326 1 305 1 14 2 187 1 346 1 216 1 23 1 378 1 335 1 143 1 380 2 105 1 
318 1 177 1 252 1 5 1 276 1 153 1 115 1 225 1 67 1 133 1 301 1 157 1 70 1 93 1 368 1 326 1 305 1 14 2 187 1 346 1 216 1 23 1 378 1 335 1 143 1 380 2 105 1 267 1 
80 1 87 1 115 2 301 2 70 1 303 1 368 1 256 1 212 1 14 4 74 1 259 2 121 1 165 2 216 1 242 1 23 1 335 1 244 2 105 1 380 2 266 2 
51 1 80 1 177 1 87 1 5 1 276 1 153 1 115 2 225 1 154 1 67 1 33 1 301 2 157 1 70 1 303 1 368 1 327 1 326 1 305 1 14 4 212 1 187 1 74 1 259 2 121 1 165 2 346 1 216 1 242 1 23 1 335 1 244 2 292 1 380 2 105 1 266 2 
80 1 87 1 273 1 115 1 322 1 301 2 254 1 70 1 157 1 368 1 326 1 119 1 256 1 212 1 14 3 74 1 259 1 162 1 121 1 165 1 216 1 242 1 23 1 335 1 244 1 105 1 380 2 246 1 266 1 
269 1 80 3 112 1 86 2 87 3 152 1 277 1 204 1 30 2 115 10 208 1 301 9 303 3 304 2 368 2 210 1 14 19 212 3 74 3 41 1 259 6 121 3 264 1 216 2 242 3 335 2 75 1 105 2 380 4 172 1 
80 3 112 2 86 2 87 2 152 2 277 2 204 1 30 4 115 12 207 1 92 1 301 14 303 2 304 1 368 3 95 1 211 1 14 26 212 3 308 1 74 2 41 2 259 4 121 2 192 2 264 1 216 3 242 3 194 1 335 3 75 1 105 3 380 6 172 1 
107 1 149 1 112 3 152 1 204 1 115 21 207 1 301 20 208 1 69 1 303 4 304 1 11 1 211 1 212 4 14 41 308 1 74 4 259 8 121 4 264 1 216 3 75 1 170 1 172 1 219 1 80 5 269 1 86 4 87 5 277 3 30 4 92 1 368 3 95 1 39 1 41 2 192 1 242 4 194 1 335 3 380 6 105 3 
107 1 219 1 149 1 269 1 80 5 112 3 86 4 87 4 152 1 277 3 204 1 30 4 115 18 207 1 208 1 92 1 301 20 69 1 303 4 304 1 368 4 11 1 95 1 211 1 14 38 212 4 308 1 39 1 74 3 41 2 259 7 121 3 192 2 264 1 216 4 242 4 194 1 335 4 75 1 105 4 380 8 170 1 172 1 
107 1 219 1 149 1 269 2 80 8 112 2 86 4 87 8 152 1 277 4 204 1 30 4 115 25 207 1 92 1 301 27 69 1 303 7 304 1 368 2 95 1 211 1 14 52 212 7 308 1 39 1 74 7 41 1 259 14 121 7 375 2 192 1 264 1 216 2 242 7 194 1 335 2 75 1 105 2 380 4 170 1 172 1 
369 1 376 1 317 1 333 1 213 1 2 1 214 1 228 1 222 1 49 1 
295 1 168 1 
260 1 376 1 199 1 317 1 333 1 329 1 228 1 222 1 49 1 
365 1 330 1 
353 1 48 1 253 1 
53 1 317 1 213 1 309 1 2 1 214 1 222 1 164 1 376 1 262 1 289 1 104 1 333 1 334 1 228 1 227 2 156 1 49 1 
53 1 317 1 213 1 309 1 2 1 214 1 222 1 164 1 376 1 262 1 289 1 104 1 333 1 334 1 228 1 227 2 156 1 49 1 
53 1 317 1 213 1 309 1 2 1 214 1 222 1 164 1 376 1 262 1 289 1 104 1 333 1 334 1 228 1 227 2 156 1 49 1 
253 1 365 1 330 1 
253 1 365 1 330 1 
353 1 48 1 
353 1 48 1 253 1 
241 1 314 1 
197 1 53 1 317 1 128 1 295 1 130 1 222 1 273 2 228 1 227 1 254 2 157 2 229 1 326 2 370 1 97 1 164 1 162 2 376 1 241 1 104 1 333 1 334 1 168 1 143 1 49 1 314 1 
318 1 55 1 178 1 5 2 273 2 276 1 153 2 115 1 225 1 132 1 133 1 91 1 301 1 70 1 157 2 368 1 326 2 305 2 306 1 256 1 14 2 187 1 15 2 193 1 346 1 216 1 23 1 335 1 380 2 105 1 124 1 
184 1 125 1 305 2 126 1 160 1 307 1 136 1 84 1 138 1 238 1 5 2 62 1 276 1 153 2 205 1 183 2 225 1 292 1 381 1 
184 1 125 1 305 1 230 1 126 1 307 1 136 1 138 1 238 1 5 1 62 1 153 1 276 1 205 1 183 2 225 1 381 1 
125 1 305 1 79 1 187 1 84 1 163 1 137 1 5 1 276 1 153 1 346 1 217 1 225 1 378 1 
184 1 125 1 305 1 126 1 160 1 307 1 136 1 84 1 138 1 238 1 5 1 62 1 153 1 276 1 205 1 183 2 225 1 381 1 
364 1 
42 1 289 1 232 1 120 1 284 1 188 1 7 1 
247 1 52 1 361 1 7 1 324 1 340 1 94 1 96 1 232 1 12 1 284 1 164 1 312 1 289 2 104 1 348 1 316 1 
247 4 336 2 146 3 198 3 150 2 151 1 56 2 5 3 153 3 113 2 67 3 7 8 8 2 117 2 340 4 305 3 12 3 120 1 212 2 17 2 164 5 121 2 346 3 312 6 313 1 123 2 175 2 80 2 354 1 82 6 271 2 87 2 361 12 276 3 363 1 225 4 324 4 135 1 232 2 94 4 96 5 284 9 187 10 373 1 42 1 289 8 242 2 290 2 104 5 47 1 140 2 378 1 292 1 379 6 
247 2 146 2 147 1 201 1 80 2 56 1 82 5 112 1 86 1 87 2 361 6 277 1 7 5 207 1 117 1 324 2 340 2 95 1 96 1 94 2 232 2 12 1 211 1 212 2 284 8 308 1 164 1 121 2 312 3 289 5 242 2 104 1 47 1 194 1 379 5 
247 1 146 2 219 1 149 1 80 2 28 1 87 1 61 1 273 1 322 1 7 2 206 1 367 1 117 1 254 1 157 1 324 1 340 1 326 1 94 1 328 1 284 2 310 1 39 1 164 1 162 1 104 1 218 1 
340 1 247 1 94 1 232 1 120 1 284 1 42 1 289 1 7 1 324 1 
146 2 212 2 80 2 284 5 82 5 121 2 87 2 361 10 312 5 289 5 242 2 7 5 379 5 8 1 117 1 
289 1 232 1 96 1 104 1 12 1 164 1 
247 2 79 1 56 2 3 1 5 4 276 1 153 4 66 1 278 1 225 1 7 2 324 2 340 2 305 4 94 1 96 4 12 2 284 2 187 1 373 2 99 1 164 3 163 1 346 1 104 3 47 2 313 1 378 2 24 1 
51 1 177 1 5 1 273 2 153 1 276 1 115 1 322 2 154 1 225 1 67 1 133 1 33 1 254 2 157 3 70 1 368 1 326 3 305 1 159 1 14 1 187 1 310 1 162 2 346 1 216 1 23 1 335 1 378 1 143 1 105 1 380 2 
107 1 340 1 247 1 94 1 232 2 284 1 56 1 82 2 361 4 312 2 289 4 47 1 379 2 7 2 324 1 
249 1 376 1 228 1 
249 1 376 1 228 1 
241 1 376 1 2 1 228 1 320 1 
249 1 376 1 228 1 
376 1 114 1 228 1 
376 1 114 1 228 1 
376 1 114 1 228 1 
376 1 228 1 
317 1 222 1 
303 2 107 1 368 2 219 1 149 1 80 1 14 8 74 1 39 1 259 3 87 1 192 1 216 2 115 4 335 2 380 4 105 2 301 4 170 1 69 1 
303 2 107 1 219 1 149 1 80 1 14 6 188 1 39 1 259 2 87 1 115 3 170 1 301 3 69 1 
303 1 368 1 212 1 80 1 14 4 74 1 311 1 259 2 121 1 87 1 216 1 242 1 115 2 335 1 380 2 105 1 301 2 
303 1 14 7 269 1 212 1 80 1 74 1 112 1 259 2 121 1 86 2 87 1 277 1 242 1 115 4 301 3 
107 1 219 2 149 1 80 3 269 1 86 2 87 3 277 2 115 12 301 11 69 1 303 5 368 2 212 2 14 23 343 1 39 2 74 4 259 9 121 2 375 1 192 2 216 2 242 2 335 2 380 4 105 2 142 1 170 1 
86 1 14 1 115 1 
277 1 14 1 301 1 
303 1 368 1 14 6 212 1 80 1 74 1 311 1 259 2 121 1 87 1 216 1 242 1 115 3 335 1 105 1 380 2 8 1 301 3 
80 2 112 1 86 1 87 2 277 1 115 6 207 1 301 6 303 1 368 1 95 1 211 1 14 12 212 2 308 1 74 1 259 2 121 2 216 1 242 2 194 1 335 1 105 1 380 2 172 1 
303 1 219 1 149 1 80 1 14 6 39 1 74 1 259 2 87 1 115 3 301 3 
303 1 368 1 219 1 14 3 74 1 39 1 259 2 192 1 216 1 115 2 335 1 142 1 380 2 105 1 301 1 170 1 69 1 
303 3 368 1 219 2 149 1 14 10 80 2 328 1 39 2 74 2 259 5 87 2 216 1 115 5 335 1 105 1 380 2 301 5 172 1 
368 1 212 1 80 1 14 2 74 1 259 1 216 1 335 1 380 2 105 1 301 2 172 1 
303 1 368 1 212 1 80 1 14 4 74 1 259 2 121 1 87 1 216 1 242 1 115 2 335 1 380 2 105 1 301 2 172 1 
303 1 368 3 219 1 14 3 39 1 74 1 259 2 192 1 216 3 115 2 335 3 142 1 380 6 105 3 208 1 301 1 172 1 
107 1 219 3 149 2 54 1 269 1 80 5 85 1 112 1 86 4 87 5 277 3 115 18 208 1 301 16 69 1 35 1 303 7 368 5 14 34 212 3 39 3 74 5 311 1 259 12 121 3 192 2 216 5 242 3 335 5 142 1 105 5 380 10 170 1 172 1 
107 1 219 1 149 1 80 1 112 1 86 1 87 1 277 1 115 4 207 1 301 4 69 1 303 2 368 1 14 8 39 1 259 2 216 1 335 1 105 1 380 2 170 1 172 1 
107 1 219 1 149 1 269 1 80 2 112 1 86 2 87 1 277 1 115 5 207 1 301 6 69 1 303 2 368 2 14 11 212 1 39 1 74 1 311 1 259 3 216 2 242 1 335 2 105 2 380 4 170 1 172 1 
107 1 219 1 149 1 80 3 112 1 86 1 87 3 277 1 115 10 207 1 301 9 69 1 303 3 368 3 95 1 211 1 14 19 212 2 308 1 39 1 74 1 311 1 259 4 121 2 192 1 216 3 242 2 194 1 335 3 105 3 380 6 170 1 172 1 
107 1 219 1 149 1 80 3 112 1 86 1 87 2 277 1 115 7 207 1 301 10 69 1 303 3 368 3 95 1 211 1 14 17 212 2 308 1 39 1 74 2 311 1 259 5 121 1 192 1 216 3 242 2 194 1 335 3 105 3 380 6 170 1 172 1 
107 1 219 1 149 1 80 1 112 1 86 1 87 1 277 1 115 4 207 1 301 4 69 1 303 2 368 1 14 8 39 1 259 2 216 1 335 1 105 1 380 2 170 1 172 1 
80 2 112 1 86 1 87 2 277 1 115 6 207 1 301 6 303 1 368 1 95 1 211 1 14 12 212 2 308 1 74 1 259 2 121 2 216 1 242 2 194 1 335 1 105 1 380 2 172 1 
107 1 219 1 149 1 80 3 112 1 86 1 87 2 277 1 115 8 207 1 301 10 69 1 303 3 368 4 95 1 211 1 14 18 212 2 308 1 39 1 74 2 311 1 259 5 121 1 192 2 216 4 242 2 194 1 335 4 105 4 380 8 170 1 172 1 
80 3 112 1 86 1 87 2 277 1 115 7 207 1 208 1 301 9 303 3 368 4 95 1 211 1 14 16 212 3 308 1 74 3 259 6 121 2 192 2 216 4 242 3 194 1 335 4 105 4 380 8 172 1 
303 3 219 3 149 1 14 7 80 1 39 3 74 3 259 6 87 1 115 4 170 1 301 3 69 2 
107 1 219 1 149 1 80 3 112 1 86 1 87 2 277 1 115 8 207 1 208 1 301 10 69 1 303 3 368 4 95 1 211 1 14 18 212 2 308 1 39 1 74 1 259 4 121 1 192 2 216 4 242 2 194 1 335 4 105 4 380 8 170 1 172 1 
273 1 326 1 139 1 148 1 143 1 221 1 157 1 
71 1 108 1 326 1 371 1 148 1 221 1 355 1 273 1 139 1 131 1 143 1 157 1 
5 1 276 1 79 1 305 1 153 1 346 1 225 1 187 1 188 1 378 1 163 1 
145 1 326 2 305 1 177 1 187 1 162 1 273 1 5 1 153 1 276 1 346 1 225 1 378 1 154 1 67 1 143 1 254 1 157 2 
145 1 326 2 25 1 305 1 351 1 150 1 177 1 187 3 373 1 162 1 271 1 61 1 273 2 5 1 153 1 276 1 346 2 225 1 154 1 67 2 143 1 254 2 157 2 
145 1 326 2 25 1 305 2 351 1 150 1 177 1 187 3 373 1 252 1 162 1 271 1 61 1 273 2 5 2 153 2 276 1 346 2 298 1 225 1 67 2 143 1 254 2 157 2 
0 1 336 1 305 3 198 1 232 1 96 1 150 1 187 4 373 1 164 2 271 1 5 3 113 1 153 3 276 1 289 1 346 1 298 1 104 2 378 1 225 1 167 1 67 1 
336 1 305 3 198 1 232 1 96 1 150 1 187 4 373 1 17 1 164 2 271 1 5 3 113 1 153 3 276 1 289 1 346 1 298 1 104 2 378 1 225 1 67 1 
5 1 276 1 305 1 153 1 225 1 226 1 
305 7 109 1 306 1 15 1 307 1 151 1 187 3 360 1 5 7 153 6 276 2 346 2 6 1 88 1 378 2 225 3 226 1 292 1 155 1 281 1 67 1 
107 1 145 1 219 1 51 1 149 1 80 1 177 1 87 1 273 1 5 1 276 1 153 1 115 3 225 1 154 1 67 1 33 1 301 3 69 1 254 1 70 2 157 2 303 2 368 2 326 2 327 1 305 1 256 1 14 6 187 1 39 1 259 2 162 1 165 1 193 1 346 1 216 2 23 2 291 1 335 2 244 1 292 1 143 2 380 4 105 2 170 1 266 1 
175 1 247 2 197 1 336 1 198 1 5 1 153 1 113 1 7 1 324 2 340 2 305 1 232 1 94 2 96 2 12 1 120 1 284 1 187 2 17 1 164 3 42 1 289 1 104 3 290 1 313 1 378 1 140 1 
336 1 305 2 151 1 187 2 5 2 153 2 276 1 346 1 225 2 292 1 226 1 67 1 135 1 
305 4 79 1 187 1 163 1 5 4 153 4 276 1 346 1 298 1 225 1 378 1 292 1 118 1 
174 1 305 2 187 1 373 1 5 2 153 2 276 1 346 1 6 1 225 2 281 1 67 1 282 1 76 1 
138 1 184 1 5 1 276 1 305 1 153 1 183 1 225 1 378 1 381 1 
5 2 276 1 305 2 153 2 346 1 306 1 225 1 187 1 307 1 178 1 292 1 
79 1 305 5 306 1 187 3 373 1 163 1 5 5 360 1 153 4 276 2 346 2 88 1 378 1 225 2 292 1 118 1 
79 1 305 5 306 1 187 3 373 1 163 1 5 5 153 4 276 2 346 2 88 1 378 1 225 2 292 1 265 1 118 1 
145 1 326 2 305 1 177 1 187 1 252 1 162 1 273 1 5 1 153 1 276 1 346 1 225 1 378 1 67 1 143 1 254 1 157 2 
305 1 109 1 151 1 187 1 373 1 5 1 153 1 276 1 346 1 6 1 225 2 281 1 67 1 
63 1 26 1 143 1 100 1 293 1 
197 1 25 1 232 1 351 1 26 2 258 1 100 1 164 2 61 1 63 2 113 1 289 1 104 2 280 1 143 1 323 1 68 1 245 1 293 2 
273 1 326 1 63 1 55 1 132 1 124 1 100 1 157 1 293 1 
280 1 68 1 100 1 
341 1 188 1 350 1 134 1 
341 1 223 1 220 1 169 1 350 1 134 1 58 1 
338 1 58 1 34 1 
341 1 220 3 127 1 16 2 58 3 223 1 347 1 377 1 169 1 350 1 134 1 171 1 
268 1 341 1 223 1 220 2 169 1 350 1 134 1 58 2 356 1 
220 1 136 1 58 1 138 1 223 1 64 1 224 1 347 1 183 1 169 1 350 1 
223 1 347 1 220 1 169 1 350 1 134 1 58 1 
341 1 223 1 347 1 220 1 169 1 134 2 58 1 
337 1 110 1 220 2 58 2 235 1 223 2 347 1 169 2 350 1 134 1 
268 2 72 1 341 1 220 3 285 1 58 3 223 1 321 1 224 1 347 1 169 1 350 2 134 1 
268 1 341 1 220 2 136 1 58 2 138 1 223 1 347 1 183 2 205 1 169 1 350 1 134 1 9 1 381 1 
268 2 72 1 341 1 220 4 58 4 111 1 356 1 223 2 224 1 347 1 169 2 350 2 134 1 
341 1 223 1 347 1 220 1 169 1 350 1 134 1 58 1 
268 2 36 1 72 1 341 2 127 1 220 4 16 1 58 4 223 1 224 1 169 1 350 3 134 2 171 1 
268 1 341 1 220 2 58 2 223 1 65 1 347 1 299 1 182 1 169 1 350 1 134 1 
341 1 127 1 220 3 16 2 58 3 223 1 347 1 21 1 169 1 350 1 134 1 171 2 
43 1 240 1 350 2 196 2 
331 1 223 1 347 1 220 1 169 1 58 1 
268 1 341 1 223 1 321 1 347 1 220 2 169 1 350 1 134 1 58 2 
319 1 
341 1 223 1 347 1 220 1 169 1 350 1 134 1 58 1 
268 1 341 1 220 3 16 1 58 3 223 1 321 1 347 1 169 1 350 1 134 1 
36 1 72 1 224 1 350 1 
350 1 134 1 

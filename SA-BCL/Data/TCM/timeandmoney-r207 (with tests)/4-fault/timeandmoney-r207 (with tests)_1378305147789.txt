#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (196,254) (196,254) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 216 350 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 182 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (196,254) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 39 49 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
92 2 325 1 20 5 276 1 247 2 1 9 336 1 164 4 360 1 361 1 250 6 307 9 147 1 148 1 9 2 343 2 81 1 262 1 35 1 169 2 374 1 319 1 291 2 240 1 13 2 14 1 87 3 321 1 
92 2 325 1 20 5 276 1 247 2 1 9 336 1 164 4 360 1 361 1 250 6 307 9 147 1 148 1 9 2 343 2 81 1 262 1 169 2 35 1 374 1 319 1 291 2 240 1 13 2 14 1 87 3 321 1 
92 2 325 1 20 6 276 1 247 2 1 10 336 1 164 5 360 1 361 1 250 7 307 10 147 1 148 1 9 2 343 2 81 1 262 1 169 2 35 1 374 1 319 1 291 2 240 1 13 2 14 1 87 4 321 1 
92 1 325 1 20 4 276 1 247 2 1 7 336 1 164 3 360 1 250 4 307 7 147 1 148 1 9 2 343 2 81 1 262 1 169 2 35 1 374 1 319 1 291 2 240 1 13 2 14 1 87 2 321 1 
92 2 307 4 20 3 148 1 9 1 343 1 247 1 81 1 262 1 35 1 169 1 1 4 336 1 164 2 13 1 87 1 361 1 250 3 
307 2 20 1 148 1 329 1 9 1 343 1 247 1 129 1 35 1 1 2 291 1 336 1 14 1 13 1 240 1 320 1 
307 3 20 2 148 1 247 2 35 1 1 3 374 1 291 1 336 1 164 1 13 2 87 1 250 1 
92 2 20 5 247 2 1 9 336 1 164 4 360 1 250 7 361 1 284 1 307 9 147 1 148 1 258 1 9 1 343 1 81 1 262 1 35 1 169 1 374 1 291 1 13 2 87 3 
92 2 20 5 247 2 1 9 336 1 164 4 360 1 250 7 361 1 284 1 307 9 147 1 148 1 258 1 9 1 343 1 81 1 262 1 35 1 169 1 374 1 291 1 13 2 87 3 
364 1 242 1 182 1 
122 1 110 2 242 1 
279 2 243 2 82 2 115 2 83 2 293 1 15 2 32 1 
135 1 60 1 17 2 323 1 243 2 354 1 115 2 42 2 299 1 300 1 64 1 331 1 68 1 279 2 46 1 249 1 3 1 253 1 73 1 311 1 344 1 32 1 370 1 288 1 191 1 151 1 82 3 83 2 239 1 37 2 153 1 293 1 86 1 15 3 154 2 41 1 198 2 
231 1 279 1 243 1 82 1 115 1 83 1 293 1 197 1 15 1 150 1 
364 1 30 1 218 1 279 1 233 1 140 1 82 1 15 1 197 1 294 1 71 1 88 1 242 1 91 1 
364 1 243 1 115 1 218 2 279 1 233 2 140 1 82 1 83 1 15 1 197 1 294 1 71 1 88 1 242 1 
233 1 145 1 297 1 282 1 218 1 
233 2 364 1 145 1 282 1 275 1 224 1 242 1 218 2 
233 1 145 1 218 1 
243 1 115 1 150 1 218 1 231 1 233 1 279 1 82 1 83 1 282 1 293 1 197 1 15 1 268 1 
242 1 
69 1 233 2 364 1 145 1 282 1 275 1 242 1 218 2 
364 1 254 1 256 1 145 2 166 1 137 1 275 1 78 1 259 1 217 1 218 5 371 2 233 5 107 1 196 1 282 2 109 2 241 2 242 1 
32 1 182 1 
243 1 115 1 32 2 54 1 279 2 232 1 82 2 83 1 15 2 
156 1 22 1 155 1 
17 1 135 1 42 1 300 1 64 1 32 1 191 1 151 1 82 1 46 1 153 1 249 1 15 1 154 1 41 1 48 1 
135 1 17 1 243 1 115 1 42 1 22 1 300 1 369 1 64 1 191 1 279 1 151 1 82 2 46 1 153 1 249 1 15 2 265 1 154 1 41 1 
243 4 115 4 29 1 30 1 369 1 206 1 32 1 279 5 232 1 82 5 98 1 83 1 15 5 265 2 
231 1 279 2 243 2 82 2 115 2 197 1 15 2 251 1 
279 3 243 3 82 3 83 1 115 3 15 3 265 1 32 1 
231 1 279 1 243 1 82 1 115 1 197 1 15 1 
279 1 232 1 243 1 82 1 115 1 83 1 197 1 15 1 54 1 
135 1 17 1 323 1 243 3 115 3 42 1 299 1 21 1 300 1 64 1 331 1 68 1 232 1 279 3 233 1 140 1 46 1 121 1 249 1 71 1 3 1 311 1 344 1 369 1 32 1 370 1 288 1 191 1 218 1 151 1 82 4 83 2 37 1 153 1 293 1 86 1 15 4 197 1 294 1 265 1 154 1 41 1 88 1 198 2 
279 2 243 1 82 2 115 1 30 1 15 2 265 1 32 1 206 1 
243 3 115 3 205 1 369 1 218 1 232 1 233 1 279 3 140 1 82 3 83 1 121 1 294 1 197 1 15 3 71 1 265 2 88 1 242 1 
243 2 115 2 156 1 22 1 232 1 279 2 82 2 83 1 15 2 265 1 
17 1 135 1 42 1 300 1 64 1 32 1 191 1 151 1 82 1 46 1 153 1 249 1 15 1 154 1 41 1 
17 1 135 1 42 1 117 1 300 1 64 1 32 1 151 1 82 1 46 1 223 1 153 1 15 1 154 1 41 1 
323 1 354 2 156 2 299 1 273 1 22 2 181 1 68 1 45 1 24 1 70 1 212 1 311 1 344 1 127 1 370 2 193 1 131 1 37 4 86 1 172 1 16 1 155 2 198 2 
279 1 243 1 82 1 115 1 197 1 15 1 251 1 88 1 
286 1 84 1 
286 1 84 1 
215 1 180 1 
215 1 180 1 
215 1 180 1 
281 1 286 1 84 1 
281 1 286 1 84 1 
308 1 286 1 84 1 
195 1 286 2 84 2 215 1 180 1 230 1 
281 1 286 1 84 1 
63 1 286 1 84 1 
63 1 286 1 84 1 
63 1 286 1 84 1 
199 1 243 2 175 1 327 1 61 1 76 1 62 1 115 2 308 1 309 1 286 1 203 1 368 1 32 1 218 1 33 1 279 2 233 1 82 2 84 1 334 1 25 1 142 1 15 2 
211 2 187 1 61 2 327 1 306 1 76 2 62 3 309 2 286 2 230 1 218 2 233 2 209 1 194 1 359 1 84 2 25 2 89 1 242 1 
169 1 9 1 343 1 
9 1 343 1 320 1 
169 2 9 3 123 1 320 1 348 1 248 1 
169 1 270 1 9 2 123 1 320 1 348 1 
169 1 9 2 123 1 320 1 348 2 
174 1 175 1 112 1 137 2 274 1 275 1 66 2 233 5 141 1 282 4 334 1 70 1 122 1 364 1 212 1 256 3 145 1 166 1 236 2 216 1 371 1 218 5 33 1 131 1 318 1 59 2 266 1 16 1 109 1 110 3 241 1 242 2 
18 1 174 1 137 2 297 3 274 1 275 1 94 3 66 2 233 7 334 2 282 5 70 1 122 1 364 1 212 1 256 3 145 4 165 1 166 1 78 1 236 2 216 1 218 7 371 2 131 1 318 1 133 1 16 1 109 2 110 3 241 2 242 3 
256 1 274 1 78 1 216 1 218 2 371 1 233 2 141 1 282 1 266 1 109 1 241 1 
256 1 274 1 78 1 216 1 218 1 371 1 233 1 141 1 350 1 266 1 109 1 241 1 
330 1 41 1 182 1 
41 1 377 1 
228 1 
135 1 300 1 41 1 
5 1 41 1 
135 1 41 1 
135 1 10 1 51 1 330 2 300 1 41 3 
322 1 244 1 354 4 184 1 176 1 340 1 204 1 245 1 127 3 104 2 346 1 370 3 57 1 45 2 131 1 37 7 70 1 
322 1 244 1 354 4 184 1 176 1 340 1 204 1 245 1 127 3 104 2 346 1 370 3 57 1 45 2 131 1 37 7 70 1 
322 1 244 1 184 1 354 4 176 1 340 1 204 1 245 1 127 3 104 2 346 1 370 3 57 1 45 2 131 1 37 7 70 1 72 1 
322 2 353 1 323 1 244 2 354 16 176 5 298 1 245 1 299 1 204 2 332 1 159 1 45 5 234 3 70 4 252 4 184 1 212 3 340 2 311 1 344 1 346 1 104 3 127 10 370 15 57 1 37 31 131 4 264 1 375 1 318 3 351 1 16 3 198 2 
322 1 323 2 296 1 354 5 244 1 176 1 299 2 204 1 332 1 45 3 70 1 184 1 340 1 311 2 344 2 104 2 127 4 346 1 370 4 57 1 34 1 131 1 37 9 198 4 
17 1 113 1 20 1 42 1 247 1 64 1 208 1 248 1 97 1 46 1 1 2 336 1 304 1 250 1 362 1 26 1 339 1 307 2 148 1 9 2 343 1 126 1 169 1 35 1 291 1 292 1 13 1 171 1 154 1 320 1 
17 1 113 1 20 1 42 1 178 1 247 1 64 1 208 1 248 1 97 1 46 1 1 3 336 1 210 1 250 2 26 1 363 1 339 1 307 3 148 1 9 2 343 1 126 1 169 1 291 1 292 1 13 1 171 1 154 1 320 1 
17 1 113 1 20 1 42 1 64 1 208 1 248 1 97 1 46 1 1 2 336 1 210 1 250 2 26 1 363 1 339 1 307 2 148 1 9 2 343 1 169 1 291 1 171 1 154 1 320 1 
17 1 135 1 42 1 178 1 301 1 64 1 247 1 65 1 208 2 97 2 46 1 120 1 1 1 26 2 366 1 75 1 307 1 151 1 349 1 291 2 13 1 154 1 41 1 
17 1 113 1 42 1 247 1 64 1 208 1 248 1 97 1 46 1 1 1 210 1 362 1 26 1 339 1 307 1 9 2 343 1 126 1 169 1 35 1 291 1 292 1 13 1 171 1 154 1 320 1 
55 1 
135 1 137 2 42 2 271 1 272 2 274 1 275 3 233 5 279 1 0 1 140 1 46 1 183 2 49 1 4 2 145 6 7 2 105 1 56 2 151 2 12 1 15 1 197 1 294 1 154 2 109 1 110 2 241 1 242 2 17 2 352 1 301 1 64 1 357 2 120 1 161 1 122 2 71 1 27 2 364 1 256 2 166 1 30 1 218 5 371 1 80 1 82 1 372 1 316 1 36 1 222 4 39 1 41 1 88 1 91 1 
145 2 4 1 30 1 275 1 218 3 69 1 233 3 80 1 279 1 0 1 140 1 82 1 316 1 36 1 222 2 161 1 294 1 197 1 15 1 71 1 88 1 91 1 
364 1 145 1 30 1 275 1 218 3 69 1 233 3 80 1 279 1 0 1 140 1 82 1 316 1 36 1 222 3 161 1 294 1 197 1 15 1 71 1 183 1 88 1 242 1 91 1 
272 1 275 1 69 1 279 1 233 3 0 1 140 1 161 1 71 1 183 1 364 1 4 1 145 2 30 1 218 3 80 1 82 1 36 1 316 1 222 3 15 1 197 1 294 1 88 1 91 1 242 1 
137 1 272 4 275 3 233 5 279 1 0 1 140 1 183 4 337 1 4 4 145 7 7 2 105 1 56 2 106 1 294 1 197 1 15 1 109 1 241 1 242 5 352 1 357 2 69 1 161 1 71 1 122 2 27 2 364 5 256 1 166 1 30 1 218 5 219 1 371 1 80 1 82 1 316 1 36 1 222 6 267 1 88 1 173 1 91 1 
352 1 137 1 272 2 275 2 357 2 233 4 279 1 0 1 140 1 161 1 122 2 71 1 183 2 27 2 364 1 256 1 4 2 145 4 166 1 7 2 30 1 371 1 218 4 105 1 56 2 80 1 82 1 36 1 316 1 222 4 12 1 15 1 197 1 294 1 109 1 110 2 241 1 88 1 242 2 91 1 
352 1 137 1 272 2 275 2 357 2 279 1 233 4 0 1 140 1 161 1 122 2 71 1 183 2 27 2 364 1 256 1 4 2 145 4 166 1 7 2 30 1 105 1 371 1 218 4 219 1 56 2 80 1 106 1 82 1 36 1 316 1 222 4 15 1 197 1 294 1 109 1 173 1 88 1 241 1 242 1 91 1 
352 1 137 1 272 2 275 2 357 2 279 1 233 4 0 1 140 1 161 1 122 2 71 1 183 2 27 2 364 1 256 1 4 2 145 4 166 1 7 2 30 1 105 1 371 1 218 4 219 1 56 2 80 1 106 1 82 1 36 1 316 1 222 4 15 1 197 1 294 1 109 1 173 1 88 1 241 1 242 1 91 1 
352 1 114 2 137 1 272 2 275 2 279 1 233 4 0 1 140 1 161 1 71 1 183 2 27 2 364 1 256 1 4 2 145 4 100 1 166 1 6 1 30 1 371 1 218 4 56 2 80 1 130 2 82 1 36 1 316 1 222 4 152 1 15 1 197 1 294 1 109 1 110 2 173 1 88 1 241 1 242 1 91 1 
352 1 137 1 272 3 275 2 357 2 279 1 233 4 0 1 140 1 161 1 122 2 71 1 183 3 27 2 364 1 256 1 4 3 145 5 166 1 7 2 30 1 105 1 371 1 219 1 218 4 56 2 80 1 106 1 82 1 36 1 316 1 222 5 15 1 197 1 294 1 109 1 267 1 173 1 241 1 88 1 242 1 91 1 
352 1 137 1 272 3 275 2 357 2 279 1 233 4 0 1 140 1 161 1 122 2 71 1 183 3 27 2 364 1 256 1 4 3 145 5 166 1 7 2 30 1 105 1 371 1 219 1 218 4 56 2 80 1 106 1 82 1 36 1 316 1 222 5 15 1 197 1 294 1 109 1 267 1 173 1 241 1 88 1 242 1 91 1 
352 1 114 2 137 1 272 2 275 2 233 4 279 1 0 1 140 1 161 1 71 1 183 2 27 2 364 1 256 1 4 2 145 4 100 1 166 1 30 1 371 1 218 4 56 2 80 1 130 2 82 1 36 1 316 1 222 4 12 1 15 1 197 1 294 1 109 1 110 2 241 1 88 1 242 1 91 1 
323 1 244 1 354 3 156 1 299 1 22 1 181 1 182 1 68 1 45 2 70 1 184 1 340 1 311 1 344 1 346 1 127 2 104 1 370 3 32 2 57 1 37 6 131 1 86 1 155 1 198 2 
19 1 323 2 354 8 176 1 156 4 299 2 22 11 331 1 68 1 159 1 45 1 234 3 160 1 70 2 305 1 252 3 212 2 285 1 311 2 344 2 127 2 32 1 370 6 239 1 37 14 131 1 375 1 318 2 86 2 16 1 155 11 269 1 198 4 
135 1 17 1 323 1 243 1 201 1 354 1 115 1 42 1 156 1 299 1 300 1 64 1 68 1 279 1 331 1 46 1 249 1 48 1 74 1 285 1 311 1 369 1 344 1 32 1 370 1 191 1 151 1 220 1 82 2 239 1 37 2 153 1 86 1 15 2 154 1 265 1 41 1 198 2 
135 2 323 3 176 4 42 3 138 2 331 1 279 1 45 4 46 2 184 1 340 1 285 1 342 2 53 1 344 3 104 1 346 1 288 2 191 2 57 1 151 1 239 1 153 2 15 3 154 3 16 2 155 7 198 6 17 3 200 1 243 1 244 1 354 10 115 1 156 7 299 3 300 2 22 7 64 2 23 2 207 2 68 3 249 2 70 3 210 1 212 2 310 1 311 3 369 1 127 8 32 2 370 10 82 3 131 3 37 20 318 2 86 3 265 1 41 2 
17 8 135 2 243 1 323 2 354 1 115 1 202 1 42 8 299 2 301 1 64 2 181 1 279 1 68 2 331 1 46 2 120 1 162 1 304 1 210 1 143 1 2 1 253 2 146 1 311 2 344 2 370 1 151 2 261 1 82 1 239 1 37 2 15 1 86 2 132 1 265 1 154 7 41 3 198 4 
323 1 243 1 354 1 115 1 156 1 299 1 22 1 232 1 68 1 279 1 45 1 70 1 212 1 285 1 125 1 311 1 344 1 127 1 370 2 82 1 83 1 37 3 131 1 318 1 86 1 15 1 16 1 155 1 198 2 
323 1 212 1 354 2 176 1 156 1 299 1 22 1 311 1 344 1 127 1 181 1 68 1 37 2 70 1 86 1 172 1 155 1 198 2 
323 1 156 1 299 1 22 1 311 1 344 1 127 1 181 1 370 2 68 1 45 1 37 2 24 1 131 1 86 1 16 1 155 1 198 2 
323 1 354 2 176 1 156 2 299 1 22 2 181 1 68 1 45 1 70 1 212 1 311 1 344 1 127 2 370 2 37 4 131 1 318 1 86 1 16 1 155 2 198 2 
323 1 212 1 354 2 176 1 202 1 156 1 299 1 22 1 311 1 344 1 127 1 68 1 37 2 70 1 86 1 172 1 155 1 198 2 
323 1 202 1 156 1 299 1 22 1 311 1 344 1 127 1 370 2 68 1 45 1 37 2 24 1 131 1 86 1 16 1 155 1 198 2 
323 1 354 2 176 1 202 1 156 2 299 1 22 2 68 1 45 1 70 1 212 1 311 1 344 1 127 2 370 2 37 4 131 1 318 1 86 1 16 1 155 2 198 2 
323 1 354 2 176 1 156 2 299 1 22 2 68 1 45 1 70 1 212 1 311 1 344 1 127 2 370 2 37 4 131 1 318 1 86 1 16 1 155 2 198 2 
135 1 17 1 323 1 354 1 42 1 299 1 300 1 64 1 68 1 331 1 46 1 249 1 311 1 344 1 32 1 288 1 370 1 191 1 151 1 82 1 239 1 37 2 153 1 15 1 86 1 154 1 41 1 198 2 
135 1 17 1 323 1 354 1 136 1 42 1 299 1 300 1 117 1 64 1 68 1 331 1 46 1 311 1 344 1 32 1 370 1 151 1 82 1 239 1 37 2 223 1 153 1 15 1 86 1 154 1 41 1 198 2 
323 1 354 2 176 1 156 2 299 1 22 2 68 1 45 1 70 1 212 1 285 1 311 1 344 1 127 2 370 2 37 4 131 1 318 1 86 1 16 1 155 2 198 2 
17 1 135 1 323 1 354 2 176 1 156 2 42 1 138 1 299 1 22 2 300 1 64 1 68 1 45 1 46 1 70 1 249 1 304 1 212 1 311 1 344 1 127 2 370 2 288 1 191 1 82 1 131 1 37 4 153 1 318 1 15 1 86 1 154 1 16 1 155 2 41 1 198 2 
323 1 243 1 354 2 176 1 115 1 156 1 299 1 22 1 139 1 232 1 68 1 279 1 70 1 212 1 285 1 311 1 344 1 127 1 370 1 82 1 83 1 131 1 37 3 318 1 86 1 15 1 16 1 155 1 198 2 
323 2 354 9 177 1 176 3 299 2 355 1 158 2 45 3 159 1 234 1 163 1 70 3 252 2 338 1 212 3 311 2 344 2 102 1 167 1 127 6 370 10 168 1 34 1 37 19 131 3 85 2 375 1 318 3 16 3 198 4 
323 3 354 14 176 2 299 3 355 1 158 1 303 1 332 2 45 2 159 2 234 2 99 1 70 3 252 2 338 2 212 3 311 3 344 3 102 1 127 4 167 2 370 12 190 1 168 1 34 1 289 1 11 1 131 2 37 26 85 4 318 3 108 1 16 2 198 6 
323 3 176 4 332 1 45 4 234 3 99 1 338 1 184 1 340 1 344 3 102 1 346 1 104 1 190 1 57 1 289 1 11 1 58 1 108 1 16 4 198 6 354 20 244 1 299 3 355 1 158 1 303 1 159 3 70 5 163 1 252 4 212 4 311 3 127 8 167 2 370 21 168 1 34 1 131 5 37 41 318 4 375 1 85 4 
323 4 244 1 354 20 176 3 299 4 355 1 158 1 303 1 332 2 45 4 159 3 234 3 163 1 99 1 70 5 252 4 338 1 184 1 212 4 340 1 311 4 344 4 102 1 104 1 346 1 167 2 127 7 370 18 190 1 57 1 168 1 289 1 34 1 11 1 37 38 131 4 85 4 375 1 318 4 58 1 108 1 16 3 198 8 
323 3 244 1 354 27 176 7 299 3 355 1 158 1 303 1 332 2 45 8 159 2 234 4 99 1 70 8 305 2 252 4 338 1 184 1 212 7 340 1 311 3 344 3 102 1 104 1 346 1 167 1 127 15 370 26 190 1 57 1 168 1 289 1 34 1 11 1 37 53 131 8 85 4 375 2 318 7 108 1 16 7 198 6 
187 1 61 1 76 1 286 1 309 1 359 1 257 1 84 1 25 1 230 1 
308 1 203 1 
280 1 61 1 76 1 286 1 309 1 84 1 170 1 25 1 347 1 
281 1 227 1 
63 1 195 1 116 1 
211 1 187 1 327 1 61 1 76 1 62 2 309 1 286 1 230 1 218 1 233 1 209 1 194 1 359 1 84 1 25 1 89 1 242 1 
211 1 187 1 327 1 61 1 76 1 62 2 309 1 286 1 230 1 218 1 233 1 209 1 194 1 359 1 84 1 25 1 89 1 242 1 
211 1 187 1 327 1 61 1 76 1 62 2 309 1 286 1 230 1 218 1 233 1 209 1 194 1 359 1 84 1 25 1 89 1 242 1 
281 1 195 1 227 1 
281 1 195 1 227 1 
63 1 116 1 
63 1 195 1 116 1 
199 1 368 1 
199 1 243 2 175 1 61 1 62 1 115 2 203 1 233 1 279 2 282 1 25 1 334 1 142 1 211 1 28 1 76 1 286 1 309 1 308 1 368 1 32 1 218 1 33 1 82 2 194 1 84 1 15 2 
135 1 17 2 323 1 354 1 328 1 42 2 299 1 93 1 64 1 68 1 279 2 331 1 46 1 143 1 2 1 253 2 285 1 311 1 344 1 370 1 82 2 239 1 317 1 37 2 38 1 86 1 15 2 134 1 154 2 41 1 198 2 
17 2 339 1 42 2 8 1 9 2 149 1 343 1 126 1 64 1 237 1 248 1 169 1 46 1 304 1 171 1 210 1 154 2 320 1 26 1 
17 1 339 1 42 1 9 2 149 1 343 1 126 1 64 1 248 1 313 1 169 1 46 1 171 1 210 1 154 1 320 1 26 1 
135 1 17 1 42 1 179 1 301 1 64 1 237 1 151 1 46 1 349 1 120 1 154 1 41 1 26 1 
17 1 339 1 42 1 8 1 9 2 149 1 343 1 126 1 64 1 237 1 248 1 169 1 46 1 171 1 210 1 154 1 320 1 26 1 
79 1 
364 1 254 1 256 1 137 1 196 1 242 1 182 1 
364 1 256 1 145 1 166 1 137 1 7 1 275 1 218 1 357 1 371 1 105 1 233 1 122 1 109 1 110 1 241 1 242 2 
135 3 326 2 137 8 42 3 271 1 330 2 274 2 275 3 96 2 233 5 46 3 185 2 51 1 186 2 145 5 5 2 52 2 236 6 345 1 151 1 290 1 196 1 294 2 154 3 109 4 16 2 241 4 110 12 242 8 17 3 300 3 64 4 23 2 66 6 304 1 70 2 122 6 254 1 364 2 124 2 256 9 212 2 166 4 31 2 371 4 218 5 260 1 263 1 315 2 131 2 318 2 225 1 377 3 41 10 
137 5 271 1 274 1 275 1 66 5 303 1 233 1 159 1 234 1 335 1 99 1 70 2 122 3 252 1 124 2 364 2 185 1 256 8 212 2 145 1 166 2 236 5 190 1 218 1 371 2 289 1 373 1 11 1 131 2 318 2 109 2 16 2 110 6 241 2 242 5 
243 1 244 1 115 1 137 2 302 1 231 1 233 1 279 1 70 2 124 2 185 1 256 2 340 1 166 1 150 1 371 1 219 1 218 1 57 1 82 1 83 1 131 1 293 1 197 1 15 1 109 1 241 1 268 1 
364 1 256 1 166 1 137 1 196 1 109 1 241 1 242 1 371 1 
212 1 256 1 137 2 236 1 66 1 131 1 318 1 70 1 122 1 16 1 110 2 242 1 
233 1 364 1 145 1 275 1 242 1 218 1 
135 1 17 2 137 1 42 2 271 1 274 1 301 1 275 1 64 1 233 2 46 1 120 1 49 1 256 1 145 2 166 1 78 1 371 2 218 2 260 1 151 2 39 1 154 2 109 2 41 1 241 2 
17 1 135 1 243 2 323 1 115 2 42 1 299 1 300 1 64 1 331 1 279 2 68 1 46 1 249 1 3 1 311 1 344 1 32 1 370 1 288 1 191 1 151 1 82 3 83 2 37 1 153 1 293 1 15 3 86 1 154 1 41 1 198 2 
364 2 256 1 166 1 137 2 271 1 274 1 236 2 104 1 66 2 371 1 122 2 109 1 110 4 241 1 242 4 
367 1 61 1 25 1 
367 1 61 1 25 1 
187 1 226 1 61 1 25 1 368 1 
367 1 61 1 25 1 
61 1 25 1 356 1 
61 1 25 1 356 1 
61 1 25 1 356 1 
61 1 25 1 
286 1 84 1 
323 2 354 4 184 1 244 1 176 1 340 1 299 2 311 2 344 2 104 1 127 3 346 1 370 4 57 1 332 1 45 2 131 1 37 8 70 1 198 4 
184 1 244 1 354 3 340 1 104 1 346 1 127 2 370 3 182 1 57 1 45 2 37 6 131 1 70 1 
324 1 323 1 212 1 354 2 176 1 299 1 311 1 344 1 127 2 370 2 45 1 131 1 37 4 318 1 70 1 16 1 198 2 
354 3 212 1 176 1 127 2 370 4 45 1 159 1 234 1 131 1 37 7 375 1 318 1 70 1 16 1 252 2 
19 1 323 2 244 2 354 11 176 4 299 2 332 2 45 5 234 2 70 3 305 1 252 2 184 1 212 2 340 2 311 2 344 2 104 1 346 1 127 9 370 12 192 1 57 1 37 23 131 3 318 2 375 1 16 2 198 4 
37 1 370 1 252 1 
354 1 234 1 37 1 
323 1 324 1 212 1 354 3 176 1 299 1 311 1 344 1 23 1 127 3 370 3 45 2 37 6 131 1 318 1 70 1 16 1 198 2 
323 2 354 6 176 1 299 2 303 1 332 1 159 1 45 2 234 1 99 1 70 2 252 1 212 2 311 2 344 2 127 3 370 7 190 1 34 1 289 1 11 1 37 13 131 2 318 2 16 2 198 4 
354 3 244 1 340 1 176 1 127 2 370 3 57 1 45 1 37 6 131 1 70 1 
323 1 354 1 244 1 184 1 176 1 340 1 299 1 311 1 344 1 127 2 346 1 370 2 192 1 332 1 45 1 37 3 198 2 
323 1 244 2 354 5 340 2 176 2 299 1 311 1 344 1 127 5 370 5 302 1 57 1 45 3 34 1 37 10 131 2 70 2 198 2 
323 1 212 1 354 2 176 1 299 1 311 1 344 1 127 1 34 1 37 2 70 1 198 2 
323 1 212 1 354 2 176 1 299 1 311 1 344 1 127 2 370 2 45 1 34 1 131 1 37 4 318 1 70 1 16 1 198 2 
323 3 244 1 354 1 340 1 176 1 299 3 311 3 344 3 127 2 370 2 192 1 332 1 45 1 34 1 37 3 163 1 198 6 
353 1 324 1 323 5 244 3 354 16 176 5 299 5 332 2 159 1 45 7 234 3 163 1 70 5 252 4 184 1 212 3 340 3 311 5 344 5 104 1 346 1 127 12 370 18 192 1 57 2 34 1 264 1 37 34 131 5 375 1 318 3 351 1 16 3 198 10 
323 1 354 4 244 1 299 1 159 1 45 2 234 1 70 1 252 1 184 1 340 1 311 1 344 1 104 1 346 1 127 2 370 4 57 1 34 1 11 1 131 1 37 8 198 2 
323 2 324 1 244 1 354 6 176 1 299 2 45 2 159 1 234 1 70 2 252 2 184 1 212 1 340 1 311 2 344 2 104 1 346 1 127 3 370 5 57 1 34 1 11 1 131 1 37 11 375 1 318 1 198 4 
324 1 323 3 244 1 354 9 176 1 299 3 303 1 332 1 159 1 45 3 234 1 99 1 70 3 252 1 184 1 212 2 340 1 311 3 344 3 104 1 346 1 127 4 370 10 190 1 57 1 34 1 289 1 11 1 37 19 131 3 318 2 16 2 198 6 
324 1 323 4 354 7 176 1 299 4 303 1 332 2 159 1 45 2 234 1 99 1 70 2 252 1 212 2 311 4 344 4 127 3 370 5 190 1 34 1 289 1 11 1 37 12 131 1 318 2 16 1 198 8 
323 1 354 4 244 1 299 1 159 1 45 2 234 1 70 1 252 1 184 1 340 1 311 1 344 1 104 1 346 1 127 2 370 4 57 1 34 1 11 1 131 1 37 8 198 2 
323 2 354 6 176 1 299 2 303 1 332 1 159 1 45 2 234 1 99 1 70 2 252 1 212 2 311 2 344 2 127 3 370 7 190 1 34 1 289 1 11 1 37 13 131 2 318 2 16 2 198 4 
324 1 323 4 244 1 354 10 176 2 299 4 303 1 332 2 159 1 45 3 234 1 99 1 70 3 252 1 184 1 212 2 340 1 311 4 344 4 104 1 346 1 127 5 370 8 190 1 57 1 34 1 289 1 11 1 37 18 131 2 318 2 16 1 198 8 
323 4 354 9 176 3 299 4 303 1 332 2 159 1 45 3 234 1 163 1 99 1 70 3 252 1 212 3 311 4 344 4 127 6 370 7 190 1 34 1 289 1 11 1 37 16 131 2 318 3 16 2 198 8 
184 2 244 3 354 3 340 3 176 3 346 1 127 6 370 4 57 1 45 3 131 1 37 7 70 1 
323 4 244 1 354 10 176 1 299 4 303 1 332 2 159 1 45 3 234 1 163 1 99 1 70 3 252 1 184 1 212 2 340 1 311 4 344 4 104 1 346 1 127 4 370 8 190 1 57 1 34 1 289 1 11 1 37 18 131 2 318 2 16 1 198 8 
279 1 82 1 118 1 30 1 15 1 32 1 206 1 
188 1 214 1 287 1 30 1 32 1 206 1 67 1 279 1 221 1 118 1 82 1 15 1 
135 1 17 1 151 1 46 1 120 1 42 1 301 1 64 1 154 1 41 1 182 1 
135 1 17 1 243 1 115 1 42 1 300 1 64 1 32 1 279 1 151 1 82 2 46 1 153 1 249 1 15 2 265 1 154 1 41 1 
135 2 17 1 243 2 5 1 115 1 42 1 300 2 64 1 32 1 279 2 140 1 82 2 315 1 46 1 153 1 290 1 249 1 197 1 15 2 265 1 154 1 88 1 41 3 
135 2 17 2 243 2 5 1 115 1 42 2 300 2 117 1 64 1 277 1 32 1 279 2 140 1 82 2 315 1 46 1 153 1 290 1 197 1 15 2 265 1 154 2 88 1 41 3 
135 1 17 3 364 1 145 1 5 1 42 3 300 1 330 1 64 1 277 1 229 1 278 1 218 2 151 1 233 2 315 1 46 1 290 1 294 1 154 3 377 1 41 4 242 1 
135 1 17 3 364 1 186 1 145 1 5 1 42 3 300 1 330 1 64 1 277 1 218 2 151 1 233 2 315 1 46 1 290 1 294 1 154 3 377 1 41 4 242 1 
17 1 46 1 42 1 162 1 64 1 154 1 
17 7 135 2 51 1 146 1 42 7 77 1 235 1 300 1 64 3 44 1 151 2 261 1 46 2 162 1 304 1 210 1 132 1 143 1 154 6 41 3 253 1 
135 1 323 2 42 1 138 1 279 1 45 2 46 1 184 1 340 1 285 1 342 1 344 2 346 1 104 1 288 1 191 1 57 1 153 1 15 2 154 1 155 1 198 4 17 1 243 1 244 1 354 3 115 1 156 1 299 2 300 1 22 1 64 1 68 2 249 1 304 1 70 1 311 2 127 2 370 3 32 2 82 2 37 6 131 1 86 2 265 1 134 1 41 1 
17 1 326 1 137 1 42 1 330 1 275 1 233 3 96 1 282 1 364 1 254 1 256 1 186 1 145 2 166 2 31 1 371 2 218 3 151 1 260 1 196 1 294 1 154 1 109 2 241 2 377 1 41 2 242 1 
17 2 135 1 51 1 42 2 330 1 300 1 64 2 345 1 46 1 304 1 162 1 154 2 41 2 
17 4 135 1 42 4 301 1 64 1 277 1 151 1 46 1 120 1 304 1 154 4 90 1 41 1 
17 2 135 1 42 2 101 1 235 1 310 1 300 1 64 2 312 1 44 1 46 1 290 1 154 2 41 1 
17 1 151 1 339 1 46 1 42 1 9 1 343 1 64 1 154 1 320 1 
135 1 17 2 46 1 42 2 304 1 38 1 64 1 143 1 210 1 154 2 41 1 
17 5 135 2 146 1 42 5 301 1 64 2 151 1 46 2 120 1 290 1 304 1 143 1 132 1 154 4 90 1 41 3 
17 5 135 2 42 5 301 1 64 2 151 1 238 1 46 2 120 1 290 1 304 1 143 1 132 1 154 4 90 1 41 3 
135 1 17 1 243 1 115 1 42 1 300 1 117 1 64 1 32 1 279 1 151 1 82 2 46 1 153 1 15 2 265 1 154 1 41 1 
17 1 135 1 51 1 42 1 77 1 235 1 300 1 64 2 44 1 46 1 290 1 154 1 41 1 
341 1 376 1 95 1 32 1 43 1 
364 1 341 2 246 1 95 2 32 1 189 1 43 1 218 2 233 2 140 1 128 1 282 1 121 1 294 1 197 1 71 1 376 2 88 1 242 1 
279 1 82 1 328 1 341 1 317 1 15 1 93 1 95 1 43 1 
128 1 246 1 43 1 
20 1 148 1 336 1 182 1 
307 1 20 1 148 1 1 1 336 1 13 1 247 1 
307 1 291 1 208 1 
307 3 20 1 148 1 247 1 103 1 35 1 119 1 1 3 336 1 13 1 14 2 144 1 
92 1 307 2 20 1 148 1 1 2 336 1 13 1 247 1 250 1 
307 1 20 1 9 1 343 1 247 1 81 1 35 1 169 1 1 1 164 1 13 1 
35 1 307 1 20 1 1 1 336 1 13 1 247 1 
35 1 307 1 148 1 1 1 336 2 13 1 247 1 
50 1 307 2 20 1 157 1 247 2 35 1 1 2 336 1 13 2 283 1 
307 3 147 1 20 2 148 1 247 1 35 1 1 3 336 1 360 1 164 1 13 1 250 2 87 1 
213 1 307 2 20 1 148 1 9 2 343 1 247 1 248 1 35 1 169 1 1 2 336 1 13 1 250 1 320 1 
92 1 307 4 20 2 148 1 247 2 35 1 1 4 336 1 164 1 13 2 361 1 250 2 87 1 
35 1 307 1 20 1 148 1 1 1 336 1 13 1 247 1 
255 1 307 4 20 3 148 2 247 1 103 1 1 4 336 2 164 1 14 1 13 1 250 2 87 1 144 1 
111 1 307 2 20 1 258 1 148 1 247 1 35 1 314 1 1 2 336 1 13 1 250 1 
295 1 35 1 307 3 20 1 148 1 1 3 336 1 14 2 13 1 247 1 103 2 144 1 
365 1 20 2 47 2 40 1 
358 1 35 1 307 1 1 1 13 1 247 1 
35 1 307 2 20 1 147 1 148 1 1 2 336 1 13 1 247 1 250 1 
333 1 
35 1 307 1 20 1 148 1 1 1 336 1 13 1 247 1 
35 1 307 3 147 1 20 1 148 1 1 3 336 1 14 1 13 1 247 1 250 1 
255 1 20 1 164 1 87 1 
20 1 336 1 

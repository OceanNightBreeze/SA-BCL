#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 179 318 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 179 318 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 179 318 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 179 318 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 179 318 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (252,340) 67 306 240 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 179 (92,161) (92,161) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 119 85 272 353 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 119 85 272 353 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 119 85 272 353 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 119 85 272 353 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 119 120 272 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 179 (92,161) (92,161) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 179 (92,161) (92,161) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 119 120 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 119 178 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 179 (92,161) (92,161) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 278 1 214 1 89 9 177 2 220 4 352 1 305 1 49 1 288 1 333 1 334 1 354 1 128 3 271 1 103 6 55 9 107 1 80 2 185 2 165 2 190 1 319 1 137 2 81 5 24 2 321 2 367 1 
1 1 278 1 214 1 89 9 177 2 220 4 352 1 305 1 49 1 288 1 333 1 334 1 354 1 128 3 271 1 103 6 55 9 107 1 80 2 185 2 165 2 190 1 319 1 137 2 81 5 24 2 321 2 367 1 
1 1 278 1 214 1 89 10 177 2 220 5 352 1 305 1 49 1 288 1 333 1 334 1 354 1 128 4 271 1 103 7 55 10 107 1 80 2 185 2 165 2 190 1 319 1 137 2 81 6 24 2 321 2 367 1 
1 1 278 1 214 1 89 7 177 2 220 3 352 1 49 1 288 1 333 1 334 1 354 1 128 2 271 1 103 4 55 7 107 1 80 2 185 2 165 2 190 1 319 1 137 2 81 4 24 2 321 1 367 1 
278 1 103 3 55 4 89 4 177 1 107 1 185 1 220 2 80 1 352 1 305 1 49 1 137 1 81 3 24 1 321 2 354 1 128 1 
301 1 271 1 55 2 89 2 177 1 185 1 352 1 165 1 81 1 49 1 137 1 24 1 288 1 98 1 354 1 275 1 
103 1 55 3 89 3 177 2 220 1 352 1 165 1 49 1 81 2 24 2 333 1 354 1 128 1 
278 1 89 9 177 2 220 4 352 1 305 1 49 1 333 1 354 1 128 3 103 7 55 9 135 1 107 1 80 1 185 1 341 1 165 1 190 1 319 1 81 5 137 1 24 2 321 2 
278 1 89 9 177 2 220 4 352 1 305 1 49 1 333 1 354 1 128 3 103 7 55 9 135 1 107 1 80 1 185 1 341 1 165 1 190 1 319 1 81 5 137 1 24 2 321 2 
30 1 243 1 72 1 
71 2 243 1 293 1 
263 1 100 2 146 2 38 2 104 2 363 1 91 2 69 2 
350 2 64 1 193 1 237 2 91 3 69 2 144 1 285 1 263 1 146 2 147 1 148 1 6 1 50 1 223 1 247 1 74 1 267 1 100 2 38 3 104 2 130 2 105 1 314 1 79 2 20 1 339 2 343 1 164 1 297 1 363 1 273 1 83 1 274 1 170 1 112 1 366 1 
277 1 100 1 146 1 226 1 38 1 104 1 363 1 90 1 91 1 69 1 
277 1 102 1 280 1 38 1 132 1 91 1 69 1 30 1 243 1 245 1 330 1 265 1 51 1 113 1 
100 1 277 1 102 1 104 1 38 1 132 1 91 1 69 1 30 1 146 1 243 1 245 2 330 1 265 2 113 1 
122 1 245 1 265 1 62 1 284 1 
30 1 349 1 243 1 122 1 245 2 265 2 276 1 284 1 
245 1 265 1 284 1 
277 1 226 1 100 1 104 1 38 1 90 1 281 1 91 1 69 1 146 1 122 1 245 1 363 1 265 1 
243 1 
30 1 349 1 243 1 122 1 245 2 265 2 284 1 75 1 
348 1 42 2 277 1 349 1 28 1 215 2 90 1 281 1 91 1 2 4 69 1 284 2 198 2 146 1 30 2 243 2 122 2 245 5 32 5 265 5 34 1 100 1 226 1 11 1 268 1 291 2 38 1 104 1 312 1 56 2 205 1 207 1 61 1 188 1 230 1 363 1 41 1 191 2 
146 1 263 1 100 3 38 3 104 3 344 1 91 3 69 3 
277 1 100 1 38 1 104 1 90 1 91 1 69 1 
277 1 100 1 146 1 242 1 38 1 104 1 91 1 219 1 69 1 
114 1 277 1 350 1 64 1 193 1 237 1 91 4 69 3 285 1 144 1 263 1 146 2 242 1 148 1 5 1 245 1 330 1 265 1 247 1 74 1 267 1 100 3 102 1 38 4 104 3 130 1 105 1 132 1 314 1 79 2 339 1 343 1 164 1 297 1 273 1 344 1 254 1 363 1 83 1 274 1 170 1 112 1 113 1 366 1 
263 1 100 1 38 2 104 1 344 1 91 2 51 1 69 2 282 1 
114 1 277 1 100 3 102 1 104 3 38 3 132 1 91 3 69 3 39 1 146 1 242 1 243 1 245 1 254 1 344 2 330 1 265 1 113 1 
100 2 146 1 242 1 295 1 38 2 104 2 344 1 252 1 91 2 69 2 
350 1 38 1 130 1 237 1 105 1 91 1 144 1 263 1 297 1 164 1 273 1 170 1 112 1 74 1 267 1 
325 1 350 1 38 1 130 1 237 1 105 1 91 1 144 1 286 1 263 1 164 1 273 1 170 1 74 1 267 1 
42 1 193 1 257 1 258 1 67 2 198 1 148 1 50 2 247 1 151 1 180 1 228 1 252 2 79 2 314 2 58 1 59 1 339 4 187 1 295 2 340 1 343 1 83 1 274 1 
277 1 100 1 328 1 38 1 104 1 91 1 69 1 113 1 
100 1 350 1 104 1 38 2 130 1 252 1 105 1 237 1 91 2 69 1 144 1 164 1 297 1 273 1 254 1 344 1 170 1 112 1 74 1 267 1 
263 1 72 1 
100 1 38 2 104 1 91 2 219 1 69 2 242 1 146 1 263 2 
295 1 67 1 252 1 
350 1 38 1 66 1 130 1 237 1 105 1 91 1 144 1 263 1 297 1 164 1 273 1 170 1 112 1 74 1 267 1 
100 4 104 4 38 5 115 1 91 5 69 5 282 1 242 1 146 1 263 1 208 1 344 2 254 1 51 1 
277 1 100 2 328 1 38 2 104 2 90 1 91 2 69 2 
338 1 255 1 211 1 
338 1 255 1 327 1 
338 1 255 1 327 1 
338 1 255 1 327 1 
338 1 255 1 
338 1 255 1 
203 1 260 1 
203 1 260 1 
203 1 260 1 
338 1 255 1 211 1 
338 1 255 1 211 1 
338 1 250 1 255 1 
338 2 22 1 255 2 203 1 155 1 260 1 
227 2 255 2 359 2 155 1 141 1 361 1 160 3 159 2 338 2 243 1 162 2 304 1 210 1 245 2 221 2 265 2 138 1 266 1 212 1 
255 1 91 2 69 2 283 1 263 1 95 1 329 1 245 1 221 1 265 1 250 1 100 2 76 1 227 1 359 1 104 2 38 2 14 1 160 1 361 1 338 1 162 1 296 1 166 1 
137 1 185 1 80 1 
137 1 98 1 185 1 
93 1 189 1 346 1 137 3 98 1 80 2 
93 1 346 1 137 2 169 1 98 1 80 1 
93 1 346 2 137 2 98 1 80 1 
192 1 42 1 349 1 257 1 2 3 283 1 3 1 284 1 198 1 71 3 30 1 243 2 122 4 329 1 32 2 245 5 265 5 332 1 355 1 76 1 101 2 291 1 251 2 312 1 56 1 293 1 108 1 187 1 110 1 191 1 320 2 368 1 
192 1 42 3 349 1 259 1 257 3 118 5 2 8 3 3 284 6 198 3 71 9 30 1 243 5 329 4 122 7 32 6 245 9 287 1 96 1 265 9 332 2 10 1 11 1 101 6 12 1 53 1 291 2 251 6 312 1 56 2 293 3 187 3 191 2 62 5 368 2 
42 1 257 1 2 3 3 1 198 1 30 1 71 4 243 3 122 2 329 1 245 3 32 2 265 3 332 1 355 1 11 1 101 2 291 1 251 2 56 1 293 2 108 1 187 1 191 1 320 1 368 1 
42 2 259 1 257 2 2 5 3 2 198 2 30 1 71 7 243 4 329 2 122 3 245 4 32 4 96 1 265 4 332 1 355 1 10 1 11 1 101 4 291 1 251 4 56 1 293 3 108 1 187 2 191 1 320 2 368 1 
164 1 74 1 
164 1 218 2 99 1 170 1 126 1 74 3 
72 1 218 1 74 1 
176 1 74 1 
336 1 
164 1 170 1 74 1 
236 1 74 1 
21 1 339 1 318 1 50 1 179 1 
21 1 339 1 318 1 50 1 179 1 
21 1 339 1 318 1 307 1 50 1 179 1 
21 1 339 1 318 1 50 1 179 1 
21 1 339 1 318 1 50 1 179 1 
350 1 89 2 237 1 177 1 352 1 49 1 98 1 354 1 290 1 269 1 103 1 130 1 360 1 55 2 335 1 105 1 78 1 57 1 18 1 185 1 80 1 362 1 109 1 189 1 165 1 273 1 81 1 137 2 24 1 231 1 
350 1 89 3 237 1 238 1 177 1 352 1 261 1 49 1 98 1 9 1 290 1 269 1 103 2 130 1 360 1 55 3 335 1 105 1 78 1 57 1 185 1 80 1 362 1 189 1 165 1 273 1 81 1 137 2 24 1 231 1 
350 1 89 2 237 1 352 1 261 1 49 1 98 1 9 1 269 1 103 2 130 1 360 1 55 2 105 1 78 1 57 1 80 1 185 1 362 1 189 1 165 1 273 1 81 1 137 2 231 1 
350 1 29 1 89 1 237 1 238 1 177 1 144 1 248 1 74 1 54 1 130 1 360 2 55 1 105 1 78 2 337 1 362 2 317 1 164 1 165 2 273 1 364 1 24 1 
350 1 89 1 237 1 177 1 98 1 354 1 9 1 290 1 269 1 130 1 360 1 55 1 335 1 105 1 78 1 57 1 185 1 80 1 362 1 109 1 189 1 165 1 273 1 137 2 24 1 231 1 
244 1 
277 1 194 1 280 1 237 2 142 1 239 2 91 1 2 2 45 1 284 6 144 2 243 2 245 5 330 1 332 1 51 1 248 1 249 1 8 2 291 1 102 1 105 1 56 1 293 2 106 2 294 2 164 1 23 1 171 1 113 1 349 3 350 2 175 1 69 1 30 1 71 2 121 1 32 2 265 5 74 1 357 2 181 2 77 1 38 1 131 1 130 2 182 4 312 1 132 1 317 1 273 1 82 1 191 1 365 2 322 1 
277 1 349 1 175 1 280 1 142 1 91 1 69 1 284 2 121 1 245 3 330 1 265 3 51 1 249 1 75 1 102 1 38 1 182 2 132 1 106 1 82 1 113 1 
277 1 349 1 175 1 280 1 142 1 91 1 69 1 284 1 121 1 30 1 243 1 245 3 330 1 265 3 51 1 249 1 75 1 102 1 38 1 182 3 132 1 82 1 365 1 113 1 
349 1 277 1 175 1 280 1 142 1 91 1 69 1 284 2 121 1 30 1 243 1 245 3 330 1 265 3 51 1 75 1 249 1 102 1 38 1 182 3 132 1 294 1 106 1 82 1 365 1 113 1 
277 1 280 1 142 1 91 1 239 2 2 1 284 7 243 5 48 1 245 5 330 1 51 1 249 1 8 2 102 1 291 1 56 1 293 2 106 4 294 4 23 1 63 1 113 1 349 3 175 1 69 1 262 1 121 1 30 5 32 1 265 5 75 1 225 1 357 2 181 2 38 1 182 6 132 1 312 1 82 1 191 1 365 4 322 1 323 1 
277 1 280 1 142 1 91 1 239 2 2 1 284 4 243 2 245 4 330 1 51 1 249 1 8 2 102 1 291 1 56 1 293 2 294 2 106 2 23 1 113 1 171 1 349 2 175 1 69 1 121 1 71 2 30 1 32 1 265 4 357 2 181 2 38 1 182 4 132 1 312 1 82 1 191 1 365 2 322 1 
349 2 277 1 175 1 280 1 142 1 239 2 91 1 2 1 69 1 284 4 30 1 121 1 243 1 48 1 32 1 245 4 330 1 265 4 51 1 249 1 225 1 357 2 8 2 102 1 291 1 181 2 38 1 182 4 132 1 312 1 56 1 293 2 106 2 294 2 23 1 82 1 191 1 365 2 323 1 322 1 113 1 
349 2 277 1 175 1 280 1 142 1 239 2 91 1 2 1 69 1 284 4 30 1 121 1 243 1 48 1 32 1 245 4 330 1 265 4 51 1 249 1 225 1 357 2 8 2 102 1 291 1 181 2 38 1 182 4 132 1 312 1 56 1 293 2 106 2 294 2 23 1 82 1 191 1 365 2 323 1 322 1 113 1 
173 2 349 2 277 1 279 1 256 2 175 1 280 1 142 1 239 2 91 1 2 1 69 1 284 4 30 1 71 2 121 1 243 1 32 1 245 4 330 1 149 1 265 4 51 1 249 1 357 2 102 1 291 1 38 1 310 1 182 4 132 1 312 1 56 1 106 2 294 2 23 1 82 1 191 1 365 2 323 1 113 1 
349 2 277 1 175 1 280 1 142 1 239 2 91 1 2 1 69 1 284 5 30 1 121 1 243 1 48 1 32 1 245 4 330 1 265 4 51 1 249 1 225 1 357 2 8 2 291 1 102 1 181 2 38 1 182 5 312 1 132 1 56 1 293 2 294 3 106 3 23 1 82 1 191 1 365 3 323 1 322 1 63 1 113 1 
349 2 277 1 175 1 280 1 142 1 239 2 91 1 2 1 69 1 284 5 30 1 121 1 243 1 48 1 32 1 245 4 330 1 265 4 51 1 249 1 225 1 357 2 8 2 291 1 102 1 181 2 38 1 182 5 312 1 132 1 56 1 293 2 294 3 106 3 23 1 82 1 191 1 365 3 323 1 322 1 63 1 113 1 
277 1 280 1 142 1 91 1 239 2 2 1 284 4 243 1 245 4 330 1 51 1 249 1 102 1 291 1 56 1 294 2 106 2 23 1 113 1 171 1 173 2 349 2 175 1 256 2 69 1 121 1 71 2 30 1 32 1 265 4 357 2 38 1 310 1 182 4 132 1 312 1 82 1 191 1 365 2 
180 1 42 1 228 1 193 1 258 1 67 1 252 1 79 2 339 2 187 1 295 1 148 1 343 1 83 1 50 2 33 1 274 1 247 1 
180 1 193 1 258 1 257 1 67 1 252 1 79 2 314 2 58 1 198 1 339 2 295 1 148 1 343 1 83 1 274 1 247 1 151 1 
42 1 193 1 258 1 257 1 67 2 3 1 198 1 148 1 50 2 33 1 247 1 180 2 252 2 79 2 314 2 58 1 187 1 339 4 295 2 343 1 83 1 274 1 
180 1 42 1 228 1 193 1 67 1 252 1 79 2 339 2 187 1 295 1 148 1 343 1 83 1 50 2 33 1 168 1 274 1 247 1 
180 1 193 1 257 1 67 1 252 1 79 2 314 2 58 1 198 1 339 2 295 1 148 1 343 1 83 1 168 1 274 1 247 1 151 1 
42 1 193 1 257 1 67 2 3 1 198 1 148 1 50 2 33 1 247 1 180 2 252 2 79 2 314 2 58 1 187 1 339 4 295 2 343 1 83 1 168 1 274 1 
42 1 193 1 257 1 67 2 3 1 198 1 148 1 50 2 33 1 247 1 180 2 252 2 79 2 314 2 58 1 339 4 187 1 295 2 343 1 83 1 274 1 
350 1 64 1 193 1 237 1 91 1 285 1 144 1 263 1 148 1 6 1 50 1 74 1 247 1 267 1 38 1 130 1 105 1 79 2 314 1 339 2 164 1 297 1 343 1 273 1 83 1 274 1 170 1 112 1 
325 1 350 1 64 1 193 1 237 1 91 1 286 1 144 1 263 1 148 1 31 1 6 1 50 1 74 1 247 1 267 1 38 1 130 1 105 1 79 2 314 1 339 2 164 1 343 1 273 1 83 1 274 1 170 1 
42 1 193 1 257 1 67 2 3 1 198 1 148 1 50 2 33 1 289 1 247 1 180 2 252 2 79 2 314 2 58 1 187 1 339 4 295 2 343 1 83 1 274 1 
42 1 350 1 193 1 257 1 67 2 116 1 237 1 91 1 285 1 3 1 198 1 148 1 50 2 33 1 74 1 247 1 267 1 180 2 38 1 130 1 252 2 105 1 314 2 79 2 18 1 58 1 339 4 187 1 295 2 297 1 164 1 343 1 273 1 83 1 274 1 170 1 112 1 
42 1 193 1 257 1 67 1 91 1 69 1 3 1 198 1 146 1 242 1 148 1 50 2 33 1 289 1 247 1 180 1 100 1 104 1 38 1 252 1 314 1 79 2 187 1 339 3 295 1 343 1 83 1 274 1 84 1 
180 1 348 1 42 1 268 1 28 1 193 1 258 1 314 2 79 2 92 1 58 1 198 1 161 1 263 1 339 5 148 1 343 1 72 1 179 1 50 3 83 1 274 1 247 1 
193 1 156 1 67 3 252 3 79 2 314 1 240 1 339 2 148 1 343 1 306 1 50 1 83 1 274 1 289 1 247 1 324 1 
233 1 350 1 64 1 193 1 66 1 237 1 91 2 69 1 144 1 263 1 148 1 6 1 50 1 289 1 74 1 247 1 267 1 100 1 38 2 104 1 130 1 105 1 79 2 314 1 339 2 295 1 164 1 297 1 343 1 273 1 344 1 254 1 83 1 274 1 170 1 112 1 139 1 232 1 
42 3 193 3 237 1 91 3 92 1 144 1 285 2 3 2 198 3 94 1 241 2 148 3 6 1 201 2 50 10 289 1 247 3 100 1 104 1 105 2 252 6 157 2 58 3 161 1 339 19 295 6 343 3 297 2 164 2 254 1 344 1 299 1 170 2 112 2 348 1 350 1 64 1 28 1 257 2 67 6 116 2 69 1 263 1 179 1 74 2 267 2 180 3 268 1 38 3 130 1 314 9 79 6 187 2 273 2 83 3 274 3 
0 1 350 8 64 1 193 2 258 1 237 7 91 1 69 1 144 2 148 2 6 1 50 1 150 1 74 3 247 2 248 1 9 1 100 1 308 1 292 1 38 1 104 1 130 8 105 2 79 4 314 1 18 1 133 1 20 2 339 2 317 1 253 1 343 2 164 2 344 1 273 2 83 2 168 1 274 2 
42 1 193 1 257 1 67 1 91 1 69 1 3 1 198 1 146 1 242 1 148 1 50 1 289 1 247 1 180 1 100 1 104 1 38 1 252 1 79 2 314 2 58 1 187 1 339 3 295 1 343 1 83 1 274 1 300 1 
193 1 156 1 314 2 79 2 119 1 272 1 353 1 339 4 200 1 343 1 50 2 124 1 83 1 246 1 274 1 85 1 324 1 
193 1 156 1 314 2 79 2 119 1 272 1 353 1 339 4 200 1 343 1 50 2 124 1 83 1 246 1 274 1 85 1 324 1 
193 1 156 1 314 2 79 2 119 1 272 1 353 1 339 4 200 1 343 1 50 2 124 1 83 1 246 1 274 1 85 1 324 1 
193 1 156 1 314 2 79 2 119 1 272 1 353 1 339 4 200 1 343 1 50 2 124 1 83 1 246 1 274 1 85 1 324 1 
193 1 156 2 119 2 79 2 314 4 120 1 272 2 353 1 339 8 200 1 343 1 50 4 124 1 83 1 246 2 274 1 85 2 324 2 
227 1 255 1 359 1 155 1 141 1 361 1 160 2 159 1 338 1 243 1 162 1 304 1 210 1 245 1 221 1 265 1 266 1 212 1 
227 1 255 1 359 1 155 1 141 1 361 1 160 2 159 1 338 1 243 1 162 1 304 1 210 1 245 1 221 1 265 1 266 1 212 1 
227 1 255 1 359 1 155 1 141 1 361 1 160 2 159 1 338 1 243 1 162 1 304 1 210 1 245 1 221 1 265 1 266 1 212 1 
22 1 217 1 211 1 
22 1 217 1 211 1 
316 1 327 1 
316 1 22 1 327 1 
95 1 296 1 
255 1 91 2 69 2 283 1 263 1 95 1 122 1 329 1 245 1 221 1 265 1 125 1 250 1 76 1 100 2 227 1 359 1 38 2 104 2 14 1 159 1 160 1 338 1 162 1 296 1 166 1 212 1 
338 1 227 1 255 1 162 1 359 1 210 1 155 1 221 1 266 1 347 1 
250 1 166 1 
338 1 87 1 227 1 255 1 162 1 359 1 309 1 221 1 204 1 
217 1 211 1 
316 1 22 1 327 1 
350 2 64 1 193 1 237 2 91 2 69 2 46 1 145 1 148 1 6 1 331 1 50 1 289 1 74 1 247 1 35 1 154 1 38 2 130 2 105 1 79 2 314 1 133 1 20 2 339 2 164 1 253 1 343 1 273 1 83 1 274 1 
9 1 290 1 350 2 129 1 269 1 130 2 351 1 105 1 237 2 18 1 185 1 80 1 362 1 209 1 189 1 273 1 137 2 98 1 231 1 
9 1 290 1 350 1 129 1 269 1 130 1 237 1 105 1 185 1 80 1 302 1 362 1 189 1 273 1 137 2 98 1 231 1 
350 1 130 1 29 1 105 1 237 1 144 1 362 1 317 1 209 1 164 1 273 1 222 1 74 1 248 1 
9 1 290 1 350 1 129 1 269 1 130 1 351 1 105 1 237 1 185 1 80 1 362 1 209 1 189 1 273 1 137 2 98 1 231 1 
326 1 
30 1 243 1 207 1 32 1 72 1 34 1 2 1 
349 1 2 1 284 1 71 1 30 1 243 2 32 1 245 1 265 1 8 1 291 1 181 1 312 1 56 1 293 1 191 1 322 1 
42 2 236 2 88 1 237 3 143 2 2 9 144 1 284 5 3 2 198 2 243 8 245 5 332 2 99 1 52 2 101 6 291 4 153 2 13 1 251 6 105 4 56 4 157 2 293 6 18 1 206 1 207 1 163 1 61 2 164 3 170 3 25 1 26 2 349 3 350 3 215 2 257 2 176 3 218 2 30 2 71 12 32 8 265 5 34 1 74 10 131 1 229 2 130 3 312 4 132 2 187 2 136 2 273 3 191 4 
86 1 42 2 349 1 44 1 215 2 257 2 119 1 2 8 197 1 120 1 284 1 3 2 198 2 71 6 30 2 243 5 123 1 245 1 32 5 265 1 264 1 332 1 101 5 291 2 251 5 131 1 156 1 312 2 56 2 293 3 187 2 61 1 342 1 191 2 324 1 
348 1 42 2 277 1 28 1 215 2 90 1 281 1 91 1 2 2 69 1 198 1 146 1 48 1 245 1 32 2 265 1 226 1 100 1 268 1 291 1 38 1 104 1 312 1 56 1 61 1 363 1 41 1 191 1 
291 1 312 1 56 1 2 1 30 1 207 1 243 1 32 1 191 1 34 1 
42 2 101 5 215 2 251 5 257 2 157 1 293 5 2 5 3 2 198 2 187 2 71 10 243 5 61 1 32 5 
30 1 349 1 243 1 245 1 265 1 284 1 
349 2 350 4 194 1 237 4 2 2 144 2 284 4 32 2 245 3 265 3 332 2 74 1 248 1 11 1 291 2 77 1 130 4 131 2 105 1 312 1 56 2 17 1 315 1 317 1 163 2 164 1 273 1 191 2 25 1 
350 1 64 1 193 1 237 1 91 3 69 2 144 1 285 1 263 1 146 2 148 1 74 1 247 1 267 1 100 2 38 3 104 2 130 1 105 1 314 1 79 2 339 1 343 1 297 1 164 1 363 1 273 1 83 1 274 1 170 1 112 1 366 1 
101 1 291 1 251 1 131 1 312 1 56 1 293 1 2 1 71 2 30 1 243 2 32 2 179 1 191 1 332 1 
227 1 359 1 37 1 
227 1 359 1 73 1 
227 1 359 1 73 1 
227 1 359 1 73 1 
227 1 359 1 
338 1 255 1 
227 1 359 1 37 1 
227 1 359 1 37 1 
227 1 296 1 359 1 345 1 266 1 
193 1 156 1 79 2 119 1 314 1 120 1 339 2 343 1 50 1 124 1 83 1 274 1 324 1 
193 2 156 1 79 4 119 1 314 1 120 1 199 1 339 2 343 2 50 1 83 2 124 1 274 2 324 1 
348 1 42 3 28 1 44 1 193 3 257 2 119 1 92 1 197 1 120 1 3 2 198 3 199 1 123 1 179 1 124 1 50 9 33 1 180 3 268 1 156 1 314 9 79 6 19 1 58 2 161 1 339 18 187 2 343 3 342 1 83 3 274 3 324 1 
193 1 156 1 79 2 119 1 314 1 120 1 339 2 343 1 50 1 124 1 83 1 274 1 324 1 
193 1 156 1 79 2 119 1 314 1 120 1 339 2 343 1 50 1 124 1 83 1 274 1 324 1 
42 2 193 1 44 1 257 2 119 1 197 1 120 1 3 2 198 2 123 1 124 1 50 6 33 1 180 2 156 1 314 6 79 2 58 1 339 12 187 2 343 1 342 1 83 1 274 1 324 1 
193 2 156 1 79 4 119 1 314 1 120 1 199 1 339 2 343 2 50 1 124 1 83 2 274 2 324 1 
174 1 193 2 156 1 79 4 119 1 314 1 120 1 339 2 343 2 50 1 83 2 124 1 274 2 324 1 
348 3 180 6 42 1 268 3 28 1 314 4 92 1 58 3 198 1 161 2 339 7 50 3 33 3 
174 1 193 2 156 1 79 4 119 1 314 1 120 1 339 2 343 2 50 1 83 2 124 1 274 2 324 1 
180 2 348 1 42 1 268 1 28 1 193 2 314 3 79 4 19 1 92 1 58 1 198 1 161 1 339 7 343 2 179 1 50 4 83 2 33 1 274 2 
348 1 180 1 42 1 268 1 28 1 314 2 92 1 58 1 198 1 161 1 339 5 72 1 179 1 50 3 
180 2 42 1 193 1 257 1 314 2 79 2 58 1 3 1 198 1 199 1 187 1 339 4 343 1 83 1 50 2 33 1 274 1 
339 2 156 1 50 1 314 1 119 1 324 1 
339 2 156 1 306 1 50 1 314 1 324 1 
339 1 314 1 324 1 
339 1 156 1 50 1 
180 3 42 1 193 1 257 1 79 2 314 3 157 1 58 2 3 1 198 1 199 1 339 6 187 1 343 1 83 1 50 3 33 1 274 1 
193 1 156 1 79 2 119 1 314 1 120 1 339 2 343 1 50 1 124 1 83 1 274 1 324 1 
348 1 180 2 42 1 268 1 28 1 314 3 58 1 198 1 339 6 50 3 33 1 
180 2 348 1 268 1 193 1 314 2 79 2 19 1 92 1 58 1 161 1 47 1 339 3 343 1 50 1 83 1 33 1 274 1 
348 2 180 5 42 2 268 2 28 1 193 1 79 2 314 5 58 3 198 2 339 10 343 1 41 1 83 1 124 1 50 5 33 2 274 1 
180 1 42 1 193 1 79 2 187 1 339 2 343 1 124 1 83 1 50 2 33 1 274 1 
180 2 42 1 193 1 257 1 314 2 79 2 58 1 3 1 198 1 187 1 339 4 343 1 124 1 83 1 50 2 33 1 274 1 
348 1 180 2 174 1 268 1 193 3 314 2 79 6 19 1 58 1 47 1 339 3 343 3 124 1 83 3 50 1 33 1 274 3 
174 1 193 3 156 1 79 6 119 1 314 1 339 2 199 1 343 3 178 1 50 1 124 1 83 3 274 3 324 1 
263 1 38 1 298 1 91 1 69 1 51 1 282 1 
152 1 38 1 68 1 91 1 69 1 282 1 263 1 4 1 303 1 298 1 111 1 51 1 
317 1 350 1 164 1 273 1 72 1 130 1 105 1 237 1 74 1 248 1 144 1 
100 1 350 1 104 1 38 2 130 1 105 1 237 1 91 2 69 1 144 1 263 1 164 1 297 1 344 1 273 1 170 1 74 1 267 1 
277 1 100 2 350 1 236 1 104 1 38 2 130 1 105 1 237 1 91 2 69 2 263 1 163 1 164 2 297 1 330 1 344 1 273 1 170 2 113 1 74 3 52 1 267 1 
277 1 350 2 236 1 237 2 91 2 69 2 286 1 263 1 330 1 74 3 267 1 52 1 100 2 36 1 38 2 104 1 130 2 105 1 163 1 164 2 273 1 344 1 170 2 113 1 
350 3 236 1 176 1 237 3 196 1 218 1 284 1 144 1 30 1 243 1 245 2 265 2 74 4 52 1 36 1 130 3 105 1 132 1 184 1 163 1 164 1 273 1 170 1 
350 3 36 1 236 1 130 3 176 1 132 1 105 1 237 3 218 1 144 1 284 1 30 1 243 1 136 1 163 1 164 1 245 2 273 1 265 2 170 1 74 4 52 1 
350 1 273 1 130 1 105 1 237 1 150 1 
9 1 0 1 308 1 350 7 292 1 130 7 237 6 105 3 16 1 20 1 18 1 144 2 40 1 253 1 164 2 273 2 167 1 99 1 150 1 170 1 74 3 
348 1 42 1 350 1 28 1 193 2 237 1 116 1 91 2 92 1 69 1 285 1 198 1 263 1 241 1 148 2 179 1 50 3 289 1 74 1 247 2 267 1 180 1 100 1 268 1 154 1 38 2 104 1 130 1 105 1 314 2 79 4 18 1 58 1 161 1 339 5 164 1 343 2 297 1 273 1 344 1 83 2 274 2 170 1 112 1 
26 1 349 1 350 1 176 1 237 1 218 1 2 1 144 1 284 2 30 1 243 1 122 1 32 1 245 3 265 3 34 1 74 2 291 2 153 1 130 1 229 1 312 2 132 1 56 2 207 1 136 1 191 2 25 1 
350 2 130 2 88 1 237 2 105 2 218 1 18 1 164 1 273 1 99 1 150 1 170 1 74 2 
350 4 36 1 130 4 311 1 105 1 237 4 18 1 144 1 317 1 164 1 273 1 248 1 74 1 
350 2 130 2 15 1 237 2 105 2 16 1 163 1 164 1 273 1 167 1 170 1 224 1 127 1 74 1 
350 1 273 1 130 1 137 1 105 1 237 1 98 1 231 1 185 1 144 1 
9 1 350 2 164 1 253 1 273 1 130 2 331 1 105 1 237 2 18 1 74 1 
0 1 350 5 308 1 130 5 311 1 237 4 105 2 18 1 144 1 317 1 163 1 253 1 164 2 273 2 248 1 74 3 
0 1 235 1 350 5 130 5 311 1 237 4 105 2 18 1 144 1 317 1 163 1 253 1 164 2 273 2 248 1 74 3 
100 1 350 1 104 1 38 2 130 1 105 1 237 1 91 2 69 1 144 1 286 1 263 1 164 1 344 1 273 1 170 1 74 1 267 1 
350 1 130 1 237 1 105 2 16 1 40 1 163 1 164 1 273 1 167 1 99 1 170 1 74 1 
35 1 38 1 91 1 158 1 69 1 46 1 145 1 97 1 213 1 
313 1 186 1 213 1 
263 1 43 1 97 1 158 1 213 1 
114 1 277 1 43 2 102 1 216 1 132 1 313 1 158 2 186 1 263 1 30 1 243 1 122 1 245 2 330 1 265 2 97 2 113 1 213 1 
72 1 81 1 49 1 352 1 
81 1 49 1 89 1 55 1 24 1 177 1 352 1 
165 1 360 1 89 1 
358 1 270 1 55 3 89 3 177 1 352 1 60 1 81 1 49 1 24 1 288 2 354 1 
103 1 81 1 49 1 89 2 55 2 24 1 321 1 177 1 352 1 
278 1 137 1 81 1 89 1 55 1 24 1 177 1 185 1 80 1 220 1 354 1 
81 1 89 1 55 1 24 1 177 1 354 1 352 1 
49 1 89 1 55 1 24 1 177 1 354 1 352 2 
140 1 65 1 55 2 89 2 177 2 352 1 81 1 7 1 24 2 354 1 
103 2 55 3 89 3 177 1 220 1 352 1 190 1 319 1 49 1 81 2 24 1 354 1 128 1 
103 1 55 2 89 2 177 1 80 1 185 1 352 1 189 1 81 1 49 1 137 2 24 1 98 1 202 1 354 1 
103 2 55 4 89 4 177 2 220 1 352 1 305 1 49 1 81 2 24 2 321 1 354 1 128 1 
81 1 49 1 89 1 55 1 24 1 177 1 354 1 352 1 
358 1 234 1 103 2 55 4 89 4 177 1 220 1 352 2 60 1 49 2 81 3 24 1 288 1 128 1 
27 1 103 1 55 2 89 2 177 1 134 1 135 1 352 1 81 1 49 1 24 1 354 1 
358 1 55 3 89 3 117 1 177 1 352 1 60 2 81 1 49 1 24 1 288 2 354 1 
195 1 81 2 183 2 70 1 
89 1 55 1 24 1 177 1 354 1 356 1 
103 1 319 1 81 1 49 1 89 2 55 2 24 1 177 1 354 1 352 1 
172 1 
81 1 49 1 89 1 55 1 24 1 177 1 354 1 352 1 
103 1 319 1 81 1 49 1 89 3 55 3 24 1 288 1 177 1 354 1 352 1 
234 1 81 1 220 1 128 1 
81 1 352 1 

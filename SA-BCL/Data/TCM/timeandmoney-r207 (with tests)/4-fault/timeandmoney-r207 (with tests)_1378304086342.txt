#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (23,205) (12,324) (12,324) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 2 110 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 158 250 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 158 250 325 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 158 250 325 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 158 250 325 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (23,205) (23,205) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 138 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (23,205) (12,324) (12,324) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (23,205) (12,324) (12,324) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (23,205) (12,324) (12,324) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 295 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 295 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 2 110 66 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 295 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 1 333 1 185 1 359 2 37 1 162 1 234 2 288 2 259 1 240 2 166 2 16 2 42 6 216 1 19 1 221 1 347 4 292 1 169 1 24 1 198 9 125 9 271 5 301 1 253 1 279 1 281 3 31 2 
154 1 333 1 185 1 359 2 37 1 162 1 234 2 288 2 259 1 240 2 166 2 16 2 42 6 216 1 19 1 221 1 347 4 292 1 169 1 24 1 198 9 125 9 271 5 301 1 253 1 279 1 281 3 31 2 
154 1 333 1 185 1 359 2 37 1 162 1 234 2 288 2 259 1 240 2 166 2 16 2 42 7 216 1 19 1 221 1 347 5 292 1 169 1 24 1 198 10 125 10 271 6 301 1 253 1 279 1 281 4 31 2 
154 1 333 1 185 1 359 2 37 1 162 1 234 2 288 2 259 1 240 2 166 2 16 1 42 4 216 1 19 1 221 1 347 3 292 1 169 1 24 1 198 7 125 7 271 4 301 1 253 1 281 2 31 2 
347 2 185 1 359 1 37 1 24 1 234 1 198 4 288 1 125 4 271 3 166 1 253 1 279 1 281 1 16 2 216 1 42 3 31 1 
231 1 185 1 169 1 359 1 37 1 24 1 162 1 234 1 198 2 288 1 125 2 271 1 166 1 240 1 119 1 201 1 
347 1 185 1 37 1 24 1 198 3 288 2 125 3 271 2 166 2 240 1 301 1 281 1 42 1 
154 1 185 1 359 1 37 1 234 1 288 2 240 1 166 2 16 2 42 7 216 1 347 4 292 1 141 1 24 1 198 9 200 1 125 9 271 5 301 1 253 1 279 1 281 3 31 1 
154 1 185 1 359 1 37 1 234 1 288 2 240 1 166 2 16 2 42 7 216 1 347 4 292 1 141 1 24 1 198 9 200 1 125 9 271 5 301 1 253 1 279 1 281 3 31 1 
204 1 131 1 106 1 
131 1 265 1 52 2 
298 1 63 2 104 2 299 1 289 2 365 2 139 2 283 2 
255 2 206 2 73 1 332 1 357 1 33 1 89 1 54 1 358 1 209 1 5 1 118 1 338 1 316 1 120 1 79 1 289 2 215 1 191 1 365 2 139 3 80 1 345 1 319 1 63 2 143 2 348 1 322 2 85 1 27 1 298 1 104 3 299 1 177 2 70 1 283 2 254 1 
244 1 140 1 63 1 104 1 299 1 208 1 289 1 365 1 139 1 283 1 
244 1 204 1 168 1 131 1 356 1 87 1 83 1 164 1 174 1 104 1 212 1 283 1 139 1 181 1 
244 1 204 1 131 1 356 1 87 2 83 1 63 1 164 2 174 1 104 1 289 1 365 1 283 1 139 1 181 1 
62 1 58 1 164 1 87 1 155 1 
204 1 131 1 58 1 164 2 87 2 155 1 360 1 101 1 
58 1 164 1 87 1 
244 1 140 1 87 1 155 1 63 1 208 1 164 1 375 1 104 1 299 1 289 1 365 1 283 1 139 1 
131 1 
204 1 131 1 58 1 164 2 87 2 155 1 101 1 305 1 
167 1 204 1 82 1 131 1 87 5 246 2 20 1 112 1 155 2 142 1 171 1 101 1 67 1 186 2 56 1 164 5 58 2 306 2 17 1 
298 1 106 1 
63 1 252 1 298 2 104 2 318 1 289 1 365 1 283 2 139 2 
117 1 60 1 61 1 
255 1 319 1 286 1 332 1 33 1 89 1 209 1 322 1 118 1 338 1 298 1 104 1 177 1 215 1 139 1 80 1 
255 1 319 1 291 1 332 1 33 1 63 1 89 1 209 1 4 1 322 1 118 1 338 1 104 2 177 1 61 1 215 1 365 1 283 1 139 2 80 1 
298 1 63 3 104 3 4 1 289 1 365 3 139 3 283 3 
244 1 140 1 63 1 104 1 365 1 139 1 283 1 
244 1 252 1 63 1 104 1 318 1 289 1 365 1 139 1 283 1 
255 1 356 1 87 1 206 2 332 1 33 1 89 1 358 1 113 1 209 1 4 1 118 1 164 1 338 1 316 1 318 1 120 1 79 1 215 1 289 2 191 1 365 3 80 1 139 4 345 1 244 1 319 1 83 1 291 1 63 3 143 1 348 1 322 1 27 1 174 1 298 1 129 1 104 4 299 1 177 1 70 1 283 3 181 1 254 1 
298 1 63 1 104 2 212 1 74 1 4 1 365 1 139 2 283 2 
244 1 151 1 131 1 87 1 356 1 83 1 291 1 63 3 4 2 164 1 174 1 104 3 129 1 318 1 289 1 365 3 181 1 283 3 139 3 
63 2 4 1 104 2 318 1 60 1 289 1 61 1 365 2 283 2 139 2 
255 1 319 1 332 1 33 1 89 1 209 1 322 1 118 1 338 1 298 1 104 1 177 1 215 1 139 1 80 1 
255 1 18 1 319 1 332 1 33 1 89 1 209 1 322 1 118 1 173 1 338 1 298 1 104 1 177 1 139 1 
206 2 1 1 258 1 133 1 358 1 76 1 55 1 237 1 117 2 316 1 239 1 14 1 120 1 79 1 61 2 60 2 191 1 348 1 143 4 85 2 268 1 27 2 175 1 69 1 
244 1 356 1 63 1 104 1 213 1 365 1 139 1 283 1 
291 1 63 4 74 1 4 2 298 1 104 5 212 1 275 1 318 1 289 1 150 1 365 4 283 5 139 5 
244 1 140 1 63 2 104 2 213 1 365 2 139 2 283 2 
207 1 91 1 
207 1 91 1 
192 1 339 1 
192 1 339 1 
192 1 339 1 
207 1 329 1 91 1 
207 1 349 1 91 1 
192 1 207 2 339 1 91 2 122 1 197 1 
207 1 329 1 91 1 
207 1 329 1 91 1 
147 1 207 1 91 1 
147 1 207 1 91 1 
147 1 207 1 91 1 
131 1 87 2 153 1 205 1 256 2 90 2 3 2 75 1 6 2 172 1 324 1 164 2 12 1 149 2 
285 1 153 1 87 1 256 1 63 1 2 1 90 1 3 1 6 1 323 1 164 1 11 1 104 1 149 1 365 1 283 1 139 1 110 1 
359 1 234 1 31 1 
231 1 359 1 234 1 
8 1 34 1 231 1 21 1 359 3 31 2 
308 1 34 1 231 1 21 1 359 2 31 1 
34 2 231 1 21 1 359 2 31 1 
285 1 204 1 87 5 131 2 155 4 258 1 334 2 116 1 7 1 186 1 58 1 164 5 11 1 239 1 14 1 167 2 82 1 44 1 262 2 246 1 171 3 265 1 101 1 224 2 372 1 323 1 226 1 69 1 107 1 52 3 306 1 331 1 
204 1 87 9 131 5 184 5 155 7 258 3 311 1 38 1 236 1 186 2 58 6 164 9 239 3 14 3 344 1 167 6 62 5 82 1 262 6 246 2 20 1 368 1 171 8 265 3 101 1 224 6 323 4 372 2 226 3 69 3 107 1 228 1 52 9 306 2 331 2 
204 1 131 3 87 3 155 2 258 1 334 1 7 1 186 1 164 3 239 1 14 1 167 2 44 1 262 2 246 1 20 1 171 3 265 2 224 2 372 1 323 1 226 1 69 1 306 1 331 1 52 4 
204 1 131 4 87 4 155 3 258 2 334 2 311 1 38 1 7 1 186 1 164 4 239 2 14 2 167 4 44 1 262 4 246 1 20 1 368 1 171 5 265 3 224 4 372 1 323 2 226 2 69 2 52 7 306 1 331 1 
338 1 106 1 78 1 
338 1 282 1 
77 1 
338 1 89 1 
71 1 338 3 89 1 157 1 78 2 209 1 
338 1 89 1 209 1 
68 1 338 1 
156 1 133 3 143 7 100 2 115 1 84 1 55 2 163 1 145 1 26 1 337 1 85 4 27 3 10 1 105 1 14 1 69 1 
156 1 133 3 143 7 100 2 115 1 84 1 55 2 163 1 145 1 26 1 337 1 85 4 27 3 10 1 105 1 14 1 69 1 
156 1 133 3 143 7 46 1 100 2 115 1 84 1 55 2 163 1 145 1 26 1 337 1 85 4 27 3 10 1 105 1 14 1 69 1 
206 2 111 1 156 2 258 3 133 10 115 2 163 2 55 5 39 1 337 5 10 1 316 1 239 3 14 4 343 1 120 1 79 1 346 1 247 1 143 31 249 1 348 1 100 3 84 2 145 1 26 1 371 4 85 16 27 15 127 1 105 1 226 3 148 3 69 4 
111 1 206 4 156 1 133 4 143 9 348 2 100 2 115 1 84 1 163 1 55 3 26 1 337 1 85 5 27 4 59 1 10 1 316 2 105 1 14 1 69 1 79 2 120 2 30 1 
255 1 355 1 33 1 231 1 185 1 359 2 37 1 234 1 288 1 118 1 8 1 315 1 166 1 240 1 96 1 42 1 241 1 170 1 24 1 321 1 198 2 322 1 267 1 370 1 125 2 271 1 128 1 177 1 202 1 31 1 
255 1 355 1 33 1 231 1 185 1 359 2 37 1 160 1 234 1 288 1 8 1 118 1 315 1 166 1 240 1 42 2 241 1 321 1 198 3 322 1 267 1 370 1 125 3 271 1 128 1 177 1 86 1 202 1 31 1 109 1 
255 1 355 1 33 1 231 1 185 1 359 2 37 1 160 1 234 1 118 1 8 1 315 1 240 1 42 2 241 1 321 1 198 2 322 1 267 1 370 1 125 2 271 1 177 1 86 1 31 1 
255 1 355 2 332 1 33 1 89 1 288 1 118 1 40 1 338 1 166 1 240 2 217 1 241 2 121 1 198 1 223 1 322 1 370 2 125 1 103 1 177 1 280 1 109 1 
255 1 355 1 231 1 33 1 359 2 170 1 24 1 321 1 234 1 198 1 267 1 322 1 370 1 288 1 125 1 8 1 118 1 128 1 315 1 240 1 166 1 177 1 202 1 86 1 241 1 31 1 
0 1 
131 2 87 5 332 2 89 1 287 2 134 1 93 1 136 1 186 1 95 2 58 6 338 1 188 1 139 1 244 1 246 1 293 2 64 2 101 3 103 1 104 1 108 2 306 1 255 2 204 1 356 1 33 1 159 1 114 1 164 5 118 1 211 2 212 1 317 1 43 1 167 2 121 1 82 1 168 1 83 1 171 2 265 2 322 2 124 2 269 1 372 1 126 1 174 1 49 1 50 4 177 2 176 1 52 2 283 1 181 1 
87 3 356 1 134 1 164 3 58 2 212 1 317 1 188 1 139 1 43 1 244 1 168 1 83 1 293 1 101 1 126 1 174 1 104 1 50 2 283 1 181 1 305 1 
204 1 87 3 356 1 131 1 134 1 287 1 58 1 164 3 212 1 317 1 188 1 139 1 43 1 244 1 168 1 83 1 101 1 126 1 174 1 104 1 50 3 283 1 181 1 305 1 
204 1 87 3 356 1 131 1 134 1 287 1 164 3 58 2 212 1 317 1 188 1 139 1 43 1 244 1 168 1 83 1 293 1 101 1 124 1 126 1 174 1 104 1 50 3 305 1 283 1 181 1 
87 5 131 5 134 1 287 4 186 1 95 2 58 7 188 1 15 1 139 1 244 1 246 1 293 4 64 2 101 3 102 1 104 1 108 2 305 1 306 1 204 5 356 1 159 1 114 1 164 5 211 2 212 1 317 1 214 1 362 1 43 1 167 1 168 1 82 1 83 1 171 1 265 2 124 4 126 1 174 1 327 1 50 6 181 1 283 1 
87 4 131 2 134 1 287 2 186 1 95 2 58 4 188 1 139 1 244 1 246 1 293 2 64 2 101 2 104 1 108 2 306 1 204 1 356 1 159 1 114 1 164 4 211 2 212 1 317 1 43 1 167 1 82 1 168 1 83 1 171 1 265 2 124 2 126 1 269 1 174 1 50 4 181 1 283 1 52 2 
204 1 131 1 87 4 356 1 159 1 287 2 134 1 114 1 186 1 95 2 58 4 164 4 211 2 212 1 317 1 188 1 214 1 15 1 139 1 43 1 167 1 244 1 168 1 82 1 83 1 246 1 293 2 64 2 171 1 265 2 101 2 124 2 126 1 174 1 327 1 104 1 50 4 108 2 283 1 181 1 306 1 
204 1 131 1 87 4 356 1 159 1 287 2 134 1 114 1 186 1 95 2 58 4 164 4 211 2 212 1 317 1 188 1 214 1 15 1 139 1 43 1 167 1 244 1 168 1 82 1 83 1 246 1 293 2 64 2 171 1 265 2 101 2 124 2 126 1 174 1 327 1 104 1 50 4 108 2 283 1 181 1 306 1 
204 1 131 1 87 4 356 1 287 2 134 1 114 1 186 1 95 2 58 4 164 4 211 2 212 1 317 1 188 1 139 1 43 1 167 1 244 1 168 1 82 1 83 1 246 1 45 1 293 2 248 1 171 1 101 2 222 2 124 2 126 1 351 2 174 1 327 1 104 1 50 4 353 1 52 2 283 1 181 1 306 1 
204 1 131 1 87 4 356 1 159 1 134 1 287 3 114 1 186 1 95 2 164 4 58 5 211 2 212 1 317 1 188 1 15 1 214 1 139 1 43 1 167 1 244 1 82 1 168 1 246 1 83 1 293 3 64 2 171 1 265 2 101 2 124 3 102 1 126 1 174 1 327 1 104 1 50 5 108 2 306 1 283 1 181 1 
204 1 131 1 87 4 356 1 159 1 134 1 287 3 114 1 186 1 95 2 164 4 58 5 211 2 212 1 317 1 188 1 15 1 214 1 139 1 43 1 167 1 244 1 82 1 168 1 246 1 83 1 293 3 64 2 171 1 265 2 101 2 124 3 102 1 126 1 174 1 327 1 104 1 50 5 108 2 306 1 283 1 181 1 
87 4 131 1 134 1 287 2 186 1 95 2 58 4 188 1 139 1 244 1 246 1 293 2 101 2 351 2 104 1 353 1 306 1 204 1 356 1 114 1 164 4 211 2 212 1 317 1 43 1 167 1 82 1 168 1 83 1 171 1 222 2 124 2 126 1 269 1 174 1 50 4 181 1 283 1 52 2 
206 2 133 2 358 1 115 1 163 1 55 2 237 1 117 1 10 1 316 1 14 1 60 1 61 1 120 1 79 1 191 1 348 1 143 6 100 1 26 1 85 3 27 3 298 2 105 1 106 1 69 1 
206 4 357 1 258 1 133 2 358 1 55 1 337 1 117 11 39 1 316 2 165 1 239 2 14 1 120 2 79 2 61 11 60 4 191 2 218 1 346 1 348 2 143 14 320 1 99 1 371 3 85 8 27 6 297 1 298 1 226 2 148 3 69 2 70 1 
255 1 206 2 332 1 286 1 33 1 357 1 89 1 358 1 209 1 4 1 118 1 338 1 316 1 215 1 60 1 79 1 120 1 191 1 365 1 80 1 139 2 319 1 291 1 63 1 348 1 143 2 99 1 322 1 85 1 27 1 298 1 104 2 177 1 352 1 328 1 70 1 283 1 284 1 
132 1 332 1 89 2 133 8 4 1 55 4 337 4 338 2 10 1 239 2 14 3 61 7 60 7 191 3 139 3 345 2 291 1 63 1 348 3 143 20 100 1 99 1 26 1 146 2 27 10 298 2 105 1 104 3 69 3 70 1 255 3 206 6 357 1 33 2 258 2 358 3 36 2 309 1 161 2 209 2 115 1 313 2 163 1 117 7 118 2 316 3 120 3 79 3 215 2 365 1 80 2 319 2 264 1 322 3 85 10 177 3 86 1 226 2 283 1 
230 1 332 2 232 1 89 3 4 1 5 2 237 1 338 4 341 1 96 1 191 2 139 1 63 1 143 2 348 2 22 1 65 1 103 1 27 1 104 1 29 1 70 1 203 1 255 6 206 4 357 1 33 3 358 2 209 1 118 4 316 2 41 1 79 2 120 2 365 1 261 1 121 1 47 1 322 7 85 1 177 7 86 1 283 1 
206 2 258 1 133 1 358 1 55 1 117 1 316 1 239 1 14 1 318 1 60 1 61 1 289 1 120 1 79 1 191 1 365 1 139 1 63 1 348 1 143 3 99 1 85 1 27 2 374 1 104 1 226 1 69 1 283 1 
206 2 133 1 143 2 358 1 348 1 237 1 337 1 117 1 268 1 85 2 316 1 239 1 69 1 60 1 61 1 79 1 120 1 191 1 
206 2 258 1 133 1 143 2 358 1 348 1 55 1 237 1 117 1 27 2 316 1 175 1 14 1 60 1 61 1 79 1 120 1 191 1 
206 2 258 1 133 2 358 1 55 1 237 1 117 2 337 1 316 1 239 1 14 1 120 1 79 1 61 2 60 2 191 1 348 1 143 4 85 2 27 2 226 1 69 1 
230 1 206 2 133 1 143 2 358 1 348 1 337 1 117 1 268 1 85 2 316 1 239 1 69 1 60 1 61 1 79 1 120 1 191 1 
230 1 206 2 258 1 133 1 143 2 358 1 348 1 55 1 117 1 27 2 316 1 175 1 14 1 60 1 61 1 79 1 120 1 191 1 
230 1 206 2 258 1 133 2 358 1 55 1 117 2 337 1 316 1 239 1 14 1 120 1 79 1 61 2 60 2 191 1 348 1 143 4 85 2 27 2 226 1 69 1 
206 2 258 1 133 2 358 1 348 1 143 4 55 1 337 1 117 2 85 2 27 2 316 1 239 1 14 1 226 1 69 1 60 2 61 2 79 1 120 1 191 1 
255 1 206 2 332 1 357 1 33 1 89 1 358 1 209 1 118 1 338 1 316 1 215 1 79 1 120 1 191 1 80 1 139 1 345 1 319 1 143 2 348 1 322 1 85 1 27 1 298 1 104 1 177 1 70 1 
255 1 206 2 332 1 357 1 33 1 89 1 358 1 209 1 118 1 338 1 316 1 79 1 120 1 191 1 139 1 319 1 18 1 143 2 348 1 322 1 85 1 173 1 27 1 298 1 104 1 177 1 28 1 70 1 
206 2 258 1 133 2 358 1 55 1 117 2 337 1 316 1 239 1 14 1 120 1 79 1 61 2 60 2 191 1 348 1 143 4 99 1 85 2 27 2 226 1 69 1 
255 1 206 2 33 1 258 1 133 2 89 1 358 1 209 1 161 1 55 1 337 1 117 2 118 1 338 1 316 1 239 1 14 1 96 1 60 2 61 2 215 1 79 1 120 1 191 1 80 1 139 1 345 1 319 1 143 4 348 1 322 1 85 2 27 2 104 1 177 1 226 1 69 1 
206 2 258 1 133 1 358 1 337 1 117 1 316 1 239 1 14 1 318 1 289 1 120 1 79 1 61 1 60 1 191 1 365 1 139 1 63 1 348 1 143 3 99 1 85 2 27 1 296 1 104 1 226 1 69 1 283 1 
206 4 258 3 133 6 55 3 210 1 39 1 337 3 316 2 239 3 13 2 14 3 120 2 79 2 346 1 250 1 348 2 143 19 251 2 144 1 371 2 85 9 27 10 325 1 326 1 225 1 226 3 302 1 148 1 69 3 30 1 
111 1 206 4 258 1 133 1 158 1 55 1 316 2 239 1 14 1 13 2 120 2 79 2 290 1 346 2 250 2 348 2 143 14 144 1 371 2 85 6 27 8 325 1 225 2 226 1 148 2 69 1 303 1 30 1 
111 1 206 6 258 3 133 4 158 1 55 2 210 1 39 1 337 2 316 3 239 3 13 3 14 3 120 3 79 3 290 1 346 3 250 1 348 3 143 27 251 1 144 1 371 4 85 12 27 15 325 1 326 1 300 1 225 2 226 3 148 3 69 3 303 1 30 1 
111 1 206 6 258 3 133 5 158 1 55 3 210 1 39 1 337 2 316 3 239 3 13 3 14 3 120 3 79 3 290 1 346 3 250 1 348 3 143 27 251 1 144 1 371 4 85 12 27 15 325 1 326 1 300 1 225 2 226 3 148 3 69 3 303 1 30 1 
307 1 111 1 206 4 258 5 133 11 158 1 115 1 163 1 55 6 39 2 337 5 10 1 316 2 239 6 13 2 14 6 120 2 79 2 290 1 346 2 250 1 348 2 143 42 100 1 144 1 26 1 371 4 85 23 27 19 270 1 297 2 325 1 105 1 225 1 226 6 148 4 69 7 303 1 30 1 
205 1 256 1 23 1 3 1 149 1 6 1 
2 1 
256 1 3 1 138 1 149 1 6 1 
131 1 153 1 87 1 205 1 256 1 90 2 3 1 75 1 6 1 172 1 324 1 164 1 12 1 149 1 
131 1 153 1 87 1 205 1 256 1 90 2 3 1 75 1 6 1 172 1 324 1 164 1 12 1 149 1 
131 1 153 1 87 1 205 1 256 1 90 2 3 1 75 1 6 1 172 1 324 1 164 1 12 1 149 1 
295 1 
295 1 
277 1 
277 1 
182 1 364 1 
285 1 87 1 256 1 155 1 2 1 90 1 3 1 75 1 66 1 6 1 172 1 323 1 164 1 11 1 149 1 110 1 
295 1 
277 1 
255 2 206 2 88 1 33 1 357 1 232 1 89 1 358 1 233 1 5 2 118 1 338 1 316 1 41 1 342 1 79 1 120 1 191 1 139 2 348 1 143 2 99 1 294 1 322 2 199 1 85 1 27 1 104 2 177 2 70 1 283 2 
255 2 366 1 355 1 231 1 33 1 359 2 234 1 235 1 322 2 267 1 350 1 8 1 118 1 128 1 315 1 177 2 96 1 86 1 31 1 
255 1 355 1 231 1 33 1 359 2 234 1 322 1 267 1 350 1 8 1 118 1 128 1 315 1 177 1 86 1 179 1 31 1 
255 1 366 1 121 1 355 1 194 1 332 1 33 1 89 1 223 1 322 1 118 1 103 1 338 1 177 1 
255 1 366 1 355 1 231 1 33 1 359 2 234 1 235 1 322 1 267 1 350 1 8 1 118 1 128 1 315 1 177 1 86 1 31 1 
72 1 
167 1 204 1 131 1 112 1 106 1 171 1 17 1 
167 1 204 1 82 1 87 1 131 2 246 1 159 1 64 1 171 1 265 1 101 1 186 1 164 1 58 1 108 1 52 1 306 1 
87 5 131 8 332 1 89 3 92 2 336 2 136 1 186 4 58 5 338 10 340 2 239 2 96 1 14 2 97 1 17 1 193 2 195 1 246 4 196 1 101 3 68 2 146 2 69 2 354 2 306 4 32 2 255 3 71 1 204 2 152 2 112 1 33 3 35 1 258 2 209 3 118 4 164 5 78 2 363 1 167 8 82 4 262 6 171 9 265 6 123 2 322 3 224 6 372 2 177 3 226 2 282 3 181 2 52 12 
204 1 87 1 131 4 258 1 158 1 186 2 164 1 58 1 239 1 14 1 260 1 167 2 82 2 262 4 246 2 290 1 346 1 171 5 265 3 101 1 224 4 371 1 226 1 148 1 69 1 354 1 303 1 52 6 306 2 
87 1 208 1 115 1 163 1 186 1 164 1 14 1 15 1 289 1 365 1 139 1 244 1 140 1 167 2 82 1 246 1 63 1 171 2 123 1 26 1 375 1 104 1 299 1 227 1 69 2 354 2 306 1 283 1 
167 1 82 1 204 1 131 1 246 1 112 1 171 1 186 1 306 1 17 1 
167 5 262 5 131 5 258 2 171 5 123 1 265 5 224 5 146 1 239 2 14 2 226 2 69 2 354 2 52 10 
204 1 131 1 164 1 87 1 58 1 101 1 
255 4 87 3 332 2 183 1 33 1 35 2 89 1 93 1 136 2 186 2 118 1 58 4 164 3 187 1 338 1 167 2 82 1 121 1 246 2 195 1 20 1 171 2 101 2 322 4 372 2 103 1 176 1 177 4 306 2 
255 1 206 2 332 1 33 1 89 1 358 1 209 1 118 1 338 1 316 1 120 1 79 1 289 2 215 1 365 2 191 1 139 3 80 1 345 1 319 1 63 2 143 1 348 1 322 1 27 1 298 1 104 3 177 1 299 1 70 1 283 2 254 1 
167 2 82 1 204 2 262 2 131 4 246 1 100 1 171 1 265 2 224 2 136 1 186 1 372 1 52 4 306 1 
256 1 263 1 3 1 
9 1 256 1 3 1 190 1 364 1 
256 1 263 1 3 1 
256 1 263 1 3 1 
256 1 335 1 3 1 
256 1 335 1 3 1 
256 1 335 1 3 1 
256 1 3 1 
207 1 91 1 
206 4 111 1 133 3 143 8 348 2 100 1 115 1 55 2 163 1 26 1 337 1 85 4 27 4 10 1 316 2 105 1 14 1 69 1 79 2 120 2 
26 1 85 3 27 3 10 1 105 1 14 1 133 2 143 6 106 1 100 1 69 1 115 1 55 2 163 1 
206 2 258 1 133 2 348 1 143 4 55 1 266 1 337 1 85 2 27 2 316 1 239 1 14 1 226 1 69 1 79 1 120 1 
346 1 258 1 133 2 143 7 55 1 371 2 39 1 337 1 85 3 27 4 239 1 14 1 226 1 148 1 69 1 
111 2 206 4 257 1 258 2 133 9 115 2 163 2 55 5 337 4 39 1 10 1 316 2 239 2 14 3 79 2 120 2 218 1 143 23 348 2 100 1 26 1 371 2 85 11 27 12 297 1 105 1 226 2 69 3 148 2 
371 1 27 1 143 1 
85 1 143 1 148 1 
206 2 258 1 133 3 348 1 143 6 266 1 55 2 146 1 337 1 85 3 27 3 316 1 239 1 14 1 226 1 69 1 120 1 79 1 
307 1 206 2 258 2 133 2 158 1 55 1 337 1 316 1 239 2 14 2 120 1 79 1 290 1 346 1 143 12 348 1 371 1 85 6 27 6 270 1 226 2 148 1 69 2 303 1 30 1 
133 2 143 6 115 1 163 1 55 1 26 1 337 1 85 3 27 3 14 1 69 1 
111 1 206 2 257 1 133 2 143 3 348 1 115 1 55 1 163 1 337 1 85 1 27 2 10 1 316 1 105 1 79 1 120 1 
206 2 133 5 348 1 143 10 115 2 163 2 55 3 337 2 26 1 85 5 27 5 316 1 14 2 227 1 69 2 120 1 79 1 30 1 
206 2 133 1 348 1 143 2 337 1 85 2 316 1 239 1 69 1 79 1 120 1 30 1 
206 2 258 1 133 2 348 1 143 4 55 1 337 1 85 2 27 2 316 1 239 1 14 1 226 1 69 1 79 1 120 1 30 1 
111 1 206 6 257 1 133 2 143 3 348 3 115 1 163 1 55 1 337 1 85 1 27 2 326 1 316 3 79 3 120 3 30 1 
111 2 206 10 257 1 258 3 133 12 115 3 163 3 55 7 39 1 337 5 10 1 316 5 239 3 14 5 343 1 120 5 79 5 346 1 249 1 348 5 143 34 100 1 266 1 26 2 371 4 85 16 27 18 127 1 326 1 105 1 226 3 148 3 69 5 30 1 
371 1 85 1 27 1 206 2 346 1 316 1 143 2 158 1 348 1 148 1 120 1 79 1 30 1 
206 4 346 1 133 1 348 2 158 1 143 5 266 1 337 1 39 1 371 2 85 3 27 2 316 2 239 1 226 1 69 1 148 1 79 2 120 2 30 1 
111 1 290 1 206 4 346 1 258 1 133 1 348 2 158 1 143 8 55 1 371 1 85 3 27 5 316 2 239 1 14 1 226 1 69 1 148 1 303 1 79 2 120 2 30 1 
307 1 111 1 206 4 258 1 133 2 158 1 55 1 337 1 316 2 239 2 14 1 120 2 79 2 290 1 346 1 143 11 348 2 371 1 85 7 27 4 270 1 226 2 148 1 69 2 303 1 30 1 
371 1 85 1 27 1 206 2 346 1 316 1 143 2 158 1 348 1 148 1 120 1 79 1 30 1 
307 1 206 2 258 2 133 2 158 1 55 1 337 1 316 1 239 2 14 2 120 1 79 1 290 1 346 1 143 12 348 1 371 1 85 6 27 6 270 1 226 2 148 1 69 2 303 1 30 1 
111 1 290 1 206 6 346 1 258 1 133 1 348 3 158 1 143 8 55 1 266 1 371 1 85 3 27 5 316 3 239 1 14 1 226 1 69 1 148 1 303 1 79 3 120 3 30 1 
111 1 290 1 206 6 346 1 258 1 133 2 348 3 158 1 143 8 55 2 371 1 85 3 27 5 326 1 316 3 239 1 14 1 226 1 69 1 148 1 303 1 79 3 120 3 30 1 
133 6 143 7 115 3 163 3 55 3 337 3 26 1 85 3 27 4 10 1 105 2 14 1 69 1 
111 1 290 1 206 6 346 1 258 1 133 1 348 3 158 1 143 8 55 1 371 1 85 3 27 5 326 1 316 3 239 1 14 1 226 1 69 1 148 1 303 1 79 3 120 3 30 1 
130 1 298 1 104 1 212 1 74 1 139 1 283 1 
130 1 98 1 373 1 298 1 104 1 212 1 74 1 137 1 180 1 139 1 283 1 135 1 
255 1 121 1 118 1 103 1 338 1 332 1 33 1 89 1 177 1 106 1 322 1 
255 1 319 1 332 1 63 1 33 1 89 1 209 1 4 1 322 1 118 1 338 1 298 1 104 2 177 1 215 1 365 1 283 1 139 2 
244 1 255 1 319 1 356 1 83 1 63 1 33 1 35 1 89 2 336 1 209 2 4 1 322 1 68 1 118 1 338 3 298 1 104 2 177 1 215 1 365 2 283 2 139 2 
244 1 255 2 319 1 356 1 83 1 63 1 33 1 35 1 89 2 336 1 209 2 4 1 322 2 68 1 118 1 338 3 173 1 298 1 104 2 177 2 361 1 365 2 283 2 139 2 
255 1 204 1 87 2 131 1 35 1 208 1 310 1 58 1 164 2 338 2 78 1 289 1 365 1 139 1 244 1 140 1 63 1 322 1 375 1 104 1 177 1 299 1 282 1 283 1 181 1 
255 3 204 1 131 1 87 2 332 1 33 1 35 1 89 1 336 1 209 1 322 3 68 1 118 1 164 2 58 1 338 4 340 1 177 3 361 1 78 1 282 1 181 1 
255 1 118 1 33 1 177 1 322 1 243 1 
261 1 255 5 71 1 332 2 33 2 232 1 89 2 65 1 47 1 209 1 5 1 322 6 94 1 118 3 338 3 96 1 177 6 86 1 29 1 203 1 
88 1 89 1 133 2 4 1 55 2 338 1 10 1 96 1 14 1 60 1 61 1 191 2 139 2 345 1 63 1 348 2 143 6 99 1 100 1 26 1 27 3 298 2 104 2 105 1 69 1 255 1 206 4 33 1 358 2 161 1 209 1 115 1 313 1 163 1 117 1 118 1 316 2 215 1 120 2 79 2 365 1 80 1 319 1 322 1 85 3 177 1 283 1 
255 1 204 1 131 1 87 3 152 1 332 1 112 1 155 1 92 1 186 2 164 3 58 2 338 2 340 1 78 1 17 1 167 1 82 2 193 1 246 2 195 1 171 1 101 1 322 1 177 1 282 1 306 2 181 1 
255 2 71 1 33 1 89 1 209 1 322 2 118 2 338 2 96 1 177 2 78 1 363 1 243 1 
255 4 121 1 332 1 33 1 89 1 322 4 118 1 103 1 338 1 177 4 96 1 178 1 361 1 
255 2 132 1 33 1 35 1 89 1 22 1 47 1 209 1 322 2 118 2 338 1 177 2 341 1 203 1 
255 1 118 1 332 1 231 1 33 1 177 1 359 1 234 1 267 1 322 1 
255 2 33 1 232 1 89 1 322 2 118 1 338 1 96 1 177 2 86 1 342 1 
255 4 261 1 121 1 332 1 33 2 35 1 232 1 89 2 65 1 322 5 103 1 118 2 338 3 177 5 96 1 178 1 
255 4 121 1 332 1 33 2 35 1 232 1 89 2 65 1 322 5 103 1 118 2 238 1 338 3 177 5 96 1 178 1 
255 1 319 1 332 1 63 1 33 1 89 1 209 1 4 1 322 1 118 1 338 1 173 1 298 1 104 2 177 1 365 1 283 1 139 2 
255 1 71 1 33 1 35 1 89 1 47 1 209 1 322 1 94 1 118 2 338 1 177 1 203 1 
219 1 53 1 233 1 294 1 199 1 104 1 51 1 283 1 139 1 
81 1 219 1 330 1 
219 1 53 1 298 1 51 1 314 1 
244 1 219 1 81 1 204 1 53 2 131 1 356 1 87 2 83 1 155 1 312 1 314 2 164 2 174 1 298 1 129 1 330 1 181 1 51 2 
271 1 185 1 106 1 37 1 
125 1 288 1 271 1 166 1 185 1 37 1 198 1 
370 1 240 1 198 1 
229 1 25 1 125 3 288 1 367 1 271 1 166 1 185 1 37 1 24 1 162 2 198 3 
125 2 288 1 271 1 166 1 185 1 37 1 16 1 42 1 198 2 
347 1 359 1 24 1 234 1 198 1 288 1 125 1 271 1 166 1 253 1 31 1 
125 1 288 1 271 1 166 1 37 1 24 1 198 1 
125 1 288 1 166 1 185 1 37 2 24 1 198 1 
37 1 24 1 369 1 198 2 288 2 125 2 271 1 166 2 278 1 304 1 
154 1 292 1 347 1 185 1 37 1 24 1 198 3 288 1 125 3 271 2 166 1 281 1 42 2 
231 1 185 1 359 2 37 1 24 1 234 1 198 2 288 1 125 2 57 1 8 1 271 1 166 1 42 1 31 1 
347 1 185 1 37 1 24 1 198 4 288 2 125 4 271 2 166 2 279 1 16 1 281 1 42 2 
125 1 288 1 271 1 166 1 185 1 37 1 24 1 198 1 
229 1 347 1 185 2 37 2 162 1 198 4 25 1 125 4 288 1 271 3 273 1 166 1 281 1 42 2 
141 1 185 1 37 1 24 1 198 2 288 1 125 2 271 1 166 1 276 1 42 1 242 1 
229 2 245 1 185 1 24 1 37 1 162 2 198 3 25 1 288 1 125 3 271 1 166 1 
48 1 271 2 274 2 189 1 
220 1 125 1 288 1 166 1 24 1 198 1 
125 2 288 1 271 1 292 1 166 1 185 1 37 1 24 1 42 1 198 2 
272 1 
125 1 288 1 271 1 166 1 185 1 37 1 24 1 198 1 
292 1 185 1 24 1 37 1 162 1 198 3 288 1 125 3 271 1 166 1 42 1 
271 1 273 1 347 1 281 1 
271 1 37 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 328 133 100 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 328 133 100 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 328 133 100 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 328 133 100 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 328 133 100 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 0 1 301 7 245 2 29 2 7 1 322 1 77 5 149 9 101 4 37 1 202 1 79 1 130 3 63 1 15 1 20 2 355 1 261 1 52 1 237 1 211 1 341 1 67 9 
68 1 0 1 301 7 245 2 29 2 7 1 322 1 77 5 149 9 101 4 37 1 202 1 79 1 130 3 63 1 15 1 20 2 355 1 261 1 52 1 237 1 211 1 341 1 67 9 
68 1 0 1 213 1 144 1 301 6 245 2 29 2 7 2 322 2 77 5 149 9 101 4 202 1 126 1 79 1 231 1 15 2 130 3 63 1 260 1 20 2 355 1 261 1 237 1 52 1 112 1 211 2 67 9 
68 1 0 1 213 1 144 1 301 6 245 2 29 2 7 2 322 2 77 5 149 9 101 4 202 1 126 1 79 1 231 1 15 2 130 3 63 1 260 1 20 2 355 1 261 1 237 1 52 1 112 1 211 2 67 9 
68 1 0 1 213 1 144 1 301 7 245 2 29 2 7 2 322 2 77 6 149 10 101 5 202 1 126 1 79 1 231 1 15 2 130 4 63 1 260 1 20 2 355 1 261 1 237 1 52 1 112 1 211 2 67 10 
68 1 213 1 144 1 301 4 245 1 29 2 7 2 322 2 77 4 149 7 101 3 202 1 126 1 79 1 231 1 15 2 130 2 63 1 260 1 20 2 355 1 261 1 237 1 52 1 112 1 211 2 67 7 
202 1 0 1 130 1 15 1 301 3 245 2 29 1 7 1 20 1 355 1 261 1 77 3 52 1 237 1 211 1 67 4 149 4 101 2 
202 1 15 1 144 1 260 1 29 1 7 1 20 1 322 1 355 1 261 1 250 1 178 1 77 1 125 1 67 2 149 2 
202 1 68 1 130 1 301 1 29 2 20 2 322 1 355 1 261 1 77 2 67 3 149 3 101 1 
19 1 299 1 354 1 
179 2 207 1 299 1 
314 2 38 1 204 2 142 1 346 2 192 2 315 2 372 2 
141 1 142 1 346 2 192 2 69 1 363 1 217 1 60 1 306 1 95 1 177 2 33 1 366 1 326 1 228 1 350 2 254 1 38 1 203 2 204 3 41 2 311 1 84 1 257 1 287 1 372 2 46 1 65 1 108 1 314 3 139 1 338 1 87 2 51 1 340 1 167 1 315 2 
314 1 38 1 169 1 204 1 346 1 192 1 356 1 264 1 315 1 372 1 
204 1 345 1 282 1 346 1 333 1 299 1 181 1 90 1 354 1 314 1 273 1 138 1 197 1 264 1 
204 1 345 1 282 1 346 1 192 1 333 2 299 1 90 2 181 1 372 1 354 1 314 1 138 1 264 1 315 1 
170 1 333 1 165 1 208 1 90 1 
170 1 215 1 333 2 299 1 208 1 90 2 354 1 220 1 
333 1 208 1 90 1 
38 1 169 1 170 1 204 1 346 1 333 1 192 1 90 1 372 1 47 1 314 1 356 1 264 1 315 1 
299 1 
170 1 215 1 333 2 263 1 299 1 208 1 90 2 354 1 
151 1 170 2 40 1 215 1 333 5 154 1 298 1 180 1 299 1 90 5 208 2 354 1 210 1 66 1 163 2 198 1 185 1 148 2 329 2 
19 1 142 1 
295 1 204 2 142 1 346 2 192 1 71 1 372 1 314 2 264 1 315 1 227 1 
162 1 8 1 242 1 
203 1 204 1 142 1 41 1 255 1 84 1 217 1 46 1 108 1 314 1 139 1 338 1 95 1 366 1 167 1 350 1 
203 1 204 2 346 1 41 1 242 1 192 1 348 1 84 1 372 1 217 1 46 1 108 1 314 2 139 1 95 1 338 1 366 1 167 1 277 1 350 1 
314 3 204 3 142 1 346 3 192 3 348 1 315 1 372 3 
314 1 169 1 204 1 346 1 192 1 264 1 372 1 
204 1 346 1 192 1 71 1 372 1 314 1 264 1 315 1 227 1 
345 1 142 1 346 3 192 3 348 1 363 1 90 1 4 1 217 1 60 1 306 1 95 1 177 2 33 1 251 1 366 1 227 1 254 1 277 1 350 1 38 1 203 1 204 4 282 1 41 1 333 1 311 1 84 1 257 1 181 1 372 3 46 1 65 1 108 1 314 4 139 1 138 1 338 1 87 1 51 1 264 1 340 1 167 1 315 2 
314 2 204 2 142 1 346 2 192 1 197 1 348 1 372 1 200 1 
204 3 345 1 282 1 346 3 333 1 192 3 348 2 299 1 90 1 181 1 372 3 314 3 48 1 138 1 251 1 264 1 315 1 227 1 277 1 
204 2 346 2 192 2 242 1 348 1 372 2 162 1 314 2 315 1 227 1 
203 1 204 1 142 1 41 1 84 1 217 1 46 1 108 1 314 1 139 1 338 1 95 1 366 1 167 1 350 1 
203 1 204 1 142 1 41 1 84 1 217 1 145 1 46 1 314 1 338 1 95 1 366 1 167 1 350 1 99 1 
141 2 296 1 242 2 243 1 363 1 118 1 60 1 364 1 304 1 8 2 306 1 177 2 330 1 152 1 279 1 281 1 311 1 65 1 109 1 162 2 136 1 87 4 51 1 340 2 
314 1 204 1 138 1 346 1 192 1 264 1 372 1 267 1 
204 5 142 1 346 5 192 4 348 2 70 1 372 4 314 5 137 1 197 1 315 1 227 1 277 1 200 1 
314 2 169 1 204 2 346 2 192 2 264 1 372 2 267 1 
14 1 376 1 
14 1 376 1 
24 1 325 1 
24 1 325 1 
24 1 325 1 
14 1 54 1 376 1 
14 1 54 1 376 1 
120 1 14 1 376 1 
24 1 14 2 252 1 325 1 59 1 376 2 
14 1 54 1 376 1 
14 1 353 1 376 1 
14 1 353 1 376 1 
14 1 353 1 376 1 
331 1 317 2 14 2 191 1 333 2 299 1 259 1 90 2 160 2 248 2 93 2 184 1 176 1 199 1 252 1 351 2 376 2 35 1 278 3 
317 1 142 1 346 2 192 2 90 1 248 1 120 1 147 1 324 1 351 1 278 1 35 1 204 2 13 1 78 1 14 1 333 1 157 1 160 1 372 2 314 2 357 1 376 1 344 1 
7 1 15 1 211 1 
7 1 15 1 178 1 
309 1 7 3 91 1 206 1 178 1 211 2 
309 1 7 2 91 1 178 1 292 1 211 1 
309 1 7 2 91 2 178 1 211 1 
170 4 215 1 26 1 299 2 118 1 90 5 3 1 364 1 321 2 304 1 121 2 198 3 324 1 148 1 34 1 329 1 150 1 330 1 151 1 13 1 179 3 333 5 154 2 207 1 83 1 16 1 208 1 354 1 163 1 373 1 357 1 266 2 
170 7 362 1 215 1 26 2 56 1 300 1 299 5 118 3 90 9 364 3 321 6 304 3 121 6 32 1 198 8 148 2 329 2 330 3 151 1 179 9 333 9 154 6 312 1 180 1 207 3 83 2 16 3 208 6 132 1 354 1 163 2 373 1 165 5 357 4 239 5 
170 2 26 1 299 3 90 3 118 1 364 1 321 2 304 1 121 2 198 3 148 1 34 1 150 1 329 1 330 1 179 4 333 3 154 2 207 2 180 1 83 1 16 1 354 1 163 1 357 1 266 1 
170 3 362 1 26 1 56 1 299 4 90 4 118 2 364 2 321 4 304 2 121 4 198 5 148 1 34 1 329 1 150 1 330 2 179 7 333 4 154 4 207 3 180 1 83 1 16 2 132 1 354 1 163 1 357 2 266 2 
19 1 167 1 276 1 
127 1 167 1 
332 1 
366 1 167 1 
95 1 366 1 167 3 276 2 343 1 6 1 
95 1 366 1 167 1 
111 1 167 1 
310 1 141 4 243 3 230 1 81 2 159 1 109 2 364 1 135 1 304 1 175 1 349 1 87 7 186 1 340 3 352 1 11 1 
310 1 141 4 243 3 230 1 81 2 159 1 109 2 364 1 135 1 304 1 175 1 349 1 87 7 186 1 340 3 352 1 11 1 
310 1 141 4 283 1 243 3 230 1 81 2 159 1 109 2 364 1 135 1 304 1 175 1 349 1 87 7 186 1 340 3 352 1 11 1 
141 16 243 10 118 3 303 3 364 4 304 4 175 5 306 1 31 1 177 2 365 1 349 2 11 1 352 2 12 1 368 1 330 3 310 1 370 1 230 2 311 1 81 3 16 3 158 1 159 2 65 1 109 5 135 1 183 1 87 31 186 1 51 1 340 15 238 4 
141 5 270 1 243 4 364 1 304 1 175 1 306 2 177 4 349 1 11 1 352 1 311 2 128 1 230 1 81 2 158 1 159 1 65 2 109 3 135 1 87 9 51 2 186 1 340 4 
190 1 271 1 193 1 2 1 301 1 29 1 7 2 322 1 224 1 178 1 77 1 350 1 149 2 203 1 202 1 41 1 80 1 15 1 285 1 206 1 84 1 258 1 20 1 355 1 261 1 338 1 236 1 262 1 211 1 67 2 
271 1 193 1 2 1 301 2 29 1 74 1 7 2 322 1 224 1 178 1 77 1 350 1 149 3 203 1 41 1 80 1 15 1 206 1 285 1 84 1 258 1 86 1 20 1 355 1 261 1 338 1 291 1 262 1 211 1 67 3 
271 1 301 2 74 1 7 2 322 1 224 1 178 1 77 1 350 1 149 2 203 1 41 1 80 1 285 1 206 1 15 1 84 1 258 1 355 1 261 1 338 1 291 1 262 1 211 1 67 2 
307 1 203 1 41 1 271 2 285 2 84 1 195 1 258 2 218 1 217 1 29 1 86 1 9 1 322 2 20 1 338 1 50 1 164 1 366 1 167 1 350 1 67 1 149 1 
271 1 193 1 2 1 29 1 74 1 7 2 322 1 224 1 178 1 350 1 149 1 203 1 202 1 41 1 80 1 15 1 285 1 206 1 84 1 258 1 20 1 338 1 236 1 262 1 211 1 67 1 
134 1 
294 2 360 1 345 1 215 2 115 1 346 1 173 5 299 1 90 4 5 3 222 1 247 1 273 1 92 1 197 1 198 1 148 1 329 1 151 1 36 1 369 1 204 1 153 3 282 1 333 4 154 1 207 2 334 1 181 1 208 5 354 1 163 1 314 1 336 2 138 1 339 2 264 1 293 3 358 2 88 1 240 1 265 1 
294 2 360 1 345 1 215 2 115 1 346 1 173 5 299 1 90 4 5 3 222 1 247 1 273 1 92 1 197 1 198 1 148 1 329 1 151 1 36 1 369 1 204 1 153 3 282 1 333 4 154 1 207 2 334 1 181 1 208 5 354 1 163 1 314 1 336 2 138 1 339 2 264 1 293 3 358 2 88 1 240 1 265 1 
345 1 215 2 346 1 143 2 173 4 299 1 90 4 5 2 222 1 119 1 75 2 273 1 197 1 198 1 148 1 329 1 36 1 151 1 369 1 204 1 153 2 282 1 179 2 333 4 154 1 17 1 208 4 181 1 354 1 163 1 314 1 138 1 339 2 264 1 293 2 358 2 88 1 240 1 265 1 
294 2 345 1 346 1 299 2 194 1 90 5 5 2 92 1 197 1 198 2 148 1 350 2 151 1 203 2 204 1 153 2 154 2 207 2 17 1 208 6 354 1 163 1 314 1 264 1 167 1 358 2 265 1 215 3 26 1 173 4 218 1 217 2 222 1 273 1 323 1 366 1 275 1 329 1 36 1 369 1 282 1 179 2 41 2 333 5 84 1 181 1 336 2 138 1 338 1 339 2 50 1 293 2 55 1 240 1 88 1 
369 1 36 1 204 1 153 1 345 1 282 1 215 1 346 1 333 3 173 2 208 2 181 1 90 3 222 1 314 1 273 1 138 1 197 1 263 1 264 1 240 1 265 1 
345 1 346 1 215 1 173 3 299 1 90 3 5 1 222 1 273 1 197 1 36 1 369 1 204 1 282 1 333 3 208 1 181 1 354 1 314 1 138 1 263 1 264 1 240 1 265 1 
345 1 215 1 346 1 173 3 299 1 90 3 5 1 222 1 273 1 197 1 36 1 369 1 204 1 153 1 282 1 333 3 181 1 208 2 354 1 314 1 138 1 263 1 264 1 293 1 240 1 265 1 
294 2 345 1 346 1 299 5 90 5 5 4 247 1 92 1 197 1 198 1 148 1 151 1 204 1 153 4 154 1 207 2 208 7 354 5 314 1 163 1 263 1 264 1 358 2 265 1 360 1 361 1 215 3 115 1 173 6 222 1 273 1 329 1 369 1 36 1 282 1 333 5 334 1 181 1 336 2 138 1 339 2 293 4 240 1 88 1 
294 2 345 1 346 1 299 2 90 4 5 2 92 1 197 1 198 1 148 1 151 1 204 1 153 2 154 1 207 2 208 4 17 1 354 1 314 1 163 1 264 1 358 2 265 1 215 2 173 4 222 1 273 1 329 1 369 1 36 1 282 1 179 2 333 4 181 1 336 2 138 1 339 2 293 2 240 1 88 1 
294 2 345 1 215 2 346 1 115 1 173 4 299 1 90 4 5 2 222 1 247 1 273 1 92 1 197 1 198 1 148 1 329 1 36 1 369 1 151 1 204 1 153 2 282 1 333 4 154 1 207 2 334 1 208 4 181 1 354 1 314 1 163 1 336 2 138 1 339 2 264 1 293 2 358 2 88 1 240 1 265 1 
294 2 345 1 215 2 346 1 115 1 173 4 299 1 90 4 5 2 222 1 247 1 273 1 92 1 197 1 198 1 148 1 329 1 36 1 369 1 151 1 204 1 153 2 282 1 333 4 154 1 207 2 334 1 208 4 181 1 354 1 314 1 163 1 336 2 138 1 339 2 264 1 293 2 358 2 88 1 240 1 265 1 
345 1 215 2 346 1 318 1 143 2 173 4 299 1 90 4 5 2 119 1 222 1 75 2 247 1 273 1 197 1 198 1 148 1 329 1 36 1 369 1 151 1 204 1 153 2 282 1 179 2 333 4 154 1 129 1 208 4 181 1 354 1 314 1 163 1 138 1 339 2 264 1 293 2 358 2 88 1 240 1 265 1 
141 3 142 2 242 1 243 2 363 1 60 1 364 1 304 1 8 1 306 1 177 2 11 1 352 1 281 1 230 1 311 1 81 1 65 1 109 2 162 1 19 1 135 1 87 6 186 1 51 1 340 3 
141 8 142 1 242 11 243 2 363 1 118 2 302 1 303 3 60 2 364 1 175 1 304 2 8 11 223 1 306 2 177 4 365 1 97 1 326 1 330 1 311 2 156 1 16 2 257 1 65 2 109 1 162 4 337 1 183 1 87 14 51 2 340 6 238 3 
141 1 142 1 346 1 192 1 348 1 363 1 217 1 60 1 95 1 306 1 76 1 62 1 177 2 366 1 326 1 350 1 277 1 203 1 204 2 41 1 311 1 84 1 255 1 156 1 257 1 372 1 46 1 108 1 65 1 162 1 314 2 139 1 338 1 87 2 51 1 167 1 340 1 212 1 
141 10 142 2 346 1 347 1 192 1 242 7 348 1 243 8 60 3 304 3 8 7 306 3 95 2 98 1 352 1 11 1 350 3 254 2 203 3 204 3 311 3 107 2 156 1 16 2 257 1 18 2 65 3 108 2 109 4 314 3 162 7 167 2 363 3 118 2 217 1 74 1 364 3 175 4 122 1 177 6 366 2 326 1 277 1 330 2 41 3 230 1 81 1 84 2 372 1 46 2 335 2 135 1 139 2 338 2 87 20 186 1 51 3 340 10 189 2 
190 1 141 1 346 1 192 1 348 1 72 1 363 2 217 2 218 1 60 2 74 1 306 2 177 4 123 1 366 2 326 1 350 8 203 7 204 1 281 1 41 8 311 2 84 2 257 1 287 2 372 1 65 2 110 1 314 1 338 2 50 1 87 2 51 2 21 1 166 1 167 3 340 1 22 1 268 1 
141 1 346 1 242 1 192 1 243 1 363 1 118 1 60 1 364 1 304 1 8 1 306 1 177 2 226 1 227 1 330 1 204 1 311 1 156 1 16 1 372 1 65 1 109 1 162 1 314 1 87 3 51 1 315 1 340 2 
141 2 281 1 242 1 243 1 311 1 363 1 118 1 65 1 60 1 162 1 136 1 175 1 304 1 8 1 306 1 177 2 87 2 51 1 
330 1 152 1 281 1 242 1 243 1 311 1 363 1 65 1 109 1 60 1 162 1 364 1 8 1 306 1 177 2 87 2 51 1 340 2 
141 2 242 2 243 2 363 1 118 1 60 1 364 1 304 1 175 1 8 2 306 1 177 2 330 1 281 1 311 1 16 1 65 1 109 1 162 2 87 4 51 1 340 2 
141 2 242 1 243 1 311 1 363 1 118 1 65 1 60 1 162 1 136 1 175 1 304 1 8 1 306 1 177 2 87 2 21 1 51 1 
330 1 152 1 242 1 243 1 311 1 363 1 65 1 109 1 60 1 162 1 364 1 8 1 306 1 177 2 87 2 21 1 51 1 340 2 
141 2 242 2 243 2 363 1 118 1 60 1 364 1 304 1 175 1 8 2 306 1 177 2 330 1 311 1 16 1 65 1 109 1 162 2 87 4 51 1 21 1 340 2 
141 2 242 2 243 2 363 1 118 1 60 1 364 1 304 1 175 1 8 2 306 1 177 2 330 1 311 1 16 1 65 1 109 1 162 2 87 4 51 1 340 2 
141 1 142 1 363 1 217 1 60 1 95 1 306 1 177 2 366 1 326 1 254 1 350 1 203 1 204 1 41 1 311 1 84 1 257 1 46 1 108 1 65 1 314 1 139 1 338 1 87 2 51 1 167 1 340 1 
141 1 142 1 363 1 145 1 217 1 60 1 95 1 306 1 177 2 366 1 326 1 99 1 350 1 203 1 204 1 41 1 311 1 84 1 257 1 46 1 65 1 314 1 338 1 87 2 51 1 167 1 340 1 316 1 
141 2 242 2 243 2 363 1 118 1 60 1 364 1 304 1 175 1 8 2 306 1 177 2 330 1 311 1 156 1 16 1 65 1 109 1 162 2 87 4 51 1 340 2 
190 1 141 2 242 2 243 2 363 1 118 1 60 1 364 1 175 1 304 1 8 2 95 1 306 1 177 2 366 1 254 1 350 1 330 1 203 1 204 1 41 1 311 1 84 1 16 1 46 1 108 1 335 1 65 1 109 1 162 2 314 1 139 1 338 1 87 4 51 1 340 2 167 1 
141 2 346 1 192 1 242 1 243 1 363 1 118 1 60 1 364 1 175 1 304 1 249 1 8 1 306 1 177 2 227 1 330 1 204 1 311 1 156 1 16 1 372 1 65 1 314 1 162 1 87 3 51 1 340 1 315 1 
246 1 306 1 311 1 177 2 128 1 51 1 133 1 328 1 100 1 65 1 
246 1 306 1 311 1 177 2 128 1 51 1 133 1 328 1 100 1 65 1 
246 1 306 1 311 1 177 2 128 1 51 1 133 1 328 1 100 1 65 1 
246 1 306 1 311 1 177 2 128 1 51 1 133 1 328 1 100 1 65 1 
246 1 306 1 311 1 177 2 128 1 51 1 133 1 328 1 100 1 65 1 
320 1 331 1 317 1 248 1 14 1 252 1 259 1 160 1 351 1 376 1 
78 1 120 1 
317 1 305 1 248 1 214 1 14 1 160 1 351 1 319 1 376 1 
331 1 317 1 14 1 191 1 333 1 299 1 259 1 90 1 160 1 248 1 93 1 184 1 176 1 252 1 351 1 35 1 376 1 278 2 
331 1 317 1 14 1 191 1 333 1 299 1 259 1 90 1 160 1 248 1 93 1 184 1 176 1 252 1 351 1 35 1 376 1 278 2 
331 1 317 1 14 1 191 1 333 1 299 1 259 1 90 1 160 1 248 1 93 1 184 1 176 1 252 1 351 1 35 1 376 1 278 2 
54 1 124 1 59 1 
54 1 124 1 59 1 
89 1 353 1 
89 1 353 1 59 1 
147 1 344 1 
317 1 170 1 142 1 191 1 346 2 192 2 57 1 90 1 248 1 93 1 120 1 147 1 324 1 351 1 278 1 204 2 13 1 78 1 14 1 333 1 157 1 160 1 372 2 314 2 357 1 376 1 344 1 
54 1 124 1 
89 1 353 1 59 1 
269 1 1 1 141 1 346 2 72 1 363 1 60 1 306 1 177 2 123 1 366 1 326 1 350 2 229 1 203 2 204 2 41 2 43 1 311 1 84 1 156 1 257 1 287 2 65 1 314 2 232 1 338 1 87 2 51 1 167 1 340 1 
190 1 203 2 41 2 15 1 206 1 285 1 58 1 84 1 2 1 85 1 7 2 74 1 49 1 338 1 262 1 178 1 224 1 211 1 350 2 
203 1 41 1 15 1 206 1 285 1 84 1 2 1 7 2 74 1 49 1 338 1 262 1 178 1 224 1 375 1 211 1 350 1 
203 1 308 1 41 1 285 1 84 1 217 1 218 1 85 1 9 1 338 1 50 1 366 1 167 1 350 1 
203 1 41 1 15 1 206 1 285 1 58 1 84 1 2 1 85 1 7 2 74 1 49 1 338 1 262 1 178 1 224 1 211 1 350 1 
131 1 
142 1 346 2 192 2 363 1 217 1 60 1 306 1 95 1 177 2 33 1 366 1 350 1 254 1 203 1 38 1 204 3 41 1 311 1 84 1 257 1 372 2 46 1 65 1 108 1 314 3 139 1 338 1 87 1 51 1 340 1 315 2 167 1 
151 1 179 4 26 1 154 2 81 1 207 2 299 4 354 2 321 2 163 1 121 2 198 1 148 1 55 1 329 1 
19 1 154 1 198 1 185 1 298 1 299 1 354 1 
294 1 215 1 299 2 90 1 92 1 198 1 148 1 329 1 151 1 179 1 333 1 154 1 207 1 208 1 354 1 163 1 336 1 
190 1 298 1 244 2 299 8 90 5 6 1 146 1 304 2 10 2 95 3 198 9 148 4 350 3 102 2 151 4 203 3 104 2 154 8 207 6 16 2 208 5 354 2 161 1 163 4 111 2 167 10 359 2 26 2 215 3 27 1 118 2 217 1 321 6 364 2 174 2 121 6 366 3 276 2 329 4 330 2 41 3 179 12 127 3 333 5 84 3 181 2 288 1 45 2 338 4 235 1 185 1 140 2 55 1 189 2 
114 1 26 1 215 1 299 5 90 1 118 2 73 1 216 1 219 1 303 1 321 5 364 2 304 2 10 2 121 5 198 8 365 1 96 1 253 1 148 2 329 2 151 2 330 2 205 1 179 6 333 1 154 5 207 3 16 2 208 1 354 2 163 2 238 1 55 1 359 1 
169 1 115 1 346 1 297 1 192 1 90 1 364 1 304 2 10 2 198 2 148 1 352 1 329 1 151 1 38 1 204 1 333 1 230 1 154 2 372 1 47 1 314 1 163 1 135 1 356 1 264 1 315 1 359 1 
151 1 154 1 298 1 299 1 354 1 163 1 185 1 198 1 148 1 329 1 
330 2 179 10 154 5 207 5 16 2 299 5 118 2 321 5 364 2 304 2 10 2 121 5 198 5 359 1 189 1 
215 1 333 1 299 1 90 1 208 1 354 1 
26 2 215 2 27 1 90 3 217 2 218 1 323 1 198 2 366 1 275 1 148 2 350 4 329 2 151 1 203 4 41 4 333 3 154 2 180 1 84 1 256 1 209 1 208 4 288 2 163 2 338 1 50 1 167 1 55 2 
248 1 225 1 160 1 
248 1 225 1 160 1 
30 1 248 1 147 1 259 1 160 1 
248 1 225 1 160 1 
168 1 248 1 160 1 
168 1 248 1 160 1 
168 1 248 1 160 1 
248 1 160 1 
14 1 376 1 
141 4 243 3 311 2 230 1 81 1 158 1 65 2 109 2 364 1 135 1 304 1 175 1 306 2 177 4 87 8 51 2 186 1 340 4 11 1 352 1 
141 3 230 1 243 2 81 1 109 2 19 1 135 1 364 1 304 1 87 6 186 1 340 3 11 1 352 1 
330 1 141 2 243 2 311 1 106 1 16 1 118 1 65 1 109 1 364 1 304 1 175 1 306 1 177 2 87 4 51 1 340 2 
330 1 141 3 243 2 16 1 118 1 303 1 109 1 364 1 304 1 175 1 183 1 365 1 87 7 238 2 340 4 
141 11 116 1 243 9 118 2 302 1 303 2 364 3 175 4 304 3 306 2 177 4 352 2 11 1 330 2 230 2 311 2 81 1 16 2 158 2 65 2 109 5 135 1 337 1 183 1 87 23 186 1 51 2 340 12 238 2 
87 1 340 1 238 1 
141 1 87 1 303 1 
330 1 141 3 311 1 243 3 106 1 16 1 118 1 65 1 109 2 364 1 304 1 175 1 306 1 177 2 87 6 51 1 340 3 189 1 
114 1 141 6 243 2 118 2 303 1 219 1 364 2 175 1 304 2 306 1 177 2 365 1 96 1 253 1 330 2 205 1 311 1 128 1 16 2 65 1 109 1 87 12 51 1 340 6 238 1 
141 3 230 1 243 2 109 1 135 1 364 1 304 1 175 1 87 6 340 3 352 1 
141 1 116 1 243 2 230 1 311 1 158 1 65 1 109 1 175 1 306 1 177 2 87 3 186 1 51 1 340 2 352 1 11 1 
141 5 297 1 311 1 128 1 230 2 243 5 65 1 109 3 135 1 364 2 175 2 304 2 306 1 177 2 87 10 51 1 340 5 352 2 
141 2 128 1 311 1 243 1 118 1 65 1 304 1 175 1 306 1 177 2 87 2 51 1 
330 1 141 2 243 2 128 1 311 1 16 1 118 1 65 1 109 1 364 1 304 1 175 1 306 1 177 2 87 4 51 1 340 2 
141 1 116 1 128 1 311 3 230 1 243 2 158 1 65 3 109 1 196 1 175 1 306 3 177 6 87 3 51 3 340 2 352 1 
141 16 116 1 243 12 118 3 303 3 196 1 364 5 304 5 175 5 31 1 306 5 177 10 365 1 352 3 11 1 12 1 330 3 370 1 230 3 311 5 128 1 81 1 106 1 16 3 158 2 65 5 109 7 135 2 183 1 87 34 186 1 51 5 340 18 238 4 
141 4 243 2 303 1 364 1 304 1 306 1 177 2 365 1 11 1 352 1 205 1 311 1 128 1 230 1 81 1 65 1 109 2 135 1 87 8 51 1 186 1 340 4 238 1 
141 6 243 3 118 1 303 1 364 1 304 2 175 1 306 2 177 4 365 1 352 1 11 1 205 1 230 1 128 1 311 2 81 1 106 1 16 1 65 2 109 2 135 1 183 1 87 11 186 1 51 2 340 5 238 2 
114 1 141 9 243 4 118 2 303 1 219 1 364 3 175 1 304 3 306 3 177 6 365 1 96 1 253 1 352 1 11 1 330 2 205 1 230 1 311 3 128 1 81 1 106 1 16 2 158 1 65 3 109 3 135 1 87 19 186 1 51 3 340 10 238 1 
114 1 141 10 243 5 118 2 303 1 219 1 364 2 175 2 304 3 306 3 177 6 365 1 96 1 253 1 352 1 11 1 330 1 205 1 230 1 311 3 128 1 81 1 106 1 16 2 158 1 65 3 109 3 135 1 87 17 186 1 51 3 340 7 238 1 
141 4 243 2 303 1 364 1 304 1 306 1 177 2 365 1 11 1 352 1 205 1 311 1 128 1 230 1 81 1 65 1 109 2 135 1 87 8 51 1 186 1 340 4 238 1 
114 1 141 6 243 2 118 2 303 1 219 1 364 2 175 1 304 2 306 1 177 2 365 1 96 1 253 1 330 2 205 1 311 1 128 1 16 2 65 1 109 1 87 12 51 1 340 6 238 1 
114 1 141 10 243 5 118 2 219 1 303 1 364 2 175 2 304 3 306 4 177 8 365 1 96 1 253 1 352 1 11 1 330 1 205 1 230 1 311 4 128 1 81 1 106 1 16 2 158 2 65 4 109 3 135 1 87 18 186 1 51 4 340 8 238 1 
114 1 141 9 243 6 118 3 219 1 303 1 196 1 364 2 175 3 304 3 306 4 177 8 365 1 96 1 253 1 330 2 205 1 128 1 311 4 16 3 158 2 65 4 109 3 87 16 51 4 340 7 238 1 
141 3 230 3 243 6 109 3 364 1 135 1 175 3 304 1 87 7 186 2 340 4 11 1 352 3 
114 1 141 10 243 4 118 2 219 1 303 1 196 1 364 2 175 1 304 3 306 4 177 8 365 1 96 1 253 1 352 1 11 1 330 1 205 1 230 1 128 1 311 4 81 1 16 2 158 2 65 4 109 3 135 1 87 18 186 1 51 4 340 8 238 1 
314 1 204 1 142 1 346 1 197 1 200 1 201 1 
204 1 105 1 142 1 346 1 182 1 221 1 314 1 61 1 197 1 367 1 201 1 200 1 
19 1 203 1 338 1 41 1 50 1 84 1 366 1 167 1 218 1 350 1 217 1 
203 1 204 2 142 1 346 1 41 1 192 1 348 1 84 1 372 1 217 1 46 1 108 1 314 2 95 1 338 1 366 1 167 1 350 1 
142 1 346 2 192 1 348 1 244 1 95 2 366 2 350 1 203 1 204 2 282 1 41 1 84 1 288 1 372 2 46 1 108 1 314 2 138 1 338 1 264 1 111 1 167 3 
171 1 142 1 346 2 192 1 348 1 244 1 145 1 95 2 366 2 350 2 203 2 204 2 282 1 41 2 84 1 288 1 372 2 46 1 314 2 138 1 338 1 264 1 111 1 167 3 
203 3 171 1 41 3 333 2 127 1 244 1 82 1 84 1 299 1 181 1 90 2 208 1 217 1 288 1 354 1 95 1 338 1 366 1 111 1 167 4 276 1 350 3 342 1 
203 3 171 1 104 1 41 3 333 2 127 1 244 1 84 1 299 1 181 1 90 2 208 1 217 1 288 1 354 1 95 1 338 1 366 1 111 1 167 4 276 1 350 3 
203 1 110 1 338 1 41 1 84 1 350 1 
190 1 203 6 41 7 172 1 84 2 72 1 287 1 217 2 6 1 110 1 74 1 95 1 338 3 366 2 166 1 167 3 187 1 241 1 350 7 22 1 268 1 
190 1 141 3 142 2 346 1 192 1 242 1 348 1 243 2 60 2 304 1 8 1 306 2 95 1 254 1 350 1 11 1 352 1 203 1 204 2 311 2 107 1 156 1 108 1 65 2 109 2 162 1 314 2 167 1 363 2 364 1 177 4 366 1 229 1 41 1 230 1 81 1 84 1 372 1 46 1 335 1 135 1 139 1 338 1 87 6 51 2 186 1 340 3 
170 1 215 1 27 1 298 1 299 1 90 3 217 1 198 1 148 2 276 1 350 1 329 2 102 1 151 2 203 1 104 1 41 1 333 3 127 1 154 1 208 2 181 1 45 1 354 1 163 2 185 1 140 1 167 2 
190 1 203 2 41 2 84 1 6 1 110 1 95 1 338 2 235 1 366 1 167 2 276 1 350 2 
190 1 203 4 171 1 41 4 155 1 84 1 217 1 218 1 338 1 50 1 366 1 167 1 350 4 
103 1 203 2 41 2 84 1 288 1 95 1 338 2 122 1 366 1 167 1 187 1 241 1 350 2 188 1 
7 1 203 1 338 1 41 1 262 1 15 1 178 1 84 1 350 1 217 1 
269 1 190 1 74 1 203 2 338 1 41 2 84 1 366 1 72 1 167 1 350 2 
190 1 203 4 41 5 155 1 84 2 72 1 288 1 218 1 217 1 338 2 50 1 366 2 167 3 166 1 350 5 22 1 
190 1 203 4 41 5 155 1 84 2 286 1 72 1 288 1 218 1 217 1 338 2 50 1 366 2 167 3 166 1 350 5 
203 1 204 2 142 1 346 1 41 1 192 1 348 1 84 1 372 1 217 1 145 1 46 1 314 2 95 1 338 1 366 1 167 1 350 1 
203 1 41 1 172 1 84 1 288 1 6 1 95 1 338 2 366 1 167 1 187 1 241 1 350 1 
142 1 233 1 272 1 44 1 28 1 
170 1 39 1 280 1 345 1 142 1 282 1 333 2 272 2 299 1 181 1 90 2 44 2 354 1 28 2 138 1 233 1 94 1 251 1 264 1 
204 1 1 1 346 1 43 1 44 1 28 1 314 1 232 1 233 1 
280 1 39 1 233 1 
202 1 79 1 144 1 301 1 29 1 20 1 261 1 355 1 77 1 67 3 149 3 
130 1 77 1 313 1 101 1 
355 1 77 1 
19 1 355 1 261 1 77 1 
29 1 20 1 355 1 261 1 77 1 149 1 67 1 
322 1 258 1 149 1 
202 1 25 1 42 1 117 1 144 2 29 1 20 1 261 1 355 1 77 1 67 3 149 3 
29 1 20 1 355 1 261 1 77 1 301 1 149 2 67 2 245 1 
29 1 7 1 202 1 20 1 15 1 77 1 237 1 211 1 149 1 67 1 101 1 
29 1 202 1 20 1 355 1 77 1 149 1 67 1 
29 1 202 1 20 1 355 2 261 1 149 1 67 1 
29 2 202 1 20 2 355 1 374 1 290 1 274 1 77 1 149 2 67 2 
202 1 79 1 63 1 130 1 301 2 29 1 20 1 355 1 261 1 77 2 67 3 149 3 101 1 
202 1 206 1 15 1 301 1 29 1 7 2 20 1 355 1 261 1 178 1 77 1 113 1 211 1 67 2 149 2 
202 1 0 1 130 1 301 2 245 1 29 2 20 2 355 1 261 1 77 2 67 4 149 4 101 1 
29 1 202 1 20 1 355 1 261 1 77 1 149 1 67 1 
42 1 130 1 144 1 117 1 301 2 313 1 29 1 20 1 355 2 261 2 77 3 67 4 149 4 101 1 
202 1 371 1 284 1 301 1 29 1 20 1 355 1 261 1 77 1 341 1 67 2 149 2 
202 1 42 2 117 1 144 2 64 1 29 1 20 1 261 1 355 1 77 1 67 3 149 3 
289 2 23 1 77 2 53 1 
29 1 202 1 20 1 327 1 149 1 67 1 
29 1 202 1 20 1 355 1 261 1 79 1 77 1 301 1 149 2 67 2 
234 1 
29 1 202 1 20 1 355 1 261 1 77 1 149 1 67 1 

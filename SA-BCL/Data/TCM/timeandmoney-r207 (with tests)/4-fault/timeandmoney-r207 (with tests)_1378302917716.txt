#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 158 242 189 266 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 1 208 1 169 1 2 5 314 1 67 1 213 1 125 1 173 3 249 2 250 9 221 9 153 6 226 2 54 2 227 1 228 1 200 2 201 1 89 1 202 1 356 2 292 2 17 1 293 1 357 4 113 2 239 1 
60 1 208 1 169 1 2 5 314 1 67 1 213 1 125 1 173 3 249 2 250 9 221 9 153 6 226 2 54 2 227 1 228 1 200 2 201 1 89 1 202 1 356 2 292 2 17 1 293 1 357 4 113 2 239 1 
60 1 208 1 169 1 2 6 314 1 67 1 213 1 125 1 173 4 249 2 250 10 221 10 153 7 226 2 54 2 227 1 228 1 200 2 201 1 89 1 202 1 356 2 292 2 17 1 293 1 357 5 113 2 239 1 
60 1 208 1 2 4 314 1 67 1 213 1 125 1 173 2 249 2 250 7 221 7 153 4 226 2 54 2 227 1 228 1 200 1 201 1 89 1 202 1 356 2 292 2 17 1 293 1 357 3 113 2 239 1 
221 4 250 4 153 3 226 1 208 1 228 1 169 1 2 3 314 1 200 2 201 1 292 1 356 1 293 1 357 2 173 1 113 1 249 1 
221 2 250 2 226 1 208 1 134 1 54 1 2 1 97 1 314 1 201 1 292 1 356 1 202 1 125 1 217 1 249 1 
221 3 250 3 153 1 208 1 54 1 2 2 314 1 201 1 292 2 356 2 357 1 173 1 239 1 
208 1 2 5 169 1 314 1 214 1 173 3 8 1 249 1 250 9 221 9 153 7 226 1 54 1 227 1 228 1 200 2 201 1 356 2 292 2 17 1 293 1 357 4 113 1 239 1 
208 1 2 5 169 1 314 1 214 1 173 3 8 1 249 1 250 9 221 9 153 7 226 1 54 1 227 1 228 1 200 2 201 1 356 2 292 2 17 1 293 1 357 4 113 1 239 1 
63 1 246 1 127 1 
1 2 33 1 127 1 
167 1 222 2 304 2 160 1 317 2 306 2 23 2 361 2 
204 2 167 1 206 1 270 1 188 1 146 1 334 1 313 1 42 1 316 1 317 2 68 1 23 2 46 1 319 1 171 1 150 1 102 1 76 1 104 1 30 1 222 2 178 1 197 2 349 1 154 1 229 2 159 1 183 1 182 1 304 3 160 1 185 1 112 2 306 2 115 2 361 3 
21 1 222 1 148 1 141 1 304 1 160 1 317 1 306 1 23 1 361 1 
21 1 362 1 63 1 179 1 23 1 123 1 304 1 378 1 343 1 305 1 127 1 361 1 359 1 240 1 
21 1 222 1 362 1 63 1 179 1 317 1 23 1 123 2 304 1 305 2 127 1 306 1 361 1 359 1 240 1 
61 1 305 1 29 1 315 1 123 1 
212 1 61 1 63 1 187 1 305 2 127 1 315 1 123 2 
61 1 305 1 123 1 
21 1 222 1 50 1 315 1 317 1 23 1 123 1 148 1 141 1 304 1 160 1 305 1 306 1 361 1 
127 1 
61 1 63 1 187 1 94 1 305 2 127 1 315 1 123 2 
205 1 61 2 63 1 347 1 187 1 95 1 315 2 365 1 123 5 350 1 13 1 369 2 340 2 377 1 322 1 305 5 127 1 307 2 331 1 
167 1 246 1 
222 1 167 2 65 1 317 1 23 2 304 2 161 1 306 1 361 2 
345 1 79 1 203 1 
167 1 186 1 206 1 197 1 270 1 188 1 349 1 154 1 334 1 229 1 316 1 304 1 185 1 102 1 115 1 361 1 
345 1 222 1 206 1 197 1 270 1 188 1 154 1 349 1 334 1 229 1 316 1 317 1 23 1 302 1 149 1 304 2 185 1 102 1 115 1 361 2 
167 1 222 3 149 1 304 3 306 1 317 3 23 3 361 3 
21 1 222 1 141 1 304 1 317 1 23 1 361 1 
21 1 222 1 304 1 161 1 65 1 317 1 306 1 23 1 361 1 
204 1 21 1 167 1 206 1 362 1 270 1 188 1 311 1 334 1 313 1 42 1 316 1 317 3 68 1 23 3 123 1 149 1 319 1 171 1 102 1 76 1 104 1 222 3 178 1 51 1 197 1 179 1 154 1 349 1 229 1 302 1 159 1 182 1 304 4 160 1 185 1 161 1 112 2 305 1 306 2 115 1 359 1 361 4 240 1 
167 1 222 1 149 1 304 2 343 1 317 1 23 2 109 1 361 2 
21 1 222 3 362 1 179 1 311 1 317 3 23 3 123 1 4 1 302 1 149 2 304 3 161 1 305 1 127 1 306 1 361 3 359 1 240 1 
345 1 79 1 222 2 317 2 23 2 149 1 304 2 161 1 306 1 361 2 
167 1 206 1 197 1 270 1 188 1 349 1 154 1 334 1 229 1 316 1 304 1 185 1 102 1 115 1 361 1 
167 1 197 1 270 1 349 1 154 1 334 1 229 1 316 1 256 1 304 1 185 1 102 1 115 1 128 1 361 1 
204 4 146 2 313 1 68 1 366 1 100 1 171 1 28 1 324 1 104 1 76 2 130 1 345 2 79 2 178 1 31 1 83 1 351 1 158 1 88 1 159 1 262 1 203 2 112 2 
21 1 222 1 362 1 304 1 333 1 317 1 23 1 361 1 
222 4 167 1 136 1 363 1 317 4 23 5 109 1 149 2 302 1 304 5 161 1 343 1 306 1 361 5 
21 1 222 2 141 1 304 2 333 1 317 2 23 2 361 2 
172 1 275 1 
172 1 275 1 
243 1 129 1 
243 1 129 1 
243 1 129 1 
172 1 98 1 275 1 
172 1 98 1 275 1 
172 1 98 1 275 1 
172 1 58 1 275 1 
26 1 172 2 175 1 243 1 275 2 129 1 
162 1 172 1 275 1 
162 1 172 1 275 1 
162 1 172 1 275 1 
251 1 11 1 372 2 252 2 117 1 297 1 364 3 211 1 275 2 138 2 123 2 124 1 90 2 216 1 172 2 175 1 305 2 127 1 142 2 
167 1 364 1 317 2 275 1 23 2 123 1 124 1 341 1 172 1 222 2 252 1 372 1 284 1 253 1 138 1 231 1 58 1 355 1 111 1 304 2 305 1 38 1 142 1 361 2 
226 1 113 1 249 1 
226 1 97 1 249 1 
157 1 321 1 97 1 82 1 113 2 249 3 
157 1 97 1 82 1 113 1 380 1 249 2 
157 1 97 1 113 1 82 2 249 2 
1 3 61 1 93 2 242 1 187 1 63 1 95 1 298 2 66 1 315 4 245 1 123 5 369 1 27 1 340 1 215 1 278 2 127 2 130 1 31 1 284 1 253 1 33 1 231 1 374 1 13 3 158 1 290 1 88 1 377 2 305 5 307 1 
205 1 1 9 61 6 93 6 242 3 63 1 187 1 95 1 118 1 120 1 66 2 315 7 121 5 245 2 123 9 369 2 215 1 340 2 7 1 278 6 29 5 127 5 130 3 31 3 284 4 285 1 33 3 13 8 158 3 180 1 88 3 377 6 305 9 330 1 307 2 
205 1 1 4 242 1 93 2 63 1 298 1 66 1 315 2 245 1 123 3 27 1 369 1 340 1 278 2 127 3 130 1 284 1 31 1 33 2 13 3 158 1 290 1 88 1 377 2 305 3 307 1 
205 1 1 7 93 4 242 2 63 1 298 2 120 1 66 1 315 3 245 1 123 4 369 1 27 1 340 1 7 1 278 4 127 4 130 2 284 2 31 2 33 3 13 5 158 2 290 1 88 2 377 4 305 4 330 1 307 1 
80 1 246 1 185 1 
294 1 185 1 
47 1 
185 1 316 1 
80 2 185 3 334 1 316 1 220 1 3 1 
185 1 334 1 316 1 
5 1 185 1 
204 7 207 2 31 1 373 1 325 1 106 1 146 4 287 1 83 2 99 1 366 3 122 1 235 1 339 1 88 1 37 1 76 3 
204 7 207 2 31 1 373 1 325 1 106 1 146 4 287 1 83 2 99 1 366 3 122 1 235 1 339 1 88 1 37 1 76 3 
204 7 207 2 31 1 373 1 325 1 106 1 146 4 287 1 83 2 99 1 366 3 122 1 235 1 339 1 88 1 37 1 219 1 76 3 
204 31 207 3 242 3 146 16 99 1 122 1 366 10 318 1 44 1 339 1 171 1 320 1 75 1 280 1 323 4 104 1 76 15 130 3 178 1 31 4 373 5 325 2 106 2 287 1 83 5 257 3 14 1 235 2 158 3 159 1 88 4 37 2 112 2 308 1 
204 9 207 2 146 5 366 4 318 1 122 1 339 1 171 2 104 2 76 4 178 2 31 1 373 1 106 1 325 1 287 1 83 3 155 1 232 1 235 1 88 1 159 2 37 1 112 4 
208 1 2 1 97 1 314 1 368 1 25 1 72 1 321 1 174 1 249 2 250 2 221 2 153 1 346 1 226 1 197 1 53 1 54 1 349 1 154 1 229 1 85 1 376 1 291 1 201 1 356 1 292 1 59 1 113 1 115 1 
41 1 2 1 97 1 314 1 25 1 72 1 321 1 174 1 249 2 250 3 221 3 153 2 346 1 226 1 197 1 54 1 198 1 349 1 154 1 229 1 85 1 376 1 291 1 201 1 356 1 292 1 59 1 113 1 115 1 166 1 
41 1 2 1 97 1 314 1 25 1 321 1 174 1 249 2 250 2 221 2 153 2 346 1 226 1 197 1 54 1 198 1 349 1 154 1 229 1 85 1 376 1 291 1 201 1 113 1 115 1 
144 1 270 1 316 1 25 2 174 2 250 1 221 1 197 1 54 2 154 1 199 1 349 1 229 1 36 1 57 1 85 2 261 1 356 1 292 1 237 1 185 1 115 1 166 1 
221 1 250 1 346 1 226 1 208 1 197 1 54 1 41 1 154 1 349 1 229 1 97 1 85 1 376 1 368 1 25 1 291 1 59 1 292 1 356 1 72 1 321 1 174 1 113 1 115 1 249 2 
329 1 
241 1 296 1 187 1 40 1 145 1 95 1 190 1 245 1 192 1 340 1 343 1 195 1 197 2 199 1 349 1 154 1 56 1 254 1 13 2 304 1 263 1 163 1 305 3 164 1 307 1 115 2 19 1 361 1 359 1 21 1 61 2 362 1 270 2 316 1 23 1 123 3 369 1 281 1 224 2 179 1 36 1 229 2 377 2 185 1 378 1 240 1 
21 1 241 1 61 2 224 2 362 1 187 1 94 1 179 1 56 1 254 1 23 1 123 3 192 1 304 1 378 1 299 1 163 1 305 3 343 1 240 1 361 1 359 1 
21 1 241 1 61 1 362 1 63 1 187 1 94 1 23 1 123 3 192 1 343 1 127 1 224 3 179 1 254 1 56 1 288 1 304 1 378 1 163 1 305 3 359 1 361 1 240 1 
21 1 241 1 362 1 61 2 187 1 63 1 94 1 23 1 123 3 192 1 299 1 343 1 127 1 224 3 179 1 254 1 56 1 288 1 304 1 378 1 163 1 305 3 379 1 359 1 361 1 240 1 
241 1 187 1 94 1 95 1 145 1 148 1 192 1 340 1 299 2 343 1 50 1 55 1 56 1 254 1 156 1 13 1 15 1 304 2 160 1 163 1 305 3 164 2 306 1 307 1 19 2 359 1 361 2 21 2 362 1 61 3 62 1 63 1 317 1 23 2 123 3 369 1 127 1 281 1 222 1 224 2 179 1 141 1 377 1 378 1 379 2 92 1 240 1 
21 1 241 1 362 1 145 1 95 1 190 1 23 1 123 2 369 1 192 1 340 1 343 1 281 1 224 2 179 1 254 1 56 1 13 1 304 1 377 1 378 1 163 1 305 2 164 1 307 1 19 1 361 1 359 1 240 1 
241 1 95 1 145 1 148 1 192 1 340 1 343 1 50 1 55 1 56 1 254 1 13 1 15 1 304 2 160 1 163 1 305 2 164 2 306 1 307 1 19 2 361 2 359 1 21 2 362 1 62 1 63 1 317 1 23 2 123 2 369 1 127 1 281 1 222 1 224 2 179 1 141 1 377 1 378 1 240 1 
241 1 95 1 145 1 148 1 192 1 340 1 343 1 50 1 55 1 56 1 254 1 13 1 15 1 304 2 160 1 163 1 305 2 164 2 306 1 307 1 19 2 361 2 359 1 21 2 362 1 62 1 63 1 317 1 23 2 123 2 369 1 127 1 281 1 222 1 224 2 179 1 141 1 377 1 378 1 240 1 
241 1 95 1 145 1 148 1 192 1 340 1 343 1 50 1 55 1 56 1 254 1 13 1 304 2 160 1 163 1 305 2 164 2 306 1 307 1 19 2 361 2 359 1 21 2 362 1 63 1 317 1 23 2 123 2 71 1 369 1 74 1 127 1 77 1 222 1 224 2 179 1 141 1 377 1 378 1 240 1 
241 1 95 1 145 1 148 1 192 1 340 1 299 1 343 1 50 1 55 1 56 1 254 1 13 1 15 1 304 2 160 1 163 1 305 2 164 2 306 1 307 1 19 2 361 2 359 1 21 2 61 1 362 1 62 1 63 1 317 1 23 2 123 2 369 1 127 1 281 1 222 1 224 3 179 1 288 1 141 1 377 1 378 1 379 1 92 1 240 1 
241 1 95 1 145 1 148 1 192 1 340 1 299 1 343 1 50 1 55 1 56 1 254 1 13 1 15 1 304 2 160 1 163 1 305 2 164 2 306 1 307 1 19 2 361 2 359 1 21 2 61 1 362 1 62 1 63 1 317 1 23 2 123 2 369 1 127 1 281 1 222 1 224 3 179 1 288 1 141 1 377 1 378 1 379 1 92 1 240 1 
21 1 241 1 362 1 145 1 95 1 190 1 23 1 123 2 71 1 369 1 192 1 340 1 343 1 224 2 179 1 254 1 56 1 13 1 304 1 377 1 378 1 163 1 305 2 164 1 307 1 19 1 361 1 359 1 240 1 
204 6 167 2 207 1 146 3 313 1 68 1 122 1 366 2 339 1 246 1 171 1 104 1 76 3 345 1 79 1 178 1 31 1 325 1 287 1 83 2 159 1 262 1 88 1 37 1 203 1 112 2 
204 14 167 1 242 2 146 8 313 1 68 2 366 2 44 1 46 1 147 1 338 1 319 1 171 2 75 1 323 3 76 6 104 2 345 11 130 1 79 4 178 2 373 1 31 2 300 1 348 1 107 1 83 1 257 3 158 2 159 2 88 1 203 11 112 4 
204 2 167 1 206 1 186 1 270 1 188 1 146 1 334 1 313 1 316 1 317 1 68 1 23 1 147 1 46 1 337 1 149 1 319 1 171 1 102 1 104 1 76 1 79 1 222 1 178 1 197 1 32 1 154 1 349 1 229 1 302 1 159 1 304 2 328 1 185 1 112 2 115 1 361 2 
242 2 41 1 188 2 146 10 334 2 46 1 147 1 149 1 339 1 247 2 151 2 102 2 104 3 345 7 197 3 349 2 154 2 158 2 302 1 303 2 159 3 304 3 203 7 112 6 115 3 361 3 204 20 167 2 206 2 207 1 270 1 312 1 313 3 317 1 316 2 23 1 68 3 122 1 366 8 70 1 319 1 171 3 76 10 282 1 130 2 222 1 79 7 178 3 31 3 373 4 325 1 326 2 229 3 287 1 83 4 88 3 182 2 185 2 37 1 
204 2 270 2 41 1 146 1 313 2 317 1 316 2 23 1 68 2 335 1 336 1 46 1 149 1 319 1 171 2 150 2 194 1 104 2 76 1 222 1 178 2 197 8 53 1 154 2 349 2 199 1 229 7 36 1 12 1 108 1 184 1 262 1 159 2 327 1 304 1 185 3 112 4 115 8 361 1 
204 3 242 1 146 1 313 1 317 1 68 1 23 1 366 1 147 1 171 1 104 1 76 2 345 1 130 1 79 1 222 1 178 1 31 1 83 1 158 1 159 1 88 1 304 1 161 1 203 1 112 2 306 1 20 1 361 1 
204 2 345 1 79 1 178 1 373 1 31 1 146 2 313 1 68 1 366 1 158 1 100 1 262 1 159 1 171 1 203 1 112 2 104 1 
204 2 345 1 130 1 79 1 178 1 313 1 83 1 68 1 366 1 262 1 159 1 171 1 88 1 203 1 112 2 104 1 324 1 76 2 
204 4 242 1 146 2 313 1 68 1 366 2 171 1 104 1 76 2 345 2 130 1 79 2 178 1 31 1 373 1 83 1 158 1 159 1 262 1 88 1 203 2 112 2 
204 2 345 1 79 1 178 1 373 1 31 1 146 2 313 1 68 1 366 1 336 1 158 1 100 1 159 1 171 1 203 1 112 2 104 1 
204 2 345 1 130 1 79 1 178 1 313 1 83 1 68 1 366 1 336 1 159 1 171 1 88 1 203 1 112 2 104 1 324 1 76 2 
204 4 242 1 146 2 313 1 68 1 366 2 336 1 171 1 104 1 76 2 345 2 130 1 79 2 178 1 31 1 373 1 83 1 158 1 159 1 88 1 203 2 112 2 
204 4 130 1 345 2 79 2 178 1 242 1 373 1 31 1 146 2 313 1 83 1 68 1 366 2 158 1 88 1 159 1 171 1 203 2 112 2 76 2 104 1 
204 2 167 1 206 1 270 1 188 1 146 1 334 1 313 1 316 1 68 1 46 1 319 1 171 1 102 1 104 1 76 1 178 1 197 1 154 1 349 1 229 1 182 1 159 1 304 1 185 1 112 2 115 1 361 1 
204 2 167 1 270 1 146 1 334 1 313 1 316 1 68 1 46 1 319 1 171 1 102 1 104 1 76 1 128 1 178 1 197 1 154 1 349 1 286 1 229 1 256 1 159 1 304 1 185 1 112 2 115 1 361 1 
204 4 242 1 146 2 313 1 68 1 366 2 147 1 171 1 104 1 76 2 345 2 130 1 79 2 178 1 31 1 373 1 83 1 158 1 159 1 88 1 203 2 112 2 
204 4 206 1 242 1 188 1 146 2 334 1 313 1 316 1 68 1 366 2 171 1 247 1 102 1 76 2 104 1 130 1 345 2 79 2 178 1 373 1 31 1 197 1 53 1 154 1 349 1 229 1 83 1 158 1 88 1 182 1 159 1 304 1 185 1 203 2 112 2 115 1 361 1 
204 3 242 1 64 1 146 2 313 1 317 1 68 1 23 1 366 1 147 1 171 1 76 1 104 1 130 1 345 1 222 1 79 1 178 1 373 1 31 1 158 1 88 1 159 1 304 1 161 1 203 1 112 2 306 1 361 1 
204 13 242 2 39 1 189 1 96 1 146 6 273 1 366 4 44 1 171 2 75 1 323 2 104 2 76 7 130 2 178 2 31 2 373 2 83 2 232 1 257 1 158 2 181 1 159 2 88 2 295 1 112 4 266 1 165 1 
204 26 268 1 242 3 39 2 189 1 96 2 146 14 273 1 24 1 318 2 366 4 44 2 171 3 323 2 76 12 104 3 78 1 130 2 178 3 373 2 31 3 83 2 232 1 257 2 234 1 158 3 88 2 159 3 236 1 295 4 112 6 264 1 332 1 165 1 
204 41 268 1 207 1 242 4 39 1 189 1 96 2 146 20 273 1 24 1 122 1 318 1 366 8 44 3 339 1 171 3 75 1 323 4 104 3 76 21 78 1 130 4 178 3 31 5 373 4 325 1 287 1 83 4 232 1 257 3 86 1 234 1 158 4 181 1 159 3 88 5 236 1 295 4 37 1 112 6 264 1 332 1 165 1 
204 38 268 1 207 1 242 4 39 1 189 1 96 2 146 20 273 1 24 1 122 1 318 2 366 7 44 3 339 1 171 4 75 1 323 4 104 4 76 18 78 1 130 3 178 4 31 5 373 3 325 1 287 1 83 4 232 1 257 3 86 1 234 1 158 4 181 1 159 4 88 4 236 1 295 4 37 1 112 8 264 1 332 1 165 1 
204 52 268 1 207 1 242 7 39 1 189 1 96 1 146 27 273 1 24 1 122 1 318 1 366 14 44 2 339 1 171 2 75 2 323 4 104 2 76 25 78 1 130 7 178 2 31 8 373 7 325 1 300 2 287 1 83 7 232 1 257 4 234 1 158 7 159 2 88 8 236 1 295 4 37 1 112 4 264 1 332 1 165 1 
251 1 196 1 252 1 372 1 216 1 172 1 175 1 138 1 275 1 142 1 
58 1 38 1 
354 1 252 1 372 1 310 1 172 1 138 1 275 1 69 1 142 1 
251 1 11 1 372 1 252 1 117 1 297 1 364 2 275 1 138 1 123 1 124 1 90 1 216 1 172 1 175 1 305 1 127 1 142 1 
251 1 11 1 372 1 252 1 117 1 297 1 364 2 275 1 138 1 123 1 124 1 90 1 216 1 172 1 175 1 305 1 127 1 142 1 
251 1 11 1 372 1 252 1 117 1 297 1 364 2 275 1 138 1 123 1 124 1 90 1 216 1 172 1 175 1 305 1 127 1 142 1 
26 1 98 1 170 1 
26 1 98 1 170 1 
162 1 126 1 
26 1 162 1 126 1 
111 1 341 1 
167 1 297 1 364 1 315 1 317 2 275 1 23 2 123 1 341 1 172 1 222 2 252 1 372 1 284 1 253 1 138 1 231 1 58 1 260 1 355 1 111 1 304 2 90 1 305 1 38 1 361 2 142 1 
98 1 170 1 
26 1 162 1 126 1 
204 2 146 1 313 1 274 1 316 1 68 1 23 2 147 1 46 1 319 1 171 1 150 2 177 1 104 1 76 1 49 1 178 1 197 2 154 1 349 1 255 1 229 2 12 1 108 1 16 1 159 1 304 2 185 1 112 2 115 2 361 2 
370 1 283 1 226 1 132 1 197 2 53 1 41 1 154 1 349 1 229 2 97 1 85 1 376 1 291 1 72 1 321 1 113 1 115 2 249 2 
370 1 226 1 197 1 135 1 41 1 349 1 154 1 229 1 97 1 85 1 376 1 291 1 72 1 321 1 113 1 115 1 249 2 
283 1 197 1 270 1 154 1 349 1 199 1 229 1 36 1 316 1 85 1 185 1 237 1 115 1 9 1 
370 1 283 1 226 1 132 1 197 1 41 1 154 1 349 1 229 1 97 1 85 1 376 1 291 1 72 1 321 1 113 1 115 1 249 2 
301 1 
13 1 63 1 347 1 246 1 377 1 322 1 127 1 
1 1 61 1 187 1 63 1 95 1 123 1 369 1 340 1 218 1 127 2 281 1 33 1 13 1 377 1 305 1 307 1 238 1 
143 1 1 12 93 6 242 2 187 3 95 4 334 3 245 2 5 2 340 4 101 2 342 1 195 1 10 2 347 1 197 3 53 1 154 4 349 3 13 9 158 2 303 2 305 5 307 4 115 3 61 5 63 2 270 1 272 2 316 3 123 5 369 4 277 1 278 6 322 1 127 8 176 2 220 1 130 2 225 2 80 2 133 2 31 2 179 2 33 6 229 3 84 1 230 2 289 1 87 2 88 2 294 3 377 8 185 10 
1 6 268 1 61 1 93 5 242 2 187 1 63 2 95 2 245 1 123 1 44 1 45 1 369 2 340 2 278 5 127 5 195 1 323 1 176 2 78 1 130 2 223 1 31 2 33 3 257 1 13 8 234 1 158 2 87 1 88 2 377 5 305 1 264 1 307 2 332 1 
21 1 62 1 95 1 317 1 23 1 123 1 148 1 369 1 340 1 176 2 105 1 222 1 50 1 31 2 325 1 287 1 13 2 87 1 141 1 88 1 304 1 377 2 160 1 37 1 305 1 306 1 307 1 361 1 
347 1 63 1 95 1 13 1 369 1 340 1 377 1 322 1 127 1 307 1 
130 2 1 10 242 2 93 5 31 2 33 5 13 5 158 2 87 1 303 1 88 2 377 5 278 5 127 5 176 2 
61 1 63 1 187 1 305 1 127 1 123 1 
205 1 296 1 61 4 187 2 269 1 270 2 95 1 316 1 245 2 123 3 369 2 277 2 340 2 195 2 197 4 154 1 349 1 199 1 229 4 36 1 289 1 13 2 140 1 377 2 185 1 263 1 305 3 307 2 115 4 
204 1 167 1 206 1 270 1 188 1 334 1 42 1 313 1 317 2 316 1 23 2 68 1 319 1 171 1 102 1 76 1 104 1 222 2 178 1 197 1 349 1 154 1 229 1 159 1 182 1 304 3 160 1 185 1 112 2 306 2 115 1 361 3 
1 4 207 1 93 2 63 2 95 1 33 2 245 1 13 1 369 1 340 1 377 2 278 2 127 4 195 1 307 1 
116 1 138 1 142 1 
116 1 138 1 142 1 
116 1 138 1 142 1 
251 1 341 1 152 1 138 1 142 1 
0 1 138 1 142 1 
0 1 138 1 142 1 
0 1 138 1 142 1 
138 1 142 1 
172 1 275 1 
204 8 207 1 178 2 31 1 373 1 325 1 146 4 287 1 83 2 366 3 318 1 122 1 339 1 88 1 159 2 171 2 37 1 112 4 76 4 104 2 
204 6 207 1 339 1 88 1 31 1 246 1 325 1 146 3 37 1 287 1 83 2 76 3 366 2 122 1 
204 4 130 1 178 1 242 1 31 1 373 1 146 2 83 1 366 2 158 1 88 1 159 1 171 1 112 2 18 1 76 2 104 1 
204 7 130 1 242 1 31 1 373 1 146 3 83 1 257 1 366 2 44 1 158 1 88 1 75 1 323 2 76 4 
204 23 207 1 242 2 146 11 122 1 366 9 318 2 339 1 171 2 75 1 323 2 76 12 104 2 130 2 178 2 373 4 31 3 325 2 348 1 300 1 287 1 83 5 257 2 375 1 158 2 88 3 159 2 37 2 112 4 
204 1 323 1 76 1 
204 1 146 1 257 1 
204 6 130 1 178 1 242 1 31 1 373 1 146 3 83 2 366 3 158 1 303 1 171 1 159 1 88 1 112 2 18 1 104 1 76 3 
204 12 268 1 242 2 146 6 366 2 44 1 171 1 323 1 76 6 104 1 130 2 78 1 178 1 373 1 31 2 83 1 257 1 232 1 158 2 234 1 159 1 88 2 112 2 264 1 332 1 
204 6 31 1 373 1 325 1 146 3 287 1 83 1 366 2 88 1 37 1 76 3 
204 3 178 1 373 1 325 1 146 1 83 1 366 2 122 1 375 1 318 1 339 1 159 1 171 1 37 1 112 2 76 2 104 1 
204 10 178 1 373 2 31 2 325 2 146 5 287 1 83 3 232 1 366 5 171 1 159 1 88 2 37 2 112 2 104 1 76 5 105 1 
204 2 178 1 31 1 373 1 146 2 232 1 366 1 158 1 159 1 171 1 112 2 104 1 
204 4 130 1 178 1 242 1 31 1 373 1 146 2 83 1 232 1 366 2 158 1 88 1 159 1 171 1 112 2 76 2 104 1 
204 3 178 3 373 1 325 1 146 1 83 1 232 1 318 1 375 1 366 2 181 1 159 3 171 3 37 1 112 6 76 2 104 3 
204 34 207 1 242 3 146 16 122 1 318 2 366 12 44 1 339 1 171 5 320 1 75 1 323 4 76 18 104 5 130 3 178 5 31 5 373 5 325 3 287 2 83 7 232 1 257 3 375 1 14 1 158 3 181 1 159 5 88 5 37 3 112 10 18 1 308 1 
204 8 268 1 207 1 146 4 122 1 366 2 44 1 339 1 171 1 323 1 76 4 104 1 178 1 31 1 325 1 287 1 83 2 257 1 232 1 88 1 159 1 37 1 112 2 
204 11 268 1 207 1 242 1 146 6 122 1 366 3 44 1 339 1 171 2 75 1 323 2 76 5 104 2 178 2 31 2 373 1 325 1 287 1 83 2 232 1 257 1 158 1 88 1 159 2 37 1 112 4 18 1 
204 19 268 1 207 1 242 2 146 9 122 1 366 4 318 1 44 1 339 1 171 3 323 1 76 10 104 3 78 1 130 2 178 3 373 1 31 3 325 1 287 1 83 3 257 1 232 1 158 2 234 1 159 3 88 3 37 1 112 6 18 1 264 1 332 1 
204 17 268 1 207 1 242 2 146 10 122 1 318 1 366 5 44 1 339 1 171 3 323 1 76 7 104 3 130 1 78 1 178 3 373 2 31 3 325 1 287 1 83 3 257 1 232 1 158 2 234 1 159 3 88 2 37 1 112 6 18 1 264 1 332 1 
204 8 268 1 207 1 146 4 122 1 366 2 44 1 339 1 171 1 323 1 76 4 104 1 178 1 31 1 325 1 287 1 83 2 257 1 232 1 88 1 159 1 37 1 112 2 
204 12 268 1 242 2 146 6 366 2 44 1 171 1 323 1 76 6 104 1 130 2 78 1 178 1 373 1 31 2 83 1 257 1 232 1 158 2 234 1 159 1 88 2 112 2 264 1 332 1 
204 18 268 1 207 1 242 2 146 10 122 1 366 5 318 2 44 1 339 1 171 4 323 1 76 8 104 4 78 1 130 1 178 4 373 2 31 3 325 1 287 1 83 3 232 1 257 1 234 1 158 2 159 4 88 2 37 1 112 8 18 1 264 1 332 1 
204 16 268 1 242 3 146 9 366 6 318 2 44 1 171 4 323 1 76 7 104 4 78 1 130 2 178 4 373 3 31 3 83 3 232 1 257 1 234 1 158 3 181 1 159 4 88 2 112 8 264 1 332 1 
204 7 373 3 31 1 325 3 146 3 287 1 83 3 122 2 366 6 339 1 88 1 37 3 76 4 
204 18 268 1 207 1 242 2 146 10 122 1 366 4 318 2 44 1 339 1 171 4 323 1 76 8 104 4 78 1 130 1 178 4 373 1 31 3 325 1 287 1 83 3 232 1 257 1 234 1 158 2 181 1 159 4 88 2 37 1 112 8 264 1 332 1 
21 1 167 1 23 1 109 1 233 1 304 1 343 1 48 1 361 1 
21 1 167 1 168 1 23 1 109 1 233 1 304 1 73 1 279 1 343 1 114 1 358 1 48 1 361 1 
246 1 197 1 270 1 154 1 349 1 185 1 199 1 36 1 229 1 316 1 115 1 
167 1 222 1 197 1 270 1 188 1 154 1 349 1 334 1 229 1 316 1 317 1 23 1 149 1 304 2 185 1 102 1 115 1 361 2 
21 2 167 1 362 1 188 1 334 2 317 1 316 2 23 1 5 1 149 1 277 1 102 1 10 1 222 1 197 1 349 1 154 1 229 1 233 1 304 1 185 3 115 1 361 1 240 1 
21 2 167 1 362 1 334 2 317 1 316 2 23 1 5 1 149 1 277 1 102 1 128 1 10 1 222 1 197 1 349 1 154 1 229 1 233 1 304 1 185 3 115 1 361 1 240 1 
131 1 61 1 80 1 63 1 197 3 270 1 179 1 154 1 349 1 334 1 229 3 316 1 123 2 259 1 5 1 277 1 294 1 91 1 185 4 305 2 127 1 115 3 10 1 
61 1 80 1 63 1 197 3 270 1 179 1 154 1 349 1 334 1 272 1 229 3 316 1 123 2 259 1 5 1 277 1 294 1 185 4 305 2 127 1 115 3 10 1 
197 1 194 1 154 1 349 1 229 1 115 1 
197 7 53 1 270 2 41 1 349 2 154 3 334 1 229 6 316 2 335 1 108 1 110 1 184 1 150 1 327 1 193 1 194 1 185 3 265 1 115 7 220 1 
188 1 146 3 334 1 147 1 149 1 339 1 247 1 102 1 104 2 345 1 197 1 53 1 349 1 154 1 159 2 304 2 203 1 112 4 115 1 361 2 204 6 206 1 167 2 207 1 313 2 317 1 316 1 23 1 68 2 122 1 366 2 171 2 177 1 76 3 79 1 222 1 178 2 31 1 325 1 326 1 229 1 287 1 83 2 182 1 88 1 185 1 37 1 
61 2 63 1 187 1 270 1 95 2 272 1 315 1 123 3 369 2 340 2 101 1 322 1 127 1 225 1 80 1 347 1 197 1 179 1 229 1 230 1 289 1 13 1 294 1 377 1 185 2 305 3 307 2 115 1 
143 1 80 1 197 2 53 1 349 1 154 2 334 1 229 2 316 1 194 1 185 2 115 2 220 1 
197 4 270 1 53 1 81 1 154 1 199 1 349 1 229 4 36 1 316 1 259 1 185 1 115 4 
197 2 349 1 154 2 119 1 209 1 334 1 229 2 316 1 110 1 277 1 193 1 185 1 115 2 282 1 
291 1 226 1 197 1 270 1 154 1 349 1 229 1 97 1 115 1 249 1 
49 1 197 2 53 1 41 1 154 1 349 1 185 1 229 2 316 1 115 2 108 1 
197 5 270 1 53 1 81 1 199 1 349 2 154 2 36 1 229 4 316 2 108 1 277 1 184 1 327 1 185 3 115 5 
197 5 270 1 53 1 81 1 199 1 349 2 154 2 36 1 229 4 316 2 108 1 276 1 277 1 327 1 185 3 115 5 
167 1 222 1 197 1 270 1 154 1 349 1 334 1 229 1 316 1 317 1 23 1 149 1 304 2 185 1 102 1 115 1 128 1 361 2 
197 1 349 1 154 2 334 1 229 1 316 1 110 1 277 1 193 1 185 1 265 1 115 1 220 1 
22 1 16 1 304 1 255 1 248 1 274 1 137 1 23 1 361 1 
6 1 248 1 103 1 
167 1 22 1 210 1 248 1 137 1 
21 1 167 1 22 2 362 1 63 1 179 1 311 1 210 2 315 1 137 2 123 2 6 1 248 1 305 2 127 1 103 1 240 1 360 1 359 1 
201 1 246 1 2 1 314 1 
250 1 221 1 201 1 356 1 292 1 2 1 314 1 
25 1 250 1 54 1 
221 3 250 3 208 1 309 1 2 1 314 1 139 1 353 1 292 1 356 1 201 1 125 2 
250 2 221 2 153 1 200 1 201 1 356 1 292 1 2 1 314 1 
250 1 221 1 226 1 356 1 292 1 208 1 357 1 228 1 2 1 113 1 249 1 
250 1 221 1 201 1 356 1 292 1 208 1 2 1 
250 1 221 1 201 2 356 1 292 1 208 1 314 1 
221 2 250 2 208 1 271 1 34 1 2 1 201 1 292 2 356 2 344 1 
221 3 250 3 153 2 208 1 227 1 2 2 314 1 201 1 292 1 356 1 17 1 357 1 173 1 
221 2 250 2 153 1 226 1 208 1 2 1 97 1 314 1 352 1 201 1 292 1 356 1 321 1 113 1 249 2 
221 4 250 4 153 2 208 1 169 1 2 2 314 1 200 1 201 1 292 2 356 2 357 1 173 1 
250 1 221 1 201 1 356 1 292 1 208 1 2 1 314 1 
221 4 250 4 153 2 2 3 314 2 367 1 139 1 353 1 201 2 292 1 356 1 125 1 357 1 173 1 
221 2 250 2 153 1 208 1 35 1 2 1 314 1 258 1 201 1 292 1 356 1 214 1 
139 2 250 3 221 3 353 1 371 1 201 1 356 1 292 1 208 1 125 2 2 1 314 1 
267 2 52 1 2 2 244 1 
250 1 221 1 191 1 356 1 292 1 208 1 
250 2 221 2 153 1 201 1 17 1 356 1 292 1 208 1 2 1 314 1 
43 1 
250 1 221 1 201 1 356 1 292 1 208 1 2 1 314 1 
250 3 221 3 153 1 17 1 201 1 356 1 292 1 208 1 125 1 2 1 314 1 
357 1 173 1 2 1 367 1 
201 1 2 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 224 335 366 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 137 3 256 1 285 1 36 9 161 1 89 1 18 1 165 5 142 2 69 1 214 2 187 2 341 1 291 1 191 2 149 4 244 2 273 1 320 1 51 1 111 1 321 1 30 9 134 6 157 2 55 2 158 1 
225 1 137 3 256 1 285 1 36 9 161 1 89 1 18 1 165 5 142 2 69 1 214 2 187 2 341 1 291 1 191 2 149 4 244 2 273 1 320 1 51 1 111 1 321 1 30 9 134 6 157 2 55 2 158 1 
225 1 137 4 256 1 285 1 36 10 161 1 89 1 18 1 165 6 142 2 69 1 214 2 187 2 341 1 291 1 191 2 149 5 244 2 273 1 320 1 51 1 111 1 321 1 30 10 134 7 157 2 55 2 158 1 
225 1 137 2 256 1 285 1 36 7 161 1 89 1 18 1 165 4 142 2 69 1 214 2 187 2 341 1 291 1 191 1 149 3 244 2 273 1 51 1 111 1 321 1 30 7 134 4 157 2 55 2 158 1 
137 1 191 2 256 1 285 1 36 4 161 1 149 2 89 1 244 1 273 1 165 3 320 1 142 1 30 4 134 3 214 1 55 1 187 1 
32 1 215 1 285 1 36 2 161 1 18 1 273 1 165 1 142 1 30 2 125 1 214 1 157 1 158 1 187 1 55 1 
225 1 137 1 285 1 36 3 161 1 149 1 273 1 165 2 30 3 134 1 214 2 157 1 187 2 
225 1 137 3 256 1 285 1 36 9 161 1 89 1 165 5 142 1 214 2 187 2 340 1 291 1 191 2 44 1 149 4 244 1 273 1 51 1 320 1 30 9 134 7 157 1 55 1 
225 1 137 3 256 1 285 1 36 9 161 1 89 1 165 5 142 1 214 2 187 2 340 1 291 1 191 2 44 1 149 4 244 1 273 1 51 1 320 1 30 9 134 7 157 1 55 1 
274 1 276 1 22 1 
274 1 342 1 236 2 
346 2 281 2 359 2 8 2 178 1 234 2 180 1 192 2 
82 1 281 3 326 1 138 1 57 1 178 1 120 1 227 2 206 1 180 1 258 2 121 1 91 1 289 2 359 2 234 2 262 1 143 1 126 1 363 1 237 2 147 1 8 2 368 1 369 1 45 1 373 1 272 1 192 3 346 2 26 1 150 1 151 1 251 1 253 1 16 2 116 1 
346 1 84 1 281 1 359 1 8 1 178 1 234 1 336 1 192 1 301 1 
33 1 281 1 312 1 283 1 192 1 346 1 64 1 274 1 261 1 276 1 110 1 322 1 336 1 338 1 
281 1 8 1 312 1 192 1 346 1 64 1 274 1 359 1 261 2 276 1 234 1 110 1 322 2 336 1 338 1 
261 1 58 1 169 1 172 1 322 1 
274 1 27 1 261 2 276 1 58 1 169 1 322 2 378 1 
261 1 58 1 322 1 
84 1 281 1 8 1 169 1 178 1 192 1 286 1 346 1 261 1 359 1 234 1 322 1 336 1 301 1 
274 1 
274 1 27 1 261 2 276 1 58 1 169 1 171 1 322 2 
102 1 169 2 58 2 179 1 354 1 376 2 130 1 274 1 27 1 38 1 261 5 276 1 132 1 333 2 199 2 377 1 213 1 254 1 322 5 
22 1 180 1 
281 2 302 1 8 1 180 2 192 2 25 1 346 2 359 1 234 1 
303 1 3 1 298 1 
237 1 281 1 269 1 57 1 120 1 369 1 373 1 180 1 192 1 272 1 289 1 251 1 143 1 126 1 16 1 116 1 
346 3 281 3 293 1 359 3 8 1 234 3 180 1 192 3 
346 1 281 1 359 1 234 1 336 1 192 1 301 1 
25 1 346 1 281 1 302 1 359 1 8 1 234 1 336 1 192 1 
82 1 280 1 281 4 302 1 326 1 138 1 57 1 178 1 120 1 227 1 180 1 258 2 64 1 289 1 359 3 261 1 234 3 126 1 143 1 336 1 363 1 338 1 268 1 237 1 293 1 147 1 8 2 368 1 369 1 45 1 312 1 373 1 272 1 192 4 346 3 26 1 150 1 151 1 110 1 251 1 202 1 322 1 116 1 16 1 
33 1 346 2 281 2 293 1 359 1 234 1 250 1 180 1 192 2 
280 1 281 3 176 1 302 1 293 2 8 1 312 1 192 3 346 3 64 1 274 1 261 1 359 3 110 1 234 3 322 1 202 1 336 1 338 1 
281 2 293 1 302 1 303 1 8 1 3 1 192 2 346 2 359 2 234 2 
237 1 281 1 57 1 120 1 369 1 373 1 180 1 192 1 272 1 289 1 251 1 143 1 126 1 16 1 116 1 
237 1 167 1 281 1 57 1 120 1 369 1 373 1 180 1 192 1 272 1 289 1 251 1 126 1 16 1 365 1 
351 1 82 1 0 1 304 1 303 2 138 1 60 1 59 1 227 4 3 2 208 1 160 1 258 2 262 2 363 1 147 2 45 1 374 1 26 1 76 1 151 1 298 2 78 1 222 1 
357 1 346 1 281 1 359 1 234 1 312 1 336 1 192 1 
280 1 237 1 281 2 293 1 57 1 120 1 369 1 3 1 373 1 272 1 192 2 346 1 289 1 359 1 234 1 251 1 126 1 143 1 16 1 116 1 
280 1 33 1 281 5 293 2 302 1 8 1 74 1 180 1 192 5 346 5 359 4 234 4 250 1 15 1 
357 1 346 2 281 2 359 2 234 2 336 1 192 2 301 1 
352 1 28 1 
352 1 28 1 
362 1 266 1 
362 1 266 1 
362 1 266 1 
352 1 28 1 46 1 
352 1 28 1 229 1 
183 1 352 2 367 1 28 2 362 1 266 1 
352 1 28 1 46 1 
352 1 28 1 46 1 
352 1 28 1 71 1 
352 1 28 1 71 1 
352 1 28 1 71 1 
118 2 145 1 352 2 367 1 343 3 35 2 329 1 4 1 108 2 274 1 310 1 261 2 319 1 28 2 96 2 68 1 39 2 322 2 255 1 
118 1 281 2 352 1 35 1 180 1 229 1 356 1 230 1 260 1 359 2 261 1 234 2 96 1 68 1 235 1 190 1 343 1 218 1 192 2 108 1 346 2 109 1 28 1 322 1 
244 1 142 1 55 1 
32 1 142 1 55 1 
72 1 244 2 32 1 113 1 217 1 55 3 
72 1 244 1 32 1 34 1 113 1 55 2 
244 1 72 1 32 1 113 2 55 2 
0 1 305 1 58 1 140 1 87 1 179 3 160 1 356 1 210 1 358 2 261 5 333 1 236 3 190 1 342 1 101 2 102 1 169 4 374 1 47 2 376 1 130 2 50 1 27 1 274 2 109 1 276 1 199 1 279 1 78 1 201 1 322 5 
0 3 85 1 177 1 305 3 58 6 140 1 2 1 179 8 354 1 160 3 356 4 210 2 261 9 333 2 236 9 23 1 342 3 101 6 102 1 169 7 374 3 47 6 194 1 376 2 130 6 247 1 274 5 27 1 276 1 199 2 172 5 78 3 201 2 174 5 322 9 
84 1 0 1 281 1 178 1 305 1 87 1 179 3 354 1 160 1 356 1 210 1 286 1 358 1 359 1 261 3 234 1 333 1 336 1 236 4 342 2 101 2 8 1 169 2 374 1 47 2 192 1 376 1 346 1 130 2 50 1 274 3 276 1 199 1 78 1 201 1 322 3 301 1 
0 1 177 1 305 1 87 1 179 3 354 1 160 1 356 1 210 1 358 1 261 2 333 1 236 4 342 2 101 2 169 1 374 1 47 2 376 1 130 2 50 1 274 2 199 1 78 1 201 1 322 2 
22 1 251 1 61 1 
331 1 251 1 
88 1 
369 1 251 1 
369 1 251 3 61 2 272 1 204 1 99 1 
369 1 251 1 272 1 
49 1 251 1 
0 1 147 3 226 1 227 7 374 1 76 2 219 1 21 1 332 1 299 1 262 4 290 1 265 1 31 1 267 2 222 3 81 1 
0 1 147 3 226 1 227 7 374 1 76 2 219 1 21 1 332 1 299 1 262 4 290 1 265 1 31 1 267 2 222 3 81 1 
0 1 147 3 226 1 227 7 374 1 76 2 219 1 21 1 332 1 299 1 54 1 262 4 290 1 265 1 31 1 267 2 222 3 81 1 
82 1 0 4 305 3 226 1 227 31 228 3 160 3 258 2 19 1 21 1 332 1 262 16 265 2 290 5 363 1 267 3 339 1 24 1 147 15 270 1 170 4 45 1 374 4 48 1 219 2 76 5 151 1 131 1 299 2 78 3 349 1 31 2 81 1 222 10 
82 2 0 1 147 4 226 1 227 9 45 2 374 1 258 4 219 1 76 3 151 2 21 1 299 1 262 5 349 1 221 1 265 1 290 1 31 1 363 2 267 2 98 1 81 1 222 4 
32 1 57 1 141 1 285 1 36 2 306 1 161 1 90 1 289 1 165 1 142 1 126 1 214 1 187 1 237 1 294 1 241 1 217 1 244 1 195 1 273 1 245 1 248 1 12 1 112 1 30 2 134 1 16 1 157 1 55 2 
32 1 57 1 141 1 285 1 36 3 306 1 90 1 122 1 289 1 165 1 142 1 126 1 214 1 187 1 237 1 10 1 217 1 241 1 107 1 244 1 195 1 273 1 245 1 248 1 12 1 30 3 134 2 16 1 157 1 55 2 
32 1 57 1 141 1 285 1 36 2 306 1 289 1 165 1 142 1 126 1 237 1 10 1 241 1 217 1 107 1 195 1 244 1 273 1 245 1 12 1 30 2 134 2 16 1 157 1 55 2 
237 1 57 1 120 1 369 1 313 1 36 1 306 2 122 1 163 1 245 2 289 1 152 1 12 2 123 1 93 1 94 1 251 1 30 1 126 1 214 1 16 1 157 2 187 1 
32 1 57 1 141 1 36 1 306 1 161 1 90 1 289 1 142 1 126 1 214 1 187 1 237 1 294 1 10 1 241 1 217 1 244 1 195 1 245 1 248 1 12 1 30 1 16 1 157 1 55 2 
314 1 
224 1 33 1 83 1 281 1 139 1 179 2 283 1 182 4 288 1 289 2 333 1 94 1 185 2 336 1 97 1 338 1 236 2 188 2 237 2 342 2 238 2 102 1 104 1 105 2 192 1 345 1 196 1 346 1 198 2 199 1 110 1 251 1 201 1 14 2 203 1 16 2 57 1 58 6 120 2 64 1 261 5 65 1 126 1 369 1 312 1 313 1 376 1 130 2 274 2 27 3 276 1 318 1 322 5 80 2 223 1 
83 1 33 1 281 1 58 2 312 1 171 1 283 1 192 1 345 1 182 2 64 1 346 1 27 1 261 3 110 1 318 1 322 3 336 1 203 1 80 1 97 1 338 1 
188 1 83 1 33 1 281 1 58 1 312 1 171 1 283 1 192 1 345 1 182 3 64 1 346 1 27 1 274 1 261 3 276 1 110 1 318 1 322 3 336 1 203 1 97 1 338 1 
33 1 83 1 281 1 58 2 283 1 64 1 182 3 261 3 336 1 338 1 97 1 188 1 312 1 171 1 105 1 192 1 345 1 346 1 27 1 274 1 276 1 318 1 110 1 322 3 203 1 80 1 
224 1 83 1 33 1 281 1 179 1 283 1 182 6 288 1 333 1 335 1 185 2 336 1 338 1 97 1 188 4 146 1 238 2 342 2 102 1 105 4 192 1 345 1 346 1 198 2 110 1 199 1 156 1 203 1 14 2 58 7 64 1 261 5 264 1 312 1 171 1 376 1 130 1 27 3 274 5 276 5 318 1 322 5 80 4 135 1 
224 1 83 1 33 1 281 1 179 1 283 1 182 4 288 1 333 1 185 2 336 1 338 1 97 1 236 2 188 2 238 2 342 2 102 1 104 1 105 2 192 1 345 1 346 1 198 2 110 1 199 1 203 1 14 2 58 4 64 1 261 4 312 1 376 1 130 1 27 2 274 2 276 1 318 1 322 4 80 2 
224 1 33 1 83 1 281 1 58 4 179 1 283 1 64 1 182 4 288 1 261 4 333 1 185 2 335 1 336 1 338 1 97 1 188 2 146 1 342 2 238 2 102 1 312 1 105 2 192 1 345 1 376 1 130 1 346 1 274 1 27 2 276 1 198 2 199 1 318 1 110 1 322 4 14 2 203 1 80 2 135 1 
224 1 33 1 83 1 281 1 58 4 179 1 283 1 64 1 182 4 288 1 261 4 333 1 185 2 335 1 336 1 338 1 97 1 188 2 146 1 342 2 238 2 102 1 312 1 105 2 192 1 345 1 376 1 130 1 346 1 274 1 27 2 276 1 198 2 199 1 318 1 110 1 322 4 14 2 203 1 80 2 135 1 
224 1 33 1 83 1 1 1 281 1 179 1 283 1 259 1 64 1 182 2 261 2 333 1 185 1 335 1 336 1 338 1 97 1 236 1 238 1 366 1 102 1 312 1 192 1 345 1 376 1 130 1 346 1 199 1 318 1 110 1 322 2 203 1 379 1 
224 1 33 1 83 1 281 1 58 5 179 1 283 1 64 1 182 5 288 1 261 4 333 1 185 2 335 1 336 1 264 1 338 1 97 1 188 3 146 1 342 2 238 2 102 1 312 1 105 3 192 1 345 1 376 1 130 1 346 1 274 1 27 2 276 1 198 2 199 1 318 1 110 1 322 4 14 2 203 1 80 3 135 1 
224 1 33 1 83 1 281 1 58 5 179 1 283 1 64 1 182 5 288 1 261 4 333 1 185 2 335 1 336 1 264 1 338 1 97 1 188 3 146 1 342 2 238 2 102 1 312 1 105 3 192 1 345 1 376 1 130 1 346 1 274 1 27 2 276 1 198 2 199 1 318 1 110 1 322 4 14 2 203 1 80 3 135 1 
224 1 33 1 83 1 281 1 58 4 179 1 283 1 259 1 64 1 182 4 261 4 333 1 185 2 336 1 97 1 338 1 236 2 188 2 238 2 43 2 102 1 312 1 104 1 105 2 192 1 345 1 376 1 130 1 346 1 274 1 27 2 276 1 318 1 199 1 110 1 322 4 203 1 80 2 379 2 
82 1 0 1 303 1 138 1 60 1 226 1 3 1 227 6 180 2 258 2 21 1 22 1 262 3 265 1 363 1 267 1 147 3 45 1 374 1 26 1 219 1 76 2 151 1 298 1 81 1 222 2 
82 2 0 1 303 4 326 1 86 1 138 1 305 2 227 14 3 11 228 3 160 2 180 1 258 4 162 1 360 1 262 8 337 1 290 1 363 2 147 6 24 1 270 1 170 3 45 2 374 2 26 2 76 1 151 2 317 1 298 11 78 1 253 1 222 2 
82 1 280 1 281 2 303 1 57 1 138 1 326 1 120 1 327 1 227 2 180 1 37 1 258 2 289 1 359 1 360 1 234 1 262 1 126 1 143 1 363 1 237 1 293 1 269 1 147 1 369 1 45 1 373 1 128 1 272 1 192 2 346 1 26 1 151 1 251 1 253 1 116 1 16 1 
280 1 82 3 0 3 281 3 282 1 326 1 138 3 226 1 227 20 3 7 180 2 289 3 234 1 143 2 290 4 237 3 293 1 147 10 10 1 295 2 45 3 192 3 346 1 150 2 151 3 347 2 298 7 154 2 251 2 253 1 350 1 16 3 116 2 303 7 57 2 120 1 305 2 160 2 257 1 63 2 258 6 359 1 21 1 360 1 262 10 126 2 265 1 363 3 267 1 369 2 373 2 374 3 272 2 26 3 219 1 76 4 78 2 81 1 222 8 
82 2 205 1 281 1 57 2 138 2 326 1 60 1 120 2 227 2 207 1 258 4 355 1 121 2 17 1 289 8 359 1 166 1 234 1 94 1 262 1 126 2 363 2 237 8 293 1 147 1 10 1 369 2 45 2 313 1 192 1 346 1 26 2 151 2 277 1 112 1 278 1 251 3 253 1 16 7 
82 1 0 1 281 1 302 1 303 1 138 1 305 1 3 1 227 3 160 1 258 2 359 1 360 1 234 1 67 1 262 1 363 1 147 2 8 1 45 1 374 1 192 1 346 1 26 1 76 1 151 1 298 1 78 1 222 1 
82 1 303 1 138 1 60 1 59 1 3 1 227 2 45 1 160 1 374 1 258 2 26 1 151 1 298 1 262 2 290 1 363 1 222 1 
82 1 0 1 303 1 304 1 147 2 138 1 60 1 3 1 227 2 45 1 258 2 26 1 76 1 151 1 298 1 78 1 363 1 222 1 
82 1 0 1 303 2 138 1 305 1 60 1 227 4 3 2 160 1 258 2 262 2 363 1 290 1 147 2 45 1 374 1 26 1 76 1 151 1 298 2 78 1 222 2 
82 1 303 1 138 1 59 1 3 1 227 2 45 1 160 1 374 1 355 1 258 2 26 1 151 1 298 1 262 2 290 1 363 1 222 1 
82 1 0 1 303 1 304 1 147 2 138 1 3 1 227 2 45 1 355 1 258 2 26 1 76 1 151 1 298 1 78 1 363 1 222 1 
82 1 0 1 303 2 138 1 305 1 227 4 3 2 160 1 258 2 355 1 262 2 363 1 290 1 147 2 45 1 374 1 26 1 76 1 151 1 298 2 78 1 222 2 
82 1 0 1 303 2 138 1 305 1 227 4 3 2 160 1 258 2 262 2 363 1 290 1 147 2 45 1 374 1 26 1 76 1 151 1 298 2 78 1 222 2 
82 1 281 1 57 1 138 1 326 1 120 1 227 2 180 1 258 2 289 1 262 1 126 1 143 1 363 1 237 1 147 1 369 1 45 1 373 1 272 1 192 1 26 1 150 1 151 1 251 1 253 1 116 1 16 1 
82 1 281 1 57 1 138 1 326 1 120 1 227 2 180 1 258 2 289 1 262 1 126 1 363 1 365 1 167 1 237 1 147 1 369 1 45 1 373 1 272 1 192 1 26 1 77 1 151 1 251 1 253 1 16 1 
82 1 0 1 303 2 138 1 305 1 227 4 3 2 160 1 258 2 360 1 262 2 363 1 290 1 147 2 45 1 374 1 26 1 76 1 151 1 298 2 78 1 222 2 
82 1 0 1 281 1 303 2 57 1 138 1 305 1 3 2 227 4 160 1 63 1 258 2 289 1 262 2 126 1 143 1 290 1 363 1 237 1 147 2 369 1 45 1 373 1 374 1 272 1 192 1 26 1 76 1 150 1 151 1 298 2 112 1 251 1 78 1 116 1 16 1 222 2 
82 1 0 1 281 1 302 1 303 1 138 1 305 1 227 3 3 1 160 1 258 2 359 1 164 1 360 1 234 1 262 2 290 1 363 1 147 1 8 1 45 1 374 1 192 1 346 1 26 1 151 1 298 1 78 1 222 1 
82 2 0 4 119 1 305 4 227 30 228 2 160 4 258 4 95 1 262 14 263 4 363 2 290 3 98 1 100 1 147 16 24 2 9 1 270 2 170 4 103 1 45 2 344 1 374 4 375 1 275 1 316 2 76 4 151 2 249 1 78 4 222 7 
82 1 0 1 305 1 227 10 228 1 160 1 258 2 95 1 262 5 263 2 363 1 98 1 147 5 9 2 270 1 170 1 45 1 344 2 374 1 275 1 316 1 151 1 249 1 78 1 
82 2 0 3 119 1 305 3 227 28 228 3 160 3 258 4 95 1 262 13 263 4 363 2 290 2 98 1 147 15 24 2 9 1 270 3 170 5 371 1 103 1 45 2 344 2 374 3 375 1 316 1 275 1 76 2 151 2 249 1 78 3 222 4 
82 2 0 3 119 1 305 3 227 28 228 3 160 3 258 4 95 1 262 13 263 4 363 2 290 2 98 1 147 15 24 2 9 1 270 3 170 5 371 1 103 1 45 2 344 2 374 3 375 1 316 1 275 1 76 3 151 2 249 1 78 3 222 5 
82 1 0 6 119 1 305 3 226 3 227 41 228 3 160 3 258 2 21 3 95 1 262 22 263 4 337 1 265 3 363 1 290 3 267 3 98 1 147 19 24 1 9 1 270 2 170 3 103 1 45 1 344 1 374 6 316 1 275 1 219 3 76 6 151 1 249 1 78 3 81 3 222 9 
118 1 145 1 159 1 352 1 367 1 28 1 35 1 96 1 255 1 108 1 
229 1 235 1 
231 1 118 1 352 1 28 1 35 1 96 1 75 1 193 1 108 1 
118 1 145 1 352 1 367 1 343 2 35 1 329 1 4 1 108 1 274 1 310 1 261 1 28 1 68 1 96 1 39 1 322 1 255 1 
118 1 145 1 352 1 367 1 343 2 35 1 329 1 4 1 108 1 274 1 310 1 261 1 28 1 68 1 96 1 39 1 322 1 255 1 
118 1 145 1 352 1 367 1 343 2 35 1 329 1 4 1 108 1 274 1 310 1 261 1 28 1 68 1 96 1 39 1 322 1 255 1 
183 1 233 1 46 1 
183 1 233 1 46 1 
71 1 186 1 
183 1 71 1 186 1 
260 1 230 1 
118 1 281 2 352 1 35 1 180 1 229 1 356 1 230 1 260 1 310 1 261 1 359 2 234 2 39 1 96 1 235 1 190 1 169 1 343 1 218 1 192 2 108 1 346 2 246 1 109 1 28 1 322 1 
233 1 46 1 
183 1 71 1 186 1 
82 1 281 2 57 1 138 1 326 1 227 2 258 2 121 2 289 2 360 1 212 1 184 1 262 1 70 1 126 1 363 1 237 2 147 1 369 1 45 1 296 1 192 2 346 2 26 1 151 1 277 1 278 1 251 1 253 1 79 1 16 2 
32 1 237 2 57 1 10 1 370 1 217 1 141 1 308 1 90 1 244 1 195 1 289 2 6 1 12 1 142 1 112 1 126 1 16 2 55 2 
32 1 237 1 10 1 57 1 217 1 141 1 308 1 90 1 244 1 195 1 289 1 12 1 142 1 126 1 16 1 300 1 55 2 
237 1 57 1 120 1 369 1 313 1 289 1 6 1 12 1 123 1 94 1 251 1 13 1 126 1 16 1 
32 1 237 1 10 1 57 1 370 1 217 1 141 1 308 1 90 1 244 1 195 1 289 1 6 1 12 1 142 1 126 1 16 1 55 2 
372 1 
130 1 274 1 38 1 276 1 179 1 22 1 254 1 
58 1 179 1 288 1 261 1 333 1 236 1 342 1 102 1 376 1 130 1 274 2 27 1 276 1 198 1 199 1 322 1 14 1 
237 1 102 1 57 1 120 1 369 1 272 1 376 1 289 1 331 1 333 1 199 1 29 1 251 2 126 2 16 1 56 1 204 1 
0 2 119 1 139 1 58 1 305 2 179 8 228 1 160 2 309 2 261 1 333 2 334 1 236 6 189 1 101 5 342 3 73 1 102 2 270 1 170 1 374 2 47 5 315 1 243 1 376 2 130 5 197 1 27 1 274 5 276 2 199 2 201 1 114 1 78 2 322 1 
0 1 84 1 281 1 178 1 179 2 309 2 286 1 261 1 359 1 21 1 333 1 234 1 336 1 265 1 146 1 73 1 102 1 8 1 374 2 192 1 376 1 130 2 346 1 219 1 199 1 322 1 301 1 324 1 
102 1 179 1 376 1 130 1 274 1 38 1 276 1 333 1 199 1 254 1 
0 2 101 5 342 5 73 1 295 1 305 2 179 5 160 2 374 2 47 5 309 2 130 5 274 5 78 2 236 10 
274 1 27 1 261 1 276 1 58 1 322 1 
57 1 353 1 120 2 58 4 139 2 179 2 354 1 328 2 289 4 261 3 92 1 333 2 94 1 126 1 237 4 102 1 369 1 313 1 376 2 196 1 130 2 27 2 199 2 251 1 201 2 155 1 322 3 16 4 223 1 
82 1 281 3 326 1 57 1 138 1 120 1 178 1 227 1 180 1 258 2 289 1 359 2 234 2 143 1 126 1 363 1 237 1 147 1 8 2 368 1 369 1 45 1 373 1 192 3 272 1 346 2 26 1 150 1 151 1 251 1 16 1 116 1 
342 2 101 2 102 1 139 1 179 1 47 2 376 1 130 2 274 4 276 2 333 1 199 1 201 1 267 1 236 4 
96 1 284 1 108 1 
260 1 145 1 66 1 96 1 108 1 
96 1 284 1 108 1 
96 1 284 1 108 1 
96 1 40 1 108 1 
96 1 40 1 108 1 
96 1 40 1 108 1 
96 1 108 1 
352 1 28 1 
82 2 0 1 147 4 226 1 227 8 45 2 374 1 258 4 76 2 219 1 151 2 21 1 262 4 349 1 290 1 363 2 265 1 267 1 222 3 81 1 
0 1 76 2 219 1 147 3 21 1 226 1 227 6 22 1 262 3 374 1 265 1 267 1 222 2 81 1 
82 1 0 1 147 2 305 1 45 1 227 4 160 1 374 1 258 2 76 1 330 1 151 1 78 1 262 2 363 1 290 1 222 2 
0 1 147 4 24 1 270 1 305 1 170 2 227 7 228 1 160 1 374 1 76 1 78 1 262 3 290 1 222 2 
82 2 0 3 86 1 305 2 226 1 227 23 160 2 228 2 258 4 211 1 21 1 262 11 337 1 265 2 290 4 363 2 267 1 24 1 147 12 170 2 45 2 374 3 219 2 76 5 151 2 78 2 349 2 81 1 222 9 
147 1 170 1 227 1 
227 1 262 1 228 1 
82 1 0 1 147 3 295 1 305 1 45 1 227 6 160 1 374 1 258 2 330 1 76 2 151 1 262 3 78 1 363 1 290 1 222 3 
82 1 0 2 119 1 305 2 227 12 228 1 160 2 258 2 262 6 334 1 290 1 363 1 98 1 147 6 270 1 170 1 45 1 374 2 315 1 76 1 197 1 151 1 114 1 78 2 222 2 
0 1 147 3 227 6 374 1 219 1 76 1 21 1 262 3 265 1 290 1 222 2 
82 1 147 2 226 1 227 3 45 1 258 2 211 1 76 1 219 1 151 1 262 1 349 1 290 1 265 1 363 1 222 2 81 1 
82 1 0 2 147 5 45 1 227 10 374 2 258 2 219 2 76 3 151 1 21 1 262 5 363 1 265 2 290 2 98 1 324 1 222 5 
82 1 45 1 227 2 160 1 374 1 258 2 151 1 262 2 363 1 290 1 98 1 222 1 
82 1 0 1 147 2 305 1 45 1 227 4 160 1 374 1 258 2 76 1 151 1 78 1 262 2 363 1 290 1 98 1 222 2 
82 3 147 2 227 3 45 3 375 1 258 6 211 1 219 1 76 1 151 3 262 1 349 1 363 3 265 1 290 1 98 1 222 2 
82 5 0 5 305 3 226 1 227 34 228 3 160 3 258 10 211 1 330 1 19 1 21 2 262 16 265 3 363 5 290 5 267 1 339 1 98 1 147 18 24 1 270 1 170 4 45 5 374 5 375 1 48 1 219 3 76 7 151 5 78 3 349 2 81 1 222 12 
82 1 0 1 119 1 226 1 227 8 228 1 258 2 21 1 262 4 363 1 265 1 267 1 98 1 147 4 270 1 170 1 45 1 374 1 219 1 76 2 151 1 81 1 222 2 
82 2 0 1 119 1 305 1 226 1 227 11 228 1 160 1 258 4 330 1 21 1 262 6 265 1 363 2 290 1 267 1 98 1 147 5 24 1 270 1 170 2 45 2 374 2 76 2 219 1 151 2 81 1 222 3 
82 3 0 3 119 1 305 2 226 1 227 19 228 1 160 2 258 6 330 1 21 1 262 9 334 1 265 1 290 1 363 3 267 1 98 1 147 10 270 1 170 1 45 3 374 3 315 1 219 1 197 1 76 3 151 3 114 1 78 2 349 1 81 1 222 4 
82 3 0 2 119 1 305 2 226 1 227 17 228 1 160 2 258 6 330 1 21 1 262 10 334 1 265 1 290 2 363 3 267 1 98 1 147 7 270 1 170 1 45 3 374 3 315 1 219 1 76 3 197 1 151 3 114 1 78 1 349 1 81 1 222 5 
82 1 0 1 119 1 226 1 227 8 228 1 258 2 21 1 262 4 363 1 265 1 267 1 98 1 147 4 270 1 170 1 45 1 374 1 219 1 76 2 151 1 81 1 222 2 
82 1 0 2 119 1 305 2 227 12 228 1 160 2 258 2 262 6 334 1 290 1 363 1 98 1 147 6 270 1 170 1 45 1 374 2 315 1 76 1 197 1 151 1 114 1 78 2 222 2 
82 4 0 2 119 1 305 2 226 1 227 18 228 1 160 2 258 8 330 1 21 1 262 10 334 1 265 1 290 2 363 4 267 1 98 1 147 8 270 1 170 1 45 4 374 3 315 1 219 1 197 1 76 3 151 4 114 1 78 1 349 2 81 1 222 5 
82 4 0 2 119 1 305 3 227 16 228 1 160 3 258 8 262 9 334 1 290 3 363 4 98 1 147 7 270 1 170 1 45 4 374 3 375 1 315 1 197 1 76 3 151 4 114 1 78 2 349 2 222 6 
0 1 147 4 226 1 227 7 374 1 219 3 76 3 21 1 262 3 265 3 290 3 81 2 222 6 
82 4 0 2 119 1 305 2 226 1 227 18 228 1 160 2 258 8 21 1 262 10 334 1 265 1 290 1 363 4 267 1 98 1 147 8 270 1 170 1 45 4 374 3 375 1 315 1 219 1 197 1 76 3 151 4 114 1 78 1 349 2 81 1 222 4 
346 1 33 1 281 1 250 1 216 1 180 1 192 1 
33 1 281 1 11 1 148 1 216 1 209 1 180 1 181 1 192 1 346 1 124 1 250 1 
237 1 289 1 57 1 120 1 369 1 94 1 22 1 251 1 313 1 126 1 16 1 
237 1 281 2 293 1 57 1 120 1 369 1 373 1 180 1 272 1 192 2 346 1 289 1 359 1 234 1 251 1 126 1 143 1 16 1 
117 1 237 1 281 2 293 1 57 1 369 2 312 1 373 1 328 1 180 1 272 2 192 2 49 1 64 1 346 2 289 1 359 1 234 2 251 3 336 1 126 1 143 1 16 1 
117 1 281 2 57 1 328 1 180 1 64 1 289 2 359 1 234 2 126 1 336 1 167 1 237 2 127 1 293 1 369 2 312 1 373 1 192 2 272 2 49 1 346 2 251 3 16 2 
117 1 237 3 127 1 325 1 57 1 120 1 58 1 369 1 61 1 328 1 106 1 272 1 49 1 274 1 289 3 261 2 276 1 331 1 110 1 251 4 322 2 126 1 16 3 
117 1 237 3 127 1 57 1 120 1 58 1 369 1 61 1 328 1 272 1 49 1 274 1 289 3 261 2 276 1 331 1 220 1 110 1 251 4 322 2 126 1 16 3 
237 1 205 1 289 1 57 1 126 1 16 1 
292 1 237 7 205 1 10 1 57 2 120 2 369 2 207 1 62 1 121 1 272 1 242 1 17 1 289 7 166 1 277 1 112 1 251 3 126 3 16 6 204 1 
82 2 0 1 281 2 303 1 57 1 138 2 226 1 3 1 227 6 180 2 63 1 258 4 289 1 359 1 21 1 360 1 234 1 262 3 70 1 126 1 143 1 265 1 363 2 267 1 237 1 293 1 147 3 369 1 45 2 373 1 374 1 272 1 192 2 346 1 26 2 76 2 219 1 150 1 151 2 298 1 112 1 251 1 154 1 16 1 116 1 222 2 81 1 
353 1 120 1 58 2 179 1 61 1 289 1 38 1 261 3 331 1 333 2 237 1 102 2 169 1 376 2 130 1 274 1 27 1 276 1 220 1 199 2 52 1 110 1 200 1 348 1 251 2 254 1 322 3 16 1 
237 2 205 1 57 1 369 1 61 1 272 1 289 2 112 1 251 2 126 2 16 2 56 1 204 1 
237 4 127 1 57 1 120 1 369 1 240 1 313 1 289 4 112 1 94 1 251 1 126 1 16 4 
292 1 237 2 57 1 369 1 328 1 257 1 272 1 242 1 287 1 289 2 251 1 126 2 16 2 7 1 
32 1 237 1 289 1 57 1 120 1 142 1 141 1 126 1 16 1 55 1 
237 2 10 1 57 1 369 1 289 2 277 1 112 1 251 1 79 1 126 1 16 2 
237 5 57 2 120 1 369 2 240 1 313 1 328 1 17 1 289 5 277 1 166 1 94 1 112 1 251 3 126 2 16 4 
237 5 57 2 120 1 369 2 240 1 313 1 328 1 289 5 232 1 277 1 166 1 94 1 112 1 251 3 126 2 16 4 
237 1 167 1 281 2 293 1 57 1 120 1 369 1 373 1 180 1 272 1 192 2 346 1 289 1 359 1 234 1 251 1 126 1 16 1 
292 1 237 1 57 1 369 1 62 1 328 1 272 1 242 1 289 1 251 1 126 2 16 1 204 1 
41 1 42 1 281 1 296 1 192 1 346 1 212 1 173 1 184 1 
144 1 42 1 53 1 
41 1 42 1 20 1 173 1 180 1 
42 1 144 1 41 2 169 1 312 1 180 1 307 1 64 1 274 1 261 2 20 2 276 1 110 1 53 1 173 2 322 2 202 1 336 1 338 1 
273 1 165 1 22 1 285 1 
273 1 165 1 30 1 285 1 36 1 214 1 187 1 
36 1 306 1 157 1 
36 3 285 1 161 1 273 1 165 1 133 1 153 1 30 3 214 1 175 1 187 1 158 2 
273 1 165 1 191 1 30 2 285 1 134 1 36 2 214 1 187 1 
256 1 36 1 161 1 149 1 244 1 165 1 142 1 30 1 214 1 187 1 55 1 
165 1 30 1 285 1 36 1 214 1 161 1 187 1 
273 1 30 1 285 2 36 1 214 1 161 1 187 1 
285 1 36 2 271 1 161 1 165 1 30 2 361 1 214 2 311 1 187 2 
291 1 137 1 285 1 36 3 161 1 149 1 273 1 165 2 51 1 30 3 134 2 214 1 187 1 
32 1 239 1 217 1 285 1 36 2 161 1 244 1 273 1 165 1 142 1 30 2 134 1 214 1 55 2 187 1 
191 1 137 1 285 1 36 4 161 1 149 1 273 1 165 2 320 1 30 4 134 2 214 2 187 2 
273 1 165 1 30 1 285 1 36 1 214 1 161 1 187 1 
137 1 285 2 36 4 149 1 273 2 165 3 133 1 30 4 134 2 175 1 214 1 364 1 158 1 187 1 
340 1 136 1 285 1 36 2 161 1 273 1 165 1 30 2 323 1 134 1 214 1 187 1 
168 1 36 3 285 1 161 1 273 1 165 1 133 2 30 3 175 1 214 1 187 1 158 2 
129 2 297 1 165 2 5 1 
30 1 115 1 36 1 214 1 161 1 187 1 
291 1 273 1 165 1 30 2 285 1 134 1 36 2 214 1 161 1 187 1 
252 1 
273 1 165 1 30 1 285 1 36 1 214 1 161 1 187 1 
291 1 36 3 285 1 161 1 273 1 165 1 30 3 134 1 214 1 187 1 158 1 
165 1 137 1 149 1 364 1 
165 1 285 1 

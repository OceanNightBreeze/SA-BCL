#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 112 107 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 112 107 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
360 1 246 6 268 2 177 2 102 9 129 2 362 5 348 1 305 1 136 1 57 2 281 2 369 1 34 4 84 1 213 9 59 1 161 1 7 1 60 1 86 1 39 3 336 2 13 1 220 1 290 2 379 1 198 1 
360 1 246 6 268 2 177 2 102 9 129 2 362 5 348 1 305 1 136 1 57 2 281 2 369 1 34 4 84 1 213 9 59 1 161 1 7 1 60 1 86 1 39 3 336 2 13 1 220 1 290 2 379 1 198 1 
360 1 246 7 268 2 177 2 102 10 129 2 362 6 348 1 305 1 136 1 57 2 281 2 369 1 34 5 84 1 213 10 59 1 161 1 7 1 60 1 86 1 39 4 336 2 13 1 220 1 290 2 379 1 198 1 
360 1 246 4 268 2 177 2 102 7 129 2 362 4 348 1 305 1 136 1 57 2 281 2 369 1 34 3 84 1 213 7 59 1 161 1 7 1 60 1 39 2 336 1 13 1 220 1 290 2 379 1 198 1 
360 1 57 1 246 3 281 1 369 1 268 1 84 1 34 2 213 4 161 1 177 1 129 1 102 4 362 3 39 1 86 1 336 2 348 1 
360 1 57 1 295 1 268 1 213 2 161 1 7 1 177 1 362 1 102 2 129 1 348 1 251 1 154 1 198 1 290 1 
360 1 246 1 268 2 34 1 213 3 161 1 60 1 177 2 102 3 362 2 39 1 348 1 290 1 
360 1 246 7 174 1 48 1 268 2 177 2 102 9 362 5 129 1 348 1 57 1 281 1 369 1 34 4 84 1 213 9 59 1 161 1 60 1 39 3 86 1 336 2 220 1 290 1 
360 1 246 7 174 1 48 1 268 2 177 2 102 9 362 5 129 1 348 1 57 1 281 1 369 1 34 4 84 1 213 9 59 1 161 1 60 1 39 3 86 1 336 2 220 1 290 1 
14 1 185 1 232 1 
134 2 159 1 232 1 
163 2 24 1 54 2 202 1 310 2 375 2 118 2 2 2 
144 2 44 2 45 1 172 1 266 1 19 1 173 1 343 1 202 1 75 1 2 3 128 1 24 1 228 1 273 2 207 1 54 2 152 1 231 1 280 1 233 1 135 1 310 3 85 1 109 2 163 2 373 1 10 1 67 1 375 2 265 1 377 1 69 1 114 1 221 1 42 2 118 2 
163 1 54 1 202 1 310 1 375 1 3 1 118 1 115 1 325 1 2 1 
310 1 6 1 247 1 98 1 2 1 65 1 164 1 181 1 131 1 185 1 3 1 232 1 306 1 118 1 
310 1 247 2 6 1 2 1 163 1 65 1 164 1 181 1 54 1 131 2 375 1 185 1 3 1 232 1 118 1 
131 1 218 1 247 1 356 1 30 1 
131 2 218 1 247 2 364 1 29 1 356 1 185 1 232 1 
131 1 218 1 247 1 
202 1 310 1 247 1 325 1 2 1 163 1 131 1 54 1 66 1 375 1 356 1 3 1 115 1 118 1 
232 1 
121 1 131 2 218 1 247 2 29 1 356 1 185 1 232 1 
222 2 188 1 96 1 245 2 204 1 311 1 247 5 370 1 271 1 131 5 183 2 141 1 355 1 218 2 92 1 29 1 356 2 185 1 232 1 
24 1 14 1 
310 2 2 2 163 1 63 1 24 2 316 1 54 1 375 1 118 2 
46 1 9 1 341 1 
144 1 44 1 45 1 19 1 173 1 310 1 109 1 2 1 128 1 24 1 193 1 207 1 10 1 377 1 265 1 233 1 
144 1 44 1 45 1 341 1 19 1 173 1 310 2 344 1 109 1 2 2 128 1 207 1 10 1 54 1 375 1 265 1 377 1 93 1 118 1 233 1 
163 1 24 1 54 3 310 3 375 3 344 1 118 3 2 3 
54 1 310 1 375 1 3 1 118 1 325 1 2 1 
163 1 63 1 316 1 54 1 310 1 375 1 3 1 118 1 2 1 
144 1 44 1 45 1 172 1 266 1 19 1 173 1 343 1 202 1 344 1 247 1 2 4 128 1 24 1 228 1 273 2 207 1 181 1 54 3 131 1 3 1 231 1 280 1 233 1 234 1 310 4 6 1 85 1 109 1 163 2 65 1 164 1 373 1 316 1 10 1 67 1 375 3 265 1 377 1 93 1 69 1 378 1 42 1 118 3 
24 1 104 1 54 1 310 2 375 1 344 1 98 1 118 2 2 2 
234 1 310 3 247 1 344 2 6 1 297 1 2 3 163 1 164 1 65 1 181 1 316 1 131 1 54 3 375 3 93 1 3 1 232 1 118 3 
341 1 310 2 344 1 2 2 163 1 9 1 316 1 54 2 375 2 118 2 
144 1 44 1 45 1 19 1 173 1 310 1 109 1 2 1 128 1 24 1 207 1 10 1 377 1 265 1 233 1 
144 1 44 1 19 1 173 1 74 1 310 1 296 1 109 1 2 1 128 1 24 1 10 1 377 1 265 1 233 1 
46 2 341 2 172 1 266 1 343 1 272 1 273 2 152 2 231 1 253 1 307 1 187 1 81 1 282 1 83 1 85 1 35 1 162 1 9 2 373 1 241 1 67 2 70 1 42 4 
181 1 54 1 310 1 375 1 3 1 287 1 118 1 2 1 
310 5 344 2 98 1 61 1 2 5 163 1 24 1 316 1 104 1 54 4 375 4 93 1 118 5 366 1 
54 2 310 2 375 2 287 1 3 1 118 2 325 1 2 2 
148 1 350 1 
148 1 350 1 
20 1 196 1 
20 1 196 1 
20 1 196 1 
148 1 350 1 143 1 
148 1 350 1 143 1 
130 1 148 1 350 1 
103 1 20 1 196 1 113 1 148 2 350 2 
148 1 350 1 143 1 
148 1 37 1 350 1 
148 1 37 1 350 1 
148 1 37 1 350 1 
340 1 292 2 47 1 332 2 203 1 247 2 33 3 255 1 148 2 126 1 249 2 131 2 105 1 113 1 232 1 350 2 17 2 72 2 351 1 
292 1 47 1 247 1 148 1 100 1 249 1 2 2 52 1 24 1 130 1 274 1 54 2 131 1 276 1 26 1 350 1 310 2 309 1 33 1 375 2 17 1 118 2 72 1 18 1 
129 1 57 1 281 1 
129 1 57 1 154 1 
210 1 129 3 368 1 281 2 288 1 154 1 
210 1 129 2 281 1 160 1 288 1 154 1 
210 1 129 2 281 1 288 2 154 1 
222 1 96 1 97 2 245 1 247 5 100 1 248 2 345 1 302 1 131 5 183 1 276 1 26 1 29 1 185 1 186 1 232 2 307 1 253 1 134 3 188 3 353 2 311 2 190 1 58 1 159 1 35 1 241 1 218 1 91 1 356 4 116 1 
222 2 96 1 97 6 245 2 247 9 345 3 131 9 276 4 183 2 106 1 29 1 30 5 185 1 232 5 186 1 307 3 253 3 134 9 188 8 211 1 55 1 353 6 237 1 311 6 159 3 371 5 35 3 216 1 241 3 218 6 91 2 92 1 356 7 116 2 169 1 
222 1 245 1 97 2 247 3 248 1 345 1 302 1 131 3 183 1 276 1 185 1 232 3 307 1 253 1 188 3 134 4 353 2 190 1 311 2 159 2 35 1 241 1 91 1 92 1 356 2 116 1 
222 1 97 4 245 1 247 4 248 2 345 2 302 1 131 4 183 1 276 2 185 1 232 4 307 2 253 2 134 7 188 5 211 1 55 1 353 4 190 1 311 4 159 3 35 2 241 2 91 1 92 1 356 3 116 1 169 1 
175 1 14 1 233 1 
78 1 233 1 
111 1 
265 1 233 1 
108 1 175 2 265 1 377 1 8 1 233 3 
265 1 377 1 233 1 
82 1 233 1 
200 2 0 1 32 1 282 3 333 1 35 1 372 1 139 1 263 1 67 3 152 4 286 1 70 2 41 1 42 7 357 1 253 1 
200 2 0 1 32 1 282 3 333 1 35 1 372 1 139 1 263 1 67 3 152 4 286 1 70 2 41 1 42 7 357 1 253 1 
200 2 0 1 32 1 235 1 282 3 333 1 35 1 372 1 139 1 263 1 67 3 152 4 286 1 70 2 41 1 42 7 357 1 253 1 
291 1 95 4 172 1 200 3 0 2 266 1 343 1 76 1 324 1 345 3 273 2 303 1 152 16 250 1 253 4 307 3 331 1 32 1 282 10 333 2 85 1 313 3 35 4 372 1 139 1 240 1 241 3 263 2 67 15 286 5 70 5 41 1 42 31 357 2 
318 1 172 2 200 2 266 2 0 1 343 2 273 4 152 5 250 1 253 1 32 1 282 4 333 1 85 2 35 1 372 1 139 1 263 1 12 1 67 4 70 3 286 1 42 9 357 1 
44 1 144 1 145 1 360 1 19 1 246 1 146 1 268 1 226 1 177 1 362 1 102 2 22 1 299 1 128 1 129 2 300 1 79 1 348 1 277 1 252 1 154 1 368 1 57 1 281 1 213 2 161 1 109 1 239 1 290 1 
44 1 144 1 360 1 19 1 246 2 268 1 226 1 177 1 362 1 102 3 22 1 299 1 128 1 129 2 300 1 79 1 277 1 252 1 154 1 352 1 368 1 57 1 281 1 212 1 312 1 213 3 161 1 109 1 239 1 290 1 
44 1 144 1 360 1 19 1 246 2 226 1 362 1 102 2 22 1 299 1 128 1 129 2 79 1 277 1 154 1 352 1 368 1 57 1 281 1 312 1 213 2 161 1 109 1 239 1 290 1 
44 1 144 1 19 1 173 1 268 1 50 1 177 1 226 2 128 1 102 1 327 1 79 2 233 1 133 1 212 1 213 1 109 1 239 2 238 1 215 1 40 1 265 1 290 2 
145 1 144 1 44 1 368 1 19 1 57 1 281 1 268 1 213 1 312 1 109 1 177 1 239 1 226 1 129 2 128 1 299 1 22 1 102 1 300 1 348 1 79 1 277 1 252 1 154 1 290 1 
224 1 
144 2 44 2 94 2 96 1 245 1 247 5 98 1 205 1 2 1 3 1 153 1 306 1 308 1 155 1 310 1 311 2 6 1 159 2 109 2 258 2 110 1 65 1 164 1 218 6 265 1 118 1 317 1 222 1 359 2 119 1 319 4 19 1 173 2 122 1 227 1 128 1 181 1 275 2 131 5 183 1 328 2 29 3 185 1 184 2 232 2 365 2 233 1 134 2 133 1 188 2 367 1 137 1 40 1 140 1 91 1 
308 1 319 2 121 1 122 1 310 1 6 1 247 3 98 1 227 1 2 1 110 1 164 1 65 1 181 1 131 3 218 2 29 1 3 1 306 1 118 1 365 1 317 1 
308 1 359 1 319 3 121 1 122 1 310 1 6 1 247 3 98 1 227 1 2 1 110 1 164 1 65 1 181 1 131 3 218 1 29 1 185 1 3 1 232 1 306 1 118 1 317 1 
319 3 359 1 121 1 122 1 247 3 98 1 2 1 227 1 181 1 131 3 328 1 29 1 3 1 185 1 306 1 232 1 365 1 308 1 310 1 6 1 110 1 65 1 164 1 218 2 118 1 317 1 
94 2 222 1 359 4 319 6 96 1 121 1 245 1 122 1 247 5 125 1 98 1 227 1 2 1 181 1 275 2 131 5 183 1 328 4 107 1 29 3 329 1 184 2 185 5 3 1 153 1 232 5 306 1 365 4 308 1 188 1 367 1 310 1 311 1 6 1 159 2 258 2 110 1 65 1 164 1 218 7 338 1 112 1 118 1 317 1 
94 2 96 1 245 1 247 4 98 1 2 1 3 1 306 1 153 1 308 1 310 1 6 1 311 1 159 2 258 2 110 1 164 1 65 1 218 4 118 1 317 1 222 1 319 4 359 2 122 1 227 1 181 1 131 4 275 2 183 1 328 2 29 2 184 2 185 1 232 2 365 2 367 1 188 1 134 2 137 1 
94 2 222 1 359 2 319 4 96 1 245 1 122 1 247 4 125 1 98 1 2 1 227 1 181 1 275 2 131 4 183 1 328 2 29 2 185 1 184 2 3 1 232 1 153 1 306 1 365 2 308 1 188 1 367 1 310 1 311 1 6 1 159 2 258 2 110 1 65 1 164 1 218 4 338 1 112 1 118 1 317 1 
94 2 222 1 359 2 319 4 96 1 245 1 122 1 247 4 125 1 98 1 2 1 227 1 181 1 275 2 131 4 183 1 328 2 29 2 185 1 184 2 3 1 232 1 153 1 306 1 365 2 308 1 188 1 367 1 310 1 311 1 6 1 159 2 258 2 110 1 65 1 164 1 218 4 338 1 112 1 118 1 317 1 
73 2 94 2 222 1 359 2 319 4 96 1 245 1 122 1 247 4 125 1 98 1 2 1 227 1 51 1 181 1 275 2 131 4 183 1 328 2 29 2 185 1 3 1 232 1 153 1 306 1 365 2 308 1 134 2 188 1 310 1 311 1 6 1 110 1 65 1 164 1 89 1 11 1 218 4 168 2 118 1 317 1 
308 1 359 1 319 3 122 1 310 1 6 1 247 2 98 1 227 1 2 1 110 1 164 1 65 1 181 1 131 2 218 1 328 1 112 1 107 1 3 1 306 1 118 1 365 1 317 1 
308 1 359 1 319 3 122 1 310 1 6 1 247 2 98 1 227 1 2 1 110 1 164 1 65 1 181 1 131 2 218 1 328 1 112 1 107 1 3 1 306 1 118 1 365 1 317 1 
94 2 96 1 245 1 247 4 98 1 2 1 3 1 306 1 153 1 308 1 310 1 6 1 311 1 110 1 164 1 65 1 11 1 218 4 168 2 118 1 317 1 73 2 222 1 319 4 359 2 122 1 227 1 181 1 131 4 275 2 183 1 328 2 29 2 185 1 232 1 365 2 188 1 134 2 137 1 
46 1 341 1 172 1 200 1 0 1 266 1 343 1 272 1 24 2 273 2 152 3 231 1 253 1 32 1 282 2 85 1 35 1 372 1 139 1 9 1 373 1 263 1 67 3 14 1 70 2 42 6 
291 1 171 1 46 11 95 3 341 11 172 2 266 2 343 2 324 1 345 2 206 1 24 1 228 1 273 4 152 8 209 1 231 1 253 2 307 1 282 2 191 1 85 2 313 3 36 1 35 1 9 4 373 2 241 2 67 6 286 1 70 1 221 1 42 14 
44 1 144 1 45 1 172 1 19 1 266 1 173 1 343 1 267 1 344 1 2 2 128 1 206 1 24 1 149 1 207 1 273 2 228 1 54 1 152 1 304 1 231 1 233 1 310 2 85 1 109 1 9 1 193 1 373 1 10 1 375 1 67 1 265 1 377 1 93 1 118 1 42 2 221 1 
44 3 144 3 45 2 46 7 341 7 200 1 0 1 343 3 344 1 147 2 2 3 345 2 206 1 207 2 54 1 152 10 253 3 307 2 310 3 312 1 109 3 9 7 263 1 10 2 67 10 265 2 70 4 16 1 221 1 118 1 172 3 266 3 19 2 173 1 322 2 128 2 24 2 228 1 273 6 231 3 280 2 233 2 32 1 236 1 282 8 85 3 35 3 372 1 139 1 373 3 87 2 241 2 375 1 93 1 377 2 286 4 42 20 197 1 289 2 
44 8 144 7 172 2 19 2 266 2 146 1 173 2 343 2 75 2 344 1 270 1 2 1 128 2 272 1 273 4 228 1 54 1 152 1 231 2 233 3 189 1 133 1 310 1 312 1 85 2 257 1 334 1 109 8 284 1 242 1 373 2 195 1 40 1 375 1 67 1 265 2 118 1 221 1 42 2 
46 1 341 1 172 1 266 1 343 1 2 1 345 1 206 1 273 2 54 1 152 1 231 1 253 1 307 1 282 1 310 1 85 1 35 1 163 1 192 1 9 1 373 1 241 1 316 1 375 1 67 2 70 1 118 1 42 3 
46 1 341 1 172 1 266 1 343 1 282 1 83 1 85 1 9 1 272 1 373 1 241 1 273 2 152 2 286 1 42 2 231 1 253 1 
46 1 341 1 172 1 266 1 81 1 343 1 282 1 85 1 35 1 9 1 272 1 373 1 273 2 67 2 70 1 42 2 231 1 307 1 
46 2 341 2 172 1 266 1 343 1 345 1 272 1 273 2 152 2 231 1 253 1 307 1 282 2 85 1 35 1 9 2 241 1 373 1 67 2 286 1 70 1 42 4 
46 1 341 1 172 1 266 1 343 1 282 1 83 1 85 1 284 1 9 1 373 1 241 1 273 2 152 2 286 1 42 2 231 1 253 1 
46 1 341 1 172 1 266 1 81 1 343 1 282 1 85 1 35 1 284 1 9 1 373 1 273 2 67 2 70 1 42 2 231 1 307 1 
46 2 341 2 172 1 266 1 343 1 345 1 273 2 152 2 231 1 253 1 307 1 282 2 85 1 35 1 284 1 9 2 241 1 373 1 67 2 286 1 70 1 42 4 
46 2 341 2 172 1 266 1 343 1 345 1 273 2 152 2 231 1 253 1 307 1 282 2 85 1 35 1 9 2 241 1 373 1 67 2 286 1 70 1 42 4 
44 1 144 1 45 1 172 1 19 1 266 1 173 1 343 1 2 1 128 1 24 1 207 1 273 2 228 1 152 1 231 1 280 1 233 1 310 1 85 1 109 1 373 1 10 1 67 1 265 1 377 1 221 1 42 2 
44 1 144 1 172 1 19 1 266 1 74 1 173 1 343 1 296 1 2 1 128 1 24 1 273 2 228 1 152 1 231 1 233 1 310 1 85 1 109 1 373 1 10 1 67 1 265 1 377 1 221 1 42 2 71 1 
46 2 341 2 172 1 266 1 343 1 345 1 206 1 273 2 152 2 231 1 253 1 307 1 282 2 85 1 35 1 9 2 241 1 373 1 67 2 286 1 70 1 42 4 
44 1 144 1 46 2 45 1 341 2 172 1 19 1 266 1 146 1 343 1 147 1 2 1 345 1 128 1 207 1 273 2 152 2 231 1 280 1 307 1 253 1 233 1 282 2 310 1 85 1 35 1 109 1 9 2 241 1 373 1 10 1 67 2 377 1 265 1 70 1 286 1 42 4 
46 1 341 1 172 1 266 1 343 1 2 1 345 1 206 1 273 2 54 1 152 2 231 1 307 1 253 1 282 1 310 1 85 1 35 1 214 1 163 1 9 1 373 1 241 1 316 1 67 1 375 1 286 1 118 1 42 3 
318 1 172 2 266 2 343 2 345 1 273 4 152 3 132 1 80 1 253 1 307 1 4 1 158 1 282 2 85 2 35 1 194 1 241 1 88 1 264 1 374 1 67 3 70 1 286 1 117 1 42 6 
318 1 172 1 266 1 4 2 343 1 85 1 194 1 273 2 374 1 264 1 152 1 67 1 42 2 117 1 80 2 
318 1 172 2 266 2 4 1 158 1 343 2 85 2 194 1 273 4 374 1 264 1 152 1 67 1 42 2 117 1 80 1 
318 1 172 2 266 2 4 1 158 1 343 2 85 2 194 1 273 4 374 1 264 1 152 1 67 1 42 2 117 1 80 1 
318 1 172 1 200 1 266 1 0 1 343 1 273 2 152 4 80 1 253 1 4 1 32 1 282 1 85 1 35 1 372 1 139 1 194 1 263 1 264 1 374 1 67 3 70 1 117 1 42 7 
292 1 105 1 124 1 113 1 148 1 17 1 350 1 72 1 351 1 249 1 
52 1 130 1 
315 1 292 1 337 1 68 1 148 1 17 1 350 1 72 1 249 1 
340 1 292 1 47 1 332 1 247 1 33 2 255 1 148 1 126 1 249 1 131 1 105 1 113 1 232 1 350 1 17 1 72 1 351 1 
340 1 292 1 47 1 332 1 247 1 33 2 255 1 148 1 126 1 249 1 131 1 105 1 113 1 232 1 350 1 17 1 72 1 351 1 
340 1 292 1 47 1 332 1 247 1 33 2 255 1 148 1 126 1 249 1 131 1 105 1 113 1 232 1 350 1 17 1 72 1 351 1 
199 1 103 1 143 1 
199 1 103 1 143 1 
201 1 37 1 
103 1 201 1 37 1 
274 1 18 1 
340 1 292 1 247 1 225 1 148 1 100 1 2 2 249 1 52 1 24 1 130 1 274 1 131 1 54 2 276 1 26 1 350 1 332 1 310 2 309 1 33 1 375 2 356 1 17 1 118 2 72 1 18 1 
199 1 143 1 
103 1 201 1 37 1 
44 2 144 2 172 1 19 1 266 1 343 1 294 1 75 2 49 1 2 2 128 1 206 1 150 1 273 2 228 1 152 1 28 1 231 1 233 1 189 1 157 1 310 2 85 1 257 1 109 2 373 1 67 1 265 1 118 2 221 1 42 2 
144 2 44 2 368 1 19 1 57 1 146 1 281 1 312 1 109 2 226 1 129 2 128 1 22 1 299 1 180 1 208 1 349 1 252 1 154 1 
144 1 44 1 368 1 358 1 19 1 57 1 281 1 312 1 109 1 226 1 129 2 22 1 299 1 128 1 349 1 252 1 154 1 
144 1 44 1 133 1 19 1 173 1 109 1 226 1 238 1 128 1 90 1 208 1 40 1 265 1 233 1 
144 1 44 1 368 1 19 1 57 1 281 1 312 1 109 1 226 1 129 2 128 1 22 1 299 1 180 1 208 1 349 1 252 1 154 1 
166 1 
271 1 188 1 204 1 311 1 14 1 185 1 232 1 
222 1 96 1 245 1 247 1 131 1 183 1 29 1 184 1 185 1 232 2 188 1 367 1 134 1 311 1 159 1 258 1 218 1 
144 3 44 3 96 4 146 1 245 4 97 6 204 1 247 5 101 1 345 2 53 1 301 2 151 2 253 2 307 2 156 1 353 6 5 2 311 8 159 6 8 1 314 2 109 3 164 2 261 2 217 1 218 5 265 3 15 2 222 4 119 1 19 3 120 2 173 1 175 2 178 2 271 1 128 4 78 3 131 5 183 4 29 3 185 2 232 8 233 10 188 9 134 12 82 2 283 1 35 2 241 2 91 2 377 3 289 2 
222 2 95 1 119 1 244 1 96 2 97 5 245 2 247 1 176 1 324 1 326 1 345 2 179 1 131 1 183 2 151 1 29 1 185 2 232 5 253 2 307 2 134 6 188 8 353 5 311 5 159 3 313 1 256 1 35 2 261 2 241 2 285 1 142 1 218 1 91 1 
222 1 0 1 96 1 245 1 202 1 247 1 325 1 2 1 131 1 54 1 363 1 183 1 151 1 3 1 253 2 188 2 32 1 310 1 311 2 35 1 163 1 261 2 263 1 66 1 375 1 338 1 115 1 118 1 
222 1 188 1 96 1 245 1 204 1 311 1 271 1 183 1 185 1 232 1 
134 10 188 5 353 5 97 5 311 5 159 5 35 2 345 2 261 2 241 2 151 1 232 5 289 1 253 2 307 2 
131 1 218 1 247 1 29 1 185 1 232 1 
44 4 144 4 222 2 119 2 19 1 96 1 293 1 245 2 173 2 247 3 205 1 128 1 53 2 131 3 183 2 29 2 233 1 188 2 133 1 311 2 109 4 217 1 140 1 40 1 218 4 91 2 92 1 265 1 339 1 
44 1 144 1 45 1 172 1 266 1 19 1 173 1 202 1 343 1 2 3 128 1 24 1 228 1 273 2 207 1 54 2 231 1 280 1 233 1 310 3 85 1 109 1 163 2 373 1 10 1 67 1 375 2 69 1 377 1 265 1 42 1 118 2 
222 1 134 4 188 1 200 1 119 1 96 1 353 2 97 2 245 1 311 2 159 2 183 1 91 1 185 2 232 4 
292 1 165 1 17 1 
292 1 165 1 17 1 
292 1 323 1 17 1 18 1 351 1 
292 1 165 1 17 1 
38 1 292 1 17 1 
38 1 292 1 17 1 
38 1 292 1 17 1 
292 1 17 1 
148 1 350 1 
200 1 172 2 266 2 0 1 32 1 343 2 282 3 85 2 35 1 372 1 139 1 273 4 263 1 67 4 152 4 250 1 286 1 70 2 42 8 253 1 
200 1 0 1 32 1 282 2 35 1 372 1 139 1 263 1 67 3 152 3 14 1 70 2 42 6 253 1 
172 1 266 1 343 1 282 2 85 1 35 1 345 1 241 1 273 2 67 2 152 2 70 1 286 1 42 4 307 1 243 1 253 1 
291 1 95 2 282 2 313 1 35 1 324 1 345 1 241 1 67 4 152 3 70 1 286 1 42 7 307 1 253 1 
291 1 95 2 200 1 172 2 0 2 266 2 343 2 345 2 273 4 152 11 250 2 253 3 307 2 32 1 282 9 191 1 313 2 85 2 35 3 36 1 372 1 139 1 241 2 263 2 67 12 167 1 286 4 70 5 42 23 
95 1 67 1 42 1 
152 1 313 1 42 1 
172 1 266 1 343 1 282 3 85 1 35 1 345 1 241 1 273 2 67 3 152 3 286 1 70 2 42 6 289 1 243 1 253 1 307 1 
318 1 95 1 172 1 244 1 266 1 343 1 324 1 326 1 345 2 179 1 273 2 152 6 253 2 307 2 282 2 313 1 85 1 35 2 256 1 241 2 67 6 142 1 286 1 70 1 42 12 
0 1 32 1 282 2 35 1 263 1 152 3 67 3 70 1 286 1 42 6 253 1 
172 1 0 1 266 1 343 1 282 2 85 1 372 1 139 1 273 2 263 1 152 1 167 1 67 2 250 1 286 1 70 1 42 3 
318 1 172 1 266 1 0 2 32 1 343 1 282 5 85 1 35 2 273 2 263 2 363 1 152 5 67 5 70 3 286 2 42 10 253 2 
318 1 172 1 266 1 343 1 282 1 85 1 241 1 273 2 152 2 286 1 42 2 253 1 
318 1 172 1 266 1 343 1 282 2 85 1 35 1 345 1 241 1 273 2 67 2 152 2 70 1 286 1 42 4 307 1 253 1 
318 1 172 3 266 3 0 1 158 1 343 3 282 2 85 3 273 6 263 1 167 1 67 2 152 1 250 1 70 1 286 1 42 3 
318 1 291 1 95 4 200 1 172 5 0 3 266 5 343 5 76 1 324 1 345 3 273 10 303 1 152 16 250 2 253 5 307 3 32 2 158 1 282 12 85 5 313 3 35 5 372 1 139 1 240 1 241 3 263 3 167 1 67 18 286 5 70 7 42 34 243 1 
318 1 95 1 200 1 172 1 266 1 0 1 343 1 324 1 326 1 273 2 152 4 253 1 32 1 282 2 313 1 85 1 35 1 372 1 139 1 263 1 67 4 70 2 42 8 
318 1 291 1 95 2 200 1 172 2 0 1 266 2 343 2 324 1 326 1 345 1 273 4 152 6 253 2 32 1 282 3 85 2 313 1 35 1 372 1 139 1 241 1 263 1 67 5 70 2 286 1 42 11 243 1 
318 1 95 1 200 1 172 3 244 1 0 1 266 3 343 3 324 1 326 1 345 2 179 1 273 6 152 9 250 1 253 3 307 2 32 1 282 4 313 1 85 3 256 1 35 3 372 1 139 1 241 2 263 1 67 10 142 1 286 1 70 3 42 19 243 1 
318 1 95 1 200 1 172 3 244 1 0 1 266 3 343 3 324 1 326 1 345 2 179 1 273 6 152 10 250 1 253 3 307 1 32 1 282 5 313 1 85 3 35 2 256 1 372 1 139 1 241 2 263 1 67 7 142 1 286 2 70 3 42 17 243 1 
318 1 95 1 200 1 172 1 266 1 0 1 343 1 324 1 326 1 273 2 152 4 253 1 32 1 282 2 313 1 85 1 35 1 372 1 139 1 263 1 67 4 70 2 42 8 
318 1 95 1 172 1 244 1 266 1 343 1 324 1 326 1 345 2 179 1 273 2 152 6 253 2 307 2 282 2 313 1 85 1 35 2 256 1 241 2 67 6 142 1 286 1 70 1 42 12 
318 1 95 1 200 1 172 4 244 1 0 1 266 4 343 4 324 1 326 1 345 2 179 1 273 8 152 10 250 2 253 3 307 1 32 1 282 5 85 4 313 1 256 1 35 2 372 1 139 1 241 2 263 1 142 1 67 8 286 2 70 3 42 18 243 1 
318 1 95 1 172 4 244 1 266 4 343 4 324 1 326 1 345 3 179 1 273 8 152 9 250 2 253 3 307 2 158 1 282 6 85 4 313 1 256 1 35 2 241 3 142 1 67 7 286 3 70 3 42 16 
0 3 32 1 282 6 35 1 372 2 139 1 263 3 67 4 152 3 70 3 286 3 42 7 253 1 
318 1 95 1 200 1 172 4 244 1 0 1 266 4 343 4 324 1 326 1 345 2 179 1 273 8 152 10 250 2 253 3 307 1 32 1 158 1 282 4 85 4 313 1 256 1 35 2 372 1 139 1 241 2 263 1 142 1 67 8 286 1 70 3 42 18 
24 1 104 1 310 1 98 1 354 1 118 1 2 1 
346 1 24 1 182 1 104 1 310 1 361 1 98 1 354 1 118 1 43 1 2 1 259 1 
44 1 144 1 128 1 133 1 19 1 40 1 173 1 14 1 265 1 109 1 233 1 
144 1 44 1 45 1 19 1 173 1 310 2 344 1 109 1 2 2 128 1 24 1 10 1 54 1 375 1 265 1 377 1 118 1 233 1 
44 1 144 1 45 1 19 1 344 1 2 2 128 1 24 1 53 1 181 1 54 1 3 1 233 3 82 1 310 2 6 1 314 1 109 1 10 1 375 2 377 2 265 2 118 2 
44 2 144 2 19 1 74 1 344 1 2 2 128 1 24 1 53 1 181 1 54 1 3 1 233 3 82 1 310 2 6 1 314 1 109 2 262 1 10 1 375 2 377 2 265 2 118 2 
144 3 44 3 19 1 342 1 173 1 82 1 175 1 247 2 314 1 77 1 109 3 128 1 164 1 53 1 262 1 78 1 131 2 218 1 265 1 377 1 185 1 232 1 233 4 
144 3 44 3 19 1 173 1 82 1 175 1 247 2 314 1 109 3 178 1 128 1 164 1 53 1 262 1 78 1 131 2 218 1 265 1 377 1 185 1 232 1 233 4 
44 1 144 1 128 1 19 1 109 1 334 1 
144 6 44 7 189 1 19 2 146 1 173 2 75 1 312 1 8 1 270 1 334 1 109 7 298 1 128 3 242 1 195 1 377 1 265 2 376 1 31 1 233 3 
144 1 44 1 46 1 45 1 341 1 200 1 172 2 0 1 19 1 266 2 146 1 343 2 344 1 147 1 2 2 128 1 206 1 24 2 273 4 207 1 54 1 152 3 231 2 280 1 253 1 233 1 32 1 157 1 282 2 310 2 85 2 35 1 372 1 109 1 139 1 9 1 373 2 87 1 263 1 10 1 67 3 375 1 265 1 377 1 70 2 42 6 118 1 
44 1 144 1 222 2 96 2 173 1 245 2 204 1 175 1 247 3 178 1 271 1 301 1 78 1 131 3 183 2 29 1 185 1 232 1 233 2 188 1 5 1 311 1 109 1 164 1 217 1 218 2 356 1 15 1 
44 2 144 2 128 2 19 1 146 1 175 1 265 1 377 1 8 1 283 1 109 2 334 1 233 2 
44 4 144 4 128 1 133 1 262 1 19 1 40 1 146 1 173 1 278 1 265 1 109 4 233 1 
144 2 44 2 19 1 56 1 109 2 298 1 128 2 53 1 279 1 377 1 265 1 376 1 16 1 233 1 
44 1 144 1 129 1 128 1 299 1 19 1 57 1 173 1 154 1 109 1 
44 2 144 2 128 1 189 1 19 1 146 1 265 1 49 1 312 1 109 2 233 1 
144 4 44 5 133 1 189 1 19 2 173 1 146 1 270 1 109 5 128 2 53 1 195 1 40 1 278 1 265 2 233 3 
144 4 44 5 133 1 189 1 19 2 173 1 146 1 109 5 128 2 53 1 195 1 40 1 278 1 265 2 330 1 233 3 
144 1 44 1 19 1 173 1 74 1 310 2 344 1 109 1 2 2 128 1 24 1 10 1 54 1 375 1 265 1 377 1 118 1 233 1 
144 1 44 1 19 1 8 1 109 1 298 1 128 2 53 1 377 1 265 1 376 1 31 1 233 1 
24 1 223 1 64 1 254 1 138 1 
234 1 223 2 254 2 6 1 247 2 138 1 260 1 24 1 164 1 64 2 65 1 181 1 230 1 131 2 219 1 356 1 185 1 3 1 232 1 
223 1 294 1 310 1 138 1 2 1 64 1 150 1 28 1 118 1 
230 1 219 1 138 1 
362 1 360 1 14 1 161 1 
362 1 102 1 360 1 268 1 213 1 161 1 177 1 
102 1 290 1 239 1 
360 1 21 1 268 1 213 3 161 1 177 1 362 1 102 3 23 1 348 1 347 1 198 2 
362 1 102 2 360 1 336 1 246 1 268 1 213 2 161 1 177 1 
57 1 281 1 369 1 268 1 34 1 213 1 177 1 102 1 362 1 129 1 348 1 
362 1 102 1 360 1 348 1 268 1 213 1 177 1 
102 1 360 2 348 1 268 1 213 1 161 1 177 1 
170 1 360 1 268 2 213 2 177 2 127 1 62 1 362 1 102 2 348 1 
360 1 246 2 268 1 34 1 213 3 59 1 161 1 177 1 102 3 362 2 39 1 348 1 220 1 
360 1 368 1 320 1 57 1 246 1 281 1 268 1 213 2 161 1 177 1 362 1 129 2 102 2 348 1 154 1 
360 1 246 2 268 2 34 1 213 4 161 1 177 2 102 4 362 2 86 1 39 1 336 1 348 1 
362 1 102 1 360 1 348 1 268 1 213 1 161 1 177 1 
360 2 246 2 268 1 34 1 213 4 161 2 177 1 102 4 362 3 23 1 39 1 229 1 347 1 198 1 
360 1 174 1 246 1 123 1 268 1 213 2 99 1 161 1 177 1 362 1 102 2 348 1 
360 1 268 1 213 3 161 1 269 1 177 1 362 1 102 3 23 2 347 1 348 1 198 2 
362 2 335 2 25 1 27 1 
102 1 321 1 348 1 268 1 213 1 177 1 
362 1 102 2 360 1 246 1 348 1 268 1 59 1 213 2 161 1 177 1 
1 1 
362 1 102 1 360 1 348 1 268 1 213 1 161 1 177 1 
360 1 246 1 268 1 213 3 59 1 161 1 177 1 102 3 362 1 348 1 198 1 
362 1 39 1 229 1 34 1 
362 1 360 1 

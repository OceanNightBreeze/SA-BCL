#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 115 71 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 2 336 1 302 1 292 3 100 1 355 2 232 1 203 1 251 1 318 1 245 3 282 2 377 1 
311 1 336 4 292 9 140 1 366 1 367 1 318 3 245 9 144 2 268 1 45 2 20 1 175 2 302 1 100 2 355 2 232 1 329 1 57 1 203 1 251 1 306 2 282 5 377 6 359 1 12 2 212 1 257 1 
311 1 336 4 292 9 140 1 366 1 367 1 318 3 245 9 144 2 268 1 45 2 20 1 175 2 302 1 100 2 355 2 232 1 329 1 57 1 203 1 251 1 306 2 282 5 377 6 359 1 12 2 212 1 257 1 
311 1 336 5 292 10 140 1 366 1 367 1 318 4 245 10 144 2 268 1 45 2 20 1 175 2 302 1 100 2 355 2 232 1 329 1 57 1 203 1 251 1 306 2 282 6 377 7 359 1 12 2 212 1 257 1 
336 3 292 7 140 1 366 1 367 1 318 2 245 7 144 2 268 1 45 2 20 1 175 2 302 1 100 2 355 2 232 1 329 1 57 1 203 1 251 1 306 2 282 4 377 4 359 1 12 1 212 1 257 1 
311 1 175 1 336 2 292 4 355 1 232 1 203 1 251 1 140 1 318 1 306 1 245 4 377 3 282 3 12 2 144 1 212 1 45 1 
66 1 175 1 292 2 278 1 100 1 355 1 232 1 203 1 251 1 367 1 306 1 366 1 245 2 282 1 345 1 144 1 
311 1 336 4 292 9 140 1 318 3 245 9 143 1 144 1 268 1 45 1 299 1 175 2 302 1 100 1 355 2 232 1 203 1 251 1 306 1 377 7 282 5 12 2 212 1 257 1 
311 1 336 4 292 9 140 1 318 3 245 9 143 1 144 1 268 1 45 1 299 1 175 2 302 1 100 1 355 2 232 1 203 1 251 1 306 1 377 7 282 5 12 2 212 1 257 1 
96 1 97 1 348 1 241 1 312 1 112 1 89 1 53 1 263 1 116 1 3 1 344 1 246 1 173 1 
85 1 
348 2 3 2 344 1 85 1 51 1 374 1 46 1 271 1 
348 5 29 2 218 2 51 2 25 2 204 1 3 5 59 1 344 2 85 1 105 1 93 1 74 1 334 1 65 1 153 1 46 1 121 1 271 1 
85 1 2 1 271 1 
85 1 380 1 353 2 
97 2 96 2 273 1 241 2 312 1 246 2 263 2 173 2 
216 1 241 3 110 1 312 1 314 1 263 2 340 1 138 1 163 1 265 1 246 2 42 2 173 2 97 3 96 2 273 1 77 1 247 1 371 1 276 2 373 1 50 2 327 2 179 1 149 1 81 2 280 1 102 1 205 1 253 1 332 1 235 1 309 1 360 1 378 1 213 1 132 1 
97 1 96 1 116 1 241 1 312 1 246 1 89 1 53 1 263 1 173 1 
97 1 348 1 241 1 49 1 111 1 262 1 261 1 279 1 116 1 3 1 85 1 145 1 173 1 271 1 
96 1 97 1 348 2 241 1 111 1 262 1 261 1 263 1 116 1 3 2 246 1 85 1 145 1 173 1 271 1 
348 1 3 1 344 1 30 1 51 1 
348 2 3 2 344 1 85 1 51 1 46 1 271 1 35 1 
348 1 3 1 51 1 
97 2 96 1 273 2 241 2 88 1 263 1 246 1 173 2 362 1 
152 1 171 1 209 1 
97 1 273 1 216 1 241 1 50 1 327 1 314 1 340 1 81 1 163 1 102 1 205 1 170 1 309 1 235 1 378 1 
273 1 2 1 
97 2 216 1 241 2 314 1 50 1 327 1 263 1 340 1 163 1 81 1 102 1 205 1 246 1 235 1 309 1 378 1 171 1 256 1 173 1 95 1 
96 1 97 3 273 1 241 3 246 3 263 3 256 1 173 3 
97 1 116 1 241 1 246 1 53 1 263 1 173 1 
97 1 96 1 116 1 241 1 88 1 246 1 263 1 173 1 362 1 
216 1 241 4 110 1 88 1 312 1 111 1 314 1 262 1 261 1 263 3 340 1 138 1 163 1 116 1 3 1 246 3 42 1 145 1 173 3 95 1 96 2 97 4 273 1 77 1 247 1 371 1 276 2 348 1 373 1 179 1 50 1 327 1 81 1 280 1 102 1 205 1 234 1 235 1 309 1 378 1 106 1 213 1 256 1 132 1 
97 2 273 1 241 2 49 1 246 1 263 1 214 1 256 1 173 2 
96 1 97 3 348 1 241 3 88 1 111 1 261 1 262 1 263 3 3 1 116 1 39 1 234 1 246 3 85 1 145 1 256 2 173 3 95 1 
96 1 97 2 241 2 88 1 263 2 246 2 152 1 171 1 256 1 173 2 
97 1 273 1 216 1 241 1 50 1 327 1 314 1 340 1 81 1 163 1 205 1 102 1 309 1 235 1 378 1 
97 1 273 1 216 1 241 1 50 1 327 1 314 1 340 1 81 1 163 1 38 1 139 1 205 1 102 1 235 1 
87 1 110 1 1 1 220 1 138 2 168 1 42 4 19 1 171 2 247 1 276 2 373 1 124 1 180 1 280 1 305 1 183 1 150 1 332 2 209 2 152 2 213 1 132 1 155 1 
97 1 356 1 116 1 241 1 246 1 262 1 263 1 173 1 
97 5 96 1 273 1 241 5 49 1 88 1 263 4 16 1 308 1 246 4 214 1 256 2 173 5 95 1 
97 2 356 1 116 1 241 2 246 2 53 1 263 2 173 2 
266 1 358 1 238 1 
239 1 266 2 161 1 285 1 21 1 238 2 
266 1 238 1 
266 1 238 1 
285 1 21 1 
285 1 21 1 
285 1 21 1 
266 1 131 1 238 1 
266 1 131 1 238 1 
266 1 131 1 238 1 
266 1 290 1 238 1 
266 1 290 1 238 1 
266 1 290 1 238 1 
6 1 199 1 274 1 240 1 348 2 133 2 289 2 161 1 277 2 127 1 70 2 266 2 3 2 244 3 254 1 85 1 151 2 347 1 238 2 
133 1 241 2 159 1 289 1 263 2 317 1 70 1 244 1 266 1 3 1 246 2 169 1 173 2 97 2 273 1 272 1 348 1 352 1 55 1 358 1 254 1 151 1 64 1 238 1 
22 2 306 2 45 1 86 1 278 1 
306 1 144 1 45 1 
306 1 144 1 278 1 
22 1 306 3 23 1 86 1 45 2 278 1 
22 1 306 2 98 1 86 1 45 1 278 1 
87 1 218 1 29 1 134 2 339 1 317 1 365 1 3 5 344 4 294 1 74 1 94 2 46 1 270 1 271 1 121 3 348 5 124 1 24 1 51 1 352 1 353 3 55 1 25 1 330 1 305 1 183 1 83 1 105 2 85 2 333 2 380 1 
87 3 29 2 218 2 134 6 30 5 160 1 114 1 3 9 344 7 294 3 74 1 46 1 271 1 270 1 121 8 298 1 348 9 326 1 124 3 24 2 352 4 51 6 353 9 25 2 305 3 183 3 331 5 83 2 208 1 105 6 85 5 333 6 380 3 335 1 153 1 
87 1 218 1 29 1 134 2 339 1 365 1 3 3 344 2 294 1 94 1 271 1 121 3 348 3 124 1 24 1 352 1 353 4 25 1 305 1 183 1 83 1 85 3 105 2 333 2 380 2 153 1 
87 2 218 1 29 1 134 4 339 1 114 1 365 1 3 4 344 3 294 2 94 2 271 1 121 5 298 1 348 4 124 2 24 1 352 2 353 7 25 1 305 2 183 2 83 1 208 1 85 4 105 4 333 4 380 3 153 1 
200 1 
102 1 123 1 2 1 
102 1 242 1 
102 1 235 1 
123 2 102 3 235 1 310 1 43 1 340 1 
102 1 235 1 340 1 
122 1 102 1 
87 1 156 1 287 1 158 1 231 1 191 1 180 3 249 2 80 1 341 1 138 2 222 1 115 1 332 4 42 6 255 1 155 2 
156 1 87 5 287 2 158 2 191 1 221 4 341 1 34 1 138 15 71 1 343 1 222 1 115 3 368 1 42 31 294 3 227 1 47 1 247 1 276 2 373 1 176 1 124 3 180 13 249 1 80 7 201 1 280 1 305 3 183 4 332 16 255 3 213 1 237 3 155 6 
87 1 156 1 287 1 158 1 191 1 138 3 165 1 222 1 115 1 42 8 247 2 276 4 7 1 373 2 176 1 180 4 249 2 80 1 280 2 332 5 213 2 255 1 155 3 
87 1 156 1 287 1 158 1 191 1 180 3 249 2 80 1 341 1 138 2 222 1 115 1 332 4 42 6 255 1 155 2 
87 1 156 1 287 1 158 1 191 1 180 3 249 2 80 1 341 1 138 2 222 1 115 1 332 4 42 6 255 1 155 2 
314 1 292 1 163 1 37 1 245 1 41 2 229 1 269 1 230 1 48 1 175 1 327 1 50 1 9 1 100 2 81 1 355 1 205 1 102 1 104 1 235 1 210 2 236 2 
314 1 32 1 292 1 195 1 163 1 166 1 245 1 41 1 73 1 144 1 45 1 76 1 297 1 175 1 23 1 327 1 50 1 278 1 100 1 81 1 355 1 203 1 306 2 62 1 210 1 236 1 
314 1 292 2 195 1 163 1 166 1 245 2 41 1 73 1 144 1 45 1 76 1 297 1 175 1 23 1 327 1 50 1 278 1 100 1 81 1 355 1 232 1 203 1 251 1 306 2 282 1 377 1 62 1 210 1 236 1 186 1 
314 1 315 1 32 1 292 3 195 1 163 1 166 1 245 3 41 1 144 1 45 1 230 1 76 1 297 1 175 1 23 1 327 1 50 1 278 1 100 1 81 1 355 1 232 1 251 1 306 2 282 1 377 2 62 1 210 1 236 1 
314 1 315 1 32 1 292 2 163 1 245 2 41 1 144 1 45 1 76 1 297 1 23 1 327 1 50 1 278 1 100 1 81 1 232 1 251 1 306 2 282 1 377 2 62 1 210 1 236 1 
130 1 
29 1 241 1 31 1 342 1 36 1 3 5 40 1 145 1 46 3 97 1 48 1 348 5 49 1 50 2 51 6 353 2 202 2 357 2 205 2 102 1 105 2 108 1 157 1 217 2 218 1 14 2 111 1 260 2 314 1 162 1 262 1 261 1 316 4 15 2 69 1 163 1 116 1 369 1 228 2 74 1 229 1 173 1 271 1 121 2 325 1 327 2 81 2 25 1 279 1 83 1 184 1 235 1 85 2 380 2 286 1 
241 1 111 1 162 1 262 1 261 1 316 2 69 1 3 3 116 1 40 1 145 1 173 1 46 1 97 1 348 3 49 1 325 1 51 2 374 1 202 1 279 1 286 1 
241 1 111 1 162 1 262 1 261 1 316 3 69 1 3 3 116 1 40 1 228 1 145 1 173 1 46 1 271 1 97 1 348 3 49 1 325 1 51 1 374 1 279 1 85 1 286 1 
217 1 241 1 111 1 162 1 262 1 261 1 316 3 69 1 3 3 116 1 40 1 228 1 145 1 46 1 173 1 271 1 97 1 348 3 49 1 325 1 51 2 374 1 202 1 279 1 85 1 286 1 
241 1 29 1 342 1 36 1 3 5 40 1 145 1 46 3 295 1 97 1 348 5 49 1 51 7 202 4 303 1 101 1 357 2 105 1 217 4 218 1 111 1 14 2 260 2 162 1 316 6 261 1 262 1 15 2 69 1 116 1 228 4 74 1 323 1 173 1 271 5 121 1 325 1 125 1 374 1 25 1 279 1 85 5 380 2 286 1 
241 1 29 1 342 1 36 1 3 4 40 1 145 1 46 2 97 1 348 4 49 1 51 4 353 2 202 2 357 2 105 1 217 2 218 1 111 1 14 2 260 2 162 1 316 4 261 1 262 1 15 2 69 1 116 1 74 1 228 2 173 1 121 1 271 1 325 1 25 1 279 1 184 1 85 2 380 2 286 1 
217 2 241 1 29 1 218 1 14 2 111 1 260 2 162 1 262 1 261 1 316 4 15 2 69 1 342 1 36 1 3 4 116 1 40 1 228 2 74 1 323 1 145 1 46 2 173 1 271 1 121 1 97 1 348 4 49 1 325 1 51 4 202 2 25 1 303 1 279 1 357 2 101 1 85 1 105 1 380 2 286 1 
217 2 241 1 29 1 218 1 14 2 111 1 260 2 162 1 262 1 261 1 316 4 15 2 69 1 342 1 36 1 3 4 116 1 40 1 228 2 74 1 323 1 145 1 46 2 173 1 271 1 121 1 97 1 348 4 49 1 325 1 51 4 202 2 25 1 303 1 279 1 357 2 101 1 85 1 105 1 380 2 286 1 
217 2 241 1 29 1 218 1 14 2 111 1 260 2 162 1 262 1 261 1 316 4 69 1 342 1 196 1 3 4 116 1 40 1 228 2 74 1 145 1 46 2 173 1 271 1 121 1 97 1 348 4 49 1 325 1 8 2 51 4 353 2 181 1 202 2 354 2 25 1 303 1 279 1 85 1 105 1 26 1 286 1 
217 1 241 2 312 1 112 1 111 1 89 1 162 1 262 1 261 1 316 3 263 1 69 1 3 2 116 2 40 1 246 1 228 1 145 1 173 2 271 1 295 1 96 1 97 2 348 2 49 1 325 1 51 1 53 1 202 1 279 1 85 1 286 1 
217 1 241 2 312 1 112 1 111 1 89 1 162 1 262 1 261 1 316 3 263 1 69 1 3 2 116 2 40 1 246 1 228 1 145 1 173 2 271 1 295 1 96 1 97 2 348 2 49 1 325 1 51 1 53 1 202 1 279 1 85 1 286 1 
217 2 218 1 29 1 241 1 14 2 111 1 260 2 162 1 262 1 261 1 316 4 69 1 342 1 3 4 116 1 40 1 228 2 74 1 145 1 46 2 173 1 271 1 121 1 97 1 348 4 49 1 325 1 8 2 51 4 353 2 202 2 354 2 25 1 279 1 184 1 85 1 105 1 26 1 286 1 
28 1 241 1 110 2 314 2 263 1 32 1 163 2 138 1 168 1 246 1 346 1 42 2 229 1 173 1 97 1 247 2 77 1 276 4 48 1 301 1 373 2 327 8 50 7 149 1 81 8 280 2 102 3 205 2 11 1 60 1 253 2 332 1 235 2 13 1 107 1 213 2 186 1 256 1 132 2 
87 1 241 1 88 1 110 1 263 1 138 2 267 1 246 1 42 3 294 1 171 1 172 1 173 1 96 1 97 1 247 1 276 2 373 1 124 1 180 1 280 1 305 1 183 1 332 1 152 1 209 1 213 1 132 1 155 1 
156 1 87 1 110 1 191 1 2 1 138 2 222 1 115 1 168 1 42 5 171 1 247 1 273 2 276 2 373 1 180 2 249 1 280 1 332 3 152 1 209 1 213 1 255 1 132 1 155 2 
109 1 87 2 27 1 110 2 221 3 34 1 138 6 42 14 294 2 171 11 172 1 324 1 273 1 77 1 247 2 276 4 373 2 124 1 180 2 80 1 149 1 201 1 280 2 305 2 307 1 183 1 332 8 209 11 152 4 213 2 237 3 132 1 155 1 
216 1 259 1 241 2 110 1 314 1 263 1 340 1 163 1 138 1 246 1 170 1 42 2 172 1 173 1 95 1 97 2 273 1 247 1 77 1 276 2 373 1 178 1 327 1 50 1 351 1 149 1 81 1 280 1 102 1 205 1 332 1 235 1 309 1 378 1 152 1 213 1 256 1 132 1 
87 3 241 3 190 2 191 1 32 1 243 2 340 2 138 9 246 1 42 19 294 2 95 1 97 3 296 2 247 3 50 3 249 1 149 1 305 2 205 1 102 2 309 2 209 7 152 7 63 1 255 1 213 3 256 1 155 4 156 1 215 2 216 2 313 1 110 3 314 2 263 1 163 2 222 1 115 1 72 1 171 7 172 1 173 1 273 2 77 1 276 6 373 3 327 3 179 2 124 2 180 8 80 4 81 3 280 3 183 2 332 10 235 2 378 2 132 3 
87 1 247 1 276 2 110 1 373 1 180 1 80 1 280 1 305 1 168 1 150 1 332 2 42 2 152 1 171 1 209 1 213 1 132 1 
247 1 276 2 110 1 373 1 124 1 180 1 220 1 138 2 280 1 168 1 183 1 42 2 152 1 171 1 209 1 213 1 132 1 155 1 
87 1 110 1 138 2 168 1 42 4 294 1 171 2 247 1 276 2 373 1 124 1 180 2 80 1 280 1 305 1 183 1 332 2 209 2 152 2 213 1 132 1 155 1 
87 1 247 1 276 2 110 1 373 1 180 1 80 1 280 1 305 1 150 1 332 2 42 2 152 1 171 1 209 1 13 1 213 1 132 1 
247 1 276 2 110 1 373 1 124 1 180 1 220 1 138 2 280 1 183 1 42 2 152 1 171 1 209 1 13 1 213 1 132 1 155 1 
87 1 110 1 138 2 42 4 294 1 171 2 247 1 276 2 373 1 124 1 180 2 80 1 280 1 305 1 183 1 332 2 209 2 152 2 13 1 213 1 132 1 155 1 
87 1 110 1 138 2 42 4 294 1 171 2 247 1 276 2 373 1 124 1 180 2 80 1 280 1 305 1 183 1 332 2 209 2 152 2 213 1 132 1 155 1 
216 1 241 1 110 1 314 1 340 1 163 1 138 1 42 2 97 1 273 1 247 1 77 1 276 2 373 1 179 1 327 1 50 1 149 1 81 1 280 1 205 1 102 1 332 1 235 1 309 1 378 1 213 1 132 1 
216 1 241 1 110 1 314 1 340 1 163 1 138 1 139 1 38 1 42 2 97 1 273 1 247 1 77 1 276 2 373 1 327 1 50 1 149 1 81 1 280 1 205 1 102 1 332 1 235 1 361 1 213 1 132 1 
87 1 110 1 138 2 42 4 294 1 171 2 172 1 247 1 276 2 373 1 124 1 180 2 80 1 280 1 305 1 183 1 332 2 209 2 152 2 213 1 132 1 155 1 
87 1 215 1 216 1 241 1 110 1 314 1 340 1 138 2 163 1 42 4 294 1 171 2 97 1 247 1 276 2 373 1 124 1 179 1 327 1 50 1 180 2 80 1 81 1 280 1 305 1 183 1 102 1 332 2 309 1 235 1 378 1 152 2 209 2 213 1 186 1 132 1 155 1 
87 1 241 1 88 1 110 1 338 1 263 1 138 1 246 1 42 3 294 1 171 1 172 1 173 1 96 1 97 1 247 1 276 2 373 1 124 1 180 1 80 1 280 1 305 1 183 1 332 2 209 1 152 1 213 1 132 1 
258 4 87 4 288 1 219 1 221 4 90 1 34 2 138 16 198 1 320 1 4 1 42 30 294 4 322 1 5 1 247 2 174 2 276 4 7 1 373 2 124 4 180 7 80 3 201 2 280 2 233 1 305 4 183 4 332 14 213 2 237 2 155 4 
258 2 87 1 288 1 219 1 221 1 34 1 138 5 198 2 320 2 42 10 294 1 322 1 247 1 276 2 174 1 7 1 373 1 124 1 280 1 305 1 183 1 332 5 213 1 237 1 
258 4 87 3 288 1 219 1 221 5 90 1 34 3 138 15 198 2 320 1 4 1 42 28 294 3 322 1 5 1 247 2 174 1 276 4 7 1 373 2 124 3 180 4 80 2 201 2 10 1 280 2 305 3 183 3 332 13 213 2 237 3 155 2 
258 4 87 3 288 1 219 1 221 5 90 1 34 3 138 15 198 2 320 1 4 1 42 28 294 3 322 1 5 1 247 2 174 1 276 4 7 1 373 2 124 3 180 5 80 2 201 2 10 1 280 2 305 3 183 3 332 13 213 2 237 3 155 3 
156 3 258 4 109 1 87 6 288 1 191 3 219 1 221 3 90 1 34 2 138 16 222 3 115 3 198 1 320 1 4 1 42 38 294 3 322 1 247 1 174 1 276 2 7 1 373 1 124 3 180 9 249 3 80 3 201 1 280 1 305 3 183 3 332 22 255 3 213 1 237 3 155 6 
70 1 199 1 240 1 266 1 133 1 289 1 161 1 151 1 363 1 238 1 
159 1 358 1 
70 1 266 1 133 1 289 1 135 1 151 1 328 1 193 1 238 1 
199 1 274 1 240 1 348 1 133 1 289 1 161 1 277 1 127 1 70 1 3 1 266 1 244 2 254 1 85 1 151 1 347 1 238 1 
199 1 274 1 240 1 348 1 133 1 289 1 161 1 277 1 127 1 70 1 3 1 266 1 244 2 254 1 85 1 151 1 347 1 238 1 
199 1 274 1 240 1 348 1 133 1 289 1 161 1 277 1 127 1 70 1 3 1 266 1 244 2 254 1 85 1 151 1 347 1 238 1 
239 1 131 1 99 1 
239 1 131 1 99 1 
103 1 290 1 
239 1 103 1 290 1 
272 1 64 1 
241 2 133 1 159 1 289 1 263 2 317 1 70 1 167 1 3 1 266 1 244 1 344 1 169 1 246 2 173 2 97 2 273 1 274 1 272 1 348 1 277 1 352 1 55 1 358 1 151 1 64 1 238 1 
131 1 99 1 
239 1 103 1 290 1 
241 2 110 1 314 1 68 1 163 1 138 1 117 1 42 2 172 1 173 2 97 2 247 1 77 1 276 2 301 1 373 1 146 1 327 2 50 2 149 1 81 2 129 1 280 1 102 1 11 1 253 2 332 1 235 1 381 1 213 1 132 1 
48 1 314 1 50 1 327 1 9 1 163 1 81 1 102 1 205 1 82 1 235 1 321 1 229 1 236 1 
76 1 297 1 23 1 50 1 327 1 314 1 278 1 32 1 194 1 195 1 163 1 81 1 306 2 82 1 144 1 185 1 45 1 236 1 
76 1 297 1 23 1 314 1 50 2 327 2 278 1 32 1 194 1 195 1 163 1 81 2 306 2 82 1 144 1 185 1 45 1 236 1 186 1 
76 1 297 1 23 1 50 1 327 1 314 1 278 1 32 1 194 1 137 1 195 1 81 1 163 1 306 2 144 1 45 1 236 1 
349 1 
29 1 218 1 25 1 105 1 85 1 93 1 74 1 65 1 271 1 121 1 
296 1 87 2 134 5 124 2 375 2 353 10 305 2 183 2 294 2 105 5 85 5 333 5 380 5 44 1 121 5 
348 1 3 1 85 1 51 1 46 1 271 1 
157 1 218 2 29 2 314 1 163 1 225 2 3 3 142 1 369 1 74 1 229 1 46 2 121 2 348 3 48 1 300 1 327 4 50 4 126 1 51 4 81 4 25 2 102 1 205 2 83 2 235 1 105 2 108 2 153 1 
85 1 105 1 93 1 2 1 65 1 121 1 271 1 
218 1 29 1 15 1 36 1 3 1 74 1 46 1 121 1 271 1 348 1 51 1 353 1 25 1 357 1 105 1 85 2 380 1 
87 2 29 4 242 3 134 6 340 3 3 5 92 2 294 2 93 1 43 1 44 2 46 3 296 2 348 5 248 1 50 3 51 5 353 12 56 1 252 2 305 2 102 10 205 1 105 8 211 2 108 1 65 1 218 4 314 3 261 2 264 2 163 4 225 1 226 1 74 4 271 2 121 9 122 2 123 2 372 2 327 3 124 2 126 1 79 2 375 2 81 3 25 4 183 2 83 2 235 3 85 8 333 6 380 6 186 1 
87 2 218 2 29 2 134 5 192 1 221 1 34 1 197 1 3 1 4 1 294 2 74 2 44 1 46 1 121 8 271 2 348 1 350 1 124 2 51 1 375 2 353 6 25 2 58 1 305 2 183 2 83 1 379 1 85 5 105 5 333 5 380 3 108 1 237 1 187 1 
71 1 25 1 101 1 115 1 348 1 3 1 218 1 29 1 105 1 74 1 375 1 255 1 121 1 
216 1 241 3 312 1 110 1 314 1 263 2 340 1 138 1 163 1 246 2 42 1 173 2 97 3 96 2 273 1 77 1 247 1 371 1 276 2 373 1 327 1 50 1 179 1 81 1 280 1 205 1 102 1 309 1 235 1 378 1 213 1 132 1 
29 1 218 1 134 2 249 1 353 4 25 1 83 1 105 2 85 4 333 2 74 1 380 2 108 1 121 1 271 2 
70 1 199 1 189 1 151 1 64 1 
70 1 223 1 151 1 
70 1 223 1 151 1 
70 1 223 1 151 1 
70 1 91 1 151 1 
70 1 91 1 151 1 
70 1 91 1 151 1 
70 1 151 1 
266 1 238 1 
156 1 87 2 247 1 276 2 7 1 373 1 180 4 80 2 138 3 71 1 280 1 115 1 183 1 332 4 42 7 213 1 255 1 155 2 
87 1 247 1 276 2 7 1 373 1 180 1 80 1 280 1 305 1 332 2 42 2 213 1 
87 1 247 1 276 2 7 1 373 1 124 1 180 2 80 1 138 2 280 1 305 1 183 1 332 2 42 4 294 1 213 1 155 1 
247 1 276 2 7 1 373 1 180 1 138 1 280 1 115 1 332 1 42 2 213 1 255 1 155 1 
156 1 87 4 191 1 113 1 221 4 34 1 138 11 222 1 17 1 115 2 368 1 42 21 227 1 294 3 5 1 47 1 247 5 276 10 7 1 373 5 176 2 124 3 180 10 80 5 201 1 280 5 305 3 183 3 332 10 255 2 213 5 237 3 155 5 
87 1 156 1 191 1 221 1 34 1 138 3 222 1 115 1 4 1 42 7 247 1 276 2 7 1 373 1 180 2 249 1 280 1 332 4 237 1 213 1 255 1 155 2 
156 1 87 2 191 1 221 2 34 1 138 4 222 1 17 1 115 1 4 1 42 10 294 1 247 2 276 4 7 1 373 2 180 3 249 1 80 1 201 1 280 2 305 1 332 6 255 1 213 2 237 1 155 2 
156 1 87 3 191 1 192 1 221 1 34 1 138 9 222 1 17 1 197 1 115 1 4 1 42 18 294 2 247 3 276 6 7 1 373 3 176 1 124 2 180 4 249 1 80 1 280 3 58 1 305 2 183 2 332 9 379 1 255 1 237 1 213 3 155 3 
156 1 87 3 191 1 192 1 221 1 34 1 138 6 222 1 17 1 197 1 115 1 4 1 42 16 294 2 247 3 276 6 7 1 373 3 176 1 124 1 180 5 249 1 80 2 280 3 58 1 305 2 183 1 332 10 379 1 255 1 237 1 213 3 155 3 
87 1 156 1 191 1 221 1 34 1 138 3 222 1 115 1 4 1 42 7 247 1 276 2 7 1 373 1 180 2 249 1 280 1 332 4 237 1 213 1 255 1 155 2 
87 2 192 1 221 1 34 1 138 6 197 1 4 1 42 12 294 2 247 1 276 2 7 1 373 1 124 2 180 2 80 1 280 1 58 1 305 2 183 2 332 6 379 1 237 1 213 1 155 1 
156 1 87 3 191 1 192 1 221 1 34 1 138 7 222 1 17 1 197 1 115 1 4 1 42 17 294 2 247 4 276 8 7 1 373 4 176 2 124 1 180 5 249 1 80 2 280 4 58 1 305 2 183 1 332 10 379 1 255 1 213 4 237 1 155 3 
87 3 192 1 221 1 34 1 138 7 197 1 4 1 42 16 294 3 5 1 247 4 276 8 7 1 373 4 176 2 124 2 180 6 80 3 280 4 58 1 305 3 183 2 332 9 379 1 213 4 237 1 155 3 
191 1 180 4 80 2 138 2 222 2 115 2 332 2 42 4 255 2 155 2 
156 1 87 3 191 1 192 1 221 1 34 1 138 7 222 1 197 1 115 1 4 1 42 17 294 2 5 1 247 4 276 8 7 1 373 4 176 2 124 1 180 4 249 1 80 1 280 4 58 1 305 2 183 1 332 10 379 1 255 1 213 4 237 1 155 3 
222 1 280 2 247 2 115 1 276 4 373 2 176 1 191 1 180 2 255 1 213 2 80 1 155 1 
87 1 156 1 222 1 115 1 332 3 42 5 191 1 180 2 2 1 249 1 255 1 138 2 155 2 
87 1 247 1 276 2 373 1 124 1 180 2 80 1 138 2 280 1 17 1 305 1 183 1 332 2 42 4 294 1 213 1 155 1 
87 1 124 1 180 2 221 2 80 1 34 1 201 1 138 4 305 1 183 1 332 3 42 7 294 1 237 1 155 1 
156 1 87 3 109 1 191 1 113 1 221 2 138 9 222 1 115 2 42 18 294 2 324 1 247 2 276 4 373 2 176 2 124 2 180 9 249 1 80 4 201 1 280 2 305 2 183 2 332 9 255 2 237 2 213 2 155 5 
42 1 221 1 138 1 
332 1 42 1 237 1 
296 1 87 1 247 1 276 2 373 1 124 1 180 3 80 1 138 3 280 1 17 1 305 1 183 1 332 3 42 6 294 1 213 1 155 2 
87 2 192 1 221 1 34 1 138 6 197 1 4 1 42 12 294 2 247 1 276 2 7 1 373 1 124 2 180 2 80 1 280 1 58 1 305 2 183 2 332 6 379 1 237 1 213 1 155 1 
87 1 156 1 332 1 42 1 
247 1 276 2 373 1 176 1 191 1 180 2 113 1 80 1 138 1 222 1 280 1 115 1 42 1 255 1 213 1 155 1 
97 1 273 1 241 1 49 1 207 1 214 1 173 1 
97 1 0 1 273 1 241 1 49 1 177 1 337 1 207 1 61 1 84 1 214 1 173 1 
48 1 50 4 327 4 314 1 164 1 163 1 81 4 205 1 102 1 235 1 229 1 186 1 370 1 
313 1 50 2 327 2 314 1 340 1 81 2 293 1 364 1 163 2 225 1 141 1 102 1 235 1 75 1 
76 1 306 1 205 1 144 1 314 1 327 1 50 1 278 1 163 1 81 1 
102 1 11 1 235 1 117 1 314 1 327 2 50 2 32 1 186 1 163 1 81 2 
28 1 48 1 50 4 327 5 314 2 164 1 81 5 163 2 225 1 205 1 102 3 11 1 60 1 235 2 229 1 186 1 
48 1 50 4 327 5 314 2 148 1 164 1 81 5 163 2 225 1 205 1 102 3 11 1 60 1 235 2 229 1 186 1 
102 1 48 1 205 1 235 1 314 1 327 1 50 1 2 1 229 1 163 1 81 1 
97 2 273 1 216 1 241 2 50 1 327 1 314 1 263 1 340 1 163 1 81 1 102 1 205 1 246 1 235 1 309 1 256 1 173 1 
216 1 241 2 314 1 262 1 263 2 264 1 340 2 163 1 225 1 116 1 246 1 145 1 173 2 97 2 122 1 273 1 327 1 50 1 81 1 102 3 309 1 235 2 256 1 
216 1 241 2 314 1 262 1 263 2 264 1 340 2 163 1 139 1 225 1 116 1 246 1 145 1 173 2 370 1 97 2 122 1 273 1 327 2 50 2 81 2 102 3 235 2 256 1 
242 1 314 1 261 1 264 1 340 1 163 1 225 1 3 2 18 1 118 1 370 1 271 1 122 1 123 1 348 2 327 3 50 3 51 1 81 3 102 4 205 1 235 1 85 1 
122 1 348 2 123 1 372 1 242 1 50 3 327 3 314 1 51 1 261 1 264 1 340 1 163 1 81 3 225 1 205 1 3 2 102 4 235 1 85 1 370 1 271 1 
346 1 314 1 327 1 50 1 163 1 81 1 
28 1 50 6 327 7 314 2 52 1 32 1 340 1 81 7 163 3 141 1 205 2 102 3 11 1 253 1 60 1 346 1 235 2 107 1 43 1 75 1 186 1 
87 1 156 1 215 1 216 1 241 2 110 2 191 1 314 1 263 1 243 1 340 1 138 2 163 1 222 1 115 1 246 1 42 5 171 1 172 1 173 1 97 2 273 2 247 2 276 4 373 2 50 1 327 1 179 1 180 2 249 1 81 1 280 2 102 1 332 3 235 1 309 1 378 1 152 1 209 1 255 1 213 2 381 1 256 1 186 1 132 2 155 2 
218 2 29 2 242 1 261 1 3 3 344 1 92 1 93 1 74 2 46 1 121 1 271 1 348 3 123 1 372 1 50 1 327 1 126 1 79 1 51 2 81 1 25 2 205 1 102 2 85 1 105 1 211 1 65 1 
123 1 248 1 50 2 327 2 314 1 340 1 81 2 163 2 102 2 346 1 235 1 43 1 186 1 
97 2 273 1 216 1 241 2 50 1 327 1 314 1 263 1 340 1 163 1 81 1 139 1 102 1 205 1 246 1 235 1 256 1 173 1 
50 1 327 1 314 1 52 1 340 1 81 1 163 2 225 1 141 1 102 1 235 1 43 1 75 1 
273 1 206 1 283 1 78 1 54 1 
273 1 348 2 111 1 78 2 261 1 262 1 54 2 116 1 3 2 234 1 319 1 344 1 283 1 206 2 85 1 145 1 154 1 120 1 271 1 
97 1 129 1 241 1 146 1 283 1 206 1 68 1 54 1 173 1 
283 1 120 1 154 1 
355 1 232 1 203 1 251 1 245 1 175 1 282 1 292 1 
175 1 336 1 136 1 147 1 291 1 292 4 355 1 232 2 251 2 367 1 318 1 245 4 377 2 282 3 
275 1 175 1 292 2 355 1 203 1 182 1 232 1 251 1 245 2 282 1 377 1 143 1 
355 1 232 1 203 1 251 1 367 2 245 3 175 1 282 1 147 2 291 1 250 1 292 3 
376 1 282 2 119 2 67 1 
355 1 224 1 203 1 245 1 175 1 292 1 
355 1 232 1 203 1 251 1 245 2 175 1 282 1 377 1 292 2 257 1 
304 1 
355 1 232 1 203 1 251 1 245 1 175 1 282 1 292 1 
232 1 251 1 282 1 2 1 
355 1 232 1 251 1 245 1 175 1 282 1 292 1 
245 1 210 1 100 1 
175 1 147 1 291 1 292 3 355 1 203 1 232 1 251 1 367 2 245 3 281 1 282 1 
355 1 232 1 251 1 245 2 175 1 282 1 377 1 12 1 292 2 
355 1 203 1 306 1 245 1 175 1 282 1 336 1 144 1 212 1 45 1 292 1 
355 1 203 1 251 1 245 1 175 1 282 1 292 1 
355 1 232 1 203 1 251 2 245 1 175 1 292 1 
188 1 175 2 292 2 33 1 128 1 355 2 203 1 251 1 245 2 282 1 
175 1 336 1 292 3 355 1 232 1 203 1 251 1 318 1 245 3 377 2 282 2 268 1 257 1 
175 1 23 1 278 1 292 2 355 1 232 1 203 1 251 1 306 2 245 2 282 1 377 1 284 1 144 1 45 1 
311 1 175 2 336 1 292 4 355 2 232 1 203 1 251 1 318 1 245 4 377 2 282 2 12 1 
175 1 292 3 355 1 203 1 232 1 251 1 367 1 245 3 377 1 282 1 257 1 
318 1 282 1 336 1 136 1 
251 1 282 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (8,210,263) 336 40 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (8,210,263) 336 40 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (8,210,263) 336 (276,284,318) 97 17 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (8,210,263) 336 40 143 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (8,210,263) 336 40 143 98 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 4 262 1 113 1 70 2 44 2 289 1 223 1 245 1 78 9 271 9 321 2 79 3 347 1 348 1 81 1 144 2 82 5 18 6 100 2 20 1 60 1 176 1 41 1 335 1 177 2 178 2 359 1 236 1 
67 4 262 1 113 1 44 2 70 2 289 1 223 1 245 1 78 9 271 9 321 2 79 3 347 1 348 1 81 1 144 2 82 5 18 6 100 2 20 1 60 1 176 1 41 1 335 1 177 2 178 2 359 1 236 1 
67 5 262 1 113 1 44 2 70 2 289 1 223 1 245 1 78 10 271 10 321 2 79 4 347 1 348 1 81 1 144 2 82 6 18 7 100 2 20 1 60 1 176 1 41 1 335 1 177 2 178 2 359 1 236 1 
67 3 262 1 113 1 44 2 70 2 223 1 245 1 78 7 271 7 321 2 79 2 347 1 348 1 81 1 144 2 82 4 18 4 100 2 20 1 60 1 176 1 41 1 335 1 177 2 178 1 359 1 236 1 
67 2 347 1 113 1 81 1 44 1 144 1 82 3 18 3 100 1 289 1 60 1 177 1 245 1 78 4 178 2 271 4 79 1 321 1 
347 1 262 1 81 1 70 1 144 1 82 1 100 1 117 1 105 1 244 1 177 1 245 1 78 2 271 2 359 1 321 1 
67 1 347 1 81 1 70 1 144 2 82 2 18 1 100 2 335 1 245 1 78 3 271 3 79 1 
67 4 113 1 70 1 44 1 289 1 223 1 245 1 78 9 271 9 79 3 321 1 347 1 348 1 81 1 80 1 144 2 82 5 18 7 100 2 60 1 107 1 335 1 177 1 178 2 
67 4 113 1 70 1 44 1 289 1 223 1 245 1 78 9 271 9 79 3 321 1 347 1 348 1 81 1 80 1 144 2 82 5 18 7 100 2 60 1 107 1 335 1 177 1 178 2 
282 1 308 1 250 1 
282 1 286 1 288 2 
210 2 186 2 8 2 263 2 156 1 10 2 254 2 208 1 
283 1 263 2 156 1 267 1 4 1 220 2 8 2 138 1 164 1 269 1 202 1 10 3 77 1 292 1 53 2 52 1 247 1 35 1 186 2 188 1 327 1 190 1 58 1 208 1 104 2 210 3 106 1 333 1 252 1 109 1 254 2 62 2 128 1 85 1 214 1 356 2 235 1 
210 1 186 1 8 1 263 1 142 1 16 1 10 1 254 1 135 1 208 1 
8 1 276 1 336 1 
282 1 186 1 263 1 123 1 284 1 16 1 312 2 250 1 210 1 8 1 10 1 254 1 318 2 34 1 183 1 
65 1 227 1 318 1 312 1 307 1 
65 1 96 1 282 1 294 1 318 2 312 2 307 1 250 1 
65 1 318 1 312 1 
186 1 142 1 263 1 16 1 135 1 312 1 208 1 210 1 8 1 10 1 318 1 254 1 291 1 307 1 
282 1 
65 1 96 1 282 1 318 2 313 1 312 2 307 1 250 1 
96 1 259 1 65 2 282 1 68 1 55 1 15 1 89 1 298 2 312 5 250 1 302 1 93 1 94 2 318 5 95 2 196 1 154 1 307 2 
35 1 186 1 263 1 327 1 206 1 350 1 220 1 210 2 138 1 8 1 269 1 164 1 252 1 109 1 42 1 10 2 62 1 85 1 214 1 356 1 
308 1 156 1 
186 1 263 1 156 2 187 1 230 1 210 2 8 2 10 2 254 1 
316 1 42 1 147 1 
35 1 156 1 327 1 220 1 341 1 210 1 138 1 252 1 164 1 269 1 109 1 10 1 62 1 85 1 214 1 356 1 
186 4 263 4 156 1 187 1 206 2 350 1 209 1 210 4 40 1 8 5 10 4 254 1 336 1 272 1 
210 2 186 2 8 2 263 2 108 1 16 1 10 2 135 1 
210 3 186 3 8 3 263 3 156 1 10 3 254 1 206 1 
210 1 186 1 8 1 263 1 16 1 10 1 135 1 
210 1 186 1 8 1 263 1 16 1 10 1 187 1 254 1 230 1 
263 3 156 1 284 1 4 1 312 1 220 1 138 1 8 3 269 1 164 1 202 1 10 4 318 1 77 1 34 1 53 1 52 1 183 1 247 1 35 1 186 3 123 1 187 1 16 1 327 1 206 1 350 1 58 1 38 1 208 1 104 2 210 4 106 1 333 1 252 1 109 1 254 2 62 1 128 1 85 1 214 1 355 1 356 1 235 1 
210 1 186 1 40 1 8 2 263 1 10 1 206 1 336 1 
282 1 186 3 263 3 123 1 284 1 187 1 16 1 206 2 350 1 312 1 38 1 210 3 8 3 10 3 254 1 318 1 34 1 281 1 183 1 
186 2 263 2 187 1 206 1 210 2 316 1 8 2 10 2 42 1 254 1 
35 1 156 1 327 1 220 1 210 1 138 1 252 1 164 1 269 1 109 1 10 1 62 1 85 1 214 1 356 1 
35 1 171 1 156 1 327 1 299 1 220 1 210 1 252 1 164 1 269 1 109 1 10 1 62 1 85 1 356 1 
66 1 267 2 3 1 4 1 316 2 224 1 181 1 201 1 202 1 77 2 168 1 53 4 247 1 248 1 125 1 147 2 353 1 104 2 333 1 42 2 128 1 235 1 88 1 215 1 
210 1 186 1 8 1 263 1 108 1 16 1 10 1 34 1 
13 1 161 1 
13 1 161 1 
153 1 340 1 
153 1 340 1 
153 1 340 1 
13 1 199 1 161 1 
0 1 13 1 161 1 
13 2 153 1 240 1 340 1 161 2 203 1 
13 1 199 1 161 1 
13 1 199 1 161 1 
354 1 13 1 161 1 
354 1 13 1 161 1 
354 1 13 1 161 1 
0 1 13 1 186 2 263 2 156 1 204 1 115 1 207 1 90 1 351 1 312 1 161 1 148 1 101 1 210 2 150 1 331 1 118 1 8 2 73 1 10 2 318 1 345 1 75 1 
282 1 261 2 13 2 204 2 45 1 297 1 115 2 189 1 240 1 312 2 329 1 161 2 148 2 101 3 118 2 331 1 318 2 255 1 233 1 
44 1 177 1 321 1 
244 1 177 1 321 1 
211 1 44 2 244 1 239 1 177 3 301 1 
258 1 44 1 244 1 239 1 177 2 301 1 
44 1 244 1 239 2 177 2 301 1 
66 1 65 1 282 2 286 1 89 3 90 1 3 1 312 5 288 3 290 2 30 1 93 1 94 1 318 5 95 1 168 1 96 1 122 1 248 1 15 2 207 1 298 1 146 1 84 1 174 1 250 1 192 2 151 2 150 1 110 1 357 1 307 4 
66 3 65 6 282 5 264 1 286 3 89 8 3 3 312 9 288 9 30 2 93 1 94 2 318 9 95 2 168 3 96 1 296 1 248 3 227 5 15 6 298 2 37 1 352 1 229 1 84 1 302 1 250 1 192 6 126 5 102 1 151 6 150 4 110 3 357 2 307 7 
66 1 282 3 286 2 89 3 3 1 312 3 288 4 30 1 290 1 94 1 318 3 95 1 168 1 122 1 248 1 15 2 298 1 146 1 250 1 302 1 192 2 150 1 151 2 110 1 357 1 307 2 
66 2 282 4 286 3 89 5 3 2 312 4 288 7 30 1 290 2 94 1 318 4 95 1 168 2 122 1 296 1 248 2 15 4 298 1 37 1 146 1 352 1 250 1 302 1 192 4 151 4 150 2 110 2 357 1 307 3 
47 1 35 1 308 1 
35 1 167 1 
193 1 
35 1 327 1 85 1 
35 1 173 1 
35 1 85 1 
47 2 35 3 185 1 303 1 327 1 85 1 
66 1 275 1 14 1 349 2 267 4 125 3 242 1 222 1 342 1 152 1 344 1 305 1 77 3 64 1 168 1 88 2 53 7 
66 1 275 1 14 1 349 2 267 4 125 3 242 1 222 1 342 1 152 1 344 1 305 1 77 3 64 1 168 1 88 2 53 7 
66 1 275 1 14 1 349 2 267 4 125 3 242 1 222 1 342 1 152 1 317 1 344 1 305 1 77 3 64 1 168 1 88 2 53 7 
66 3 267 14 3 2 242 1 222 4 342 1 344 2 202 1 77 12 51 1 168 3 53 26 274 1 275 2 170 1 14 1 248 2 172 1 325 3 349 3 278 3 83 1 125 8 104 2 152 1 333 1 305 2 110 2 128 1 231 1 64 2 88 4 235 1 
66 1 275 1 349 2 267 5 83 1 125 4 242 1 222 1 342 1 104 4 152 1 333 2 344 1 305 1 202 2 63 1 128 2 77 4 64 1 337 1 168 1 88 3 53 9 235 2 
44 1 70 1 157 1 91 1 220 1 71 1 28 1 164 1 74 1 244 1 76 1 245 1 78 2 271 2 321 1 324 1 347 1 81 1 36 1 144 1 82 1 18 1 100 1 211 1 109 1 62 1 177 2 111 1 356 1 232 1 
44 1 70 1 157 1 91 1 5 1 159 1 220 1 71 1 28 1 164 1 74 1 244 1 76 1 245 1 78 3 271 3 321 1 324 1 81 1 56 1 36 1 144 1 82 1 18 2 100 1 211 1 109 1 62 1 177 2 356 1 
70 1 44 1 157 1 91 1 5 1 220 1 28 1 164 1 244 1 76 1 245 1 78 2 271 2 321 1 324 1 81 1 56 1 36 1 82 1 18 2 211 1 109 1 62 1 177 2 356 1 
130 1 35 1 324 2 70 2 144 1 36 2 91 2 159 1 241 1 160 1 220 1 315 1 100 1 164 1 252 1 109 1 62 1 50 1 85 1 43 1 78 1 356 1 271 1 
44 1 70 1 157 1 91 1 5 1 220 1 71 1 28 1 164 1 74 1 244 1 76 1 78 1 271 1 321 1 324 1 347 1 36 1 144 1 100 1 211 1 109 1 62 1 177 2 356 1 232 1 
132 1 
65 2 89 1 312 2 220 2 315 1 163 1 30 1 8 1 164 1 93 1 94 1 318 2 95 1 246 1 96 1 35 1 15 1 276 1 328 1 298 1 97 1 17 1 252 2 61 1 109 1 62 2 85 1 43 1 336 1 356 2 358 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
65 1 96 1 8 1 276 1 318 2 328 1 97 1 336 1 17 1 313 1 312 2 163 1 
276 1 298 1 328 1 97 1 312 1 17 1 163 1 8 1 93 1 94 1 318 1 336 1 95 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
8 1 276 1 318 1 328 1 97 1 336 1 17 1 312 1 163 1 
276 1 298 1 328 1 97 1 312 1 17 1 163 1 8 1 93 1 94 1 318 1 336 1 95 1 
66 1 308 1 156 2 267 3 4 1 242 1 342 1 316 1 181 1 202 1 77 3 168 1 53 6 247 1 275 1 349 1 125 2 147 1 104 2 152 1 333 1 42 1 128 1 64 1 235 1 88 2 
66 2 218 1 156 1 267 8 3 1 4 1 158 1 222 1 316 4 202 2 12 1 77 6 168 1 53 14 247 2 248 2 325 3 278 3 190 1 125 2 58 1 147 11 103 1 104 4 333 2 42 11 110 2 195 1 128 2 231 1 256 1 88 1 235 2 
263 1 156 1 219 1 287 1 267 1 4 1 158 1 200 1 220 1 341 1 316 1 138 1 8 1 269 1 164 1 202 1 10 2 77 1 53 2 35 1 247 1 186 1 327 1 206 1 350 1 190 1 58 1 210 2 104 2 252 1 333 1 109 1 62 1 85 1 128 1 214 1 356 1 235 1 
263 1 266 1 267 10 3 2 4 3 5 1 220 3 222 4 316 7 8 1 138 2 269 2 9 2 10 3 53 20 275 1 186 1 327 2 190 1 58 1 147 7 104 6 149 2 106 2 152 1 333 3 109 2 62 3 110 2 64 1 235 3 66 3 156 2 158 1 242 1 162 1 342 1 164 2 202 3 77 10 168 3 247 3 35 2 248 2 349 1 206 1 350 1 125 8 210 3 251 2 175 2 127 1 252 1 42 7 128 3 85 2 214 2 356 3 88 4 
197 1 309 1 263 1 267 1 4 2 5 1 314 1 220 7 315 1 8 1 181 1 164 2 10 1 202 2 77 1 292 2 53 2 184 1 35 3 247 2 186 1 206 1 57 1 190 1 280 1 58 1 330 1 210 1 104 4 252 2 333 2 109 2 62 8 128 2 85 2 111 1 43 1 356 8 235 2 
66 1 263 1 267 1 3 1 4 1 158 1 116 1 316 1 8 1 202 1 10 1 77 2 168 1 53 3 247 1 186 1 248 1 187 1 125 1 147 1 104 2 210 1 333 1 42 1 254 1 110 1 128 1 88 1 235 1 
66 1 247 1 248 1 267 2 4 1 125 1 147 1 222 1 104 2 316 1 181 1 333 1 201 1 42 1 202 1 128 1 53 2 235 1 
247 1 3 1 4 1 125 1 147 1 104 2 316 1 181 1 333 1 42 1 202 1 128 1 77 2 168 1 88 1 53 2 235 1 215 1 
66 1 267 2 3 1 4 1 222 1 316 2 181 1 202 1 77 2 168 1 53 4 247 1 248 1 125 2 147 2 104 2 333 1 42 2 110 1 128 1 235 1 88 1 
66 1 247 1 248 1 267 2 4 1 125 1 147 1 222 1 330 1 104 2 316 1 333 1 201 1 42 1 202 1 128 1 53 2 235 1 
247 1 3 1 4 1 125 1 147 1 330 1 104 2 316 1 333 1 42 1 202 1 128 1 77 2 168 1 88 1 53 2 235 1 215 1 
66 1 267 2 3 1 4 1 222 1 316 2 202 1 77 2 168 1 53 4 247 1 248 1 125 2 147 2 330 1 104 2 333 1 42 2 110 1 128 1 235 1 88 1 
66 1 267 2 3 1 4 1 222 1 316 2 202 1 77 2 168 1 53 4 247 1 248 1 125 2 147 2 104 2 333 1 42 2 110 1 128 1 235 1 88 1 
156 1 267 1 4 1 220 1 138 1 269 1 164 1 10 1 202 1 77 1 53 2 35 1 247 1 327 1 190 1 58 1 210 1 104 2 106 1 252 1 333 1 109 1 62 1 85 1 128 1 214 1 356 1 235 1 
25 1 156 1 267 1 4 1 220 1 269 1 164 1 10 1 202 1 77 1 53 2 35 1 247 1 171 1 327 1 190 1 299 1 58 1 210 1 104 2 252 1 333 1 109 1 62 1 85 1 128 1 356 1 235 1 
66 1 267 2 3 1 4 1 158 1 222 1 316 2 202 1 77 2 168 1 53 4 247 1 248 1 125 2 147 2 104 2 333 1 42 2 110 1 128 1 235 1 88 1 
66 1 3 1 267 2 4 1 220 1 222 1 316 2 138 1 269 1 164 1 10 1 202 1 77 2 168 1 53 4 35 1 247 1 248 1 327 1 125 2 147 2 210 1 104 2 251 1 106 1 333 1 109 1 42 2 62 1 110 1 85 1 128 1 111 1 214 1 356 1 88 1 235 1 
66 1 263 1 134 1 3 1 267 2 4 1 158 1 222 1 316 1 8 1 202 1 10 1 77 1 168 1 53 3 247 1 186 1 248 1 187 1 125 1 147 1 104 2 210 1 333 1 42 1 254 1 110 1 128 1 235 1 
66 2 155 1 338 1 285 2 3 2 267 7 136 1 222 2 225 1 202 2 77 7 168 2 53 14 248 2 325 1 278 1 125 4 59 2 104 4 333 2 213 1 110 2 128 2 63 1 231 1 88 2 235 2 360 1 257 1 
66 3 155 2 338 1 285 3 238 1 267 13 179 1 3 2 136 1 222 1 29 1 202 2 319 1 77 11 168 2 53 24 293 1 248 3 325 2 278 2 83 1 125 1 19 1 59 1 104 4 333 2 213 2 110 3 128 2 63 1 231 2 235 2 360 1 
66 3 155 2 338 1 285 3 238 1 267 13 179 1 3 3 136 1 222 2 29 1 202 2 120 1 319 1 77 14 168 3 53 27 293 1 248 3 325 3 278 3 125 2 19 1 59 1 104 4 333 2 213 1 110 3 128 2 63 1 231 3 235 2 257 1 360 1 
66 3 155 2 338 1 285 4 238 1 267 15 179 1 3 2 136 1 222 2 29 1 202 3 120 1 319 1 77 13 168 2 53 28 293 1 248 3 325 3 278 3 83 1 125 3 19 1 59 1 104 6 333 3 213 1 110 3 128 3 63 1 231 3 88 1 235 3 257 1 360 1 
66 4 155 1 338 1 285 3 238 1 267 15 179 1 3 3 136 1 242 1 222 2 29 1 342 1 202 1 319 1 77 14 168 4 53 29 293 1 275 1 248 3 349 1 325 2 278 2 125 5 19 1 59 1 104 2 152 1 333 1 213 1 110 3 128 1 63 1 231 2 64 1 88 3 235 1 360 1 
13 1 118 1 204 1 115 1 189 1 240 1 329 1 148 1 161 1 169 1 
0 1 351 1 
72 1 13 1 118 1 204 1 115 1 300 1 191 1 148 1 161 1 
112 1 199 1 
354 1 99 1 203 1 
282 1 261 1 13 1 204 1 45 1 115 1 189 1 240 1 312 1 329 1 161 1 148 1 101 2 331 1 118 1 318 1 255 1 233 1 
282 1 261 1 13 1 204 1 45 1 115 1 189 1 240 1 312 1 329 1 161 1 148 1 101 2 331 1 118 1 318 1 255 1 233 1 
282 1 261 1 13 1 204 1 45 1 115 1 189 1 240 1 312 1 329 1 161 1 148 1 101 2 331 1 118 1 318 1 255 1 233 1 
112 1 199 1 203 1 
112 1 199 1 203 1 
354 1 99 1 
354 1 99 1 203 1 
73 1 345 1 
261 1 0 1 263 2 156 1 45 1 115 1 90 1 312 1 161 1 118 1 8 2 10 2 73 1 318 1 75 1 345 1 13 1 186 2 204 1 207 1 351 1 148 1 101 1 210 2 150 1 307 1 24 1 
131 1 198 1 311 1 267 1 4 1 158 1 314 1 220 2 8 2 164 1 10 2 202 1 77 1 292 2 53 2 35 1 247 1 141 1 57 1 190 1 58 1 210 2 104 2 253 1 333 1 109 1 62 2 85 1 128 1 356 2 235 1 
44 1 5 1 91 1 220 2 28 1 211 1 164 1 109 1 48 1 244 1 74 1 62 2 177 2 11 1 76 1 111 1 356 2 23 1 321 1 
44 1 5 1 91 1 220 1 28 1 211 1 164 1 109 1 244 1 74 1 62 1 177 2 76 1 356 1 23 1 321 1 346 1 
35 1 91 1 241 1 220 1 315 1 164 1 252 1 109 1 62 1 11 1 22 1 85 1 43 1 356 1 
44 1 5 1 91 1 220 1 28 1 211 1 164 1 109 1 48 1 244 1 74 1 62 1 177 2 11 1 76 1 356 1 23 1 321 1 
114 1 
282 1 308 1 68 1 15 1 89 1 154 1 250 1 
65 1 96 1 282 2 26 1 15 1 265 1 89 1 286 1 298 1 312 1 250 1 288 1 93 1 94 1 318 1 95 1 121 1 
1 2 310 2 89 9 3 2 46 1 312 5 220 3 47 2 93 4 9 2 94 4 139 1 318 5 95 4 183 2 96 3 323 2 185 1 15 8 145 1 326 2 327 3 192 6 332 1 151 6 61 1 334 1 109 4 62 3 110 2 111 1 154 1 65 5 66 2 282 8 68 1 286 6 339 2 288 12 30 2 243 2 164 3 167 3 119 2 168 2 35 10 248 2 298 4 173 2 250 2 252 1 85 3 356 3 87 2 
66 2 282 4 89 7 286 3 238 1 179 1 3 2 29 1 288 6 93 1 94 1 319 1 95 1 168 2 293 1 248 2 15 4 325 1 298 1 278 1 250 1 192 5 151 5 110 2 231 1 
66 2 263 1 89 2 135 1 312 1 242 1 8 1 93 1 10 1 94 1 318 1 291 1 33 1 95 1 168 1 323 2 275 1 186 1 142 1 15 2 16 1 277 1 326 1 298 1 208 1 210 1 254 1 64 1 
282 1 68 1 15 1 89 1 298 1 250 1 93 1 94 1 95 1 154 1 
66 2 323 2 282 5 248 2 15 5 326 1 286 5 89 5 3 2 288 10 192 5 151 5 9 1 110 2 168 2 
65 1 96 1 282 1 318 1 312 1 250 1 
65 4 2 1 89 2 46 1 312 3 220 4 315 1 30 2 164 1 93 1 94 2 318 3 95 2 246 1 96 2 35 1 15 2 145 2 298 2 302 1 252 2 61 2 212 1 109 1 62 4 85 1 43 1 358 1 356 4 
263 2 156 1 4 1 220 1 8 2 138 1 164 1 269 1 202 1 10 3 77 1 53 1 52 1 35 1 247 1 186 2 327 1 58 1 208 1 104 2 210 3 106 1 333 1 252 1 109 1 62 1 254 2 128 1 85 1 214 1 356 1 235 1 
282 4 15 2 349 1 286 2 89 1 298 1 288 4 250 2 192 2 151 2 30 1 93 1 61 1 94 1 95 1 
343 1 204 1 148 1 
295 1 204 1 345 1 189 1 148 1 
343 1 204 1 148 1 
343 1 204 1 148 1 
204 1 279 1 148 1 
204 1 279 1 148 1 
204 1 279 1 148 1 
204 1 148 1 
13 1 161 1 
66 1 275 1 349 1 267 4 83 1 125 3 242 1 222 1 104 4 342 1 333 2 152 1 202 2 128 2 77 4 64 1 168 1 53 8 88 2 235 2 
66 1 342 1 275 1 308 1 152 1 349 1 267 3 77 3 125 2 64 1 168 1 53 6 242 1 88 2 
66 1 248 1 3 1 267 2 125 2 268 1 222 1 104 2 333 1 202 1 110 1 128 1 77 2 168 1 88 1 235 1 53 4 
325 1 267 1 278 1 77 1 231 1 53 2 
66 3 218 1 267 11 3 2 242 1 222 4 342 1 202 2 12 1 77 12 168 3 53 23 275 2 248 2 349 1 325 2 278 2 83 2 125 9 103 1 104 4 152 1 333 2 110 2 128 2 64 2 234 1 88 5 235 2 
325 1 77 1 53 1 
267 1 278 1 53 1 
66 1 248 1 267 3 3 1 125 3 268 1 222 1 104 2 333 1 9 1 202 1 110 1 128 1 77 3 168 1 235 1 53 6 88 2 
66 2 238 1 179 1 267 6 3 2 222 1 29 1 202 1 77 6 319 1 168 2 53 12 293 1 248 2 325 1 278 1 125 2 104 2 333 1 110 2 128 1 63 1 231 1 235 1 88 1 
66 1 275 1 267 3 77 3 125 2 64 1 168 1 88 1 53 6 242 1 222 1 
275 1 267 1 83 1 125 2 222 1 104 2 342 1 152 1 333 1 202 1 128 1 77 2 64 1 234 1 88 1 53 3 235 1 
66 2 275 2 267 5 125 5 242 1 222 2 104 2 333 1 202 1 128 1 63 1 77 5 33 1 64 2 168 2 235 1 88 3 53 10 
66 1 248 1 267 2 125 1 222 1 104 2 333 1 202 1 63 1 128 1 235 1 53 2 
66 1 248 1 3 1 267 2 125 2 222 1 104 2 333 1 202 1 110 1 63 1 128 1 77 2 168 1 88 1 235 1 53 4 
275 1 267 1 83 1 125 2 222 1 104 6 333 3 202 3 63 1 128 3 77 2 64 1 234 1 53 3 235 3 88 1 257 1 
66 4 267 14 3 2 242 2 268 1 222 4 342 1 202 5 77 15 51 1 168 4 53 29 274 1 275 3 170 1 248 2 349 1 325 3 278 3 83 2 125 10 104 10 152 1 333 5 110 2 128 5 63 1 231 1 64 3 234 1 235 5 88 6 257 1 
66 1 179 1 267 4 242 1 342 1 202 1 77 4 168 1 53 8 275 1 349 1 325 1 278 1 125 2 104 2 333 1 152 1 128 1 63 1 231 1 64 1 235 1 88 2 
66 1 179 1 267 4 242 1 268 1 342 1 202 2 77 4 168 1 53 8 275 1 349 1 325 1 278 1 125 2 104 4 333 2 152 1 63 1 128 2 231 1 64 1 235 2 88 2 
66 2 238 1 179 1 267 6 3 2 268 1 29 1 222 1 202 2 77 7 319 1 168 2 53 13 293 1 248 2 325 1 278 1 125 1 104 4 333 2 110 2 128 2 63 1 231 1 235 2 
66 3 238 1 179 1 267 10 3 1 242 1 268 1 222 2 29 1 342 1 202 3 77 7 319 1 168 2 53 17 293 1 275 1 248 2 349 1 325 1 278 1 83 1 125 5 104 6 152 1 333 3 110 2 128 3 63 1 231 1 64 1 235 3 88 3 
66 1 179 1 267 4 242 1 342 1 202 1 77 4 168 1 53 8 275 1 349 1 325 1 278 1 125 2 104 2 333 1 152 1 128 1 63 1 231 1 64 1 235 1 88 2 
66 2 238 1 179 1 267 6 3 2 222 1 29 1 202 1 77 6 319 1 168 2 53 12 293 1 248 2 325 1 278 1 125 2 104 2 333 1 110 2 128 1 63 1 231 1 235 1 88 1 
66 2 238 1 179 1 267 7 3 1 268 1 29 1 222 1 202 3 77 5 319 1 168 1 53 12 293 1 248 2 325 1 278 1 83 1 125 1 104 6 333 3 110 2 128 3 63 1 231 1 235 3 
66 2 238 1 179 1 267 7 3 1 222 2 29 1 202 3 77 5 319 1 168 1 53 12 293 1 248 2 325 1 278 1 83 1 125 4 104 6 333 3 110 2 63 1 128 3 231 1 235 3 88 2 257 1 
66 1 275 3 267 3 125 6 242 1 222 3 342 1 152 2 77 4 64 3 168 1 53 7 88 3 
66 2 238 1 179 1 267 7 3 1 29 1 222 1 202 3 77 5 319 1 168 1 53 12 293 1 248 2 325 1 278 1 83 1 125 1 104 6 333 3 110 2 63 1 128 3 231 1 235 3 257 1 
8 1 40 1 143 1 336 1 
54 1 8 1 40 1 143 1 98 1 32 1 336 1 320 1 39 1 
35 1 308 1 164 1 252 1 109 1 62 1 85 1 43 1 356 1 220 1 315 1 
35 1 186 1 263 1 156 1 327 1 206 1 220 1 210 2 8 1 138 1 269 1 252 1 164 1 109 1 10 2 62 1 85 1 356 1 
35 3 186 1 123 1 263 2 156 1 16 1 145 1 173 1 327 2 206 1 339 1 220 1 210 2 8 2 138 1 269 1 164 1 109 1 10 2 62 1 85 2 34 1 356 1 
35 3 186 1 123 1 263 2 156 1 16 1 145 1 173 1 327 2 206 1 339 1 299 1 220 2 210 2 304 1 8 2 269 1 164 1 109 1 10 2 62 2 85 2 34 1 356 2 
65 1 282 1 35 4 145 1 173 1 327 1 339 1 6 1 312 2 220 3 250 1 47 1 304 1 252 1 164 1 109 1 318 2 62 3 85 1 167 1 356 3 183 1 129 1 
65 1 282 1 35 4 145 1 173 1 327 1 339 1 312 2 220 3 250 1 47 1 304 1 243 1 252 1 164 1 109 1 318 2 62 3 85 1 167 1 356 3 183 1 
164 1 109 1 62 1 356 1 220 1 280 1 
184 1 35 3 197 1 185 1 309 1 228 1 327 1 5 1 280 1 314 1 220 6 252 2 164 2 109 3 62 7 85 2 166 1 111 1 292 1 86 1 356 7 
66 1 263 1 156 2 267 3 4 2 158 1 220 1 242 1 342 1 316 1 8 1 138 1 269 1 164 1 202 2 10 2 77 3 168 1 53 6 35 1 247 2 275 1 186 1 349 1 327 1 206 1 125 2 147 1 210 2 104 4 149 1 251 1 106 1 152 1 253 1 333 2 109 1 42 1 62 1 85 1 128 2 111 1 214 1 64 1 356 1 88 2 235 2 
65 2 282 1 68 1 1 1 89 1 46 1 312 3 220 1 47 1 243 1 93 2 94 2 318 3 167 1 119 1 95 2 183 1 96 1 35 2 15 1 298 2 250 1 252 1 62 1 154 1 356 1 307 1 87 1 
35 2 185 1 327 1 280 1 220 2 47 1 164 1 109 2 139 1 62 2 85 1 111 1 356 2 
35 1 249 1 220 4 315 1 304 1 252 1 164 1 109 1 62 4 85 1 111 1 43 1 356 4 
35 1 145 1 266 1 327 1 137 1 220 2 180 1 164 1 109 2 62 2 85 1 166 1 86 1 356 2 
164 1 252 1 109 1 244 1 62 1 177 1 28 1 356 1 220 1 321 1 
35 1 311 1 5 1 220 2 314 1 164 1 109 1 62 2 85 1 111 1 356 2 
35 3 184 1 197 1 145 1 249 1 220 4 314 1 315 1 252 1 164 2 109 2 62 5 85 2 43 1 111 1 356 5 
35 3 184 1 237 1 145 1 249 1 220 4 314 1 315 1 252 1 164 2 109 2 62 5 85 2 43 1 111 1 356 5 
35 1 186 1 263 1 156 1 327 1 206 1 299 1 220 1 210 2 8 1 269 1 252 1 164 1 109 1 10 2 62 1 85 1 356 1 
35 1 185 1 145 1 228 1 327 1 220 1 164 1 109 2 62 1 85 1 166 1 86 1 356 1 
92 1 156 1 194 1 140 1 182 1 
282 1 273 1 123 1 156 1 284 1 16 1 312 2 250 1 38 1 92 1 194 2 318 2 226 1 306 1 140 2 34 1 182 2 307 1 183 1 
131 1 210 1 141 1 8 1 92 1 198 1 10 1 194 1 182 1 
92 1 226 1 306 1 
308 1 81 1 82 1 245 1 
81 1 144 1 82 1 245 1 78 1 271 1 100 1 
324 1 70 1 78 1 
347 1 262 2 27 1 81 1 144 1 205 1 82 1 100 1 7 1 78 3 245 1 271 3 
81 1 144 1 82 1 18 1 245 1 178 1 78 2 271 2 100 1 
67 1 60 1 347 1 44 1 144 1 82 1 177 1 78 1 271 1 100 1 321 1 
347 1 81 1 144 1 82 1 78 1 271 1 100 1 
347 1 81 2 144 1 245 1 78 1 271 1 100 1 
347 1 124 1 69 1 81 1 144 2 82 1 100 2 21 1 78 2 271 2 
67 1 347 1 348 1 81 1 144 1 82 2 18 2 100 1 223 1 245 1 78 3 271 3 79 1 
216 1 347 1 81 1 44 1 144 1 82 1 18 1 100 1 211 1 244 1 177 2 245 1 78 2 271 2 321 1 
67 1 347 1 81 1 144 2 82 2 18 2 100 2 289 1 245 1 78 4 178 1 271 4 79 1 
347 1 81 1 144 1 82 1 245 1 78 1 271 1 100 1 
67 1 262 1 27 1 81 2 205 1 144 1 82 3 18 2 221 1 100 1 245 2 78 4 271 4 79 1 
322 1 347 1 133 1 81 1 80 1 144 1 82 1 18 1 100 1 78 2 245 1 271 2 
260 1 347 1 262 2 27 1 81 1 144 1 205 2 82 1 100 1 78 3 245 1 271 3 
217 1 49 1 82 2 270 2 
347 1 144 1 165 1 78 1 271 1 100 1 
347 1 348 1 81 1 144 1 82 1 18 1 245 1 78 2 271 2 100 1 
31 1 
347 1 81 1 144 1 82 1 245 1 78 1 271 1 100 1 
347 1 262 1 348 1 81 1 144 1 82 1 18 1 245 1 78 3 271 3 100 1 
67 1 82 1 221 1 79 1 
81 1 82 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (13,221) 368 (53,189) (53,189) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (13,221) 368 (53,189) (53,189) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (13,221) 368 (53,189) (53,189) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (13,221) 368 (53,189) (53,189) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 305 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
221 1 354 1 189 1 328 1 368 1 52 1 53 1 350 1 215 1 381 1 356 1 
221 1 354 1 189 1 328 1 368 1 52 1 53 1 350 1 215 1 381 1 356 1 
221 1 354 1 189 1 328 1 368 1 52 1 53 1 350 1 215 1 381 1 356 1 
221 1 354 1 189 1 328 1 368 1 52 1 53 1 350 1 215 1 381 1 356 1 
297 1 260 1 57 1 328 1 239 1 156 1 59 2 107 3 203 1 291 1 140 1 356 1 9 3 175 1 52 1 350 4 381 4 235 2 
297 1 57 1 328 1 354 1 239 1 264 1 156 1 356 1 215 1 294 1 9 1 243 1 52 1 350 2 311 1 381 2 
297 1 328 2 239 1 107 1 291 1 356 1 215 1 9 2 52 2 350 3 381 3 13 1 235 1 
297 1 328 2 156 1 180 1 203 1 140 1 356 1 6 1 9 5 52 2 286 1 367 1 235 4 13 1 260 1 57 1 239 1 107 7 59 2 291 3 215 1 175 1 350 9 381 9 
297 1 328 2 156 1 180 1 203 1 140 1 356 1 6 1 9 5 52 2 286 1 367 1 235 4 13 1 260 1 57 1 239 1 107 7 59 2 291 3 215 1 175 1 350 9 381 9 
281 1 73 1 148 1 
314 2 73 1 303 1 
327 2 171 2 46 1 308 2 255 2 324 2 208 2 225 1 
95 2 327 2 220 1 46 1 24 2 120 1 224 1 225 1 227 1 181 1 230 1 77 1 76 1 32 1 308 3 255 2 208 2 207 1 161 2 237 1 261 1 340 1 345 1 110 1 371 2 40 1 171 2 374 1 91 2 113 1 19 1 271 1 194 1 377 1 324 3 218 1 326 1 
167 1 327 1 171 1 125 1 308 1 255 1 324 1 208 1 62 1 225 1 
105 1 71 1 281 1 58 1 73 1 49 1 171 1 269 1 242 1 125 1 308 1 324 1 210 1 45 1 
327 1 71 1 281 1 58 2 73 1 49 1 171 1 269 1 125 1 255 1 308 1 208 1 324 1 210 2 45 1 
332 1 288 1 87 1 58 1 210 1 
332 1 288 1 281 1 141 1 370 1 58 2 73 1 210 2 
332 1 58 1 210 1 
167 1 288 1 327 1 14 1 58 1 62 1 225 1 171 1 125 1 255 1 308 1 208 1 324 1 210 1 
73 1 
332 1 288 1 281 1 141 1 10 1 58 2 73 1 210 2 
288 2 178 1 329 1 25 1 281 1 282 1 58 5 170 2 73 1 267 1 159 2 332 2 357 2 204 1 141 1 93 1 210 5 151 1 259 1 
46 1 148 1 
327 1 46 2 48 1 320 1 171 2 308 2 255 1 324 2 208 1 
112 1 131 1 79 1 
261 1 46 1 24 1 345 1 98 1 371 1 110 1 227 1 40 1 181 1 91 1 19 1 76 1 308 1 324 1 326 1 
327 4 46 1 105 1 320 1 346 1 171 5 375 1 359 1 255 4 308 5 324 5 208 1 379 1 164 2 
167 1 327 2 171 2 125 1 308 2 255 2 274 1 324 2 
327 1 261 1 24 1 131 1 345 1 110 1 371 1 181 1 40 1 227 1 171 1 91 1 19 1 76 1 255 1 308 2 324 2 379 1 164 1 326 1 
327 3 171 3 46 1 308 3 255 3 208 1 324 3 164 1 
167 1 327 1 171 1 125 1 308 1 255 1 324 1 
327 1 171 1 125 1 308 1 255 1 324 1 208 1 48 1 320 1 
95 2 327 3 220 1 46 1 24 1 71 1 120 1 49 1 225 1 181 1 227 1 230 1 77 1 76 1 32 1 125 1 232 1 308 4 255 3 208 2 210 1 161 1 164 1 261 1 340 1 345 1 190 1 58 1 320 1 110 1 371 1 40 1 171 3 269 1 374 1 91 1 113 1 19 1 194 1 377 1 324 4 379 1 45 1 326 1 
327 1 171 2 46 1 105 1 308 2 255 1 324 2 346 1 164 1 
327 3 71 1 58 1 320 1 73 1 49 1 171 3 269 1 173 1 125 1 255 3 308 3 232 1 208 1 324 3 210 1 45 1 379 1 164 2 
327 2 131 1 320 1 171 2 255 2 308 2 79 1 208 1 324 2 164 1 
261 1 46 1 24 1 345 1 371 1 110 1 227 1 40 1 181 1 91 1 19 1 76 1 308 1 324 1 326 1 
261 1 46 1 24 1 345 1 371 1 110 1 40 1 181 1 91 1 31 1 76 1 308 1 324 1 211 1 326 1 
95 2 220 2 5 1 28 1 228 1 77 1 32 1 50 1 79 2 11 1 161 4 237 2 340 1 36 1 131 2 109 1 372 1 373 1 112 2 113 1 194 1 273 1 377 1 296 1 
327 1 171 1 125 1 71 1 308 1 255 1 274 1 324 1 
348 1 26 1 
348 1 26 1 
309 1 108 1 
309 1 108 1 
309 1 108 1 
348 1 26 1 177 1 
348 1 26 1 177 1 
348 1 278 1 26 1 
348 2 205 1 26 2 309 1 38 1 108 1 
348 1 26 1 177 1 
348 1 26 1 4 1 
348 1 26 1 4 1 
348 1 26 1 4 1 
327 2 278 1 46 1 248 1 26 1 330 1 226 1 252 1 333 1 254 1 255 2 308 2 51 1 233 1 210 1 258 1 58 1 266 1 348 1 171 2 133 1 324 2 275 1 378 1 
279 1 26 2 1 1 58 2 73 1 226 2 302 1 41 1 348 2 252 2 205 1 133 3 51 2 78 1 233 2 338 1 210 2 378 1 117 2 
57 1 156 1 203 1 
57 1 294 1 156 1 
294 1 156 3 186 1 203 2 300 1 312 1 
294 1 344 1 156 2 186 1 203 1 312 1 
294 1 156 2 186 2 203 1 312 1 
248 1 329 1 281 1 27 2 202 1 73 2 303 1 159 1 332 1 357 1 333 1 75 1 141 1 80 2 11 1 210 5 258 1 129 2 259 2 165 1 314 3 288 4 170 1 58 5 109 1 372 1 373 1 265 1 92 1 134 1 93 3 216 1 
197 1 247 5 0 1 329 1 281 1 27 6 73 5 303 3 332 6 159 2 333 4 357 2 75 3 360 1 141 1 80 6 11 3 210 9 259 6 314 9 288 7 87 5 213 1 214 1 58 9 170 2 109 3 372 3 373 3 267 1 92 2 134 1 93 8 216 2 380 1 
281 1 202 1 27 2 73 3 303 2 159 1 357 1 333 1 75 1 80 2 210 3 11 1 129 1 259 2 288 2 314 4 170 1 58 3 109 1 372 1 373 1 265 1 267 1 92 1 93 3 216 1 
281 1 27 4 202 1 73 4 303 3 159 1 357 1 333 2 75 2 360 1 80 4 210 4 11 2 129 2 259 4 314 7 288 3 214 1 170 1 58 4 109 2 372 2 373 2 265 1 267 1 92 1 93 5 216 1 380 1 
100 1 345 1 148 1 
119 1 345 1 
162 1 
76 1 345 1 110 1 
376 1 345 1 
345 1 110 1 
100 2 76 1 298 1 345 3 209 1 110 1 
166 1 237 4 220 3 21 1 102 1 70 2 103 1 199 1 109 1 17 1 28 2 285 1 253 1 50 3 33 1 11 1 161 7 
166 1 237 4 220 3 21 1 102 1 70 2 103 1 199 1 109 1 17 1 28 2 285 1 253 1 50 3 33 1 11 1 161 7 
166 1 237 4 220 3 21 1 102 1 70 2 103 1 199 1 72 1 109 1 17 1 28 2 285 1 253 1 50 3 33 1 11 1 161 7 
95 2 220 15 70 3 21 2 154 1 199 1 28 5 285 1 253 2 75 3 32 1 50 10 306 1 33 2 143 1 11 4 161 31 237 16 166 5 102 2 103 1 238 3 340 1 318 4 88 1 17 1 372 3 109 4 373 3 64 1 194 1 377 1 277 1 196 1 
95 2 237 1 70 1 102 1 21 1 340 1 305 1 194 1 32 1 377 1 325 1 161 1 
297 1 353 1 24 1 328 1 156 2 203 1 300 1 356 1 9 1 231 1 52 1 142 1 57 1 262 1 261 1 315 1 239 1 107 1 89 1 371 1 40 1 215 1 91 1 294 1 321 1 150 1 136 1 350 2 381 2 352 1 
297 1 353 1 24 1 328 1 156 2 203 1 300 1 301 1 334 1 9 1 231 1 52 1 142 1 57 1 15 1 262 1 261 1 315 1 239 1 107 2 371 1 40 1 215 1 91 1 294 1 321 1 150 1 136 1 350 3 381 3 
297 1 24 1 156 2 203 1 300 1 301 1 9 1 142 1 15 1 262 1 261 1 57 1 315 1 239 1 107 2 371 1 40 1 215 1 91 1 294 1 321 1 150 1 136 1 350 2 381 2 
261 1 328 1 24 1 315 2 345 1 110 1 371 1 40 1 268 1 215 2 91 1 334 1 172 1 321 2 322 1 52 1 136 2 246 1 350 1 236 1 83 1 381 1 326 1 
353 1 24 1 328 1 156 2 203 1 300 1 301 1 356 1 231 1 52 1 142 1 57 1 262 1 261 1 315 1 371 1 40 1 215 1 91 1 294 1 321 1 150 1 136 1 350 1 381 1 352 1 
147 1 
219 1 329 1 281 1 49 1 332 6 7 2 141 3 339 2 146 1 236 1 104 1 105 1 345 1 58 5 241 2 110 1 18 1 66 1 242 1 114 2 152 1 24 2 71 1 201 1 73 2 355 1 299 2 303 2 159 1 357 1 125 1 308 1 127 1 310 1 210 5 363 4 259 2 82 2 314 2 261 1 169 2 369 1 170 1 37 1 371 2 40 1 91 2 171 1 269 1 172 1 92 1 93 2 324 1 45 1 326 2 
219 1 105 1 71 1 369 1 58 3 37 1 49 1 355 1 18 1 332 2 269 1 171 1 242 1 125 1 141 1 308 1 10 1 324 1 363 2 210 3 45 1 82 1 
219 1 105 1 71 1 281 1 369 1 58 3 37 1 73 1 49 1 355 1 18 1 332 1 269 1 171 1 242 1 125 1 141 1 308 1 10 1 324 1 363 3 210 3 339 1 45 1 
219 1 71 1 281 1 49 1 73 1 355 1 332 2 125 1 141 1 308 1 10 1 210 3 363 3 339 1 82 1 169 1 105 1 369 1 37 1 58 3 18 1 171 1 269 1 242 1 324 1 45 1 
219 1 222 1 329 1 281 5 49 1 99 1 332 7 7 2 141 3 10 1 144 1 339 4 105 1 58 5 240 1 241 2 18 1 66 1 242 1 114 2 152 1 71 1 73 5 355 1 299 2 303 2 159 1 357 1 125 1 308 1 363 6 210 5 259 1 82 4 169 4 316 1 369 1 37 1 170 1 269 1 171 1 324 1 93 1 45 1 
219 1 329 1 281 1 49 1 332 4 7 2 141 2 339 2 104 1 105 1 58 4 241 2 18 1 66 1 242 1 114 2 152 1 71 1 73 2 355 1 299 2 303 2 159 1 357 1 125 1 308 1 363 4 210 4 259 1 82 2 314 2 169 2 369 1 170 1 37 1 269 1 171 1 324 1 93 1 45 1 
219 1 329 1 71 1 281 1 73 1 49 1 355 1 99 1 299 2 303 2 332 4 159 1 357 1 7 2 125 1 141 2 308 1 210 4 363 4 144 1 339 2 259 1 82 2 169 2 105 1 316 1 369 1 37 1 58 4 170 1 241 2 18 1 66 1 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
219 1 329 1 71 1 281 1 73 1 49 1 355 1 99 1 299 2 303 2 332 4 159 1 357 1 7 2 125 1 141 2 308 1 210 4 363 4 144 1 339 2 259 1 82 2 169 2 105 1 316 1 369 1 37 1 58 4 170 1 241 2 18 1 66 1 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
219 1 198 1 329 1 71 1 281 1 73 1 49 1 355 1 299 2 332 4 159 1 357 1 125 1 141 2 308 1 210 4 363 4 339 2 259 1 82 2 314 2 169 2 105 1 316 1 369 1 191 1 37 1 58 4 170 1 90 1 290 2 18 1 65 2 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
219 1 329 1 71 1 281 1 73 1 49 1 355 1 99 1 299 2 303 2 159 1 332 5 357 1 7 2 125 1 141 2 308 1 144 1 210 4 363 5 339 3 259 1 82 3 169 3 105 1 316 1 369 1 170 1 37 1 58 4 240 1 241 2 18 1 66 1 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
219 1 329 1 71 1 281 1 73 1 49 1 355 1 99 1 299 2 303 2 159 1 332 5 357 1 7 2 125 1 141 2 308 1 144 1 210 4 363 5 339 3 259 1 82 3 169 3 105 1 316 1 369 1 170 1 37 1 58 4 240 1 241 2 18 1 66 1 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
219 1 329 1 71 1 281 1 73 1 49 1 355 1 299 2 332 4 159 1 357 1 125 1 141 2 308 1 210 4 363 4 339 2 259 1 82 2 314 2 104 1 169 2 105 1 369 1 37 1 170 1 58 4 191 1 290 2 18 1 65 2 171 1 269 1 242 1 114 2 93 1 324 1 45 1 152 1 
237 3 95 2 70 1 220 3 103 1 46 2 340 1 36 1 131 1 109 1 148 1 17 1 28 2 285 1 112 1 253 1 113 1 77 1 50 2 32 1 194 1 377 1 33 1 79 1 11 1 161 6 
95 4 220 6 46 1 47 1 28 1 230 1 75 2 77 1 50 2 32 2 79 4 11 2 161 14 163 1 234 1 81 1 166 1 237 8 238 3 340 2 343 1 318 3 131 11 372 2 109 1 373 1 64 1 112 11 113 2 271 1 194 2 377 2 277 1 
327 1 95 2 220 1 46 1 24 1 98 1 138 1 181 1 227 1 230 1 76 1 77 1 32 1 308 2 255 1 79 1 161 2 56 1 164 1 237 1 261 1 340 1 343 1 345 1 110 1 371 1 40 1 347 1 91 1 171 1 19 1 113 1 271 1 194 1 377 1 324 2 379 1 326 1 
95 6 327 1 220 10 46 2 96 2 227 2 181 2 285 1 229 1 230 1 50 8 11 3 237 10 103 1 340 3 341 2 343 1 345 2 17 1 109 3 110 2 112 7 113 3 19 2 194 3 70 1 24 3 120 2 28 4 301 1 158 2 253 1 75 2 77 3 76 2 32 3 255 1 308 3 33 1 34 2 79 7 161 20 164 1 166 4 261 2 317 1 130 1 131 7 371 3 372 2 40 2 373 2 91 3 171 1 271 1 377 3 324 3 379 1 326 1 
327 1 95 4 220 1 24 6 2 1 301 1 182 1 74 1 230 1 76 1 77 2 32 2 308 1 255 1 287 1 161 2 164 1 236 1 237 1 261 4 340 2 36 1 345 4 89 1 371 7 110 3 40 3 193 1 171 1 91 7 270 1 113 2 172 1 244 1 271 1 194 2 245 1 377 2 324 1 351 1 218 2 69 1 326 2 
327 1 95 2 220 2 28 1 75 1 77 1 50 1 32 1 255 1 308 1 79 1 208 1 11 1 161 3 237 1 340 1 343 1 131 1 320 1 372 1 109 1 373 1 171 1 112 1 113 1 194 1 377 1 323 1 324 1 
166 1 95 2 237 2 340 1 36 1 131 1 372 1 112 1 113 1 77 1 50 1 32 1 194 1 273 1 377 1 79 1 11 1 161 2 
95 2 220 2 340 1 36 1 131 1 109 1 28 1 373 1 228 1 112 1 113 1 77 1 50 1 32 1 194 1 377 1 79 1 161 2 
166 1 95 2 237 2 220 2 340 1 36 1 131 2 109 1 372 1 28 1 373 1 112 2 113 1 75 1 77 1 50 2 32 1 194 1 377 1 79 2 11 1 161 4 
166 1 95 2 237 2 340 1 131 1 372 1 112 1 113 1 77 1 50 1 245 1 32 1 194 1 273 1 377 1 79 1 11 1 161 2 
95 2 220 2 340 1 131 1 109 1 28 1 373 1 228 1 112 1 113 1 77 1 50 1 245 1 32 1 194 1 377 1 79 1 161 2 
166 1 95 2 237 2 220 2 340 1 131 2 109 1 372 1 28 1 373 1 112 2 113 1 75 1 77 1 50 2 245 1 32 1 194 1 377 1 79 2 11 1 161 4 
166 1 95 2 237 2 220 2 340 1 131 2 109 1 372 1 28 1 373 1 112 2 113 1 75 1 77 1 50 2 32 1 194 1 377 1 79 2 11 1 161 4 
95 2 220 1 46 1 24 1 120 1 181 1 227 1 230 1 76 1 77 1 32 1 308 1 161 2 237 1 261 1 340 1 345 1 110 1 371 1 40 1 91 1 19 1 113 1 271 1 194 1 377 1 324 1 326 1 
95 2 220 1 46 1 24 1 181 1 122 1 230 1 76 1 31 1 77 1 32 1 308 1 161 2 211 1 237 1 261 1 340 1 345 1 110 1 371 1 40 1 91 1 113 1 271 1 194 1 377 1 324 1 326 1 
166 1 95 2 237 2 220 2 340 1 343 1 131 2 109 1 372 1 28 1 373 1 112 2 113 1 75 1 77 1 50 2 32 1 194 1 377 1 79 2 11 1 161 4 
95 2 220 2 24 1 120 1 28 1 181 1 227 1 75 1 76 1 77 1 50 2 32 1 308 1 34 1 79 2 11 1 161 4 166 1 237 2 261 1 340 1 131 2 345 1 89 1 109 1 372 1 371 1 110 1 373 1 40 1 91 1 112 2 19 1 113 1 194 1 377 1 324 1 
327 1 95 2 220 1 75 1 77 1 50 1 32 1 255 1 308 1 208 1 79 1 11 1 161 3 166 1 237 2 340 1 187 1 343 1 131 1 320 1 109 1 372 1 373 1 171 1 112 1 113 1 194 1 377 1 324 1 
95 4 220 10 28 3 75 3 8 2 32 2 50 6 257 1 185 1 126 1 54 1 11 3 161 19 55 1 237 9 166 3 238 1 340 2 318 2 61 1 372 3 109 3 373 3 64 1 132 2 194 2 377 2 276 1 325 1 277 1 
95 6 220 12 23 1 200 1 28 2 304 1 75 3 8 4 50 4 32 3 206 1 257 2 185 1 126 1 11 3 161 26 166 2 237 14 238 2 188 1 340 3 88 2 318 2 61 1 109 2 372 3 373 2 64 2 132 1 43 1 194 3 377 3 276 2 325 1 
95 6 70 1 220 21 23 1 200 1 28 4 285 1 304 1 253 1 75 4 8 4 307 1 206 1 32 3 50 8 33 1 257 1 185 1 126 1 11 5 161 41 55 1 237 20 166 4 103 1 238 3 188 1 340 3 88 1 318 4 61 1 17 1 372 4 109 5 373 4 64 3 132 1 43 1 194 3 377 3 276 2 325 1 277 1 
95 8 70 1 220 18 23 1 200 1 28 4 285 1 304 1 253 1 75 4 8 4 307 1 206 1 32 4 50 7 33 1 257 1 185 1 126 1 11 5 161 38 55 1 237 20 166 3 103 1 238 3 188 1 340 4 88 2 318 4 61 1 17 1 372 4 109 4 373 3 64 3 132 1 43 1 194 4 377 4 276 2 325 1 277 1 
95 4 70 1 220 25 23 1 200 1 28 7 285 1 304 1 253 1 75 7 8 4 206 1 32 2 50 14 33 1 257 1 185 1 126 1 11 8 161 52 234 2 237 27 166 7 103 1 238 4 188 1 340 2 88 1 318 4 61 1 17 1 372 7 109 8 373 7 64 2 132 1 43 1 194 2 377 2 276 1 325 1 277 2 
252 1 348 1 205 1 26 1 1 1 155 1 51 1 233 1 226 1 302 1 
278 1 266 1 
252 1 348 1 26 1 250 1 51 1 233 1 128 1 101 1 226 1 
179 1 177 1 
85 1 38 1 4 1 
26 1 1 1 58 1 73 1 226 1 302 1 41 1 348 1 252 1 205 1 133 2 51 1 78 1 233 1 338 1 210 1 378 1 117 1 
26 1 1 1 58 1 73 1 226 1 302 1 41 1 348 1 252 1 205 1 133 2 51 1 78 1 233 1 338 1 210 1 378 1 117 1 
26 1 1 1 58 1 73 1 226 1 302 1 41 1 348 1 252 1 205 1 133 2 51 1 78 1 233 1 338 1 210 1 378 1 117 1 
179 1 177 1 38 1 
179 1 177 1 38 1 
85 1 4 1 
85 1 38 1 4 1 
254 1 275 1 
327 2 278 1 46 1 248 1 26 1 280 1 330 1 226 1 252 1 333 1 254 1 308 2 255 2 51 1 233 1 210 1 258 1 288 1 58 1 41 1 266 1 348 1 171 2 133 1 324 2 275 1 117 1 
95 2 220 1 24 2 2 1 30 1 230 1 77 1 336 1 32 1 308 2 365 1 161 2 237 1 261 1 263 1 340 1 343 1 345 1 110 1 371 2 40 1 91 2 171 2 113 1 244 1 271 1 195 1 194 1 377 1 324 2 218 2 
57 1 261 1 353 1 262 1 24 2 331 1 156 2 319 1 89 1 203 1 371 2 300 1 40 1 301 1 91 2 294 1 142 1 136 1 94 1 
57 1 353 1 262 1 261 1 24 1 331 1 156 2 203 1 371 1 300 1 301 1 40 1 91 1 294 1 124 1 142 1 136 1 
261 1 24 1 345 1 319 1 283 1 110 1 371 1 40 1 91 1 172 1 136 1 246 1 326 1 236 1 
57 1 261 1 353 1 262 1 24 1 331 1 156 2 319 1 203 1 371 1 300 1 301 1 40 1 91 1 294 1 142 1 136 1 94 1 
123 1 
178 1 25 1 281 1 93 1 73 1 148 1 259 1 
329 1 281 1 73 2 303 1 159 1 332 1 357 1 7 1 141 1 210 1 259 1 314 1 170 1 58 1 241 1 66 1 93 1 
137 2 178 1 329 4 281 2 96 2 332 5 335 1 100 2 141 3 11 2 146 1 345 10 58 5 110 3 109 2 63 2 295 1 20 2 119 3 24 3 25 1 249 2 27 6 121 2 73 8 303 6 29 1 159 4 357 4 75 2 358 2 76 3 361 2 80 6 160 1 209 1 210 5 259 8 314 12 261 4 170 4 89 1 371 3 372 2 40 3 373 2 91 3 376 2 92 2 174 1 93 9 217 2 45 2 326 1 
137 2 329 2 281 2 200 1 27 5 73 5 303 3 332 1 159 2 304 1 357 2 75 2 206 1 141 1 80 5 210 1 364 1 11 2 146 1 259 5 314 6 238 1 188 1 106 1 318 1 58 1 170 2 372 2 109 2 373 2 64 1 92 1 43 1 93 8 217 1 
327 1 137 2 329 1 225 1 159 1 357 1 253 1 125 1 308 1 255 1 33 1 208 1 144 1 210 1 11 2 259 2 167 1 103 1 14 1 170 1 58 1 109 1 62 1 292 1 171 1 324 1 93 2 217 1 
178 1 329 1 25 1 281 1 170 1 73 1 159 1 357 1 93 1 259 1 
314 10 137 2 96 1 27 5 73 5 372 2 109 2 373 2 303 5 75 2 80 5 93 5 11 2 217 1 259 5 
332 1 281 1 141 1 58 1 73 1 210 1 
24 4 329 1 201 1 139 1 159 2 29 1 332 4 357 2 141 2 310 1 210 3 146 2 259 2 236 1 261 1 342 1 345 1 170 2 58 3 110 1 371 4 40 1 267 1 91 4 172 1 92 2 295 2 93 2 326 2 
95 2 327 2 220 1 46 1 24 1 120 1 225 1 227 1 181 1 230 1 76 1 77 1 32 1 308 3 255 2 208 2 161 1 261 1 340 1 345 1 371 1 110 1 40 1 91 1 171 2 374 1 19 1 113 1 194 1 377 1 324 3 326 1 
314 4 70 1 329 1 281 2 170 1 27 2 73 4 303 2 159 1 357 1 92 1 80 2 93 1 259 2 146 1 
252 1 337 1 226 1 
252 1 337 1 226 1 
252 1 42 1 254 1 1 1 226 1 
252 1 337 1 226 1 
252 1 116 1 226 1 
252 1 116 1 226 1 
252 1 116 1 226 1 
252 1 226 1 
348 1 26 1 
237 4 166 1 95 4 70 1 220 4 103 1 340 2 88 1 109 1 17 1 28 2 285 1 253 1 50 3 32 2 194 2 377 2 33 1 11 1 161 8 
237 3 70 1 220 3 103 1 148 1 17 1 109 1 28 2 285 1 253 1 50 2 33 1 11 1 161 6 
95 2 237 2 166 1 220 2 86 1 340 1 109 1 372 1 28 1 373 1 75 1 50 2 32 1 194 1 377 1 11 1 161 4 
237 3 166 1 220 4 238 1 318 2 109 1 372 1 28 1 373 1 64 1 75 1 50 2 11 1 161 7 277 1 
95 4 70 1 220 12 28 5 285 1 253 2 75 2 50 9 32 2 33 2 11 3 161 23 163 1 366 1 234 1 166 4 237 11 103 1 238 2 340 2 318 2 88 2 17 1 372 2 109 3 373 2 194 2 377 2 277 1 
220 1 318 1 161 1 
237 1 238 1 161 1 
95 2 237 3 166 1 220 3 340 1 86 1 96 1 372 1 109 1 28 2 373 1 75 1 194 1 32 1 50 3 377 1 11 1 161 6 
95 2 220 6 200 1 28 1 304 1 75 2 32 1 206 1 50 2 11 2 161 12 166 1 237 6 238 1 340 1 188 1 318 1 372 2 109 2 373 2 64 1 43 1 194 1 377 1 325 1 
237 3 166 1 220 3 103 1 109 1 28 1 253 1 50 2 33 1 11 1 161 6 
237 1 166 1 95 2 220 2 340 1 88 1 17 1 28 1 285 1 253 1 50 2 32 1 194 1 33 1 377 1 161 3 366 1 
95 2 166 2 237 5 220 5 103 1 340 1 109 2 28 3 292 1 253 2 194 1 32 1 50 5 377 1 33 2 325 1 11 2 161 10 
95 2 237 2 166 1 340 1 372 1 32 1 194 1 50 1 377 1 325 1 11 1 161 2 
95 2 237 2 166 1 220 2 340 1 109 1 372 1 28 1 373 1 75 1 50 2 32 1 194 1 377 1 325 1 11 1 161 4 
95 6 166 1 237 1 220 2 340 3 88 1 28 1 253 1 32 3 194 3 50 2 377 3 33 1 325 1 161 3 366 1 55 1 
95 10 70 1 220 18 28 7 285 1 253 3 75 3 306 1 32 5 50 12 33 3 143 1 11 5 161 34 366 1 55 1 237 16 166 5 103 2 238 3 86 1 340 5 88 2 318 4 17 1 372 3 109 5 373 3 64 1 194 5 377 5 325 1 277 1 196 1 
95 2 70 1 220 4 28 2 285 1 253 1 32 1 50 2 33 1 11 1 161 8 237 4 103 1 238 1 340 1 318 1 109 1 17 1 64 1 43 1 194 1 377 1 325 1 
95 4 70 1 220 5 28 2 285 1 253 1 75 1 32 2 50 3 33 1 11 2 161 11 237 6 166 1 103 1 238 1 340 2 86 1 318 2 109 1 17 1 372 1 64 1 43 1 194 2 377 2 325 1 277 1 
95 6 70 1 220 10 200 1 28 3 285 1 304 1 253 1 75 2 32 3 206 1 50 4 33 1 11 3 161 19 166 1 237 9 103 1 238 1 86 1 188 1 340 3 318 1 88 1 17 1 372 2 109 3 373 2 64 1 43 1 194 3 377 3 325 1 
95 6 70 1 220 7 200 1 28 3 285 1 304 1 253 1 75 2 32 3 206 1 50 5 33 1 11 3 161 17 166 2 237 10 103 1 238 1 86 1 340 3 188 1 88 1 318 1 17 1 372 2 109 2 373 1 64 1 43 1 194 3 377 3 325 1 
95 2 70 1 220 4 28 2 285 1 253 1 32 1 50 2 33 1 11 1 161 8 237 4 103 1 238 1 340 1 318 1 109 1 17 1 64 1 43 1 194 1 377 1 325 1 
95 2 220 6 200 1 28 1 304 1 75 2 32 1 206 1 50 2 11 2 161 12 166 1 237 6 238 1 340 1 188 1 318 1 372 2 109 2 373 2 64 1 43 1 194 1 377 1 325 1 
95 8 70 1 220 8 200 1 28 3 285 1 304 1 253 1 75 2 32 4 206 1 50 5 33 1 11 3 161 18 166 2 237 10 103 1 238 1 188 1 86 1 340 4 318 1 88 2 17 1 372 2 109 2 373 1 64 1 43 1 194 4 377 4 325 1 
95 8 220 7 200 1 28 3 304 1 75 3 32 4 206 1 50 6 11 3 161 16 55 1 166 3 237 9 238 1 188 1 340 4 318 1 88 2 372 3 109 2 373 2 64 1 43 1 194 4 377 4 325 1 
166 3 237 3 220 4 103 1 109 1 17 1 28 3 285 2 253 3 50 6 33 3 11 1 161 7 
95 8 70 1 220 8 200 1 28 3 285 1 304 1 253 1 75 2 32 4 206 1 50 4 33 1 11 3 161 18 55 1 166 1 237 10 103 1 238 1 188 1 340 4 318 1 88 2 17 1 372 2 109 2 373 1 64 1 43 1 194 4 377 4 325 1 
171 1 22 1 46 1 105 1 308 1 324 1 346 1 
22 1 46 1 105 1 223 1 284 1 289 1 346 1 251 1 171 1 308 1 68 1 324 1 
91 1 261 1 172 1 24 1 345 1 110 1 148 1 371 1 40 1 236 1 326 1 
327 1 261 1 46 1 24 1 345 1 110 1 371 1 181 1 227 1 40 1 171 1 91 1 76 1 255 1 308 2 324 2 164 1 326 1 
327 1 261 1 46 1 24 1 71 1 345 3 121 1 110 2 371 1 181 1 227 1 40 1 269 1 171 2 91 1 376 1 76 2 125 1 255 2 308 2 295 1 324 2 164 1 
327 1 46 1 24 2 71 1 121 1 181 1 76 2 125 1 308 2 255 2 211 1 35 1 164 1 261 1 345 3 371 2 110 2 40 1 91 2 171 2 269 1 376 1 295 1 324 2 
119 1 24 3 281 1 121 1 73 1 332 1 183 1 100 1 76 1 210 2 145 1 35 1 261 1 345 4 58 2 371 3 110 1 40 1 91 3 376 1 295 1 45 1 326 1 
261 1 119 1 24 3 281 1 345 4 58 2 73 1 121 1 110 1 371 3 40 1 332 1 91 3 376 1 100 1 76 1 361 1 295 1 210 2 45 1 35 1 326 1 
91 1 293 1 261 1 24 1 371 1 40 1 
261 3 24 5 2 1 345 3 97 1 89 1 371 6 110 2 301 1 40 2 182 1 193 1 91 6 270 1 76 1 287 1 209 1 218 1 69 1 326 2 
327 1 95 4 70 1 220 3 46 2 24 1 120 1 28 2 181 1 227 1 285 1 158 1 253 1 76 1 77 2 50 2 32 2 308 2 255 1 33 1 34 1 79 1 11 1 161 6 164 1 237 3 103 1 261 1 263 1 340 2 343 1 131 1 345 1 89 1 109 1 17 1 110 1 371 1 40 1 171 1 91 1 112 1 113 2 19 1 194 2 377 2 324 2 
178 1 119 1 24 1 329 2 25 1 281 1 73 1 159 2 29 1 332 2 357 2 358 1 100 1 361 1 141 1 210 3 259 1 288 1 345 2 170 2 58 3 371 1 63 1 91 1 20 1 93 1 45 1 326 1 
261 2 24 2 345 2 89 1 371 2 110 1 40 1 293 1 91 2 335 1 100 1 76 1 209 1 
261 1 24 4 345 1 89 1 371 4 110 1 40 1 91 4 172 1 44 1 35 1 326 1 236 1 
261 2 24 2 130 1 345 1 371 2 110 1 40 1 91 2 74 1 270 1 76 1 295 1 351 1 69 1 
91 1 57 1 261 1 294 1 24 1 156 1 142 1 371 1 40 1 326 1 
261 1 24 2 2 1 345 1 89 1 371 2 110 1 301 1 40 1 91 2 30 1 
261 2 24 4 2 1 345 3 89 1 371 5 110 2 40 2 182 1 193 1 91 5 172 1 295 1 44 1 236 1 326 1 
261 2 24 4 2 1 345 3 89 1 371 5 110 2 40 2 182 1 91 5 172 1 295 1 362 1 44 1 236 1 326 1 
327 1 261 1 46 1 24 1 345 1 110 1 371 1 181 1 40 1 171 1 91 1 76 1 255 1 308 2 324 2 211 1 164 1 326 1 
261 2 24 1 345 1 97 1 371 1 110 1 40 1 91 1 270 1 76 1 295 1 209 1 69 1 
84 1 171 1 195 1 336 1 308 1 3 1 324 1 365 1 111 1 
135 1 153 1 111 1 
212 1 84 1 46 1 3 1 111 1 
288 1 84 2 212 2 46 1 71 1 281 1 3 2 58 2 157 1 73 1 49 1 111 1 269 1 125 1 232 1 135 1 210 2 45 1 153 1 
297 1 9 1 239 1 148 1 
297 1 328 1 9 1 239 1 52 1 350 1 381 1 
315 1 350 1 215 1 
168 1 297 1 328 1 239 1 356 1 184 1 9 1 243 2 52 1 176 1 350 3 381 3 
297 1 328 1 9 1 239 1 52 1 107 1 59 1 350 2 381 2 
57 1 328 1 156 1 203 1 140 1 356 1 9 1 52 1 350 1 381 1 235 1 
328 1 9 1 239 1 52 1 350 1 381 1 356 1 
297 1 328 1 239 2 52 1 350 1 381 1 356 1 
349 1 328 2 9 1 239 1 52 2 60 1 350 2 381 2 356 1 313 1 
297 1 328 1 239 1 107 2 291 1 356 1 6 1 9 2 52 1 286 1 350 3 381 3 235 1 
297 1 57 1 328 1 239 1 156 2 107 1 203 1 300 1 356 1 294 1 149 1 9 1 52 1 350 2 381 2 
297 1 328 2 239 1 59 1 107 2 291 1 356 1 9 2 52 2 175 1 350 4 381 4 235 1 
297 1 328 1 9 1 239 1 52 1 350 1 381 1 356 1 
168 1 297 2 328 1 239 2 107 2 291 1 243 1 272 1 9 3 52 1 176 1 350 4 381 4 235 1 
297 1 328 1 239 1 16 1 180 1 107 1 356 1 9 1 52 1 256 1 350 2 381 2 
168 2 297 1 328 1 239 1 356 1 9 1 243 2 52 1 115 1 176 1 350 3 381 3 
118 2 67 1 9 2 12 1 
328 1 52 1 192 1 350 1 381 1 356 1 
297 1 6 1 328 1 9 1 239 1 52 1 107 1 350 2 381 2 356 1 
39 1 
297 1 328 1 9 1 239 1 52 1 350 1 381 1 356 1 
297 1 6 1 328 1 9 1 243 1 239 1 52 1 107 1 350 3 381 3 356 1 
272 1 9 1 291 1 235 1 
9 1 239 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 2 353 2 272 5 358 1 152 2 177 1 178 1 197 1 30 1 246 1 285 1 336 2 8 1 200 1 38 2 13 6 82 1 124 9 374 1 253 1 322 2 256 9 168 1 170 2 262 3 44 1 189 4 70 1 
269 2 353 2 272 5 358 1 152 2 177 1 178 1 197 1 30 1 246 1 285 1 336 2 8 1 200 1 38 2 13 6 82 1 124 9 374 1 253 1 322 2 256 9 168 1 170 2 262 3 44 1 189 4 70 1 
269 2 353 2 272 6 358 1 152 2 177 1 178 1 197 1 30 1 246 1 285 1 336 2 8 1 200 1 38 2 13 7 82 1 124 10 374 1 253 1 322 2 256 10 168 1 170 2 262 4 44 1 189 5 70 1 
269 2 353 2 272 4 358 1 152 2 177 1 178 1 197 1 30 1 246 1 285 1 336 2 8 1 200 1 38 2 13 4 82 1 124 7 253 1 322 1 256 7 168 1 170 2 262 2 44 1 189 3 70 1 
269 1 38 1 13 3 124 4 272 3 374 1 152 1 177 1 178 1 322 2 197 1 256 4 246 1 262 1 170 1 336 1 200 1 189 2 
269 1 38 1 353 1 83 1 272 1 124 2 253 1 3 1 177 1 178 1 197 1 256 2 168 1 336 1 170 1 287 1 
269 2 353 1 13 1 124 3 272 2 177 1 178 1 197 1 256 3 336 2 262 1 189 1 70 1 
269 2 353 1 272 5 358 1 152 1 177 1 178 1 197 1 246 1 336 2 8 1 200 1 13 7 38 1 124 9 374 1 322 2 167 1 256 9 262 3 170 1 189 4 131 1 70 1 
269 2 353 1 272 5 358 1 152 1 177 1 178 1 197 1 246 1 336 2 8 1 200 1 13 7 38 1 124 9 374 1 322 2 167 1 256 9 262 3 170 1 189 4 131 1 70 1 
53 1 55 1 231 1 
62 2 259 1 55 1 
97 2 207 2 317 1 316 2 318 2 235 2 298 1 35 2 
71 1 301 1 354 1 1 1 355 1 237 1 273 1 134 1 196 1 97 2 73 1 155 1 282 1 160 1 286 1 35 2 224 1 137 2 288 2 78 1 205 1 339 2 207 3 314 2 317 1 316 3 318 2 166 1 125 1 320 1 343 1 65 1 67 1 235 2 298 1 147 1 214 2 
97 1 207 1 24 1 316 1 318 1 171 1 235 1 298 1 35 1 268 1 
11 1 207 1 372 1 316 1 330 1 150 1 276 1 97 1 377 1 53 1 55 1 326 1 248 1 268 1 
11 2 207 1 316 1 330 2 318 1 150 1 276 1 97 1 377 1 53 1 55 1 235 1 35 1 248 1 268 1 
11 1 330 1 109 1 230 1 153 1 
104 1 11 2 330 2 53 1 55 1 101 1 230 1 153 1 
11 1 330 1 153 1 
359 1 97 1 11 1 207 1 24 1 316 1 330 1 318 1 171 1 235 1 298 1 35 1 230 1 268 1 
55 1 
104 1 11 2 157 1 330 2 53 1 55 1 230 1 153 1 
104 1 11 5 206 2 250 1 270 1 0 1 330 5 230 2 292 1 278 1 153 2 279 1 346 2 53 1 198 1 55 1 201 2 19 1 222 1 
317 1 231 1 
207 2 316 2 317 2 318 1 97 2 199 1 111 1 235 1 35 1 
366 1 156 1 295 1 
71 1 137 1 301 1 339 1 207 1 314 1 354 1 355 1 317 1 316 1 237 1 343 1 155 1 65 1 282 1 365 1 
71 1 137 1 301 1 339 1 207 2 314 1 354 1 355 1 316 2 237 1 343 1 97 1 155 1 156 1 282 1 65 1 99 1 235 1 190 1 35 1 
97 3 207 3 99 1 317 1 316 3 318 1 235 3 35 3 
97 1 207 1 316 1 171 1 235 1 35 1 268 1 
97 1 207 1 316 1 318 1 199 1 111 1 235 1 35 1 268 1 
71 1 301 1 354 1 1 1 355 1 330 1 150 1 237 1 273 1 134 1 276 1 196 1 97 3 155 1 282 1 99 1 160 1 199 1 286 1 35 3 248 1 164 1 137 1 288 2 78 1 11 1 339 1 138 1 207 4 314 1 317 1 316 4 318 2 166 1 125 1 320 1 343 1 377 1 65 1 235 3 298 1 190 1 268 1 214 1 
97 2 207 2 99 1 317 1 316 2 107 1 235 1 326 1 35 1 
11 1 138 1 207 3 330 1 316 3 318 1 150 1 123 1 276 1 97 3 377 1 99 2 199 1 55 1 235 3 190 1 35 3 248 1 268 1 
207 2 316 2 318 1 97 2 156 1 99 1 295 1 199 1 235 2 35 2 
71 1 137 1 339 1 301 1 207 1 314 1 354 1 355 1 317 1 316 1 237 1 343 1 155 1 65 1 282 1 
137 1 71 1 339 1 314 1 317 1 34 1 268 1 241 1 
114 1 1 1 134 1 176 1 243 1 156 2 284 1 160 1 57 1 286 1 36 1 224 2 225 1 288 2 78 1 366 2 125 1 320 2 126 1 378 1 295 2 299 1 146 1 214 4 
97 1 207 1 215 1 316 1 276 1 235 1 35 1 268 1 
368 1 207 5 227 1 316 5 317 1 318 1 107 1 97 5 99 2 199 1 235 4 326 1 35 4 190 1 
97 2 207 2 215 1 316 2 171 1 235 2 35 2 268 1 
181 1 121 1 
181 1 121 1 
309 1 357 1 
309 1 357 1 
309 1 357 1 
76 1 181 1 121 1 
43 1 181 1 121 1 
309 1 347 1 357 1 195 1 181 2 121 2 
76 1 181 1 121 1 
76 1 181 1 121 1 
47 1 181 1 121 1 
47 1 181 1 121 1 
47 1 181 1 121 1 
37 1 163 1 11 2 12 2 330 2 149 3 184 1 193 2 305 2 242 1 333 1 211 1 347 1 55 1 379 1 312 2 265 2 181 2 121 2 
149 1 330 1 193 1 305 1 97 2 244 1 361 1 75 1 312 1 35 2 181 1 121 1 11 1 12 1 207 2 122 1 317 1 316 2 86 1 61 1 43 1 379 1 235 2 94 1 
38 1 170 1 152 1 
38 1 170 1 287 1 
38 3 133 1 274 1 287 1 152 2 350 1 
254 1 38 2 133 1 274 1 287 1 152 1 
38 2 133 1 274 2 287 1 152 1 
23 2 114 1 270 2 330 5 119 2 153 1 244 1 75 1 362 1 53 1 77 1 33 1 201 1 55 2 57 1 222 3 225 1 104 1 313 1 206 1 11 5 251 1 81 1 86 1 127 1 230 4 292 1 40 2 62 3 346 1 259 1 299 1 
173 1 23 6 114 3 270 6 330 9 278 1 153 6 360 1 75 4 362 2 53 1 77 2 55 5 201 2 57 3 120 1 222 8 225 3 313 1 104 1 367 1 11 9 206 2 85 5 109 5 127 3 230 7 292 1 40 6 62 9 255 1 346 2 259 3 261 1 299 3 
23 2 114 1 270 2 330 3 119 1 278 1 75 1 362 1 53 1 77 1 33 1 55 3 201 1 57 1 222 3 225 1 206 1 11 3 81 1 230 2 127 1 40 2 62 4 346 1 259 2 299 1 
23 4 114 2 270 4 330 4 119 2 278 1 360 1 75 2 362 1 53 1 77 1 33 1 55 4 201 1 57 2 222 5 225 2 206 1 11 4 81 1 230 3 127 2 40 4 62 7 255 1 346 1 259 3 261 1 299 2 
301 1 348 1 231 1 
301 1 15 1 
213 1 
301 1 237 1 
301 3 303 1 282 1 348 2 237 1 240 1 
301 1 282 1 237 1 
301 1 103 1 
114 1 373 1 252 1 320 3 275 1 135 1 243 3 141 1 185 1 74 2 334 1 91 1 284 2 57 1 364 1 224 4 214 7 
114 1 373 1 252 1 320 3 275 1 135 1 243 3 141 1 185 1 74 2 334 1 91 1 284 2 57 1 364 1 224 4 214 7 
162 1 114 1 373 1 252 1 320 3 275 1 135 1 243 3 185 1 141 1 74 2 334 1 91 1 284 2 57 1 364 1 224 4 214 7 
114 4 1 1 216 3 239 1 275 1 135 1 136 4 243 10 28 1 74 3 334 2 284 5 160 1 58 1 57 4 286 1 364 5 224 16 225 3 288 2 80 1 373 2 252 2 125 1 320 15 127 3 185 1 141 1 91 2 169 1 144 1 299 3 145 1 214 31 
114 1 1 2 49 1 275 1 135 1 243 4 74 2 334 1 284 3 160 2 57 1 286 2 364 1 224 5 288 4 373 1 252 1 125 2 320 4 60 1 185 1 91 1 144 1 214 9 
269 1 353 1 272 1 151 1 194 1 152 1 25 1 177 1 26 1 219 1 178 1 197 1 155 1 221 1 336 1 100 1 287 1 137 1 339 1 13 1 314 1 38 2 183 1 124 2 343 1 294 1 256 2 170 1 350 1 188 1 
269 1 353 1 272 1 151 1 331 1 194 1 152 1 25 1 177 1 219 1 197 1 155 1 335 1 221 1 336 1 287 1 204 1 137 1 339 1 314 1 13 2 38 2 183 1 124 3 343 1 294 1 256 3 170 1 350 1 188 1 
353 1 272 1 151 1 331 1 152 1 25 1 177 1 219 1 197 1 155 1 221 1 287 1 204 1 137 1 339 1 314 1 13 2 38 2 183 1 124 2 343 1 294 1 256 2 170 1 350 1 
71 1 269 1 301 1 353 2 95 1 151 2 237 1 25 2 219 2 155 1 180 1 335 1 336 1 137 1 339 1 314 1 14 1 371 1 59 1 124 1 343 1 232 1 256 1 
269 1 353 1 151 1 331 1 194 1 152 1 25 1 26 1 219 1 178 1 155 1 221 1 336 1 287 1 137 1 339 1 314 1 38 2 183 1 124 1 343 1 294 1 256 1 170 1 350 1 188 1 
327 1 
270 2 330 5 276 1 277 2 97 1 53 1 52 1 55 2 102 2 222 2 104 3 137 2 11 5 339 2 139 2 59 1 292 1 343 1 62 2 345 1 346 1 187 1 71 2 301 1 352 1 302 1 191 2 150 1 192 1 237 1 153 6 27 1 155 1 245 1 77 1 32 1 201 1 248 1 206 1 314 2 207 1 371 1 208 1 84 2 372 1 316 1 88 1 377 1 323 2 259 2 93 1 380 2 326 1 266 4 268 1 
352 1 302 1 330 3 150 1 276 1 153 2 27 1 97 1 157 1 245 1 52 1 248 1 104 1 11 3 207 1 139 1 316 1 372 1 377 1 326 1 266 2 268 1 
352 1 302 1 330 3 150 1 276 1 153 1 27 1 97 1 157 1 245 1 52 1 53 1 55 1 248 1 104 1 11 3 207 1 316 1 372 1 377 1 323 1 326 1 266 3 268 1 
352 1 302 1 330 3 150 1 276 1 153 2 27 1 97 1 157 1 245 1 52 1 53 1 55 1 102 1 248 1 104 1 11 3 207 1 139 1 316 1 372 1 377 1 323 1 326 1 266 3 268 1 
270 1 330 5 276 1 277 2 218 1 97 2 53 1 52 1 55 1 102 4 222 1 104 3 11 5 139 4 292 1 345 1 346 1 64 1 235 1 298 1 20 1 302 1 352 1 24 1 356 1 191 2 150 1 153 7 359 1 27 1 157 1 245 1 201 1 35 1 248 1 206 1 207 2 316 2 372 1 84 2 318 1 375 1 88 1 377 1 323 3 259 2 171 1 380 2 326 1 266 5 268 2 
352 1 302 1 191 2 270 1 330 4 150 1 192 1 276 1 277 2 153 4 27 1 97 1 245 1 53 1 52 1 55 2 201 1 102 2 222 1 248 1 104 2 206 1 11 4 207 1 139 2 84 2 372 1 316 1 292 1 88 1 377 1 62 2 345 1 346 1 323 2 259 2 380 2 326 1 266 4 268 1 
352 1 302 1 191 2 270 1 330 4 150 1 276 1 277 2 153 4 218 1 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 2 222 1 248 1 104 2 11 4 206 1 207 1 139 2 84 2 316 1 372 1 292 1 88 1 377 1 345 1 346 1 323 2 64 1 259 2 380 2 326 1 20 1 266 4 268 1 
352 1 302 1 191 2 270 1 330 4 150 1 276 1 277 2 153 4 218 1 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 2 222 1 248 1 104 2 11 4 206 1 207 1 139 2 84 2 316 1 372 1 292 1 88 1 377 1 345 1 346 1 323 2 64 1 259 2 380 2 326 1 20 1 266 4 268 1 
352 1 302 1 191 2 270 1 330 4 150 1 276 1 153 4 218 1 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 2 223 2 222 1 248 1 104 2 11 4 206 1 249 1 207 1 139 2 84 2 316 1 372 1 209 1 229 2 39 1 292 1 88 1 377 1 62 2 346 1 323 2 326 1 266 4 268 1 
352 1 302 1 191 2 270 1 356 1 330 4 150 1 276 1 277 2 218 1 153 5 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 3 222 1 248 1 104 2 206 1 11 4 207 1 139 3 84 2 316 1 372 1 292 1 88 1 377 1 345 1 346 1 64 1 323 3 259 2 380 2 326 1 20 1 266 5 268 1 
352 1 302 1 191 2 270 1 356 1 330 4 150 1 276 1 277 2 218 1 153 5 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 3 222 1 248 1 104 2 206 1 11 4 207 1 139 3 84 2 316 1 372 1 292 1 88 1 377 1 345 1 346 1 64 1 323 3 259 2 380 2 326 1 20 1 266 5 268 1 
352 1 302 1 191 2 270 1 330 4 150 1 192 1 276 1 153 4 27 1 97 1 245 1 53 1 52 1 55 1 201 1 102 2 223 2 222 1 248 1 104 2 206 1 11 4 207 1 139 2 84 2 372 1 316 1 209 1 229 2 292 1 88 1 377 1 62 2 346 1 323 2 326 1 266 4 268 1 
114 1 1 1 134 1 275 1 176 1 135 1 243 2 74 1 156 1 334 1 284 2 160 1 286 1 57 1 224 3 288 2 78 1 366 1 317 2 373 1 125 1 320 3 231 1 185 1 295 1 214 6 
114 1 1 2 216 3 134 2 136 3 243 2 29 1 156 11 284 1 160 2 58 1 286 2 57 2 364 1 224 8 225 2 288 4 78 1 366 11 105 1 317 1 166 1 125 2 320 6 127 2 376 1 17 1 295 4 263 1 299 1 145 1 147 1 214 14 
71 1 301 1 48 1 354 1 355 1 1 1 237 1 134 1 50 1 97 1 29 1 155 1 308 1 282 1 99 1 160 1 286 1 35 1 224 1 365 1 137 1 339 1 78 1 288 2 314 1 207 2 317 1 316 2 125 1 166 1 320 1 343 1 65 1 295 1 235 1 190 1 214 2 147 1 
1 3 2 2 331 1 134 3 275 1 135 1 217 1 179 1 97 1 334 1 99 1 282 2 284 4 286 3 57 3 224 10 225 2 137 3 339 3 288 6 343 2 185 1 65 2 295 7 235 1 299 2 190 1 147 1 71 1 301 2 354 2 114 3 355 2 237 2 196 2 243 8 29 1 74 1 155 2 156 7 31 1 160 3 35 1 364 4 78 3 165 2 366 7 314 3 207 3 317 2 316 3 373 1 166 1 125 3 320 10 127 2 258 2 45 2 214 20 
71 2 301 3 1 2 118 1 331 1 237 2 134 2 176 1 51 1 97 1 155 2 99 1 160 2 100 1 286 2 35 1 224 1 137 7 339 8 288 4 78 2 207 1 314 8 371 1 316 1 59 1 319 1 125 2 166 1 320 1 342 1 343 2 325 1 68 1 235 1 67 2 69 1 147 1 214 2 
114 1 1 1 134 1 243 1 97 1 29 1 156 1 284 1 160 1 199 1 286 1 57 1 35 1 224 1 225 1 366 1 288 2 78 1 207 1 316 1 318 1 125 1 320 2 127 1 128 1 295 1 235 1 299 1 214 3 
366 1 78 1 288 2 1 1 134 1 125 1 126 1 176 1 243 1 156 1 295 1 160 1 286 1 57 1 364 1 224 2 214 2 225 1 
366 1 78 1 288 2 114 1 1 1 134 1 125 1 320 2 176 1 243 1 156 1 284 1 295 1 160 1 286 1 299 1 36 1 214 2 
114 1 1 1 134 1 176 1 243 2 156 2 284 1 160 1 57 1 286 1 364 1 224 2 225 1 288 2 78 1 366 2 125 1 320 2 127 1 295 2 299 1 214 4 
366 1 78 1 288 2 1 1 134 1 125 1 126 1 243 1 156 1 295 1 160 1 286 1 57 1 69 1 364 1 224 2 214 2 225 1 
366 1 78 1 288 2 114 1 1 1 134 1 125 1 320 2 243 1 156 1 284 1 295 1 160 1 286 1 299 1 69 1 36 1 214 2 
114 1 1 1 134 1 243 2 156 2 284 1 160 1 57 1 286 1 364 1 224 2 225 1 288 2 78 1 366 2 125 1 320 2 127 1 295 2 299 1 69 1 214 4 
114 1 1 1 134 1 243 2 156 2 284 1 160 1 57 1 286 1 364 1 224 2 225 1 288 2 78 1 366 2 125 1 320 2 127 1 295 2 299 1 214 4 
71 1 301 1 354 1 355 1 1 1 237 1 134 1 196 1 155 1 282 1 160 1 286 1 224 1 137 1 339 1 78 1 288 2 314 1 207 1 317 1 316 1 125 1 166 1 320 1 343 1 65 1 147 1 214 2 
71 1 137 1 339 1 78 1 288 2 314 1 1 1 317 1 166 1 134 1 125 1 320 1 241 1 7 1 160 1 286 1 34 1 268 1 214 1 
114 1 1 1 134 1 243 2 29 1 156 2 284 1 160 1 57 1 286 1 364 1 224 2 225 1 288 2 78 1 366 2 125 1 320 2 127 1 295 2 299 1 214 4 
301 1 354 1 114 1 355 1 1 1 237 1 134 1 196 1 243 2 155 1 156 2 282 1 284 1 160 1 57 1 100 1 286 1 364 1 224 2 225 1 137 1 366 2 165 1 339 1 78 1 288 2 314 1 207 1 316 1 125 1 320 2 127 1 343 1 65 1 295 2 299 1 214 4 
114 1 1 1 134 1 243 1 97 1 29 1 156 1 160 1 199 1 286 1 57 1 364 1 35 1 224 2 225 1 288 2 78 1 366 1 207 1 316 1 318 1 125 1 320 1 127 1 41 1 295 1 299 1 235 1 214 3 
114 3 1 2 271 1 216 1 49 1 136 2 4 1 243 6 98 2 159 2 247 1 284 3 160 2 58 1 286 2 57 3 364 3 224 9 225 3 288 4 291 1 125 2 320 10 108 1 127 3 89 1 66 1 299 3 145 1 214 19 
113 1 114 2 1 3 271 2 238 1 216 2 49 1 4 1 136 2 243 4 98 4 159 1 284 2 160 3 286 3 58 2 57 3 364 2 224 14 225 3 288 6 291 1 125 3 320 12 127 3 129 1 89 1 144 2 66 2 234 1 299 2 381 1 300 1 214 26 
113 1 114 5 148 1 1 3 271 1 238 1 216 3 275 1 49 1 135 1 136 4 4 1 243 8 98 4 74 1 334 1 159 1 247 1 284 4 160 3 58 3 286 3 57 5 364 4 224 20 225 4 288 6 291 1 373 1 125 3 320 21 127 4 185 1 129 1 89 1 144 1 66 2 234 1 299 4 381 1 145 1 300 1 214 41 
113 1 114 4 148 1 1 4 271 1 238 1 216 3 275 1 49 1 135 1 136 4 4 1 243 7 98 4 74 1 334 1 159 1 247 1 284 4 160 4 58 3 286 4 57 5 364 3 224 20 225 4 288 8 291 1 373 1 125 4 320 18 127 4 185 1 129 1 89 1 144 2 66 2 234 1 299 3 381 1 145 1 300 1 214 38 
113 1 114 8 1 2 271 1 238 1 216 4 275 1 49 1 135 1 136 4 4 1 243 14 98 4 74 1 334 1 159 1 284 7 160 2 58 2 286 2 57 8 364 7 224 27 225 7 288 4 291 1 373 1 125 2 320 25 127 7 185 1 129 1 89 1 17 2 144 1 66 1 234 1 299 7 381 1 145 2 300 1 214 52 
333 1 12 1 211 1 347 1 193 1 172 1 312 1 181 1 121 1 305 1 
43 1 94 1 
12 1 281 1 370 1 130 1 193 1 312 1 181 1 121 1 305 1 
163 1 11 1 12 1 330 1 149 2 184 1 193 1 305 1 242 1 333 1 211 1 347 1 55 1 379 1 312 1 265 1 181 1 121 1 
163 1 11 1 12 1 330 1 149 2 184 1 193 1 305 1 242 1 333 1 211 1 347 1 55 1 379 1 312 1 265 1 181 1 121 1 
163 1 11 1 12 1 330 1 149 2 184 1 193 1 305 1 242 1 333 1 211 1 347 1 55 1 379 1 312 1 265 1 181 1 121 1 
76 1 296 1 195 1 
76 1 296 1 195 1 
47 1 341 1 
47 1 341 1 195 1 
61 1 361 1 
330 1 149 1 193 1 242 1 305 1 280 1 244 1 97 2 361 1 75 1 312 1 181 1 35 2 121 1 11 1 12 1 207 2 122 1 317 1 316 2 86 1 230 1 61 1 43 1 94 1 235 2 265 1 
76 1 296 1 
47 1 341 1 195 1 
301 1 1 1 118 1 237 1 134 1 97 2 29 1 155 1 160 1 363 1 9 1 286 1 224 1 137 2 339 2 78 1 288 2 314 2 207 2 106 1 316 2 125 1 166 1 320 1 343 1 87 1 92 1 68 1 67 2 147 1 214 2 
137 2 339 2 38 2 314 2 315 1 183 1 331 1 152 1 343 1 219 1 155 1 294 1 16 1 42 1 170 1 287 1 100 1 350 1 188 1 
137 1 339 1 38 2 314 1 183 1 331 1 152 1 343 1 219 1 63 1 294 1 155 1 42 1 170 1 287 1 350 1 188 1 
71 1 137 1 301 1 339 1 314 1 315 1 95 1 371 1 59 1 237 1 343 1 219 1 155 1 260 1 
137 1 339 1 38 2 314 1 315 1 183 1 331 1 152 1 343 1 219 1 155 1 294 1 16 1 42 1 170 1 287 1 350 1 188 1 
338 1 
270 1 0 1 53 1 55 1 19 1 222 1 231 1 
104 1 11 1 206 1 270 1 330 1 277 1 153 1 292 1 62 1 345 1 346 1 259 1 53 1 55 2 201 1 380 1 222 1 
0 1 270 8 330 5 2 2 220 1 282 3 53 2 55 8 100 1 57 2 337 2 222 9 103 2 225 2 137 3 104 3 339 3 289 2 11 5 15 3 343 3 292 4 62 12 346 4 186 1 233 2 348 2 299 2 19 1 71 1 301 10 23 6 303 1 114 2 150 2 237 3 304 2 153 5 154 1 155 4 158 1 77 2 201 4 161 1 206 4 314 3 369 2 127 2 40 6 90 2 259 6 324 2 93 1 329 2 
113 1 23 5 114 2 96 1 270 5 330 1 117 1 238 1 216 1 136 1 153 1 77 1 53 2 201 2 55 5 58 1 57 2 337 1 222 8 225 2 104 1 11 1 206 2 127 2 292 2 40 5 129 1 62 6 346 2 90 2 259 3 93 1 299 2 381 1 300 1 
114 1 24 1 270 2 330 1 135 1 359 1 97 1 334 1 201 1 57 2 337 1 222 2 35 1 79 1 206 1 11 1 207 1 316 1 373 1 318 1 292 1 346 1 90 2 64 1 171 1 298 1 235 1 268 1 
206 1 0 1 270 1 292 1 346 1 53 1 201 1 55 1 19 1 222 1 
23 5 114 2 270 5 2 1 127 2 40 5 62 10 90 2 259 5 55 5 57 2 299 2 337 1 222 5 225 2 
104 1 11 1 330 1 53 1 55 1 153 1 
71 2 301 2 270 2 330 3 175 1 237 2 278 1 153 4 155 3 158 2 282 1 310 1 77 2 201 2 202 1 222 2 137 4 104 2 206 2 339 4 11 3 290 1 314 4 208 1 371 1 59 1 343 2 292 1 321 1 346 2 186 1 110 1 93 2 187 1 
71 1 301 1 354 1 1 1 355 1 273 1 237 1 134 1 196 1 97 2 155 1 282 1 160 1 286 1 35 2 137 1 288 2 339 1 78 1 314 1 207 3 317 1 316 3 318 2 166 1 125 1 320 1 343 1 65 1 235 2 298 1 214 1 
206 1 23 2 270 2 292 1 40 2 62 4 74 1 346 1 259 2 77 1 53 2 93 1 201 1 55 4 222 1 
193 1 72 1 312 1 
61 1 333 1 193 1 312 1 10 1 
193 1 72 1 312 1 
193 1 72 1 312 1 
340 1 193 1 312 1 
340 1 193 1 312 1 
340 1 193 1 312 1 
193 1 312 1 
181 1 121 1 
288 4 114 1 1 2 373 1 125 2 320 4 275 1 135 1 243 3 185 1 74 1 334 1 284 2 160 2 144 1 57 1 286 2 364 1 224 4 214 8 
114 1 373 1 320 3 275 1 231 1 135 1 243 2 185 1 74 1 334 1 284 2 57 1 224 3 214 6 
288 2 114 1 1 1 125 1 320 2 127 1 243 2 212 1 284 1 160 1 299 1 286 1 57 1 364 1 224 2 225 1 214 4 
114 1 216 1 320 4 136 2 127 1 243 2 284 1 299 1 58 1 57 1 145 1 364 1 224 3 214 7 225 1 
114 3 1 2 216 2 275 1 135 1 136 2 243 9 74 1 334 2 284 5 160 2 57 3 286 2 364 4 224 11 225 2 288 4 373 2 125 2 320 12 127 2 376 1 185 1 17 1 144 2 299 2 145 1 214 23 21 1 
320 1 136 1 214 1 
216 1 224 1 214 1 
288 2 114 1 1 1 2 1 125 1 320 3 127 1 243 3 212 1 284 2 160 1 286 1 57 1 299 1 364 1 224 3 214 6 225 1 
113 1 114 2 1 1 216 1 238 1 49 1 136 1 243 2 284 1 160 1 58 1 286 1 57 2 364 1 224 6 225 2 288 2 125 1 320 6 127 2 129 1 299 2 381 1 300 1 214 12 
114 1 373 1 320 3 135 1 243 2 334 1 284 1 57 1 364 1 224 3 214 6 
288 2 1 1 373 1 125 1 320 2 275 1 243 2 185 1 334 1 284 1 144 1 160 1 286 1 364 1 224 1 21 1 214 3 
288 2 79 1 114 2 1 1 373 2 125 1 49 1 320 5 135 1 243 5 334 2 284 3 160 1 286 1 57 2 364 2 224 5 214 10 
288 2 1 1 125 1 49 1 243 1 160 1 286 1 57 1 364 1 224 2 225 1 214 2 
288 2 114 1 1 1 125 1 320 2 49 1 127 1 243 2 284 1 160 1 299 1 286 1 57 1 364 1 224 2 225 1 214 4 
288 6 1 3 373 1 125 3 320 2 49 1 243 2 334 1 247 1 284 1 144 1 160 3 286 3 364 1 224 1 21 1 214 3 
114 5 1 5 216 3 239 1 275 1 49 1 135 2 136 4 243 12 74 1 334 3 247 1 284 7 160 5 58 1 286 5 57 5 364 5 224 16 225 3 288 10 80 1 373 3 125 5 320 18 127 3 185 1 212 1 144 2 169 1 299 3 145 1 21 1 214 34 
114 1 1 1 216 1 49 1 275 1 136 1 135 1 243 2 74 1 334 1 284 2 160 1 57 1 58 1 286 1 224 4 288 2 373 1 125 1 320 4 129 1 185 1 214 8 
114 1 1 2 216 1 275 1 49 1 135 1 136 2 243 3 74 1 334 1 284 2 160 2 58 1 286 2 57 2 364 1 224 6 225 1 288 4 373 1 125 2 320 5 127 1 185 1 129 1 212 1 145 1 214 11 
113 1 114 3 1 3 216 1 238 1 275 1 49 1 135 1 136 1 243 4 74 1 334 1 284 3 160 3 58 1 286 3 57 3 364 1 224 9 225 2 288 6 373 1 125 3 320 10 127 2 185 1 129 1 212 1 144 1 299 2 381 1 300 1 214 19 
113 1 114 2 1 3 216 1 238 1 275 1 49 1 135 1 136 1 243 5 74 1 334 1 284 3 160 3 58 1 286 3 57 3 364 2 224 10 225 2 288 6 373 1 125 3 320 7 127 2 185 1 129 1 212 1 144 1 299 1 381 1 300 1 214 17 
114 1 1 1 216 1 49 1 275 1 136 1 135 1 243 2 74 1 334 1 284 2 160 1 57 1 58 1 286 1 224 4 288 2 373 1 125 1 320 4 129 1 185 1 214 8 
113 1 114 2 1 1 216 1 238 1 49 1 136 1 243 2 284 1 160 1 58 1 286 1 57 2 364 1 224 6 225 2 288 2 125 1 320 6 127 2 129 1 299 2 381 1 300 1 214 12 
113 1 114 2 1 4 238 1 216 1 275 1 49 1 135 1 136 1 243 5 74 1 334 1 284 3 160 4 58 1 286 4 57 3 364 2 224 10 225 2 288 8 373 1 125 4 320 8 127 2 185 1 129 1 212 1 144 2 299 1 381 1 300 1 214 18 
113 1 114 2 1 4 238 1 216 1 49 1 136 1 243 6 247 1 284 3 160 4 58 1 286 4 57 3 364 3 224 9 225 3 288 8 125 4 320 7 127 3 129 1 144 2 299 2 381 1 300 1 214 16 
114 1 373 3 320 4 275 1 135 1 243 6 185 2 334 3 284 3 57 1 364 3 224 3 214 7 
113 1 114 2 1 4 238 1 216 1 275 1 49 1 135 1 136 1 243 4 74 1 334 1 247 1 284 3 160 4 58 1 286 4 57 3 364 1 224 10 225 2 288 8 373 1 125 4 320 8 127 2 185 1 129 1 144 2 299 1 381 1 300 1 214 18 
97 1 207 1 317 1 316 1 6 1 107 1 326 1 
174 1 207 1 182 1 317 1 316 1 107 1 97 1 6 1 112 1 326 1 267 1 46 1 
137 1 71 1 301 1 339 1 155 1 314 1 371 1 59 1 237 1 231 1 343 1 
71 1 137 1 301 1 339 1 207 2 314 1 355 1 317 1 316 2 237 1 343 1 97 1 155 1 282 1 99 1 65 1 235 1 35 1 
301 3 355 1 237 2 276 1 97 2 155 1 158 1 99 1 282 2 35 2 248 1 103 1 137 1 339 1 314 1 207 2 369 1 317 1 316 2 343 1 65 1 235 1 268 1 
301 3 355 1 237 2 276 1 97 2 307 1 155 1 158 1 99 1 282 2 35 2 248 1 103 1 137 2 339 2 314 2 207 2 369 1 317 1 316 2 343 1 142 1 235 1 268 1 
301 1 24 1 330 1 359 1 97 1 158 1 53 1 55 1 35 1 137 1 339 1 11 1 314 1 207 1 316 1 15 1 318 1 210 1 171 1 298 1 235 1 268 1 
71 1 137 3 11 2 339 3 301 4 314 3 369 1 330 2 150 1 15 1 237 1 153 1 343 1 155 1 282 1 158 1 142 1 324 1 348 1 53 1 55 1 103 1 
137 1 339 1 155 1 314 1 325 1 343 1 
71 2 137 6 339 7 301 3 314 7 303 1 331 1 237 2 319 1 342 1 51 1 343 2 155 3 282 1 310 1 325 1 67 1 68 1 100 1 202 1 226 1 
301 1 354 1 114 1 355 1 1 2 237 1 134 2 275 1 135 1 196 1 243 2 97 1 29 1 74 1 155 1 156 1 334 1 282 1 99 1 284 2 160 2 57 1 286 2 100 1 35 1 224 3 137 1 366 1 78 2 288 4 339 1 165 1 207 2 314 1 317 2 106 1 316 2 373 1 125 2 320 3 343 1 185 1 258 1 65 1 295 1 235 1 214 6 
71 1 301 2 270 1 0 1 330 3 150 1 304 1 153 2 53 1 55 1 201 2 222 1 137 1 104 1 339 1 206 2 11 3 289 1 314 1 15 1 230 1 292 2 346 2 186 1 324 1 348 1 19 1 329 1 
137 2 339 2 301 2 314 2 303 1 237 1 343 1 154 1 155 2 282 1 348 1 325 1 100 1 
71 1 137 4 339 4 301 1 314 4 371 1 59 1 237 1 343 1 155 1 142 1 100 1 351 1 
137 2 339 2 301 1 314 2 175 1 237 1 217 1 343 1 321 1 155 2 158 1 282 1 310 1 202 1 
137 1 71 1 339 1 38 1 155 1 294 1 314 1 170 1 287 1 343 1 
137 2 301 1 339 2 155 1 314 2 237 1 331 1 9 1 68 1 100 1 343 1 
71 1 137 4 339 5 301 3 314 5 371 1 59 1 237 2 342 1 343 2 51 1 155 2 158 1 100 1 68 1 351 1 
71 1 137 4 339 5 301 3 314 5 371 1 59 1 237 2 343 2 51 1 155 2 158 1 54 1 100 1 68 1 351 1 
71 1 137 1 301 1 339 1 207 2 314 1 355 1 317 1 316 2 237 1 343 1 97 1 307 1 155 1 282 1 99 1 235 1 35 1 
137 1 339 1 301 1 314 1 303 1 237 1 343 1 155 2 158 1 282 1 310 1 202 1 226 1 
257 1 317 1 56 1 203 1 344 1 
11 2 138 1 115 1 317 1 330 2 150 1 276 1 230 1 5 1 344 2 377 1 257 2 53 1 55 1 56 1 248 1 203 2 268 1 328 1 
207 1 316 1 87 1 97 1 257 1 92 1 363 1 56 1 203 1 
115 1 56 1 328 1 
197 1 272 1 231 1 177 1 
269 1 197 1 256 1 272 1 124 1 336 1 177 1 
353 1 256 1 25 1 
269 1 132 1 228 1 272 1 124 3 177 1 178 1 197 1 256 3 168 2 336 1 236 1 
322 1 269 1 197 1 13 1 256 2 272 1 124 2 336 1 177 1 
269 1 38 1 124 1 272 1 152 1 178 1 256 1 246 1 336 1 170 1 189 1 
178 1 269 1 256 1 272 1 124 1 336 1 177 1 
178 1 269 1 197 1 256 1 124 1 336 1 177 2 
269 2 272 1 124 2 177 1 306 1 178 1 256 2 336 2 18 1 311 1 
269 1 13 2 124 3 272 2 358 1 177 1 178 1 197 1 256 3 336 1 262 1 8 1 189 1 
269 1 38 2 13 1 272 1 124 2 152 1 177 1 178 1 197 1 256 2 283 1 336 1 170 1 287 1 350 1 
269 2 13 2 124 4 272 2 374 1 177 1 178 1 322 1 197 1 256 4 336 2 262 1 189 1 
178 1 269 1 197 1 256 1 272 1 124 1 336 1 177 1 
269 1 132 1 13 2 124 4 272 3 177 2 197 2 256 4 168 1 143 1 336 1 262 1 236 1 189 1 
269 1 13 1 116 1 140 1 272 1 124 2 177 1 178 1 167 1 197 1 256 2 336 1 
269 1 132 1 272 1 124 3 177 1 178 1 197 1 256 3 168 2 336 1 297 1 236 2 
22 2 272 2 349 1 264 1 
293 1 178 1 269 1 256 1 124 1 336 1 
178 1 269 1 197 1 13 1 256 2 272 1 124 2 336 1 358 1 177 1 
332 1 
178 1 269 1 197 1 256 1 272 1 124 1 336 1 177 1 
269 1 13 1 124 3 272 1 358 1 177 1 178 1 197 1 256 3 168 1 336 1 
143 1 272 1 262 1 189 1 
272 1 177 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 158 186 209 362 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 1 49 2 118 1 329 1 52 1 147 3 356 1 295 6 57 2 32 2 162 1 272 9 241 5 370 1 166 1 223 2 67 1 66 1 277 9 18 1 169 1 91 1 69 4 307 2 94 2 311 1 115 1 350 2 
287 1 49 2 118 1 329 1 52 1 147 3 356 1 295 6 57 2 32 2 162 1 272 9 241 5 370 1 166 1 223 2 67 1 66 1 277 9 18 1 169 1 91 1 69 4 307 2 311 1 94 2 115 1 350 2 
287 1 49 2 118 1 329 1 52 1 147 4 356 1 295 7 57 2 32 2 162 1 272 10 241 6 370 1 166 1 223 2 67 1 66 1 277 10 18 1 169 1 91 1 69 5 307 2 311 1 94 2 115 1 350 2 
287 1 49 2 118 1 329 1 52 1 147 2 356 1 295 4 57 2 32 2 272 7 241 4 370 1 166 1 223 2 67 1 66 1 277 7 18 1 169 1 91 1 69 3 307 2 311 1 94 1 115 1 350 2 
49 1 272 4 118 1 329 1 241 3 147 1 67 1 223 1 66 1 277 4 91 1 295 3 69 2 57 1 32 1 307 1 162 1 94 2 
86 1 49 1 272 2 241 1 329 1 52 1 152 1 67 1 223 1 277 2 169 1 91 1 57 1 307 1 284 1 350 1 
272 3 329 1 241 2 370 1 147 1 67 1 223 2 277 3 91 1 69 1 295 1 307 2 350 1 
49 1 118 1 329 1 147 3 357 1 295 7 57 1 32 1 162 1 272 9 241 5 370 1 223 2 67 1 66 1 277 9 91 1 69 4 304 1 307 2 311 1 94 2 115 1 350 1 
49 1 118 1 329 1 147 3 357 1 295 7 57 1 32 1 162 1 272 9 241 5 370 1 223 2 67 1 66 1 277 9 91 1 69 4 304 1 307 2 311 1 94 2 115 1 350 1 
58 1 75 1 121 1 
367 1 75 1 61 2 
164 2 377 2 38 2 253 1 322 2 21 2 229 2 324 1 
141 2 148 1 120 1 4 2 259 1 29 1 5 1 6 1 181 1 264 1 319 1 294 1 123 1 161 1 82 1 33 1 60 1 238 1 239 1 164 2 339 2 15 1 276 1 38 3 322 2 278 2 196 1 324 1 154 1 198 1 377 3 138 1 173 1 227 2 253 1 21 2 229 2 
164 1 377 1 38 1 253 1 194 1 109 1 322 1 163 1 21 1 229 1 
36 1 2 1 26 1 38 1 75 1 121 1 76 1 17 1 136 1 377 1 347 1 21 1 163 1 363 1 
164 1 36 1 26 1 38 1 75 1 121 1 76 1 17 2 322 1 377 1 347 2 229 1 21 1 163 1 363 1 
150 1 142 1 347 1 17 1 285 1 
150 1 320 1 347 2 75 1 121 1 17 2 203 1 285 1 
150 1 347 1 17 1 
164 1 38 1 194 1 109 1 17 1 322 1 377 1 347 1 253 1 163 1 229 1 21 1 285 1 116 1 
75 1 
150 1 320 1 347 2 75 1 121 1 17 2 285 1 159 1 
150 2 337 2 145 1 75 1 121 1 16 1 17 5 279 1 281 1 30 2 265 1 213 1 320 1 200 1 347 5 228 1 125 2 13 1 285 2 
58 1 324 1 
216 1 164 1 38 2 291 1 322 1 324 2 377 2 21 2 229 1 
345 1 221 1 40 1 
141 1 330 1 148 1 120 1 38 1 278 1 324 1 5 1 154 1 294 1 123 1 377 1 227 1 82 1 60 1 238 1 
343 1 164 3 377 3 38 3 322 3 229 1 21 3 324 1 
164 1 377 1 38 1 109 1 322 1 163 1 21 1 
216 1 164 1 377 1 38 1 322 1 291 1 163 1 21 1 229 1 
328 1 141 1 26 1 120 1 148 1 76 1 291 1 4 1 259 1 5 1 6 1 294 1 264 1 123 1 161 1 82 1 33 1 163 1 60 1 238 1 363 1 239 1 164 3 36 1 339 2 15 1 276 1 38 4 322 3 17 1 278 1 324 1 154 1 198 1 343 1 111 1 377 4 138 1 347 1 227 1 253 1 93 1 229 2 21 3 
343 1 164 1 183 1 377 2 2 1 38 2 322 1 21 2 324 1 
328 1 164 3 36 1 26 1 38 3 75 1 76 1 291 1 17 1 322 3 343 2 111 1 377 3 347 1 229 1 163 1 21 3 363 1 48 1 
164 2 38 2 40 1 291 1 322 2 343 1 345 1 377 2 229 1 21 2 
141 1 148 1 120 1 38 1 278 1 324 1 5 1 154 1 294 1 123 1 377 1 227 1 82 1 60 1 238 1 
141 1 148 1 120 1 38 1 278 1 324 1 5 1 154 1 282 1 377 1 227 1 82 1 60 1 72 1 238 1 
73 1 158 1 259 2 4 4 6 1 181 2 161 1 334 1 299 1 33 1 84 1 217 1 239 1 273 1 189 1 221 2 339 2 276 1 40 2 197 1 373 1 155 1 345 2 138 1 
164 1 377 1 206 1 26 1 38 1 322 1 163 1 21 1 
141 1 164 1 120 1 148 1 38 2 40 1 322 1 278 1 154 1 5 1 343 1 294 1 111 1 123 1 377 2 227 1 82 1 21 1 60 1 238 1 
164 4 2 1 38 5 322 4 291 1 302 1 324 1 343 2 111 1 183 1 44 1 377 5 21 5 229 1 
164 2 206 1 377 2 38 2 109 1 322 2 163 1 21 2 
149 1 310 1 
149 1 310 1 
8 1 341 1 
8 1 341 1 
8 1 341 1 
378 1 149 1 310 1 
378 1 149 1 310 1 
45 1 149 1 310 1 
8 1 88 1 149 2 310 2 341 1 342 1 
378 1 149 1 310 1 
149 1 132 1 310 1 
149 1 132 1 310 1 
149 1 132 1 310 1 
88 1 190 2 119 1 143 1 151 2 289 3 153 1 149 2 75 1 68 1 17 2 122 1 211 1 306 1 347 2 310 2 46 2 12 2 140 2 
22 1 119 1 289 1 255 1 149 1 317 1 10 1 298 1 12 1 164 2 240 1 190 1 151 1 64 1 38 2 322 2 17 1 324 1 377 2 45 1 347 1 310 1 21 2 140 1 
49 1 57 1 32 1 
49 1 57 1 284 1 
271 1 57 3 32 2 92 1 233 1 284 1 
271 1 57 2 32 1 220 1 92 1 284 1 
271 2 57 2 32 1 92 1 284 1 
96 2 255 1 353 1 158 1 121 1 75 2 56 1 30 1 10 1 31 1 299 1 334 1 213 2 320 1 186 1 125 1 101 1 61 3 35 2 150 1 240 1 367 1 337 1 222 2 130 1 17 5 373 1 279 3 112 1 347 5 228 1 285 4 
0 1 142 5 146 1 158 3 121 1 75 5 333 1 30 2 10 4 299 3 334 3 213 6 320 1 359 1 266 1 186 3 125 2 13 1 237 5 101 2 61 9 35 6 150 6 367 3 337 2 222 6 130 1 17 9 373 3 279 8 199 1 112 2 347 9 228 1 285 7 
96 1 158 1 121 1 75 3 56 1 30 1 10 1 31 1 299 1 334 1 213 2 125 1 186 1 13 1 101 1 61 4 35 2 367 2 337 1 222 2 17 3 373 1 279 3 112 1 347 3 285 2 
96 2 158 2 121 1 75 4 56 1 30 1 10 2 31 1 299 2 334 2 213 4 359 1 266 1 125 1 186 2 13 1 101 1 61 7 35 4 367 3 337 1 222 4 17 4 373 2 279 5 199 1 112 1 347 4 285 3 
127 1 58 1 82 1 
254 1 82 1 
165 1 
82 1 154 1 
127 2 82 3 133 1 258 1 154 1 238 1 
82 1 154 1 238 1 
82 1 245 1 
84 2 288 1 189 3 314 1 179 2 77 1 259 3 4 7 3 1 373 1 244 1 181 4 358 1 184 1 334 1 71 1 201 1 
84 2 288 1 189 3 314 1 179 2 77 1 259 3 4 7 3 1 373 1 244 1 181 4 358 1 184 1 334 1 71 1 201 1 
84 2 288 1 189 3 314 1 179 2 256 1 77 1 259 3 4 7 3 1 373 1 244 1 358 1 181 4 184 1 334 1 71 1 201 1 
288 5 314 2 179 3 158 3 77 2 3 1 259 15 4 31 6 1 358 1 181 16 184 1 161 1 334 4 299 3 186 3 33 1 268 1 84 5 105 1 274 1 189 10 218 3 369 1 371 4 339 2 244 1 373 4 138 1 71 2 20 1 201 2 202 1 114 1 
156 1 288 1 314 1 179 2 77 1 4 9 259 4 6 2 181 5 358 1 184 1 161 2 334 1 33 2 84 3 189 4 369 1 339 4 373 1 244 1 251 1 138 2 71 1 201 1 
49 1 141 1 329 1 27 1 148 1 233 1 5 1 7 1 295 1 297 1 57 2 32 1 336 1 14 1 272 2 241 1 39 1 223 1 67 1 278 1 277 2 167 1 135 1 91 1 247 1 307 1 227 1 283 1 284 1 350 1 
49 1 141 1 329 1 54 1 233 1 27 1 148 1 5 1 7 1 295 2 297 1 57 2 32 1 215 1 14 1 272 3 241 1 372 1 39 1 223 1 278 1 277 3 167 1 135 1 91 1 307 1 227 1 283 1 284 1 350 1 
141 1 49 1 329 1 148 1 233 1 5 1 7 1 295 2 57 2 32 1 215 1 14 1 272 2 241 1 372 1 39 1 278 1 277 2 167 1 135 1 91 1 227 1 283 1 284 1 350 1 
141 1 177 1 54 1 148 1 332 1 293 1 5 1 296 1 212 1 82 1 60 1 272 1 39 2 223 1 278 1 277 1 167 2 154 1 280 1 307 1 227 1 283 2 350 2 
49 1 141 1 27 1 148 1 233 1 5 1 7 1 297 1 57 2 32 1 215 1 14 1 272 1 39 1 223 1 67 1 278 1 277 1 167 1 135 1 247 1 307 1 227 1 283 1 284 1 350 1 
262 1 
141 2 1 2 177 1 2 1 148 1 332 1 98 2 5 1 100 1 60 2 61 2 104 2 150 6 337 1 62 1 17 5 154 1 248 1 19 1 112 1 347 5 21 1 113 1 315 2 25 2 26 1 121 1 75 2 76 1 80 4 30 1 124 1 320 3 213 2 81 2 125 1 82 1 163 1 363 1 34 1 87 1 367 2 36 1 38 1 41 1 278 2 168 1 279 2 136 1 171 1 377 1 172 2 379 1 227 2 228 1 
150 2 87 1 36 1 25 1 26 1 2 1 38 1 76 1 17 3 168 1 80 2 136 1 159 1 171 1 248 1 377 1 320 1 347 3 163 1 21 1 363 1 34 1 
315 1 2 1 26 1 76 1 121 1 75 1 80 3 159 1 320 1 163 1 363 1 34 1 150 1 87 1 36 1 38 1 17 3 168 1 136 1 248 1 171 1 377 1 347 3 21 1 
315 1 25 1 2 1 26 1 76 1 121 1 75 1 80 3 159 1 320 1 81 1 163 1 363 1 34 1 87 1 150 2 36 1 38 1 17 3 168 1 136 1 248 1 171 1 377 1 347 3 21 1 
1 2 2 1 98 2 104 2 150 7 337 1 17 5 248 1 344 1 347 5 21 1 113 1 315 4 24 1 25 4 26 1 76 1 121 5 75 5 80 6 79 1 159 1 30 1 124 1 320 3 213 1 81 4 125 1 163 1 214 1 126 1 363 1 34 1 87 1 367 2 36 1 38 1 168 1 136 1 279 1 171 1 377 1 172 2 228 1 
1 2 2 1 98 2 61 2 104 2 150 4 337 1 17 4 248 1 347 4 21 1 113 1 315 2 25 2 26 1 76 1 75 2 121 1 80 4 30 1 124 1 213 1 320 2 81 2 125 1 163 1 363 1 34 1 87 1 367 2 36 1 38 1 41 1 168 1 136 1 279 1 171 1 377 1 172 2 228 1 
315 2 1 2 25 2 2 1 26 1 75 1 121 1 98 2 76 1 80 4 79 1 30 1 124 1 320 2 213 1 81 2 125 1 163 1 214 1 363 1 34 1 104 2 150 4 87 1 367 2 337 1 36 1 38 1 17 4 168 1 279 1 136 1 248 1 171 1 344 1 377 1 172 2 347 4 228 1 21 1 113 1 
315 2 1 2 25 2 2 1 26 1 75 1 121 1 98 2 76 1 80 4 79 1 30 1 124 1 320 2 213 1 81 2 125 1 163 1 214 1 363 1 34 1 104 2 150 4 87 1 367 2 337 1 36 1 38 1 17 4 168 1 279 1 136 1 248 1 171 1 344 1 377 1 172 2 347 4 228 1 21 1 113 1 
204 2 315 2 1 2 25 2 2 1 26 1 55 1 75 1 121 1 76 1 80 4 30 1 124 1 320 2 213 1 81 2 125 1 163 1 363 1 61 2 34 1 104 2 150 4 87 1 337 1 36 1 107 2 38 1 17 4 168 1 323 1 279 1 136 1 248 1 171 1 344 1 377 1 347 4 174 1 228 1 21 1 
1 2 315 3 24 1 25 3 2 1 26 1 75 1 121 1 98 2 76 1 79 1 80 5 30 1 124 1 320 2 213 1 81 3 125 1 163 1 214 1 363 1 34 1 104 2 87 1 150 5 367 2 337 1 36 1 38 1 17 4 168 1 279 1 136 1 248 1 171 1 344 1 377 1 172 2 347 4 228 1 21 1 113 1 
1 2 315 3 24 1 25 3 2 1 26 1 75 1 121 1 98 2 76 1 79 1 80 5 30 1 124 1 320 2 213 1 81 3 125 1 163 1 214 1 363 1 34 1 104 2 87 1 150 5 367 2 337 1 36 1 38 1 17 4 168 1 279 1 136 1 248 1 171 1 344 1 377 1 172 2 347 4 228 1 21 1 113 1 
1 2 2 1 55 1 61 2 104 2 150 4 337 1 107 2 17 4 248 1 347 4 21 1 204 2 315 2 25 2 26 1 76 1 121 1 75 1 80 4 30 1 124 1 213 1 320 2 81 2 125 1 163 1 363 1 34 1 87 1 36 1 38 1 41 1 168 1 136 1 279 1 171 1 377 1 228 1 
179 1 77 1 4 6 259 3 6 1 358 1 181 3 184 1 161 1 58 1 334 1 33 1 84 2 239 1 189 2 221 1 339 2 276 1 40 1 244 1 373 1 324 2 155 1 345 1 138 1 201 1 
51 1 288 1 158 2 259 6 4 14 6 2 181 8 161 2 334 2 299 1 186 2 33 2 84 1 102 1 188 1 239 2 189 2 218 3 321 1 371 3 221 11 339 4 15 1 276 1 40 11 373 1 324 1 327 1 345 4 138 2 173 1 202 1 114 1 
141 1 117 1 120 1 148 1 330 1 316 1 259 1 4 2 5 1 6 1 294 1 263 1 181 1 123 1 161 1 82 1 60 1 33 1 238 1 239 1 164 1 339 2 276 1 38 2 15 1 278 1 322 1 324 1 154 1 343 1 111 1 327 1 345 1 377 2 138 1 227 1 173 1 21 1 
141 3 288 4 179 1 148 2 4 20 292 2 5 2 6 3 294 2 181 10 184 1 334 3 299 2 300 2 186 2 60 1 238 2 239 3 189 8 339 6 15 1 244 1 198 2 154 2 343 1 111 1 345 7 201 1 21 1 120 2 158 2 77 1 259 10 358 1 123 2 161 3 361 1 82 2 33 3 215 1 84 4 164 1 368 1 221 7 38 3 276 3 131 2 40 7 278 3 322 1 373 3 374 2 324 2 170 1 327 1 377 3 138 3 173 1 227 3 
141 8 177 1 148 2 332 1 28 1 4 2 259 1 29 2 5 2 6 2 210 1 181 1 161 2 360 1 82 3 60 2 33 2 215 1 336 1 164 1 239 2 338 1 339 4 108 1 38 1 276 2 15 1 322 1 278 7 154 2 225 1 343 1 155 1 377 1 138 2 227 8 173 1 21 1 286 1 
351 1 158 1 291 1 4 3 259 2 6 1 181 1 161 1 334 1 299 1 186 1 33 1 84 1 164 1 239 1 189 1 221 1 339 2 276 1 38 1 40 1 322 1 373 1 327 1 345 1 377 1 138 1 229 1 21 1 
217 1 239 1 189 1 288 1 221 1 339 2 276 1 158 1 40 1 4 2 6 1 181 2 155 1 161 1 345 1 334 1 138 1 33 1 
84 1 239 1 189 1 221 1 339 2 276 1 40 1 4 2 197 1 259 2 373 1 6 1 155 1 161 1 345 1 299 1 138 1 33 1 
84 1 239 1 189 2 288 1 221 2 339 2 276 1 158 1 40 2 259 2 4 4 373 1 6 1 181 2 155 1 161 1 299 1 345 2 334 1 138 1 186 1 33 1 
217 1 239 1 189 1 288 1 221 1 339 2 276 1 158 1 40 1 4 2 6 1 181 2 161 1 345 1 334 1 138 1 33 1 286 1 
84 1 239 1 189 1 221 1 339 2 276 1 40 1 4 2 197 1 259 2 373 1 6 1 161 1 345 1 299 1 138 1 33 1 286 1 
84 1 239 1 189 2 288 1 221 2 339 2 276 1 158 1 40 2 259 2 4 4 373 1 6 1 181 2 161 1 299 1 345 2 334 1 138 1 186 1 33 1 286 1 
84 1 239 1 189 2 288 1 221 2 339 2 276 1 158 1 40 2 259 2 4 4 373 1 6 1 181 2 161 1 299 1 345 2 334 1 138 1 186 1 33 1 
141 1 120 1 148 1 4 2 259 1 5 1 6 1 181 1 294 1 123 1 161 1 82 1 60 1 33 1 238 1 239 1 339 2 38 1 276 1 15 1 278 1 324 1 154 1 198 1 377 1 138 1 173 1 227 1 
141 1 178 1 120 1 148 1 4 2 259 1 5 1 6 1 181 1 161 1 82 1 60 1 33 1 238 1 239 1 339 2 38 1 276 1 15 1 278 1 324 1 154 1 282 1 377 1 138 1 173 1 227 1 72 1 
84 1 239 1 189 2 288 1 221 2 339 2 276 1 158 1 40 2 259 2 4 4 373 1 6 1 181 2 327 1 161 1 299 1 345 2 334 1 138 1 186 1 33 1 
141 1 288 1 120 1 148 1 158 1 259 2 4 4 292 1 5 1 6 1 181 2 294 1 123 1 161 1 299 1 334 1 186 1 82 1 33 1 238 1 84 1 336 1 239 1 189 2 221 2 339 2 38 1 276 1 40 2 278 1 373 1 198 1 154 1 345 2 377 1 138 1 227 1 
288 1 207 1 158 1 291 1 259 1 4 3 6 1 181 2 161 1 299 1 334 1 186 1 33 1 164 1 239 1 189 1 221 1 339 2 276 1 38 1 40 1 322 1 373 1 327 1 377 1 345 1 138 1 229 1 21 1 
313 1 288 2 205 1 158 2 259 7 4 13 209 1 6 2 181 6 160 1 235 1 161 2 334 2 299 2 186 2 33 2 362 1 84 2 106 1 189 4 218 1 371 2 339 4 373 2 251 1 138 2 175 1 202 1 114 1 
313 2 288 1 205 2 158 2 208 1 259 9 4 20 318 1 6 3 261 1 181 11 160 1 235 3 161 3 334 2 299 1 186 2 33 3 84 1 189 2 218 2 369 2 219 1 371 2 339 6 134 1 373 1 305 1 251 1 250 1 138 3 175 1 114 2 
313 1 288 1 205 1 158 1 259 5 4 9 6 2 181 4 160 1 235 1 161 2 334 1 299 1 186 1 33 2 84 1 106 1 189 2 218 1 371 2 339 4 134 1 373 1 251 1 138 2 175 1 202 1 114 1 
313 1 288 1 205 1 158 1 259 5 4 9 6 2 181 4 160 1 235 1 161 2 334 1 299 1 186 1 33 2 84 1 106 1 189 2 218 1 371 2 339 4 134 1 373 1 251 1 138 2 175 1 202 1 114 1 
313 1 288 6 205 1 179 1 158 6 208 1 77 1 259 22 4 46 318 1 6 2 358 1 261 1 181 24 184 1 160 1 235 3 161 2 334 7 299 6 186 6 33 2 84 6 189 12 218 4 369 1 219 1 321 2 371 4 339 4 134 1 244 1 373 7 305 1 250 1 251 1 138 2 201 1 175 1 202 2 114 2 
88 1 190 1 143 1 151 1 153 1 149 1 310 1 140 1 12 1 83 1 
45 1 64 1 
103 1 190 1 151 1 180 1 65 1 149 1 310 1 140 1 12 1 
88 1 119 1 190 1 143 1 151 1 289 2 153 1 149 1 75 1 68 1 17 1 122 1 211 1 347 1 310 1 46 1 12 1 140 1 
88 1 119 1 190 1 143 1 151 1 289 2 153 1 149 1 75 1 68 1 17 1 122 1 211 1 347 1 310 1 46 1 12 1 140 1 
88 1 119 1 190 1 143 1 151 1 289 2 153 1 149 1 75 1 68 1 17 1 122 1 211 1 347 1 310 1 46 1 12 1 140 1 
85 1 378 1 342 1 
85 1 378 1 342 1 
232 1 132 1 
232 1 132 1 342 1 
22 1 298 1 
22 1 289 1 255 1 149 1 317 1 10 1 298 1 11 1 12 1 164 2 240 1 190 1 151 1 64 1 38 2 68 1 17 1 322 2 324 1 377 2 45 1 347 1 310 1 46 1 21 2 140 1 285 1 
85 1 378 1 
232 1 132 1 342 1 
141 2 157 1 148 1 355 1 4 2 259 1 29 2 5 1 260 1 6 1 210 1 181 1 182 1 161 1 82 1 33 1 239 1 339 2 108 1 276 1 38 2 15 1 278 2 42 1 154 1 327 1 377 2 138 1 227 2 173 1 21 2 
49 1 141 2 336 1 14 1 233 1 148 1 278 2 5 1 7 1 325 1 297 1 57 2 32 1 227 2 283 1 335 1 284 1 215 1 47 1 
49 1 141 1 14 1 233 1 148 1 278 1 5 1 7 1 297 1 57 2 32 1 227 1 283 1 335 1 284 1 215 1 312 1 
141 1 177 1 148 1 332 1 278 1 293 1 5 1 154 1 227 1 82 1 60 1 283 1 47 1 366 1 
49 1 141 1 14 1 233 1 148 1 278 1 5 1 7 1 325 1 297 1 57 2 32 1 227 1 283 1 335 1 284 1 215 1 47 1 
97 1 
281 1 58 1 213 1 75 1 121 1 16 1 279 1 
75 2 98 1 121 1 30 1 213 1 320 1 125 1 61 1 150 1 367 1 337 1 17 1 279 1 172 1 347 1 228 1 113 1 
141 3 53 2 148 3 234 1 5 4 100 1 185 2 334 2 299 2 186 2 60 1 238 3 61 12 336 1 150 5 337 4 191 1 16 1 17 5 154 3 246 2 245 2 249 1 112 2 347 5 254 3 158 2 121 2 75 8 257 2 258 1 30 4 320 3 213 8 125 4 82 10 267 2 35 6 367 6 36 2 127 2 128 1 222 6 278 3 374 2 373 2 90 2 279 9 137 2 281 1 226 1 227 3 228 4 176 2 
158 2 257 1 75 5 208 1 121 2 100 1 261 1 30 2 334 2 299 2 320 1 213 5 125 2 186 2 236 1 267 2 61 6 35 5 150 1 337 2 367 3 218 1 219 1 371 1 192 1 222 5 17 1 373 2 279 8 305 1 250 1 112 1 347 1 228 2 114 1 
230 1 257 1 77 1 79 1 30 1 334 2 213 2 125 1 163 1 267 2 164 1 337 1 38 1 194 1 109 1 17 1 322 1 244 1 373 1 279 2 377 1 347 1 201 1 228 1 253 1 229 1 21 1 116 1 
337 1 16 1 121 1 75 1 279 1 30 1 281 1 213 1 228 1 125 1 
35 5 367 5 158 2 222 5 257 1 75 5 374 1 373 2 279 5 334 2 299 2 213 5 186 2 267 2 61 10 
150 1 320 1 347 1 75 1 121 1 17 1 
141 4 177 1 148 2 332 1 5 3 234 1 100 2 30 2 213 2 320 2 125 2 82 2 60 2 13 1 238 1 270 1 150 4 337 2 278 4 17 3 224 1 43 1 154 2 279 2 303 1 226 2 326 1 376 1 19 1 379 1 112 2 347 3 227 4 228 1 
141 1 148 1 120 1 4 1 259 1 5 1 6 1 264 1 294 1 123 1 161 1 82 1 33 1 60 1 238 1 164 2 239 1 339 2 15 1 38 3 276 1 278 1 322 2 324 1 198 1 154 1 377 3 138 1 227 1 253 1 21 2 229 2 
35 2 367 2 337 1 179 1 222 2 121 2 75 4 279 1 100 1 30 1 213 2 112 1 228 1 125 1 61 4 
349 1 140 1 12 1 
349 1 140 1 12 1 
22 1 143 1 252 1 140 1 12 1 
349 1 140 1 12 1 
37 1 140 1 12 1 
37 1 140 1 12 1 
37 1 140 1 12 1 
140 1 12 1 
149 1 310 1 
84 2 288 1 189 3 179 1 369 1 339 4 77 1 259 4 4 8 373 1 244 1 6 2 181 4 358 1 184 1 161 2 334 1 138 2 201 1 33 2 
84 2 189 2 179 1 77 1 259 3 4 6 244 1 373 1 358 1 181 3 184 1 58 1 334 1 201 1 
84 1 189 2 288 1 331 1 339 2 158 1 259 2 4 4 373 1 6 1 181 2 161 1 299 1 334 1 138 1 186 1 33 1 
84 1 288 1 189 2 218 1 371 2 158 1 259 4 4 7 373 1 181 3 299 1 334 1 186 1 202 1 114 1 
288 4 179 1 158 2 77 2 4 23 259 12 6 2 358 1 181 11 184 1 161 2 334 3 299 2 186 2 33 2 102 1 84 5 189 9 218 2 369 2 371 2 321 1 339 4 129 1 244 1 373 3 138 2 201 2 202 1 
371 1 4 1 259 1 
181 1 218 1 4 1 
84 2 288 1 189 3 339 2 331 1 158 1 259 3 4 6 374 1 373 1 6 1 181 3 161 1 334 1 299 1 138 1 186 1 33 1 
288 1 158 2 208 1 4 12 259 6 6 1 181 6 261 1 161 1 334 2 299 2 186 2 33 1 84 1 189 2 218 1 371 1 219 1 339 2 373 2 305 1 251 1 250 1 138 1 114 1 
84 1 189 2 288 1 77 1 4 6 259 3 244 1 373 1 181 3 334 1 201 1 
84 1 288 1 189 2 369 1 129 1 339 2 77 1 259 2 4 3 6 1 181 1 358 1 184 1 161 1 138 1 201 1 33 1 
84 3 230 1 189 5 288 2 339 2 77 2 4 10 259 5 244 1 373 2 6 1 181 5 161 1 334 2 251 1 138 1 201 2 33 1 
288 1 189 1 339 2 158 1 4 2 6 1 181 2 161 1 334 1 251 1 138 1 33 1 
84 1 189 2 288 1 339 2 158 1 259 2 4 4 373 1 6 1 181 2 161 1 299 1 334 1 251 1 138 1 186 1 33 1 
84 1 106 1 189 2 288 1 369 1 129 1 339 6 77 1 259 2 4 3 6 3 181 1 161 3 251 1 138 3 201 1 33 3 
288 5 179 1 331 1 158 3 77 3 259 18 4 34 6 5 358 1 181 16 184 1 161 5 334 5 299 3 186 3 33 5 268 1 84 7 105 1 106 1 189 12 218 3 369 2 371 4 129 1 339 10 244 2 373 5 251 1 138 5 20 1 201 3 202 1 114 1 
179 1 77 1 4 8 259 4 6 1 181 4 358 1 184 1 161 1 334 1 33 1 84 2 189 2 218 1 371 1 339 2 373 1 244 1 305 1 251 1 138 1 201 1 114 1 
288 1 179 1 331 1 158 1 77 1 4 11 259 5 6 2 358 1 181 6 184 1 161 2 334 2 186 1 33 2 84 2 189 3 218 1 371 2 339 4 373 1 244 1 305 1 251 1 138 2 201 1 202 1 114 1 
288 1 179 1 331 1 158 2 208 1 77 1 4 19 259 10 6 3 358 1 261 1 181 9 184 1 161 3 334 3 299 2 186 2 33 3 84 3 189 4 218 1 369 1 371 1 219 1 339 6 244 1 373 3 305 1 251 1 250 1 138 3 201 1 114 1 
288 2 179 1 331 1 158 2 208 1 77 1 4 17 259 7 6 3 358 1 181 10 261 1 184 1 161 3 334 3 299 1 186 2 33 3 84 3 189 5 218 1 369 1 371 1 219 1 339 6 244 1 373 2 305 1 251 1 250 1 138 3 201 1 114 1 
179 1 77 1 4 8 259 4 6 1 181 4 358 1 184 1 161 1 334 1 33 1 84 2 189 2 218 1 371 1 339 2 373 1 244 1 305 1 251 1 138 1 201 1 114 1 
288 1 158 2 208 1 4 12 259 6 6 1 181 6 261 1 161 1 334 2 299 2 186 2 33 1 84 1 189 2 218 1 371 1 219 1 339 2 373 2 305 1 251 1 250 1 138 1 114 1 
288 2 179 1 331 1 158 2 208 1 77 1 4 18 259 8 6 4 358 1 261 1 181 10 184 1 161 4 334 3 299 1 186 2 33 4 84 3 189 5 218 1 369 2 219 1 371 1 339 8 244 1 373 2 305 1 251 1 250 1 138 4 201 1 114 1 
288 3 158 3 208 1 4 16 259 7 6 4 261 1 181 9 161 4 334 3 299 2 186 3 33 4 84 3 106 1 189 6 218 1 369 2 219 1 371 1 339 8 373 2 305 1 251 1 250 1 138 4 114 1 
84 3 189 6 288 3 77 3 259 4 4 7 373 1 244 1 358 2 181 3 184 1 334 1 201 3 
288 1 179 1 158 2 208 1 77 1 4 18 259 8 6 4 358 1 261 1 181 10 184 1 161 4 334 3 299 1 186 2 33 4 84 3 106 1 189 4 218 1 369 2 219 1 371 1 339 8 244 1 373 2 305 1 251 1 250 1 138 4 201 1 114 1 
183 1 377 1 2 1 38 1 21 1 340 1 324 1 
2 1 38 1 340 1 324 1 375 1 183 1 377 1 308 1 59 1 301 1 21 1 269 1 
141 1 177 1 58 1 148 1 332 1 227 1 82 1 278 1 60 1 5 1 154 1 
141 1 164 1 120 1 148 1 38 2 322 1 278 1 324 1 154 1 5 1 343 1 123 1 377 2 227 1 82 1 21 1 60 1 238 1 
141 1 26 1 148 1 120 1 76 1 5 1 123 1 82 3 163 1 238 2 164 1 38 2 278 1 322 2 324 1 154 2 245 1 343 1 226 1 377 2 227 1 21 2 176 1 
141 2 95 1 26 1 148 1 120 1 76 1 5 1 82 3 163 1 238 2 164 1 38 2 278 2 322 2 324 1 154 2 245 1 343 1 226 1 377 2 227 2 21 2 176 1 72 1 
141 3 95 1 254 1 148 1 121 1 75 1 5 1 82 4 60 1 238 1 365 1 150 1 36 1 127 1 278 3 17 2 154 1 245 1 226 1 347 2 380 1 227 3 176 1 
141 3 95 1 150 1 36 1 127 1 254 1 148 1 75 1 121 1 17 2 278 3 245 1 154 1 5 1 246 1 226 1 347 2 227 3 82 4 60 1 176 1 238 1 
141 1 338 1 148 1 227 1 278 1 5 1 
336 1 141 7 338 1 148 2 108 1 28 1 278 6 195 1 29 1 258 1 224 1 154 2 5 3 225 1 326 1 360 1 227 7 82 3 60 2 215 1 238 1 
141 1 179 1 148 1 4 6 292 1 5 1 6 2 294 1 181 3 184 1 334 1 300 1 238 1 336 1 239 2 189 2 339 4 244 1 198 1 154 1 343 1 345 1 201 1 21 1 120 1 77 1 259 3 358 1 123 1 161 2 82 1 33 2 84 2 164 1 221 1 38 2 276 2 40 1 278 1 322 1 42 1 373 1 324 2 327 1 377 2 138 2 227 1 
141 1 53 1 254 1 75 1 121 1 234 1 30 2 185 1 213 1 320 1 125 2 82 2 60 1 150 2 337 2 36 1 127 1 16 1 278 1 17 3 279 1 90 1 246 1 281 1 347 3 227 1 228 2 285 1 
336 1 141 2 338 1 127 1 148 1 278 2 258 1 154 1 5 2 249 1 227 2 82 2 238 1 
141 4 336 1 95 1 231 1 177 1 148 1 332 1 278 4 5 1 154 1 227 4 82 1 60 1 
141 2 148 1 278 2 224 1 43 1 154 1 5 2 170 1 226 1 326 1 376 1 227 2 82 1 238 1 
49 1 141 1 14 1 57 1 148 1 227 1 278 1 60 1 284 1 5 1 
336 1 141 2 157 1 148 1 108 1 278 2 154 1 5 1 227 2 82 1 215 1 
141 5 336 1 231 1 177 1 148 2 332 1 108 1 278 4 154 2 5 2 225 1 226 1 360 1 227 5 82 3 60 1 
141 2 336 1 63 1 148 2 332 1 108 1 278 2 224 1 43 1 154 2 5 3 326 1 376 1 227 2 82 2 60 1 238 1 
141 1 164 1 120 1 148 1 38 2 322 1 278 1 324 1 154 1 5 1 343 1 377 2 227 1 82 1 21 1 60 1 238 1 72 1 
141 1 148 1 278 1 195 1 258 1 224 1 154 1 5 2 226 1 326 1 227 1 82 1 238 1 
99 1 346 1 290 1 324 1 110 1 
328 1 36 1 26 1 75 1 121 1 76 1 243 1 290 2 17 2 324 1 110 2 99 1 347 2 139 1 346 2 163 1 364 1 285 1 363 1 
38 1 290 1 355 1 260 1 99 1 182 1 377 1 346 1 21 1 
99 1 139 1 243 1 
241 1 329 1 58 1 91 1 
272 1 241 1 329 1 307 1 223 1 277 1 91 1 
277 1 167 1 350 1 
272 3 241 1 329 1 67 1 223 1 277 3 169 2 91 1 70 1 307 1 187 1 348 1 
295 1 272 2 241 1 329 1 307 1 223 1 277 2 94 1 91 1 
49 1 272 1 118 1 241 1 67 1 223 1 277 1 69 1 57 1 32 1 307 1 
272 1 241 1 329 1 307 1 223 1 67 1 277 1 
272 1 329 2 307 1 223 1 67 1 277 1 91 1 
50 1 272 2 241 1 329 1 354 1 193 1 67 1 223 2 277 2 307 2 
272 3 329 1 241 2 147 1 67 1 223 1 277 3 91 1 295 2 69 1 307 1 311 1 115 1 
49 1 272 2 241 1 329 1 233 1 67 1 223 1 277 2 91 1 295 1 57 2 32 1 307 1 309 1 284 1 
272 4 329 1 241 2 147 1 67 1 223 2 277 4 91 1 295 2 69 1 307 2 162 1 94 1 
272 1 241 1 329 1 307 1 223 1 67 1 277 1 91 1 
352 1 272 4 329 2 241 3 147 1 223 1 277 4 169 1 91 2 295 2 69 1 70 1 307 1 348 1 
272 2 241 1 329 1 23 1 67 1 223 1 277 2 78 1 91 1 295 1 304 1 307 1 
272 3 241 1 329 1 67 1 223 1 277 3 89 1 169 2 91 1 70 2 307 1 348 1 
9 2 241 2 242 1 74 1 
272 1 144 1 307 1 223 1 67 1 277 1 
295 1 272 2 241 1 329 1 307 1 223 1 67 1 277 2 115 1 91 1 
275 1 
272 1 241 1 329 1 307 1 223 1 67 1 277 1 91 1 
272 3 329 1 241 1 67 1 223 1 277 3 169 1 91 1 295 1 307 1 115 1 
69 1 352 1 241 1 147 1 
241 1 329 1 

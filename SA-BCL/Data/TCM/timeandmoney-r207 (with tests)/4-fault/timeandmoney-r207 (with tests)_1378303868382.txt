#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (114,156) (114,156) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 60 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 266 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 266 255 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 55 335 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 13 57 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 135 258 7 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 135 258 7 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 135 258 206 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 13 57 46 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 13 57 46 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (114,156) (114,156) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (114,156) (114,156) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (114,156) (114,156) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 60 194 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 291 89 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 242 (104,227) 131 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 177 303 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (162,270) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (106,187) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (195,284) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 291 89 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
296 1 32 2 80 1 6 9 265 3 42 1 45 4 128 1 12 2 133 1 234 1 16 2 52 2 239 1 322 1 22 9 96 2 323 1 324 6 245 1 67 2 68 1 331 1 111 1 292 1 211 2 338 1 293 5 
296 1 80 1 32 2 6 9 265 3 42 1 45 4 128 1 12 2 133 1 234 1 16 2 52 2 239 1 322 1 22 9 96 2 323 1 324 6 245 1 67 2 68 1 331 1 111 1 292 1 211 2 338 1 293 5 
296 1 80 1 32 2 6 10 265 4 42 1 45 5 128 1 12 2 133 1 234 1 16 2 52 2 239 1 322 1 22 10 96 2 323 1 324 7 245 1 67 2 68 1 331 1 111 1 292 1 211 2 338 1 293 6 
296 1 80 1 32 1 6 7 265 2 42 1 45 3 128 1 12 2 133 1 234 1 16 2 52 2 239 1 322 1 22 7 96 2 323 1 324 4 67 2 68 1 331 1 111 1 292 1 211 2 338 1 293 4 
32 2 22 4 323 1 324 3 265 1 6 4 245 1 42 1 67 1 45 2 128 1 12 1 133 1 331 1 52 1 16 1 211 1 293 3 
296 1 322 1 22 2 323 1 96 1 222 1 6 2 128 1 12 1 229 1 133 1 179 1 16 1 52 1 211 1 293 1 
80 1 22 3 323 1 96 1 324 1 6 3 265 1 45 1 128 1 12 2 133 1 16 2 293 2 
80 1 32 2 265 3 6 9 42 1 45 4 224 1 128 1 12 2 133 1 234 1 16 2 52 1 22 9 96 1 323 1 324 7 148 1 245 1 67 1 331 1 111 1 211 1 293 5 
80 1 32 2 265 3 6 9 42 1 45 4 224 1 128 1 12 2 133 1 234 1 16 2 52 1 22 9 96 1 323 1 324 7 148 1 245 1 67 1 331 1 111 1 211 1 293 5 
256 1 
81 1 40 1 9 1 102 1 199 1 176 1 17 1 112 1 137 1 212 1 216 1 59 1 
81 1 278 1 40 2 9 1 247 1 102 1 225 1 176 1 112 1 137 2 212 1 216 1 59 1 
21 1 40 1 137 1 
21 1 40 1 137 1 
40 1 137 1 
21 1 40 1 137 1 
21 1 40 1 137 1 
21 1 301 1 281 1 40 2 44 1 137 2 138 1 
5 1 256 1 
278 1 5 2 9 2 247 1 225 1 176 2 232 1 47 1 59 2 
312 1 19 1 304 1 
31 1 1 1 263 1 192 1 170 1 5 1 101 1 246 1 195 1 196 2 173 2 176 1 286 1 105 2 157 1 165 1 56 1 166 1 59 1 
31 1 1 1 219 1 263 1 300 1 278 1 101 1 246 1 195 1 9 1 196 1 304 1 225 1 173 1 176 2 286 1 105 1 165 1 166 1 59 2 
300 1 278 3 5 1 9 3 247 1 225 3 176 3 59 3 
278 1 125 1 9 1 102 1 225 1 176 1 59 1 
232 1 278 1 47 1 9 1 102 1 247 1 225 1 176 1 59 1 
81 1 219 1 300 1 278 2 100 1 40 1 9 2 102 1 247 1 225 2 176 2 47 1 137 1 112 1 212 1 340 1 216 1 59 2 
278 1 300 1 24 1 5 1 17 1 9 2 225 1 176 2 59 2 
81 1 219 1 300 1 278 1 171 1 40 1 9 1 102 1 225 1 176 1 137 1 112 1 212 1 340 1 216 1 59 1 
300 1 278 2 9 2 247 1 304 1 225 2 176 2 47 1 19 1 59 2 
31 1 1 1 263 1 5 1 101 1 246 1 196 1 195 1 173 1 176 1 105 1 286 1 165 1 166 1 59 1 
217 1 31 1 189 1 263 1 5 1 101 1 246 1 196 1 102 1 173 1 176 1 105 1 106 1 286 1 165 1 166 1 59 1 
30 2 116 1 122 1 3 1 304 2 175 1 228 1 310 2 312 2 134 1 88 1 90 1 20 1 19 2 277 1 282 1 151 1 152 1 253 1 201 1 161 4 28 2 210 1 77 1 
144 1 278 1 9 1 102 1 212 1 225 1 176 1 59 1 
203 1 219 1 278 4 300 2 47 1 24 1 5 1 17 1 9 5 247 1 225 4 308 1 176 5 59 5 
144 1 278 2 125 1 9 2 102 1 225 2 176 2 59 2 
69 1 10 1 
69 1 10 1 
108 1 273 1 
108 1 273 1 
108 1 273 1 
69 1 49 1 10 1 
69 1 49 1 10 1 
69 1 181 1 10 1 
69 2 297 1 108 1 273 1 74 1 10 2 
69 1 49 1 10 1 
69 1 120 1 10 1 
69 1 120 1 10 1 
69 1 120 1 10 1 
114 1 115 1 276 2 40 2 150 1 10 2 249 2 69 2 156 1 205 2 15 1 257 2 137 2 321 2 
60 1 276 1 278 1 40 1 150 1 9 1 10 1 249 1 225 1 176 1 69 1 205 1 137 1 257 1 321 1 59 1 
52 1 211 1 67 1 
222 1 52 1 211 1 
222 1 38 1 72 1 67 2 211 3 226 1 
222 1 38 1 72 1 67 1 164 1 211 2 
222 1 38 2 72 1 67 1 211 2 
21 1 40 1 318 1 137 1 
21 2 311 1 317 1 40 2 137 2 274 1 
21 1 62 1 169 1 301 1 281 1 266 1 40 2 44 1 86 1 137 2 138 1 139 1 
62 1 169 1 301 1 281 1 266 1 40 1 44 1 86 1 255 1 137 1 139 1 138 1 
256 1 165 1 251 1 
41 1 165 1 
123 1 
263 1 165 1 
286 1 263 1 326 1 136 1 165 3 251 2 
286 1 263 1 165 1 
95 1 165 1 
240 1 33 1 116 3 99 1 122 1 3 2 244 1 285 1 310 4 178 1 313 2 290 1 161 7 28 3 210 1 185 1 188 1 
240 1 33 1 116 3 99 1 122 1 3 2 244 1 285 1 310 4 178 1 313 2 290 1 161 7 28 3 210 1 185 1 188 1 
240 1 33 1 116 3 99 1 122 1 3 2 244 1 103 1 285 1 178 1 310 4 313 2 290 1 161 7 28 3 210 1 185 1 188 1 
30 2 33 1 116 10 122 4 3 5 39 1 306 1 175 3 174 1 129 3 178 1 177 1 310 16 14 1 134 1 313 3 88 1 90 3 185 1 188 2 240 2 190 1 191 1 99 2 244 5 282 1 152 1 198 4 252 3 285 2 290 1 161 31 28 15 210 4 
30 4 33 1 262 1 116 4 122 1 3 3 4 1 174 1 310 5 178 1 134 2 88 2 313 2 185 1 188 1 240 1 99 1 244 1 282 2 152 2 285 1 161 9 28 4 210 1 
37 1 2 1 222 1 6 2 226 1 128 1 173 1 12 1 133 1 314 1 271 1 315 1 52 1 16 1 22 2 323 1 96 1 324 1 98 1 101 1 246 1 67 1 196 1 105 1 204 1 289 1 211 2 293 1 215 1 113 1 
37 1 2 1 222 1 6 3 226 1 128 1 173 1 126 1 12 1 133 1 271 1 315 1 52 1 16 1 22 3 96 1 98 1 324 2 101 1 246 1 67 1 196 1 250 1 105 1 204 1 289 1 73 1 211 2 293 1 113 1 
37 1 2 1 222 1 6 2 226 1 128 1 173 1 126 1 133 1 271 1 315 1 52 1 22 2 96 1 98 1 324 2 101 1 246 1 196 1 67 1 105 1 204 1 73 1 211 2 293 1 
22 1 96 2 263 1 98 2 37 2 101 1 6 1 246 1 83 1 84 1 196 1 250 1 173 1 12 1 105 1 329 1 204 2 159 1 236 1 16 1 165 1 166 1 214 1 
37 1 2 1 222 1 6 1 226 1 173 1 126 1 12 1 271 1 315 1 52 1 16 1 22 1 323 1 96 1 98 1 101 1 246 1 67 1 196 1 105 1 204 1 289 1 211 2 215 1 113 1 
260 1 
62 1 301 1 281 1 40 1 44 1 196 1 153 1 173 1 86 1 105 1 335 1 55 1 137 1 166 1 
81 1 118 1 40 2 9 1 102 1 199 1 176 1 13 1 202 1 158 1 336 1 17 1 112 1 137 2 212 1 216 1 259 1 59 1 
81 1 118 1 40 2 9 1 102 1 199 1 176 1 202 1 254 1 158 1 336 1 17 1 112 1 137 2 212 1 259 1 216 1 59 1 
81 1 118 1 40 2 9 1 102 1 199 1 176 1 13 1 202 1 158 1 336 1 17 1 112 1 137 2 57 1 212 1 259 1 216 1 59 1 
40 1 137 1 
218 1 81 1 118 1 301 1 40 2 44 1 9 1 269 1 176 1 86 1 135 1 17 1 184 1 137 2 59 1 281 1 102 1 328 1 199 1 153 1 202 1 158 1 336 1 112 1 212 1 167 1 259 1 216 1 
218 1 81 1 118 1 301 1 7 1 40 2 9 1 44 1 269 1 176 1 86 1 135 1 17 1 184 1 137 2 59 1 281 1 102 1 328 1 199 1 153 1 202 1 158 1 336 1 29 1 112 1 258 1 212 1 167 1 216 1 259 1 
218 1 81 1 118 1 301 1 7 1 40 2 9 1 44 1 269 1 176 1 86 1 135 1 17 1 184 1 137 2 59 1 281 1 102 1 328 1 199 1 153 1 202 1 158 1 336 1 29 1 112 1 258 1 212 1 167 1 216 1 259 1 
81 1 118 1 301 1 119 1 40 2 9 1 44 1 269 1 176 1 86 1 135 1 17 1 184 1 137 2 18 1 59 1 281 1 102 1 199 1 153 1 202 1 158 1 206 1 336 1 112 1 258 1 212 1 339 1 167 1 216 1 259 1 
81 1 118 1 40 2 9 1 46 1 102 1 199 1 176 1 13 1 202 1 158 1 336 1 17 1 112 1 137 2 57 1 212 1 259 1 216 1 59 1 
81 1 118 1 40 2 9 1 46 1 102 1 199 1 176 1 13 1 202 1 158 1 336 1 17 1 112 1 137 2 57 1 212 1 259 1 216 1 59 1 
81 1 118 1 301 1 119 1 40 2 44 1 9 1 269 1 176 1 86 1 135 1 17 1 184 1 137 2 18 1 59 1 281 1 102 1 199 1 153 1 202 1 158 1 336 1 112 1 212 1 167 1 259 1 216 1 
30 2 33 1 116 2 3 2 122 1 5 2 304 1 228 1 178 1 310 3 312 1 134 1 88 1 313 1 19 1 20 1 185 1 188 1 99 1 282 1 152 1 201 1 161 6 28 3 256 1 210 1 
30 4 116 2 3 1 122 2 5 1 39 1 304 11 127 1 175 2 228 2 129 3 177 1 230 1 310 8 312 11 134 2 88 2 90 1 20 1 19 4 93 1 325 1 244 1 282 2 152 2 198 3 248 1 252 2 161 14 28 6 27 1 75 1 210 1 
31 1 30 2 1 1 219 1 263 1 300 1 121 1 5 1 9 1 225 1 173 1 127 1 228 1 176 2 310 1 88 1 134 1 19 1 20 1 320 1 59 2 278 1 101 1 246 1 282 1 195 1 196 1 152 1 248 1 155 1 286 1 105 1 157 1 161 2 28 1 75 1 165 1 166 1 
1 2 263 2 3 4 5 2 9 1 173 3 175 2 176 3 178 1 88 3 90 2 183 2 185 1 20 3 19 7 188 1 275 2 278 1 99 1 101 2 282 3 196 3 195 2 197 2 105 3 286 2 28 10 210 3 30 6 31 2 33 1 219 1 116 8 300 1 122 3 304 7 225 1 126 1 127 1 228 3 227 2 310 10 231 1 312 7 313 1 134 3 50 1 58 2 59 3 146 1 244 4 246 2 152 3 248 1 252 2 161 20 75 1 165 2 166 1 
30 4 82 1 300 1 263 2 124 1 43 1 9 1 84 1 225 1 126 1 173 8 127 1 176 1 228 2 310 1 314 1 134 2 88 2 182 1 56 2 20 2 59 1 278 1 147 1 101 2 246 2 282 2 283 1 196 7 152 2 248 1 201 1 105 8 161 2 291 1 28 1 165 3 166 2 214 1 
30 2 116 1 3 1 122 1 9 1 304 1 225 1 175 1 228 1 176 1 310 1 312 1 134 1 88 1 47 1 90 1 19 1 20 1 59 1 278 1 65 1 282 1 152 1 247 1 252 1 161 3 28 2 75 1 210 1 
30 2 116 1 122 1 244 1 282 1 152 1 304 1 175 1 228 1 201 1 310 2 312 1 88 1 134 1 161 2 19 1 20 1 77 1 
30 2 116 1 3 1 282 1 152 1 151 1 304 1 228 1 201 1 312 1 88 1 134 1 161 2 90 1 28 2 210 1 19 1 20 1 
30 2 116 2 122 1 3 1 304 2 175 1 228 1 310 2 312 2 134 1 88 1 90 1 20 1 19 2 244 1 282 1 152 1 252 1 201 1 161 4 28 2 210 1 
30 2 116 1 147 1 122 1 244 1 282 1 152 1 304 1 175 1 228 1 310 2 312 1 88 1 134 1 161 2 19 1 20 1 77 1 
30 2 116 1 147 1 3 1 282 1 152 1 151 1 304 1 228 1 312 1 88 1 134 1 161 2 90 1 28 2 210 1 19 1 20 1 
30 2 116 2 122 1 3 1 304 2 175 1 228 1 310 2 312 2 134 1 88 1 90 1 20 1 19 2 147 1 244 1 282 1 152 1 252 1 161 4 28 2 210 1 
30 2 116 2 122 1 3 1 304 2 175 1 228 1 310 2 312 2 134 1 88 1 90 1 20 1 19 2 244 1 282 1 152 1 252 1 161 4 28 2 210 1 
31 1 30 2 1 1 263 1 5 1 127 1 173 1 176 1 228 1 310 1 88 1 134 1 183 1 20 1 59 1 101 1 246 1 282 1 195 1 196 1 152 1 248 1 286 1 105 1 161 2 28 1 165 1 166 1 
31 1 217 1 30 2 298 1 263 1 5 1 173 1 176 1 228 1 88 1 134 1 20 1 59 1 189 1 101 1 246 1 282 1 196 1 152 1 102 1 248 1 286 1 106 1 105 1 161 1 28 1 165 1 166 1 
30 2 116 2 122 1 3 1 304 2 175 1 228 1 310 2 312 2 134 1 88 1 90 1 20 1 19 2 244 1 282 1 152 1 252 1 161 4 28 2 75 1 210 1 
31 1 30 2 1 1 116 2 263 1 3 1 122 1 304 2 175 1 173 1 176 1 228 1 310 2 312 2 314 1 88 1 134 1 90 1 183 1 19 2 20 1 59 1 244 1 101 1 246 1 282 1 195 1 196 1 152 1 197 1 252 1 286 1 105 1 161 4 28 2 210 1 165 1 
30 2 116 1 122 1 172 1 9 1 304 1 225 1 175 1 228 1 176 1 310 2 312 1 134 1 88 1 47 1 90 1 20 1 19 1 59 1 278 1 244 1 282 1 152 1 247 1 252 1 161 3 28 1 75 1 210 1 
30 4 116 6 3 3 122 3 4 1 39 1 307 2 175 3 129 1 177 1 310 9 134 2 88 2 53 1 90 3 92 1 94 1 61 1 279 2 244 3 282 2 152 2 198 2 200 1 252 3 287 1 332 1 161 19 28 10 210 3 
30 6 116 4 299 1 3 2 122 3 4 1 303 1 307 4 11 1 174 2 175 3 129 2 310 14 177 2 134 3 88 3 53 2 90 2 92 1 238 1 142 1 61 1 279 1 244 2 282 3 152 3 198 2 200 2 252 3 287 1 330 1 161 26 28 12 210 2 
30 6 33 1 116 8 299 1 3 4 122 5 4 1 303 1 39 1 307 4 11 1 174 1 175 4 129 3 178 1 177 3 310 20 313 1 134 3 88 3 53 2 316 1 90 4 92 1 185 1 238 1 188 1 142 1 61 1 279 1 99 1 244 4 282 3 152 3 198 4 200 1 252 4 287 1 330 1 332 1 161 41 28 21 210 5 
30 8 33 1 116 7 299 1 3 4 122 5 4 1 303 1 39 1 307 4 11 1 174 2 175 4 129 3 178 1 177 3 310 20 313 1 134 4 88 4 53 2 316 1 90 3 92 1 185 1 238 1 188 1 142 1 61 1 279 1 99 1 244 3 282 4 152 4 198 4 200 1 252 4 287 1 330 1 332 1 161 38 28 18 210 4 
30 4 33 1 116 14 299 1 3 7 122 8 4 1 303 1 39 2 307 4 174 1 11 1 175 7 129 4 178 1 230 2 177 2 310 27 313 1 134 2 88 2 53 1 90 7 92 1 185 1 238 1 188 1 142 1 61 1 279 1 99 1 244 7 282 2 152 2 198 4 200 1 252 7 287 1 330 1 161 52 28 25 210 8 
69 1 205 1 276 1 107 1 207 1 109 1 74 1 257 1 10 1 249 1 
220 1 181 1 
69 1 205 1 276 1 132 1 110 1 257 1 223 1 10 1 249 1 
114 1 115 1 276 1 40 1 150 1 10 1 249 1 69 1 156 1 205 1 15 1 137 1 257 1 321 2 
114 1 115 1 276 1 40 1 150 1 10 1 249 1 69 1 156 1 205 1 15 1 137 1 257 1 321 2 
114 1 115 1 276 1 40 1 150 1 10 1 249 1 69 1 156 1 205 1 15 1 137 1 257 1 321 2 
297 1 49 1 140 1 
297 1 49 1 140 1 
79 1 120 1 
79 1 297 1 120 1 
294 1 8 1 
21 1 115 1 60 1 276 1 40 1 194 1 10 1 249 1 69 1 205 1 15 1 257 1 137 1 321 1 
49 1 140 1 
79 1 297 1 120 1 
295 1 30 2 9 2 305 1 173 2 127 1 228 1 176 2 310 1 88 1 134 1 89 1 182 1 237 1 56 2 20 1 59 2 282 1 152 1 196 2 248 1 105 2 161 2 291 1 71 1 28 1 75 1 
222 1 37 1 302 1 2 1 101 1 246 1 67 1 196 2 226 1 126 1 173 2 105 2 288 1 314 1 289 1 48 1 315 1 52 1 211 2 
222 1 37 1 302 1 2 1 101 1 246 1 67 1 196 1 226 1 126 1 173 1 105 1 289 1 315 1 52 1 211 2 141 1 
263 1 37 1 101 1 246 1 196 1 84 1 173 1 105 1 288 1 159 1 165 1 166 1 76 1 214 1 
222 1 37 1 302 1 2 1 101 1 246 1 67 1 196 1 226 1 126 1 173 1 105 1 288 1 289 1 48 1 315 1 52 1 211 2 
209 1 
270 1 162 1 256 1 269 1 
86 1 218 1 301 1 281 1 44 1 269 1 328 1 153 1 
62 1 263 1 301 1 97 1 242 1 101 2 281 1 326 1 41 1 246 1 44 1 196 1 153 1 173 1 104 1 86 1 286 1 105 1 131 1 165 2 166 1 
86 1 177 1 301 1 303 1 281 1 44 1 269 1 198 1 153 1 129 1 
117 1 301 1 241 1 99 1 243 2 122 2 281 1 40 1 44 1 269 2 153 1 86 1 210 1 29 1 137 1 185 1 188 1 
270 1 301 1 281 1 44 1 269 1 153 1 
86 1 122 1 90 1 210 1 269 1 175 1 252 1 
105 1 196 1 166 1 173 1 
86 1 62 1 301 1 281 1 44 1 269 1 268 1 153 1 
276 1 272 1 249 1 
276 1 272 1 249 1 
294 1 276 1 107 1 91 1 249 1 
276 1 272 1 249 1 
276 1 26 1 249 1 
276 1 26 1 249 1 
276 1 26 1 249 1 
276 1 249 1 
69 1 10 1 
30 4 33 1 116 3 99 1 122 1 3 2 244 1 282 2 152 2 174 1 310 4 178 1 313 1 88 2 134 2 161 8 28 4 210 1 185 1 188 1 
310 3 178 1 33 1 116 2 313 1 99 1 122 1 3 2 161 6 28 3 256 1 210 1 185 1 188 1 
30 2 116 2 3 1 122 1 244 1 282 1 152 1 252 1 175 1 310 2 88 1 134 1 161 4 28 2 90 1 54 1 210 1 
116 2 3 1 122 1 244 1 39 1 198 2 252 1 175 1 129 1 177 1 310 3 161 7 90 1 28 4 210 1 
30 4 33 1 116 9 122 3 3 5 39 1 175 2 174 2 129 2 178 1 310 11 230 1 313 1 88 2 134 2 90 2 185 1 188 2 99 2 244 4 66 1 282 2 152 2 198 2 252 2 161 23 28 12 27 1 210 3 
161 1 28 1 198 1 
310 1 161 1 129 1 
30 2 275 1 116 3 122 1 3 2 244 1 282 1 152 1 252 1 175 1 310 3 134 1 88 1 161 6 54 1 28 3 90 1 210 1 
30 2 116 2 299 1 122 2 3 1 4 1 303 1 175 2 11 1 129 1 177 1 310 6 134 1 88 1 90 2 142 1 244 1 282 1 152 1 198 1 252 2 330 1 161 12 28 6 210 2 
116 2 99 1 122 1 3 1 244 1 310 3 161 6 28 3 210 1 185 1 188 1 
30 2 33 1 116 2 99 1 3 1 244 1 66 1 282 1 152 1 174 1 310 1 178 1 88 1 134 1 161 3 28 2 188 1 
30 2 116 5 241 1 99 2 3 3 122 2 4 1 244 2 282 1 152 1 310 5 134 1 88 1 161 10 28 5 210 2 185 1 188 2 
30 2 116 1 122 1 4 1 244 1 282 1 152 1 175 1 310 2 88 1 134 1 161 2 
30 2 116 2 3 1 122 1 4 1 244 1 282 1 152 1 252 1 175 1 310 2 88 1 134 1 161 4 28 2 90 1 210 1 
30 6 116 2 99 1 3 1 4 1 244 1 66 1 282 3 152 3 174 1 310 1 88 3 134 3 332 1 161 3 28 2 188 1 
30 10 33 1 116 12 122 5 3 7 4 1 39 1 306 1 174 2 175 3 129 3 178 1 177 1 310 16 14 1 313 1 134 5 88 5 54 1 90 3 185 2 188 3 190 1 99 3 244 5 66 1 282 5 152 5 198 4 252 3 332 1 161 34 28 18 210 5 
30 2 33 1 116 2 122 1 3 2 4 1 303 1 129 1 177 1 310 4 178 1 313 1 134 1 88 1 185 1 188 1 99 1 282 1 152 1 198 1 161 8 28 4 210 1 
30 4 33 1 116 3 3 2 122 2 4 1 303 1 39 1 175 1 129 1 178 1 177 1 310 6 313 1 134 2 88 2 54 1 185 1 188 1 99 1 244 1 282 2 152 2 198 2 252 1 161 11 28 5 210 1 
30 6 33 1 116 4 299 1 122 3 3 3 4 1 303 1 11 1 175 2 174 1 129 1 178 1 177 1 310 9 313 1 134 3 88 3 54 1 90 2 185 1 188 1 142 1 99 1 244 1 282 3 152 3 198 1 252 2 330 1 161 19 28 10 210 3 
30 6 33 1 116 5 299 1 122 3 3 3 4 1 303 1 174 1 175 2 11 1 129 1 178 1 177 1 310 10 313 1 134 3 88 3 54 1 90 1 185 1 188 1 142 1 99 1 244 2 282 3 152 3 198 1 252 2 330 1 161 17 28 7 210 2 
30 2 33 1 116 2 122 1 3 2 4 1 303 1 129 1 177 1 310 4 178 1 313 1 134 1 88 1 185 1 188 1 99 1 282 1 152 1 198 1 161 8 28 4 210 1 
30 2 116 2 299 1 122 2 3 1 4 1 303 1 175 2 11 1 129 1 177 1 310 6 134 1 88 1 90 2 142 1 244 1 282 1 152 1 198 1 252 2 330 1 161 12 28 6 210 2 
30 8 33 1 116 5 299 1 122 3 3 3 4 1 303 1 11 1 175 2 174 2 129 1 178 1 177 1 310 10 313 1 134 4 88 4 54 1 90 1 185 1 188 1 142 1 99 1 244 2 282 4 152 4 198 1 252 2 330 1 161 18 28 8 210 2 
30 8 116 6 299 1 122 3 3 3 4 1 303 1 11 1 175 3 174 2 129 1 177 1 310 9 134 4 88 4 90 2 142 1 244 3 282 4 152 4 198 1 252 3 330 1 332 1 161 16 28 7 210 2 
33 1 116 6 99 3 3 3 122 1 244 3 178 2 310 3 161 7 28 4 210 1 185 1 188 3 
30 8 33 1 116 4 299 1 122 3 3 3 4 1 303 1 11 1 175 2 174 2 129 1 178 1 177 1 310 10 313 1 134 4 88 4 90 1 185 1 188 1 142 1 99 1 244 1 282 4 152 4 198 1 252 2 330 1 332 1 161 18 28 8 210 2 
24 1 5 1 208 1 17 1 9 1 176 1 59 1 
5 1 9 1 267 1 176 1 130 1 70 1 25 1 24 1 208 1 17 1 78 1 59 1 
105 1 263 1 101 1 246 1 256 1 165 1 84 1 196 1 166 1 214 1 173 1 
31 1 263 1 300 1 278 1 5 1 101 1 246 1 9 1 196 1 195 1 225 1 173 1 176 2 286 1 105 1 165 1 166 1 59 2 
31 1 300 1 263 2 5 1 9 2 225 2 173 1 176 2 186 1 59 2 95 1 278 1 101 1 149 1 246 1 195 1 196 1 102 1 105 1 286 2 165 3 112 1 212 1 
31 1 300 1 263 2 5 1 9 2 225 2 173 1 176 2 186 1 59 2 189 1 95 1 278 1 101 1 149 1 246 1 196 1 102 2 106 1 105 1 286 2 165 3 112 1 212 1 
105 1 41 1 40 1 165 1 196 1 137 1 187 1 186 1 173 1 
105 1 41 1 40 1 165 1 196 1 137 1 284 1 186 1 173 1 
105 1 101 1 124 1 246 1 196 1 173 1 
82 1 34 1 263 2 64 1 101 3 124 1 326 1 23 1 246 2 43 1 283 1 196 6 126 1 173 7 105 7 286 1 314 1 291 1 56 1 165 3 166 2 
1 1 263 1 3 2 5 2 9 1 173 1 176 2 178 1 88 2 183 1 19 1 20 2 185 1 188 1 278 1 99 1 101 1 282 2 195 1 196 1 197 1 105 1 286 1 28 3 210 1 30 4 31 1 33 1 116 2 300 1 122 1 304 1 225 1 227 1 228 2 310 3 312 1 314 1 134 2 313 1 59 2 246 1 152 2 161 6 71 1 75 1 165 1 
21 1 40 1 137 1 
97 1 263 1 101 2 124 1 326 1 246 1 196 2 251 1 173 2 105 2 286 1 314 1 165 2 
261 1 263 1 101 1 246 1 196 4 84 1 173 4 105 4 314 1 334 1 165 1 166 1 214 1 
34 1 263 1 64 1 193 1 101 2 246 1 196 2 85 1 173 2 105 2 286 1 50 1 165 1 186 1 
105 1 222 1 2 1 52 1 101 1 246 1 211 1 196 1 166 1 173 1 
105 2 314 1 89 1 291 1 196 2 126 1 173 2 
261 1 82 1 263 2 101 2 246 2 84 1 196 4 283 1 173 5 105 5 314 1 291 1 165 3 166 1 186 1 214 1 
261 1 263 2 101 2 246 2 84 1 196 4 283 1 173 5 105 5 87 1 314 1 291 1 165 3 166 1 186 1 214 1 
31 1 300 1 263 1 5 1 9 1 225 1 173 1 176 2 59 2 189 1 278 1 101 1 246 1 196 1 102 1 106 1 105 1 286 1 165 1 166 1 
34 1 263 1 64 1 101 2 326 1 23 1 246 1 196 1 173 1 105 1 286 1 165 1 186 1 
143 1 295 1 35 1 9 1 305 1 176 1 319 1 237 1 59 1 
143 1 145 1 235 1 
143 1 63 1 35 1 5 1 319 1 
143 1 21 1 81 1 145 1 63 2 35 2 5 1 40 2 102 1 309 1 235 1 319 2 112 1 137 2 212 1 340 1 216 1 
133 1 256 1 293 1 128 1 
22 1 133 1 16 1 6 1 293 1 128 1 12 1 
204 1 96 1 6 1 
168 1 322 2 22 3 323 1 6 3 128 1 12 1 133 1 16 1 337 1 213 1 293 1 
32 1 22 2 133 1 324 1 16 1 6 2 293 1 128 1 12 1 
22 1 323 1 6 1 42 1 67 1 45 1 12 1 16 1 52 1 211 1 293 1 
22 1 323 1 16 1 6 1 293 1 128 1 12 1 
22 1 323 1 133 1 16 1 6 1 128 2 12 1 
22 2 323 1 6 2 327 1 128 1 12 2 154 1 51 1 16 2 293 1 
22 3 323 1 324 2 6 3 265 1 45 1 128 1 12 1 133 1 234 1 16 1 111 1 293 2 
22 2 323 1 36 1 324 1 222 1 6 2 67 1 226 1 128 1 12 1 133 1 16 1 52 1 211 2 293 1 
32 1 22 4 323 1 324 2 6 4 265 1 245 1 45 1 128 1 12 2 133 1 16 2 293 2 
22 1 323 1 133 1 16 1 6 1 293 1 128 1 12 1 
322 1 168 1 22 4 324 2 6 4 265 1 45 1 128 2 12 1 133 2 180 1 16 1 337 1 293 3 
0 1 22 2 323 1 324 1 6 2 224 1 128 1 12 1 133 1 233 1 16 1 293 1 
168 1 322 2 22 3 323 1 280 1 6 3 128 1 12 1 133 1 16 1 337 2 293 1 
221 1 160 1 333 2 293 2 
22 1 323 1 264 1 16 1 6 1 12 1 
22 2 323 1 133 1 324 1 234 1 16 1 6 2 293 1 128 1 12 1 
163 1 
22 1 323 1 133 1 16 1 6 1 293 1 128 1 12 1 
322 1 22 3 323 1 133 1 324 1 234 1 16 1 6 3 293 1 128 1 12 1 
180 1 265 1 45 1 293 1 
293 1 128 1 

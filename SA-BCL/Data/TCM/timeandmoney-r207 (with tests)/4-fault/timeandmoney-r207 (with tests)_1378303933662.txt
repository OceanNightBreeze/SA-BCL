#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (119,265) (268,334) (268,334) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 140 154 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (191,196) 85 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (119,265) (119,265) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (119,265) (268,334) (268,334) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (119,265) (268,334) (268,334) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (119,265) (268,334) (268,334) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 140 154 136 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (191,196) (191,196) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (191,196) 85 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (191,196) (191,196) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 236 1 179 2 303 1 305 1 135 1 185 1 280 2 220 9 115 1 116 1 193 4 142 5 94 1 354 1 199 3 74 1 10 1 45 2 174 2 284 2 125 2 290 1 255 6 24 2 340 1 84 1 271 9 
31 1 236 1 179 2 303 1 305 1 135 1 185 1 280 2 220 9 115 1 116 1 193 4 142 5 94 1 354 1 199 3 74 1 10 1 45 2 174 2 284 2 125 2 290 1 255 6 24 2 340 1 84 1 271 9 
31 1 236 1 179 2 303 1 305 1 135 1 185 1 280 2 220 10 115 1 116 1 193 5 142 6 94 1 354 1 199 4 74 1 10 1 45 2 174 2 284 2 125 2 290 1 255 7 24 2 340 1 84 1 271 10 
31 1 236 1 179 1 303 1 305 1 135 1 185 1 280 2 220 7 115 1 116 1 193 3 142 4 94 1 354 1 199 2 10 1 45 2 174 2 284 2 125 2 290 1 255 4 24 2 340 1 84 1 271 7 
31 1 142 3 199 1 179 2 74 1 45 1 303 1 125 1 284 1 135 1 185 1 280 1 220 4 255 3 116 1 24 1 193 2 271 4 
142 1 370 1 45 1 303 1 174 1 284 1 125 1 305 1 135 1 185 1 189 1 220 2 115 1 24 1 103 1 271 2 
142 2 94 1 199 1 45 2 303 1 174 1 284 2 135 1 185 1 220 3 255 1 193 1 271 3 
31 1 142 5 32 1 94 1 199 3 179 2 74 1 45 2 303 1 174 1 125 1 284 2 135 1 185 1 280 1 220 9 192 1 116 1 255 7 24 1 193 4 84 1 340 1 271 9 
31 1 142 5 32 1 94 1 199 3 179 2 74 1 45 2 303 1 174 1 125 1 284 2 135 1 185 1 280 1 220 9 192 1 116 1 255 7 24 1 193 4 84 1 340 1 271 9 
299 1 361 1 204 1 
73 1 361 1 292 2 
348 2 163 2 33 2 82 1 312 2 117 2 329 2 203 1 
30 1 57 1 33 3 366 2 217 1 306 1 8 1 348 2 162 1 38 1 163 3 71 1 166 1 312 2 117 2 329 2 93 1 169 2 371 1 227 2 317 1 269 1 203 1 205 1 17 2 99 1 288 1 129 1 208 1 252 1 209 1 233 1 82 1 22 1 83 2 27 1 29 1 
286 1 348 1 163 1 33 1 133 1 283 1 312 1 117 1 329 1 203 1 
33 1 225 1 226 1 325 1 204 1 286 1 348 1 163 1 267 1 111 1 243 1 361 1 194 1 223 1 
33 1 225 1 226 1 325 2 204 1 286 1 348 1 163 1 267 1 111 1 361 1 194 2 329 1 117 1 312 1 
58 1 43 1 325 1 165 1 194 1 
137 1 58 1 325 2 277 1 361 1 165 1 194 2 204 1 
58 1 325 1 194 1 
33 1 133 1 283 1 325 1 203 1 286 1 14 1 348 1 163 1 165 1 194 1 329 1 117 1 312 1 
361 1 
58 1 333 1 325 2 277 1 361 1 165 1 194 2 204 1 
92 1 95 1 58 2 298 1 356 2 46 1 325 5 277 1 216 1 6 1 204 1 307 2 39 1 336 2 221 1 361 1 165 2 194 5 341 1 
299 1 82 1 
33 2 175 1 348 2 163 2 82 2 91 1 329 1 117 1 312 1 
301 1 182 1 247 1 
33 1 123 1 227 1 366 1 217 1 17 1 99 1 38 1 163 1 208 1 252 1 209 1 82 1 71 1 166 1 29 1 
156 1 33 2 75 1 247 1 227 1 366 1 217 1 17 1 348 1 99 1 38 1 252 1 163 2 208 1 209 1 71 1 166 1 117 1 312 1 29 1 
348 3 156 1 163 3 33 3 82 1 329 1 312 3 117 3 
286 1 348 1 163 1 33 1 283 1 312 1 117 1 
286 1 348 1 163 1 33 1 91 1 175 1 312 1 117 1 329 1 
30 1 33 4 156 1 325 1 366 1 217 1 8 1 162 1 348 3 38 1 163 4 267 1 111 1 91 1 71 1 166 1 329 2 312 3 117 3 194 1 93 1 169 1 371 1 75 1 225 1 226 1 227 1 203 1 286 1 205 1 17 1 99 1 288 1 129 1 252 1 208 1 209 1 52 1 82 1 178 1 22 1 83 2 29 1 27 1 
348 2 163 2 33 2 156 1 138 1 82 1 312 1 117 1 223 1 
156 2 33 3 75 1 225 1 226 1 325 1 286 1 348 3 163 3 52 1 267 1 111 1 91 1 361 1 329 1 194 1 117 3 312 3 102 1 
156 1 33 2 182 1 247 1 348 2 163 2 91 1 329 1 117 2 312 2 
33 1 227 1 366 1 217 1 17 1 99 1 38 1 163 1 208 1 252 1 209 1 82 1 71 1 166 1 29 1 
33 1 227 1 366 1 230 1 217 1 37 1 17 1 38 1 163 1 208 1 209 1 82 1 71 1 166 1 29 1 
296 1 30 1 61 1 364 1 301 2 182 2 215 1 275 1 90 1 8 1 113 1 69 1 369 1 350 1 93 2 371 1 169 4 247 2 317 2 205 1 288 1 129 1 83 2 153 1 
286 1 348 1 163 1 33 1 111 1 261 1 312 1 117 1 
118 1 348 5 163 5 33 5 156 2 138 1 75 1 82 1 152 1 91 1 329 1 312 4 117 4 223 1 
286 1 348 2 163 2 33 2 261 1 283 1 312 2 117 2 
258 1 263 1 
258 1 263 1 
132 1 13 1 
132 1 13 1 
132 1 13 1 
258 1 2 1 263 1 
258 1 2 1 263 1 
258 1 260 1 263 1 
258 2 219 1 132 1 13 1 263 2 218 1 
258 1 2 1 263 1 
258 1 349 1 263 1 
258 1 349 1 263 1 
258 1 349 1 263 1 
62 2 44 1 146 2 325 2 372 1 188 1 265 1 334 1 375 2 164 2 361 1 222 2 194 2 268 1 
33 1 44 1 62 1 302 1 325 1 146 1 276 1 5 1 348 1 163 1 375 1 164 1 140 1 222 1 194 1 117 1 312 1 154 1 
280 1 125 1 24 1 
370 1 125 1 24 1 
370 1 280 2 130 1 172 1 327 1 24 3 
370 1 280 1 246 1 130 1 327 1 24 2 
370 1 280 1 130 1 327 2 24 2 
296 1 58 1 214 1 302 1 215 1 88 1 325 5 276 1 277 1 5 1 160 2 6 2 347 1 307 1 39 3 113 1 69 1 165 4 194 5 73 1 121 2 97 1 356 1 77 1 204 1 374 1 19 1 336 1 292 3 361 2 234 2 341 1 
296 3 1 1 58 6 215 3 88 3 325 9 5 4 277 1 160 6 6 6 347 2 307 2 39 8 113 3 69 3 165 7 194 9 95 1 73 3 43 5 120 5 97 1 173 1 356 2 124 1 149 1 204 1 358 1 19 2 336 2 292 9 361 5 234 6 212 1 341 1 
296 1 214 1 88 1 215 1 325 3 5 1 6 2 160 2 347 1 307 1 39 3 113 1 69 1 165 2 194 3 73 2 95 1 121 1 356 1 204 1 374 1 19 1 336 1 361 3 292 4 234 2 
296 2 1 1 214 1 88 2 215 2 325 4 5 2 160 4 6 4 347 1 307 1 39 5 113 2 69 2 165 3 194 4 73 3 95 1 121 2 356 1 204 1 149 1 374 1 358 1 19 1 336 1 361 4 292 7 234 4 
299 1 359 1 217 1 
217 1 281 1 
80 1 
71 1 217 1 
150 1 98 1 359 2 71 1 217 3 166 1 
71 1 217 1 166 1 
170 1 217 1 
296 1 93 3 169 7 171 1 105 1 106 2 126 1 317 4 331 1 332 1 344 1 127 1 161 1 113 1 210 1 369 3 153 2 
296 1 93 3 169 7 171 1 105 1 106 2 126 1 317 4 331 1 332 1 344 1 127 1 161 1 113 1 210 1 369 3 153 2 
296 1 93 3 169 7 171 1 105 1 106 2 35 1 126 1 317 4 331 1 332 1 344 1 127 1 161 1 113 1 210 1 369 3 153 2 
30 1 296 4 105 2 88 3 215 3 106 3 159 1 344 1 367 3 161 1 8 1 113 4 69 3 328 4 369 10 351 1 93 15 371 1 169 31 315 1 171 2 126 1 317 16 331 2 373 1 332 2 127 5 205 1 206 1 176 1 319 1 210 1 83 2 153 5 
296 1 30 2 363 1 105 1 106 2 344 1 8 2 113 1 369 4 351 1 93 4 371 2 169 9 171 1 202 1 317 5 126 1 331 1 332 1 205 2 127 1 210 1 83 4 153 3 
235 1 181 1 158 1 303 1 366 1 135 1 185 1 280 1 242 1 220 2 368 1 41 1 142 1 370 1 200 1 45 1 172 1 174 1 125 1 227 1 284 1 17 1 335 1 209 1 291 1 255 1 24 2 362 1 271 2 29 1 
235 1 259 1 272 1 181 1 4 1 366 1 135 1 185 1 280 1 242 1 220 3 368 1 41 1 142 1 370 1 200 1 45 1 172 1 174 1 125 1 227 1 284 1 17 1 335 1 209 1 255 2 24 2 362 1 271 3 29 1 
235 1 272 1 4 1 366 1 135 1 185 1 280 1 242 1 220 2 368 1 142 1 370 1 200 1 172 1 174 1 227 1 125 1 17 1 335 1 209 1 255 2 24 2 362 1 271 2 29 1 
259 1 316 1 45 1 174 2 284 1 227 1 366 1 217 1 186 1 7 1 17 1 81 1 208 1 335 2 209 1 242 2 220 1 139 1 71 1 368 2 29 1 28 1 271 1 
235 1 272 1 181 1 303 1 366 1 280 1 242 1 220 1 368 1 41 1 370 1 200 1 45 1 172 1 174 1 125 1 227 1 284 1 17 1 335 1 209 1 291 1 24 2 362 1 271 1 29 1 
294 1 
295 2 58 6 60 1 157 2 6 2 217 1 7 1 307 1 110 1 348 1 163 1 267 1 111 1 71 1 311 2 223 1 73 2 225 1 226 1 356 1 227 2 228 1 79 2 17 2 18 2 81 1 19 1 360 1 320 4 361 2 29 1 237 1 33 1 273 2 325 5 277 3 366 2 187 1 39 2 243 1 194 5 330 1 198 1 248 1 251 1 204 1 286 1 207 1 208 2 209 1 336 1 101 1 256 2 292 2 341 1 
198 1 58 2 33 1 225 1 226 1 325 3 277 1 251 1 286 1 110 1 348 1 333 1 163 1 267 1 111 1 360 1 243 1 101 1 320 2 311 1 194 3 223 1 
295 1 198 1 58 1 33 1 225 1 226 1 325 3 277 1 251 1 204 1 286 1 110 1 348 1 333 1 163 1 267 1 111 1 360 1 243 1 101 1 320 3 361 1 194 3 223 1 
295 1 58 2 33 1 325 3 277 1 348 1 110 1 163 1 267 1 111 1 243 1 194 3 311 1 223 1 198 1 225 1 226 1 251 1 79 1 204 1 286 1 333 1 360 1 101 1 320 3 361 1 
295 4 58 7 157 2 6 1 307 1 110 1 348 1 163 1 267 1 111 1 311 4 223 1 168 1 73 2 225 1 226 1 356 1 228 1 79 4 18 2 231 1 360 1 320 6 361 5 323 1 33 1 273 2 325 5 277 3 39 1 243 1 194 5 42 1 198 1 330 1 251 1 50 1 204 5 286 1 333 1 336 1 101 1 256 2 341 1 
295 2 58 4 33 1 273 2 157 2 325 4 277 2 6 1 307 1 110 1 348 1 163 1 39 1 267 1 111 1 243 1 311 2 194 4 223 1 330 1 198 1 73 2 225 1 226 1 356 1 228 1 251 1 204 1 79 2 286 1 18 2 207 1 360 1 336 1 101 1 256 2 320 4 361 2 292 2 341 1 
295 2 58 4 33 1 273 2 157 2 325 4 277 2 6 1 307 1 348 1 110 1 163 1 39 1 267 1 111 1 243 1 311 2 194 4 223 1 330 1 198 1 73 2 168 1 225 1 226 1 356 1 228 1 251 1 50 1 204 1 79 2 286 1 18 2 231 1 360 1 336 1 101 1 256 2 320 4 361 1 341 1 
295 2 58 4 33 1 273 2 157 2 325 4 277 2 6 1 307 1 348 1 110 1 163 1 39 1 267 1 111 1 243 1 311 2 194 4 223 1 330 1 198 1 73 2 168 1 225 1 226 1 356 1 228 1 251 1 50 1 204 1 79 2 286 1 18 2 231 1 360 1 336 1 101 1 256 2 320 4 361 1 341 1 
295 2 58 4 33 1 273 2 134 2 325 4 64 1 277 2 6 1 307 1 240 1 348 1 110 1 163 1 39 1 267 1 111 1 243 1 311 2 194 4 223 1 330 1 198 1 224 1 225 1 226 1 356 1 251 1 204 1 79 2 286 1 18 2 231 1 360 1 337 2 336 1 101 1 320 4 361 1 292 2 341 1 
295 3 58 5 33 1 273 2 157 2 325 4 277 2 6 1 307 1 348 1 110 1 163 1 39 1 267 1 111 1 243 1 194 4 311 3 223 1 42 1 330 1 198 1 73 2 168 1 225 1 226 1 356 1 228 1 50 1 251 1 204 1 79 3 286 1 18 2 231 1 360 1 336 1 101 1 256 2 320 5 361 1 341 1 
295 3 58 5 33 1 273 2 157 2 325 4 277 2 6 1 307 1 348 1 110 1 163 1 39 1 267 1 111 1 243 1 194 4 311 3 223 1 42 1 330 1 198 1 73 2 168 1 225 1 226 1 356 1 228 1 50 1 251 1 204 1 79 3 286 1 18 2 231 1 360 1 336 1 101 1 256 2 320 5 361 1 341 1 
295 2 58 4 33 1 273 2 134 2 325 4 277 2 6 1 307 1 110 1 348 1 240 1 163 1 39 1 267 1 111 1 243 1 311 2 194 4 223 1 330 1 198 1 225 1 226 1 356 1 251 1 204 1 79 2 286 1 18 2 207 1 360 1 337 2 336 1 101 1 320 4 361 1 292 2 341 1 
296 1 30 1 93 3 169 6 371 1 299 1 61 1 301 1 182 1 106 1 247 1 317 3 126 1 331 1 332 1 344 1 205 1 8 1 288 1 129 1 82 2 113 1 210 1 83 2 369 2 153 2 
30 2 296 1 301 11 183 1 88 2 215 2 182 4 89 1 367 3 8 2 266 1 113 2 69 1 70 1 328 3 369 2 93 6 371 2 169 14 247 11 317 8 269 1 127 1 205 2 288 2 206 1 129 1 319 1 82 1 22 1 83 4 377 1 153 1 
30 1 33 2 156 1 300 1 182 1 366 1 217 1 89 1 8 1 348 1 38 1 163 2 71 1 166 1 312 1 117 1 93 1 371 1 169 2 75 1 123 1 47 1 227 1 249 1 317 1 269 1 17 1 205 1 99 1 288 1 252 1 208 1 129 1 209 1 82 1 83 2 22 1 29 1 
296 3 297 1 156 1 301 7 215 2 106 1 262 1 217 2 344 1 345 2 8 3 348 1 162 2 163 3 113 3 69 2 71 2 117 1 312 1 166 2 169 20 75 1 357 2 227 3 126 1 317 10 269 1 15 1 17 3 127 4 129 3 82 2 22 1 83 6 29 2 30 3 33 3 272 1 324 2 182 7 88 2 366 3 89 1 38 2 369 8 93 10 371 3 247 7 331 1 332 1 205 3 99 2 288 3 208 1 252 2 209 2 210 1 338 2 153 4 
85 1 30 2 57 2 33 1 156 1 61 1 3 1 158 1 304 1 238 1 366 7 217 4 8 2 7 1 190 1 348 1 163 1 309 1 71 3 312 1 117 1 166 1 196 1 93 1 371 2 169 2 355 1 227 6 229 1 317 1 269 1 17 7 205 2 288 2 208 2 129 2 81 1 209 3 83 4 22 1 213 1 29 3 
30 1 296 1 33 1 301 1 182 1 274 1 88 1 215 1 89 1 8 1 348 1 163 1 113 1 69 1 91 1 369 1 117 1 329 1 312 1 93 2 371 1 169 3 247 1 317 1 205 1 288 1 129 1 83 2 153 1 
30 1 169 2 371 1 61 1 301 1 182 1 215 1 247 1 317 2 127 1 205 1 8 1 288 1 129 1 113 1 83 2 369 1 350 1 
30 1 296 1 93 2 169 2 371 1 61 1 301 1 182 1 247 1 205 1 8 1 90 1 288 1 129 1 69 1 83 2 369 1 153 1 
296 1 30 1 93 2 169 4 371 1 61 1 301 2 182 2 88 1 215 1 247 2 317 2 127 1 205 1 8 1 288 1 129 1 113 1 69 1 83 2 369 2 153 1 
30 1 169 2 371 1 301 1 182 1 215 1 247 1 317 2 127 1 205 1 8 1 288 1 129 1 309 1 113 1 83 2 369 1 350 1 
30 1 296 1 93 2 169 2 371 1 301 1 182 1 247 1 205 1 8 1 90 1 288 1 129 1 309 1 69 1 83 2 369 1 153 1 
296 1 30 1 93 2 169 4 371 1 301 2 182 2 88 1 215 1 247 2 317 2 127 1 205 1 8 1 288 1 129 1 309 1 113 1 69 1 83 2 369 2 153 1 
296 1 30 1 93 2 371 1 169 4 301 2 182 2 88 1 215 1 247 2 317 2 127 1 205 1 8 1 288 1 129 1 113 1 69 1 83 2 369 2 153 1 
30 1 33 1 366 1 217 1 8 1 162 1 38 1 163 1 71 1 166 1 93 1 169 2 371 1 227 1 317 1 269 1 17 1 205 1 99 1 288 1 252 1 208 1 129 1 209 1 82 1 83 2 22 1 29 1 
30 1 33 1 366 1 217 1 37 1 8 1 38 1 163 1 71 1 166 1 93 1 169 2 371 1 227 1 317 1 230 1 269 1 17 1 205 1 288 1 208 1 129 1 209 1 82 1 83 2 22 1 131 1 29 1 
296 1 30 1 93 2 169 4 371 1 301 2 182 2 88 1 215 1 247 2 89 1 317 2 127 1 205 1 8 1 288 1 129 1 113 1 69 1 83 2 369 2 153 1 
296 1 30 1 33 1 301 2 182 2 215 1 88 1 158 1 366 1 217 1 345 1 8 1 162 1 38 1 163 1 113 1 69 1 71 1 369 2 166 1 93 2 169 4 371 1 247 2 227 1 317 2 127 1 17 1 205 1 99 1 288 1 252 1 129 1 209 1 83 2 153 1 29 1 
296 1 30 1 33 1 301 1 88 1 215 1 182 1 89 1 8 1 348 1 163 1 113 1 69 1 91 1 369 1 117 1 329 1 312 1 93 1 371 1 169 3 247 1 317 2 127 1 205 1 288 1 129 1 83 2 26 1 
30 2 296 3 88 3 215 3 108 1 367 1 8 2 278 1 279 1 113 3 69 3 40 1 328 2 369 6 197 2 93 10 371 2 169 19 202 1 317 9 318 1 205 2 127 3 206 1 128 2 270 1 254 1 319 1 83 4 153 3 
296 2 30 3 88 3 215 3 65 1 184 1 367 2 67 1 8 3 278 1 279 2 112 1 113 3 69 2 40 2 328 2 369 4 351 2 352 1 197 1 93 12 371 3 169 26 202 1 317 14 287 1 127 2 205 3 128 4 270 1 254 1 319 2 83 6 153 2 
30 3 296 5 88 4 215 4 106 1 108 1 65 1 184 1 326 1 344 1 367 3 67 1 8 3 278 1 279 1 112 1 113 5 69 4 40 2 328 4 369 8 351 1 352 1 197 1 93 21 371 3 169 41 202 1 126 1 317 20 331 1 332 1 287 1 205 3 127 4 206 1 128 4 270 1 254 1 319 3 210 1 83 6 153 4 
30 4 296 4 88 4 215 4 106 1 108 1 65 1 184 1 326 1 344 1 367 3 67 1 8 4 278 1 279 1 112 1 113 5 69 3 40 2 328 4 369 7 351 2 352 1 197 1 93 18 371 4 169 38 202 1 126 1 317 20 331 1 332 1 287 1 205 4 127 3 206 1 128 4 270 1 254 1 319 3 210 1 83 8 153 4 
30 2 296 8 88 7 215 7 106 1 65 1 184 1 344 1 367 4 67 1 8 2 278 1 279 1 112 1 113 8 69 7 40 1 328 4 369 14 351 1 352 1 197 1 93 25 371 2 169 52 202 1 126 1 317 27 331 1 332 1 287 1 205 2 127 7 206 2 128 4 270 1 254 1 319 2 210 1 83 4 377 2 153 7 
119 1 265 1 62 1 164 1 146 1 222 1 
140 1 
62 1 164 1 146 1 222 1 285 1 
44 1 62 1 325 1 146 1 372 1 188 1 265 1 334 1 375 2 164 1 361 1 222 1 194 1 268 1 
44 1 62 1 325 1 146 1 372 1 188 1 265 1 334 1 375 2 164 1 361 1 222 1 194 1 268 1 
44 1 62 1 325 1 146 1 372 1 188 1 265 1 334 1 375 2 164 1 361 1 222 1 194 1 268 1 
21 1 
21 1 
177 1 
177 1 
63 1 239 1 
62 1 302 1 146 1 325 1 276 1 5 1 372 1 188 1 136 1 375 1 164 1 140 1 222 1 165 1 194 1 154 1 
21 1 
177 1 
30 1 57 2 33 2 3 1 366 2 217 1 89 1 8 1 348 2 163 2 68 1 71 1 245 1 141 1 93 1 371 1 169 2 78 1 227 2 229 1 317 1 269 1 17 2 205 1 288 1 129 1 209 1 253 1 83 2 22 1 29 1 
370 1 200 1 272 1 181 1 122 1 172 1 158 1 125 1 227 2 366 2 17 2 280 1 209 1 20 1 368 1 23 1 24 2 362 1 29 1 
370 1 200 1 272 1 181 1 122 1 172 1 125 1 227 1 366 1 147 1 17 1 280 1 209 1 368 1 24 2 362 1 29 1 
227 1 366 1 36 1 217 1 186 1 17 1 7 1 208 1 81 1 209 1 20 1 71 1 368 1 29 1 
370 1 200 1 272 1 181 1 122 1 172 1 125 1 227 1 366 1 17 1 280 1 209 1 20 1 368 1 23 1 24 2 362 1 29 1 
365 1 
92 1 298 1 39 1 299 1 361 1 6 1 204 1 
58 1 157 1 325 1 277 1 6 1 307 1 39 1 194 1 73 1 356 1 228 1 204 1 336 1 256 1 292 1 361 2 341 1 
296 2 58 5 298 1 59 2 215 2 158 1 217 10 160 6 6 8 307 4 113 2 69 2 71 3 166 3 167 1 353 1 73 6 170 2 226 2 356 4 227 3 16 1 17 3 232 2 19 2 359 2 361 8 322 2 234 6 29 3 87 2 237 1 324 2 88 2 325 5 277 3 366 3 39 9 244 1 194 5 281 3 92 1 201 2 144 2 250 1 49 2 204 2 150 1 208 1 209 4 336 4 339 2 292 12 341 4 
296 2 58 1 237 1 88 2 215 2 107 1 325 1 277 1 65 1 184 1 160 5 6 5 367 1 307 2 241 1 39 8 112 1 113 2 69 2 328 1 194 1 352 1 73 3 144 2 356 2 204 2 287 1 19 1 319 1 336 2 339 1 292 6 361 5 234 5 341 2 
296 1 33 1 133 1 325 1 6 2 307 1 348 1 163 1 39 2 113 2 310 1 194 1 329 1 117 1 312 1 144 2 283 1 356 1 126 1 331 1 50 1 332 1 203 1 286 1 14 1 336 1 339 1 341 1 
92 1 298 1 356 1 6 1 204 1 307 1 39 1 336 1 361 1 341 1 
296 2 73 5 144 2 324 1 88 2 215 2 6 5 160 5 39 5 113 2 69 2 339 1 292 10 361 5 234 5 
58 1 325 1 277 1 361 1 194 1 204 1 
58 4 237 2 60 1 325 3 277 2 366 4 217 1 6 2 187 1 307 2 7 1 39 2 244 1 71 1 194 3 72 1 95 1 96 1 356 2 227 4 250 2 17 4 208 2 81 1 209 1 19 2 336 2 29 1 341 1 
30 1 33 3 366 1 217 1 8 1 348 2 162 1 38 1 163 3 71 1 312 2 117 2 329 2 166 1 93 1 169 1 371 1 227 1 203 1 17 1 205 1 99 1 288 1 208 1 252 1 129 1 209 1 82 1 22 1 83 2 27 1 29 1 
73 2 237 1 106 1 356 1 160 2 6 2 204 2 307 1 19 1 39 1 336 1 292 4 361 4 234 2 341 1 
164 1 146 1 148 1 
164 1 146 1 148 1 
164 1 63 1 146 1 55 1 264 1 
164 1 146 1 148 1 
164 1 146 1 104 1 
164 1 146 1 104 1 
164 1 146 1 104 1 
164 1 146 1 
258 1 263 1 
296 1 30 2 93 4 169 8 371 2 106 1 126 1 317 4 331 1 344 1 332 1 127 1 205 2 8 2 113 1 210 1 83 4 369 3 153 2 351 1 
296 1 93 3 169 6 299 1 113 1 210 1 106 1 317 3 126 1 369 2 153 2 331 1 332 1 344 1 
296 1 30 1 93 2 371 1 169 4 88 1 215 1 317 2 205 1 8 1 127 1 100 1 113 1 69 1 83 2 369 2 153 1 
296 1 93 4 169 7 88 1 215 1 317 3 367 1 127 1 206 1 319 1 113 1 69 1 328 2 369 2 153 1 
296 3 30 2 215 2 88 2 106 1 344 1 367 2 8 2 266 1 308 1 113 3 69 2 328 2 369 9 351 2 93 12 169 23 371 2 126 1 317 11 331 2 332 2 127 4 205 2 206 1 210 1 83 4 377 1 153 5 
93 1 169 1 328 1 
169 1 317 1 367 1 
30 1 296 1 93 3 371 1 169 6 324 1 88 1 215 1 317 3 8 1 205 1 127 1 100 1 113 1 69 1 83 2 369 3 153 2 
30 1 296 2 88 2 215 2 65 1 184 1 367 1 8 1 112 1 113 2 69 2 328 1 369 2 352 1 93 6 169 12 371 1 202 1 317 6 287 1 127 1 205 1 319 1 83 2 153 1 
296 1 93 3 169 6 126 1 317 3 331 1 332 1 127 1 113 1 369 2 153 1 
30 1 93 2 169 3 371 1 317 1 331 1 332 1 344 1 127 1 205 1 8 1 308 1 210 1 83 2 369 2 153 1 351 1 
30 1 296 2 93 5 371 1 169 10 202 1 317 5 126 1 331 2 332 2 8 1 205 1 127 2 113 2 310 1 83 2 369 5 153 3 
30 1 371 1 169 2 215 1 202 1 317 2 205 1 8 1 127 1 113 1 83 2 369 1 
296 1 30 1 93 2 371 1 169 4 88 1 215 1 202 1 317 2 205 1 8 1 127 1 113 1 69 1 83 2 369 2 153 1 
30 3 93 2 169 3 371 3 108 1 202 1 317 1 331 1 332 1 205 3 8 3 127 1 308 1 83 6 369 2 153 1 351 1 
30 5 296 5 88 3 215 3 106 1 108 1 344 1 367 3 8 5 308 1 113 5 69 3 328 4 369 12 351 2 93 18 371 5 169 34 315 1 202 1 126 2 317 16 331 3 373 1 332 3 205 5 127 5 206 1 176 1 100 1 319 1 210 1 83 10 153 7 
296 1 30 1 106 1 65 1 367 1 344 1 8 1 113 1 328 1 369 2 93 4 169 8 371 1 202 1 317 4 126 1 331 1 332 1 205 1 319 1 210 1 83 2 153 2 
296 1 30 2 88 1 215 1 106 1 65 1 344 1 367 1 8 2 113 2 328 2 369 3 93 5 169 11 371 2 202 1 126 1 317 6 331 1 332 1 205 2 127 1 206 1 100 1 319 1 210 1 83 4 153 2 
30 3 296 3 88 2 215 2 106 1 65 1 184 1 344 1 367 1 8 3 112 1 113 3 69 2 328 1 369 4 351 1 352 1 93 10 169 19 371 3 202 1 126 1 317 9 331 1 332 1 287 1 127 1 205 3 100 1 319 1 210 1 83 6 153 3 
30 3 296 2 88 2 215 2 106 1 65 1 184 1 344 1 367 1 8 3 112 1 113 3 69 1 328 1 369 5 351 1 352 1 93 7 169 17 371 3 202 1 126 1 317 10 331 1 332 1 287 1 127 2 205 3 100 1 319 1 210 1 83 6 153 3 
296 1 30 1 106 1 65 1 367 1 344 1 8 1 113 1 328 1 369 2 93 4 169 8 371 1 202 1 317 4 126 1 331 1 332 1 205 1 319 1 210 1 83 2 153 2 
30 1 296 2 88 2 215 2 65 1 184 1 367 1 8 1 112 1 113 2 69 2 328 1 369 2 352 1 93 6 169 12 371 1 202 1 317 6 287 1 127 1 205 1 319 1 83 2 153 1 
30 4 296 2 88 2 215 2 106 1 65 1 184 1 344 1 367 1 8 4 112 1 113 3 69 1 328 1 369 5 351 2 352 1 93 8 169 18 371 4 202 1 126 1 317 10 331 1 332 1 287 1 127 2 205 4 100 1 319 1 210 1 83 8 153 3 
30 4 296 2 88 3 215 3 108 1 65 1 184 1 367 1 8 4 112 1 113 3 69 2 328 1 369 6 351 2 352 1 93 7 169 16 371 4 202 1 317 9 287 1 127 3 205 4 319 1 83 8 153 3 
296 1 93 4 169 7 126 1 317 3 331 3 344 2 332 3 127 3 210 1 113 1 369 6 153 3 
30 4 296 2 88 2 215 2 106 1 108 1 65 1 184 1 344 1 367 1 8 4 112 1 113 3 69 1 328 1 369 4 351 2 352 1 93 8 169 18 371 4 202 1 126 1 317 10 331 1 332 1 287 1 127 1 205 4 319 1 210 1 83 8 153 3 
348 1 163 1 33 1 138 1 82 1 342 1 223 1 
33 1 76 1 342 1 348 1 163 1 376 1 138 1 82 1 9 1 293 1 25 1 223 1 
7 1 17 1 81 1 208 1 209 1 299 1 71 1 227 1 366 1 217 1 29 1 
156 1 33 2 227 1 366 1 217 1 17 1 348 1 38 1 163 2 208 1 252 1 209 1 82 1 71 1 166 1 117 1 312 1 29 1 
87 1 156 1 33 2 170 1 225 1 227 1 366 1 217 3 250 1 286 1 17 1 348 2 38 1 163 2 252 1 209 1 111 1 82 1 71 2 166 2 117 1 312 2 29 1 
86 1 87 1 156 1 33 2 170 1 225 1 227 2 366 2 217 3 250 1 230 1 286 1 17 2 348 2 38 1 163 2 209 1 111 1 82 1 71 2 166 2 117 1 312 2 29 1 
86 1 87 1 58 1 170 1 226 1 325 2 227 3 109 1 366 3 250 1 217 4 204 1 17 3 208 1 209 1 359 1 71 1 321 1 361 1 166 1 194 2 29 1 281 1 
86 1 87 1 58 1 170 1 226 1 325 2 227 3 366 3 250 1 217 4 204 1 17 3 232 1 208 1 209 1 359 1 71 1 361 1 166 1 194 2 29 1 281 1 
17 1 209 1 227 1 366 1 238 1 29 1 
196 1 150 1 17 1 208 1 209 1 191 1 71 1 227 1 366 1 217 1 166 1 29 1 
296 1 30 2 33 2 156 1 301 1 182 1 106 1 158 1 366 1 217 1 89 1 344 1 345 1 8 2 348 1 162 1 38 1 163 2 113 1 71 1 369 2 166 1 312 1 117 1 93 3 169 6 371 2 247 1 78 1 227 1 317 3 126 1 331 1 332 1 205 2 17 1 99 1 288 2 129 2 252 1 209 1 82 2 210 1 338 1 83 4 153 2 29 1 
58 2 298 1 59 1 325 3 277 1 366 1 6 1 217 2 307 2 39 1 244 1 165 1 194 3 281 1 92 1 201 1 226 1 356 2 227 1 204 1 17 1 232 1 208 1 359 1 336 2 361 1 322 1 341 2 
16 1 150 1 17 2 209 2 359 1 158 1 71 1 227 2 366 2 238 1 217 2 166 1 29 1 
86 1 7 1 17 4 81 1 208 1 209 1 158 1 71 1 227 4 366 4 217 1 29 1 66 1 
196 1 85 1 15 1 17 1 209 1 71 1 227 1 366 1 217 1 166 1 29 1 213 1 
17 1 370 1 200 1 208 1 209 1 125 1 227 1 24 1 366 1 29 1 
17 2 209 1 68 1 272 1 3 1 158 1 71 1 227 2 366 2 217 1 29 1 
158 1 3 1 227 4 304 1 366 5 250 1 217 3 66 1 7 1 17 5 190 1 81 1 208 1 209 2 71 2 29 2 
158 1 3 1 227 4 304 1 366 5 250 1 217 3 66 1 7 1 17 5 81 1 208 1 209 2 71 2 195 1 29 2 
156 1 33 2 227 1 366 1 217 1 230 1 17 1 348 1 38 1 163 2 208 1 209 1 82 1 71 1 166 1 117 1 312 1 29 1 
196 1 150 1 17 1 209 1 191 1 71 1 227 1 366 1 217 1 166 1 250 1 29 1 
155 1 314 1 289 1 82 1 53 1 
155 1 314 2 225 1 226 1 325 2 48 1 204 1 286 1 289 2 52 1 267 1 111 1 82 1 151 1 114 1 53 2 361 1 165 1 194 2 
155 1 348 1 314 1 163 1 33 1 289 1 253 1 245 1 141 1 
155 1 114 1 151 1 
142 1 299 1 135 1 185 1 
142 1 220 1 45 1 284 1 135 1 185 1 271 1 
335 1 174 1 271 1 
142 1 220 3 45 1 11 1 303 1 284 1 305 2 135 1 185 1 56 1 271 3 346 1 
142 1 179 1 220 2 45 1 255 1 284 1 135 1 185 1 271 2 
142 1 45 1 303 1 284 1 125 1 280 1 220 1 116 1 193 1 24 1 271 1 
142 1 220 1 45 1 303 1 284 1 135 1 271 1 
220 1 45 1 303 1 284 1 135 2 185 1 271 1 
142 1 220 2 45 2 303 1 12 1 284 2 34 1 135 1 271 2 51 1 
142 2 199 1 45 1 303 1 284 1 135 1 185 1 220 3 255 2 193 1 340 1 84 1 271 3 
257 1 142 1 370 1 45 1 172 1 303 1 284 1 125 1 135 1 185 1 280 1 220 2 255 1 24 2 271 2 
142 2 199 1 179 1 74 1 45 2 303 1 284 2 135 1 185 1 220 4 255 2 193 1 271 4 
142 1 220 1 45 1 303 1 284 1 135 1 185 1 271 1 
142 3 199 1 45 1 11 1 145 1 284 1 305 1 135 2 185 2 220 4 255 2 193 1 56 1 271 4 
0 1 142 1 32 1 220 2 45 1 303 1 255 1 284 1 54 1 135 1 185 1 271 2 
142 1 143 1 45 1 11 1 303 1 284 1 305 2 135 1 185 1 220 3 271 3 56 2 
313 1 142 2 282 1 343 2 
180 1 220 1 45 1 303 1 284 1 271 1 
142 1 220 2 45 1 303 1 255 1 284 1 135 1 84 1 185 1 271 2 
211 1 
142 1 220 1 45 1 303 1 284 1 135 1 185 1 271 1 
142 1 45 1 303 1 284 1 305 1 135 1 185 1 220 3 255 1 84 1 271 3 
142 1 199 1 145 1 193 1 
142 1 135 1 

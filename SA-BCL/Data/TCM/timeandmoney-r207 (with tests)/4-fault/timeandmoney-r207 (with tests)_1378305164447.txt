#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
248 2 249 1 297 1 326 1 126 1 210 2 127 1 361 1 305 1 365 1 240 1 25 1 30 9 190 7 165 9 192 2 267 1 193 1 269 4 322 5 356 3 196 1 171 1 200 1 
248 2 249 1 30 9 297 1 190 7 326 1 165 9 126 1 127 1 210 2 361 1 192 2 193 1 267 1 322 5 269 4 356 3 196 1 305 1 171 1 365 1 240 1 200 1 25 1 
30 3 190 1 165 3 126 1 210 2 361 1 192 2 267 1 269 1 322 2 356 1 171 1 365 1 
248 2 297 2 326 1 126 1 210 2 127 1 361 2 4 1 156 1 305 2 306 1 365 1 240 1 25 1 30 9 190 6 165 9 373 1 192 2 267 1 193 1 269 4 322 5 356 3 171 1 200 2 147 1 275 1 
248 2 297 2 326 1 126 1 210 2 127 1 361 2 4 1 156 1 305 2 306 1 365 1 240 1 25 1 30 9 190 6 165 9 373 1 192 2 267 1 193 1 269 4 322 5 356 3 171 1 200 2 147 1 275 1 
248 2 297 2 326 1 126 1 210 2 127 1 361 2 4 1 156 1 305 2 306 1 365 1 240 1 25 1 30 10 190 7 165 10 373 1 192 2 267 1 193 1 269 5 322 6 356 4 171 1 200 2 147 1 275 1 
248 1 297 2 326 1 126 1 210 2 127 1 361 2 4 1 156 1 305 2 306 1 365 1 25 1 30 7 190 4 165 7 373 1 192 2 267 1 193 1 269 3 322 4 356 2 171 1 200 2 147 1 275 1 
248 2 30 4 297 1 190 3 165 4 326 1 126 1 210 1 127 1 192 1 269 2 322 3 356 1 305 1 171 1 365 1 240 1 200 1 
247 1 30 2 111 1 297 1 165 2 126 1 210 1 317 1 373 1 361 1 192 1 4 1 322 1 171 1 305 1 365 1 
50 1 232 1 163 1 325 1 252 1 349 1 355 1 304 1 61 1 106 1 342 1 47 1 98 1 202 1 
336 1 
336 1 100 1 325 1 16 1 106 2 349 2 155 1 238 1 
100 1 188 1 0 1 325 2 250 1 115 1 349 5 266 2 82 2 238 2 336 1 96 1 119 1 16 1 106 5 184 1 108 1 187 1 287 2 
336 1 100 1 83 1 
18 1 
232 2 50 2 355 2 163 1 304 2 98 2 202 2 55 1 
232 2 19 1 41 1 125 2 276 1 2 1 235 2 154 1 129 1 304 2 283 1 105 1 159 1 182 2 132 1 366 1 367 1 64 1 368 1 218 1 50 2 163 1 29 1 219 1 139 1 374 1 70 1 268 1 355 2 118 1 36 1 357 1 98 3 272 2 202 3 55 1 39 2 
232 1 50 1 355 1 163 1 304 1 61 1 342 1 47 1 98 1 202 1 
100 1 232 1 277 1 252 1 299 1 336 1 304 1 61 1 106 1 342 1 47 2 260 1 50 1 163 1 243 1 349 1 355 2 292 1 170 1 98 2 202 2 
100 1 50 2 232 2 260 1 163 1 252 1 243 1 349 2 299 1 336 1 355 2 304 2 61 1 170 1 106 2 342 1 98 2 47 2 202 2 
338 1 325 1 106 1 349 1 238 1 
336 1 100 1 325 1 16 1 106 2 349 2 318 1 238 1 
106 1 349 1 238 1 
50 1 232 1 369 1 254 1 355 2 304 1 98 2 202 2 55 2 
328 1 301 1 99 1 
218 1 233 1 41 1 276 1 235 1 283 1 118 1 182 1 98 1 132 1 202 1 55 1 367 1 366 1 39 1 368 1 
55 1 83 1 
218 1 50 1 232 1 41 1 276 1 328 1 235 1 104 1 355 1 283 1 118 1 182 1 132 1 98 2 202 2 366 1 367 1 39 1 241 1 368 1 
50 4 232 4 206 1 254 1 331 1 104 2 355 5 304 1 292 1 130 1 98 5 202 5 55 1 241 1 
232 2 50 2 355 2 342 1 47 1 98 2 32 1 202 2 
232 3 50 3 355 3 304 1 98 3 202 3 55 1 104 1 
232 1 50 1 355 1 342 1 47 1 98 1 202 1 
232 1 50 1 369 1 355 1 304 1 254 1 47 1 98 1 202 1 
232 3 41 1 276 1 125 1 235 1 129 1 283 1 182 1 47 2 132 1 241 1 50 3 243 1 139 1 349 1 355 3 197 1 143 1 357 1 98 4 202 4 55 1 19 1 299 1 254 1 154 1 104 1 304 2 105 1 159 1 106 1 367 1 366 1 368 1 260 1 218 1 163 1 219 1 264 1 374 1 170 1 118 1 36 1 272 2 39 1 
232 1 50 1 355 2 292 1 206 1 98 2 202 2 55 1 104 1 
50 3 232 3 260 1 360 1 264 1 243 1 254 1 349 1 299 1 104 2 336 1 355 3 304 1 170 1 106 1 47 1 98 3 202 3 241 1 
50 2 232 2 328 1 254 1 104 1 301 1 355 2 304 1 98 2 202 2 
218 1 41 1 276 1 235 1 283 1 118 1 182 1 98 1 132 1 202 1 55 1 367 1 366 1 39 1 368 1 
218 1 276 1 151 1 235 1 283 1 118 1 182 1 86 1 98 1 132 1 202 1 55 1 366 1 39 1 368 1 
80 1 19 1 125 4 175 1 328 2 2 2 154 1 3 1 103 1 301 2 129 1 105 2 65 1 219 1 139 1 244 1 374 1 11 1 142 1 144 1 227 1 53 1 272 2 99 2 
260 1 232 1 50 1 355 1 47 1 98 1 202 1 32 1 
284 1 312 1 185 1 
15 1 312 2 222 1 185 2 211 1 288 1 
312 1 185 1 
312 1 185 1 
222 1 211 1 
222 1 211 1 
222 1 211 1 
312 1 185 1 186 1 
312 1 185 1 186 1 
312 1 185 1 186 1 
378 1 312 1 185 1 
378 1 312 1 185 1 
378 1 312 1 185 1 
232 2 1 1 237 1 284 1 106 1 185 1 50 2 89 1 164 1 312 1 31 1 114 1 93 1 349 1 95 1 140 1 354 1 355 2 270 1 225 1 98 2 17 1 202 2 55 1 
110 1 164 2 312 2 114 3 349 2 95 2 223 1 140 1 72 1 321 1 336 1 354 2 15 1 270 2 106 2 363 2 339 1 185 2 27 1 
60 1 111 1 305 2 200 1 43 2 
297 1 305 1 200 1 
111 1 297 1 305 1 
60 1 111 1 305 3 208 1 200 2 43 1 
60 1 111 1 305 2 145 1 200 1 43 1 
100 1 325 4 176 1 178 1 302 1 179 1 82 1 238 1 337 2 21 1 336 2 106 5 160 2 364 1 343 1 187 1 287 1 65 1 289 2 188 3 89 1 93 1 349 5 266 1 224 1 96 2 16 1 144 1 227 1 17 1 18 3 53 1 
100 1 325 7 250 1 176 3 152 1 236 1 59 5 178 2 302 3 238 6 82 2 337 6 336 5 21 1 338 5 85 1 106 9 160 6 343 2 109 1 187 1 287 2 65 3 188 8 370 1 314 1 93 4 349 9 266 2 96 6 16 1 144 3 227 3 18 9 53 3 
100 1 325 2 250 1 176 2 178 1 179 1 82 1 302 1 336 3 337 2 106 3 160 2 364 1 343 1 287 1 65 1 188 3 289 1 93 1 349 3 266 1 96 2 144 1 227 1 53 1 18 4 
100 1 325 3 250 1 176 3 152 1 178 1 82 1 179 1 302 2 336 4 337 4 106 4 160 4 364 1 343 1 287 1 65 2 188 5 289 2 370 1 314 1 93 2 349 4 266 1 96 4 144 2 227 2 18 7 53 2 
45 1 
132 1 133 1 83 1 
132 1 319 1 
218 1 132 1 366 1 
195 1 132 1 
132 1 366 1 
218 1 92 1 132 3 230 1 366 1 133 2 
7 1 8 1 189 1 125 7 347 1 68 1 244 3 102 1 2 4 3 2 128 1 212 1 375 1 105 3 376 2 144 1 53 1 344 1 
19 1 125 31 207 1 102 2 2 16 128 1 3 5 212 1 302 3 282 1 129 1 158 1 105 15 344 2 8 1 7 2 65 3 219 1 67 1 347 5 68 1 139 1 244 10 265 1 10 1 375 2 194 3 376 3 144 4 227 3 272 2 53 4 274 4 231 1 
19 2 125 9 207 1 102 1 2 5 3 3 128 1 180 1 129 2 105 4 239 1 344 1 8 1 7 1 219 2 347 1 139 2 68 1 244 4 375 1 376 2 144 1 53 1 272 4 
7 1 8 1 125 7 347 1 68 1 244 3 102 1 2 4 3 2 128 1 212 1 375 1 105 3 376 2 144 1 53 1 344 1 
7 1 8 1 125 7 347 1 68 1 244 3 102 1 2 4 3 2 128 1 212 1 375 1 105 3 376 2 144 1 53 1 344 1 
298 1 276 1 101 2 235 1 210 1 361 2 181 2 182 1 132 1 162 1 366 1 48 1 368 1 30 1 263 1 165 1 290 1 192 1 118 1 377 1 358 1 39 1 56 2 
135 1 111 1 30 1 297 1 276 1 165 1 101 1 208 1 210 1 235 1 361 1 192 1 334 1 73 1 305 2 118 1 171 1 181 1 182 1 200 1 273 1 217 1 39 1 148 1 205 1 56 1 
297 1 101 1 276 1 126 1 208 1 235 1 210 1 361 1 334 1 305 2 181 1 182 1 365 1 217 1 30 2 111 1 190 1 165 2 191 1 192 1 322 1 73 1 171 1 118 1 200 1 273 1 39 1 56 1 205 1 148 1 
297 1 101 1 276 1 126 1 208 1 235 1 210 1 361 1 334 1 305 2 181 1 182 1 365 1 135 1 30 3 111 1 190 2 165 3 290 1 192 1 322 1 73 1 118 1 200 1 173 1 273 1 39 1 56 1 205 1 148 1 
297 1 101 1 276 1 126 1 208 1 235 1 361 1 334 1 305 2 181 1 182 1 365 1 135 1 30 2 111 1 190 2 165 2 322 1 73 1 118 1 173 1 200 1 39 1 56 1 148 1 
116 1 
100 3 150 1 176 2 277 1 209 5 329 2 299 1 82 1 238 5 336 3 106 4 308 1 341 3 309 1 47 1 187 1 49 1 287 1 311 1 260 1 188 1 137 2 243 1 349 4 348 3 266 1 355 1 96 1 292 1 198 1 170 1 16 2 323 2 120 2 78 1 98 1 174 1 52 1 202 1 296 1 203 3 246 1 
100 3 150 1 176 2 277 1 209 5 329 2 299 1 82 1 238 5 336 3 106 4 308 1 341 3 309 1 47 1 187 1 49 1 287 1 311 1 260 1 188 1 137 2 243 1 349 4 348 3 266 1 355 1 96 1 292 1 170 1 198 1 16 2 323 2 120 2 78 1 98 1 174 1 52 1 202 1 296 1 203 3 246 1 
100 3 277 1 209 4 253 2 299 1 177 2 238 4 82 1 336 3 106 4 341 2 47 1 187 1 49 1 287 1 260 1 188 1 243 1 348 2 349 4 266 1 355 1 96 1 117 1 292 1 198 1 170 1 16 2 323 2 120 2 78 1 174 1 98 1 18 2 202 1 203 2 296 1 204 1 246 1 
123 1 276 1 176 2 277 1 329 2 235 2 178 1 238 6 82 1 336 4 182 2 341 2 132 1 47 1 187 1 49 1 287 1 188 2 137 2 243 1 348 2 349 5 355 1 96 2 292 1 198 1 16 3 358 1 98 1 18 2 202 1 203 2 296 1 246 1 100 3 298 1 209 4 299 1 106 5 258 1 309 1 366 1 368 2 260 1 266 1 117 1 118 1 170 1 35 1 323 2 120 2 121 1 78 1 174 1 39 2 
100 2 277 1 209 2 299 1 155 1 238 2 336 2 106 3 47 1 260 1 243 1 349 3 355 1 292 1 170 1 198 1 16 1 78 1 98 1 174 1 202 1 296 1 203 1 246 1 
100 2 260 1 277 1 209 3 243 1 299 1 349 2 336 2 355 1 292 1 198 1 170 1 106 2 341 1 78 1 47 1 174 1 98 1 202 1 296 1 246 1 
100 3 277 1 209 3 299 1 155 1 238 2 336 3 106 3 341 1 47 1 260 1 243 1 349 3 348 1 355 1 292 1 170 1 198 1 16 1 78 1 98 1 174 1 202 1 296 1 203 1 246 1 
232 1 277 1 176 2 329 2 238 7 82 1 336 4 341 3 342 1 47 2 187 1 287 1 49 1 50 1 188 1 137 2 346 1 243 1 349 5 348 4 355 2 96 1 292 1 198 1 16 3 98 2 52 1 202 2 296 1 203 4 246 1 100 4 150 1 252 1 209 5 299 1 155 1 304 1 61 1 106 5 308 1 309 1 311 1 260 1 163 1 266 1 170 1 323 2 120 2 78 1 174 1 
277 1 176 2 329 2 82 1 238 4 336 4 341 2 47 1 187 1 287 1 49 1 188 1 137 2 243 1 349 4 348 2 355 1 96 1 292 1 198 1 16 2 98 1 202 1 18 2 296 1 203 2 246 1 100 3 209 4 299 1 106 4 309 1 260 1 266 1 117 1 170 1 323 2 120 2 78 1 174 1 
100 3 150 1 176 2 277 1 209 4 329 2 299 1 238 4 82 1 336 3 106 4 308 1 341 2 309 1 47 1 187 1 49 1 287 1 311 1 260 1 188 1 137 2 243 1 348 2 349 4 266 1 355 1 96 1 292 1 170 1 198 1 16 2 323 2 120 2 78 1 98 1 174 1 202 1 203 2 296 1 246 1 
100 3 150 1 176 2 277 1 209 4 329 2 299 1 238 4 82 1 336 3 106 4 308 1 341 2 309 1 47 1 187 1 49 1 287 1 311 1 260 1 188 1 137 2 243 1 348 2 349 4 266 1 355 1 96 1 292 1 170 1 198 1 16 2 323 2 120 2 78 1 98 1 174 1 202 1 203 2 296 1 246 1 
100 3 277 1 209 4 253 2 299 1 177 2 238 4 82 1 336 3 106 4 308 1 341 2 47 1 187 1 49 1 287 1 260 1 188 1 220 1 243 1 348 2 349 4 266 1 355 1 96 1 292 1 170 1 198 1 16 2 323 2 77 1 120 2 78 1 98 1 174 1 18 2 202 1 203 2 296 1 204 1 246 1 
232 1 19 2 298 1 276 2 125 2 235 7 2 1 154 2 335 1 104 1 129 2 105 1 182 8 285 1 132 3 366 2 64 2 368 2 135 1 50 1 242 1 219 2 166 1 139 2 374 2 69 1 191 1 11 1 168 1 268 1 355 1 118 2 357 1 79 1 358 1 98 1 202 1 272 4 39 8 
232 1 19 1 125 3 328 1 2 1 254 1 154 1 3 1 301 1 302 1 129 1 304 1 362 1 105 2 50 1 65 1 219 1 139 1 244 1 374 1 355 1 75 1 144 1 227 1 98 1 272 2 202 1 53 1 99 1 
19 1 125 6 328 1 2 3 154 1 128 1 3 2 301 1 83 1 129 1 105 3 7 1 8 1 219 1 139 1 68 1 244 2 374 1 11 1 375 1 376 1 144 1 272 2 53 1 55 2 99 1 
19 2 125 14 328 11 2 8 154 2 3 1 301 4 302 2 303 1 129 2 158 1 105 6 65 2 112 1 219 2 347 1 139 2 244 2 374 1 10 1 291 1 268 1 194 3 75 1 144 1 227 1 357 1 201 1 272 4 53 2 55 1 274 3 99 11 
232 1 19 1 122 1 41 1 233 1 276 1 125 2 235 1 2 1 154 1 301 1 104 1 129 1 283 1 44 1 105 1 182 1 132 1 366 1 367 1 368 1 241 1 218 1 50 1 219 1 90 1 139 1 374 1 268 1 355 1 118 1 75 1 357 1 98 2 202 2 272 2 55 1 39 1 
232 1 41 2 125 20 276 2 328 7 235 3 2 10 128 1 3 4 129 3 283 2 131 1 182 3 183 1 132 2 134 1 241 1 135 1 7 1 8 1 50 1 91 2 347 4 139 3 244 8 355 1 144 3 357 1 98 3 202 3 53 3 55 2 99 7 19 3 154 3 104 1 301 7 302 2 105 10 24 2 367 2 366 2 368 1 218 2 65 2 219 3 68 1 374 3 375 1 268 1 376 1 75 1 118 2 36 2 227 2 37 2 272 6 39 3 381 2 
65 1 19 1 219 1 125 2 347 1 139 1 244 1 328 1 2 2 374 1 154 1 11 1 103 1 301 1 129 1 272 2 53 1 99 1 
19 1 80 1 219 1 125 2 139 1 244 1 328 1 374 1 154 1 3 1 11 1 301 1 129 1 105 2 144 1 227 1 272 2 99 1 
19 1 125 4 328 2 2 2 154 1 3 1 301 2 302 1 129 1 105 2 65 1 219 1 347 1 139 1 244 2 374 1 11 1 144 1 227 1 53 1 272 2 99 2 
65 1 19 1 219 1 125 2 347 1 139 1 244 1 328 1 2 2 374 1 69 1 154 1 103 1 301 1 129 1 272 2 53 1 99 1 
19 1 80 1 219 1 125 2 139 1 244 1 328 1 374 1 69 1 154 1 3 1 301 1 129 1 105 2 144 1 227 1 272 2 99 1 
19 1 125 4 328 2 2 2 154 1 3 1 301 2 302 1 129 1 105 2 65 1 219 1 347 1 139 1 244 2 374 1 69 1 144 1 227 1 53 1 272 2 99 2 
65 1 19 1 219 1 125 4 347 1 139 1 244 2 328 2 2 2 374 1 154 1 3 1 301 2 302 1 129 1 105 2 144 1 227 1 272 2 53 1 99 2 
19 1 41 1 125 2 276 1 2 1 235 1 154 1 129 1 283 1 105 1 182 1 132 1 366 1 367 1 368 1 218 1 219 1 139 1 374 1 268 1 118 1 36 1 357 1 98 1 202 1 272 2 55 1 39 1 
19 1 251 1 125 2 276 1 151 1 2 1 235 1 154 1 129 1 283 1 105 1 182 1 86 1 132 1 366 1 368 1 218 1 219 1 139 1 374 1 268 1 118 1 357 1 98 1 202 1 272 2 55 1 39 1 
19 1 125 4 328 2 2 2 154 1 3 1 301 2 302 1 129 1 105 2 65 1 219 1 347 1 139 1 244 2 374 1 75 1 144 1 227 1 53 1 272 2 99 2 
19 1 41 1 125 4 276 1 328 2 2 2 235 1 154 1 3 1 301 2 302 1 129 1 283 1 105 2 182 1 132 1 367 1 366 1 65 1 218 1 219 1 347 1 139 1 244 2 374 1 191 1 118 1 144 1 227 1 36 1 37 1 98 1 53 1 202 1 272 2 39 1 99 2 
232 1 19 1 125 3 328 1 2 2 254 1 154 1 301 1 302 1 129 1 304 1 105 1 50 1 65 1 219 1 347 1 139 1 244 1 167 1 374 1 355 1 75 1 144 1 227 1 98 1 272 2 202 1 53 1 99 1 
19 2 149 1 125 19 58 2 2 9 3 3 180 1 280 1 302 3 157 1 129 2 158 1 105 10 257 1 87 1 259 2 65 3 219 2 347 3 139 2 244 6 10 1 353 1 194 1 144 3 227 3 228 1 272 4 53 3 274 2 
19 2 20 1 207 1 125 26 58 1 2 14 3 1 180 1 280 1 302 3 157 1 129 2 84 1 158 2 105 12 23 1 6 1 257 2 259 4 65 3 66 1 219 2 347 1 139 2 244 2 353 1 194 2 144 2 227 2 228 2 272 4 53 3 274 2 40 1 
125 41 2 20 3 4 128 1 333 1 280 1 180 1 129 3 84 1 6 1 87 1 8 1 7 1 347 4 139 3 244 8 10 1 353 1 194 3 144 5 53 5 19 3 207 1 20 1 58 1 302 4 157 1 158 3 105 21 23 1 257 2 259 4 65 4 66 1 219 3 68 1 375 1 376 1 227 4 228 1 272 6 274 4 40 1 
125 38 2 20 3 4 128 1 333 1 280 1 180 1 129 3 84 1 6 1 87 1 8 1 7 1 347 2 139 3 244 6 10 1 353 1 194 3 144 4 53 5 19 3 207 1 20 1 58 1 302 4 157 1 158 3 105 18 23 1 257 2 259 4 65 4 66 1 219 3 68 1 375 1 376 1 227 3 228 1 272 6 274 4 40 1 
19 1 20 1 125 50 58 1 2 26 128 1 3 7 180 1 280 1 302 7 157 1 129 1 84 1 158 2 23 1 105 24 6 1 257 1 259 3 7 1 8 1 65 7 66 1 219 1 347 6 68 1 139 1 244 13 10 2 353 1 375 1 194 4 376 1 144 8 227 7 228 1 201 2 272 2 53 8 274 4 40 1 
321 1 354 1 15 1 270 1 164 1 76 1 312 1 339 1 185 1 95 1 
284 1 31 1 
354 1 270 1 164 1 312 1 278 1 63 1 185 1 300 1 95 1 
74 1 186 1 
378 1 62 1 288 1 
110 1 164 1 312 1 114 2 349 1 95 1 140 1 72 1 321 1 336 1 354 1 15 1 270 1 106 1 363 1 339 1 185 1 27 1 
110 1 164 1 312 1 114 2 349 1 95 1 140 1 72 1 321 1 336 1 354 1 15 1 270 1 106 1 363 1 339 1 185 1 27 1 
110 1 164 1 312 1 114 2 349 1 95 1 140 1 72 1 321 1 336 1 354 1 15 1 270 1 106 1 363 1 339 1 185 1 27 1 
74 1 186 1 288 1 
74 1 186 1 288 1 
378 1 62 1 
378 1 62 1 288 1 
1 1 237 1 
232 2 325 1 1 1 279 1 237 1 284 1 363 1 106 1 185 1 50 2 110 1 89 1 164 1 312 1 31 1 114 1 93 1 349 1 95 1 354 1 355 2 270 1 225 1 98 2 17 1 202 2 55 1 
19 1 276 1 327 1 125 2 2 1 235 2 154 1 129 1 214 1 105 1 256 1 182 2 285 1 132 1 26 1 366 1 64 2 219 1 139 1 374 1 168 1 268 1 355 2 118 1 75 1 357 1 146 1 98 2 202 2 272 2 39 2 
298 1 276 1 235 1 118 1 181 1 182 1 226 1 358 1 132 1 366 1 39 1 310 1 48 1 368 1 
135 1 111 1 297 1 276 1 208 1 235 1 14 1 12 1 334 1 73 1 305 2 118 1 181 1 182 1 200 1 273 1 39 1 310 1 
135 1 111 1 297 1 276 1 208 1 235 2 191 1 14 1 12 1 334 1 73 1 305 2 118 1 181 1 182 2 200 1 273 1 39 2 310 1 
135 1 111 1 297 1 276 1 208 1 235 1 42 1 12 1 334 1 73 1 305 2 118 1 181 1 182 1 200 1 273 1 39 1 
345 1 
232 2 19 1 41 1 125 1 276 1 235 1 154 1 129 1 304 2 283 1 105 1 159 1 182 1 132 1 367 1 366 1 368 1 50 2 218 1 163 1 219 1 139 1 374 1 355 2 118 1 36 1 357 1 98 3 272 2 202 3 55 1 39 1 
100 2 188 1 123 1 176 2 266 1 178 1 82 1 337 2 336 4 96 2 376 1 160 2 18 4 187 1 287 1 
100 1 188 1 266 1 82 1 336 1 96 1 119 1 184 1 187 1 287 1 
65 2 188 5 176 5 51 1 302 2 337 5 336 5 96 5 24 1 144 2 160 5 227 2 379 2 53 2 18 10 
336 1 100 1 106 1 16 1 349 1 238 1 
250 1 123 2 298 1 276 1 235 4 178 2 255 1 82 2 238 4 106 3 182 4 286 1 258 1 132 1 366 1 187 1 287 2 368 2 188 2 138 2 349 3 266 2 96 2 118 1 16 2 121 1 359 1 358 1 39 4 
336 1 100 1 188 1 96 1 119 1 184 1 83 1 
100 1 176 1 329 1 82 1 238 1 336 2 106 1 309 1 187 1 287 1 188 1 137 1 349 1 266 1 96 1 16 1 18 1 
234 1 276 2 176 3 235 1 178 1 82 2 238 2 337 3 336 3 182 1 132 4 187 2 287 2 133 1 188 4 92 1 349 2 352 1 96 3 16 1 199 1 144 1 18 6 53 1 299 1 302 1 24 1 106 2 107 1 160 3 161 1 366 1 368 1 218 1 65 1 319 2 266 2 34 1 118 1 227 1 229 1 379 1 39 1 
100 2 123 1 176 3 178 1 238 1 82 2 302 2 337 5 336 5 84 1 158 1 23 1 106 1 6 1 160 5 187 2 287 2 65 2 188 8 66 1 349 1 266 2 51 1 194 1 96 5 16 1 144 2 227 2 172 1 379 2 38 1 18 6 53 2 274 1 40 1 
232 1 252 1 82 1 304 1 61 1 106 1 342 1 47 1 187 1 287 1 311 1 7 1 50 1 188 2 163 1 68 1 9 1 349 1 266 1 51 1 375 1 355 1 96 2 144 1 379 2 98 1 202 1 53 2 
354 1 270 1 339 1 271 1 237 1 
354 1 136 1 270 1 
354 1 136 1 270 1 
354 1 136 1 270 1 
354 1 270 1 320 1 
354 1 270 1 320 1 
354 1 270 1 320 1 
354 1 270 1 
312 1 185 1 
7 2 19 1 219 1 125 10 347 2 139 1 68 1 244 5 9 1 2 5 3 3 180 1 375 2 129 1 105 5 144 2 272 2 53 2 
65 1 19 1 219 1 125 2 347 1 139 1 244 1 2 2 180 1 129 1 272 2 53 1 
65 1 19 1 219 1 125 4 347 1 139 1 244 2 2 2 3 1 180 1 302 1 129 1 105 2 144 1 227 1 272 2 53 1 
7 1 19 3 219 3 207 1 125 3 347 1 139 3 244 2 2 1 81 1 3 1 180 1 375 1 129 3 105 2 87 1 272 6 
19 5 207 2 125 34 2 16 128 1 81 1 3 7 180 1 302 3 282 1 129 5 158 1 105 18 87 1 7 3 8 1 65 3 219 5 113 1 347 5 68 2 139 5 244 12 265 1 10 1 375 3 194 3 376 1 144 5 227 3 272 10 53 5 274 4 231 1 
19 1 125 8 2 4 128 1 3 2 180 1 129 1 158 1 105 4 23 1 8 1 7 1 219 1 139 1 68 1 244 2 194 1 375 1 376 1 144 1 53 1 272 2 274 1 
19 2 125 11 2 6 3 2 128 1 180 1 302 1 129 2 158 1 105 5 23 1 7 1 8 1 65 1 219 2 113 1 347 1 68 1 139 2 244 3 10 1 375 1 194 1 376 1 144 1 272 4 53 2 274 2 
19 3 125 19 207 1 2 9 128 1 3 3 180 1 302 2 129 3 84 1 158 1 105 10 23 1 6 1 7 1 8 1 65 2 66 1 219 3 113 1 347 1 68 1 139 3 244 4 375 1 194 1 376 1 144 3 227 2 272 6 53 3 274 1 40 1 
19 2 125 11 2 7 3 1 180 1 302 2 129 2 84 1 158 1 105 4 23 1 6 1 65 2 66 1 219 2 113 1 139 2 244 1 194 1 144 1 227 1 272 4 53 2 274 1 40 1 
19 1 125 8 2 4 128 1 3 2 180 1 129 1 158 1 105 4 23 1 8 1 7 1 219 1 139 1 68 1 244 2 194 1 375 1 376 1 144 1 53 1 272 2 274 1 
19 1 125 12 2 6 3 1 180 1 302 2 129 1 84 1 158 1 105 6 23 1 6 1 65 2 66 1 219 1 347 1 139 1 244 2 194 1 144 2 227 2 272 2 53 2 274 1 40 1 
19 3 125 12 207 1 2 7 3 1 180 1 302 2 129 3 84 1 158 1 105 5 23 1 6 1 65 2 66 1 219 3 113 1 139 3 244 1 194 1 144 1 227 1 272 6 53 2 274 1 40 1 
19 3 125 12 207 1 2 7 3 2 180 1 302 2 129 3 84 1 158 1 105 5 23 1 6 1 87 1 65 2 66 1 219 3 347 2 139 3 244 4 194 1 144 1 227 1 272 6 53 2 274 1 40 1 
8 1 7 3 125 7 347 3 68 1 244 6 2 3 128 2 3 3 375 3 105 4 144 1 53 1 
19 3 125 12 207 1 2 7 3 1 180 1 302 2 129 3 84 1 158 1 105 5 23 1 6 1 87 1 65 2 66 1 219 3 139 3 244 1 194 1 144 1 227 1 272 6 53 2 274 1 40 1 
8 1 7 1 19 2 219 2 125 8 207 1 347 1 68 1 139 2 244 3 2 4 3 2 128 1 375 1 129 2 376 1 105 4 144 1 53 1 272 4 
8 1 7 1 125 6 68 1 244 2 2 3 128 1 3 2 83 1 375 1 376 1 105 3 144 1 53 1 
65 1 19 1 219 1 113 1 125 4 347 1 139 1 244 2 2 2 3 1 302 1 129 1 105 2 144 1 227 1 272 2 53 1 
65 1 125 7 347 1 244 2 2 3 10 1 3 1 302 1 194 1 158 1 105 4 144 1 227 1 53 1 274 2 
19 2 125 23 207 2 2 11 128 1 3 5 81 1 302 2 303 1 129 2 105 12 7 2 8 1 65 2 219 2 347 4 68 1 139 2 244 9 10 1 375 2 194 2 376 1 144 3 227 2 201 1 53 3 272 4 274 2 
105 1 125 1 274 1 
194 1 125 1 2 1 
65 1 19 1 219 1 113 1 125 6 347 1 139 1 244 3 2 3 3 2 302 1 129 1 24 1 105 3 144 1 227 1 272 2 53 1 
19 1 125 12 2 6 3 1 180 1 302 2 129 1 84 1 158 1 105 6 23 1 6 1 65 2 66 1 219 1 347 1 139 1 244 2 194 1 144 2 227 2 272 2 53 2 274 1 40 1 
7 1 125 6 347 1 68 1 244 2 2 3 3 1 375 1 105 3 144 1 53 1 
7 1 8 1 19 1 219 1 125 3 207 1 347 1 139 1 244 2 2 1 3 1 128 1 81 1 375 1 129 1 105 2 272 2 
355 1 261 1 292 1 206 1 98 1 202 1 55 1 
261 1 206 1 371 1 71 1 245 1 355 1 292 1 307 1 98 1 202 1 55 1 28 1 
298 1 276 1 235 4 191 1 141 1 118 1 294 1 182 4 358 1 132 1 366 1 39 4 368 1 
218 1 262 1 276 2 316 1 235 1 118 1 182 1 46 1 183 1 132 1 54 1 366 1 39 1 
111 1 297 1 305 1 118 1 276 1 182 1 235 1 334 1 39 1 368 1 
135 1 118 1 276 1 182 2 285 1 235 2 146 1 132 1 191 1 366 1 39 2 
298 1 276 2 138 1 166 1 235 4 191 1 335 1 141 1 118 2 182 5 285 1 358 1 132 3 366 2 39 5 368 1 
298 1 276 2 138 1 372 1 166 1 235 4 191 1 141 1 118 2 182 5 285 1 358 1 132 3 366 2 39 5 368 1 
118 1 298 1 276 1 182 1 235 1 358 1 132 1 366 1 39 1 83 1 368 1 
218 1 50 1 232 1 41 1 276 1 235 1 104 1 355 1 283 1 118 1 182 1 132 1 98 2 202 2 55 1 366 1 39 1 368 1 
232 2 41 1 276 1 235 1 104 1 283 1 182 1 132 3 47 1 366 2 50 1 218 2 260 1 138 1 243 1 355 2 195 1 118 1 98 2 202 2 55 1 380 1 39 1 
232 2 276 1 235 2 104 1 283 1 182 2 86 1 132 3 47 1 366 2 50 1 218 2 260 1 138 1 243 1 355 2 195 1 118 1 294 1 98 2 202 2 55 1 380 1 39 2 
232 1 100 1 276 1 252 1 235 1 299 1 238 1 336 1 304 1 61 1 106 2 182 1 342 1 47 1 132 4 88 1 366 1 133 1 50 1 218 1 163 1 221 1 138 1 349 2 319 1 355 1 195 1 118 1 98 1 202 1 380 1 39 1 
232 1 100 1 234 1 276 1 252 1 235 1 299 1 238 1 336 1 304 1 61 1 106 2 182 1 342 1 47 1 132 4 366 1 133 1 50 1 218 1 163 1 138 1 349 2 319 1 355 1 195 1 118 1 98 1 202 1 380 1 39 1 
118 1 276 1 182 1 235 1 79 1 39 1 
218 1 262 1 276 2 92 1 235 1 215 1 118 1 182 1 132 1 54 1 366 1 39 1 368 1 
232 1 41 1 276 1 125 6 328 1 235 1 2 3 128 1 3 2 129 2 283 1 182 1 132 1 50 1 8 1 7 1 139 2 244 2 191 1 355 1 144 1 98 2 202 2 53 1 55 2 99 1 19 2 154 2 301 1 104 1 214 1 105 3 367 1 366 1 218 1 219 2 68 1 374 2 375 1 75 1 118 1 376 1 36 1 37 1 272 4 381 1 39 1 
232 1 325 1 234 1 235 1 238 2 82 2 336 2 182 1 342 1 184 1 47 1 132 2 187 2 133 1 287 2 7 1 50 1 188 4 9 1 349 3 51 1 355 1 96 5 16 1 199 1 144 2 359 1 98 1 202 1 53 2 100 2 252 1 299 1 304 1 61 1 106 3 107 1 368 1 163 1 68 1 319 1 266 2 375 1 34 1 119 1 379 2 39 1 
218 1 276 2 92 1 235 2 191 1 118 1 182 2 229 1 79 1 132 2 366 1 133 1 39 2 
218 1 50 1 232 1 276 1 235 1 104 1 355 1 283 1 118 1 182 1 86 1 132 1 98 2 202 2 55 1 366 1 39 1 368 1 
218 1 262 1 276 2 138 1 92 1 235 1 215 1 118 1 182 1 132 1 54 1 366 1 39 1 
213 1 94 1 55 1 350 1 324 1 
232 1 100 1 325 1 124 1 252 1 299 1 213 1 281 1 336 1 22 1 304 1 61 1 106 2 342 1 47 2 50 1 260 1 163 1 264 1 243 1 94 1 349 2 350 1 355 1 170 1 98 1 202 1 324 1 
327 1 94 1 350 1 213 1 355 1 256 1 98 1 26 1 202 1 
281 1 22 1 350 1 
30 3 190 1 165 3 126 1 210 1 192 1 4 1 322 1 171 1 365 1 25 1 
322 1 269 1 356 1 315 1 
322 1 126 1 
322 1 30 1 171 1 165 1 126 1 365 1 210 1 192 1 
30 4 190 2 165 4 126 2 315 1 210 1 13 1 192 1 4 1 269 1 322 3 356 1 340 1 365 2 
322 1 249 1 30 2 190 1 171 1 313 1 165 2 126 1 365 1 210 1 351 1 192 1 
322 1 30 3 171 1 165 3 126 1 153 1 340 1 365 1 210 1 13 2 192 1 4 2 
322 2 216 2 33 1 169 1 
5 1 30 1 171 1 165 1 210 1 192 1 
322 1 30 2 190 1 171 1 165 2 126 1 365 1 210 1 25 1 192 1 
97 1 
322 1 30 1 171 1 165 1 126 1 365 1 210 1 192 1 
322 1 126 1 365 1 83 1 
322 1 30 1 165 1 126 1 365 1 210 1 192 1 
101 1 165 1 361 1 
30 3 165 3 126 1 210 1 192 1 13 1 4 2 322 1 171 1 340 1 365 1 295 1 
322 1 248 1 30 2 190 1 165 2 126 1 365 1 210 1 192 1 
322 1 269 1 30 1 297 1 305 1 171 1 326 1 165 1 210 1 200 1 192 1 
322 1 30 1 171 1 165 1 126 1 210 1 192 1 
30 1 171 1 165 1 126 2 365 1 210 1 192 1 
30 2 57 1 165 2 126 1 330 1 210 2 192 2 322 1 171 1 293 1 
30 3 190 2 165 3 126 1 210 1 192 1 193 1 269 1 322 2 356 1 171 1 365 1 25 1 
111 1 30 2 297 1 190 1 165 2 126 1 208 1 210 1 332 1 192 1 322 1 305 2 171 1 365 1 200 1 
248 1 30 4 190 2 165 4 126 1 210 2 192 2 269 1 322 2 356 1 171 1 365 1 240 1 

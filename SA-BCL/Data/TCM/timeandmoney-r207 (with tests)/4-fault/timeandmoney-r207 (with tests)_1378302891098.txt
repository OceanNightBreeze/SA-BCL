#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (244,296) 157 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (258,260) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (105,189,317) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (258,260) (258,260) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 216 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) (127,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (127,195) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) (127,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (6,48,156,169) (6,48,156,169) (6,48,156,169) 200 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 216 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 187 170 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (244,296) (244,296) (123,199) 289 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (244,296) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 190 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (244,296) (244,296) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (258,260) (258,260) 98 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (244,296) 157 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 73 (150,186) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 73 (150,186) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 73 (183,293) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 73 (183,293) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
115 1 148 1 216 1 
114 1 115 1 96 2 
130 2 75 2 203 1 
80 1 130 1 235 1 157 1 203 1 185 1 276 2 117 2 296 1 75 1 91 2 94 1 
130 1 75 1 258 1 203 1 
282 1 102 1 101 1 105 1 23 1 307 1 26 1 43 1 87 1 115 1 189 1 148 1 317 1 194 1 
105 1 130 1 75 1 
45 1 189 1 250 1 269 1 194 1 
97 1 115 1 47 1 189 2 250 1 269 1 148 1 194 2 
189 1 250 1 194 1 
130 1 189 1 269 1 75 1 258 1 260 1 203 1 194 1 
115 1 
97 1 115 1 189 2 250 1 179 1 269 1 148 1 194 2 
196 1 97 1 59 2 232 1 269 2 250 2 5 1 306 2 305 2 39 1 44 1 115 1 189 5 243 1 148 1 295 1 163 1 164 1 194 5 
216 1 
282 1 0 1 198 1 130 1 23 1 26 1 43 1 312 1 75 1 261 1 
276 1 130 1 117 1 49 1 259 1 91 1 94 1 
282 1 102 1 265 1 0 1 130 4 198 1 23 1 309 1 26 1 43 1 49 2 75 1 259 1 149 1 
130 1 
130 3 49 1 75 1 
130 1 
312 1 0 1 130 1 75 1 
0 1 130 2 49 1 75 1 259 1 
282 1 102 1 130 1 198 1 23 1 26 1 43 1 49 1 149 1 
130 1 49 1 259 1 
0 1 130 1 75 1 
276 1 117 1 91 1 94 1 
276 1 117 1 91 1 94 1 
219 1 224 2 162 1 64 1 66 1 67 1 41 1 42 1 
130 1 181 1 
283 1 308 1 
283 1 308 1 
25 1 85 1 
25 1 85 1 
25 1 85 1 
283 1 308 1 214 1 
283 1 308 1 214 1 
283 1 212 1 308 1 
283 2 74 1 25 1 308 2 85 1 79 1 
283 1 308 1 214 1 
238 1 283 1 308 1 
238 1 283 1 308 1 
238 1 283 1 308 1 
230 1 171 1 283 1 61 1 130 2 286 1 272 1 82 1 37 1 308 1 275 1 68 1 110 1 256 1 241 1 189 1 212 1 279 1 194 1 
230 1 171 2 21 1 247 1 283 2 35 1 3 1 36 1 136 1 37 2 308 2 68 2 110 3 241 2 115 1 189 2 74 1 194 2 78 2 
22 1 285 1 184 1 
22 1 285 1 237 1 
285 3 201 1 118 1 184 2 228 1 237 1 
285 2 201 1 184 1 228 1 217 1 237 1 
285 2 201 2 184 1 228 1 237 1 
250 1 133 1 255 2 256 1 10 1 44 1 189 5 50 1 148 1 194 5 301 1 96 3 58 1 97 1 59 1 100 2 269 4 232 3 271 1 233 1 305 1 306 1 108 1 275 1 114 1 115 2 76 2 279 1 164 2 31 1 77 1 167 1 
33 1 81 1 250 6 133 3 137 1 255 6 256 4 143 1 45 5 44 1 189 9 50 3 148 1 194 9 301 3 96 9 58 3 97 1 59 2 153 1 269 7 232 8 271 3 233 1 306 2 305 2 274 5 109 1 114 3 115 5 243 1 76 6 164 6 31 2 167 2 
133 1 255 2 256 1 10 1 189 3 50 1 148 1 194 3 301 1 96 4 58 1 59 1 100 1 269 2 232 3 271 1 305 1 306 1 114 2 115 3 243 1 76 2 31 1 164 2 77 1 167 1 
33 1 133 2 137 1 255 4 256 2 10 1 189 4 50 2 148 1 194 4 301 2 96 7 58 2 59 1 100 2 232 5 269 3 271 2 305 1 306 1 109 1 114 3 115 4 243 1 76 4 31 1 164 4 77 1 167 1 
19 1 51 1 216 1 
19 1 270 1 
86 1 
19 1 13 1 314 1 
19 1 225 1 
19 1 13 1 
19 3 88 1 13 1 314 1 51 2 311 1 
57 4 172 1 175 1 62 3 284 1 63 1 271 1 288 1 69 2 161 2 11 7 46 1 50 1 146 1 191 1 192 3 262 1 
57 4 172 1 175 1 62 3 284 1 63 1 271 1 288 1 69 2 161 2 11 7 46 1 50 1 146 1 191 1 192 3 262 1 
57 4 172 1 175 1 62 3 284 1 267 1 63 1 271 1 288 1 69 2 161 2 11 7 46 1 50 1 146 1 191 1 192 3 262 1 
172 1 175 1 284 1 178 3 288 1 133 3 287 1 41 1 11 31 46 5 224 2 50 4 147 1 146 2 191 2 192 15 301 3 262 2 95 1 57 16 58 3 263 1 62 10 63 2 271 4 64 1 65 4 66 1 67 1 69 3 161 5 313 1 28 1 246 1 
57 5 172 1 284 1 62 4 63 1 271 1 288 1 287 1 64 2 66 2 41 2 67 2 69 2 161 3 11 9 46 1 224 4 50 1 146 1 191 1 192 4 124 1 262 1 54 1 
99 1 48 1 200 1 6 1 169 1 
127 1 99 1 48 1 6 1 169 1 
195 1 99 1 156 1 169 1 
127 1 99 1 48 1 6 1 169 1 
99 1 48 1 200 1 6 1 169 1 
215 1 
1 1 250 6 182 1 251 2 252 2 257 1 87 1 189 5 13 1 91 2 18 2 194 5 94 2 96 2 97 3 19 1 102 1 101 1 266 1 105 1 268 1 23 1 273 1 205 2 26 1 276 2 208 1 114 2 115 2 117 2 122 1 280 2 126 1 282 1 129 1 43 1 292 2 291 1 44 1 294 1 145 4 226 1 148 1 229 1 55 1 59 1 304 2 232 2 306 1 305 1 307 1 317 1 164 2 165 1 167 1 
282 1 1 1 250 2 179 1 182 1 43 1 257 1 87 1 189 3 145 2 229 1 194 3 97 1 102 1 101 1 304 1 105 1 23 1 273 1 307 1 26 1 317 1 
282 1 1 1 250 1 179 1 182 1 251 1 43 1 257 1 87 1 189 3 145 3 148 1 229 1 194 3 97 1 102 1 101 1 105 1 23 1 273 1 307 1 26 1 115 1 317 1 
282 1 1 1 179 1 250 2 182 1 251 1 43 1 257 1 87 1 189 3 145 3 148 1 229 1 194 3 18 1 97 1 102 1 101 1 304 1 105 1 23 1 273 1 307 1 26 1 115 1 317 1 
173 1 1 1 179 1 250 7 4 1 182 1 251 4 252 2 257 1 188 1 87 1 189 5 18 4 194 5 97 3 101 1 102 1 105 1 23 1 273 1 205 2 26 1 114 2 115 5 211 1 218 1 280 2 282 1 126 1 43 1 292 2 44 1 145 6 226 1 148 5 229 1 59 1 304 4 232 1 306 1 305 1 307 1 317 1 164 1 
1 1 250 4 182 1 252 2 251 2 257 1 87 1 189 4 194 4 18 2 96 2 97 2 101 1 102 1 266 1 105 1 23 1 273 1 205 2 26 1 114 2 115 2 280 2 282 1 126 1 43 1 292 2 44 1 145 4 226 1 148 1 229 1 59 1 304 2 232 1 306 1 305 1 307 1 317 1 164 1 
280 2 126 1 282 1 173 1 1 1 250 4 4 1 182 1 251 2 252 2 43 1 257 1 292 2 87 1 44 1 189 4 145 4 226 1 148 1 229 1 18 2 194 4 97 2 102 1 101 1 59 1 304 2 105 1 232 1 23 1 305 1 273 1 306 1 307 1 205 2 26 1 114 2 115 1 211 1 317 1 164 1 
280 2 126 1 282 1 173 1 1 1 250 4 4 1 182 1 251 2 252 2 43 1 257 1 292 2 87 1 44 1 189 4 145 4 226 1 148 1 229 1 18 2 194 4 97 2 102 1 101 1 59 1 304 2 105 1 232 1 23 1 305 1 273 1 306 1 307 1 205 2 26 1 114 2 115 1 211 1 317 1 164 1 
126 1 282 1 34 1 1 1 250 4 4 1 182 1 251 2 252 2 43 1 257 1 292 2 87 1 44 1 189 4 145 4 148 1 227 1 229 1 18 2 194 4 96 2 97 2 56 1 102 1 101 1 59 1 304 2 105 1 232 1 23 1 305 1 273 1 306 1 307 1 26 1 239 2 115 1 316 2 317 1 164 1 
280 2 126 1 282 1 173 1 1 1 4 1 250 5 182 1 252 2 251 3 43 1 257 1 292 2 87 1 44 1 189 4 145 5 226 1 148 1 229 1 194 4 18 3 97 2 59 1 102 1 101 1 304 3 105 1 232 1 23 1 305 1 306 1 273 1 307 1 205 2 26 1 114 2 115 1 211 1 317 1 164 1 218 1 
280 2 126 1 282 1 173 1 1 1 4 1 250 5 182 1 252 2 251 3 43 1 257 1 292 2 87 1 44 1 189 4 145 5 226 1 148 1 229 1 194 4 18 3 97 2 59 1 102 1 101 1 304 3 105 1 232 1 23 1 305 1 306 1 273 1 307 1 205 2 26 1 114 2 115 1 211 1 317 1 164 1 218 1 
1 1 250 4 182 1 252 2 251 2 257 1 87 1 189 4 194 4 18 2 96 2 97 2 101 1 102 1 266 1 105 1 23 1 273 1 26 1 115 1 282 1 126 1 34 1 43 1 292 2 44 1 145 4 148 1 229 1 59 1 304 2 232 1 306 1 305 1 307 1 239 2 316 2 317 1 164 1 
57 2 219 1 172 1 62 1 284 1 271 1 64 1 288 1 66 1 41 1 67 1 42 1 69 1 161 1 11 2 162 1 224 2 191 1 262 1 216 1 
57 1 170 1 178 1 64 1 65 1 66 1 41 1 67 1 42 1 187 1 11 2 162 1 224 2 120 1 192 1 
57 1 128 1 2 1 130 1 64 1 40 1 66 1 41 1 67 1 42 1 11 2 49 1 162 1 224 2 277 1 259 1 120 1 192 1 
128 1 130 1 64 1 289 1 66 1 41 1 67 1 42 1 276 1 11 1 117 1 49 1 162 1 224 2 296 1 259 1 120 1 91 1 123 1 192 1 244 1 94 1 
57 1 32 1 2 1 64 1 66 1 41 1 67 1 42 1 276 1 11 1 162 1 224 2 117 1 16 1 91 1 94 1 
0 1 130 1 133 1 41 1 42 1 11 2 12 1 224 2 50 1 192 1 301 1 58 1 57 1 271 1 64 1 66 1 67 1 162 1 75 1 120 1 
219 1 58 1 57 1 271 1 64 1 66 1 41 1 67 1 42 1 158 1 11 1 162 1 224 2 
219 1 64 1 154 1 133 1 66 1 41 1 67 1 42 1 11 1 162 1 224 2 50 1 192 1 
219 1 58 1 57 1 271 1 133 1 64 1 66 1 41 1 67 1 42 1 11 2 162 1 224 2 50 1 192 1 301 1 
58 1 57 1 271 1 64 1 66 1 41 1 67 1 42 1 158 1 11 1 162 1 224 2 16 1 
64 1 154 1 133 1 66 1 41 1 67 1 42 1 11 1 162 1 224 2 50 1 16 1 192 1 
58 1 57 1 271 1 133 1 64 1 66 1 41 1 67 1 42 1 11 2 162 1 224 2 50 1 16 1 192 1 301 1 
58 1 57 1 271 1 133 1 64 1 66 1 41 1 67 1 42 1 11 2 162 1 224 2 50 1 192 1 301 1 
276 1 117 1 296 1 91 1 94 1 
276 1 117 1 190 1 91 1 94 1 
58 1 57 1 271 1 133 1 64 1 66 1 41 1 67 1 42 1 11 2 162 1 224 2 50 1 120 1 192 1 301 1 
276 1 117 1 296 1 91 1 244 1 290 1 
0 1 130 1 133 1 41 1 42 1 11 2 224 2 50 1 192 1 301 1 58 1 57 1 151 1 271 1 64 1 66 1 67 1 162 1 75 1 120 1 
178 1 133 3 41 2 11 19 46 3 224 4 50 3 147 1 14 1 192 10 193 2 301 3 57 9 58 3 104 1 152 1 62 6 106 1 271 3 64 2 65 2 66 2 67 2 27 2 160 1 161 3 209 1 313 1 210 1 124 1 
178 2 221 1 131 1 287 2 133 2 41 3 140 1 222 1 11 26 46 2 224 6 50 2 14 1 147 2 192 12 193 1 301 3 57 14 58 3 152 1 62 4 106 2 271 3 64 3 65 2 66 3 67 3 27 4 161 2 209 2 242 1 210 1 168 1 124 1 
172 1 178 3 11 41 14 1 191 1 17 1 192 21 193 1 262 1 104 1 106 1 271 5 27 4 209 2 210 1 124 1 284 1 221 1 131 1 133 4 287 1 288 1 41 3 140 1 222 1 46 4 224 6 50 5 147 3 301 4 58 4 57 20 62 8 152 1 64 3 65 4 66 3 67 3 69 1 161 4 313 1 242 1 168 1 
172 1 284 1 178 3 221 1 131 1 288 1 287 2 133 3 41 4 140 1 222 1 11 38 46 3 224 8 50 4 147 3 14 1 191 1 17 1 192 18 193 1 301 4 262 1 57 20 58 4 104 1 152 1 62 7 106 1 271 5 64 4 65 4 66 4 67 4 69 1 27 4 161 4 209 2 242 1 313 1 210 1 168 1 124 1 
172 1 284 1 178 4 221 1 131 1 288 1 287 1 133 7 41 2 140 1 222 1 11 52 46 7 224 4 50 8 147 2 14 1 191 1 192 25 193 1 301 7 262 1 57 27 58 7 152 1 62 14 106 1 271 8 64 2 65 4 66 2 67 2 69 1 27 4 161 7 209 1 242 1 313 2 210 1 30 2 168 1 124 1 
240 1 241 1 171 1 283 1 35 1 74 1 3 1 308 1 37 1 68 1 
61 1 212 1 
241 1 171 1 283 1 116 1 93 1 308 1 37 1 318 1 68 1 
223 1 214 1 
238 1 72 1 79 1 
230 1 171 1 247 1 283 1 35 1 3 1 36 1 136 1 37 1 308 1 68 1 110 2 241 1 115 1 189 1 74 1 194 1 78 1 
230 1 171 1 247 1 283 1 35 1 3 1 36 1 136 1 37 1 308 1 68 1 110 2 241 1 115 1 189 1 74 1 194 1 78 1 
230 1 171 1 247 1 283 1 35 1 3 1 36 1 136 1 37 1 308 1 68 1 110 2 241 1 115 1 189 1 74 1 194 1 78 1 
223 1 214 1 79 1 
223 1 214 1 79 1 
238 1 72 1 
238 1 72 1 79 1 
272 1 82 1 
171 1 281 1 283 1 61 1 130 2 286 1 269 1 36 1 272 1 82 1 37 1 308 1 275 1 110 1 68 1 256 1 241 1 189 1 212 1 279 1 194 1 78 1 
32 1 128 1 2 1 83 1 41 1 42 1 185 2 43 2 291 1 11 2 13 1 224 2 91 2 299 1 192 1 19 1 57 1 23 2 234 1 64 1 66 1 67 1 26 2 276 2 113 1 117 2 162 1 120 1 119 1 122 1 125 1 
20 1 197 1 177 1 22 1 248 1 285 2 184 1 237 1 290 1 70 1 276 2 291 1 117 2 118 1 91 2 298 1 29 1 52 1 122 1 
197 1 177 1 22 1 248 1 285 2 184 1 84 1 237 1 70 1 276 1 291 1 117 1 118 1 91 1 29 1 52 1 122 1 
19 1 302 1 20 1 129 1 268 1 132 1 276 1 291 1 13 1 117 1 91 1 52 1 122 1 94 1 
20 1 197 1 177 1 22 1 248 1 285 2 184 1 237 1 70 1 276 1 291 1 117 1 118 1 91 1 298 1 29 1 52 1 122 1 
220 1 
196 1 115 1 232 1 148 1 5 1 164 1 216 1 
280 1 250 1 44 1 189 1 226 1 148 1 194 1 96 1 97 1 59 1 232 1 305 1 306 1 205 1 114 1 115 2 164 1 
174 2 249 1 250 5 5 1 253 2 254 2 255 6 8 2 88 1 189 5 13 3 90 1 91 3 94 1 194 5 96 12 196 1 19 10 97 3 101 2 199 2 270 3 271 2 276 3 112 2 114 6 115 8 117 3 121 1 122 4 213 1 133 2 135 1 290 1 291 3 44 4 294 1 225 2 50 2 148 2 51 2 150 2 301 2 58 2 59 4 232 9 306 4 305 4 314 3 76 6 164 8 166 2 167 2 245 2 
178 1 250 1 221 1 131 1 133 2 8 1 255 5 140 1 9 1 222 1 44 2 294 1 189 1 50 2 147 1 148 2 194 1 301 2 96 6 97 1 58 2 59 2 232 8 271 2 305 2 306 2 65 1 206 1 242 1 114 3 115 5 76 5 164 5 167 1 166 2 
98 1 172 1 59 1 130 1 232 2 271 1 306 1 305 1 203 1 44 1 189 1 50 1 75 1 258 1 211 1 260 1 191 1 164 1 194 1 166 2 262 1 
196 1 59 1 232 1 5 1 306 1 305 1 44 1 115 1 148 1 164 1 
58 2 174 1 232 5 271 2 133 2 8 1 255 5 114 5 115 5 50 2 76 5 164 5 166 2 301 2 96 10 
97 1 115 1 189 1 250 1 148 1 194 1 
129 1 250 4 291 1 44 1 294 2 189 3 13 1 90 1 91 4 94 2 194 3 55 1 19 1 97 2 59 2 268 1 232 2 305 2 306 2 71 1 276 4 117 4 243 1 278 1 121 2 122 1 165 1 164 2 167 2 
276 1 130 1 117 1 296 1 75 1 91 1 157 1 203 1 94 1 
59 1 232 1 306 1 305 1 255 2 69 1 114 2 44 1 115 4 294 1 148 2 76 2 164 2 167 1 96 4 
241 1 204 1 68 1 
241 1 204 1 68 1 
241 1 303 1 35 1 272 1 68 1 
241 1 204 1 68 1 
241 1 155 1 68 1 
241 1 155 1 68 1 
241 1 155 1 68 1 
241 1 68 1 
283 1 308 1 
57 4 172 1 62 3 284 1 271 1 64 2 287 1 288 1 66 2 41 2 67 2 69 1 161 2 11 8 46 1 224 4 50 1 191 1 192 4 262 1 
57 3 172 1 284 1 62 2 271 1 288 1 69 1 161 2 11 6 50 1 191 1 192 3 216 1 262 1 
58 1 57 2 62 2 271 1 133 1 64 1 66 1 41 1 67 1 141 1 161 1 11 4 46 1 224 2 50 1 192 2 301 1 
57 3 58 1 178 1 62 2 271 1 133 1 65 2 161 1 11 7 313 1 46 1 50 1 147 1 192 4 301 1 
172 1 284 1 178 2 288 1 133 2 287 2 41 2 187 1 11 23 46 4 224 4 50 3 191 2 192 12 301 2 262 2 58 2 57 11 62 9 271 3 64 2 65 2 66 2 310 1 67 2 69 1 161 5 313 1 30 1 
11 1 65 1 192 1 
57 1 11 1 178 1 
58 1 57 3 174 1 62 3 271 1 64 1 133 1 66 1 67 1 41 1 141 1 161 2 11 6 46 1 224 2 50 1 192 3 301 1 
178 1 221 1 131 1 133 2 41 1 140 1 222 1 11 12 46 1 224 2 50 2 147 1 192 6 301 2 57 6 58 2 62 2 271 2 64 1 65 1 66 1 67 1 161 1 242 1 124 1 
57 3 172 1 62 2 271 1 161 1 11 6 46 1 50 1 191 1 192 3 262 1 
57 1 62 2 284 1 287 1 64 1 288 1 310 1 66 1 41 1 67 1 161 1 11 3 46 1 224 2 191 1 192 2 262 1 
98 1 57 5 172 1 62 5 271 2 64 1 66 1 67 1 41 1 161 3 11 10 46 2 224 2 50 2 191 2 192 5 124 1 262 2 
58 1 57 2 62 1 271 1 64 1 66 1 41 1 67 1 11 2 46 1 224 2 124 1 
58 1 57 2 62 2 271 1 133 1 64 1 66 1 41 1 67 1 161 1 11 4 46 1 224 2 50 1 192 2 124 1 301 1 
57 1 104 1 62 2 287 1 64 3 310 1 66 3 41 3 67 3 161 1 11 3 46 1 224 6 191 1 192 2 124 1 262 1 
172 2 284 1 178 3 288 1 287 2 133 3 41 5 141 1 11 34 46 5 224 10 50 5 147 1 191 3 192 18 301 3 262 3 95 1 263 1 57 16 58 3 104 1 62 12 271 5 64 5 65 4 310 1 66 5 67 5 69 1 161 7 313 1 28 1 124 1 
172 1 178 1 284 1 221 1 288 1 41 1 11 8 224 2 50 1 147 1 191 1 192 4 262 1 57 4 62 2 271 1 64 1 65 1 66 1 67 1 69 1 161 2 124 1 
172 1 284 1 178 1 221 1 288 1 41 2 141 1 11 11 46 1 224 4 50 1 147 1 191 1 192 5 301 1 262 1 57 6 58 1 62 3 271 2 64 2 65 2 66 2 67 2 69 1 161 2 313 1 124 1 
172 1 284 1 178 1 221 1 131 1 288 1 133 2 287 1 41 3 141 1 140 1 222 1 11 19 46 1 224 6 50 3 147 1 191 1 192 10 301 2 262 1 57 9 58 2 62 4 271 3 64 3 65 1 66 3 67 3 69 1 161 3 242 1 124 1 
172 1 284 1 178 1 221 1 131 1 288 1 287 1 133 1 41 3 141 1 140 1 222 1 11 17 46 2 224 6 50 2 147 1 191 1 192 7 301 2 262 1 57 10 58 2 62 5 271 3 64 3 65 1 66 3 67 3 69 1 161 3 242 1 124 1 
172 1 178 1 284 1 221 1 288 1 41 1 11 8 224 2 50 1 147 1 191 1 192 4 262 1 57 4 62 2 271 1 64 1 65 1 66 1 67 1 69 1 161 2 124 1 
178 1 221 1 131 1 133 2 41 1 140 1 222 1 11 12 46 1 224 2 50 2 147 1 192 6 301 2 57 6 58 2 62 2 271 2 64 1 65 1 66 1 67 1 161 1 242 1 124 1 
172 1 284 1 178 1 221 1 131 1 288 1 133 1 287 2 41 4 140 1 141 1 222 1 11 18 46 2 224 8 50 2 147 1 191 1 192 8 301 2 262 1 57 10 58 2 62 5 271 3 64 4 65 1 66 4 67 4 69 1 161 3 242 1 124 1 
178 1 221 1 131 1 133 2 287 2 41 4 140 1 222 1 11 16 46 3 224 8 50 2 147 1 192 7 301 3 57 9 58 3 104 1 62 6 271 3 64 4 65 1 66 4 67 4 161 3 242 1 124 1 
57 3 172 1 284 2 62 6 271 1 288 1 161 3 11 7 46 3 50 1 191 3 192 4 262 3 
172 1 284 1 178 1 221 1 131 1 288 1 133 1 287 2 41 4 140 1 222 1 11 18 46 1 224 8 50 2 147 1 191 1 192 8 301 2 262 1 57 10 58 2 104 1 62 4 271 3 64 4 65 1 66 4 67 4 69 1 161 3 242 1 124 1 
43 1 111 1 102 1 23 1 149 1 261 1 26 1 
102 1 23 1 7 1 236 1 38 1 159 1 26 1 111 1 43 1 149 1 53 1 261 1 
19 1 276 1 291 1 129 1 13 1 268 1 117 1 91 1 122 1 94 1 216 1 
19 1 130 1 276 1 186 1 291 1 73 1 49 1 117 1 314 1 13 1 91 1 122 1 94 1 
19 1 130 1 276 1 186 1 291 1 73 1 49 1 117 1 314 1 13 1 121 1 91 1 122 1 
19 1 130 1 276 1 291 1 73 1 293 1 49 1 117 1 314 1 13 1 121 1 91 1 122 1 
19 4 101 1 270 1 250 1 183 1 253 1 142 1 276 3 291 1 144 1 115 1 189 2 225 1 13 1 314 1 117 3 148 1 51 1 121 1 91 3 122 1 94 1 194 2 
19 4 101 1 270 1 250 1 253 1 276 3 291 1 144 1 115 1 189 2 225 1 13 1 314 1 117 3 148 1 51 1 121 1 91 3 122 1 94 1 194 2 150 1 
276 1 291 1 117 1 89 1 91 1 122 1 
19 3 176 1 197 1 180 1 24 1 139 1 185 1 290 1 276 7 291 2 88 1 117 7 314 1 13 2 89 1 297 1 91 6 92 1 122 3 94 2 125 1 
130 1 49 1 
250 2 5 1 254 1 44 2 189 3 148 1 51 1 91 1 90 1 94 1 194 3 150 1 196 1 19 2 97 1 59 2 101 1 199 1 232 1 269 1 270 1 305 2 306 2 276 1 112 1 115 1 117 1 164 1 
19 2 135 1 290 1 276 2 291 1 88 1 117 2 314 1 13 1 89 1 51 1 91 2 122 2 
19 1 60 1 129 1 268 1 290 1 276 4 291 1 144 1 117 4 13 1 91 4 122 1 94 1 
19 1 176 1 103 1 139 1 276 2 291 1 117 2 314 1 13 1 121 1 315 1 91 2 122 2 300 1 
276 1 291 1 22 1 285 1 117 1 29 1 91 1 122 1 94 1 237 1 
19 1 197 1 290 1 276 2 291 1 113 1 117 2 13 1 91 2 122 1 125 1 
19 3 60 1 129 1 268 1 290 1 276 5 291 2 117 5 13 2 297 1 121 1 91 4 92 1 122 2 94 1 125 1 
19 3 264 1 60 1 129 1 268 1 290 1 276 5 291 2 117 5 13 2 121 1 91 4 92 1 122 2 94 1 125 1 
19 1 130 1 276 1 291 1 73 1 293 1 49 1 117 1 314 1 13 1 91 1 122 1 94 1 
19 1 176 1 24 1 139 1 276 1 291 1 88 1 117 1 314 1 13 1 121 1 91 1 122 2 
207 1 202 1 15 1 134 1 
207 1 231 1 189 1 202 1 269 1 107 1 15 1 134 1 138 1 194 1 
23 1 234 1 134 1 83 1 26 1 207 1 43 1 15 1 299 1 
231 1 107 1 15 1 

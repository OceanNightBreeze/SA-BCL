#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (182,246) (182,246) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (182,246) (182,246) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (182,246) (182,246) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (182,246) (182,246) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 188 339 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 188 339 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (33,36,171) (19,149,237) (19,149,237) (19,149,237) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (33,36,171) (19,149,237) (19,149,237) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (33,36,171) (19,149,237) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (33,36,171) (19,149,237) (19,149,237) (19,149,237) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 280 52 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 280 274 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 280 274 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 280 274 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 280 274 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (33,36,171) (33,36,171) (33,36,171) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (33,36,171) (33,36,171) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (33,36,171) (33,36,171) (33,36,171) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 266 186 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
166 1 64 1 182 1 127 1 297 1 298 1 246 1 72 1 206 1 241 1 176 1 107 1 
166 1 64 1 182 1 127 1 297 1 298 1 246 1 72 1 206 1 241 1 176 1 107 1 
166 1 64 1 182 1 127 1 297 1 298 1 246 1 72 1 206 1 241 1 176 1 107 1 
166 1 64 1 182 1 127 1 297 1 298 1 246 1 72 1 206 1 241 1 176 1 107 1 
166 2 253 1 113 1 127 1 297 1 368 1 72 1 373 1 241 1 270 1 188 1 107 2 
45 1 166 2 127 1 276 1 72 1 373 1 241 1 206 1 305 1 38 1 244 1 352 1 330 1 248 1 107 2 176 1 
45 1 166 3 294 1 113 1 127 2 254 1 72 2 373 2 241 1 352 1 368 1 107 3 176 1 
166 7 253 1 294 2 113 3 127 2 277 1 254 1 72 2 373 3 241 1 270 1 297 1 368 5 7 1 339 1 188 1 107 7 176 1 23 1 
166 7 253 1 294 2 113 3 127 2 277 1 254 1 72 2 373 3 241 1 270 1 297 1 368 5 7 1 339 1 188 1 107 7 176 1 23 1 
39 1 
26 1 35 1 374 2 
335 2 31 1 260 2 162 2 32 2 230 1 179 2 15 2 
181 1 364 1 363 1 204 1 230 1 130 1 4 2 73 1 233 1 258 1 328 1 289 1 260 3 162 2 331 1 135 1 210 2 58 1 334 2 11 1 214 1 31 1 191 2 32 2 217 1 311 2 220 1 147 1 15 2 335 3 118 1 63 1 271 1 227 1 340 1 361 1 179 2 
335 1 140 1 31 1 245 1 260 1 162 1 32 1 194 1 179 1 15 1 
124 1 194 1 35 1 335 1 101 1 350 1 260 1 67 1 291 1 333 1 318 1 30 1 164 1 179 1 
124 2 32 1 194 1 35 1 15 1 335 1 101 1 350 1 162 1 260 1 291 1 333 1 318 2 164 1 179 1 
174 1 124 1 259 1 247 1 318 1 
284 1 124 2 259 1 121 1 35 1 247 1 291 1 318 2 
124 1 259 1 318 1 
140 1 124 1 31 1 32 1 194 1 15 1 335 1 245 1 223 1 162 1 260 1 247 1 318 1 179 1 
35 1 
76 1 124 2 259 1 121 1 35 1 247 1 291 1 318 2 
139 2 320 1 301 1 124 5 35 1 256 1 41 1 199 1 259 2 315 2 288 2 53 1 121 1 379 1 8 1 247 2 122 1 291 1 318 5 
334 1 214 1 364 1 363 1 204 1 48 1 4 1 311 1 233 1 147 1 15 1 328 1 335 2 286 1 162 1 260 2 227 1 58 1 354 1 179 1 
39 1 
252 1 6 1 335 2 162 1 32 1 260 2 230 2 15 1 179 2 
167 1 201 1 48 1 
334 1 214 1 168 1 364 1 204 1 363 1 230 1 4 1 311 1 233 1 147 1 328 1 335 1 260 1 58 1 227 1 
252 1 335 5 286 1 32 1 260 5 162 4 230 1 67 1 37 1 354 2 145 1 92 1 179 5 15 4 
335 2 42 1 245 1 260 2 162 2 194 1 179 2 15 2 
335 3 32 1 260 3 162 3 230 1 354 1 179 3 15 3 
335 1 245 1 260 1 162 1 194 1 179 1 15 1 
6 1 252 1 335 1 260 1 162 1 32 1 194 1 179 1 15 1 
252 1 124 1 364 1 363 1 204 1 230 1 4 1 73 1 233 1 328 1 101 1 350 1 286 1 289 1 260 4 162 3 331 1 135 1 210 1 58 1 354 1 333 1 164 1 334 1 11 1 214 1 31 1 191 2 32 2 217 1 194 1 311 1 220 1 269 1 147 1 15 3 335 4 63 1 119 1 227 1 318 1 340 1 361 1 179 3 
335 2 260 2 162 1 230 1 67 1 354 1 145 1 179 2 15 1 
252 1 124 1 32 1 194 1 35 1 15 3 335 3 172 1 101 1 286 1 350 1 162 3 260 3 119 1 354 2 318 1 333 1 164 1 179 3 
252 1 335 2 167 1 260 2 162 2 32 1 48 1 354 1 179 2 15 2 
334 1 214 1 204 1 363 1 364 1 230 1 4 1 311 1 233 1 147 1 328 1 335 1 260 1 58 1 227 1 
328 1 334 1 335 1 260 1 34 1 364 1 363 1 204 1 230 1 4 1 227 1 58 1 24 1 311 1 147 1 
152 1 322 1 275 1 323 1 48 2 258 2 331 1 210 4 105 1 212 1 371 1 11 2 114 1 167 2 191 2 217 1 220 1 267 1 63 1 201 2 22 1 273 1 340 1 361 1 
335 1 42 1 260 1 162 1 194 1 164 1 179 1 15 1 
372 1 125 1 
372 1 125 1 
65 1 47 1 
65 1 47 1 
65 1 47 1 
372 1 125 1 344 1 
372 1 125 1 344 1 
372 1 125 1 282 1 
372 2 65 1 125 2 103 1 47 1 365 1 
372 1 125 1 344 1 
372 1 125 1 346 1 
372 1 125 1 346 1 
372 1 125 1 346 1 
124 1 125 1 230 1 231 1 282 1 185 1 51 1 285 1 162 2 260 2 77 1 372 1 196 1 15 2 62 1 242 1 335 2 221 1 337 1 224 1 318 1 300 1 228 1 179 2 
124 2 111 2 372 2 125 2 192 1 35 1 279 1 98 1 365 1 184 1 327 1 185 2 242 2 51 2 224 1 290 1 318 2 228 2 300 3 
297 1 
330 1 305 1 38 1 
112 1 297 2 330 1 38 1 
195 1 38 1 359 1 43 1 225 1 297 1 330 1 
195 1 38 1 359 2 43 1 297 1 330 1 
124 5 322 1 304 1 231 1 183 2 26 1 259 1 288 1 28 1 291 1 136 1 10 2 139 1 308 1 240 1 196 1 35 2 374 3 267 1 88 1 41 1 221 1 315 1 121 1 378 2 379 2 247 4 122 3 318 5 22 1 251 1 273 1 
124 9 94 1 322 3 304 3 183 6 25 1 347 5 157 1 26 3 259 6 288 2 28 2 209 1 291 1 10 6 139 2 308 1 35 5 296 1 374 9 267 3 88 2 170 1 199 1 174 5 41 1 221 4 315 2 121 1 379 6 247 7 122 8 318 9 22 3 273 3 
124 3 322 1 304 1 183 2 26 2 288 1 28 1 291 1 136 1 139 1 10 2 35 3 88 1 267 1 374 4 199 1 221 1 315 1 378 1 247 2 379 2 122 3 318 3 251 1 22 1 273 1 
124 4 94 1 322 2 304 2 183 4 157 1 26 3 288 1 28 1 291 1 136 1 10 4 139 1 35 4 374 7 88 1 267 2 170 1 199 1 221 2 315 1 378 2 247 3 379 4 122 5 318 4 251 1 22 2 273 2 
39 1 
329 1 364 1 
129 1 
364 1 363 1 227 1 
364 1 202 1 
364 1 363 1 
215 2 364 3 363 1 261 1 227 1 229 1 
11 3 355 1 322 1 114 2 362 1 97 1 49 1 326 1 281 2 61 1 258 4 336 1 208 1 210 7 105 3 137 1 22 1 
11 3 355 1 322 1 114 2 362 1 97 1 49 1 326 1 281 2 61 1 258 4 336 1 208 1 210 7 105 3 137 1 22 1 
11 3 355 1 322 1 114 2 97 1 362 1 49 1 326 1 281 2 61 1 258 4 336 1 312 1 208 1 210 7 105 3 137 1 22 1 
322 4 303 1 97 1 362 2 205 4 304 3 326 2 49 5 281 3 258 16 208 1 210 31 57 1 137 1 105 10 355 1 11 15 295 3 114 5 85 1 191 2 267 3 220 1 61 2 148 1 336 2 63 1 120 1 377 1 21 1 22 4 340 1 361 1 273 3 
322 1 362 1 97 1 326 1 49 1 281 2 258 5 208 1 210 9 105 4 11 4 355 1 114 3 191 4 220 2 61 1 63 2 336 1 175 1 151 1 21 1 22 1 340 2 361 2 
0 1 166 1 334 1 112 1 237 1 127 1 33 1 72 1 309 1 12 1 4 1 241 1 311 1 38 1 147 1 149 1 243 1 287 1 297 1 330 1 58 1 19 1 176 1 107 1 70 1 
0 1 166 2 334 1 112 1 237 1 127 1 33 1 72 1 309 1 12 1 4 1 311 1 38 1 147 1 146 1 132 1 149 1 243 1 297 1 330 1 368 1 211 1 58 1 176 1 107 2 70 1 
166 1 334 1 112 1 237 1 33 1 309 1 12 1 4 1 311 1 38 1 147 1 132 1 243 1 297 1 330 1 368 1 211 1 58 1 107 1 176 1 70 1 
127 1 1 1 204 1 72 1 363 1 364 1 4 1 131 1 58 1 107 1 189 1 334 1 166 1 309 2 12 2 311 1 146 1 357 1 147 1 17 1 68 1 176 2 70 2 
0 1 166 1 334 1 112 1 237 1 127 1 33 1 72 1 309 1 12 1 4 1 241 1 311 1 38 1 147 1 132 1 149 1 243 1 297 1 330 1 58 1 19 1 176 1 107 1 70 1 
200 1 
203 1 1 1 204 2 4 2 50 1 100 2 207 1 101 1 259 6 351 1 350 1 260 1 56 2 104 2 58 1 164 1 265 2 116 1 311 2 173 1 315 1 16 1 121 3 66 1 122 2 67 1 318 5 177 2 179 1 124 5 363 1 364 1 131 1 234 2 26 2 288 1 235 1 28 1 291 1 81 1 333 1 30 1 139 1 334 2 141 4 194 1 35 2 197 1 374 2 147 1 335 1 41 1 379 2 299 2 44 1 
203 1 124 3 116 1 141 2 194 1 173 1 335 1 76 1 101 1 259 2 351 1 350 1 235 1 260 1 121 1 67 1 333 1 318 3 177 1 164 1 30 1 179 1 
203 1 124 3 100 1 101 1 76 1 259 1 350 1 351 1 260 1 235 1 291 1 333 1 30 1 164 1 116 1 141 3 194 1 35 1 335 1 173 1 121 1 67 1 318 3 179 1 
203 1 124 3 234 1 100 1 76 1 101 1 350 1 351 1 259 2 260 1 235 1 291 1 333 1 30 1 164 1 116 1 141 3 194 1 35 1 335 1 173 1 121 1 67 1 318 3 177 1 179 1 
203 1 348 1 100 4 101 1 350 1 259 7 351 1 160 1 260 1 54 1 56 2 104 2 164 1 265 2 116 1 173 1 315 1 121 3 67 1 226 1 122 1 318 5 177 4 179 1 124 5 234 4 76 1 26 2 288 1 235 1 291 5 333 1 30 1 139 1 141 6 194 1 35 5 197 1 90 1 335 1 41 1 379 1 299 2 44 1 
203 1 100 2 101 1 350 1 351 1 259 4 260 1 56 2 104 2 164 1 265 2 116 1 173 1 315 1 121 2 67 1 122 1 318 4 177 2 179 1 124 4 234 2 26 2 288 1 235 1 81 1 291 1 333 1 30 1 139 1 141 4 194 1 35 2 197 1 374 2 335 1 41 1 379 1 299 2 44 1 
203 1 124 4 348 1 234 2 100 2 101 1 26 2 259 4 160 1 350 1 351 1 288 1 260 1 235 1 56 2 291 1 104 2 333 1 30 1 164 1 139 1 265 2 116 1 141 4 194 1 35 1 197 1 335 1 173 1 41 1 315 1 121 2 379 1 299 2 122 1 67 1 226 1 318 4 177 2 44 1 179 1 
203 1 124 4 348 1 234 2 100 2 101 1 26 2 259 4 160 1 350 1 351 1 288 1 260 1 235 1 56 2 291 1 104 2 333 1 30 1 164 1 139 1 265 2 116 1 141 4 194 1 35 1 197 1 335 1 173 1 41 1 315 1 121 2 379 1 299 2 122 1 67 1 226 1 318 4 177 2 44 1 179 1 
203 1 124 4 126 1 345 1 234 2 100 2 101 1 259 4 160 1 350 1 351 1 288 1 260 1 235 1 291 1 104 2 333 1 264 2 30 1 164 1 139 1 109 2 108 1 265 2 116 1 141 4 194 1 35 1 197 1 374 2 335 1 173 1 41 1 315 1 121 2 379 1 122 1 67 1 318 4 177 2 179 1 
203 1 124 4 348 1 234 3 100 3 101 1 26 2 160 1 350 1 351 1 259 5 288 1 260 1 235 1 56 2 54 1 291 1 104 2 333 1 30 1 164 1 139 1 265 2 116 1 141 5 194 1 35 1 197 1 335 1 173 1 41 1 315 1 121 2 379 1 299 2 122 1 226 1 67 1 318 4 44 1 177 3 179 1 
203 1 124 4 348 1 234 3 100 3 101 1 26 2 160 1 350 1 351 1 259 5 288 1 260 1 235 1 56 2 54 1 291 1 104 2 333 1 30 1 164 1 139 1 265 2 116 1 141 5 194 1 35 1 197 1 335 1 173 1 41 1 315 1 121 2 379 1 299 2 122 1 226 1 67 1 318 4 44 1 177 3 179 1 
203 1 100 2 101 1 350 1 351 1 259 4 260 1 104 2 164 1 264 2 109 2 265 2 116 1 173 1 315 1 121 2 67 1 122 1 318 4 177 2 179 1 124 4 126 1 234 2 288 1 235 1 81 1 291 1 333 1 30 1 139 1 141 4 194 1 35 1 197 1 374 2 335 1 41 1 379 1 
371 1 63 1 191 2 217 1 331 1 220 1 39 1 340 1 361 1 
343 1 322 1 230 1 205 3 48 11 304 2 49 1 258 8 27 1 289 1 331 1 210 14 57 1 105 2 83 1 292 1 11 6 295 3 114 1 167 4 191 4 217 2 220 2 267 2 63 2 222 1 271 1 377 1 201 11 22 2 340 2 361 2 273 1 
364 1 363 1 204 1 230 1 4 1 233 1 75 1 258 1 328 1 286 1 260 2 162 1 289 1 331 1 210 2 58 1 354 1 106 1 334 1 214 1 11 1 167 1 191 2 168 1 217 1 311 1 220 1 147 1 15 1 335 2 63 1 314 1 222 1 271 1 227 1 361 1 179 1 340 1 
97 1 204 1 4 3 48 7 304 2 49 4 158 1 258 10 162 1 260 3 208 1 210 20 354 1 58 2 105 8 165 2 110 1 355 1 11 10 214 2 114 4 167 7 217 3 311 3 220 3 267 2 61 1 15 1 63 3 222 1 271 1 227 2 22 3 179 1 361 3 273 2 322 3 324 2 363 2 364 2 230 2 281 1 233 2 132 1 328 2 286 1 289 1 331 3 135 2 29 1 334 3 191 6 375 2 147 2 335 3 40 2 336 1 201 7 340 3 
181 2 1 1 96 1 364 3 204 2 363 2 4 7 131 1 132 1 258 1 287 1 260 1 162 1 289 1 331 2 210 2 354 1 58 2 369 1 334 8 293 1 371 1 11 1 216 1 191 4 217 2 311 8 143 1 220 2 147 2 15 1 335 1 91 1 63 2 271 1 272 1 179 1 340 2 361 2 
252 1 322 1 95 1 48 1 304 1 258 1 162 1 260 1 331 1 210 3 105 1 11 2 114 1 167 1 32 1 191 2 217 1 220 1 267 1 15 1 335 1 63 1 222 1 201 1 22 1 340 1 361 1 179 1 273 1 
371 1 167 1 191 2 217 1 48 1 49 1 220 1 267 1 258 2 63 1 331 1 201 1 210 2 105 1 212 1 22 1 361 1 340 1 
371 1 11 2 114 1 275 1 322 1 167 1 191 2 217 1 48 1 220 1 63 1 331 1 201 1 210 2 105 1 361 1 340 1 273 1 
322 1 304 1 48 2 49 1 258 2 331 1 210 4 105 2 371 1 11 2 114 1 167 2 191 2 217 1 267 1 220 1 63 1 201 2 22 1 340 1 361 1 273 1 
167 1 191 2 217 1 48 1 49 1 220 1 267 1 258 2 91 1 63 1 331 1 201 1 210 2 105 1 212 1 22 1 361 1 340 1 
11 2 114 1 275 1 322 1 167 1 191 2 217 1 48 1 220 1 91 1 63 1 331 1 201 1 210 2 105 1 361 1 340 1 273 1 
322 1 304 1 48 2 49 1 258 2 331 1 210 4 105 2 11 2 114 1 167 2 191 2 217 1 267 1 220 1 91 1 63 1 201 2 22 1 340 1 361 1 273 1 
322 1 304 1 48 2 49 1 258 2 331 1 210 4 105 2 11 2 114 1 167 2 191 2 217 1 267 1 220 1 63 1 201 2 22 1 340 1 361 1 273 1 
363 1 204 1 364 1 230 1 4 1 233 1 258 1 328 1 260 1 289 1 331 1 135 1 210 2 58 1 334 1 214 1 11 1 191 2 217 1 311 1 220 1 147 1 335 1 63 1 271 1 227 1 361 1 340 1 
363 1 204 1 364 1 230 1 4 1 24 1 258 1 328 1 260 1 289 1 331 1 210 2 58 1 334 1 11 1 191 2 34 1 217 1 311 1 220 1 147 1 13 1 335 1 63 1 271 1 227 1 361 1 340 1 
322 1 304 1 48 2 49 1 258 2 331 1 210 4 105 2 11 2 114 1 167 2 191 2 217 1 267 1 220 1 63 1 222 1 201 2 22 1 340 1 361 1 273 1 
322 1 324 1 363 1 364 1 48 2 4 1 304 1 49 1 233 1 258 2 328 1 287 1 260 1 331 1 135 1 210 4 58 1 105 2 334 1 11 2 214 1 114 1 167 2 191 2 217 1 311 1 267 1 220 1 147 1 335 1 63 1 201 2 227 1 22 1 273 1 361 1 340 1 
252 1 322 1 304 1 48 1 49 1 258 2 162 1 260 1 331 1 210 3 105 1 11 1 167 1 32 1 191 2 217 1 220 1 267 1 15 1 335 1 63 1 222 1 201 1 317 1 22 1 273 1 340 1 361 1 179 1 
153 1 180 1 322 1 205 2 304 1 280 1 49 1 258 4 367 1 52 1 163 1 236 1 210 9 57 1 105 2 11 5 295 1 114 1 191 4 268 1 220 2 267 1 63 2 377 1 151 1 22 1 340 2 361 2 273 1 
153 3 180 1 322 1 205 2 46 1 156 1 304 2 280 1 49 1 232 1 258 11 134 1 367 1 236 2 210 20 187 1 105 2 356 1 11 9 295 2 114 1 191 6 268 2 220 3 267 2 63 3 377 2 21 2 151 1 22 2 274 1 340 3 361 3 273 1 
153 1 180 1 322 1 205 2 304 1 280 1 49 1 258 4 367 1 163 1 236 1 210 9 57 1 105 2 11 5 295 1 114 1 191 4 268 1 220 2 267 1 63 2 377 1 151 1 22 1 274 1 340 2 361 2 273 1 
153 1 180 1 322 1 205 2 304 1 280 1 49 1 258 4 367 1 163 1 236 1 210 9 57 1 105 2 11 5 295 1 114 1 191 4 268 1 220 2 267 1 63 2 377 1 151 1 22 1 274 1 340 2 361 2 273 1 
153 3 180 1 322 7 97 1 46 1 205 4 156 1 304 6 280 1 232 1 49 6 281 1 258 24 134 1 27 2 367 1 208 1 236 1 210 46 187 1 57 2 105 12 355 1 356 1 11 22 295 4 114 6 191 4 268 1 220 2 267 6 61 1 336 1 63 2 377 2 21 1 151 1 22 7 274 1 340 2 361 2 273 6 
51 1 242 1 372 1 125 1 306 1 98 1 365 1 228 1 327 1 185 1 
285 1 282 1 
370 1 51 1 242 1 372 1 125 1 262 1 82 1 228 1 185 1 
344 1 14 1 
103 1 346 1 380 1 
124 1 111 1 372 1 125 1 192 1 35 1 279 1 98 1 365 1 327 1 185 1 242 1 51 1 224 1 290 1 318 1 228 1 300 2 
124 1 111 1 372 1 125 1 192 1 35 1 279 1 98 1 365 1 327 1 185 1 242 1 51 1 224 1 290 1 318 1 228 1 300 2 
124 1 111 1 372 1 125 1 192 1 35 1 279 1 98 1 365 1 327 1 185 1 242 1 51 1 224 1 290 1 318 1 228 1 300 2 
103 1 344 1 14 1 
103 1 344 1 14 1 
346 1 380 1 
103 1 346 1 380 1 
337 1 62 1 
124 1 125 1 230 1 231 1 282 1 185 1 51 1 285 1 102 1 260 2 77 1 162 2 290 1 111 1 372 1 196 1 62 1 15 2 242 1 335 2 221 1 337 1 247 1 318 1 228 1 300 1 179 2 
181 2 96 1 364 1 363 1 4 2 257 1 258 1 260 2 289 1 331 1 210 2 58 1 334 2 293 1 11 1 191 2 217 1 218 1 311 2 220 1 147 1 358 1 335 2 63 1 222 1 271 1 150 1 123 1 179 2 361 1 340 1 
334 2 0 1 112 1 33 1 309 1 4 2 36 1 311 2 38 1 147 1 132 1 171 1 243 1 287 1 297 1 330 1 58 1 307 1 
334 1 0 1 112 1 33 1 309 1 4 1 36 1 311 1 38 1 283 1 132 1 147 1 243 1 297 1 330 1 58 1 
334 1 1 1 364 1 363 1 204 1 309 1 4 1 311 1 131 1 147 1 161 1 58 1 307 1 189 1 
334 1 0 1 112 1 33 1 309 1 4 1 36 1 311 1 38 1 132 1 147 1 171 1 243 1 297 1 330 1 58 1 307 1 
376 1 
39 1 
124 1 26 1 259 1 288 1 56 1 291 1 139 1 35 2 374 1 41 1 315 1 121 1 379 1 122 1 299 1 318 1 44 1 
204 1 4 3 304 2 159 2 259 5 53 1 261 1 8 1 58 4 213 1 10 6 215 2 60 2 169 2 219 2 311 3 267 2 315 4 316 1 66 1 121 3 122 9 227 3 20 2 318 5 22 2 273 2 124 5 321 2 71 2 322 2 364 10 363 3 183 6 26 6 287 1 288 4 28 2 329 3 291 2 333 2 139 4 334 3 238 2 35 8 87 1 89 1 374 12 147 3 41 4 40 2 379 8 202 2 250 1 
321 1 124 1 322 2 205 1 46 1 156 1 304 2 183 5 232 1 26 3 259 1 288 2 28 1 187 1 291 2 10 5 139 2 356 1 295 1 115 1 239 1 35 5 374 6 267 2 41 2 315 2 66 1 121 1 377 1 379 5 122 8 318 1 20 2 22 2 273 2 
321 1 124 1 322 1 288 1 260 1 162 1 208 1 139 1 140 1 31 1 193 1 32 1 194 1 61 1 15 1 335 1 41 1 336 1 245 1 315 1 223 1 379 2 226 1 122 2 20 2 318 1 22 2 179 1 
139 1 35 1 41 1 315 1 288 1 53 1 8 1 379 1 122 1 291 1 
10 5 321 1 322 2 35 5 304 2 183 5 267 2 374 10 40 1 26 5 379 5 122 5 20 2 22 2 273 2 
124 1 259 1 121 1 35 1 291 1 318 1 
124 3 1 1 364 1 363 1 204 2 4 3 131 1 50 1 207 1 259 4 288 2 186 1 28 1 58 1 213 1 139 2 334 3 266 1 311 3 89 1 147 1 199 1 41 1 315 2 66 2 121 2 379 2 122 1 318 3 
204 1 363 1 364 1 230 1 4 1 73 1 233 1 328 1 289 1 260 3 162 2 331 1 135 1 210 1 58 1 334 1 11 1 214 1 31 1 191 2 32 2 217 1 311 1 220 1 147 1 15 2 335 3 63 1 227 1 340 1 361 1 179 2 
10 2 139 1 35 4 183 2 281 1 374 4 41 1 26 2 315 1 288 1 28 1 66 1 379 2 122 1 291 2 
51 1 338 1 228 1 
51 1 338 1 228 1 
51 1 337 1 198 1 228 1 327 1 
51 1 338 1 228 1 
51 1 349 1 228 1 
51 1 349 1 228 1 
51 1 349 1 228 1 
51 1 228 1 
372 1 125 1 
11 4 355 1 322 1 114 2 191 4 97 1 49 1 281 1 220 2 61 1 258 4 63 2 336 1 208 1 210 8 105 3 21 1 22 1 361 2 340 2 
39 1 
11 2 114 1 322 1 191 2 86 1 304 1 49 1 220 1 267 1 258 2 63 1 210 4 105 2 22 1 273 1 361 1 340 1 
11 4 295 1 114 1 322 1 205 2 304 1 49 1 267 1 258 3 377 1 210 7 57 1 105 2 22 1 273 1 
342 1 322 3 97 1 205 2 304 2 49 4 281 1 258 11 27 1 208 1 210 23 57 1 105 9 292 1 355 1 11 12 295 2 114 5 191 4 267 2 220 2 61 2 336 2 63 2 21 2 22 3 273 2 361 2 340 2 
11 1 205 1 210 1 
295 1 210 1 258 1 
11 3 322 1 114 2 191 2 86 1 304 1 49 1 220 1 267 1 258 3 40 1 63 1 210 6 105 3 22 1 340 1 361 1 273 1 
322 2 205 1 46 1 156 1 304 2 49 1 232 1 258 6 210 12 187 1 105 2 11 6 356 1 295 1 114 1 191 2 220 1 267 2 63 1 377 1 151 1 22 2 340 1 361 1 273 2 
11 3 322 1 114 1 49 1 61 1 258 3 336 1 208 1 210 6 105 2 22 1 
11 2 355 1 342 1 114 1 191 2 97 1 49 1 220 1 61 1 258 1 336 1 63 1 210 3 105 2 21 1 361 1 340 1 
11 5 114 3 322 2 191 2 193 1 49 2 220 1 61 2 258 5 63 1 336 2 208 1 210 10 151 1 105 5 22 2 340 1 361 1 
191 2 49 1 220 1 267 1 258 2 63 1 210 2 151 1 105 1 22 1 361 1 340 1 
11 2 114 1 322 1 191 2 304 1 49 1 220 1 267 1 258 2 63 1 210 4 105 2 151 1 22 1 273 1 361 1 340 1 
11 2 342 1 114 1 191 6 49 1 220 3 61 1 258 1 63 3 336 1 163 1 210 3 21 1 151 1 105 2 361 3 340 3 
342 1 322 5 303 1 97 1 205 4 304 3 49 5 281 1 258 16 208 2 163 1 210 34 57 1 105 12 355 1 11 18 295 3 114 7 85 1 191 10 86 1 220 5 267 3 61 3 148 1 336 3 63 5 377 1 21 2 151 1 22 5 340 5 361 5 273 3 
322 1 97 1 205 1 232 1 281 1 258 4 208 1 210 8 105 2 11 4 355 1 295 1 114 2 191 2 220 1 61 1 63 1 336 1 377 1 151 1 22 1 340 1 361 1 
322 1 97 1 205 2 304 1 232 1 49 1 281 1 258 6 208 1 210 11 57 1 105 3 355 1 11 5 295 1 114 2 191 4 86 1 220 2 267 1 61 1 336 1 63 2 377 1 151 1 22 2 340 2 361 2 
322 3 97 1 205 1 46 1 156 1 304 2 49 1 232 1 281 1 258 9 208 1 210 19 187 1 105 4 355 1 356 1 11 10 295 1 114 3 191 6 86 1 220 3 267 2 61 1 336 1 63 3 377 1 151 1 21 1 22 3 340 3 361 3 273 2 
322 2 97 1 205 1 46 1 156 1 304 2 49 2 232 1 281 1 258 10 208 1 210 17 187 1 105 5 355 1 11 7 356 1 295 1 114 3 191 6 86 1 220 3 267 2 61 1 336 1 63 3 377 1 21 1 151 1 22 3 340 3 361 3 273 1 
322 1 97 1 205 1 232 1 281 1 258 4 208 1 210 8 105 2 11 4 355 1 295 1 114 2 191 2 220 1 61 1 63 1 336 1 377 1 151 1 22 1 340 1 361 1 
322 2 205 1 46 1 156 1 304 2 49 1 232 1 258 6 210 12 187 1 105 2 11 6 356 1 295 1 114 1 191 2 220 1 267 2 63 1 377 1 151 1 22 2 340 1 361 1 273 2 
322 2 97 1 205 1 46 1 156 1 304 2 49 2 232 1 281 1 258 10 208 1 210 18 187 1 105 5 355 1 356 1 11 8 295 1 114 3 191 8 86 1 220 4 267 2 61 1 336 1 63 4 377 1 151 1 21 2 22 3 340 4 361 4 273 1 
322 2 205 1 46 1 156 1 304 3 49 3 232 1 258 9 163 1 210 16 187 1 105 6 356 1 11 7 295 1 114 3 191 8 220 4 267 3 63 4 377 1 151 1 21 2 22 3 340 4 361 4 273 2 
11 4 355 1 322 1 114 3 97 2 49 3 61 3 258 3 336 3 208 1 210 7 105 6 22 1 
322 2 97 1 205 1 46 1 156 1 304 2 49 1 232 1 281 1 258 10 208 1 163 1 210 18 187 1 105 4 355 1 356 1 11 8 295 1 114 3 191 8 220 4 267 2 61 1 336 1 63 4 377 1 151 1 21 2 22 3 340 4 361 4 273 1 
335 1 260 1 230 1 67 1 145 1 138 1 179 1 
84 1 230 1 310 1 145 1 335 1 353 1 260 1 67 1 319 1 138 1 178 1 179 1 
334 1 204 1 4 1 311 1 39 1 
334 1 214 1 364 1 363 1 204 1 230 1 4 1 311 1 147 1 15 1 328 1 335 2 162 1 260 2 227 1 58 1 354 1 179 1 
334 1 214 1 194 1 364 3 363 2 230 1 4 1 311 1 147 1 15 1 159 1 328 1 335 2 101 1 162 2 260 2 202 1 227 2 58 1 354 1 164 1 179 2 213 1 
334 2 3 1 194 1 364 3 363 2 230 1 4 2 311 2 24 1 147 1 15 1 159 1 328 1 335 2 101 1 162 2 260 2 202 1 227 2 58 1 354 1 164 1 179 2 213 1 
334 3 124 2 215 1 3 1 204 1 363 1 364 4 35 1 4 3 311 3 147 1 159 1 366 1 313 1 259 1 329 1 202 1 291 1 227 1 58 1 333 1 318 2 213 1 
334 3 124 2 71 1 215 1 3 1 204 1 363 1 364 4 35 1 4 3 311 3 147 1 159 1 259 1 329 1 202 1 291 1 227 1 58 1 333 1 318 2 213 1 
334 1 369 1 4 1 58 1 311 1 147 1 
181 1 369 1 334 7 293 1 216 1 204 2 325 1 363 2 364 3 4 6 311 7 143 1 132 1 147 2 287 1 261 1 227 1 58 3 69 1 272 1 9 1 
322 1 324 1 97 1 364 1 363 1 230 2 48 1 4 1 281 1 233 1 258 3 328 1 287 1 260 2 162 1 208 1 331 2 135 1 210 6 58 1 354 1 105 2 165 1 334 1 11 3 355 1 214 1 114 2 167 1 191 4 217 2 311 1 220 2 61 1 147 1 15 1 335 2 336 1 63 2 222 1 201 1 227 1 123 1 22 1 361 2 179 1 340 2 
124 3 71 1 204 1 364 2 4 1 259 2 288 2 53 1 329 1 8 1 291 1 333 1 334 1 139 2 215 1 60 1 35 1 169 1 219 1 311 1 89 1 41 2 315 2 121 1 379 1 247 1 122 1 318 3 
334 2 369 1 215 1 287 1 316 1 364 2 363 1 261 1 4 2 58 2 227 1 311 2 147 1 
334 4 3 1 1 1 204 1 363 1 364 1 4 4 311 4 131 1 147 1 287 1 55 1 58 1 
334 2 155 1 363 1 364 1 4 2 142 1 311 2 147 1 29 1 227 1 58 2 69 1 213 1 9 1 
334 1 243 1 330 1 204 1 4 1 305 1 58 1 311 1 38 1 147 1 
334 2 293 1 363 1 364 1 4 2 311 2 132 1 147 1 358 1 287 1 58 1 
334 5 293 1 216 1 1 1 204 1 363 2 364 3 4 4 311 5 143 1 131 1 147 2 287 1 55 1 58 2 213 1 
334 5 293 1 1 1 204 1 363 2 364 3 4 4 311 5 117 1 143 1 131 1 147 2 287 1 55 1 58 2 213 1 
334 1 364 1 363 1 204 1 230 1 4 1 311 1 24 1 147 1 15 1 328 1 335 2 162 1 260 2 227 1 58 1 354 1 179 1 
334 1 325 1 363 1 364 1 4 1 311 1 147 1 261 1 227 1 58 2 69 1 9 1 213 1 
190 1 128 1 332 1 230 1 99 1 
302 1 190 2 124 2 128 2 194 1 278 1 230 1 35 1 99 1 144 1 101 1 350 1 119 1 332 2 247 1 291 1 333 1 318 2 164 1 
128 1 218 1 257 1 99 1 335 1 260 1 332 1 150 1 179 1 
278 1 144 1 99 1 
39 1 
45 1 166 1 352 1 127 1 72 1 373 1 107 1 
176 1 107 1 70 1 
341 1 166 3 45 1 127 1 72 1 373 1 241 1 5 1 244 2 352 1 78 1 107 3 
45 1 166 2 352 1 127 1 368 1 72 1 373 1 270 1 107 2 
166 1 253 1 113 1 127 1 297 1 72 1 373 1 241 1 107 1 
45 1 166 1 127 1 72 1 373 1 241 1 107 1 
45 2 166 1 352 1 127 1 72 1 241 1 107 1 
45 1 166 2 127 2 72 2 373 1 241 1 79 1 18 1 360 1 107 2 
45 1 166 3 294 1 113 1 127 1 277 1 72 1 373 2 241 1 352 1 368 2 7 1 107 3 
166 1 112 1 127 1 297 1 80 1 330 1 72 1 241 1 38 1 107 1 
45 1 166 4 294 1 113 1 127 2 72 2 373 2 241 1 270 1 133 1 352 1 368 2 107 4 
45 1 166 1 352 1 127 1 72 1 373 1 241 1 107 1 
45 2 166 4 294 1 113 1 127 1 72 1 373 3 5 1 244 1 352 2 78 1 368 2 107 4 381 1 
45 1 166 2 127 1 2 1 72 1 373 1 241 1 352 1 368 1 263 1 107 2 23 1 
45 1 166 3 244 2 352 1 127 1 78 1 72 1 373 1 241 1 74 1 5 2 107 3 
93 1 373 2 255 2 249 1 
166 1 127 1 59 1 72 1 241 1 107 1 
45 1 166 2 352 1 127 1 368 1 72 1 7 1 373 1 241 1 107 2 
154 1 
45 1 166 1 352 1 127 1 72 1 373 1 241 1 107 1 
166 3 45 1 127 1 72 1 373 1 241 1 244 1 352 1 368 1 7 1 107 3 
294 1 113 1 373 1 381 1 
45 1 373 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 264 320 (14,157) (14,157) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 264 320 (14,157) (14,157) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 264 320 (14,157) (14,157) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 264 320 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 264 320 213 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 264 320 213 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (20,245) 266 56 (104,346) 357 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 108 93 255 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 279 (20,245) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (20,245) 266 56 (104,346) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 175 3 17 1 105 1 272 1 261 2 46 1 203 2 181 2 81 1 267 1 172 3 76 1 
152 4 175 7 17 2 0 1 211 2 310 1 157 1 261 2 46 1 264 2 181 2 339 1 366 1 105 1 320 1 272 3 223 1 203 3 39 1 206 1 81 2 278 1 14 1 356 2 172 7 
152 4 175 7 17 2 0 1 211 2 310 1 157 1 261 2 46 1 264 2 181 2 339 1 366 1 105 1 320 1 272 3 223 1 203 3 39 1 206 1 81 2 278 1 14 1 356 2 172 7 
152 4 175 7 17 2 0 1 211 2 310 1 157 1 261 2 46 1 264 2 181 2 339 1 366 1 105 1 320 1 272 3 223 1 203 3 39 1 206 1 81 2 278 1 14 1 356 2 172 7 
152 4 175 7 17 2 0 1 211 2 310 1 157 1 261 2 46 1 264 2 181 2 339 1 267 1 76 1 366 1 105 1 320 1 272 3 223 1 203 4 39 1 206 1 81 2 278 1 14 1 356 2 172 7 
203 1 46 1 152 1 264 1 175 2 366 1 181 1 0 1 320 1 272 1 356 1 172 2 211 1 261 1 
175 2 270 1 17 1 178 1 310 1 211 1 261 1 203 1 46 1 264 1 181 1 277 1 278 1 267 1 172 2 76 1 
152 5 175 7 366 1 17 1 0 1 320 1 105 1 272 3 55 1 211 1 223 1 261 2 203 3 46 1 213 1 264 1 181 2 339 1 81 2 356 1 172 7 
152 5 175 7 366 1 17 1 0 1 320 1 105 1 272 3 55 1 211 1 223 1 261 2 203 3 46 1 213 1 264 1 181 2 339 1 81 2 356 1 172 7 
360 1 156 1 68 1 311 1 294 1 275 1 276 1 40 1 169 1 285 1 316 1 113 1 87 1 327 1 
271 1 
2 1 271 1 316 2 285 1 216 1 323 1 377 1 68 2 
78 1 64 1 271 1 194 2 221 1 323 1 212 1 68 5 131 1 371 1 285 2 316 5 225 1 82 2 216 1 26 2 15 1 305 1 377 2 
271 1 216 1 116 1 
271 1 375 1 41 2 
294 2 276 1 169 2 252 1 113 2 360 2 327 2 87 2 
258 1 153 1 18 2 360 2 67 2 20 1 22 1 263 1 315 1 317 1 25 2 242 2 27 1 77 1 184 1 7 2 141 1 319 1 347 1 246 1 167 1 321 1 324 1 294 2 276 1 169 2 251 1 252 1 113 2 300 1 353 1 303 1 208 1 327 3 87 3 117 1 330 1 
294 1 276 1 40 1 169 1 113 1 360 1 156 1 327 1 87 1 311 1 
271 1 143 1 107 1 68 1 146 1 311 1 294 1 340 1 316 1 301 1 216 1 304 1 87 1 327 1 
271 1 360 1 143 1 68 2 146 1 311 1 294 1 169 1 113 1 340 1 316 2 301 1 216 1 87 1 327 1 
21 1 316 1 285 1 377 1 68 1 
273 1 271 1 316 2 285 1 216 1 323 1 377 1 68 2 
316 1 377 1 68 1 
360 1 294 2 99 1 187 1 169 1 113 1 252 2 87 2 327 2 
200 1 307 1 173 1 
28 1 258 1 347 1 18 1 167 1 321 1 67 1 324 1 20 1 263 1 252 1 25 1 327 1 87 1 117 1 330 1 
258 1 347 1 18 1 334 1 167 1 321 1 67 1 324 1 20 1 294 1 263 1 169 1 113 1 241 1 25 1 87 2 327 2 117 1 330 1 173 1 
252 1 116 1 
294 3 169 3 360 1 252 1 113 3 241 1 327 3 87 3 
294 1 40 1 169 1 113 1 327 1 87 1 311 1 
294 1 99 1 169 1 187 1 113 1 360 1 327 1 87 1 311 1 
258 1 18 1 360 2 334 1 67 1 20 1 68 1 311 1 22 1 263 1 340 1 316 1 241 1 25 1 242 1 27 1 5 1 77 1 184 1 7 2 141 1 347 1 246 1 167 1 321 1 143 1 324 1 293 1 146 1 294 3 276 1 187 1 169 3 251 1 252 1 113 3 353 1 301 1 303 1 208 1 327 4 87 4 117 1 330 1 
294 2 314 1 169 1 252 1 113 1 241 1 107 1 327 2 87 2 
271 1 360 1 334 1 143 1 68 1 293 1 311 1 146 1 294 3 187 1 169 3 316 1 113 3 340 1 135 1 301 1 241 2 87 3 327 3 
360 1 307 1 294 2 187 1 169 2 113 2 241 1 87 2 327 2 173 1 
258 1 347 1 18 1 167 1 321 1 67 1 20 1 324 1 263 1 252 1 25 1 327 1 87 1 117 1 330 1 
183 1 258 1 347 1 18 1 167 1 321 1 67 1 324 1 263 1 252 1 25 1 327 1 87 1 218 1 330 1 
153 2 91 1 127 1 128 1 307 2 97 1 22 1 337 1 24 1 136 1 342 1 200 2 242 4 27 1 163 1 184 1 7 2 141 1 246 1 251 2 372 1 353 1 229 1 173 2 
294 1 169 1 113 1 143 1 247 1 327 1 87 1 311 1 
360 1 334 1 107 1 368 1 294 5 314 1 169 4 187 1 113 4 252 1 241 2 139 1 87 5 327 5 
294 2 40 1 169 2 113 2 247 1 327 2 87 2 311 1 
71 1 365 1 94 1 
38 1 365 2 125 1 126 1 94 2 61 1 
365 1 94 1 
365 1 94 1 
125 1 126 1 
125 1 126 1 
125 1 126 1 
365 1 10 1 94 1 
365 1 10 1 94 1 
365 1 10 1 94 1 
365 1 283 1 94 1 
365 1 283 1 94 1 
365 1 283 1 94 1 
174 1 365 2 29 1 271 1 31 1 106 2 94 2 68 2 168 3 250 2 38 1 352 2 298 1 363 2 316 2 13 1 60 1 59 1 150 2 
94 1 68 1 284 1 71 1 73 1 363 1 316 1 365 1 288 1 106 1 145 1 168 1 294 2 169 2 295 1 110 1 352 1 252 1 113 2 226 1 59 1 87 2 327 2 150 1 
63 2 277 1 52 1 356 1 211 2 
264 1 356 1 211 1 
264 1 277 1 211 1 
63 1 277 1 52 1 356 2 185 1 211 3 
256 1 63 1 277 1 52 1 356 1 211 2 
331 1 194 1 233 1 128 1 197 1 68 5 212 3 130 2 284 1 215 1 316 5 285 4 137 2 342 1 216 1 26 1 163 1 271 2 288 1 323 1 8 1 351 1 371 2 204 1 375 1 41 3 82 1 326 2 226 1 15 1 229 1 377 1 
62 1 331 2 121 1 194 2 124 1 128 3 68 9 212 8 130 6 21 5 215 2 316 9 285 7 74 1 137 6 342 3 216 1 26 2 182 5 51 1 78 1 163 3 288 4 271 5 323 1 351 3 371 6 204 1 375 3 83 1 41 9 82 2 15 1 229 3 377 6 
331 1 194 1 233 1 128 1 197 1 68 3 212 3 130 2 215 1 285 2 316 3 342 1 137 2 216 1 26 1 163 1 78 1 271 3 288 1 351 1 371 2 375 2 82 1 326 1 41 4 229 1 
331 1 121 1 194 1 233 1 124 1 128 2 68 4 197 1 212 5 130 4 215 1 316 4 285 3 137 4 342 2 216 1 26 1 163 2 78 1 271 4 288 2 351 2 371 4 375 3 83 1 41 7 82 1 326 2 229 2 
260 1 
374 1 116 1 324 1 
72 1 324 1 
263 1 324 1 
36 1 263 1 374 2 149 1 330 1 324 3 
263 1 330 1 324 1 
322 1 324 1 
163 1 176 1 153 4 128 1 262 1 132 2 147 1 188 1 297 1 251 3 372 3 136 2 253 1 161 1 75 1 328 1 242 7 268 1 
153 16 176 5 235 1 93 1 128 4 262 2 22 1 132 3 240 1 136 5 342 3 161 1 242 31 268 2 163 4 184 1 7 2 219 1 246 1 108 3 147 2 351 3 297 1 188 1 251 15 372 10 325 1 253 1 353 1 115 4 328 2 229 3 88 1 16 1 
358 1 176 1 153 5 231 1 128 2 22 1 262 1 132 1 136 2 161 1 242 9 268 1 163 2 184 1 7 2 246 1 248 1 147 1 297 1 251 4 372 3 353 1 253 1 328 1 
163 1 176 1 153 4 128 1 262 1 132 2 147 1 188 1 297 1 251 3 372 3 136 2 253 1 161 1 328 1 242 7 268 1 
163 1 176 1 153 4 128 1 262 1 132 2 147 1 188 1 297 1 251 3 372 3 136 2 253 1 161 1 328 1 242 7 268 1 
258 1 175 1 30 1 17 2 347 1 18 1 154 2 321 1 32 1 144 1 67 1 291 1 324 1 261 1 237 2 263 1 134 2 181 1 3 1 148 1 25 1 172 1 118 1 
43 1 258 1 175 1 18 1 17 1 154 1 67 1 211 2 261 1 237 1 46 1 264 1 134 1 265 1 181 1 49 1 25 1 138 1 244 1 367 1 321 1 185 1 58 1 277 1 356 1 172 1 
152 1 43 1 258 1 175 2 18 1 17 1 154 1 67 1 211 2 261 1 237 1 46 1 264 1 134 1 23 1 265 1 181 1 49 1 25 1 267 1 76 1 244 1 367 1 321 1 185 1 203 1 58 1 277 1 356 1 172 2 
152 2 43 1 258 1 175 3 18 1 17 1 154 1 67 1 211 2 261 1 237 1 264 1 134 1 265 1 181 1 3 1 49 1 25 1 138 1 267 1 76 1 244 1 220 1 321 1 185 1 203 1 58 1 277 1 356 1 172 3 
152 2 43 1 258 1 175 2 17 1 18 1 154 1 67 1 211 2 237 1 134 1 264 1 265 1 25 1 138 1 267 1 76 1 220 1 321 1 185 1 203 1 58 1 277 1 172 2 356 1 
186 1 
333 1 194 1 230 2 280 1 1 2 340 1 341 1 343 4 286 1 243 1 164 1 347 2 289 1 107 1 294 1 57 2 299 2 301 1 15 1 304 1 120 1 258 1 18 2 67 2 212 2 68 5 69 1 311 1 263 1 215 1 316 5 216 1 26 1 25 2 269 1 271 2 321 1 143 1 32 1 323 3 324 1 146 1 370 2 371 2 375 2 41 2 82 1 148 1 85 1 228 2 227 1 87 1 327 1 90 2 377 6 
269 1 289 1 280 1 143 1 323 1 107 1 68 3 311 1 146 1 2 1 294 1 316 3 340 1 343 2 301 1 341 1 227 1 304 1 87 1 327 1 90 1 377 2 
269 1 271 1 289 1 280 1 143 1 323 1 107 1 68 3 311 1 146 1 2 1 294 1 316 3 340 1 343 3 301 1 341 1 216 1 228 1 227 1 304 1 87 1 327 1 377 1 
280 1 68 3 311 1 2 1 340 1 316 3 341 1 343 3 216 1 269 1 271 1 289 1 143 1 323 1 107 1 146 1 294 1 299 1 301 1 327 1 87 1 304 1 227 1 228 1 90 1 377 2 
333 1 194 1 230 2 280 1 196 1 1 2 2 1 340 1 343 6 341 1 289 1 107 1 294 1 57 2 299 4 114 1 254 1 301 1 304 1 15 1 68 5 309 1 212 1 311 1 316 5 216 5 26 1 269 1 271 5 143 1 323 3 222 1 146 1 370 2 371 1 375 2 82 1 85 1 327 1 87 1 227 1 228 4 90 4 377 7 
333 1 194 1 230 2 280 1 1 2 212 1 68 4 311 1 316 4 340 1 341 1 343 4 216 1 26 1 269 1 271 2 289 1 143 1 323 2 107 1 146 1 294 1 370 2 57 2 371 1 299 2 375 2 41 2 82 1 301 1 85 1 228 2 304 1 227 1 15 1 87 1 327 1 90 2 377 4 120 1 
333 1 194 1 230 2 280 1 196 1 1 2 212 1 68 4 311 1 340 1 316 4 341 1 343 4 216 1 26 1 269 1 271 1 289 1 143 1 323 2 107 1 222 1 146 1 294 1 370 2 57 2 371 1 299 2 375 2 114 1 82 1 85 1 301 1 228 2 327 1 87 1 304 1 227 1 15 1 90 2 377 4 
333 1 194 1 230 2 280 1 196 1 1 2 212 1 68 4 311 1 340 1 316 4 341 1 343 4 216 1 26 1 269 1 271 1 289 1 143 1 323 2 107 1 222 1 146 1 294 1 370 2 57 2 371 1 299 2 375 2 114 1 82 1 85 1 301 1 228 2 327 1 87 1 304 1 227 1 15 1 90 2 377 4 
333 1 194 1 280 1 1 2 212 1 68 4 311 1 340 1 316 4 341 1 343 4 216 1 26 1 269 1 271 1 165 1 289 1 143 1 54 2 323 2 107 1 222 1 35 1 146 1 294 1 370 2 371 1 299 2 170 1 41 2 82 1 301 1 228 2 86 2 327 1 87 1 304 1 227 1 15 1 90 2 377 4 
333 1 194 1 230 2 280 1 196 1 1 2 212 1 68 4 309 1 311 1 340 1 316 4 341 1 343 5 216 1 26 1 269 1 271 1 289 1 143 1 323 2 107 1 222 1 146 1 294 1 370 2 57 2 371 1 299 3 375 2 82 1 114 1 85 1 301 1 15 1 327 1 87 1 304 1 227 1 228 3 90 3 377 5 
333 1 194 1 230 2 280 1 196 1 1 2 212 1 68 4 309 1 311 1 340 1 316 4 341 1 343 5 216 1 26 1 269 1 271 1 289 1 143 1 323 2 107 1 222 1 146 1 294 1 370 2 57 2 371 1 299 3 375 2 82 1 114 1 85 1 301 1 15 1 327 1 87 1 304 1 227 1 228 3 90 3 377 5 
333 1 194 1 280 1 1 2 212 1 68 4 311 1 316 4 340 1 341 1 343 4 216 1 26 1 269 1 271 1 289 1 143 1 54 2 323 2 107 1 146 1 294 1 370 2 371 1 299 2 170 1 41 2 82 1 301 1 228 2 86 2 304 1 227 1 15 1 87 1 327 1 90 2 377 4 120 1 
258 2 153 1 18 7 123 1 45 1 67 8 22 2 263 2 23 1 315 1 24 1 241 1 138 1 25 8 317 2 4 1 242 2 27 2 162 1 184 2 7 4 287 1 141 2 347 2 246 2 321 2 32 1 324 3 294 1 109 1 9 1 169 1 251 1 113 1 353 2 148 1 327 1 87 1 208 1 
153 1 360 1 128 1 307 1 22 1 136 1 342 1 200 1 242 3 27 1 140 1 163 1 184 1 7 2 141 1 246 1 294 1 187 1 169 1 351 1 224 1 372 1 251 2 113 1 353 1 87 1 327 1 229 1 173 1 
163 1 184 1 7 2 153 3 141 1 246 1 128 1 307 1 22 1 262 1 132 1 147 1 297 1 251 3 372 2 252 2 24 1 136 2 353 1 253 1 200 1 161 1 242 6 116 1 27 1 173 1 
176 1 153 8 235 1 93 1 128 2 307 4 22 2 315 1 48 1 136 1 342 2 200 11 242 14 345 1 27 1 140 1 163 1 184 2 7 4 141 2 246 2 33 1 108 3 37 1 351 2 372 2 251 6 252 1 353 2 115 3 208 1 229 1 173 11 
258 1 153 1 18 1 334 1 307 1 210 1 67 1 20 1 312 1 22 1 263 1 315 1 241 1 25 1 242 2 27 1 140 1 28 1 184 1 7 2 141 1 347 1 167 1 246 1 321 1 324 1 294 1 169 1 251 1 252 1 113 1 12 1 353 1 327 2 87 2 208 1 117 1 330 1 
153 10 334 1 234 2 241 1 342 2 161 1 200 7 102 1 242 20 163 3 7 6 347 1 104 2 246 3 167 2 53 1 294 1 169 1 351 2 297 1 251 10 252 2 113 1 253 1 353 3 208 1 117 2 173 7 258 2 122 1 176 4 18 3 128 3 307 7 67 3 20 2 129 2 262 1 22 3 132 1 263 2 315 1 136 4 138 1 25 3 27 3 77 2 140 1 184 3 141 3 321 2 324 2 147 1 190 2 372 8 87 3 327 3 229 2 330 2 
184 1 7 2 176 1 141 1 153 2 246 1 127 1 128 1 307 1 22 1 372 1 24 1 353 1 342 1 200 1 242 2 27 1 173 1 
163 1 184 1 7 2 141 1 246 1 307 1 22 1 337 1 372 1 251 2 24 1 136 1 353 1 200 1 242 2 229 1 27 1 173 1 
153 2 176 1 128 1 307 2 22 1 24 1 136 1 342 1 200 2 242 4 27 1 163 1 184 1 7 2 141 1 246 1 351 1 372 2 251 2 353 1 229 1 173 2 
184 1 7 2 176 1 141 1 153 2 246 1 127 1 128 1 307 1 22 1 372 1 353 1 342 1 200 1 242 2 4 1 27 1 173 1 
163 1 184 1 7 2 141 1 246 1 307 1 22 1 337 1 372 1 251 2 136 1 353 1 200 1 242 2 4 1 229 1 27 1 173 1 
153 2 176 1 128 1 307 2 22 1 136 1 342 1 200 2 4 1 242 4 27 1 163 1 184 1 7 2 141 1 246 1 351 1 372 2 251 2 353 1 229 1 173 2 
153 2 176 1 128 1 307 2 22 1 136 1 342 1 200 2 242 4 27 1 163 1 184 1 7 2 141 1 246 1 351 1 372 2 251 2 353 1 229 1 173 2 
258 1 153 1 18 1 67 1 20 1 22 1 263 1 315 1 25 1 242 2 27 1 77 1 184 1 7 2 141 1 347 1 167 1 246 1 321 1 324 1 251 1 252 1 353 1 87 1 327 1 208 1 117 1 330 1 
258 1 153 1 18 1 179 1 67 1 22 1 263 1 315 1 25 1 242 2 218 1 27 1 183 1 184 1 7 2 141 1 347 1 167 1 246 1 321 1 324 1 251 1 252 1 353 1 87 1 327 1 208 1 330 1 
153 2 176 1 128 1 307 2 22 1 136 1 342 1 200 2 242 4 27 1 140 1 163 1 184 1 7 2 141 1 246 1 351 1 372 2 251 2 353 1 229 1 173 2 
258 1 176 1 153 2 18 1 128 1 307 2 67 1 20 1 22 1 263 1 23 1 136 1 342 1 200 2 25 1 242 4 27 1 77 1 163 1 184 1 7 2 141 1 167 1 246 1 321 1 324 1 351 1 251 2 372 2 190 1 353 1 87 1 327 1 229 1 117 1 330 1 173 2 
176 1 153 2 65 1 360 1 128 1 307 1 22 1 342 1 200 1 242 3 27 1 163 1 140 1 184 1 7 2 141 1 246 1 294 1 187 1 169 1 351 1 251 1 372 1 113 1 353 1 87 1 327 1 229 1 173 1 
358 1 257 1 153 9 176 3 193 1 335 1 235 1 93 1 128 3 180 1 22 2 158 2 238 1 159 1 136 3 342 3 242 19 163 3 184 2 7 4 166 2 246 2 108 1 351 3 251 10 372 6 353 2 355 1 115 2 229 3 
358 1 257 2 176 2 153 14 193 1 335 1 93 2 128 3 22 3 70 1 158 1 238 1 159 2 101 1 136 2 342 3 318 1 242 26 163 2 184 3 7 6 166 4 246 3 108 2 351 3 325 2 372 4 251 12 11 1 353 3 84 1 255 1 115 2 229 2 
358 1 257 1 153 20 176 4 193 1 281 1 335 1 235 1 93 3 128 5 262 1 70 1 22 3 132 1 158 1 238 1 159 2 101 1 136 4 342 4 161 1 318 1 242 41 163 5 184 3 7 6 166 4 246 3 108 3 147 1 351 4 297 1 325 1 251 21 372 8 253 1 11 1 353 3 355 1 84 1 255 1 115 4 229 4 
358 1 257 1 153 20 176 3 193 1 281 1 335 1 235 1 93 3 128 5 262 1 70 1 22 4 132 1 158 1 238 1 159 2 101 1 136 4 342 4 161 1 318 1 242 38 163 4 184 4 7 8 166 4 246 4 108 3 147 1 351 4 297 1 325 2 251 18 372 7 253 1 11 1 353 4 355 1 84 1 255 1 115 4 229 3 
358 1 257 1 153 27 176 7 193 1 335 1 235 2 93 2 128 8 262 1 70 1 22 2 132 1 158 1 238 1 159 1 101 1 136 7 342 7 161 1 318 1 242 52 163 8 184 2 7 4 166 4 246 2 108 4 37 2 147 1 351 7 297 1 325 1 251 25 372 14 253 1 11 1 353 2 84 1 255 1 115 4 229 7 
38 1 365 1 352 1 363 1 13 1 31 1 106 1 150 1 306 1 94 1 
71 1 295 1 
6 1 365 1 352 1 363 1 106 1 209 1 150 1 344 1 94 1 
174 1 365 1 271 1 31 1 106 1 94 1 68 1 168 2 250 1 38 1 352 1 298 1 363 1 316 1 13 1 60 1 59 1 150 1 
174 1 365 1 271 1 31 1 106 1 94 1 68 1 168 2 250 1 38 1 352 1 298 1 363 1 316 1 13 1 60 1 59 1 150 1 
174 1 365 1 271 1 31 1 106 1 94 1 68 1 168 2 250 1 38 1 352 1 298 1 363 1 316 1 13 1 60 1 59 1 150 1 
10 1 290 1 61 1 
10 1 290 1 61 1 
283 1 350 1 
283 1 350 1 61 1 
110 1 145 1 
308 1 94 1 68 1 284 1 71 1 73 1 363 1 316 1 285 1 365 1 288 1 106 1 145 1 168 1 294 2 250 1 295 1 110 1 169 2 298 1 352 1 252 1 113 2 226 1 327 2 87 2 150 1 
10 1 290 1 
283 1 350 1 61 1 
258 1 153 1 18 2 282 1 67 2 22 1 263 1 315 1 338 1 25 2 317 2 217 1 242 2 27 1 162 1 140 1 184 1 7 2 141 1 246 1 321 1 324 1 294 2 109 1 251 1 353 1 207 1 376 1 327 2 87 2 208 1 
258 1 347 1 18 1 30 1 154 1 321 1 32 1 67 1 19 1 324 1 263 1 100 1 148 1 25 1 
258 1 43 1 18 1 154 1 321 1 185 1 67 1 19 1 211 2 264 1 296 1 189 1 265 1 277 1 49 1 138 1 25 1 356 1 
258 1 43 1 18 2 154 1 321 1 185 1 67 2 19 1 211 2 264 1 296 1 23 1 189 1 265 1 277 1 49 1 138 1 25 2 356 1 
43 1 258 1 18 1 154 1 321 1 185 1 67 1 211 2 264 1 189 1 265 1 277 1 49 1 138 1 25 1 356 1 201 1 
142 1 
64 1 194 1 271 1 212 1 371 1 82 1 216 1 26 1 15 1 305 1 
151 1 163 2 103 2 271 5 128 2 129 1 212 5 130 5 351 2 371 5 375 5 41 10 342 2 137 5 229 2 
271 1 316 1 216 1 323 1 68 1 377 1 
258 1 194 2 18 4 67 4 95 1 212 2 68 3 263 1 215 2 316 3 199 1 26 2 25 4 286 1 243 1 78 1 164 2 347 2 202 2 321 1 32 1 323 2 324 1 274 1 371 2 82 2 148 1 15 1 377 4 
371 1 64 1 271 1 216 1 116 1 305 1 212 1 
194 1 230 1 212 1 68 1 316 1 216 1 26 1 271 2 323 1 57 1 371 1 375 1 82 1 41 1 85 1 15 1 377 1 
258 2 18 1 194 1 67 1 212 1 263 1 72 2 215 1 266 1 25 1 26 1 346 1 347 1 245 1 321 1 324 4 56 1 36 1 374 1 82 1 15 1 357 1 119 1 330 1 
271 1 194 1 93 1 108 1 212 1 130 1 371 1 375 1 82 1 41 2 137 1 255 1 26 1 115 1 15 1 
151 1 194 1 360 1 128 2 156 1 196 1 68 1 212 2 311 1 262 1 316 1 26 1 161 1 163 1 103 2 248 1 294 1 275 1 276 1 40 1 147 1 169 1 371 2 113 1 82 1 327 1 87 1 15 1 
258 1 18 1 360 2 67 1 20 1 22 1 263 1 25 1 242 1 27 1 77 1 184 1 7 2 141 1 347 1 246 1 167 1 321 1 324 1 294 2 276 1 169 2 251 1 252 1 113 2 353 1 303 1 208 1 327 3 87 3 117 1 330 1 
164 1 194 1 271 4 212 1 130 2 132 1 371 2 215 1 375 2 41 4 82 1 137 2 216 2 26 1 15 1 
352 1 13 1 150 1 145 1 192 1 
249 1 352 1 150 1 
249 1 352 1 150 1 
249 1 352 1 150 1 
112 1 352 1 150 1 
112 1 352 1 150 1 
112 1 352 1 150 1 
352 1 150 1 
365 1 94 1 
358 1 163 2 184 1 7 2 176 2 153 5 246 1 128 2 248 1 22 1 262 2 147 2 372 5 251 5 353 1 136 3 161 1 242 10 
358 1 184 1 7 2 153 2 176 1 246 1 128 1 22 1 372 1 353 1 342 1 242 2 
163 1 358 1 184 1 7 2 153 2 176 1 246 1 128 1 22 1 351 1 251 2 372 2 136 1 353 1 342 1 229 1 242 4 
358 1 184 3 7 6 176 1 153 1 246 3 22 3 262 1 147 1 325 1 251 2 372 2 353 3 136 1 302 1 355 1 242 3 
358 1 153 16 176 5 235 1 93 1 128 5 262 3 22 5 132 1 240 1 136 7 342 3 161 2 242 34 50 1 163 5 184 5 219 1 7 10 246 5 108 3 147 3 351 3 297 1 325 2 251 18 372 12 253 1 353 5 302 1 355 1 115 4 229 3 88 1 
163 1 184 2 7 4 153 4 176 1 246 2 128 1 22 2 262 1 132 1 147 1 297 1 251 4 372 3 325 1 136 2 353 2 253 1 161 1 242 8 
163 1 153 3 128 1 262 1 132 1 147 1 297 1 251 3 372 2 253 1 136 2 161 1 116 1 242 6 
163 1 184 1 7 2 153 2 176 1 246 1 128 1 22 1 351 1 251 2 372 2 136 1 353 1 342 1 229 1 242 4 50 1 
163 1 153 3 176 1 235 1 93 1 128 1 108 1 351 1 251 4 372 2 136 1 342 1 115 2 229 1 242 7 
176 4 153 11 235 1 128 3 262 2 22 2 132 1 136 5 342 2 161 1 242 23 163 3 184 2 7 4 246 2 33 1 108 2 37 1 147 2 351 2 297 1 372 9 251 12 325 2 253 1 353 2 302 1 115 2 229 2 
251 1 115 1 242 1 
153 1 242 1 108 1 
163 1 184 1 7 2 153 3 176 1 246 1 128 1 129 1 22 1 351 1 251 3 372 3 353 1 136 2 342 1 242 6 229 1 50 1 
358 1 176 1 153 6 93 1 128 2 22 1 70 1 136 1 101 1 342 2 242 12 163 2 184 1 7 2 246 1 108 1 351 2 251 6 372 2 353 1 11 1 84 1 255 1 115 1 229 2 
163 1 153 3 176 1 128 1 262 1 147 1 251 3 372 2 136 1 161 1 242 6 
184 1 7 2 153 1 176 1 246 1 262 1 22 1 147 1 297 1 372 2 251 2 325 1 136 1 253 1 353 1 302 1 242 3 
358 1 153 4 128 1 93 1 22 1 262 1 132 1 136 2 161 1 242 8 163 1 184 1 7 2 246 1 108 1 147 1 297 1 251 4 372 2 353 1 253 1 255 1 115 1 
358 1 153 6 176 1 235 1 93 1 128 2 262 1 22 2 132 1 136 2 342 1 161 1 242 11 50 1 163 1 184 2 7 4 246 2 108 1 147 1 351 1 297 1 251 5 372 3 253 1 353 2 255 1 115 2 
358 1 176 1 153 9 93 1 128 3 262 1 22 3 70 1 132 1 101 1 136 3 342 2 161 1 242 19 50 1 163 3 184 3 7 6 246 3 108 1 147 1 351 2 297 1 251 10 372 4 325 1 253 1 353 3 11 1 84 1 255 1 115 1 229 2 
358 1 176 2 153 10 93 1 128 3 262 1 22 3 70 1 132 1 136 3 101 1 342 2 161 1 242 17 50 1 163 2 184 3 7 6 246 3 108 1 147 1 351 2 297 1 325 1 251 7 372 5 253 1 353 3 11 1 84 1 255 1 115 1 229 1 
358 1 153 4 128 1 93 1 22 1 262 1 132 1 136 2 161 1 242 8 163 1 184 1 7 2 246 1 108 1 147 1 297 1 251 4 372 2 353 1 253 1 255 1 115 1 
358 1 176 1 153 6 93 1 128 2 22 1 70 1 136 1 101 1 342 2 242 12 163 2 184 1 7 2 246 1 108 1 351 2 251 6 372 2 353 1 11 1 84 1 255 1 115 1 229 2 
358 1 176 2 153 10 93 1 128 3 262 1 22 4 70 1 132 1 101 1 136 3 342 2 161 1 242 18 50 1 163 2 184 4 7 8 246 4 108 1 147 1 351 2 297 1 251 8 372 5 325 2 253 1 11 1 353 4 84 1 255 1 115 1 229 1 
358 1 176 3 153 9 93 1 128 3 22 4 70 1 101 1 136 3 342 3 242 16 163 2 184 4 7 8 246 4 108 1 351 3 251 7 372 6 325 2 11 1 353 4 355 1 84 1 255 1 115 1 229 2 
163 1 176 3 153 3 128 1 262 3 147 3 297 1 251 4 372 6 253 2 136 3 161 1 242 7 
358 1 176 1 153 10 93 1 128 3 262 1 22 4 70 1 132 1 101 1 136 3 342 2 161 1 242 18 163 2 184 4 7 8 246 4 108 1 147 1 351 2 297 1 251 8 372 4 325 2 253 1 11 1 353 4 355 1 84 1 255 1 115 1 229 1 
294 1 336 1 314 1 252 1 327 1 87 1 107 1 
155 1 107 1 336 1 294 1 133 1 314 1 111 1 252 1 191 1 87 1 327 1 42 1 
258 1 347 1 18 4 321 1 361 1 32 1 67 4 324 1 263 1 239 1 23 1 148 1 25 4 
258 2 122 1 18 2 202 1 321 1 67 2 349 1 324 1 263 1 205 1 25 2 89 1 330 1 364 1 
258 1 43 1 264 1 277 1 18 1 347 1 321 1 25 1 67 1 211 1 
258 1 18 2 321 1 67 2 324 1 263 1 109 1 23 1 25 2 138 1 376 1 
258 2 347 1 18 4 123 1 202 1 321 2 361 1 32 1 45 1 67 5 324 3 263 2 109 1 23 1 148 1 25 5 
258 2 347 1 18 4 348 1 202 1 321 2 361 1 32 1 45 1 67 5 324 3 263 2 109 1 23 1 148 1 25 5 
258 1 263 1 18 1 347 1 148 1 321 1 32 1 25 1 116 1 67 1 324 1 
258 1 347 1 18 1 167 1 321 1 67 1 324 1 20 1 294 1 263 1 169 1 252 1 113 1 241 1 25 1 87 2 327 2 330 1 
258 1 18 1 67 1 20 1 311 1 263 2 241 1 25 1 167 1 321 1 202 1 143 1 322 1 324 3 146 1 294 2 169 2 252 1 113 1 327 2 87 2 330 2 279 1 
258 1 18 2 67 2 311 1 263 2 239 1 241 1 25 2 218 1 167 1 321 1 202 1 143 1 322 1 324 3 146 1 294 2 169 2 252 1 113 1 327 2 87 2 330 2 279 1 
258 1 18 3 67 3 68 2 98 1 263 1 72 1 239 1 362 1 316 2 216 1 25 3 271 1 347 1 321 1 202 1 322 1 324 4 374 1 301 1 330 1 377 1 279 1 
258 1 18 1 245 1 202 1 321 1 322 1 67 1 68 1 324 4 263 1 72 1 374 1 316 1 25 1 330 1 279 1 
258 1 287 1 18 1 321 1 25 1 67 1 
258 3 287 1 347 2 18 6 123 1 177 1 321 2 45 1 67 7 324 3 36 1 263 2 109 1 9 1 23 1 205 1 317 1 138 1 25 7 330 1 364 1 
258 1 153 3 18 1 128 1 307 1 67 1 20 1 262 1 22 2 132 1 263 1 23 1 136 2 241 1 200 1 161 1 25 1 242 6 27 2 77 1 163 1 140 1 184 2 7 4 141 2 104 1 167 1 246 2 321 1 324 1 294 1 147 1 169 1 297 1 251 3 372 2 190 1 252 2 113 1 253 1 353 2 207 1 327 2 87 2 117 1 330 1 173 1 
346 1 194 1 347 1 18 1 245 1 67 1 324 2 56 1 68 1 72 1 374 1 285 1 316 1 82 1 199 1 266 1 25 1 26 1 15 1 
258 2 287 1 18 2 321 1 67 2 324 2 36 1 263 1 23 1 374 1 25 2 119 1 330 1 
258 1 347 1 18 1 167 1 321 1 67 1 324 1 294 1 263 1 169 1 252 1 113 1 241 1 25 1 87 2 327 2 330 1 218 1 
258 2 18 1 177 1 202 1 321 1 67 1 324 1 36 1 263 1 205 1 25 1 330 1 364 1 
79 1 66 1 92 1 282 1 294 1 338 1 217 1 87 1 327 1 
160 1 354 1 92 1 
79 1 66 1 252 1 195 1 92 1 
79 2 271 1 66 2 195 2 143 1 92 1 68 2 293 1 311 1 146 1 252 1 285 1 316 2 160 1 340 1 354 1 301 1 216 1 329 1 
203 1 46 1 175 1 181 1 267 1 172 1 76 1 261 1 
152 2 175 4 80 1 272 1 310 1 261 1 203 3 369 1 373 1 181 1 81 1 267 2 172 4 76 2 
152 1 175 2 55 1 292 1 236 1 261 1 203 1 46 1 181 1 267 1 172 2 76 1 
175 3 80 2 310 2 261 1 203 1 46 1 369 1 181 1 198 1 267 1 172 3 76 1 
203 2 214 1 171 1 313 2 
46 1 175 1 181 1 259 1 172 1 261 1 
203 1 46 1 152 1 175 2 181 1 339 1 267 1 172 2 76 1 261 1 
44 1 
203 1 46 1 175 1 181 1 267 1 172 1 76 1 261 1 
203 1 267 1 116 1 76 1 
203 1 175 1 181 1 267 1 172 1 76 1 261 1 
237 1 17 1 172 1 
175 3 80 1 310 2 261 1 203 1 46 1 369 1 47 1 181 1 267 1 172 3 76 1 
203 1 152 1 175 2 366 1 181 1 267 1 172 2 76 1 261 1 
203 1 46 1 264 1 175 1 181 1 0 1 272 1 356 1 172 1 211 1 261 1 
203 1 46 1 175 1 181 1 267 1 172 1 261 1 
46 1 175 1 181 1 267 2 172 1 76 1 261 1 
359 1 175 2 232 1 261 2 96 1 203 1 46 1 181 2 267 1 172 2 
203 2 46 1 152 2 175 3 181 1 81 1 339 1 272 1 267 1 172 3 76 1 223 1 261 1 
152 1 175 2 34 1 185 1 211 2 261 1 203 1 46 1 264 1 277 1 181 1 267 1 172 2 356 1 76 1 
203 2 46 1 152 2 332 1 175 4 366 1 181 2 81 1 272 1 267 1 172 4 76 1 261 2 
203 1 46 1 152 1 175 3 181 1 339 1 267 1 172 3 76 1 310 1 261 1 
203 1 373 1 81 1 272 1 
203 1 267 1 

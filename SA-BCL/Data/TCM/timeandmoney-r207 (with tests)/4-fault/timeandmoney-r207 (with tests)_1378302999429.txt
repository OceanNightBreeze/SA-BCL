#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (178,204) 252 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (285,304) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (148,163,349) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (285,304) (285,304) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (178,204) 252 196 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (76,185,230) (76,185,230) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (285,304) (285,304) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 206 297 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (178,204) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (178,204) (178,204) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (285,304) (285,304) 191 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (178,204) 252 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 1 31 1 80 1 143 9 33 2 216 1 217 1 330 4 240 6 164 9 362 2 150 1 332 2 333 1 88 5 155 3 130 2 316 1 109 1 45 1 68 1 371 1 320 1 25 2 278 2 98 1 117 2 78 1 
211 1 31 1 80 1 143 9 33 2 216 1 217 1 330 4 240 6 164 9 362 2 150 1 332 2 333 1 88 5 155 3 130 2 316 1 109 1 45 1 68 1 371 1 320 1 25 2 278 2 98 1 117 2 78 1 
211 1 31 1 80 1 143 10 33 2 216 1 217 1 330 5 240 7 164 10 362 2 150 1 332 2 333 1 88 6 155 4 130 2 316 1 109 1 45 1 68 1 371 1 320 1 25 2 278 2 98 1 117 2 78 1 
211 1 31 1 80 1 143 7 33 2 216 1 330 3 240 4 164 7 362 1 150 1 332 2 333 1 88 4 155 2 130 2 316 1 109 1 45 1 68 1 371 1 320 1 25 2 278 2 98 1 117 2 78 1 
211 1 109 1 143 4 68 1 371 1 33 1 217 1 330 2 240 3 164 4 362 2 25 1 278 1 332 1 88 3 155 1 130 1 316 1 
237 1 211 1 353 1 31 1 143 2 68 1 371 1 164 2 174 1 25 1 278 1 332 1 88 1 98 1 117 1 130 1 140 1 
211 1 143 3 68 1 371 1 330 1 240 1 164 3 25 2 278 2 333 1 88 2 155 1 117 1 
211 1 143 9 33 1 216 1 330 4 217 1 240 7 164 9 362 2 332 1 333 1 88 5 155 3 130 1 316 1 109 1 68 1 371 1 320 1 25 2 278 2 117 1 235 1 179 1 
211 1 143 9 33 1 216 1 330 4 217 1 240 7 164 9 362 2 332 1 333 1 88 5 155 3 130 1 316 1 109 1 68 1 371 1 320 1 25 2 278 2 117 1 235 1 179 1 
86 1 208 1 261 1 
70 2 86 1 186 1 
354 2 197 1 
326 1 354 1 122 1 214 2 197 1 356 1 357 2 252 1 263 2 178 1 366 1 
354 1 197 1 285 1 
79 1 339 1 20 1 163 1 148 1 261 1 321 1 349 1 86 1 302 1 277 1 264 1 207 1 106 1 
354 1 148 1 
253 1 163 1 106 1 255 1 300 1 
86 1 203 1 253 1 163 2 106 2 261 1 255 1 268 1 
163 1 106 1 255 1 
253 1 354 1 197 1 285 1 304 1 163 1 106 1 
86 1 
86 1 203 1 253 1 163 2 106 2 261 1 175 1 255 1 
43 1 181 1 328 1 295 2 83 1 299 1 163 5 361 1 261 1 51 2 86 1 203 1 253 2 254 1 315 1 106 5 90 2 222 1 255 2 
192 1 172 1 284 1 214 1 131 1 46 1 95 1 20 2 356 1 357 1 156 1 158 1 321 1 287 1 263 1 264 2 220 1 364 1 55 1 190 1 
208 1 
209 1 354 1 339 1 20 1 321 1 135 1 264 1 56 1 40 1 
209 1 354 1 339 1 46 2 20 2 321 2 287 2 264 2 40 1 190 1 
287 1 339 1 264 1 46 1 334 1 20 1 321 1 
354 1 135 1 56 1 
79 1 214 1 354 2 339 1 131 1 46 1 196 1 238 1 197 1 20 1 356 1 357 1 163 1 148 1 321 1 287 1 252 1 277 1 263 1 135 1 264 1 207 1 178 1 106 1 190 1 
209 1 287 1 302 1 264 2 46 1 20 2 154 1 321 2 190 1 
44 1 79 1 354 1 339 1 131 1 46 2 238 1 20 2 163 1 148 1 321 2 287 2 86 1 277 1 135 1 264 2 207 1 106 1 190 2 
354 1 135 1 
263 1 214 1 356 1 357 1 
263 1 214 1 356 1 357 1 
166 1 193 1 115 1 229 1 173 2 177 1 138 1 66 1 
287 1 277 1 339 1 264 1 46 1 20 1 321 1 317 1 
209 1 354 1 339 1 46 1 20 1 321 1 287 1 135 1 264 1 40 1 190 1 
287 2 339 1 264 2 46 2 334 1 20 2 321 2 317 1 
230 1 22 1 
230 1 22 1 
185 1 63 1 
185 1 63 1 
185 1 63 1 
355 1 230 1 22 1 
355 1 230 1 22 1 
185 1 63 1 230 2 22 2 
230 1 76 1 22 1 
355 1 230 1 22 1 
230 1 267 1 22 1 
230 1 267 1 22 1 
230 1 267 1 22 1 
15 2 236 2 142 1 96 2 48 1 374 1 163 2 147 3 272 1 22 2 227 1 26 2 86 1 289 1 7 1 230 2 324 2 106 2 367 1 
209 1 236 1 329 1 147 1 163 1 102 1 287 2 289 1 264 2 106 1 15 1 46 2 96 1 20 2 22 1 321 2 251 1 52 1 29 1 230 1 323 1 324 1 280 1 76 1 
332 1 33 1 130 1 
353 1 332 1 130 1 
353 1 332 3 33 2 123 1 49 1 274 1 
353 1 332 2 33 1 123 1 11 1 49 1 
353 1 332 2 33 1 123 1 49 2 
181 2 328 1 32 1 215 1 83 3 163 5 261 1 102 1 186 1 86 2 6 1 38 1 62 1 64 1 265 2 90 1 106 5 244 2 42 1 19 1 295 1 247 1 23 1 70 3 51 1 203 1 253 4 29 1 280 1 53 2 118 1 255 1 
327 1 181 6 328 1 32 3 81 1 215 3 83 8 163 9 312 1 102 4 261 1 36 1 186 3 86 5 6 2 38 3 221 1 62 3 265 6 315 1 106 9 90 2 108 5 42 2 19 1 295 2 247 3 250 1 300 5 70 9 51 2 253 7 203 1 53 6 255 6 
181 2 32 1 215 1 83 3 163 3 261 1 102 1 86 3 186 2 6 1 38 1 64 1 62 1 265 2 315 1 90 1 106 3 244 1 42 1 295 1 247 1 23 1 70 4 51 1 253 2 53 2 
181 4 32 2 81 1 215 2 83 5 163 4 261 1 102 2 86 4 186 3 6 1 38 2 221 1 64 1 62 2 265 4 315 1 90 1 106 4 244 2 42 1 295 1 247 2 23 1 250 1 70 7 51 1 253 3 53 4 
192 1 270 1 208 1 
192 1 195 1 
198 1 
192 1 172 1 
192 3 172 1 27 1 270 2 158 1 133 1 
192 1 172 1 158 1 
288 1 192 1 
210 1 58 1 282 3 245 1 199 3 373 2 84 1 346 7 322 1 149 1 72 1 38 1 62 1 54 4 231 1 189 2 13 1 
210 1 58 1 282 3 245 1 199 3 373 2 84 1 346 7 322 1 149 1 72 1 38 1 62 1 54 4 231 1 189 2 13 1 
210 1 58 1 282 3 119 1 245 1 199 3 373 2 84 1 346 7 322 1 149 1 72 1 38 1 62 1 231 1 54 4 189 2 13 1 
210 2 58 2 282 15 32 3 215 3 310 1 360 1 84 2 103 1 166 1 149 1 38 4 241 1 62 4 365 3 189 3 13 2 269 4 193 1 245 1 194 1 173 2 199 10 373 5 247 3 346 31 322 5 72 1 160 1 229 1 231 1 54 16 138 1 77 1 
210 1 58 1 282 4 193 2 173 4 199 4 373 3 360 1 84 1 346 9 322 1 166 2 149 1 72 1 229 2 136 1 38 1 62 1 231 1 54 5 232 1 138 2 189 2 13 1 
211 1 353 1 214 1 143 2 99 1 33 1 357 1 240 1 164 2 290 1 263 1 167 1 332 2 220 1 88 1 364 1 130 1 368 1 171 1 16 1 68 1 371 1 341 1 298 1 274 1 25 1 113 1 278 1 97 1 117 1 
211 1 353 1 214 1 143 3 33 1 34 1 162 1 357 1 240 2 164 3 263 1 167 1 332 2 220 1 88 1 364 1 130 1 368 1 171 1 16 1 94 1 371 1 341 1 298 1 274 1 25 1 113 1 278 1 97 1 117 1 
211 1 353 1 214 1 143 2 33 1 34 1 162 1 357 1 240 2 164 2 263 1 167 1 332 2 220 1 88 1 364 1 130 1 368 1 171 1 371 1 341 1 298 1 274 1 113 1 117 1 
192 1 172 1 30 1 171 2 120 1 182 1 94 1 143 1 214 1 260 1 307 1 356 1 357 1 296 1 164 1 25 1 113 2 278 1 263 1 167 2 220 1 364 1 117 2 
353 1 214 1 143 1 33 1 34 1 357 1 164 1 290 1 263 1 167 1 332 2 220 1 364 1 130 1 368 1 171 1 16 1 68 1 341 1 298 1 274 1 25 1 113 1 278 1 97 1 117 1 
139 1 
0 2 181 2 328 1 1 1 61 1 186 2 8 1 106 4 192 1 110 1 111 2 295 1 21 1 157 2 348 2 70 2 203 3 114 1 159 1 255 6 306 2 259 1 214 2 260 1 307 1 124 2 83 2 356 2 357 2 163 4 127 1 86 1 263 2 220 1 364 1 169 2 90 1 172 1 42 1 319 2 50 1 51 1 279 1 234 1 
50 1 203 1 8 1 111 1 279 1 21 1 163 2 234 1 106 2 175 1 255 2 
348 1 50 1 8 1 279 1 169 1 21 1 163 1 234 1 106 1 
306 1 111 1 163 2 21 1 175 1 50 1 348 1 203 1 8 1 279 1 169 1 106 2 234 1 255 2 
0 2 306 4 181 1 328 1 354 1 1 1 124 2 83 1 285 1 218 1 163 4 101 1 261 2 86 2 186 2 8 1 169 3 106 4 90 1 111 4 197 1 319 2 295 1 21 1 157 2 175 1 50 1 348 3 301 1 51 1 203 3 159 1 279 1 205 1 304 1 137 1 234 1 255 7 
0 2 306 2 328 1 181 1 1 1 124 2 83 1 163 3 261 1 86 2 186 2 8 1 169 2 90 1 106 3 110 1 111 2 295 1 319 2 21 1 157 2 348 2 50 1 70 2 51 1 203 2 159 1 279 1 234 1 255 4 
0 2 306 2 328 1 181 1 1 1 124 2 83 1 163 3 218 1 101 1 261 1 86 1 186 2 8 1 169 2 106 3 90 1 111 2 295 1 319 2 21 1 157 2 348 2 50 1 51 1 301 1 203 2 159 1 279 1 234 1 255 4 
0 2 306 2 328 1 181 1 1 1 124 2 83 1 163 3 218 1 101 1 261 1 86 1 186 2 8 1 169 2 106 3 90 1 111 2 295 1 319 2 21 1 157 2 348 2 50 1 51 1 301 1 203 2 159 1 279 1 234 1 255 4 
0 2 306 2 328 1 181 1 83 1 3 1 309 2 163 3 218 1 60 2 261 1 37 1 86 1 8 1 169 2 106 3 90 1 67 1 111 2 295 1 319 2 21 1 348 2 70 2 50 1 51 1 203 2 159 1 279 1 234 1 255 4 
0 2 306 3 328 1 181 1 1 1 124 2 83 1 218 1 163 3 101 1 261 1 86 1 186 2 8 1 169 3 106 3 90 1 111 3 319 2 295 1 21 1 157 2 50 1 348 3 301 1 51 1 203 2 159 1 279 1 137 1 234 1 255 5 
0 2 306 3 328 1 181 1 1 1 124 2 83 1 218 1 163 3 101 1 261 1 86 1 186 2 8 1 169 3 106 3 90 1 111 3 319 2 295 1 21 1 157 2 50 1 348 3 301 1 51 1 203 2 159 1 279 1 137 1 234 1 255 5 
0 2 306 2 328 1 181 1 83 1 163 3 309 2 60 2 261 1 37 1 86 1 8 1 169 2 90 1 106 3 110 1 111 2 295 1 319 2 21 1 348 2 50 1 70 2 51 1 203 2 159 1 279 1 234 1 255 4 
210 1 193 1 173 2 199 1 373 1 346 2 84 1 166 1 149 1 115 1 72 1 229 1 62 1 54 2 177 1 231 1 208 1 138 1 189 1 66 1 
269 1 282 1 193 1 173 2 246 1 297 1 346 2 166 1 115 1 229 1 206 1 54 1 177 1 365 1 138 1 
209 1 282 1 284 1 214 1 35 1 356 1 357 1 166 1 287 1 151 1 263 1 264 2 220 1 364 1 153 1 190 1 192 1 172 1 193 1 131 1 173 2 95 1 46 1 246 1 20 2 200 1 158 1 321 1 345 1 346 2 132 1 115 1 229 1 177 1 54 1 55 1 75 1 138 1 
180 1 282 10 284 2 287 1 149 1 151 1 62 3 189 1 190 1 192 2 193 3 199 8 20 3 246 1 156 7 247 2 158 2 345 1 249 7 346 20 72 1 115 3 204 2 256 2 209 2 210 1 121 1 214 3 32 2 34 1 35 7 215 2 356 1 357 3 165 2 84 1 166 3 263 3 38 3 264 3 220 2 364 2 172 2 173 6 131 1 46 1 95 2 373 4 321 1 322 4 276 2 229 3 231 1 177 3 54 10 55 2 178 2 138 3 376 1 
193 1 214 1 173 2 356 1 357 1 273 1 346 1 166 1 151 1 115 1 229 1 263 1 54 1 177 1 138 1 14 1 
282 1 354 1 32 1 215 1 166 1 38 1 62 1 193 1 337 1 173 2 246 1 247 1 346 2 115 1 135 1 229 1 177 1 54 1 138 1 
193 1 173 2 308 1 247 1 346 1 166 1 115 1 229 1 62 1 177 1 54 1 138 1 66 1 
282 1 193 1 173 2 144 1 215 1 346 1 166 1 115 1 229 1 38 1 177 1 138 1 66 1 
282 1 193 1 173 2 32 1 215 1 247 1 346 2 166 1 115 1 229 1 38 1 62 1 177 1 54 1 138 1 66 1 
193 1 173 2 308 1 247 1 273 1 346 1 166 1 115 1 229 1 62 1 177 1 54 1 138 1 
282 1 193 1 173 2 144 1 215 1 273 1 346 1 166 1 115 1 229 1 38 1 177 1 138 1 
282 1 193 1 173 2 32 1 215 1 247 1 273 1 346 2 166 1 115 1 229 1 38 1 62 1 177 1 54 1 138 1 
282 1 193 1 173 2 32 1 215 1 247 1 346 2 166 1 115 1 229 1 38 1 62 1 177 1 54 1 138 1 
263 1 214 1 356 1 178 1 357 1 
263 1 214 1 74 1 356 1 357 1 
282 1 193 1 173 2 32 1 215 1 246 1 247 1 346 2 166 1 115 1 229 1 38 1 62 1 177 1 54 1 138 1 
204 1 263 1 214 1 99 1 178 1 357 1 
257 1 282 1 193 1 354 1 173 2 32 1 215 1 246 1 247 1 346 2 166 1 115 1 229 1 135 1 38 1 62 1 54 1 177 1 138 1 
161 1 282 10 32 3 215 3 100 1 310 1 166 2 363 1 9 1 38 3 62 3 242 1 365 1 269 2 293 1 193 2 173 4 199 6 373 3 247 3 248 2 346 19 322 3 160 1 229 2 232 1 54 9 138 2 375 2 57 1 
161 1 282 12 32 3 215 2 359 1 100 1 360 2 166 3 5 1 363 2 9 1 38 2 62 3 365 2 41 1 269 2 193 3 338 1 173 6 69 1 199 4 373 2 247 3 248 1 346 26 322 2 160 2 229 3 350 1 232 1 54 14 138 3 375 4 57 2 
210 1 161 1 282 21 32 4 215 4 359 1 100 1 360 1 310 1 84 1 166 3 149 1 5 1 363 1 9 1 38 5 62 5 168 1 242 1 365 3 189 1 41 1 269 4 193 3 338 1 173 6 69 1 199 8 373 4 247 4 248 1 346 41 322 4 72 1 160 3 229 3 350 1 231 1 232 1 54 20 138 3 375 4 57 2 
210 1 161 1 282 18 32 4 215 3 359 1 100 1 360 2 310 1 84 1 166 4 149 1 5 1 363 1 9 1 38 4 62 5 168 1 242 1 365 3 189 1 41 1 269 4 193 4 338 1 173 8 69 1 199 7 373 4 247 4 248 1 346 38 322 3 72 1 160 3 229 4 350 1 231 1 232 1 54 20 138 4 375 4 57 2 
210 1 161 1 282 25 32 7 215 7 359 1 100 1 360 1 310 2 84 1 166 2 149 1 5 1 363 1 9 1 38 8 62 8 365 4 335 2 189 1 41 1 269 4 193 2 338 1 173 4 69 1 199 14 373 7 247 7 248 1 346 52 322 7 72 1 160 2 229 2 350 1 231 1 232 1 54 27 138 2 375 4 57 1 
236 1 15 1 142 1 225 1 96 1 230 1 324 1 48 1 367 1 22 1 
323 1 76 1 
292 1 236 1 15 1 212 1 87 1 96 1 230 1 324 1 22 1 
15 1 236 1 142 1 96 1 48 1 163 1 147 2 272 1 22 1 227 1 26 1 86 1 289 1 7 1 230 1 324 1 106 1 367 1 
15 1 236 1 142 1 96 1 48 1 163 1 147 2 272 1 22 1 227 1 26 1 86 1 289 1 7 1 230 1 324 1 106 1 367 1 
15 1 236 1 142 1 96 1 48 1 163 1 147 2 272 1 22 1 227 1 26 1 86 1 289 1 7 1 230 1 324 1 106 1 367 1 
176 1 355 1 351 1 
176 1 355 1 351 1 
267 1 202 1 
351 1 267 1 202 1 
52 1 251 1 
209 1 236 1 329 1 163 1 147 1 102 1 287 2 7 1 264 2 106 1 336 1 15 1 96 1 46 2 20 2 22 1 321 2 251 1 26 1 253 1 52 1 29 1 230 1 323 1 324 1 280 1 76 1 
176 1 355 1 
351 1 267 1 202 1 
282 1 214 2 125 1 357 2 166 1 151 1 263 2 104 1 187 1 264 2 220 1 364 1 128 1 366 2 14 1 192 1 172 1 193 1 340 1 173 2 318 1 246 1 20 2 321 2 345 1 346 2 115 1 229 1 177 1 54 1 138 1 
353 1 16 1 214 2 99 1 33 1 341 1 34 1 357 2 298 1 274 1 226 1 263 2 331 1 332 2 167 1 220 1 39 1 364 1 130 1 
353 1 16 1 214 1 33 1 341 1 34 1 357 1 298 1 274 1 226 1 263 1 332 2 167 1 220 1 364 1 130 1 107 1 
192 1 172 1 214 1 182 1 260 1 307 1 356 1 357 1 263 1 167 1 220 1 39 1 364 1 352 1 
353 1 16 1 214 1 33 1 341 1 34 1 357 1 298 1 274 1 226 1 263 1 331 1 332 2 167 1 220 1 39 1 364 1 130 1 
291 1 
86 1 181 1 83 1 208 1 299 1 361 1 261 1 
181 1 328 1 1 1 124 1 83 1 163 1 261 1 186 1 86 2 90 1 106 1 295 1 157 1 70 1 51 1 203 1 255 1 
283 2 328 4 181 8 99 1 288 2 186 6 105 2 62 2 106 5 192 10 195 3 295 4 342 2 299 1 247 2 201 1 158 3 70 12 203 3 303 1 28 1 255 5 256 2 259 1 213 2 79 2 214 3 32 2 215 2 83 9 356 1 358 1 357 3 163 5 361 1 261 2 85 2 262 1 86 8 263 3 38 2 220 4 364 3 265 6 266 2 90 4 129 2 172 3 42 2 369 2 270 2 133 1 51 4 53 6 
259 1 328 2 181 5 32 2 2 1 215 2 83 8 163 1 359 1 261 2 5 1 186 3 86 5 38 2 62 2 265 5 365 1 106 1 266 2 90 2 41 1 269 1 42 1 369 1 338 1 295 2 247 2 344 1 70 6 51 2 203 1 160 1 350 1 53 5 255 1 
191 1 210 1 181 1 328 1 354 1 197 1 295 1 83 2 285 1 163 1 84 1 149 1 301 1 51 1 38 1 62 1 304 1 106 1 90 1 266 2 
328 1 181 1 295 1 83 1 299 1 361 1 261 1 51 1 86 1 90 1 
369 1 181 5 32 2 215 2 83 5 247 2 70 10 186 5 86 5 38 2 62 2 53 5 265 5 266 2 256 1 
86 1 203 1 163 1 106 1 261 1 255 1 
328 1 259 2 181 2 214 4 260 1 307 1 356 2 83 2 358 1 357 4 127 1 163 3 61 1 263 4 220 1 364 1 315 1 90 2 106 3 192 1 172 1 42 2 294 1 295 2 112 1 201 2 51 2 203 2 255 4 
252 1 263 1 214 1 354 1 197 1 356 1 178 1 357 1 
42 1 181 2 328 1 259 1 295 1 83 1 261 2 70 4 51 1 186 2 86 4 53 2 265 2 90 1 189 1 
236 1 96 1 188 1 
236 1 96 1 188 1 
236 1 18 1 96 1 48 1 251 1 
236 1 96 1 188 1 
236 1 96 1 91 1 
236 1 96 1 91 1 
236 1 96 1 91 1 
236 1 96 1 
230 1 22 1 
210 1 282 4 193 2 173 4 199 3 373 2 360 1 346 8 84 1 322 1 166 2 149 1 72 1 229 2 38 1 62 1 54 4 231 1 138 2 189 1 
149 1 210 1 282 3 72 1 38 1 62 1 199 2 54 3 231 1 373 2 208 1 189 1 346 6 84 1 
282 2 193 1 173 2 32 1 199 2 215 1 373 1 247 1 346 4 134 1 166 1 322 1 229 1 38 1 62 1 54 2 138 1 
269 2 282 4 32 1 199 2 215 1 373 1 310 1 247 1 346 7 322 1 160 1 38 1 62 1 54 3 365 1 
210 2 282 12 32 2 215 2 310 1 360 2 84 2 166 2 149 1 38 3 152 1 62 3 365 2 335 1 189 1 269 2 193 2 173 4 199 9 373 5 247 2 346 23 322 4 72 1 229 2 206 1 231 1 54 11 138 2 
269 1 282 1 346 1 
54 1 365 1 346 1 
282 3 193 1 173 2 32 1 199 3 215 1 373 2 247 1 346 6 166 1 134 1 322 1 229 1 38 1 62 1 54 3 138 1 256 1 
282 6 32 2 215 2 359 1 166 1 5 1 38 2 62 2 365 1 41 1 269 1 193 1 338 1 173 2 199 2 373 1 247 2 346 12 322 1 160 1 229 1 350 1 232 1 54 6 138 1 
210 1 282 3 199 2 373 1 346 6 84 1 322 1 149 1 38 1 62 1 54 3 
210 1 282 2 193 1 173 2 199 2 373 1 360 1 84 1 346 3 322 1 166 1 72 1 229 1 152 1 54 1 231 1 138 1 
191 1 210 2 282 5 193 1 173 2 199 5 373 3 84 2 346 10 166 1 322 2 149 1 229 1 38 2 62 2 232 1 54 5 138 1 
193 1 173 2 199 1 247 1 346 2 166 1 322 1 229 1 62 1 232 1 54 2 138 1 
282 2 193 1 173 2 32 1 199 2 215 1 373 1 247 1 346 4 166 1 322 1 229 1 38 1 62 1 232 1 54 2 138 1 
210 1 282 2 193 3 173 6 199 2 373 1 360 1 346 3 84 1 166 3 322 1 229 3 152 1 232 1 54 1 242 1 138 3 
210 3 282 18 32 3 215 3 360 2 310 1 84 3 166 5 149 2 241 1 38 5 152 1 62 5 242 1 365 3 189 1 269 4 193 5 194 1 173 10 199 12 373 7 247 3 346 34 134 1 322 5 72 1 160 1 229 5 231 1 232 1 54 16 138 5 77 1 
269 1 210 1 282 4 193 1 173 2 199 2 373 2 84 1 346 8 166 1 149 1 5 1 72 1 160 1 229 1 38 1 62 1 231 1 54 4 232 1 365 1 138 1 189 1 
210 1 282 5 32 1 310 1 84 1 166 2 149 1 5 1 38 1 62 2 365 1 189 1 269 2 193 2 173 4 199 3 373 2 247 1 346 11 134 1 322 1 72 1 160 1 229 2 231 1 232 1 54 6 138 2 
210 1 282 10 32 2 215 2 359 1 360 1 84 1 166 3 149 1 5 1 38 3 62 3 365 1 189 1 41 1 269 1 193 3 338 1 173 6 199 4 373 3 247 2 346 19 134 1 322 1 72 1 160 1 229 3 350 1 231 1 232 1 54 9 138 3 
210 1 282 7 32 2 215 1 359 1 360 1 84 1 166 3 149 1 5 1 38 2 62 3 365 1 189 1 41 1 269 1 193 3 338 1 173 6 199 5 373 3 247 2 346 17 134 1 322 2 72 1 160 1 229 3 350 1 231 1 232 1 54 10 138 3 
269 1 210 1 282 4 193 1 173 2 199 2 373 2 84 1 346 8 166 1 149 1 5 1 72 1 160 1 229 1 38 1 62 1 231 1 54 4 232 1 365 1 138 1 189 1 
282 6 32 2 215 2 359 1 166 1 5 1 38 2 62 2 365 1 41 1 269 1 193 1 338 1 173 2 199 2 373 1 247 2 346 12 322 1 160 1 229 1 350 1 232 1 54 6 138 1 
210 1 282 8 32 2 215 1 359 1 360 2 84 1 166 4 149 1 5 1 38 2 62 3 365 1 189 1 41 1 269 1 193 4 338 1 173 8 199 5 373 3 247 2 346 18 322 2 134 1 72 1 160 1 229 4 350 1 231 1 232 1 54 10 138 4 
282 7 32 3 215 2 359 1 360 2 166 4 5 1 38 2 62 3 242 1 365 1 41 1 269 1 193 4 338 1 173 8 199 6 373 3 247 3 346 16 322 3 160 1 229 4 350 1 232 1 54 9 138 4 
210 3 282 4 199 6 373 3 346 7 84 3 322 3 149 1 72 1 38 1 62 1 231 2 54 3 
210 1 282 8 32 2 215 1 359 1 360 2 84 1 166 4 149 1 5 1 38 2 62 3 242 1 365 1 189 1 41 1 269 1 193 4 338 1 173 8 199 4 373 3 247 2 346 18 322 1 72 1 160 1 229 4 350 1 231 1 232 1 54 10 138 4 
209 1 302 1 264 1 20 1 154 1 286 1 321 1 
209 1 93 1 59 1 47 1 20 1 286 1 271 1 321 1 302 1 264 1 73 1 154 1 
192 1 172 1 263 1 214 1 260 1 220 1 307 1 364 1 356 1 208 1 357 1 
209 1 192 1 172 1 284 1 214 1 46 1 20 2 356 1 357 1 158 1 321 1 287 1 263 1 264 2 220 1 364 1 55 1 190 1 
209 1 192 3 172 2 284 1 214 1 339 1 46 1 20 2 357 1 158 2 201 1 321 2 288 1 287 2 85 1 277 1 263 1 264 2 220 1 364 1 207 1 55 1 190 1 
209 1 214 2 357 2 287 2 288 1 85 1 263 2 264 2 220 1 364 1 170 1 12 1 190 1 172 2 192 3 339 1 46 1 20 2 201 1 158 2 321 2 277 1 55 1 207 1 
172 1 192 4 79 1 17 1 214 3 195 1 356 1 270 1 357 3 163 2 158 1 201 1 261 1 288 1 85 1 86 1 263 3 220 1 364 1 314 1 106 2 170 1 255 1 
172 1 192 4 79 1 214 3 195 1 356 1 270 1 357 3 163 2 158 1 201 1 261 1 288 1 85 1 86 1 263 3 220 1 364 1 106 2 129 1 170 1 255 1 
92 1 263 1 214 1 220 1 364 1 357 1 
92 1 172 2 192 3 214 6 99 1 318 1 34 1 356 2 357 7 311 1 158 1 275 1 133 1 71 1 313 1 263 7 219 1 220 3 364 2 281 1 366 1 
209 2 210 1 282 3 284 1 214 1 99 1 35 1 357 1 84 1 166 2 287 1 149 1 263 1 38 1 264 2 220 1 62 1 364 1 189 1 190 1 192 1 172 1 193 2 340 1 173 4 46 1 95 1 199 2 246 1 20 2 373 2 156 1 158 1 249 1 321 1 346 6 72 1 115 2 276 1 204 1 229 2 54 3 231 1 177 2 55 1 178 1 138 2 
283 1 181 1 328 2 213 1 79 1 214 1 83 1 356 1 357 1 358 1 163 3 361 1 261 1 86 1 263 1 90 2 106 3 129 1 192 2 195 1 295 2 342 1 270 1 299 1 51 2 253 1 203 1 255 2 
92 1 192 2 172 1 262 1 263 2 214 2 99 1 220 2 364 1 270 1 357 2 158 1 133 1 
172 1 192 1 214 4 99 1 260 1 145 1 307 1 356 1 357 4 263 4 220 1 364 1 170 1 
172 1 192 1 180 1 214 2 357 2 311 1 183 1 201 1 158 1 24 1 313 1 263 2 220 2 364 1 
353 1 263 1 214 1 332 1 220 1 341 1 364 1 356 1 357 1 130 1 
192 1 172 1 263 2 214 2 99 1 220 1 318 1 364 1 34 1 125 1 357 2 
172 2 192 3 214 4 260 1 99 1 145 1 307 1 318 1 356 1 357 5 201 1 71 1 263 5 220 2 364 2 281 1 
172 2 192 3 214 4 260 1 99 1 145 1 307 1 318 1 356 1 357 5 201 1 71 1 263 5 220 2 364 2 243 1 
209 1 192 1 172 1 214 1 46 1 20 2 356 1 357 1 158 1 321 1 287 1 263 1 264 2 220 1 364 1 55 1 190 1 12 1 
172 1 192 1 214 1 357 1 311 1 201 1 158 1 133 1 313 1 263 1 219 1 220 2 364 1 
305 1 223 1 224 1 20 1 321 1 187 1 104 1 264 1 128 1 
223 1 370 1 325 1 
209 1 305 1 223 1 224 1 233 1 
209 1 305 2 223 1 79 1 370 1 339 1 224 2 238 1 163 2 148 1 261 1 86 1 253 1 277 1 116 1 207 1 233 2 106 2 325 1 
211 1 371 1 88 1 208 1 
25 1 211 1 278 1 143 1 371 1 88 1 164 1 
171 1 143 1 117 1 
258 1 211 1 31 2 143 3 68 1 371 1 372 1 164 3 25 1 228 1 278 1 88 1 
25 1 211 1 278 1 143 2 371 1 88 1 240 1 164 2 362 1 
25 1 109 1 278 1 143 1 332 1 68 1 33 1 88 1 330 1 130 1 164 1 
25 1 211 1 278 1 143 1 68 1 88 1 164 1 
25 1 211 2 278 1 143 1 68 1 371 1 164 1 
211 1 143 2 68 1 82 1 4 1 164 2 25 2 184 1 278 2 88 1 
211 1 143 3 68 1 371 1 320 1 216 1 330 1 240 2 164 3 25 1 278 1 88 2 155 1 
211 1 353 1 143 2 68 1 371 1 33 1 240 1 164 2 274 1 25 1 278 1 332 2 10 1 88 1 130 1 
211 1 143 4 68 1 371 1 217 1 330 1 240 2 164 4 362 1 25 2 278 2 88 2 155 1 
25 1 211 1 278 1 143 1 68 1 371 1 88 1 164 1 
211 2 31 1 143 4 371 2 372 1 330 1 240 2 164 4 228 1 25 1 278 1 88 3 155 1 140 1 
141 1 25 1 211 1 278 1 143 2 68 1 371 1 88 1 65 1 240 1 164 2 235 1 
211 1 31 2 143 3 68 1 371 1 372 2 164 3 228 1 25 1 278 1 88 1 89 1 
347 2 239 1 88 2 146 1 
25 1 278 1 143 1 68 1 126 1 164 1 
25 1 211 1 278 1 143 2 68 1 371 1 88 1 216 1 240 1 164 2 
343 1 
25 1 211 1 278 1 143 1 68 1 371 1 88 1 164 1 
211 1 31 1 143 3 68 1 371 1 216 1 240 1 164 3 25 1 278 1 88 1 
88 1 330 1 155 1 140 1 
211 1 88 1 

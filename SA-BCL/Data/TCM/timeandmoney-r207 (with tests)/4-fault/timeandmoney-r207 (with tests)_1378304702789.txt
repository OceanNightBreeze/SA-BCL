#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (23,155) 159 221 (147,192) 342 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 327 (23,155) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (23,155) 159 221 (147,192) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
360 1 333 3 143 1 214 2 95 2 19 1 196 5 288 1 48 4 126 1 125 1 293 1 152 2 24 2 245 1 347 1 84 6 107 2 249 1 372 1 61 9 116 2 193 1 254 1 34 1 310 9 311 1 284 2 
360 1 333 3 143 1 214 2 19 1 95 2 196 5 288 1 48 4 126 1 125 1 293 1 152 2 24 2 245 1 347 1 84 6 107 2 249 1 372 1 61 9 116 2 193 1 254 1 34 1 310 9 311 1 284 2 
360 1 333 4 143 1 214 2 19 1 95 2 196 6 288 1 48 5 126 1 125 1 293 1 152 2 24 2 245 1 347 1 84 7 107 2 249 1 372 1 61 10 116 2 193 1 254 1 34 1 310 10 311 1 284 2 
360 1 333 2 143 1 214 2 19 1 95 1 196 4 288 1 48 3 126 1 125 1 293 1 152 2 24 2 245 1 347 1 84 4 107 2 249 1 61 7 116 2 193 1 254 1 34 1 310 7 311 1 284 2 
360 1 333 1 143 1 347 1 214 1 84 3 95 2 196 3 288 1 372 1 61 4 48 2 116 1 311 1 310 4 152 1 24 1 284 1 
319 1 360 1 347 1 214 1 196 1 107 1 69 1 61 2 116 1 125 1 193 1 311 1 310 2 152 1 24 1 329 1 
360 1 333 1 347 1 84 1 196 2 107 1 61 3 48 1 116 2 254 1 311 1 310 3 152 2 
360 1 333 3 143 1 214 1 95 2 196 5 288 1 48 4 152 2 24 1 245 1 9 1 347 1 84 7 107 1 249 1 372 1 61 9 308 1 116 2 254 1 310 9 311 1 284 1 
360 1 333 3 143 1 214 1 95 2 196 5 288 1 48 4 152 2 24 1 245 1 9 1 347 1 84 7 107 1 249 1 372 1 61 9 308 1 116 2 254 1 310 9 311 1 284 1 
118 1 237 1 130 1 
188 2 227 1 130 1 
171 2 176 2 315 2 38 1 3 2 205 2 250 2 135 1 
171 2 261 1 22 1 315 2 71 1 0 1 23 1 148 1 149 1 291 1 101 1 341 1 176 3 177 1 294 1 3 3 52 1 79 2 243 1 55 1 8 1 220 1 368 1 109 1 161 1 205 2 250 2 135 1 89 1 137 2 354 2 280 1 119 1 38 1 229 2 231 1 232 2 
171 1 325 1 176 1 315 1 38 1 3 1 205 1 250 1 62 1 115 1 
83 1 145 1 204 1 250 1 113 1 62 1 162 1 217 1 118 1 209 1 176 1 3 1 130 1 367 1 
83 2 171 1 145 1 315 1 205 1 250 1 113 1 62 1 162 1 217 1 118 1 209 2 176 1 3 1 130 1 
83 1 65 1 209 1 225 1 328 1 
83 2 118 1 209 2 225 1 156 1 328 1 130 1 72 1 
83 1 209 1 328 1 
83 1 171 1 315 1 205 1 250 1 62 1 338 1 115 1 209 1 325 1 225 1 176 1 38 1 3 1 
130 1 
83 2 118 1 209 2 225 1 156 1 328 1 130 1 54 1 
170 1 83 5 297 1 285 1 322 1 289 1 13 2 118 1 209 5 163 1 225 2 270 1 211 1 156 1 42 2 317 1 14 2 328 2 130 1 
237 1 135 1 
171 1 29 1 315 1 205 1 250 2 135 2 150 1 176 2 3 2 
298 1 190 1 379 1 
368 1 261 1 203 1 71 1 135 1 23 1 149 1 354 1 280 1 119 1 176 1 3 1 294 1 229 1 243 1 79 1 
368 1 171 1 261 1 190 1 71 1 205 1 250 1 23 1 149 1 92 1 354 1 280 1 119 1 176 2 294 1 3 2 229 1 78 1 243 1 79 1 
92 1 171 3 176 3 315 1 3 3 205 3 250 3 135 1 
171 1 176 1 3 1 205 1 250 1 62 1 115 1 
150 1 171 1 176 1 29 1 315 1 3 1 205 1 250 1 62 1 
171 3 236 1 261 1 145 1 22 1 315 2 71 1 0 1 23 1 149 1 148 1 291 1 101 1 217 1 341 1 51 1 177 1 176 4 294 1 3 4 78 1 243 1 79 1 55 1 83 1 368 1 29 1 109 1 205 3 113 1 250 3 135 1 89 1 62 1 162 1 137 2 92 1 354 1 280 1 119 1 209 1 38 1 229 1 232 1 
92 1 171 1 176 2 3 2 204 1 205 1 250 2 135 1 168 1 
83 1 320 1 171 3 145 1 29 1 315 1 205 3 250 3 113 1 62 1 162 1 92 2 217 1 209 1 51 1 176 3 3 3 78 1 130 1 
298 1 171 2 29 1 190 1 315 1 205 2 250 2 92 1 176 2 3 2 
368 1 261 1 71 1 135 1 23 1 149 1 354 1 280 1 119 1 176 1 3 1 294 1 229 1 243 1 79 1 
371 1 135 1 62 1 354 1 104 1 229 1 243 1 79 1 
263 1 97 1 22 1 0 1 239 1 291 1 101 1 175 1 200 1 244 1 55 1 298 2 57 1 274 1 190 2 109 2 133 1 89 1 90 1 137 2 167 1 231 2 379 2 232 4 
171 1 56 1 217 1 176 1 3 1 205 1 250 1 62 1 
171 4 29 1 315 1 204 1 205 4 250 5 135 1 92 2 176 5 313 1 3 5 40 1 78 1 168 1 
56 1 171 2 176 2 3 2 205 2 250 2 62 1 115 1 
96 1 154 1 
96 1 154 1 
186 1 21 1 
186 1 21 1 
186 1 21 1 
96 1 154 1 134 1 
96 1 68 1 154 1 
20 1 172 1 186 1 21 1 96 2 154 2 
96 1 154 1 134 1 
96 1 154 1 134 1 
96 1 154 1 337 1 
96 1 154 1 337 1 
96 1 154 1 337 1 
15 1 83 2 184 1 172 1 96 2 86 2 262 1 70 2 110 1 60 1 238 2 222 3 32 1 209 2 165 2 154 2 5 1 130 1 26 2 
171 2 258 1 96 1 262 1 68 1 146 1 70 1 100 1 176 2 153 1 154 1 3 2 26 1 83 1 273 1 86 1 189 1 205 2 222 1 250 2 135 1 209 1 164 1 165 1 
214 1 24 1 284 1 
319 1 214 1 24 1 
319 1 214 3 128 1 370 1 6 1 284 2 
319 1 214 2 128 1 309 1 6 1 284 1 
319 1 214 2 128 1 6 2 284 1 
17 1 258 1 263 1 287 1 267 1 239 1 100 1 1 2 156 1 270 3 200 1 130 2 343 2 83 5 182 1 300 1 188 3 322 2 13 1 118 1 209 5 164 1 163 1 225 4 356 1 227 1 166 2 167 1 42 1 14 1 328 1 141 1 
233 1 234 1 285 1 46 1 263 3 287 1 335 1 267 3 239 3 100 4 1 6 156 1 270 8 200 3 180 5 130 5 343 6 27 1 83 9 300 2 188 9 321 1 322 6 13 2 65 5 118 1 209 9 225 7 163 1 356 2 227 3 167 3 42 2 328 6 14 2 
17 1 285 1 263 1 267 1 239 1 100 1 1 2 270 3 200 1 130 3 343 2 83 3 300 1 188 4 322 2 13 1 118 1 209 3 225 2 356 1 227 2 166 1 167 1 42 1 141 1 14 1 
233 1 17 1 285 1 46 1 263 2 335 1 267 2 239 2 100 2 1 4 270 5 200 2 130 4 343 4 83 4 300 1 188 7 322 4 13 1 118 1 209 4 225 3 356 1 227 3 166 2 167 2 42 1 14 1 141 1 
237 1 199 1 294 1 
127 1 294 1 
136 1 
119 1 294 1 
119 1 334 1 199 2 294 3 71 1 169 1 
119 1 294 1 71 1 
351 1 294 1 
346 1 301 1 274 2 363 1 97 3 109 3 88 1 111 1 239 1 278 1 375 1 138 1 2 2 200 1 231 4 271 1 232 7 
346 1 301 1 274 2 363 1 97 3 109 3 88 1 111 1 239 1 278 1 375 1 138 1 2 2 200 1 231 4 271 1 232 7 
346 1 301 1 274 2 363 1 97 3 109 3 88 1 111 1 239 1 278 1 375 1 138 1 2 2 219 1 200 1 231 4 271 1 232 7 
363 5 97 10 263 3 22 1 267 3 0 1 239 4 101 1 2 3 105 1 75 1 271 1 200 4 55 1 345 1 246 3 346 2 301 1 274 5 303 1 88 1 109 15 111 2 278 1 375 2 137 2 323 1 138 2 324 1 167 3 140 4 231 16 359 1 232 31 
97 4 363 1 22 2 0 2 239 1 101 2 2 2 200 1 271 1 55 2 346 1 131 1 274 3 303 1 109 4 88 1 111 1 278 1 375 1 137 4 256 1 138 1 231 5 232 9 
142 1 360 1 122 1 214 2 259 1 196 1 261 1 286 1 47 1 174 1 152 1 24 1 79 1 319 1 347 1 84 1 368 1 107 1 370 1 304 1 59 1 61 2 116 1 354 1 117 1 310 2 311 1 229 1 284 1 212 1 
360 1 122 1 214 2 259 1 196 1 261 1 286 1 174 1 364 1 152 1 24 1 79 1 319 1 347 1 84 2 368 1 107 1 370 1 304 1 59 1 61 3 251 1 116 1 354 1 117 1 310 3 229 1 284 1 212 1 330 1 
360 1 122 1 214 2 259 1 196 1 261 1 174 1 364 1 24 1 79 1 319 1 347 1 84 2 368 1 107 1 370 1 304 1 61 2 251 1 354 1 117 1 310 2 229 1 212 1 284 1 
122 2 259 2 261 1 152 1 294 1 79 1 243 1 296 1 344 1 368 1 107 2 304 2 206 1 275 1 61 1 116 1 223 1 354 1 119 1 310 1 229 1 195 1 330 1 
122 1 214 2 259 1 261 1 286 1 47 1 174 1 364 1 152 1 24 1 79 1 319 1 368 1 107 1 370 1 304 1 59 1 61 1 116 1 354 1 117 1 310 1 311 1 229 1 284 1 212 1 
87 1 
332 1 144 2 240 2 102 1 294 1 156 3 243 2 295 2 53 1 157 2 300 1 247 1 348 2 350 2 206 1 12 2 13 1 114 1 354 2 119 1 209 4 163 1 14 1 261 1 178 1 366 2 270 2 79 2 130 1 181 1 83 4 368 1 85 1 188 2 28 1 322 2 276 1 223 1 376 1 227 2 229 2 42 1 328 6 380 1 
83 2 332 1 247 1 85 1 276 1 209 2 156 1 295 1 328 2 54 1 380 1 
83 1 332 1 247 1 348 1 85 1 209 1 276 1 240 1 380 1 
83 2 332 1 247 1 348 1 85 1 12 1 276 1 240 1 209 2 156 1 295 1 328 2 54 1 380 1 
332 1 144 2 336 1 240 3 338 1 340 1 3 1 295 4 156 3 157 2 54 1 247 1 348 3 350 2 12 4 205 1 306 1 250 1 13 1 62 1 115 1 114 1 118 2 209 4 163 1 121 1 14 1 171 1 315 1 74 1 176 1 366 2 270 1 130 2 83 4 85 1 28 1 322 1 276 1 325 1 227 2 38 1 42 1 328 7 380 1 
332 1 144 2 240 2 366 2 295 2 156 2 270 1 53 1 157 2 130 2 83 3 247 1 348 2 85 1 188 2 350 2 28 1 322 1 12 2 13 1 276 1 114 1 118 1 209 3 163 1 227 2 42 1 328 4 14 1 380 1 
332 1 144 2 240 2 74 1 340 1 366 2 295 2 156 2 270 1 157 2 130 1 83 3 247 1 348 2 85 1 350 2 28 1 322 1 12 2 306 1 13 1 276 1 114 1 118 1 209 3 163 1 227 2 42 1 328 4 14 1 380 1 
332 1 144 2 240 2 74 1 340 1 366 2 295 2 156 2 270 1 157 2 130 1 83 3 247 1 348 2 85 1 350 2 28 1 322 1 12 2 306 1 13 1 276 1 114 1 118 1 209 3 163 1 227 2 42 1 328 4 14 1 380 1 
332 1 260 1 268 1 240 2 74 1 151 1 295 2 156 2 270 1 157 2 130 1 83 3 369 2 247 1 348 2 85 1 188 2 350 2 28 1 322 1 12 2 13 1 276 1 118 1 209 3 163 1 42 1 328 4 93 2 14 1 380 1 
332 1 144 2 240 3 74 1 340 1 366 2 156 2 295 3 270 1 157 2 130 1 83 3 247 1 348 3 85 1 350 2 28 1 322 1 12 3 306 1 13 1 276 1 114 1 118 1 209 3 163 1 227 2 121 1 42 1 328 5 14 1 380 1 
332 1 144 2 240 3 74 1 340 1 366 2 156 2 295 3 270 1 157 2 130 1 83 3 247 1 348 3 85 1 350 2 28 1 322 1 12 3 306 1 13 1 276 1 114 1 118 1 209 3 163 1 227 2 121 1 42 1 328 5 14 1 380 1 
332 1 260 1 240 2 295 2 156 2 270 1 53 1 157 2 130 1 83 3 247 1 369 2 348 2 85 1 188 2 350 2 28 1 322 1 12 2 13 1 276 1 118 1 209 3 163 1 42 1 328 4 14 1 93 2 380 1 
237 1 97 2 22 1 0 1 239 1 291 1 101 1 175 1 2 1 271 1 200 1 55 1 298 1 274 2 190 1 88 1 109 3 135 2 278 1 89 1 375 1 137 2 138 1 231 3 379 1 232 6 
363 1 98 1 97 2 215 1 263 1 22 2 267 2 0 2 239 2 291 2 101 2 341 1 105 1 200 1 55 2 8 1 246 3 298 4 11 1 274 1 190 11 109 6 135 1 373 1 89 1 137 4 312 1 167 2 140 3 231 8 379 11 359 1 232 14 
171 1 261 1 215 1 22 1 71 1 23 1 0 1 149 1 291 1 101 1 341 1 176 2 294 1 3 2 79 1 243 1 78 1 55 1 8 1 298 1 368 1 202 1 203 1 109 1 205 1 250 1 135 1 89 1 92 1 137 2 354 1 280 1 119 1 228 1 229 1 377 1 231 1 232 2 
97 8 0 3 239 3 149 2 291 3 101 3 2 1 341 1 3 3 294 2 243 1 200 3 7 2 55 3 8 1 298 7 109 10 205 1 250 1 354 3 355 1 119 2 167 2 171 1 261 2 215 1 363 4 263 2 22 3 71 2 267 2 23 2 173 1 364 1 176 3 177 2 79 3 78 1 271 1 368 2 274 4 190 7 88 1 135 2 278 1 89 3 375 1 279 1 192 2 137 6 92 1 280 2 35 2 138 1 229 3 231 10 283 2 379 7 232 20 
16 1 142 1 171 1 261 2 22 2 316 1 0 2 291 2 175 1 101 2 364 1 242 1 341 1 176 1 3 1 294 3 25 1 79 7 243 2 55 2 8 1 368 2 220 2 349 1 109 1 205 1 206 1 250 1 89 2 63 1 223 1 92 1 137 4 354 8 119 2 229 8 231 1 257 1 232 2 
171 1 97 1 215 1 263 1 315 1 22 1 266 1 267 1 0 1 239 1 291 1 101 1 176 1 3 1 200 1 55 1 298 1 274 1 190 1 29 1 109 2 205 1 250 1 89 1 137 2 167 1 231 1 379 1 232 3 
298 1 97 1 363 1 190 1 22 1 133 1 0 1 89 1 239 1 291 1 137 2 175 1 101 1 167 1 231 2 379 1 55 1 232 2 
298 1 57 1 274 1 97 1 190 1 263 1 22 1 109 2 0 1 89 1 291 1 137 2 175 1 101 1 200 1 379 1 55 1 232 2 
363 1 97 2 263 1 22 1 267 1 0 1 239 1 291 1 101 1 175 1 200 1 55 1 298 2 274 1 190 2 109 2 89 1 137 2 167 1 231 2 379 2 232 4 
298 1 97 1 363 1 190 1 22 1 133 1 0 1 89 1 239 1 63 1 291 1 137 2 101 1 167 1 231 2 379 1 55 1 232 2 
298 1 57 1 274 1 97 1 190 1 263 1 22 1 109 2 0 1 89 1 63 1 291 1 137 2 101 1 200 1 379 1 55 1 232 2 
363 1 97 2 263 1 22 1 267 1 0 1 239 1 291 1 101 1 200 1 55 1 298 2 274 1 190 2 109 2 89 1 63 1 137 2 167 1 231 2 379 2 232 4 
363 1 97 2 263 1 22 1 267 1 0 1 239 1 291 1 101 1 200 1 55 1 298 2 274 1 190 2 109 2 89 1 137 2 167 1 231 2 379 2 232 4 
261 1 22 1 71 1 23 1 0 1 149 1 291 1 101 1 341 1 177 1 176 1 294 1 3 1 79 1 243 1 55 1 8 1 368 1 109 1 135 1 89 1 137 2 354 1 280 1 119 1 229 1 231 1 232 2 
201 1 109 1 22 1 371 1 135 1 0 1 62 1 89 1 291 1 137 2 354 1 101 1 341 1 104 1 229 1 243 1 79 1 55 1 232 1 
215 1 363 1 97 2 263 1 22 1 267 1 0 1 239 1 291 1 101 1 200 1 55 1 298 2 274 1 190 2 109 2 89 1 137 2 167 1 231 2 379 2 232 4 
142 1 261 1 263 1 97 2 363 1 22 1 71 1 267 1 23 1 0 1 239 1 149 1 291 1 101 1 177 1 176 1 294 1 3 1 79 1 200 1 55 1 298 2 368 1 274 1 190 2 109 2 89 1 137 2 354 1 280 1 35 1 119 1 167 1 229 1 231 2 379 2 232 4 
171 1 263 1 97 1 363 1 215 1 315 1 22 1 267 1 0 1 239 1 291 1 101 1 176 1 3 1 200 1 55 1 298 1 29 1 190 1 109 1 205 1 250 1 89 1 137 2 167 1 67 1 231 2 379 1 232 3 
97 8 197 1 0 3 239 5 101 3 2 1 105 3 4 1 200 5 55 3 106 1 246 3 10 1 108 1 302 1 303 1 109 21 352 2 305 1 253 1 167 4 359 1 263 4 363 4 22 3 267 4 218 1 129 4 271 1 81 1 131 1 274 4 88 1 278 1 375 1 137 6 194 1 138 1 226 1 282 1 140 4 231 20 232 41 
363 3 97 7 263 3 22 4 197 1 267 4 0 4 239 5 101 4 218 1 2 1 129 4 4 1 105 3 271 1 200 4 81 1 55 4 106 1 246 3 10 1 302 1 108 1 274 4 131 1 303 2 88 1 109 18 352 2 305 1 278 1 375 1 253 1 137 8 194 1 138 1 226 1 167 4 282 1 140 4 231 20 359 1 232 38 
98 2 363 7 97 14 263 7 22 2 197 1 267 7 0 2 239 8 101 2 2 1 129 4 4 1 105 2 271 1 200 8 81 1 55 2 106 1 246 4 10 1 302 1 108 1 274 7 131 1 303 1 88 1 109 25 352 1 305 1 278 1 375 1 253 1 137 4 138 1 226 1 167 7 282 1 140 4 231 27 359 2 232 52 
363 3 97 6 263 3 22 2 197 2 267 3 0 2 239 3 101 2 129 2 105 1 200 3 81 1 55 2 106 1 246 1 10 1 274 3 131 1 109 10 352 1 305 1 137 4 208 1 194 1 167 3 140 2 231 9 359 1 232 19 
363 2 97 4 263 2 22 3 197 1 267 3 0 3 239 3 101 3 129 4 4 1 105 2 200 2 81 1 55 3 106 1 246 2 10 2 302 1 108 1 274 2 131 1 303 2 109 12 352 2 305 1 253 1 137 6 226 1 167 3 282 1 140 2 231 14 232 26 
15 1 172 1 86 1 96 1 165 1 139 1 70 1 154 1 60 1 26 1 
68 1 189 1 
86 1 96 1 132 1 165 1 70 1 39 1 154 1 77 1 26 1 
15 1 83 1 184 1 172 1 96 1 86 1 262 1 70 1 110 1 60 1 238 1 222 2 32 1 209 1 165 1 154 1 130 1 26 1 
15 1 83 1 184 1 172 1 96 1 86 1 262 1 70 1 110 1 60 1 238 1 222 2 32 1 209 1 165 1 154 1 130 1 26 1 
15 1 83 1 184 1 172 1 96 1 86 1 262 1 70 1 110 1 60 1 238 1 222 2 32 1 209 1 165 1 154 1 130 1 26 1 
20 1 357 1 134 1 
20 1 357 1 134 1 
82 1 337 1 
82 1 20 1 337 1 
273 1 146 1 
258 1 171 2 96 1 68 1 146 1 70 1 238 1 100 1 50 1 176 2 153 1 3 2 154 1 26 1 83 1 273 1 86 1 189 1 110 1 205 2 222 1 250 2 135 1 209 1 225 1 164 1 165 1 
357 1 134 1 
82 1 20 1 337 1 
261 1 215 1 22 1 0 1 241 1 291 1 101 1 341 1 176 2 294 1 179 1 3 2 79 2 272 1 55 1 8 1 368 1 220 2 349 1 191 1 109 1 250 2 89 1 137 2 354 2 119 1 120 1 229 2 231 1 257 1 232 2 
319 1 142 1 214 2 368 1 261 1 123 1 370 1 286 1 304 1 73 1 174 1 354 2 64 1 117 1 364 1 24 1 229 2 79 2 284 1 
319 1 214 2 368 1 187 1 261 1 370 1 286 1 304 1 73 1 174 1 354 1 117 1 364 1 24 1 229 1 79 1 284 1 
368 1 261 1 304 1 206 1 269 1 223 1 354 1 64 1 119 1 294 1 229 1 243 1 79 1 344 1 
319 1 214 2 368 1 261 1 123 1 370 1 286 1 304 1 73 1 174 1 354 1 64 1 117 1 364 1 24 1 229 1 79 1 284 1 
112 1 
170 1 118 1 237 1 322 1 270 1 211 1 130 1 
83 1 144 1 188 1 322 1 13 1 114 1 118 1 209 1 163 1 227 1 366 1 156 1 42 1 270 1 328 1 14 1 130 2 
362 1 261 2 71 1 147 1 127 2 199 1 342 1 294 4 155 1 79 1 243 1 270 1 159 1 300 1 368 1 221 1 13 1 354 1 119 1 163 1 229 1 42 1 14 1 169 1 
213 1 43 2 44 1 263 2 267 2 239 2 1 5 4 1 105 1 156 1 270 8 200 2 130 5 343 5 83 1 300 1 299 1 246 1 108 1 188 6 322 5 13 2 253 1 118 2 209 1 376 1 163 2 227 3 226 1 167 2 282 1 140 1 42 2 328 1 14 2 
43 2 44 1 171 1 315 1 239 2 338 1 340 1 176 1 3 1 270 2 200 1 83 1 88 1 322 2 205 1 13 1 250 1 62 1 115 1 375 1 281 1 138 1 209 1 325 1 163 1 38 1 42 1 14 1 
170 1 118 1 163 1 322 1 270 1 211 1 42 1 13 1 14 1 130 1 
43 2 44 1 188 10 263 2 322 5 267 2 239 2 1 5 227 5 167 2 270 5 200 2 283 1 130 5 343 5 
83 1 118 1 209 1 156 1 328 1 130 1 
18 1 285 1 261 1 314 2 216 1 49 1 178 1 294 1 79 4 243 2 270 2 156 2 181 1 83 3 300 2 368 1 322 2 206 1 13 2 223 1 354 4 119 1 209 3 163 1 376 2 229 4 42 2 14 2 328 4 
171 2 261 1 22 1 315 2 71 1 0 1 23 1 148 1 149 1 291 1 101 1 341 1 176 3 177 1 3 3 294 1 79 1 243 1 55 1 368 1 109 1 205 2 250 2 135 1 89 1 137 2 354 1 280 1 119 1 38 1 229 1 232 1 
300 1 188 4 322 2 13 1 1 2 118 2 2 1 163 1 376 1 227 2 42 1 270 1 14 1 130 4 343 2 
86 1 70 1 252 1 
339 1 86 1 146 1 70 1 60 1 
86 1 70 1 252 1 
86 1 70 1 252 1 
86 1 70 1 58 1 
86 1 70 1 58 1 
86 1 70 1 58 1 
86 1 70 1 
96 1 154 1 
274 2 363 1 97 3 303 1 88 1 109 4 22 2 0 2 239 1 278 1 375 1 137 4 101 2 2 1 138 1 200 1 231 4 271 1 55 2 232 8 
237 1 274 2 97 2 109 3 88 1 278 1 239 1 375 1 2 1 138 1 271 1 231 3 200 1 232 6 
274 1 263 1 97 2 363 1 109 2 22 1 267 1 0 1 239 1 292 1 137 2 101 1 167 1 200 1 231 2 55 1 232 4 
246 1 274 1 263 1 363 1 97 2 109 4 267 1 239 1 105 1 167 1 140 2 200 1 231 3 359 1 232 7 
97 9 363 4 263 2 98 1 22 2 267 2 0 2 239 3 101 2 2 1 271 1 200 3 55 2 246 2 274 5 303 2 88 1 109 12 278 1 375 2 137 4 33 1 138 2 312 1 167 2 140 2 231 11 359 1 232 23 
109 1 140 1 232 1 
246 1 231 1 232 1 
274 2 363 1 97 3 263 1 22 1 109 3 267 1 0 1 239 1 137 2 292 1 101 1 167 1 231 3 200 1 283 1 55 1 232 6 
363 1 263 2 97 2 22 1 267 2 0 1 239 2 101 1 105 1 4 1 200 2 55 1 246 1 108 1 131 1 274 1 109 6 253 1 137 2 226 1 167 2 282 1 140 1 231 6 232 12 
274 1 97 2 363 1 88 1 109 3 239 1 375 1 138 1 231 3 200 1 232 6 
274 1 363 1 97 2 303 1 109 2 22 1 0 1 278 1 375 1 33 1 137 2 101 1 138 1 231 1 271 1 55 1 232 3 
97 2 22 1 0 1 239 1 101 1 2 1 105 1 200 1 271 1 55 1 246 1 131 1 274 2 109 4 88 1 278 1 375 1 253 1 137 2 138 1 140 1 231 4 232 8 
363 1 97 3 22 2 267 1 0 2 239 2 292 1 101 2 2 1 105 1 200 1 271 1 55 2 246 1 274 2 131 1 88 1 109 5 278 1 375 1 253 1 137 4 138 1 167 1 140 2 231 6 359 1 232 11 
363 1 263 2 97 4 22 3 267 2 0 3 239 3 292 1 101 3 2 1 105 1 4 1 271 1 200 3 55 3 246 1 108 1 131 1 274 3 303 1 88 1 109 10 278 1 375 1 253 1 137 6 138 1 226 1 167 2 282 1 140 1 231 9 232 19 
363 2 263 1 97 5 22 3 267 2 0 3 239 3 292 1 101 3 2 1 105 1 4 1 271 1 200 2 55 3 246 1 108 1 131 1 274 3 303 1 88 1 109 7 278 1 375 1 253 1 137 6 138 1 226 1 167 2 282 1 140 1 231 10 232 17 
97 2 22 1 0 1 239 1 101 1 2 1 105 1 200 1 271 1 55 1 246 1 131 1 274 2 109 4 88 1 278 1 375 1 253 1 137 2 138 1 140 1 231 4 232 8 
363 1 263 2 97 2 22 1 267 2 0 1 239 2 101 1 105 1 4 1 200 2 55 1 246 1 108 1 131 1 274 1 109 6 253 1 137 2 226 1 167 2 282 1 140 1 231 6 232 12 
363 2 263 1 97 5 22 4 267 2 0 4 239 3 292 1 101 4 2 1 4 1 105 1 271 1 200 2 55 4 246 1 108 1 131 1 274 3 303 2 88 1 109 8 278 1 375 1 253 1 137 8 138 1 226 1 167 2 282 1 140 1 231 10 232 18 
363 3 263 2 97 6 22 4 267 3 0 4 239 3 101 4 4 1 105 1 200 2 55 4 246 1 108 1 131 1 274 3 303 2 109 7 253 1 137 8 194 1 226 1 167 3 282 1 140 1 231 9 232 16 
274 3 97 6 363 3 109 4 88 1 278 2 239 1 375 3 138 3 200 1 271 1 231 3 232 7 
363 1 263 1 97 4 22 4 267 2 0 4 239 3 101 4 2 1 4 1 105 1 271 1 200 2 55 4 246 1 108 1 131 1 274 3 303 2 88 1 109 8 278 1 375 1 253 1 137 8 194 1 138 1 226 1 167 2 282 1 140 1 231 10 232 18 
131 1 274 3 97 5 363 2 22 1 109 5 88 1 0 1 239 2 375 2 137 2 101 1 281 1 138 2 231 5 200 2 55 1 232 10 
131 1 363 1 97 1 22 1 0 1 239 1 137 2 101 1 167 1 231 2 55 1 232 2 
274 1 131 1 263 1 97 2 363 1 109 2 22 1 267 1 0 1 239 1 137 2 101 1 167 1 200 1 231 2 55 1 232 4 
131 1 274 1 303 1 97 2 363 1 109 2 22 3 0 3 375 1 33 1 137 6 101 3 194 1 138 1 231 1 55 3 232 3 
363 5 97 12 263 3 22 5 267 3 0 5 239 5 292 1 101 5 2 1 105 1 271 1 200 5 55 5 345 1 246 3 131 1 274 7 303 2 88 2 109 18 278 1 375 3 33 1 323 1 137 10 194 1 138 3 324 1 167 3 140 4 231 16 359 1 232 34 
176 1 3 1 204 1 265 1 250 1 135 1 168 1 
160 1 124 1 204 1 265 1 353 1 250 1 135 1 307 1 30 1 176 1 3 1 168 1 
223 1 368 1 354 1 119 1 261 1 237 1 294 1 206 1 229 1 79 1 243 1 
171 1 368 1 261 1 71 1 205 1 250 1 135 1 23 1 92 1 354 1 280 1 119 1 176 2 294 1 3 2 229 1 243 1 79 1 
171 2 261 1 145 1 314 1 71 2 23 1 217 1 176 2 3 2 294 3 79 1 368 1 351 1 205 1 250 2 135 1 62 1 92 1 354 1 280 1 119 2 229 1 327 1 
171 2 261 1 145 1 314 1 71 2 99 1 217 1 176 2 3 2 294 3 79 2 368 1 351 1 205 1 250 2 135 1 62 1 207 1 92 1 354 2 280 1 119 2 229 2 327 1 
83 2 368 1 235 1 261 1 351 1 314 1 71 1 162 1 207 1 127 1 354 3 118 1 119 1 209 2 199 1 294 4 229 3 243 1 327 1 79 3 41 1 328 1 130 1 
83 1 368 1 261 1 351 1 314 1 71 1 127 1 354 1 119 1 209 1 199 1 294 4 229 1 327 1 79 1 155 1 
368 1 354 1 242 1 261 1 229 1 79 1 
16 1 142 1 220 1 368 2 185 1 261 3 71 1 316 1 354 7 364 1 242 1 119 2 294 3 229 7 25 1 243 2 79 6 318 1 94 1 169 1 257 1 
142 1 171 1 261 1 97 2 215 1 22 2 71 1 0 2 23 1 239 1 149 1 291 2 101 2 2 1 176 2 177 1 294 1 179 1 3 2 79 1 200 1 271 1 55 2 298 1 368 1 274 2 190 1 109 3 88 1 205 1 250 1 135 2 278 1 89 2 375 1 192 1 92 1 137 4 354 1 280 1 119 1 35 1 138 1 229 1 231 3 379 1 232 6 
159 1 83 1 221 1 147 1 13 1 216 1 127 1 354 1 209 1 225 1 163 1 199 1 294 2 229 1 155 1 42 1 243 1 79 1 14 1 
142 1 368 1 362 1 261 2 71 1 354 2 242 1 119 1 199 1 294 2 229 2 79 2 169 1 
142 1 368 1 261 1 206 1 207 1 223 1 354 4 119 1 294 1 229 4 378 1 243 1 79 4 
368 1 261 2 314 1 71 1 277 1 173 1 354 2 119 1 294 1 229 2 79 2 230 1 318 1 94 1 
319 1 174 1 214 1 368 1 354 1 261 1 24 1 229 1 79 1 243 1 
142 1 368 1 261 1 354 2 364 1 119 1 120 1 294 1 229 2 79 2 257 1 
142 1 16 1 368 2 261 2 314 1 206 1 223 1 354 5 119 2 294 3 229 5 378 1 243 1 79 4 25 1 257 1 
142 1 16 1 368 2 261 2 314 1 248 1 206 1 223 1 354 5 119 2 294 3 229 5 378 1 243 1 79 4 257 1 
171 1 368 1 261 1 71 1 205 1 250 1 135 1 99 1 92 1 354 1 280 1 119 1 176 2 294 1 3 2 229 1 243 1 79 1 
368 1 185 1 261 2 314 1 71 1 354 1 119 1 294 1 229 1 79 1 318 1 94 1 169 1 
361 1 224 1 45 1 103 1 135 1 
83 2 361 2 45 1 145 1 113 1 135 1 62 1 162 1 31 1 224 2 217 1 118 1 209 2 51 1 225 1 37 1 358 1 103 2 130 1 
361 1 45 1 191 1 250 1 241 1 224 1 176 1 3 1 272 1 
31 1 45 1 37 1 
360 1 347 1 196 1 237 1 
360 1 347 1 196 1 310 1 152 1 61 1 116 1 
122 1 107 1 61 1 
360 1 347 1 196 1 61 3 116 1 193 2 365 1 210 1 311 1 310 3 152 1 326 1 
360 1 347 1 84 1 95 1 196 1 310 2 152 1 61 2 116 1 
214 1 196 1 310 1 311 1 152 1 24 1 288 1 284 1 48 1 61 1 116 1 
360 1 196 1 310 1 311 1 152 1 61 1 116 1 
360 2 347 1 310 1 311 1 152 1 61 1 116 1 
331 1 360 1 196 1 36 1 310 2 311 1 152 2 76 1 61 2 116 2 
360 1 333 1 347 1 84 2 196 2 249 1 61 3 48 1 116 1 311 1 310 3 152 1 245 1 
319 1 360 1 347 1 214 2 84 1 196 1 370 1 61 2 116 1 91 1 311 1 310 2 152 1 24 1 284 1 
360 1 333 1 347 1 84 2 95 1 196 2 372 1 61 4 48 1 116 2 311 1 310 4 152 2 
360 1 347 1 196 1 310 1 311 1 152 1 61 1 116 1 
360 2 333 1 347 2 84 2 196 3 61 4 48 1 116 1 193 1 198 1 365 1 310 4 152 1 326 1 
9 1 360 1 84 1 347 1 196 1 61 2 116 1 255 1 311 1 310 2 152 1 158 1 
360 1 183 1 347 1 196 1 61 3 116 1 193 2 365 1 311 1 310 3 152 1 326 2 
196 2 290 2 80 1 374 1 
310 1 311 1 152 1 264 1 61 1 116 1 
360 1 347 1 84 1 196 1 310 2 311 1 152 1 245 1 61 2 116 1 
66 1 
360 1 347 1 196 1 310 1 311 1 152 1 61 1 116 1 
360 1 84 1 347 1 196 1 61 3 116 1 193 1 311 1 310 3 152 1 245 1 
198 1 333 1 196 1 48 1 
360 1 196 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (5,242,326) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (5,242,326) 297 119 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (5,242,326) 297 17 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (5,242,326) (5,242,326) 166 345 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 143 137 340 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 143 7 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 349 77 (16,274) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 349 77 (86,355) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 143 137 340 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 143 7 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 143 137 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 143 197 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (5,242,326) 297 161 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 262 5 188 1 146 2 190 1 113 1 236 1 174 2 276 9 152 1 277 7 352 1 97 1 30 1 307 1 195 1 20 1 160 1 249 2 334 9 285 4 167 3 106 1 38 1 
200 1 262 5 188 1 146 2 190 1 113 1 236 1 174 2 276 9 152 1 277 7 352 1 97 1 30 1 307 1 195 1 20 1 160 1 249 2 334 9 285 4 167 3 106 1 38 1 
200 1 201 1 262 5 188 1 146 2 190 1 44 1 113 1 236 1 174 2 276 9 152 2 277 6 154 1 352 1 72 1 244 1 97 1 30 2 195 2 20 1 249 2 334 9 285 4 167 3 38 2 106 1 184 1 
200 1 201 1 262 5 188 1 146 2 190 1 44 1 113 1 236 1 174 2 276 9 152 2 277 6 154 1 352 1 72 1 244 1 97 1 30 2 195 2 20 1 249 2 334 9 285 4 167 3 38 2 106 1 184 1 
200 1 201 1 262 6 188 1 146 2 190 1 44 1 113 1 236 1 174 2 276 10 152 2 277 7 154 1 352 1 72 1 244 1 97 1 30 2 195 2 20 1 249 2 334 10 285 5 167 4 38 2 106 1 184 1 
200 1 201 1 262 4 188 1 146 2 190 1 44 1 113 1 236 1 174 1 276 7 152 2 277 4 154 1 352 1 72 1 244 1 97 1 30 2 195 2 249 2 334 7 285 3 167 2 38 2 106 1 184 1 
352 1 262 3 188 1 195 1 20 1 190 1 146 1 113 1 249 1 334 4 236 1 285 2 174 2 167 1 276 4 38 1 152 1 277 3 
352 1 261 1 262 1 124 1 30 1 188 1 195 1 190 1 146 1 44 1 249 1 334 2 276 2 136 1 38 1 184 1 
352 1 200 1 262 2 30 1 188 1 190 1 146 2 249 2 334 3 285 1 276 3 167 1 277 1 
353 1 272 1 141 1 
353 1 151 2 248 1 
318 2 198 1 61 2 76 2 140 2 131 1 127 2 53 2 
290 1 61 3 109 1 131 1 187 1 207 2 114 1 318 2 64 2 210 2 273 1 116 2 94 1 325 1 215 1 278 2 71 1 96 1 76 2 16 1 18 1 140 2 157 1 99 1 77 1 34 1 53 3 198 1 357 1 251 1 358 1 226 1 309 1 286 1 126 1 58 1 127 2 
74 1 61 1 76 1 314 1 140 1 131 1 268 1 53 1 318 1 127 1 
260 1 242 1 74 1 65 1 61 1 178 1 127 1 326 1 53 1 
318 1 74 1 65 1 61 1 178 1 76 1 140 1 127 1 326 1 53 1 
185 1 5 1 303 1 323 1 168 1 
353 1 185 2 272 1 313 1 5 2 303 1 10 1 168 1 
185 1 5 1 303 1 
185 1 74 1 61 1 76 1 314 1 140 1 168 1 131 1 268 1 53 1 318 1 5 1 104 1 127 1 
353 1 
353 1 185 2 272 1 5 2 303 1 10 1 168 1 3 1 
327 2 84 1 353 1 293 1 185 5 60 1 336 1 50 1 2 2 62 2 168 2 45 1 272 1 5 5 6 1 10 1 303 2 57 1 153 1 
198 1 141 1 
95 1 74 1 61 2 76 1 140 1 63 1 53 2 318 1 198 1 93 1 127 2 
224 1 234 1 343 1 
290 1 71 1 61 1 16 1 187 1 157 1 77 1 53 1 198 1 210 1 358 1 226 1 116 1 348 1 215 1 278 1 
290 1 71 1 202 1 61 2 16 1 76 1 157 1 281 1 187 1 77 1 53 2 224 1 318 1 210 1 226 1 358 1 116 1 127 1 215 1 278 1 
74 1 61 3 76 3 140 1 281 1 53 3 318 3 198 1 93 1 127 3 
318 1 74 1 61 1 76 1 127 1 268 1 53 1 
95 1 74 1 61 1 76 1 140 1 63 1 53 1 318 1 127 1 
95 1 119 1 74 1 202 1 61 2 76 2 140 1 281 1 297 1 53 2 318 2 65 1 178 1 127 2 326 1 
260 1 318 1 198 1 320 1 61 2 76 1 281 1 127 2 53 2 
74 1 202 1 61 1 76 1 17 1 281 1 297 1 53 1 318 1 65 1 178 1 127 1 326 1 
95 1 61 2 76 2 140 1 281 1 343 1 53 2 318 2 224 1 127 2 
290 1 71 1 61 1 16 1 187 1 157 1 77 1 53 1 198 1 210 1 358 1 226 1 116 1 278 1 215 1 
233 1 290 1 71 1 61 1 86 1 187 1 157 1 77 1 53 1 198 1 210 1 226 1 116 1 278 1 215 1 
338 1 203 1 41 1 296 1 234 2 207 2 343 2 169 1 25 1 114 1 64 4 245 1 29 1 34 1 224 2 251 1 357 2 227 1 309 2 286 1 180 1 126 1 58 1 310 1 
318 1 59 1 74 1 61 1 178 1 76 1 127 1 53 1 
95 1 74 1 61 2 76 2 140 1 281 1 53 2 318 2 198 1 93 1 127 2 
59 1 318 2 74 1 61 2 76 2 127 2 268 1 53 2 
321 1 19 1 
321 1 19 1 
48 1 289 1 
48 1 289 1 
48 1 289 1 
321 1 254 1 19 1 
22 1 321 1 19 1 
48 1 321 2 287 1 228 1 289 1 19 2 
321 1 254 1 19 1 
321 1 254 1 19 1 
321 1 19 1 317 1 
321 1 19 1 317 1 
321 1 19 1 317 1 
353 1 185 2 342 1 78 1 19 2 33 3 332 1 79 1 55 1 308 2 125 2 321 2 5 2 24 1 134 2 27 2 8 1 287 1 231 2 
185 1 61 2 205 1 186 1 206 1 89 1 318 2 321 1 5 1 27 1 134 1 324 1 49 1 219 1 76 2 19 1 33 1 53 2 332 1 198 1 22 1 125 1 127 2 231 1 
38 1 195 1 152 1 
38 1 124 1 195 1 
40 1 51 1 124 1 152 2 195 3 43 1 
51 1 306 1 124 1 152 1 195 2 43 1 
51 2 124 1 152 1 195 2 43 1 
185 5 336 1 62 1 2 1 41 1 205 1 296 1 89 1 168 4 169 1 300 2 272 1 151 3 211 2 5 5 6 2 303 1 10 1 11 1 153 3 327 1 353 2 219 1 139 1 122 1 354 2 221 1 248 1 222 1 356 1 359 1 180 1 
185 9 336 1 2 2 62 2 41 3 296 3 168 7 169 3 148 5 46 1 346 1 272 1 151 9 211 6 5 9 6 6 303 6 10 1 323 5 11 3 69 1 153 8 327 2 353 5 219 4 50 1 122 1 354 6 31 1 248 3 32 1 222 2 356 2 180 3 230 1 
185 3 62 1 2 1 41 1 296 1 168 2 169 1 300 1 272 1 5 3 211 2 151 4 6 2 11 1 153 3 327 1 353 3 219 1 139 1 50 1 221 1 354 2 248 2 222 1 356 1 180 1 
185 4 62 1 2 1 41 2 296 2 168 3 169 2 300 2 46 1 272 1 151 7 211 4 5 4 6 4 11 2 153 5 327 1 353 4 219 2 50 1 139 1 354 4 221 1 248 3 32 1 222 1 356 1 180 2 230 1 
194 1 141 1 215 1 
107 1 215 1 
103 1 
157 1 215 1 
283 1 290 1 194 2 37 1 157 1 215 3 
290 1 157 1 215 1 
351 1 215 1 
217 1 245 3 41 1 296 1 29 2 54 1 21 1 64 7 271 1 100 1 357 3 133 1 163 2 165 1 309 4 36 1 175 1 
217 1 245 3 41 1 296 1 29 2 54 1 21 1 64 7 271 1 100 1 357 3 133 1 163 2 165 1 309 4 36 1 175 1 
217 1 245 3 120 1 41 1 296 1 29 2 54 1 21 1 100 1 64 7 271 1 357 3 133 1 163 2 165 1 309 4 36 1 175 1 
128 3 85 1 41 4 296 4 207 2 315 1 269 1 169 3 114 1 271 1 64 31 133 1 150 1 92 1 67 4 11 3 350 1 175 2 217 2 245 10 29 5 54 5 21 2 100 1 251 1 357 15 163 3 253 1 165 2 309 16 36 1 180 3 126 1 58 1 
41 1 296 1 207 4 114 2 64 9 133 1 150 1 175 1 192 1 217 1 245 4 29 3 54 1 21 1 100 1 251 2 357 4 162 1 163 2 165 1 309 5 36 1 126 2 58 2 
0 1 291 1 40 1 262 1 188 1 146 1 190 1 132 1 210 1 173 1 116 1 213 1 275 1 276 2 152 1 239 1 277 1 278 1 216 1 193 1 218 1 352 1 71 1 30 1 124 1 195 2 249 1 334 2 226 1 38 1 
0 1 291 1 40 1 262 1 188 1 316 1 146 1 132 1 210 1 173 1 116 1 213 1 275 1 276 3 152 1 239 1 277 2 278 1 216 1 352 1 71 1 30 1 124 1 195 2 249 1 334 3 226 1 80 1 229 1 38 1 
0 1 291 1 40 1 262 1 188 1 316 1 132 1 210 1 116 1 213 1 275 1 276 2 239 1 152 1 277 2 278 1 352 1 71 1 30 1 124 1 195 2 334 2 226 1 229 1 38 1 
0 2 292 1 291 2 71 1 337 1 247 1 341 1 157 1 282 1 30 2 187 1 158 1 146 1 249 1 210 1 334 1 226 1 80 1 116 1 213 2 276 1 215 1 278 1 
0 1 291 1 40 1 146 1 190 1 132 1 210 1 173 1 116 1 213 1 275 1 276 1 152 1 239 1 278 1 216 1 218 1 71 1 30 1 124 1 195 2 249 1 334 1 226 1 229 1 38 1 
155 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
327 1 260 1 185 1 1 1 242 1 74 1 336 1 61 1 2 1 62 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 292 1 185 2 1 1 336 1 61 1 62 1 2 1 263 1 341 1 187 2 301 1 345 1 210 2 65 1 5 2 6 1 116 2 117 1 303 2 10 1 322 1 326 1 153 1 215 1 278 2 327 1 242 1 71 1 74 1 157 1 53 1 356 1 226 1 178 1 166 1 127 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 2 1 1 242 1 74 1 61 1 3 1 53 1 345 1 65 1 5 2 178 1 10 1 303 1 117 1 166 1 127 1 326 1 
327 1 260 1 185 1 1 1 242 1 74 1 336 1 61 1 2 1 62 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
260 1 185 1 1 1 242 1 74 1 61 1 53 1 345 1 65 1 5 1 178 1 117 1 166 1 127 1 326 1 
41 1 296 1 234 1 343 1 207 2 114 1 64 6 133 1 175 1 245 2 29 2 141 1 34 1 224 1 100 1 198 2 251 1 357 3 163 1 165 1 227 1 286 1 309 3 36 1 126 1 58 1 
128 3 41 1 234 11 296 2 267 1 315 1 207 4 343 4 169 2 114 2 64 14 238 1 92 1 273 1 67 3 11 2 279 1 245 2 18 1 29 1 54 1 34 1 224 11 198 1 357 6 251 2 286 2 309 8 255 1 126 2 180 1 83 1 58 2 
39 1 290 1 202 1 61 2 187 1 343 1 207 2 318 1 114 1 235 1 64 2 210 1 238 1 273 1 116 1 348 1 215 1 278 1 328 1 71 1 16 1 76 1 18 1 157 1 281 1 77 1 34 1 53 2 198 1 251 1 357 1 226 1 358 1 286 1 309 1 126 1 127 1 58 1 
202 1 41 3 42 2 90 1 207 6 169 2 318 1 133 1 210 3 273 1 11 2 175 1 278 3 215 2 16 2 18 1 281 1 53 3 54 4 224 7 100 1 333 2 226 2 179 1 286 3 229 1 105 2 180 2 58 3 290 2 61 3 109 2 295 2 234 7 296 3 187 1 343 7 114 3 64 20 238 1 116 3 28 1 71 2 245 8 76 1 29 4 157 2 77 2 34 3 198 2 357 10 251 3 163 1 358 2 165 1 309 10 36 1 126 3 127 1 
290 1 292 1 129 1 294 1 340 1 61 1 341 1 187 2 207 4 91 1 318 1 114 2 64 2 210 4 273 1 116 4 94 1 137 1 215 3 278 4 193 1 71 2 76 1 18 1 281 1 157 3 223 1 53 1 34 2 143 1 251 2 357 1 199 1 226 3 227 1 286 2 309 1 181 1 126 2 127 1 58 2 
61 1 41 1 234 1 296 1 343 1 207 2 169 1 318 1 114 1 64 3 238 1 11 1 95 1 245 1 76 1 52 1 140 1 29 1 34 1 53 1 224 1 251 1 357 2 286 1 309 1 126 1 180 1 58 1 127 1 
338 1 245 1 234 1 296 1 343 1 207 2 54 1 34 1 169 1 224 1 114 1 64 2 251 1 227 1 286 1 309 2 126 1 58 1 
245 1 41 1 29 1 234 1 343 1 207 2 34 1 224 1 114 1 64 2 251 1 357 2 227 1 286 1 126 1 180 1 58 1 310 1 
41 1 296 1 234 2 207 2 343 2 169 1 114 1 64 4 11 1 245 2 29 1 34 1 54 1 224 2 251 1 357 2 227 1 309 2 286 1 126 1 180 1 58 1 
338 1 245 1 234 1 296 1 343 1 207 2 54 1 91 1 34 1 169 1 224 1 114 1 64 2 251 1 286 1 309 2 126 1 58 1 
245 1 41 1 29 1 234 1 343 1 207 2 91 1 34 1 224 1 114 1 64 2 251 1 357 2 286 1 126 1 180 1 58 1 310 1 
41 1 296 1 234 2 207 2 343 2 169 1 91 1 114 1 64 4 11 1 245 2 29 1 34 1 54 1 224 2 251 1 357 2 309 2 286 1 126 1 180 1 58 1 
41 1 296 1 234 2 207 2 343 2 169 1 114 1 64 4 11 1 245 2 29 1 34 1 54 1 224 2 251 1 357 2 309 2 286 1 126 1 180 1 58 1 
290 1 109 1 61 1 187 1 207 2 114 1 64 2 210 1 273 1 116 1 278 1 215 1 71 1 16 1 18 1 157 1 77 1 53 1 34 1 198 1 251 1 357 1 226 1 358 1 309 1 286 1 126 1 58 1 
233 1 290 1 86 1 61 1 264 1 187 1 207 2 114 1 64 2 210 1 273 1 116 1 278 1 215 1 71 1 18 1 157 1 77 1 53 1 34 1 198 1 251 1 357 1 226 1 309 1 286 1 126 1 58 1 
41 1 296 1 234 2 207 2 343 2 169 1 114 1 64 4 238 1 11 1 245 2 29 1 34 1 54 1 224 2 251 1 357 2 309 2 286 1 126 1 180 1 58 1 
290 1 109 1 61 1 41 1 234 2 296 1 343 2 207 2 169 1 114 1 64 4 210 1 116 1 11 1 278 1 215 1 193 1 71 1 245 2 16 1 29 1 157 1 77 1 54 1 53 1 34 1 224 2 357 2 333 1 251 1 226 1 358 1 309 2 286 1 180 1 126 1 58 1 
61 1 41 1 296 1 234 1 207 2 343 1 112 1 169 1 318 1 114 1 64 3 238 1 11 1 95 1 245 1 76 1 140 1 54 1 34 1 53 1 224 1 357 1 251 1 286 1 309 2 180 1 126 1 58 1 127 1 
128 1 312 1 41 3 296 3 315 1 207 4 111 1 169 3 26 1 114 2 64 19 92 1 135 1 67 2 214 2 11 3 138 2 245 6 121 1 177 1 29 3 54 3 251 2 357 10 162 1 81 1 309 9 126 2 180 3 58 2 
128 2 312 1 41 2 296 3 207 6 111 1 315 2 145 1 4 1 169 3 114 3 64 26 319 1 150 2 212 1 135 2 67 2 214 1 11 3 73 1 138 4 245 4 177 1 29 2 54 2 35 1 357 12 251 3 162 1 81 2 309 14 126 3 180 2 58 3 
128 3 312 1 41 5 296 5 315 3 207 6 111 1 145 1 298 1 4 1 169 4 26 1 114 3 64 41 133 1 319 1 150 1 92 1 212 1 135 2 67 4 214 1 11 4 175 1 73 1 138 4 245 8 177 1 29 4 54 4 100 1 35 1 251 3 357 21 163 1 162 1 165 1 81 1 309 20 36 1 126 3 180 4 58 3 
128 3 312 1 41 4 296 5 315 3 207 8 111 1 145 1 298 1 4 1 169 4 26 1 114 4 64 38 133 1 319 1 150 2 92 1 212 1 135 2 67 4 214 1 11 4 175 1 73 1 138 4 245 7 177 1 29 4 54 3 100 1 35 1 251 4 357 18 163 1 162 1 165 1 81 1 309 20 36 1 126 4 180 3 58 4 
128 4 312 1 41 8 296 8 315 2 207 4 111 1 145 1 4 1 169 7 114 2 64 52 133 1 319 1 150 1 92 2 212 1 135 1 67 4 214 1 11 7 175 1 279 2 73 1 138 4 245 14 177 1 29 7 54 7 100 1 35 1 251 2 357 25 163 1 162 1 165 1 81 1 309 27 36 1 126 2 180 7 58 2 
142 1 125 1 321 1 27 1 134 1 287 1 342 1 78 1 19 1 231 1 
22 1 186 1 
125 1 321 1 27 1 134 1 87 1 204 1 182 1 19 1 231 1 
353 1 185 1 342 1 78 1 19 1 33 2 332 1 79 1 55 1 308 1 125 1 5 1 321 1 134 1 27 1 8 1 287 1 231 1 
353 1 185 1 342 1 78 1 19 1 33 2 332 1 79 1 55 1 308 1 125 1 5 1 321 1 134 1 27 1 8 1 287 1 231 1 
353 1 185 1 342 1 78 1 19 1 33 2 332 1 79 1 55 1 308 1 125 1 5 1 321 1 134 1 27 1 8 1 287 1 231 1 
302 1 254 1 228 1 
302 1 254 1 228 1 
183 1 317 1 
228 1 183 1 317 1 
49 1 206 1 
185 1 61 2 205 1 186 1 206 1 168 1 89 1 318 2 5 1 321 1 27 1 134 1 324 1 13 1 49 1 219 1 76 2 19 1 53 2 33 1 79 1 308 1 198 1 22 1 125 1 127 2 231 1 
302 1 254 1 
228 1 183 1 317 1 
290 1 129 1 294 1 61 2 266 1 207 2 114 1 64 2 210 2 238 1 7 1 66 1 273 1 116 2 94 2 215 2 278 2 71 1 243 1 18 1 157 2 223 1 34 1 53 2 143 1 251 1 357 1 199 1 226 2 286 1 309 1 181 1 126 1 127 2 58 1 258 1 
193 1 291 1 108 1 40 1 71 1 246 1 124 1 195 2 132 1 210 2 173 1 226 1 116 2 229 1 256 1 38 1 152 1 239 1 278 2 
241 1 291 1 108 1 40 1 71 1 124 1 195 2 132 1 210 1 173 1 226 1 116 1 229 1 38 1 152 1 239 1 278 1 
291 1 292 1 71 1 337 1 246 1 341 1 157 1 187 1 159 1 210 1 226 1 116 1 215 1 278 1 
291 1 108 1 40 1 71 1 246 1 124 1 195 2 132 1 210 1 173 1 226 1 116 1 229 1 256 1 38 1 152 1 239 1 278 1 
176 1 
290 1 61 3 109 1 187 1 131 1 207 2 114 1 318 2 64 1 210 1 273 1 116 1 278 1 215 1 71 1 76 2 16 1 140 2 157 1 99 1 77 1 53 3 34 1 198 1 357 1 251 1 358 1 226 1 286 1 126 1 58 1 127 2 
327 1 353 4 336 1 2 1 62 1 354 2 248 2 356 1 272 2 163 1 211 2 151 4 6 2 322 1 153 1 
353 1 293 1 272 1 6 1 57 1 141 1 153 1 
185 1 336 1 62 1 2 1 299 1 147 1 272 1 151 1 5 1 6 1 10 1 303 1 153 1 327 1 353 2 248 1 56 1 
2 4 41 2 169 2 208 1 272 2 210 3 5 5 211 6 6 8 9 2 274 2 10 3 322 1 11 2 215 6 278 3 327 4 330 2 331 1 283 1 101 1 23 2 226 2 284 2 57 1 105 2 180 2 107 3 232 1 290 1 293 1 185 5 336 4 62 4 296 2 187 1 347 2 115 2 151 12 116 3 303 5 153 9 193 1 194 2 353 8 71 1 123 1 354 6 157 1 248 6 356 2 259 2 
144 1 128 1 185 1 336 2 62 2 2 2 41 2 296 2 315 1 145 1 4 1 169 2 191 1 319 1 272 2 347 1 5 1 151 6 211 5 212 1 6 5 9 2 303 1 10 1 322 1 67 1 11 2 153 8 327 2 353 5 354 5 248 3 356 1 35 1 180 2 
185 1 336 1 61 1 62 1 2 1 41 1 314 1 296 2 131 1 268 1 318 1 133 1 347 1 5 1 6 2 9 2 175 1 153 2 70 1 327 1 74 1 76 1 140 1 53 1 225 1 165 1 104 1 127 1 
327 1 293 1 353 1 336 1 2 1 62 1 272 1 6 1 57 1 153 1 
353 5 41 2 296 2 354 5 248 5 169 2 347 1 211 5 151 10 6 5 9 2 105 1 180 2 11 2 153 5 
353 1 185 1 272 1 5 1 303 1 10 1 
292 1 185 3 336 1 62 2 2 2 263 1 341 1 110 1 187 2 301 1 210 4 5 3 6 2 116 4 303 4 10 2 322 2 153 2 215 1 278 4 327 2 304 1 71 1 50 1 123 2 157 1 331 1 356 2 226 1 
270 1 27 1 231 1 
15 1 27 1 206 1 78 1 231 1 
270 1 27 1 231 1 
270 1 27 1 231 1 
27 1 88 1 231 1 
27 1 88 1 231 1 
27 1 88 1 231 1 
27 1 231 1 
321 1 19 1 
245 3 41 1 296 1 29 2 207 4 54 1 114 2 64 8 100 1 133 1 357 4 251 2 150 1 163 1 165 1 309 4 36 1 126 2 58 2 175 1 
245 2 41 1 29 2 296 1 141 1 100 1 64 6 357 3 133 1 163 1 165 1 309 3 36 1 175 1 
14 1 245 2 41 1 29 1 296 1 207 2 169 1 54 1 114 1 64 4 357 2 251 1 309 2 180 1 126 1 11 1 58 1 
128 1 245 2 41 1 29 1 296 1 315 1 169 1 54 1 64 7 357 4 92 1 309 3 67 2 180 1 11 1 
128 2 339 1 41 3 296 3 207 4 169 2 114 2 64 23 133 1 150 2 92 1 67 2 11 2 175 2 279 1 245 9 29 5 54 4 100 1 357 12 251 2 163 1 165 2 309 11 36 1 255 1 180 2 126 2 58 2 
64 1 357 1 67 1 
128 1 64 1 309 1 
14 1 245 3 41 1 296 1 29 2 207 2 169 1 54 1 114 1 64 6 251 1 357 3 309 3 126 1 105 1 180 1 11 1 58 1 
128 1 41 2 296 2 315 1 207 2 145 1 4 1 169 2 114 1 64 12 319 1 212 1 67 1 11 2 245 2 29 1 54 1 35 1 357 6 251 1 162 1 309 6 126 1 180 2 58 1 
245 2 41 1 296 1 29 1 54 1 64 6 133 1 357 3 165 1 309 3 175 1 
339 1 245 2 29 1 207 2 54 1 114 1 100 1 64 3 357 2 251 1 150 1 165 1 309 1 36 1 126 1 58 1 175 1 
70 1 245 5 41 2 29 3 296 2 207 2 54 2 114 1 64 10 251 1 357 5 133 1 162 1 165 2 309 5 126 1 58 1 175 2 
245 1 296 1 207 2 169 1 54 1 114 1 64 2 251 1 162 1 309 2 126 1 58 1 
245 2 41 1 29 1 296 1 207 2 169 1 54 1 114 1 64 4 357 2 251 1 162 1 309 2 180 1 126 1 11 1 58 1 
339 1 245 2 29 1 207 6 54 1 26 1 114 3 64 3 357 2 251 3 150 1 162 1 165 1 309 1 126 3 58 3 175 1 
128 3 339 1 85 1 41 5 296 5 315 1 207 10 269 1 169 3 26 1 114 5 64 34 133 2 150 2 92 1 67 4 11 3 175 3 14 1 245 12 29 7 54 5 100 1 357 18 251 5 163 1 253 1 162 1 165 3 309 16 36 1 126 5 180 3 58 5 
128 1 41 1 296 1 315 1 207 2 114 1 64 8 319 1 133 1 67 1 175 1 245 2 29 2 100 1 357 4 251 1 163 1 162 1 165 1 309 4 36 1 126 1 58 1 
128 1 41 1 296 2 315 1 207 4 169 1 114 2 64 11 133 1 319 1 92 1 67 2 11 1 175 1 14 1 245 3 29 2 54 1 100 1 357 5 251 2 163 1 162 1 165 1 309 6 36 1 126 2 58 2 
128 1 41 3 296 3 315 1 207 6 145 1 4 1 169 2 114 3 64 19 133 1 319 1 150 1 212 1 67 1 11 2 175 1 14 1 245 4 29 3 54 1 100 1 35 1 357 10 251 3 163 1 162 1 165 1 309 9 36 1 126 3 180 2 58 3 
128 1 41 2 296 3 315 1 207 6 145 1 4 1 169 2 114 3 64 17 133 1 319 1 150 1 212 1 67 1 11 2 175 1 14 1 245 5 29 3 54 2 100 1 35 1 357 7 251 3 163 1 162 1 165 1 309 10 36 1 126 3 180 1 58 3 
128 1 41 1 296 1 315 1 207 2 114 1 64 8 319 1 133 1 67 1 175 1 245 2 29 2 100 1 357 4 251 1 163 1 162 1 165 1 309 4 36 1 126 1 58 1 
128 1 41 2 296 2 315 1 207 2 145 1 4 1 169 2 114 1 64 12 319 1 212 1 67 1 11 2 245 2 29 1 54 1 35 1 357 6 251 1 162 1 309 6 126 1 180 2 58 1 
128 1 41 2 296 3 315 1 207 8 145 1 4 1 169 2 114 4 64 18 133 1 319 1 150 2 212 1 67 1 11 2 175 1 14 1 245 5 29 3 54 2 100 1 35 1 357 8 251 4 163 1 162 1 165 1 309 10 36 1 126 4 180 1 58 4 
128 1 41 2 296 3 315 1 207 8 145 1 4 1 169 3 114 4 26 1 64 16 319 1 150 2 212 1 67 1 11 3 245 6 29 3 54 3 35 1 357 7 251 4 162 1 309 9 126 4 180 2 58 4 
245 6 41 1 29 3 296 1 54 3 64 7 100 2 357 4 133 1 165 3 309 3 36 1 175 3 
128 1 41 2 296 3 315 1 207 8 145 1 4 1 169 2 114 4 26 1 64 18 133 1 319 1 150 2 212 1 67 1 11 2 175 1 245 4 29 3 54 1 100 1 35 1 357 8 251 4 163 1 162 1 165 1 309 10 36 1 126 4 180 1 58 4 
260 1 305 1 198 1 320 1 61 1 127 1 53 1 
260 1 305 1 61 1 75 1 53 1 198 1 209 1 320 1 102 1 82 1 127 1 47 1 
292 1 71 1 210 1 226 1 116 1 341 1 157 1 187 1 141 1 215 1 278 1 
290 1 71 1 61 2 76 1 16 1 157 1 281 1 187 1 77 1 53 2 318 1 198 1 210 1 226 1 116 1 127 1 215 1 278 1 
351 1 290 2 71 1 74 1 61 1 76 1 16 1 123 1 157 2 281 1 77 1 53 1 318 1 210 1 65 1 226 1 178 1 116 1 349 1 127 1 215 3 278 1 
351 1 290 2 71 1 74 1 61 1 86 1 76 1 123 1 157 2 281 1 77 1 53 1 318 1 210 1 65 1 226 1 178 1 116 1 349 1 127 1 215 3 278 1 
185 1 61 1 314 1 131 1 268 1 318 1 272 1 210 1 5 1 116 1 215 1 278 1 353 1 74 1 76 1 140 1 123 1 355 1 53 1 104 1 127 1 107 1 
185 1 61 1 314 1 131 1 268 1 318 1 272 1 210 1 5 1 116 1 274 1 215 1 278 1 353 1 74 1 76 1 140 1 123 1 53 1 104 1 127 1 107 1 
71 1 210 1 226 1 116 1 98 1 278 1 
193 1 290 2 129 2 71 2 340 1 187 2 157 3 223 1 283 1 143 1 210 3 237 1 199 2 226 4 116 3 181 1 137 1 278 3 215 3 
41 1 42 1 207 4 318 1 210 1 133 1 175 1 278 1 215 1 16 1 281 1 53 2 224 1 100 1 333 1 226 1 286 2 58 2 290 1 109 1 61 2 296 1 234 1 343 1 114 2 64 6 238 1 116 1 193 1 71 1 245 2 76 1 29 2 157 1 77 1 34 2 198 2 251 2 357 3 358 1 163 1 165 1 309 3 36 1 126 2 127 1 258 1 
293 1 185 3 336 2 62 2 2 2 187 1 168 1 272 1 210 1 5 3 115 1 6 1 116 1 274 1 303 2 10 1 153 1 278 1 215 2 327 2 353 1 194 1 330 1 331 1 284 1 57 1 107 1 259 1 
193 1 290 1 194 1 71 1 98 1 157 1 208 1 283 1 210 2 226 2 116 2 278 2 215 2 
193 1 292 1 71 1 341 1 187 1 157 1 149 1 210 4 226 1 116 4 257 1 278 4 215 1 
290 1 129 1 71 1 123 1 157 1 223 1 210 2 199 1 226 2 179 1 116 2 181 1 278 2 215 1 
71 1 210 1 226 1 116 1 38 1 124 1 187 1 195 1 239 1 278 1 
193 1 290 1 129 1 71 1 157 2 223 1 143 1 210 2 199 1 226 2 7 1 116 2 229 1 181 1 278 2 215 2 
193 1 290 1 129 1 71 1 187 1 157 2 223 1 143 1 210 2 199 1 226 2 116 2 181 1 278 2 137 1 215 2 
193 1 290 1 129 1 71 1 187 1 157 2 223 1 197 1 143 1 210 2 199 1 226 2 116 2 181 1 278 2 215 2 
290 1 71 1 61 2 86 1 76 1 157 1 281 1 187 1 77 1 53 2 318 1 198 1 210 1 226 1 116 1 127 1 215 1 278 1 
290 1 129 1 71 1 123 1 157 1 283 1 210 1 237 1 199 1 226 2 116 1 278 1 215 1 
189 1 170 1 243 1 61 1 66 1 266 1 127 1 196 1 53 1 
161 1 196 1 335 1 
189 1 171 1 170 1 198 1 196 1 
240 1 185 1 74 1 168 1 196 1 297 1 189 1 170 1 171 1 161 1 65 1 5 1 178 1 326 1 335 1 
146 1 190 1 44 1 352 1 249 1 334 3 262 1 276 3 106 1 188 1 277 1 
311 1 285 1 262 1 167 1 
262 1 188 1 
352 1 262 1 188 1 141 1 
146 1 352 1 249 1 334 1 262 1 276 1 188 1 
0 1 276 1 30 1 
146 1 190 1 44 2 352 1 249 1 334 3 220 1 164 1 262 1 276 3 156 1 188 1 
146 1 352 1 249 1 334 2 262 1 174 1 276 2 188 1 277 1 
146 1 190 1 249 1 236 1 334 1 285 1 262 1 276 1 38 1 195 1 152 1 
146 1 190 1 249 1 334 1 262 1 276 1 188 1 
146 1 190 1 352 1 249 1 334 1 276 1 188 2 
146 2 190 1 172 1 249 2 334 2 262 1 130 1 118 1 276 2 188 1 
352 1 262 2 97 1 188 1 190 1 146 1 249 1 334 3 285 1 276 3 167 1 106 1 277 2 
352 1 40 1 262 1 124 1 188 1 195 2 190 1 146 1 344 1 249 1 334 2 276 2 38 1 152 1 277 1 
352 1 262 2 188 1 190 1 146 2 20 1 249 2 334 4 285 1 174 1 276 4 167 1 277 2 
146 1 190 1 352 1 249 1 334 1 262 1 276 1 188 1 
311 1 352 2 220 1 262 3 188 2 146 1 44 1 249 1 334 4 164 1 285 1 276 4 167 1 277 2 
352 1 262 1 188 1 307 1 190 1 146 1 249 1 250 1 334 2 276 2 277 1 12 1 
352 1 220 2 262 1 188 1 190 1 146 1 44 2 249 1 334 3 164 1 276 3 288 1 
329 1 280 1 262 2 265 2 
146 1 190 1 249 1 252 1 334 1 276 1 
146 1 190 1 352 1 249 1 334 2 262 1 276 2 106 1 188 1 277 1 
68 1 
146 1 190 1 352 1 249 1 334 1 262 1 276 1 188 1 

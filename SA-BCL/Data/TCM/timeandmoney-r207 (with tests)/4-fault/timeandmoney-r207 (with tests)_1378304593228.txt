#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (33,338) 43 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (118,126) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (30,92,145) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (118,126) (118,126) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 111 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 214 162 50 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 214 162 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 111 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 272 154 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (33,338) (33,338) (176,331) 219 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (33,338) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (33,338) (33,338) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (118,126) (118,126) 266 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (33,338) 43 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 134 (81,321) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 134 (81,321) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 134 (245,300) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 134 (245,300) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
173 9 48 1 177 2 297 2 6 1 128 6 85 2 7 2 55 1 86 1 132 2 234 3 62 1 61 1 138 1 19 1 323 5 325 1 200 1 22 1 153 1 156 4 208 1 255 1 115 2 35 9 37 2 120 1 
173 9 177 2 48 1 297 2 6 1 128 6 85 2 7 2 55 1 86 1 132 2 234 3 62 1 61 1 138 1 19 1 323 5 325 1 200 1 22 1 153 1 156 4 208 1 255 1 115 2 35 9 37 2 120 1 
173 10 177 2 48 1 297 2 6 1 128 7 85 2 7 2 55 1 86 1 132 2 234 4 62 1 61 1 138 1 19 1 323 6 325 1 200 1 22 1 153 1 156 5 208 1 255 1 115 2 35 10 37 2 120 1 
173 7 177 2 48 1 297 2 6 1 128 4 85 2 7 2 55 1 132 1 234 2 62 1 61 1 138 1 19 1 323 4 325 1 200 1 22 1 153 1 156 3 208 1 255 1 115 2 35 7 37 2 120 1 
173 4 323 3 325 1 200 1 177 1 153 1 297 1 156 2 128 3 7 1 55 1 86 1 132 2 255 1 234 1 115 1 37 1 35 4 
323 1 173 2 325 1 101 1 153 1 297 1 8 1 85 1 7 1 208 1 255 1 115 1 138 1 35 2 37 1 171 1 
173 3 323 2 325 1 153 1 297 2 156 1 128 1 85 1 255 1 234 1 115 2 61 1 35 3 
173 9 177 1 297 2 128 7 85 1 55 1 7 1 132 2 86 1 230 1 234 3 61 1 313 1 19 1 323 5 325 1 200 1 153 1 156 4 255 1 115 2 35 9 120 1 37 1 
173 9 177 1 297 2 128 7 85 1 55 1 7 1 132 2 86 1 230 1 234 3 61 1 313 1 19 1 323 5 325 1 200 1 153 1 156 4 255 1 115 2 35 9 120 1 37 1 
111 1 16 1 217 1 
108 2 94 1 217 1 
63 2 186 2 130 1 
43 1 223 1 228 1 84 2 130 1 186 1 63 1 15 1 33 1 32 2 289 2 240 1 
126 1 63 1 186 1 130 1 
20 1 145 1 21 1 178 1 244 1 152 1 249 1 129 1 330 1 209 1 92 1 30 1 16 1 217 1 
145 1 63 1 186 1 
178 1 92 1 104 1 74 1 107 1 
178 2 92 2 104 1 51 1 16 1 217 1 259 1 107 1 
178 1 92 1 104 1 
126 1 178 1 92 1 63 1 118 1 186 1 130 1 107 1 
217 1 
178 2 92 2 104 1 16 1 217 1 259 1 25 1 107 1 
221 1 123 2 4 1 265 1 178 5 202 1 104 2 82 2 282 2 182 1 229 1 328 1 107 2 304 1 92 5 93 1 16 1 217 1 259 1 
223 1 312 1 63 1 289 1 32 1 79 1 84 1 
111 1 
20 1 278 1 21 1 152 1 249 1 186 1 303 1 210 1 91 1 63 1 
20 1 21 1 263 1 180 1 152 1 249 1 186 1 330 1 210 1 91 1 312 1 63 4 79 2 197 1 
63 1 
63 3 79 1 186 1 
63 1 
278 1 91 1 63 1 186 1 
91 1 312 1 63 2 79 1 186 1 
20 1 21 1 180 1 152 1 249 1 330 1 210 1 63 1 79 1 
312 1 63 1 79 1 
91 1 63 1 186 1 
223 1 289 1 32 1 84 1 
223 1 289 1 32 1 84 1 
99 1 2 1 44 1 257 1 279 1 193 1 340 2 131 1 
63 1 137 1 
10 1 167 1 
10 1 167 1 
267 1 286 1 
267 1 286 1 
267 1 286 1 
10 1 125 1 167 1 
10 1 167 1 239 1 
10 2 267 1 167 2 286 1 315 1 160 1 
10 1 125 1 167 1 
10 1 125 1 167 1 
10 1 68 1 167 1 
10 1 68 1 167 1 
10 1 68 1 167 1 
121 1 10 1 178 1 92 1 214 1 167 1 50 1 52 1 162 1 
121 1 10 1 214 1 167 1 52 1 162 1 
177 1 37 1 7 1 
37 1 7 1 8 1 
295 1 177 2 226 1 269 1 37 3 8 1 
295 1 177 1 311 1 269 1 37 2 8 1 
295 1 177 1 269 2 37 2 8 1 
123 1 222 1 3 2 178 5 5 2 82 1 127 1 229 2 273 2 92 5 93 1 94 1 194 1 16 1 320 1 98 1 324 1 147 1 104 1 202 3 282 1 246 1 107 4 108 3 26 1 27 1 334 1 335 1 287 1 78 1 217 2 259 1 
174 1 123 2 4 1 178 9 5 6 82 2 229 6 273 6 92 9 190 1 93 1 94 3 194 3 16 1 320 3 98 3 324 1 243 1 104 6 202 8 282 2 246 2 74 5 107 7 108 9 250 5 253 1 334 3 335 4 284 1 337 1 287 3 78 2 217 5 259 1 
222 1 123 1 3 1 4 1 178 3 82 1 5 2 229 2 273 2 92 3 94 2 194 1 16 1 320 1 98 1 147 1 202 3 282 1 246 1 107 2 108 4 334 1 335 1 287 1 78 1 217 3 
123 1 222 1 3 2 4 1 178 4 5 4 82 1 229 4 273 4 92 4 94 3 194 2 16 1 320 2 98 2 147 1 243 1 202 5 282 1 246 1 107 3 108 7 253 1 334 2 335 2 284 1 287 2 78 1 217 4 
144 1 111 1 71 1 
144 1 285 1 
14 1 
144 1 327 1 142 1 
144 1 57 1 
144 1 142 1 
144 3 333 1 327 1 71 2 301 1 142 1 
42 4 100 1 151 1 204 1 299 3 72 1 332 3 90 1 334 1 256 1 235 2 339 1 287 1 237 1 316 7 96 1 18 2 
42 4 100 1 151 1 204 1 299 3 72 1 332 3 90 1 334 1 256 1 235 2 339 1 287 1 237 1 316 7 96 1 18 2 
42 4 100 1 124 1 151 1 204 1 299 3 72 1 332 3 90 1 334 1 256 1 235 2 339 1 287 1 237 1 316 7 96 1 18 2 
42 16 2 1 44 1 45 1 83 1 299 10 90 2 89 4 88 1 235 5 193 1 237 1 316 31 194 3 18 3 96 2 320 3 98 3 100 2 279 1 151 5 203 1 204 1 72 1 252 3 332 15 334 4 256 1 116 1 339 2 340 2 287 4 291 1 293 1 
218 1 42 5 2 2 44 2 299 4 90 1 235 3 193 2 237 1 316 9 318 1 18 2 96 1 100 1 279 2 151 1 72 1 332 4 334 1 256 1 339 1 287 1 340 4 291 1 
173 2 40 1 177 1 226 1 268 1 297 1 184 1 128 1 302 1 7 1 84 1 85 1 8 1 11 1 309 1 17 1 141 1 65 1 323 1 325 1 102 1 148 1 153 1 283 1 255 1 115 1 289 1 32 1 35 2 37 2 
173 3 177 1 226 1 268 1 297 1 184 1 128 2 302 1 7 1 84 1 54 1 85 1 8 1 308 1 11 1 232 1 309 1 17 1 141 1 65 1 323 1 325 1 102 1 283 1 255 1 115 1 289 1 32 1 35 3 37 2 
173 2 177 1 226 1 268 1 184 1 128 2 302 1 85 1 84 1 54 1 8 1 7 1 232 1 309 1 17 1 141 1 65 1 323 1 325 1 283 1 255 1 289 1 32 1 35 2 37 2 
173 1 41 1 175 1 223 1 297 1 268 2 84 1 85 2 306 1 308 1 309 1 64 1 17 1 141 2 65 2 142 1 144 1 251 1 115 1 289 1 32 1 216 1 35 1 
173 1 177 1 226 1 268 1 297 1 184 1 302 1 7 1 84 1 54 1 85 1 8 1 11 1 309 1 17 1 141 1 65 1 102 1 148 1 153 1 283 1 115 1 289 1 32 1 35 1 37 2 
254 1 
1 1 262 1 178 5 82 1 183 1 84 2 187 4 12 1 274 2 92 5 93 1 94 2 16 1 17 1 20 1 21 1 103 1 104 6 202 2 282 1 108 2 209 1 215 2 30 1 288 1 216 1 32 2 289 2 34 2 217 2 290 2 119 2 38 1 123 1 223 2 227 1 229 2 129 1 58 1 231 2 59 2 309 1 64 1 317 1 142 1 144 1 145 1 242 1 150 1 244 1 152 1 246 1 249 1 330 1 259 3 
1 1 262 1 178 3 227 1 129 1 187 2 92 3 317 1 20 1 145 1 21 1 104 2 244 1 152 1 249 1 330 1 25 1 209 1 30 1 288 1 290 1 259 1 
1 1 262 1 178 3 227 1 129 1 187 3 92 3 274 1 317 1 16 1 20 1 145 1 21 1 104 1 244 1 152 1 249 1 330 1 25 1 209 1 30 1 288 1 217 1 259 1 
1 1 262 1 178 3 227 1 129 1 187 3 92 3 274 1 317 1 16 1 20 1 145 1 21 1 104 2 244 1 152 1 249 1 25 1 330 1 209 1 30 1 215 1 288 1 290 1 217 1 259 1 
262 1 1 1 178 5 82 1 187 6 12 1 92 5 274 4 93 1 94 2 16 5 20 1 21 1 104 7 202 1 282 1 25 1 209 1 212 1 215 4 30 1 288 1 34 2 290 4 217 5 119 2 123 1 227 1 229 1 129 1 231 2 59 2 310 1 317 1 145 1 244 1 150 1 152 1 70 1 326 1 249 1 330 1 169 1 259 3 
262 1 1 1 178 4 82 1 187 4 12 1 92 4 274 2 93 1 94 2 16 1 20 1 21 1 202 1 104 4 282 1 209 1 108 2 30 1 215 2 288 1 34 2 119 2 290 2 217 2 123 1 227 1 229 1 129 1 231 2 59 2 317 1 145 1 242 1 244 1 150 1 152 1 249 1 330 1 259 2 
1 1 262 1 123 1 178 4 82 1 227 1 229 1 129 1 187 4 231 2 59 2 12 1 310 1 274 2 92 4 93 1 94 2 16 1 317 1 20 1 145 1 21 1 104 4 202 1 150 1 244 1 152 1 282 1 326 1 249 1 330 1 209 1 212 1 215 2 30 1 288 1 34 2 217 1 290 2 119 2 259 2 
1 1 262 1 123 1 178 4 82 1 227 1 229 1 129 1 187 4 231 2 59 2 12 1 310 1 274 2 92 4 93 1 94 2 16 1 317 1 20 1 145 1 21 1 104 4 202 1 150 1 244 1 152 1 282 1 326 1 249 1 330 1 209 1 212 1 215 2 30 1 288 1 34 2 217 1 290 2 119 2 259 2 
1 1 262 1 123 1 46 1 178 4 82 1 227 1 229 1 129 1 187 4 231 2 274 2 92 4 93 1 16 1 195 2 317 1 276 1 20 1 145 1 21 1 104 4 202 1 150 1 244 1 152 1 282 1 249 1 330 1 108 2 209 1 212 1 110 1 213 2 215 2 30 1 288 1 217 1 290 2 119 2 259 2 
1 1 262 1 123 1 178 4 82 1 227 1 229 1 129 1 187 5 231 2 59 2 12 1 310 1 92 4 274 3 93 1 94 2 16 1 317 1 20 1 145 1 21 1 202 1 104 5 150 1 244 1 282 1 152 1 326 1 249 1 330 1 209 1 212 1 30 1 215 3 288 1 34 2 169 1 217 1 119 2 290 3 259 2 
1 1 262 1 123 1 178 4 82 1 227 1 229 1 129 1 187 5 231 2 59 2 12 1 310 1 92 4 274 3 93 1 94 2 16 1 317 1 20 1 145 1 21 1 202 1 104 5 150 1 244 1 282 1 152 1 326 1 249 1 330 1 209 1 212 1 30 1 215 3 288 1 34 2 169 1 217 1 119 2 290 3 259 2 
262 1 1 1 178 4 82 1 187 4 92 4 274 2 93 1 195 2 16 1 20 1 21 1 202 1 104 4 282 1 209 1 108 2 110 1 213 2 30 1 215 2 288 1 119 2 290 2 217 1 123 1 227 1 229 1 129 1 231 2 317 1 145 1 242 1 244 1 150 1 152 1 249 1 330 1 259 2 
42 2 99 1 2 1 100 1 44 1 279 1 299 1 72 1 131 1 90 1 334 1 111 1 257 1 256 1 235 1 193 1 237 1 340 2 316 2 18 1 
42 1 99 1 2 1 44 1 279 1 154 1 252 1 89 1 332 1 272 1 257 1 29 1 193 1 340 2 316 2 
42 1 99 1 2 1 44 1 279 1 9 1 159 1 332 1 113 1 257 1 60 1 312 1 29 1 193 1 63 1 340 2 316 2 79 1 
99 1 219 1 2 1 176 1 44 1 223 1 279 1 84 1 332 1 113 1 257 1 312 1 29 1 193 1 338 1 63 1 340 2 33 1 316 1 289 1 32 1 79 1 
42 1 99 1 2 1 44 1 223 1 279 1 84 1 9 1 257 1 258 1 193 1 136 1 340 2 316 1 32 1 289 1 
42 1 2 1 44 1 186 1 91 1 233 1 193 1 63 1 194 1 316 2 320 1 98 1 99 1 279 1 332 1 334 1 257 1 29 1 340 2 287 1 
98 1 99 1 42 1 2 1 44 1 279 1 131 1 334 1 257 1 193 1 77 1 340 2 316 1 
99 1 2 1 44 1 279 1 131 1 332 1 257 1 193 1 340 2 287 1 316 1 320 1 342 1 
98 1 99 1 42 1 2 1 44 1 279 1 131 1 332 1 334 1 257 1 193 1 287 1 340 2 316 2 194 1 320 1 
98 1 99 1 42 1 2 1 44 1 279 1 334 1 257 1 193 1 77 1 136 1 340 2 316 1 
99 1 2 1 44 1 279 1 332 1 257 1 193 1 136 1 340 2 287 1 316 1 320 1 342 1 
98 1 99 1 42 1 2 1 44 1 279 1 332 1 334 1 257 1 193 1 136 1 287 1 340 2 316 2 194 1 320 1 
98 1 99 1 42 1 2 1 44 1 279 1 332 1 334 1 257 1 193 1 287 1 340 2 194 1 316 2 320 1 
223 1 33 1 289 1 32 1 84 1 
223 1 205 1 289 1 32 1 84 1 
98 1 99 1 42 1 2 1 44 1 279 1 332 1 334 1 257 1 29 1 193 1 287 1 340 2 316 2 194 1 320 1 
40 1 338 1 33 1 289 1 32 1 84 1 
42 1 2 1 44 1 186 1 91 1 193 1 63 1 194 1 316 2 320 1 98 1 99 1 279 1 332 1 334 1 257 1 114 1 29 1 340 2 287 1 
0 1 42 4 2 2 44 2 179 1 49 1 83 1 299 2 305 1 89 2 271 1 235 1 193 2 316 9 194 1 318 1 320 1 143 1 98 1 279 2 280 1 151 1 252 1 332 5 334 1 117 1 340 4 287 1 293 1 
0 1 42 4 2 2 44 2 179 1 49 1 83 1 299 2 305 1 89 2 271 1 235 1 193 2 316 9 194 1 318 1 320 1 143 1 98 1 279 2 280 1 151 1 252 1 332 5 334 1 117 1 340 4 287 1 293 1 
0 3 42 24 2 2 44 2 225 1 179 1 49 1 83 2 299 12 185 1 53 1 305 1 90 1 89 4 271 1 235 6 192 1 193 2 237 1 316 46 194 6 318 1 18 1 320 6 66 1 199 1 143 1 98 6 100 1 279 2 280 1 151 6 69 2 72 1 252 4 332 22 334 7 256 1 340 4 287 7 291 1 293 2 
0 1 42 4 2 2 44 2 179 1 49 1 83 1 299 2 305 1 89 2 235 1 193 2 316 9 194 1 318 1 320 1 143 1 98 1 279 2 280 1 151 1 252 1 332 5 334 1 76 1 117 1 340 4 287 1 293 1 
0 3 42 11 2 3 44 3 225 1 179 1 49 1 299 2 83 2 185 1 53 1 305 2 89 2 271 1 235 1 192 1 193 3 316 20 194 2 318 1 320 1 66 1 143 2 199 1 98 2 279 3 280 1 151 1 252 2 332 9 334 2 287 1 340 6 291 2 
261 1 42 1 2 1 44 1 84 2 9 1 270 1 309 1 193 1 316 2 17 1 240 2 142 1 144 1 20 2 99 1 21 2 279 1 329 1 249 2 24 1 332 1 257 1 112 1 113 1 29 1 258 1 31 1 340 2 289 2 32 2 
172 1 40 1 102 1 177 1 226 1 268 1 283 1 302 1 7 1 8 1 54 1 84 2 309 1 28 1 32 2 289 2 238 1 37 2 17 1 
102 1 177 1 226 1 268 1 283 1 298 1 302 1 7 1 8 1 54 1 84 1 309 1 32 1 289 1 238 1 37 2 17 1 
144 1 223 1 268 1 84 1 251 1 309 1 28 1 64 1 32 1 289 1 216 1 17 1 292 1 142 1 
172 1 102 1 177 1 226 1 268 1 283 1 302 1 7 1 8 1 54 1 84 1 28 1 309 1 32 1 289 1 238 1 37 2 17 1 
294 1 
304 1 111 1 221 1 202 1 16 1 229 1 217 1 
123 1 178 1 82 1 229 1 59 1 12 1 92 1 93 1 94 1 16 1 202 1 104 1 282 1 108 1 34 1 217 2 259 1 
178 5 82 4 5 6 84 3 87 2 273 6 92 5 93 4 94 6 194 2 16 2 17 4 98 2 202 9 104 5 282 4 207 2 209 2 108 12 211 1 285 3 287 2 32 3 289 3 217 8 40 1 221 1 123 4 223 1 220 2 229 8 304 1 57 2 58 1 309 3 140 2 320 2 321 2 142 3 144 10 241 1 67 1 246 2 155 1 327 3 71 2 73 2 163 2 331 2 333 1 334 2 168 1 80 2 259 3 
122 1 123 2 178 1 225 1 181 1 5 5 82 2 83 1 229 5 185 1 53 1 58 1 89 1 273 5 92 1 93 2 94 3 194 2 16 2 320 2 66 1 199 1 98 2 104 1 202 8 282 2 246 1 73 1 207 2 108 6 252 1 334 2 287 2 217 5 259 1 
100 1 123 1 126 1 178 1 266 1 202 2 82 1 282 1 229 1 186 1 130 1 207 2 90 1 334 1 310 1 92 1 93 1 63 1 287 1 237 1 118 1 
304 1 221 1 123 1 202 1 82 1 93 1 282 1 16 1 229 1 217 1 
98 2 202 5 5 5 229 5 73 1 207 2 108 10 334 2 273 5 94 5 140 1 287 2 194 2 217 5 320 2 
178 1 92 1 104 1 16 1 217 1 259 1 
123 2 223 2 4 1 178 3 82 2 183 1 229 2 84 4 58 2 189 1 309 2 92 3 135 1 93 1 314 1 64 1 17 3 142 2 144 2 241 2 103 1 202 2 104 4 149 1 282 2 246 2 327 1 23 1 211 1 75 1 289 4 32 4 216 1 259 2 
43 1 223 1 63 1 33 1 289 1 32 1 84 1 186 1 130 1 
123 1 202 1 5 2 82 1 282 1 246 1 229 2 108 4 58 1 273 2 93 1 94 2 16 2 18 1 217 4 
121 1 214 1 
121 1 214 1 
121 1 214 1 
121 1 214 1 
121 1 214 1 
121 1 214 1 
121 1 214 1 
121 1 214 1 
10 1 167 1 
42 4 2 1 44 1 83 1 299 2 89 1 90 1 235 2 193 1 237 1 316 8 318 1 18 1 199 1 100 1 279 1 72 1 252 1 332 4 334 1 256 1 287 1 340 2 
42 6 2 2 44 2 83 1 299 3 90 1 89 2 235 2 193 2 237 1 316 11 194 1 318 1 18 1 199 1 98 1 100 1 279 2 151 1 106 1 72 1 252 1 332 5 334 2 256 1 287 1 340 4 293 1 
42 9 2 3 44 3 225 1 83 1 299 4 185 1 53 1 90 1 89 1 235 3 193 3 237 1 316 19 194 2 318 1 18 1 320 2 66 1 199 1 98 2 100 1 279 3 151 1 106 1 72 1 252 1 332 10 334 3 256 1 340 6 287 3 291 1 
42 10 2 3 44 3 225 1 83 1 299 5 185 1 53 1 90 1 89 1 235 3 193 3 237 1 316 17 194 2 318 1 18 1 320 1 66 1 199 1 98 2 100 1 279 3 151 2 106 1 72 1 252 1 332 7 334 3 256 1 340 6 287 2 291 1 
42 4 2 1 44 1 83 1 299 2 89 1 90 1 235 2 193 1 237 1 316 8 318 1 18 1 199 1 100 1 279 1 72 1 252 1 332 4 334 1 256 1 287 1 340 2 
42 6 2 1 44 1 225 1 83 1 299 2 185 1 53 1 89 1 235 1 193 1 316 12 194 2 318 1 320 2 66 1 199 1 98 2 279 1 151 1 252 1 332 6 334 2 340 2 287 2 
42 10 2 4 44 4 225 1 83 1 299 5 185 1 53 1 90 1 89 1 235 3 193 4 237 1 316 18 194 2 318 1 18 1 320 1 66 1 199 1 98 2 100 1 279 4 151 2 106 1 72 1 252 1 332 8 334 3 256 1 340 8 287 2 291 2 
42 9 2 4 44 4 225 1 83 1 299 6 185 1 53 1 89 1 235 3 193 4 316 16 194 3 318 1 320 2 66 1 199 1 98 3 279 4 151 3 252 1 332 7 334 3 340 8 117 1 287 2 291 2 
42 3 100 3 151 3 299 6 72 2 332 4 90 3 334 1 256 1 235 3 287 1 237 1 316 7 
42 10 2 4 44 4 225 1 83 1 299 4 185 1 53 1 90 1 89 1 235 3 193 4 237 1 316 18 194 2 318 1 18 1 320 1 66 1 199 1 98 2 100 1 279 4 151 1 72 1 252 1 332 8 334 3 256 1 340 8 117 1 287 2 291 2 
42 4 2 2 100 1 44 2 279 2 151 1 299 3 72 1 332 4 90 1 334 1 256 1 235 2 193 2 287 1 237 1 340 4 316 8 18 1 291 1 
42 3 100 1 299 2 72 1 332 3 90 1 111 1 334 1 256 1 235 2 237 1 287 1 316 6 18 1 
98 1 42 2 2 1 44 1 279 1 151 1 299 2 106 1 332 2 334 1 235 1 193 1 287 1 340 2 194 1 316 4 320 1 
98 1 42 3 151 1 83 1 299 2 252 1 89 2 332 4 334 1 235 1 287 1 316 7 194 1 320 1 293 1 
42 11 2 2 44 2 299 9 90 2 89 2 272 1 235 5 193 2 237 1 194 2 316 23 18 1 320 2 98 2 100 2 279 2 151 4 69 1 248 1 72 1 252 2 332 12 334 3 256 1 287 3 340 4 291 2 293 1 
332 1 89 1 316 1 
252 1 42 1 316 1 
98 1 42 3 2 1 44 1 279 1 151 1 299 3 106 1 332 3 334 1 235 2 193 1 340 2 140 1 287 1 316 6 194 1 320 1 
42 6 2 1 44 1 225 1 83 1 299 2 185 1 53 1 89 1 235 1 193 1 316 12 194 2 318 1 320 2 66 1 199 1 98 2 279 1 151 1 252 1 332 6 334 2 340 2 287 2 
42 3 100 1 151 1 299 2 332 3 90 1 334 1 235 1 237 1 287 1 316 6 
42 1 100 1 2 1 44 1 279 1 151 1 299 2 248 1 72 1 90 1 332 2 256 1 235 1 193 1 340 2 316 3 291 1 
42 5 2 1 100 2 44 1 279 1 266 1 151 2 299 5 90 2 332 5 334 2 235 3 193 1 340 2 237 1 287 2 316 10 318 1 
98 1 42 2 2 1 44 1 279 1 151 1 299 1 334 1 193 1 340 2 316 2 318 1 
98 1 42 2 2 1 44 1 279 1 151 1 299 2 332 2 334 1 235 1 193 1 287 1 340 2 194 1 316 4 318 1 320 1 
42 1 2 3 100 1 44 3 279 3 151 1 248 1 299 2 332 2 90 1 235 1 193 3 117 1 340 6 316 3 318 1 291 1 
42 16 2 5 45 1 44 5 83 1 299 12 90 3 88 1 89 4 235 7 193 5 237 2 316 34 194 3 318 1 18 1 320 3 98 3 100 3 279 5 203 1 151 5 248 1 106 1 72 1 252 3 332 18 334 5 256 1 117 1 340 10 287 5 291 2 293 1 
303 1 20 1 21 1 180 1 95 1 249 1 330 1 
20 1 21 1 264 1 47 1 180 1 206 1 249 1 330 1 303 1 191 1 95 1 322 1 
144 1 111 1 223 1 309 1 64 1 216 1 289 1 32 1 17 1 84 1 142 1 
144 1 81 1 134 1 223 1 309 1 63 1 327 1 289 1 32 1 79 1 17 1 84 1 142 1 
144 1 241 1 81 1 134 1 309 1 63 1 327 1 289 1 32 1 79 1 17 1 84 1 142 1 
144 1 241 1 134 1 309 1 63 1 245 1 327 1 289 1 32 1 79 1 17 1 84 1 142 1 
223 1 178 2 300 1 84 3 57 1 309 1 92 2 139 1 16 1 17 1 142 1 144 4 241 1 104 1 327 1 71 1 163 1 209 1 285 1 289 3 32 3 170 1 217 1 
144 4 241 1 223 1 178 2 104 1 327 1 71 1 84 3 163 1 209 1 57 1 309 1 92 2 139 1 285 1 32 3 289 3 16 1 217 1 17 1 321 1 142 1 
309 1 289 1 32 1 17 1 84 1 161 1 
144 3 40 1 223 2 149 1 247 1 327 1 54 1 84 7 161 1 56 1 333 1 270 1 309 2 135 1 32 6 289 7 196 1 17 3 240 1 341 1 142 2 
63 1 79 1 
221 1 223 1 123 2 220 1 178 3 82 2 229 1 84 1 304 1 92 3 93 2 16 1 321 1 144 2 202 1 104 2 282 2 71 1 107 1 209 1 331 1 211 1 285 1 289 1 32 1 80 1 217 1 259 1 
144 2 40 1 67 1 327 1 71 1 84 2 161 1 333 1 309 1 32 2 289 2 17 2 142 1 
144 1 40 1 223 1 84 4 309 1 139 1 64 1 32 4 289 4 216 1 17 1 97 1 142 1 
144 1 241 1 149 1 327 1 158 1 84 2 189 1 75 1 309 1 135 1 32 2 289 2 17 2 142 1 
223 1 309 1 289 1 32 1 37 1 17 1 302 1 7 1 8 1 84 1 
144 1 40 1 270 1 309 1 31 1 289 2 32 2 17 1 54 1 84 2 142 1 
144 3 241 1 40 1 223 1 247 1 84 5 270 1 309 2 64 1 216 1 32 4 289 5 196 1 17 2 97 1 142 2 
144 3 241 1 40 1 223 1 247 1 84 5 270 1 309 2 236 1 64 1 216 1 32 4 289 5 17 2 97 1 142 2 
144 1 134 1 223 1 309 1 63 1 245 1 327 1 289 1 32 1 79 1 17 1 84 1 142 1 
144 1 241 1 149 1 327 1 84 1 333 1 309 1 135 1 32 1 289 1 17 2 341 1 142 1 
20 1 164 1 21 1 112 1 105 1 329 1 249 1 157 1 24 1 
39 1 275 1 105 1 
164 1 105 1 157 1 198 1 
164 1 39 1 224 1 178 1 92 1 275 1 105 1 157 1 198 1 107 1 
323 1 325 1 111 1 255 1 
323 1 173 1 325 1 255 1 115 1 297 1 35 1 
173 1 85 1 141 1 
323 1 173 3 325 1 201 1 153 1 297 1 208 2 188 1 255 1 115 1 35 3 36 1 
323 1 173 2 132 1 325 1 255 1 115 1 297 1 128 1 35 2 
173 1 323 1 200 1 177 1 153 1 297 1 156 1 7 1 115 1 35 1 37 1 
323 1 173 1 325 1 115 1 297 1 153 1 35 1 
173 1 325 2 255 1 115 1 297 1 153 1 35 1 
323 1 173 2 325 1 153 1 297 2 307 1 109 1 115 2 13 1 35 2 
173 3 323 2 325 1 153 1 297 1 156 1 128 2 255 1 234 1 115 1 35 3 120 1 19 1 
323 1 173 2 325 1 177 1 226 1 153 1 297 1 128 1 8 1 7 1 255 1 115 1 37 2 35 2 319 1 
173 4 323 2 325 1 153 1 297 2 156 1 128 2 86 1 132 1 255 1 234 1 115 2 35 4 
323 1 173 1 325 1 255 1 115 1 297 1 153 1 35 1 
173 4 323 3 325 2 297 1 156 1 128 2 208 1 188 1 255 2 234 1 165 1 115 1 36 1 35 4 
323 1 173 2 325 1 146 1 153 1 297 1 128 1 255 1 115 1 313 1 35 2 277 1 
323 1 173 3 260 1 325 1 153 1 297 1 208 2 188 1 255 1 115 1 35 3 36 2 
323 2 296 1 166 1 281 2 
173 1 133 1 115 1 297 1 153 1 35 1 
323 1 173 2 325 1 255 1 115 1 297 1 153 1 128 1 35 2 19 1 
336 1 
323 1 173 1 325 1 255 1 115 1 297 1 153 1 35 1 
173 3 323 1 325 1 153 1 297 1 128 1 208 1 255 1 115 1 35 3 19 1 
323 1 234 1 165 1 156 1 
323 1 325 1 

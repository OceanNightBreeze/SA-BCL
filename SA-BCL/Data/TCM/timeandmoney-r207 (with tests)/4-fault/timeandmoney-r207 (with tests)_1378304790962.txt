#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 193 318 266 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 316 61 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 1 203 2 227 2 2 9 83 1 154 1 325 1 182 1 358 2 185 1 113 1 362 1 254 1 337 9 194 1 40 4 94 2 13 1 240 1 239 5 46 1 74 2 122 2 369 6 294 2 243 3 244 1 25 1 
27 1 203 2 227 2 2 9 83 1 154 1 325 1 182 1 358 2 185 1 113 1 362 1 254 1 337 9 194 1 40 4 94 2 13 1 240 1 239 5 46 1 74 2 122 2 369 6 294 2 243 3 244 1 25 1 
27 1 203 2 227 2 2 10 83 1 154 1 325 1 182 1 358 2 185 1 113 1 362 1 254 1 337 10 194 1 40 5 94 2 13 1 240 1 239 6 46 1 74 2 122 2 369 7 294 2 243 4 244 1 25 1 
27 1 203 2 227 2 2 7 83 1 154 1 325 1 182 1 358 2 185 1 113 1 362 1 254 1 337 7 194 1 40 3 94 1 13 1 240 1 239 4 46 1 74 2 122 2 369 4 294 2 243 2 244 1 
203 1 227 1 2 4 83 1 40 2 325 1 94 2 358 1 239 3 185 1 46 1 369 3 122 1 294 1 243 1 254 1 337 4 25 1 
203 1 227 1 2 2 311 1 73 1 358 1 239 1 240 1 185 1 46 1 74 1 294 1 254 1 337 2 194 1 26 1 
203 2 2 3 40 1 154 1 239 2 185 1 46 1 74 1 369 1 294 2 254 1 243 1 337 3 
203 2 227 1 2 9 83 1 154 1 325 1 358 1 185 1 113 1 234 1 254 1 337 9 236 1 40 4 94 2 13 1 239 5 46 1 74 1 369 7 122 1 294 2 243 3 25 1 
203 2 227 1 2 9 83 1 154 1 325 1 358 1 185 1 113 1 234 1 254 1 337 9 236 1 40 4 94 2 13 1 239 5 46 1 74 1 369 7 122 1 294 2 243 3 25 1 
246 1 275 1 255 1 
144 1 246 1 177 2 
195 2 251 2 140 1 64 2 230 2 56 2 37 1 278 2 
0 1 176 1 324 1 107 2 228 1 249 1 230 2 59 1 278 2 155 1 156 1 211 2 251 3 62 2 139 2 140 1 280 1 64 3 159 2 281 1 37 1 257 1 195 2 70 1 16 1 56 2 237 1 289 1 100 1 264 1 169 1 21 1 372 1 347 1 149 1 268 1 126 1 
195 1 251 1 35 1 178 1 64 1 230 1 44 1 56 1 37 1 278 1 
246 1 260 1 178 1 330 1 110 1 56 1 262 1 332 1 370 1 251 1 147 1 255 1 64 1 323 1 
195 1 246 1 178 1 330 1 230 1 110 2 56 1 262 1 332 2 278 1 370 1 251 1 147 1 255 1 64 1 
1 1 170 1 5 1 110 1 332 1 
246 1 326 1 170 1 306 1 255 1 5 1 110 2 332 2 
5 1 110 1 332 1 
195 1 178 1 32 1 110 1 230 1 44 1 56 1 332 1 278 1 251 1 35 1 170 1 64 1 37 1 
246 1 
116 1 246 1 326 1 170 1 255 1 5 1 110 2 332 2 
246 1 326 1 367 2 344 1 180 1 5 2 110 5 135 1 184 1 332 5 89 2 190 1 170 2 295 1 255 1 102 1 150 1 171 1 224 2 
140 1 275 1 
195 1 368 1 230 1 56 2 112 1 278 1 251 2 140 2 64 2 
290 1 145 1 191 1 
0 1 107 1 70 1 16 1 237 1 210 1 251 1 139 1 140 1 169 1 372 1 21 1 64 1 159 1 281 1 126 1 
0 1 195 1 107 1 70 1 16 1 277 1 230 1 237 1 56 1 145 1 251 2 139 1 169 1 21 1 372 1 350 1 281 1 64 2 159 1 126 1 
195 4 277 2 230 4 313 1 56 5 112 1 278 1 251 5 140 1 350 1 64 5 160 1 352 1 323 1 
195 2 251 2 292 1 178 1 64 2 230 2 44 1 56 2 
195 3 251 3 140 1 277 1 64 3 230 3 56 3 278 1 
195 1 251 1 178 1 64 1 230 1 44 1 56 1 
195 1 251 1 178 1 368 1 64 1 230 1 56 1 112 1 278 1 
0 1 176 1 324 1 107 1 228 1 178 1 330 1 249 1 230 3 277 1 110 1 59 1 112 1 332 1 278 2 155 1 211 2 251 4 62 1 139 1 140 1 281 1 64 4 159 1 37 1 257 1 195 3 70 1 16 1 237 1 56 3 262 1 199 1 370 1 169 1 21 1 372 1 347 1 147 1 149 1 350 1 268 1 126 1 299 1 
195 1 251 2 140 1 64 2 230 1 277 1 56 2 352 1 323 1 
195 3 246 1 178 1 330 1 110 1 277 2 230 3 56 3 262 1 112 1 332 1 278 1 370 1 251 3 202 1 147 1 350 1 64 3 299 1 
195 2 277 1 230 2 56 2 112 1 278 1 145 1 251 2 191 1 64 2 
0 1 107 1 70 1 16 1 237 1 251 1 139 1 140 1 169 1 372 1 21 1 64 1 159 1 281 1 126 1 
0 1 107 1 70 1 16 1 237 1 251 1 242 1 139 1 140 1 169 1 21 1 349 1 64 1 159 1 281 1 
301 1 205 1 324 2 249 1 59 1 48 1 232 1 155 1 188 1 211 2 62 4 363 1 191 2 365 1 341 1 257 1 10 1 315 1 100 2 290 2 145 2 347 1 78 1 268 1 
195 1 251 1 292 1 178 1 330 1 64 1 230 1 56 1 
87 1 105 1 
87 1 105 1 
179 1 314 1 
179 1 314 1 
179 1 314 1 
124 1 87 1 105 1 
88 1 153 1 179 1 87 2 314 1 105 2 
77 1 87 1 105 1 
124 1 87 1 105 1 
124 1 87 1 105 1 
87 1 320 1 105 1 
87 1 320 1 105 1 
87 1 320 1 105 1 
29 1 245 1 85 1 87 1 230 2 110 1 332 1 114 1 361 1 305 1 49 1 251 2 140 1 52 1 64 2 256 1 66 1 309 1 195 2 68 1 56 2 77 1 105 1 300 1 
29 2 226 2 246 1 131 1 68 1 92 1 153 1 143 1 87 2 110 2 208 1 332 2 305 2 361 2 137 1 138 1 52 2 105 2 66 3 
122 1 227 1 358 1 
227 1 311 1 358 1 
122 2 227 3 311 1 298 1 263 1 142 1 
122 1 33 1 227 2 311 1 298 1 142 1 
122 1 227 2 311 1 298 1 142 2 
245 1 301 1 246 2 108 1 326 1 177 3 5 1 110 5 111 1 332 5 114 1 89 1 90 1 190 3 158 1 255 1 339 1 341 1 309 1 214 2 10 1 367 1 344 1 14 2 98 1 144 1 315 1 170 4 102 2 296 1 321 2 224 1 
301 3 1 5 246 5 326 1 109 1 177 9 207 1 5 6 110 9 359 1 135 1 111 3 332 9 60 1 114 4 136 1 89 2 90 2 190 8 255 1 54 1 341 3 10 3 367 2 344 1 14 6 98 1 144 3 315 3 371 5 170 7 102 6 296 2 321 6 224 2 
301 1 246 3 177 4 110 3 135 1 332 3 111 1 114 1 89 1 90 1 190 3 158 1 255 1 339 1 341 1 214 1 10 1 367 1 14 2 144 2 315 1 170 2 296 1 102 2 224 1 321 2 
301 2 246 4 177 7 110 4 359 1 135 1 332 4 111 2 60 1 114 2 89 1 90 1 190 5 158 1 255 1 54 1 339 1 341 2 214 2 10 2 367 1 14 4 144 3 315 2 170 3 296 1 102 4 321 4 224 1 
0 1 201 1 275 1 
0 1 336 1 
279 1 
0 1 21 1 16 1 
0 1 231 1 
0 1 21 1 
0 3 115 1 259 1 201 2 21 1 16 1 
152 1 324 3 4 1 329 1 181 1 48 2 315 1 188 3 100 4 335 1 62 7 76 1 293 1 348 1 79 2 81 1 341 1 
152 1 324 3 4 1 329 1 181 1 48 2 315 1 188 3 100 4 335 1 62 7 76 1 293 1 348 1 79 2 81 1 341 1 
152 1 324 3 4 1 329 1 181 1 48 2 315 1 188 3 100 4 335 1 62 7 76 1 293 1 348 1 213 1 79 2 81 1 341 1 
152 1 82 1 324 3 249 1 181 1 48 1 155 1 188 2 211 2 62 6 335 2 193 1 67 1 257 1 11 1 18 1 100 3 20 1 76 1 293 1 347 1 348 1 318 1 79 1 
225 1 152 1 324 4 4 1 329 1 249 2 181 1 48 3 155 2 188 4 211 4 62 9 335 1 341 1 67 1 257 2 119 1 315 1 100 5 76 1 347 2 348 1 79 2 81 1 
271 1 203 1 227 2 2 2 107 1 358 1 7 1 183 1 185 1 139 1 50 1 254 1 337 2 159 1 311 1 70 1 286 1 237 1 239 1 263 1 46 1 74 1 369 1 122 1 291 1 294 1 23 1 58 1 80 1 129 1 
271 1 203 1 227 2 2 3 107 1 358 1 7 1 183 1 185 1 139 1 189 1 337 3 159 1 311 1 70 1 286 1 237 1 239 1 263 1 46 1 74 1 122 1 369 2 291 1 294 1 58 1 297 1 80 1 128 1 129 1 
227 2 2 2 107 1 7 1 358 1 183 1 185 1 139 1 189 1 337 2 159 1 311 1 70 1 286 1 237 1 239 1 263 1 46 1 74 1 369 2 122 1 58 1 80 1 128 1 129 1 
0 1 203 1 2 1 107 1 132 1 7 2 304 1 139 1 337 1 159 1 197 1 95 1 70 1 237 1 74 2 169 1 294 1 21 1 297 1 58 2 351 1 80 2 24 1 
271 1 203 1 227 2 2 1 107 1 358 1 7 1 183 1 139 1 189 1 254 1 337 1 159 1 311 1 70 1 286 1 237 1 263 1 74 1 122 1 291 1 294 1 23 1 58 1 80 1 129 1 
99 1 
0 1 3 2 326 3 177 2 132 1 178 1 5 6 330 1 332 5 233 2 89 1 139 2 190 2 8 1 340 1 344 1 237 1 56 1 238 4 144 2 21 1 147 1 102 2 296 1 351 1 28 1 246 2 107 2 248 2 31 1 110 5 251 1 252 1 212 1 255 1 159 2 64 1 366 1 308 2 161 2 367 1 69 1 260 1 43 1 70 1 216 2 262 1 166 1 168 1 370 1 169 2 267 2 172 1 224 1 323 1 
28 1 326 1 178 1 248 1 330 1 5 2 110 3 332 3 116 1 251 1 212 1 64 1 366 1 340 1 260 1 43 1 56 1 238 2 262 1 370 1 147 1 323 1 
28 1 246 1 3 1 326 1 178 1 5 1 330 1 110 3 332 3 116 1 251 1 212 1 255 1 64 1 366 1 340 1 260 1 43 1 56 1 238 3 262 1 370 1 147 1 323 1 
28 1 246 1 3 1 326 1 178 1 248 1 330 1 5 2 110 3 332 3 233 1 116 1 251 1 212 1 255 1 64 1 366 1 340 1 260 1 43 1 56 1 238 3 262 1 370 1 147 1 323 1 
28 1 246 5 3 4 326 3 178 1 248 4 5 7 330 1 229 1 110 5 133 1 332 5 360 1 233 4 116 1 251 1 89 1 190 1 212 1 255 5 64 1 366 1 308 2 340 1 161 2 367 1 260 1 43 1 344 1 216 2 71 1 217 1 56 1 238 6 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 2 3 2 326 2 177 2 248 2 178 1 5 4 330 1 110 4 332 4 233 2 251 1 89 1 190 1 212 1 255 1 64 1 8 1 366 1 308 2 340 1 161 2 260 1 367 1 43 1 344 1 216 2 56 1 238 4 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 1 3 2 326 2 248 2 178 1 5 4 330 1 110 4 229 1 133 1 332 4 233 2 251 1 89 1 190 1 212 1 255 1 64 1 366 1 308 2 340 1 161 2 367 1 260 1 43 1 344 1 216 2 71 1 56 1 238 4 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 1 3 2 326 2 248 2 178 1 5 4 330 1 110 4 229 1 133 1 332 4 233 2 251 1 89 1 190 1 212 1 255 1 64 1 366 1 308 2 340 1 161 2 367 1 260 1 43 1 344 1 216 2 71 1 56 1 238 4 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 1 3 2 326 2 177 2 248 2 178 1 356 1 5 4 330 1 110 4 250 2 332 4 233 2 251 1 89 1 190 1 212 1 255 1 64 1 366 1 38 2 340 1 161 2 367 1 260 1 43 1 164 1 344 1 216 2 71 1 56 1 238 4 97 1 262 1 370 1 147 1 102 1 172 1 224 1 323 1 
28 1 246 1 3 3 326 2 178 1 248 3 330 1 5 5 229 1 110 4 133 1 332 4 360 1 233 3 251 1 89 1 190 1 212 1 255 1 64 1 366 1 308 2 340 1 161 2 367 1 260 1 43 1 344 1 216 2 71 1 56 1 238 5 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 1 3 3 326 2 178 1 248 3 330 1 5 5 229 1 110 4 133 1 332 4 360 1 233 3 251 1 89 1 190 1 212 1 255 1 64 1 366 1 308 2 340 1 161 2 367 1 260 1 43 1 344 1 216 2 71 1 56 1 238 5 262 1 166 1 144 2 370 1 147 1 267 2 102 1 172 1 224 1 323 1 
28 1 246 1 3 2 326 2 177 2 248 2 178 1 5 4 330 1 110 4 250 2 332 4 233 2 251 1 89 1 190 1 212 1 255 1 64 1 8 1 366 1 38 2 340 1 161 2 260 1 367 1 43 1 344 1 216 2 56 1 238 4 262 1 97 1 370 1 147 1 102 1 172 1 224 1 323 1 
152 1 257 1 324 3 4 1 275 1 329 1 249 1 48 2 59 1 315 1 155 1 290 1 100 3 188 2 145 1 211 2 62 6 140 2 191 1 347 1 78 1 348 1 79 1 268 1 81 1 341 1 
130 1 301 2 324 5 178 1 357 1 249 2 48 1 59 1 111 2 155 2 188 1 211 4 62 12 140 1 191 2 65 1 193 2 341 1 257 2 11 2 10 1 289 1 315 2 290 6 100 7 145 6 347 2 149 1 265 1 223 1 269 1 268 2 175 1 
0 1 324 1 107 1 230 1 277 1 249 1 59 1 209 1 155 1 117 1 210 1 251 2 211 2 139 1 62 2 140 1 191 1 281 1 159 1 64 2 65 1 283 1 257 1 195 1 70 1 16 1 237 1 56 1 289 1 100 1 169 1 21 1 372 1 347 1 350 1 149 1 268 1 126 1 
0 2 176 2 324 10 4 1 329 1 277 1 230 1 181 4 48 4 188 8 139 3 189 1 140 2 191 7 51 2 281 2 9 1 341 3 195 1 10 2 96 1 16 2 56 1 237 2 287 1 289 1 290 7 100 10 145 7 146 2 21 2 347 3 348 1 149 1 350 1 151 2 104 2 152 1 301 2 107 3 249 3 59 3 111 2 155 3 211 6 251 3 62 20 159 3 64 3 65 1 257 3 70 2 315 3 169 1 372 2 79 1 268 3 126 2 81 1 
0 3 324 1 107 8 274 1 132 1 230 1 277 1 249 2 59 2 155 2 251 1 211 4 50 1 139 7 62 2 189 1 34 1 280 2 64 1 159 8 257 2 195 1 343 1 70 2 15 1 56 1 237 2 288 1 75 1 218 1 289 1 100 1 169 2 21 2 347 2 78 1 149 1 268 2 351 1 
301 1 324 2 230 1 249 1 48 1 59 1 112 1 111 1 278 1 155 1 188 1 211 2 251 1 62 3 191 1 64 1 65 1 341 1 257 1 195 1 285 1 10 1 56 1 315 1 290 1 100 1 145 1 347 1 268 1 
257 1 301 1 205 1 181 1 249 1 59 1 155 1 315 1 188 1 290 1 100 2 145 1 211 2 62 2 191 1 347 1 78 1 268 1 
257 1 10 1 324 2 249 1 48 1 59 1 155 1 188 1 290 1 145 1 211 2 62 2 191 1 363 1 347 1 78 1 268 1 341 1 
301 1 324 2 249 1 181 1 59 1 48 1 111 1 155 1 188 2 211 2 62 4 191 2 341 1 257 1 10 1 315 1 100 2 290 2 145 2 347 1 78 1 268 1 
257 1 301 1 205 1 181 1 249 1 59 1 288 1 155 1 315 1 188 1 290 1 100 2 145 1 211 2 62 2 191 1 347 1 268 1 
257 1 10 1 324 2 249 1 48 1 59 1 288 1 155 1 188 1 290 1 145 1 211 2 62 2 191 1 363 1 347 1 268 1 341 1 
301 1 324 2 249 1 181 1 59 1 48 1 111 1 155 1 188 2 211 2 62 4 191 2 341 1 257 1 10 1 288 1 315 1 100 2 290 2 145 2 347 1 268 1 
301 1 324 2 249 1 181 1 59 1 48 1 111 1 155 1 188 2 211 2 62 4 191 2 341 1 257 1 10 1 315 1 100 2 290 2 145 2 347 1 268 1 
0 1 176 1 324 1 107 1 249 1 59 1 155 1 251 1 211 2 62 2 139 1 140 1 281 1 159 1 64 1 257 1 70 1 16 1 237 1 289 1 100 1 169 1 21 1 372 1 347 1 149 1 268 1 126 1 
355 1 0 1 324 1 107 1 249 1 59 1 155 1 251 1 211 2 62 2 139 1 140 1 281 1 159 1 64 1 257 1 70 1 16 1 237 1 289 1 100 1 242 1 169 1 21 1 347 1 349 1 149 1 268 1 
301 1 324 2 249 1 181 1 59 1 48 1 111 1 155 1 188 2 211 2 62 4 191 2 65 1 341 1 257 1 10 1 315 1 100 2 290 2 145 2 347 1 268 1 
0 1 301 1 176 1 324 2 107 1 181 1 249 1 48 1 59 1 111 1 155 1 188 2 251 1 211 2 62 4 139 1 50 1 191 2 281 1 159 1 64 1 341 1 257 1 10 1 70 1 16 1 237 1 315 1 290 2 100 2 145 2 372 1 21 1 347 1 268 1 126 1 104 1 
301 1 324 1 181 1 230 1 249 1 59 1 112 1 111 1 278 1 155 1 188 1 211 2 251 1 62 3 191 1 64 1 65 1 341 1 257 1 195 1 310 1 10 1 56 1 315 1 100 2 290 1 145 1 347 1 268 1 
225 1 301 3 206 1 324 13 181 2 249 2 48 3 302 1 111 3 155 2 188 5 211 4 62 25 192 1 235 1 193 2 91 1 341 3 257 2 11 3 10 3 12 1 167 2 315 3 100 12 19 1 317 1 347 2 266 1 318 2 353 4 175 1 
225 1 301 3 206 1 324 12 181 2 249 3 48 2 302 2 111 3 155 3 188 4 157 1 211 6 62 26 192 1 235 1 193 2 67 2 341 2 257 3 11 2 10 2 12 1 261 1 198 1 167 1 315 3 100 14 19 2 347 3 266 1 318 2 127 1 353 4 
152 1 225 1 301 4 206 1 324 21 4 1 329 1 181 3 249 3 48 4 302 2 111 4 155 3 188 7 157 1 211 6 62 41 192 1 235 1 193 3 67 1 341 5 257 3 11 4 10 4 312 1 12 1 261 1 198 1 167 1 315 5 100 20 19 1 317 1 347 3 348 1 266 1 79 1 318 3 127 1 81 1 353 4 175 1 
152 1 225 1 301 4 206 1 324 18 4 1 329 1 181 2 249 4 48 4 302 2 111 4 155 4 188 6 157 1 211 8 62 38 192 1 235 1 193 3 67 2 341 4 257 4 11 4 10 3 312 1 12 1 261 1 198 1 167 1 315 5 100 20 19 1 317 1 347 4 348 1 266 1 79 1 318 3 127 1 81 1 353 4 175 1 
152 3 225 1 301 5 206 1 324 24 4 3 329 3 249 2 181 5 48 7 302 1 111 5 155 2 188 12 157 1 211 4 62 52 192 1 235 1 193 3 67 1 341 8 257 2 11 3 10 5 12 1 261 1 198 1 167 1 315 8 100 28 19 1 347 2 348 3 266 1 79 3 318 2 269 1 127 1 81 3 353 4 175 1 
0 1 324 1 107 2 106 1 249 1 59 1 155 1 251 2 211 2 62 2 139 2 34 1 280 2 159 2 64 2 65 1 257 1 196 1 343 1 41 1 70 1 237 1 56 2 45 1 289 1 100 1 21 1 347 1 149 1 268 1 125 1 
271 1 227 2 272 1 311 1 107 2 70 1 358 1 237 1 183 1 263 1 122 1 333 1 200 1 139 2 50 1 189 1 159 2 58 1 129 1 
271 1 227 2 311 1 107 1 70 1 121 1 358 1 237 1 183 1 263 1 122 1 200 1 139 1 189 1 159 1 58 1 129 1 
0 1 272 1 204 1 107 1 70 1 132 1 237 1 304 1 139 1 169 1 21 1 159 1 58 1 351 1 
271 1 227 2 272 1 311 1 107 1 70 1 358 1 237 1 183 1 263 1 122 1 333 1 200 1 139 1 189 1 159 1 58 1 129 1 
221 1 
246 1 190 1 275 1 180 1 255 1 102 1 150 1 
246 2 326 1 367 1 177 1 344 1 5 1 110 1 332 1 166 1 144 1 89 1 190 1 255 1 102 1 267 1 224 1 308 1 
0 10 273 2 326 3 177 12 180 1 331 2 5 5 276 2 134 1 231 2 332 5 186 1 50 1 89 4 139 3 190 9 336 3 338 1 55 2 341 2 10 2 344 4 14 6 16 3 237 4 144 6 346 1 201 2 21 3 150 1 296 2 102 8 103 2 151 2 301 2 246 8 107 3 31 1 110 5 111 2 255 2 159 3 259 1 367 4 70 3 165 1 262 2 315 2 219 2 169 1 222 2 173 2 224 4 321 6 
246 1 11 1 367 1 177 2 344 1 14 1 144 1 89 1 190 1 266 1 102 1 318 1 193 1 224 1 321 1 
152 1 4 1 178 1 32 1 229 1 110 1 230 1 332 1 278 1 251 1 89 1 190 2 35 1 64 1 37 1 341 1 195 1 118 1 367 1 344 1 44 1 56 1 315 2 219 1 348 1 102 2 103 2 224 1 
246 1 367 1 344 1 180 1 89 1 190 1 150 1 102 1 255 1 224 1 
301 2 246 5 10 2 177 10 14 5 111 2 315 2 144 5 219 1 190 5 102 5 151 1 103 2 321 5 341 2 
246 1 326 1 255 1 5 1 110 1 332 1 
0 1 107 3 326 2 132 1 5 4 31 2 110 3 135 1 332 3 186 1 61 1 89 2 139 3 190 1 159 3 338 1 69 1 367 2 70 1 344 1 237 1 168 1 316 1 169 2 21 1 296 1 102 2 351 1 224 2 
0 1 176 1 324 1 107 1 228 1 249 1 230 2 59 1 278 2 155 1 211 2 251 3 62 1 139 1 140 1 159 1 64 3 281 1 37 1 257 1 195 2 70 1 16 1 56 2 237 1 169 1 372 1 21 1 347 1 149 1 268 1 126 1 
246 4 367 1 177 4 344 1 14 2 31 1 144 2 89 1 190 1 79 1 102 2 296 1 255 2 321 2 224 1 
361 1 284 1 29 1 
29 1 361 1 49 1 148 1 22 1 
361 1 284 1 29 1 
361 1 284 1 29 1 
361 1 29 1 53 1 
361 1 29 1 53 1 
361 1 29 1 53 1 
361 1 29 1 
87 1 105 1 
257 2 152 1 324 4 4 1 329 1 181 1 249 2 48 2 315 1 155 2 100 4 188 3 211 4 62 8 347 2 348 1 79 1 81 1 341 1 67 1 
152 1 315 1 100 3 188 2 324 3 62 6 4 1 275 1 329 1 348 1 79 1 48 2 81 1 341 1 
257 1 301 1 10 1 324 2 47 1 249 1 181 1 48 1 111 1 155 1 315 1 188 2 100 2 211 2 62 4 347 1 341 1 
100 1 11 1 324 1 62 2 318 1 193 1 
152 2 301 2 324 13 4 2 329 1 357 1 181 2 249 1 48 5 111 2 155 1 188 7 211 2 62 26 193 2 341 5 67 1 257 1 118 1 10 2 11 2 315 5 100 13 347 1 348 2 79 1 269 1 81 1 175 1 
11 1 324 1 62 1 
100 1 62 1 193 1 
257 1 301 1 10 1 324 3 47 1 249 1 181 1 48 2 111 1 155 1 315 1 100 3 188 3 211 2 62 6 347 1 151 1 341 1 
225 1 301 2 324 6 181 1 249 1 48 1 111 2 155 1 188 2 157 1 211 2 62 12 193 1 341 2 257 1 11 1 10 2 198 1 261 1 315 2 100 6 347 1 266 1 318 1 127 1 
152 1 324 3 4 1 181 1 48 1 315 1 100 3 188 2 62 6 348 1 341 1 
152 1 257 1 324 2 329 1 181 1 249 1 48 1 18 1 155 1 100 1 188 2 211 2 62 3 347 1 348 1 81 1 67 1 
257 1 225 1 152 2 118 1 324 5 4 1 249 1 181 2 48 3 155 1 315 2 188 5 100 5 211 2 62 10 347 1 348 2 341 2 
225 1 257 1 301 1 249 1 181 1 155 1 315 1 100 2 188 1 211 2 62 2 347 1 
225 1 257 1 301 1 10 1 324 2 249 1 181 1 48 1 111 1 155 1 315 1 188 2 100 2 211 2 62 4 347 1 341 1 
225 1 257 3 152 1 324 2 249 3 181 1 48 1 18 1 155 3 188 2 100 1 211 6 62 3 317 1 347 3 348 1 67 1 
225 1 152 2 324 8 4 1 47 1 329 1 181 3 249 4 48 3 155 4 188 6 211 8 62 15 193 1 341 2 67 1 257 4 118 1 11 1 18 1 315 2 100 7 20 1 317 1 347 4 348 2 318 1 81 1 
152 2 225 1 301 2 324 10 4 2 329 1 181 4 249 2 48 5 111 2 155 2 188 9 157 1 211 4 62 24 193 1 67 1 341 4 257 2 118 1 11 1 10 1 198 1 261 1 315 5 100 14 347 2 348 2 266 1 79 1 318 1 127 1 81 1 
152 1 225 1 301 2 324 7 4 1 329 1 47 1 181 1 249 3 48 3 111 2 155 3 188 4 157 1 211 6 62 17 193 1 67 1 341 2 257 3 11 1 10 1 198 1 261 1 315 3 100 10 347 3 348 1 266 1 79 1 318 1 127 1 81 1 
152 1 225 1 301 2 324 10 4 1 329 1 47 1 181 1 249 3 48 3 111 2 155 3 188 4 157 1 211 6 62 19 193 1 341 3 67 1 257 3 11 1 10 2 198 1 261 1 315 3 100 9 347 3 348 1 266 1 79 1 318 1 127 1 81 1 
152 1 225 1 301 2 324 7 4 1 329 1 47 1 181 2 249 3 48 3 111 2 155 3 188 5 157 1 211 6 62 17 193 1 67 1 341 2 257 3 11 1 10 1 198 1 261 1 315 3 100 10 347 3 348 1 266 1 79 1 318 1 127 1 81 1 
152 2 225 1 301 2 324 10 4 2 329 1 181 4 249 2 48 5 111 2 155 2 188 9 157 1 211 4 62 24 193 1 67 1 341 4 257 2 118 1 11 1 10 1 198 1 261 1 315 5 100 14 347 2 348 2 266 1 79 1 318 1 127 1 81 1 
225 1 301 2 324 6 181 1 249 1 48 1 111 2 155 1 188 2 157 1 211 2 62 12 193 1 341 2 257 1 11 1 10 2 198 1 261 1 315 2 100 6 347 1 266 1 318 1 127 1 
152 1 225 1 301 2 324 8 4 1 329 1 47 1 181 2 249 4 48 3 111 2 155 4 188 5 157 1 211 8 62 18 193 1 341 2 67 2 257 4 11 1 10 1 261 1 198 1 315 3 100 10 347 4 348 1 266 1 79 1 318 1 127 1 81 1 
225 1 301 3 324 7 181 3 249 4 48 3 111 3 155 4 188 6 157 1 211 8 62 16 193 1 341 2 67 2 257 4 11 1 10 2 261 1 198 1 315 3 100 9 347 4 317 1 266 1 318 1 127 1 
152 3 324 4 4 1 329 1 181 3 48 3 315 1 188 6 100 3 62 7 348 3 81 2 341 1 
152 1 225 1 301 2 324 8 4 1 329 1 181 1 249 4 48 3 111 2 155 4 188 4 157 1 211 8 62 18 193 1 341 2 67 2 257 4 11 1 10 1 261 1 198 1 315 3 100 10 347 4 317 1 348 1 266 1 79 1 318 1 127 1 81 1 
258 1 251 1 140 1 64 1 56 1 352 1 323 1 
258 1 342 1 162 1 327 1 72 1 56 1 251 1 140 1 63 1 64 1 352 1 323 1 
0 1 107 1 139 1 169 1 21 1 275 1 70 1 132 1 159 1 237 1 351 1 
0 1 195 1 107 1 70 1 16 1 277 1 230 1 237 1 56 1 251 2 139 1 140 1 169 1 21 1 372 1 281 1 64 2 159 1 
0 3 195 2 107 1 178 1 70 1 330 1 16 2 277 1 230 1 237 1 56 2 231 1 186 1 251 2 139 1 140 1 21 2 372 1 147 1 222 1 281 1 64 2 159 1 
0 3 195 2 107 2 178 1 70 1 330 1 16 2 277 1 230 1 237 1 56 2 231 1 186 1 251 2 242 1 139 2 140 1 21 2 147 1 222 1 281 1 64 2 159 2 270 1 
0 4 246 1 107 3 70 1 5 1 16 1 110 2 237 1 262 1 231 1 332 2 186 1 123 1 139 3 169 1 201 1 21 1 222 1 336 1 255 1 57 1 159 3 270 1 
0 4 246 1 107 3 70 1 331 1 5 1 16 1 110 2 237 1 262 1 231 1 332 2 186 1 139 3 169 1 201 1 21 1 222 1 336 1 255 1 159 3 270 1 
107 1 139 1 70 1 15 1 159 1 237 1 
0 3 343 1 107 7 259 1 274 1 247 1 93 1 70 2 15 1 16 1 237 3 75 1 218 1 50 1 139 6 189 1 169 2 280 1 21 2 159 7 322 1 
152 1 0 1 176 1 324 3 4 1 107 1 329 1 230 1 277 1 249 2 48 2 59 2 155 2 188 2 251 2 211 4 62 6 50 1 139 1 140 2 191 1 51 1 281 1 64 2 159 1 65 1 341 1 257 2 195 1 70 1 16 1 237 1 56 1 315 1 290 1 100 3 145 1 21 1 372 1 347 2 348 1 79 1 268 2 125 1 126 1 81 1 104 1 
0 2 246 1 273 1 107 1 326 1 180 1 331 1 5 2 110 3 332 3 139 1 89 2 190 1 336 1 255 1 159 1 338 1 55 1 367 2 344 2 262 1 169 1 201 1 170 1 102 1 150 1 173 1 224 2 
0 2 107 2 259 1 70 1 15 1 16 1 165 1 237 2 50 1 139 2 201 1 21 1 159 2 
0 1 107 4 132 1 70 1 237 1 139 4 50 1 169 1 36 1 21 1 159 4 270 1 351 1 
0 1 107 2 247 1 70 1 16 1 237 2 186 1 187 1 241 1 139 2 21 1 159 2 9 1 322 1 
227 1 311 1 107 1 139 1 169 1 70 1 159 1 358 1 237 1 129 1 
0 1 343 1 107 2 139 2 50 1 41 1 189 1 21 1 70 1 159 2 237 1 
0 3 107 5 343 1 274 1 132 1 70 2 237 2 186 1 75 1 139 4 50 1 169 1 36 1 21 2 159 5 351 1 
0 3 107 5 343 1 132 1 120 1 70 2 237 2 186 1 75 1 139 4 50 1 169 1 36 1 21 2 159 5 351 1 
0 1 195 1 107 1 70 1 16 1 277 1 230 1 237 1 56 1 251 2 242 1 139 1 140 1 169 1 21 1 281 1 64 2 159 1 
0 1 107 1 259 1 247 1 93 1 70 1 16 1 237 2 186 1 139 1 21 1 159 1 322 1 
334 1 140 1 328 1 364 1 30 1 
246 1 328 2 178 1 330 1 30 1 110 2 262 1 332 2 370 1 334 2 140 1 253 1 364 2 147 1 170 1 255 1 141 1 282 1 299 1 
196 1 251 1 106 1 328 1 364 1 30 1 64 1 56 1 45 1 
30 1 141 1 282 1 
46 1 275 1 239 1 185 1 
46 1 203 1 2 1 294 1 337 1 239 1 185 1 
74 1 2 1 80 1 
203 1 2 3 239 1 185 1 345 1 46 1 220 1 294 1 254 1 337 3 174 1 194 2 
46 1 369 1 203 1 2 2 94 1 294 1 337 2 239 1 185 1 
122 1 203 1 227 1 2 1 83 1 40 1 294 1 254 1 337 1 358 1 239 1 
46 1 203 1 2 1 294 1 254 1 337 1 239 1 
46 2 203 1 2 1 294 1 254 1 337 1 185 1 
203 2 2 2 39 1 163 1 239 1 46 1 17 1 294 2 254 1 337 2 
203 1 2 3 40 1 13 1 239 2 185 1 113 1 46 1 369 2 294 1 254 1 243 1 337 3 
203 1 227 2 311 1 2 2 358 1 239 1 185 1 303 1 263 1 46 1 122 1 369 1 294 1 254 1 337 2 
203 2 2 4 40 1 94 1 239 2 185 1 46 1 369 2 294 2 254 1 243 1 337 4 25 1 
46 1 203 1 2 1 294 1 254 1 337 1 239 1 185 1 
203 1 2 4 40 1 86 1 239 3 185 2 345 1 46 2 369 2 294 1 243 1 337 4 194 1 174 1 
203 1 2 2 84 1 6 1 239 1 185 1 46 1 369 1 234 1 294 1 254 1 337 2 
203 1 2 3 239 1 185 1 345 1 46 1 294 1 254 1 337 3 174 2 194 2 307 1 
101 2 42 1 239 2 354 1 
203 1 2 1 215 1 294 1 254 1 337 1 
46 1 369 1 203 1 2 2 13 1 294 1 254 1 337 2 239 1 185 1 
319 1 
46 1 203 1 2 1 294 1 254 1 337 1 239 1 185 1 
203 1 2 3 13 1 239 1 185 1 46 1 369 1 294 1 254 1 337 3 194 1 
40 1 86 1 243 1 239 1 
46 1 239 1 

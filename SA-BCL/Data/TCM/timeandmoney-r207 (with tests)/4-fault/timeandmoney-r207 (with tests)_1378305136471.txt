#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (94,227,281) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (94,227,281) 165 83 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (94,227,281) 165 311 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 334 229 149 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 334 229 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (94,227,281) (94,227,281) 136 70 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 334 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 33 238 (38,193) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 33 238 (153,247) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (94,227,281) 165 221 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 181 1 257 9 265 1 314 1 59 7 318 1 111 1 161 2 276 1 199 1 75 2 209 9 123 1 31 1 125 1 218 4 35 1 37 1 174 1 219 1 338 2 43 3 222 5 
95 1 181 1 257 9 265 1 314 1 59 7 318 1 111 1 161 2 276 1 199 1 75 2 209 9 123 1 31 1 125 1 218 4 35 1 37 1 174 1 219 1 338 2 43 3 222 5 
44 1 95 2 257 9 224 1 265 1 314 2 59 6 195 1 318 2 197 1 67 1 161 2 276 1 199 1 115 1 75 2 209 9 123 1 31 2 125 1 218 4 35 1 37 1 174 1 219 1 338 2 43 3 222 5 
44 1 95 2 257 9 224 1 265 1 314 2 59 6 195 1 318 2 197 1 67 1 161 2 276 1 199 1 115 1 75 2 209 9 123 1 31 2 125 1 218 4 35 1 37 1 174 1 219 1 338 2 43 3 222 5 
44 1 95 2 257 10 224 1 265 1 314 2 59 7 195 1 318 2 197 1 67 1 161 2 276 1 199 1 115 1 75 2 209 10 123 1 31 2 125 1 218 5 35 1 37 1 174 1 219 1 338 2 43 4 222 6 
44 1 95 2 257 7 224 1 265 1 314 2 59 4 195 1 318 2 197 1 67 1 161 2 276 1 199 1 115 1 75 1 209 7 123 1 31 2 125 1 218 3 37 1 174 1 219 1 338 2 43 2 222 4 
161 1 95 1 257 4 75 2 209 4 265 1 125 1 218 2 314 1 35 1 37 1 59 3 174 1 219 1 318 1 338 1 43 1 222 3 
161 1 95 1 257 2 298 1 25 1 115 1 228 1 209 2 31 1 265 1 37 1 219 1 318 1 338 1 222 1 197 1 
161 2 265 1 276 1 218 1 257 3 59 1 37 1 219 1 209 3 338 2 222 2 43 1 31 1 
106 1 308 1 310 1 
54 1 113 2 308 1 
3 2 220 2 280 2 78 1 50 2 242 2 251 1 80 2 
92 1 256 2 2 2 3 2 6 1 302 1 50 2 98 1 53 1 11 1 99 2 148 1 152 1 156 1 14 1 68 1 23 1 238 1 204 1 26 1 76 2 326 1 121 1 280 2 78 1 242 3 282 1 80 2 34 1 290 1 291 1 132 2 220 3 38 1 251 1 135 1 340 1 
313 1 201 1 3 1 7 1 220 1 280 1 78 1 50 1 242 1 80 1 
94 1 237 1 201 1 220 1 184 1 50 1 281 1 242 1 252 1 
94 1 237 1 201 1 3 1 220 1 280 1 50 1 242 1 80 1 252 1 
140 1 332 1 227 1 63 1 322 1 
140 1 332 1 227 2 106 1 304 1 241 1 322 2 308 1 
332 1 227 1 322 1 
201 1 140 1 3 1 227 1 7 1 78 1 280 1 50 1 242 1 80 1 313 1 320 1 220 1 322 1 
308 1 
140 1 332 1 227 2 106 1 304 1 322 2 308 1 82 1 
297 1 162 1 46 1 140 2 227 5 304 1 144 1 231 1 308 1 145 2 36 1 316 1 332 2 106 1 158 2 272 1 90 1 16 2 322 5 
251 1 310 1 
1 1 3 1 280 1 50 2 96 1 242 2 80 1 220 2 251 2 
269 1 143 1 65 1 
256 1 2 1 238 1 76 1 121 1 242 1 98 1 285 1 148 1 291 1 14 1 220 1 38 1 251 1 135 1 340 1 
238 1 256 1 2 1 3 1 76 1 121 1 50 1 242 2 98 1 80 1 307 1 148 1 103 1 291 1 14 1 220 2 38 1 65 1 135 1 340 1 
1 1 198 1 3 4 184 1 280 1 50 5 242 5 80 4 307 1 243 1 268 1 103 2 220 5 251 1 
201 1 3 2 117 1 7 1 220 2 50 2 242 2 80 2 
3 3 103 1 280 1 220 3 50 3 242 3 251 1 80 3 
201 1 3 1 7 1 220 1 50 1 242 1 80 1 
1 1 201 1 3 1 220 1 280 1 50 1 96 1 242 1 80 1 
1 1 94 1 237 1 201 1 3 2 165 1 280 1 50 2 242 2 80 2 307 1 83 1 103 1 220 2 252 1 
3 1 268 1 103 1 184 1 220 2 50 2 242 2 251 1 80 1 
94 1 237 1 201 1 3 1 165 1 103 1 220 1 50 1 242 1 80 1 252 1 307 1 311 1 
1 1 3 2 280 1 50 2 242 2 80 2 103 1 269 1 220 2 65 1 
256 1 2 1 238 1 76 1 121 1 242 1 98 1 148 1 291 1 14 1 220 1 38 1 251 1 135 1 340 1 
256 1 2 1 238 1 76 1 28 1 242 1 98 1 148 1 247 1 291 1 14 1 220 1 251 1 135 1 340 1 
254 1 45 1 47 1 6 1 5 1 302 1 143 2 99 4 102 1 152 1 269 2 62 1 65 2 114 1 204 1 26 1 326 2 205 1 282 2 286 1 290 1 333 1 132 2 339 1 
201 1 3 1 117 1 220 1 50 1 242 1 80 1 252 1 
85 1 188 1 
85 1 188 1 
93 1 124 1 
93 1 124 1 
93 1 124 1 
85 1 57 1 188 1 
85 1 185 1 188 1 
21 1 93 1 85 2 226 1 188 2 124 1 
85 1 57 1 188 1 
85 1 57 1 188 1 
85 1 29 1 188 1 
85 1 29 1 188 1 
85 1 29 1 188 1 
85 1 149 1 88 1 227 1 334 1 229 1 283 1 188 1 322 1 
85 1 88 1 334 1 229 1 283 1 188 1 
95 1 314 1 318 1 
95 1 25 1 318 1 
213 1 95 3 314 2 25 1 109 1 180 1 
213 1 95 2 314 1 25 1 51 1 180 1 
213 2 95 2 314 1 25 1 180 1 
254 1 46 2 47 1 140 4 227 5 49 1 304 1 8 1 144 1 308 2 145 1 54 1 55 1 102 1 147 2 158 1 106 1 16 1 272 3 64 1 322 5 66 2 113 3 325 1 22 2 73 1 27 1 120 1 84 1 332 1 333 1 292 1 133 1 
254 3 10 1 102 3 106 1 272 8 16 2 113 9 22 6 27 2 120 4 287 5 292 2 223 1 46 6 47 3 140 7 227 9 304 1 305 1 144 1 308 5 145 2 54 3 232 1 316 1 158 2 63 5 322 9 64 3 66 6 325 3 164 1 73 1 170 1 331 1 332 6 333 3 
254 1 46 2 47 1 140 2 227 3 308 3 145 1 54 2 55 1 147 1 102 1 316 1 106 1 158 1 16 1 272 3 64 1 322 3 66 2 325 1 113 4 22 2 27 1 120 1 333 1 292 1 133 1 223 1 
254 2 46 4 47 2 140 3 227 4 308 4 145 1 54 3 55 1 232 1 147 2 102 2 316 1 106 1 158 1 16 1 272 5 64 2 322 4 66 4 113 7 325 2 22 4 164 1 27 1 120 2 331 1 333 2 292 1 133 1 223 1 
138 1 14 1 310 1 
14 1 42 1 
244 1 
14 1 135 1 340 1 
14 1 100 1 
14 1 135 1 
138 2 14 3 135 1 253 1 12 1 340 1 
45 3 47 1 200 1 5 2 326 3 206 1 303 2 328 1 282 4 30 1 99 7 150 1 333 1 176 1 91 1 179 1 324 1 
45 3 47 1 200 1 5 2 326 3 206 1 303 2 328 1 282 4 30 1 99 7 150 1 333 1 176 1 91 1 179 1 324 1 
45 3 47 1 200 1 5 2 326 3 206 1 303 2 328 1 282 4 30 1 99 7 150 1 13 1 333 1 176 1 91 1 179 1 324 1 
254 3 0 1 45 10 47 4 6 1 5 5 302 1 303 3 99 31 102 3 150 2 152 1 151 1 190 1 317 3 61 4 324 1 325 3 200 5 24 1 72 1 326 15 206 2 328 2 282 16 30 1 169 1 126 1 290 1 333 4 132 2 176 1 179 1 91 2 
45 4 47 1 24 1 200 1 5 3 77 1 6 2 326 4 302 2 206 1 303 2 328 1 282 5 30 1 99 9 150 1 152 2 290 2 333 1 132 4 249 1 179 1 91 1 324 1 
95 2 2 1 256 1 257 2 230 1 306 1 97 1 98 1 265 1 148 1 312 1 314 1 59 1 318 1 109 1 20 1 161 1 278 1 25 1 76 1 209 2 122 1 284 1 31 1 32 1 86 1 37 1 219 1 338 1 222 1 
95 2 2 1 256 1 257 3 141 1 230 1 306 1 97 1 98 1 265 1 148 1 312 1 314 1 59 2 318 1 109 1 20 1 161 1 25 1 76 1 167 1 209 3 284 1 31 1 32 1 86 1 219 1 335 1 338 1 222 1 
95 2 2 1 256 1 257 2 141 1 230 1 97 1 98 1 265 1 148 1 314 1 59 2 318 1 109 1 20 1 25 1 76 1 167 1 209 2 31 1 284 1 32 1 86 1 219 1 222 1 
161 1 20 2 257 1 256 1 2 1 139 1 76 1 209 1 98 1 31 2 284 2 309 1 86 2 148 1 101 1 266 1 291 1 293 1 14 1 131 1 335 1 338 1 135 1 
161 1 20 1 95 2 257 1 256 1 2 1 278 1 25 1 76 1 141 1 209 1 230 1 98 1 97 1 306 1 31 1 284 1 32 1 86 1 148 1 312 1 314 1 37 1 318 1 338 1 109 1 
104 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 50 1 281 1 242 1 144 1 145 1 146 1 158 1 220 1 16 1 178 1 322 1 252 1 136 1 
296 1 94 1 46 1 2 2 256 2 227 2 184 1 50 1 304 1 261 1 144 1 98 1 145 1 309 1 146 1 148 1 266 1 105 1 14 1 158 1 16 1 272 1 322 2 70 1 237 1 201 1 76 2 27 1 281 1 242 1 291 2 332 2 220 1 178 1 252 1 136 1 135 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 2 184 1 304 1 281 1 50 1 242 1 82 1 146 1 332 1 220 1 178 1 322 2 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 50 1 281 1 242 1 144 1 145 1 146 1 158 1 220 1 16 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
94 1 70 1 237 1 201 1 227 1 184 1 281 1 50 1 242 1 146 1 220 1 178 1 322 1 252 1 136 1 
45 2 47 1 114 1 204 1 5 2 26 1 6 1 326 3 302 1 303 1 206 1 143 1 282 3 30 1 99 6 310 1 152 1 150 1 290 1 269 1 333 1 132 2 251 2 179 1 65 1 324 1 
92 1 254 1 45 2 0 1 47 2 5 1 6 2 302 2 143 11 53 1 99 14 102 2 152 2 269 4 60 1 192 1 317 3 61 3 274 1 65 11 325 2 200 1 204 2 26 1 326 6 207 1 282 8 169 1 214 1 290 2 333 1 132 4 251 1 
92 1 2 1 256 1 3 1 6 1 302 1 259 1 50 1 98 1 307 1 53 1 99 2 148 1 152 1 154 1 269 1 103 1 14 1 192 1 236 1 238 1 204 1 76 1 26 1 121 1 326 1 242 2 80 1 282 1 285 1 290 1 291 1 220 2 132 2 38 1 251 1 135 1 340 1 
92 1 254 2 2 3 256 3 3 1 5 4 6 3 183 2 98 2 99 20 102 2 103 1 269 7 192 1 14 2 271 1 17 2 200 4 204 3 26 3 121 2 206 1 282 10 30 1 215 1 290 3 291 1 132 6 220 3 38 2 135 2 45 8 47 3 302 3 141 1 303 1 50 1 143 7 53 1 307 1 148 2 150 1 152 3 155 2 65 7 324 1 68 2 163 1 325 2 238 2 76 3 326 10 242 3 80 1 333 3 175 2 251 2 179 1 340 2 
92 1 258 1 2 8 256 7 3 1 6 2 302 2 141 1 50 1 98 2 53 1 99 2 309 1 148 2 152 2 266 1 156 2 103 1 14 3 114 1 204 2 116 1 119 1 76 8 26 2 326 1 122 1 242 1 80 1 282 1 211 1 87 1 330 1 290 2 291 2 220 1 132 4 294 1 135 2 
254 1 45 1 1 1 47 1 3 1 5 1 6 1 302 1 301 1 50 1 143 1 99 3 102 1 152 1 269 1 192 1 65 1 325 1 204 1 26 1 326 2 280 1 242 1 80 1 282 1 290 1 333 1 132 2 220 1 
45 1 114 1 47 1 200 1 204 1 26 1 6 1 302 1 205 1 143 1 282 2 99 2 102 1 152 1 290 1 269 1 132 2 65 1 
254 1 45 1 114 1 204 1 5 1 26 1 6 1 302 1 326 2 143 1 99 2 152 1 290 1 269 1 333 1 132 2 339 1 65 1 
254 1 45 2 47 1 6 1 5 1 302 1 143 2 99 4 102 1 152 1 269 2 65 2 325 1 114 1 200 1 204 1 26 1 326 2 282 2 290 1 333 1 132 2 
45 1 47 1 200 1 116 1 204 1 26 1 6 1 302 1 205 1 143 1 282 2 99 2 102 1 152 1 290 1 269 1 132 2 65 1 
254 1 45 1 116 1 204 1 5 1 26 1 6 1 302 1 326 2 143 1 99 2 152 1 290 1 269 1 333 1 132 2 339 1 65 1 
254 1 45 2 47 1 6 1 5 1 302 1 143 2 99 4 102 1 152 1 269 2 65 2 325 1 200 1 204 1 116 1 26 1 326 2 282 2 290 1 333 1 132 2 
254 1 45 2 47 1 6 1 5 1 302 1 143 2 99 4 102 1 152 1 269 2 65 2 325 1 200 1 204 1 26 1 326 2 282 2 290 1 333 1 132 2 
92 1 2 1 256 1 6 1 302 1 98 1 53 1 99 2 148 1 152 1 14 1 68 1 238 1 204 1 76 1 26 1 121 1 326 1 242 1 282 1 290 1 291 1 220 1 132 2 38 1 251 1 135 1 340 1 
92 1 2 1 256 1 6 1 302 1 98 1 53 1 99 2 148 1 152 1 14 1 235 1 238 1 204 1 76 1 26 1 326 1 28 1 242 1 282 1 290 1 247 1 291 1 220 1 132 2 251 1 135 1 340 1 
254 1 45 2 47 1 6 1 5 1 302 1 143 2 99 4 102 1 152 1 269 2 192 1 65 2 325 1 200 1 204 1 26 1 326 2 282 2 290 1 333 1 132 2 
254 1 45 2 47 1 2 1 256 1 5 1 6 1 302 1 143 2 98 1 99 4 102 1 148 1 152 1 269 2 14 1 65 2 68 1 325 1 238 1 200 1 204 1 76 1 26 1 326 2 121 1 122 1 242 1 282 2 290 1 333 1 220 1 132 2 175 1 38 1 135 1 340 1 
254 1 45 1 1 1 47 1 3 1 6 1 302 1 50 1 143 1 99 3 102 1 152 1 269 1 192 1 65 1 325 1 200 1 204 1 26 1 118 1 326 1 280 1 242 1 80 1 282 2 290 1 333 1 132 2 220 1 
254 4 0 1 6 3 5 4 99 41 102 4 264 2 267 1 270 1 18 4 275 1 19 1 200 4 24 1 202 1 206 1 282 20 30 1 290 3 132 6 137 1 45 8 47 5 225 1 300 1 302 3 303 1 52 1 152 3 150 1 157 1 317 3 61 4 324 1 325 4 77 1 326 21 327 1 169 3 333 5 248 1 250 1 179 1 
137 1 254 3 0 1 45 7 47 5 300 1 225 1 5 4 6 4 302 4 303 1 52 1 99 38 264 2 102 4 150 1 152 4 267 1 157 1 270 1 317 3 61 4 324 1 18 4 19 1 275 1 325 4 24 2 200 3 202 1 77 1 326 18 206 1 327 1 282 20 30 1 169 3 290 4 248 1 333 4 132 8 179 1 250 1 
137 1 254 7 0 2 45 14 47 8 300 1 225 1 5 7 6 2 302 2 303 1 52 1 99 52 264 1 102 7 150 1 152 2 267 1 270 1 60 2 317 4 61 4 324 1 18 4 19 1 275 1 325 7 24 1 200 7 77 1 326 25 206 1 327 1 282 27 30 1 169 2 290 2 248 1 333 8 132 4 179 1 250 1 
254 3 0 1 45 6 47 3 300 1 5 3 6 2 302 2 52 1 99 19 264 1 102 3 152 2 267 2 157 1 159 1 317 1 61 2 18 2 275 1 325 3 200 3 77 1 326 10 327 1 282 9 169 1 290 2 333 3 132 4 
137 1 254 2 45 4 47 3 300 1 225 1 5 2 6 3 302 3 52 1 99 26 264 2 102 3 152 3 267 1 270 1 317 2 61 2 18 4 275 1 19 1 325 3 200 2 24 2 77 1 326 12 327 2 282 14 169 2 290 3 248 1 333 2 132 6 250 1 
92 1 2 2 256 2 6 1 302 1 142 1 50 2 98 1 53 1 99 2 148 1 152 1 156 2 14 1 192 1 204 1 76 2 26 1 326 1 242 2 282 1 212 1 87 1 288 1 330 1 217 1 290 1 128 1 220 2 132 2 135 1 
95 2 256 2 2 2 239 1 25 1 76 2 166 1 141 1 122 1 98 1 97 1 32 1 86 1 148 1 312 1 314 1 318 1 337 1 109 1 
95 2 256 1 2 1 25 1 76 1 141 1 97 1 98 1 32 1 86 1 148 1 312 1 314 1 318 1 319 1 337 1 109 1 
256 1 2 1 76 1 166 1 98 1 309 1 86 1 148 1 101 1 172 1 266 1 291 1 14 1 135 1 
95 2 256 1 2 1 239 1 25 1 76 1 166 1 141 1 98 1 97 1 32 1 86 1 148 1 312 1 314 1 318 1 337 1 109 1 
58 1 
92 1 2 1 256 1 3 2 6 1 302 1 50 2 98 1 99 1 148 1 152 1 14 1 68 1 238 1 204 1 76 1 26 1 326 1 121 1 280 2 78 1 242 3 80 2 34 1 290 1 291 1 132 2 220 3 38 1 251 1 135 1 340 1 
296 1 113 4 22 2 46 2 27 1 303 1 144 1 308 4 145 1 54 2 158 1 106 2 16 1 272 1 66 2 
297 1 46 1 106 1 272 1 90 1 308 1 310 1 
46 1 299 1 227 1 304 1 144 1 308 2 145 1 54 1 262 1 56 1 158 1 106 1 272 1 16 1 322 1 113 1 332 1 
254 2 255 1 256 1 2 1 187 2 98 2 102 2 106 1 14 6 193 2 272 8 16 3 15 1 17 2 108 2 113 12 22 6 27 2 291 1 129 1 42 3 135 1 223 2 296 1 138 2 46 7 47 2 227 5 304 3 144 3 308 7 145 3 54 6 148 1 158 3 233 2 322 5 64 2 66 6 325 2 74 2 76 1 332 5 333 2 173 2 253 1 340 1 
296 1 137 1 254 2 46 5 47 2 227 1 304 1 144 2 308 5 145 2 54 3 102 2 270 1 158 2 317 1 106 2 272 8 61 1 16 2 322 1 64 2 110 1 66 5 19 1 113 6 325 2 22 5 27 1 169 1 127 1 332 1 248 1 333 2 250 1 223 1 
277 1 227 1 206 1 144 1 186 1 145 1 150 1 158 1 16 1 322 1 64 1 
297 1 46 1 144 1 308 1 145 1 158 1 106 1 90 1 16 1 272 1 
254 1 325 1 113 4 46 2 22 2 47 1 308 2 54 2 102 1 333 1 272 2 64 1 66 2 223 1 
227 1 332 1 106 1 304 1 322 1 308 1 
296 2 46 2 2 4 256 4 227 3 304 2 261 1 144 1 98 1 145 2 309 1 148 1 266 1 316 1 105 1 107 2 14 1 158 2 16 2 272 2 322 3 203 1 240 1 76 4 27 2 291 2 332 4 39 1 135 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
334 1 283 1 
85 1 188 1 
45 2 47 1 6 1 5 2 302 1 303 1 99 8 152 1 150 1 317 1 61 1 324 1 77 1 326 4 206 1 282 4 169 1 30 1 290 1 333 1 132 2 250 1 179 1 
0 1 45 3 47 2 5 2 6 2 302 2 303 1 99 11 102 1 150 1 152 2 317 1 61 2 194 1 324 1 325 1 200 1 77 1 326 5 206 1 282 6 30 1 169 1 290 2 333 1 132 4 179 1 250 1 
137 1 254 2 45 4 47 3 6 3 5 3 302 3 303 1 99 19 102 2 150 1 152 3 270 1 317 1 194 1 61 1 324 1 19 1 325 2 200 1 24 1 77 1 326 10 206 1 282 9 30 1 169 1 290 3 333 3 248 1 132 6 179 1 250 1 
137 1 254 1 45 5 47 3 6 3 5 3 302 3 303 1 99 17 102 2 150 1 152 3 270 1 317 1 194 1 61 1 324 1 19 1 325 2 24 1 200 2 77 1 326 7 206 1 282 10 30 1 169 1 290 3 333 2 248 1 132 6 179 1 250 1 
45 2 47 1 6 1 5 2 302 1 303 1 99 8 152 1 150 1 317 1 61 1 324 1 77 1 326 4 206 1 282 4 169 1 30 1 290 1 333 1 132 2 250 1 179 1 
137 1 254 2 45 2 47 2 6 1 5 1 302 1 99 12 102 2 152 1 270 1 317 1 61 1 19 1 325 2 200 1 77 1 326 6 282 6 169 1 290 1 333 2 248 1 132 2 250 1 
137 1 254 1 45 5 47 3 6 4 5 3 302 4 303 1 99 18 102 2 150 1 152 4 270 1 317 1 61 1 194 1 324 1 19 1 325 2 200 2 24 2 77 1 326 8 206 1 282 10 30 1 169 1 290 4 248 1 333 2 132 8 179 1 250 1 
137 1 254 2 45 6 47 3 6 4 5 3 302 4 99 16 102 3 152 4 270 1 157 1 317 1 61 1 19 1 325 3 200 3 24 2 77 1 326 7 282 9 169 1 290 4 248 1 333 2 132 8 250 1 
45 6 47 1 200 3 5 3 326 4 206 3 282 3 30 2 99 7 150 3 333 1 179 1 324 1 
137 1 254 1 45 4 47 3 6 4 5 3 302 4 303 1 99 18 102 2 150 1 152 4 270 1 157 1 317 1 61 1 324 1 19 1 325 2 200 1 24 2 77 1 326 8 206 1 282 10 30 1 169 1 290 4 248 1 333 2 132 8 179 1 250 1 
45 3 47 1 200 1 24 1 5 2 6 2 326 4 302 2 303 1 206 1 282 4 30 1 99 8 152 2 150 1 290 2 333 1 132 4 179 1 324 1 
45 2 47 1 5 2 326 3 303 1 206 1 282 3 30 1 310 1 99 6 150 1 333 1 179 1 324 1 
254 1 45 2 325 1 47 1 200 1 5 1 6 1 326 2 302 1 282 2 99 4 102 1 152 1 290 1 333 1 194 1 132 2 
254 1 0 1 325 1 45 2 47 1 200 1 5 1 326 4 282 3 169 1 99 7 102 1 333 1 317 1 61 2 
254 2 45 9 0 1 47 3 5 5 6 2 302 2 303 1 99 23 102 2 150 2 152 2 317 2 60 1 61 2 196 1 324 1 325 2 200 4 24 2 326 12 206 2 282 11 30 1 214 1 290 2 333 3 132 4 179 1 
326 1 61 1 99 1 
317 1 282 1 99 1 
254 1 325 1 45 3 47 1 200 1 6 1 5 2 302 1 326 3 282 3 99 6 102 1 152 1 290 1 333 1 132 2 194 1 17 1 
137 1 254 2 45 2 47 2 6 1 5 1 302 1 99 12 102 2 152 1 270 1 317 1 61 1 19 1 325 2 200 1 77 1 326 6 282 6 169 1 290 1 333 2 248 1 132 2 250 1 
45 2 150 1 47 1 200 1 5 1 333 1 326 3 206 1 282 3 99 6 324 1 
45 2 200 1 24 1 5 1 6 1 326 2 302 1 206 1 282 1 30 1 99 3 150 1 152 1 290 1 132 2 196 1 179 1 
45 1 150 1 5 1 206 1 186 1 
45 1 47 1 200 1 77 1 6 1 302 1 282 2 99 2 102 1 152 1 290 1 132 2 
254 1 45 2 325 1 47 1 200 1 5 1 77 1 6 1 326 2 302 1 282 2 99 4 102 1 152 1 290 1 333 1 132 2 
45 2 24 1 200 1 77 1 6 3 5 1 326 2 302 3 206 1 282 1 99 3 152 3 150 1 290 3 157 1 132 6 196 1 
254 3 0 1 45 12 47 5 6 5 5 7 302 5 303 1 99 34 102 3 150 3 151 1 152 5 190 1 157 1 317 3 61 4 194 1 196 1 324 2 325 3 24 2 200 5 77 1 326 18 206 3 282 16 30 1 169 1 126 1 290 5 333 5 132 10 179 1 
268 1 220 1 184 1 50 1 9 1 242 1 251 1 
184 1 50 1 9 1 242 1 210 1 216 1 268 1 220 1 273 1 251 1 323 1 160 1 
148 1 2 1 256 1 266 1 291 1 76 1 14 1 98 1 135 1 309 1 310 1 
238 1 256 1 2 1 3 1 76 1 50 1 242 2 98 1 80 1 148 1 103 1 291 1 14 1 220 2 38 1 251 1 135 1 340 1 
237 1 238 1 256 1 2 1 201 1 3 1 76 1 50 1 242 1 98 1 80 1 100 1 33 1 148 1 103 1 14 3 107 1 220 1 38 1 252 1 135 2 340 2 
237 1 238 1 256 1 2 1 201 1 3 1 76 1 50 1 242 1 98 1 80 1 100 1 33 1 148 1 247 1 103 1 14 3 107 1 220 1 252 1 135 2 340 2 
138 1 2 3 256 3 227 2 98 1 308 1 100 1 148 1 153 1 14 4 107 1 106 1 322 2 76 3 79 1 33 1 332 1 291 1 173 1 134 1 42 1 135 1 340 1 
138 1 256 3 2 3 227 2 76 3 98 1 308 1 100 1 33 1 148 1 291 1 332 1 106 1 173 1 107 1 193 1 14 4 134 1 322 2 42 1 135 1 340 1 
148 1 2 1 256 1 76 1 98 1 211 1 
258 1 256 6 2 7 119 1 76 7 48 1 141 1 122 1 98 3 211 1 87 1 148 2 315 1 156 1 291 2 14 3 294 1 253 1 135 2 234 1 340 1 
2 1 256 1 3 1 6 2 5 2 183 1 98 1 99 6 269 1 103 1 192 1 14 1 204 2 26 2 121 1 206 1 122 1 282 3 30 1 212 1 290 2 132 4 220 2 38 1 135 1 45 2 47 1 302 2 303 1 50 1 143 1 148 1 152 2 150 1 65 1 324 1 68 1 238 1 76 1 326 3 242 2 80 1 333 1 175 1 179 1 251 2 340 1 
297 1 138 1 46 1 2 1 256 1 140 1 227 3 304 1 144 2 187 1 308 1 145 2 106 1 158 2 193 1 14 2 272 1 16 2 108 1 322 3 203 1 74 1 76 1 291 1 332 2 173 1 90 1 42 1 
138 1 256 2 2 2 76 2 122 1 98 2 211 1 148 1 14 2 15 1 253 1 135 1 340 1 
112 1 256 4 2 4 76 4 122 1 98 1 309 1 148 1 266 1 291 1 14 1 134 1 135 1 
256 2 2 2 76 2 48 1 208 1 98 2 245 1 148 1 107 1 14 1 271 1 135 1 234 1 340 1 
95 1 148 1 2 1 256 1 25 1 291 1 76 1 318 1 98 1 97 1 
148 1 87 1 288 1 2 2 256 2 76 2 14 1 141 1 122 1 98 1 135 1 
112 1 256 4 2 5 258 1 76 5 122 1 98 2 309 1 87 1 148 2 266 1 291 1 107 1 14 3 294 1 135 2 
112 1 256 4 2 5 76 5 122 1 98 2 309 1 87 1 148 2 266 1 291 1 107 1 14 3 336 1 294 1 135 2 
238 1 256 1 2 1 3 1 76 1 50 1 242 2 98 1 80 1 148 1 247 1 103 1 291 1 14 1 220 2 251 1 135 1 340 1 
256 1 2 1 76 1 48 1 98 2 148 1 315 1 107 1 14 1 253 1 135 1 234 1 340 1 
71 1 260 1 321 1 177 1 251 1 
69 1 94 1 237 1 71 1 201 1 140 1 227 1 165 1 260 1 89 1 177 1 321 1 221 1 322 1 252 1 
217 1 128 1 220 1 142 1 260 1 50 1 321 1 177 1 242 1 
69 1 260 1 221 1 
161 1 257 3 199 1 209 3 265 1 59 1 37 1 219 1 338 1 222 1 197 1 
218 1 40 1 222 1 43 1 
219 1 222 1 
265 1 219 1 222 1 310 1 
161 1 265 1 257 1 219 1 209 1 338 1 222 1 
209 1 31 1 284 1 
161 1 257 3 209 3 168 1 329 1 265 1 130 1 37 1 219 1 338 1 222 1 197 2 
161 1 265 1 257 2 59 1 75 1 219 1 209 2 338 1 222 1 
161 1 95 1 314 1 218 1 257 1 37 1 174 1 318 1 209 1 338 1 222 1 
161 1 257 1 37 1 219 1 209 1 338 1 222 1 
161 1 265 1 257 1 37 1 219 2 209 1 338 1 
161 2 257 2 4 1 37 1 182 1 219 1 209 2 338 2 222 1 189 1 
161 1 265 1 218 1 199 1 257 3 59 2 37 1 219 1 209 3 338 1 222 2 43 1 123 1 
161 1 95 2 257 2 25 1 209 2 265 1 171 1 314 1 37 1 59 1 219 1 318 1 338 1 109 1 222 1 
161 2 265 1 218 1 257 4 35 1 59 2 75 1 37 1 219 1 209 4 338 2 222 2 43 1 
161 1 265 1 257 1 37 1 219 1 209 1 338 1 222 1 
161 1 257 4 168 1 209 4 265 2 218 1 130 1 59 2 219 2 338 1 40 1 43 1 222 3 197 1 
161 1 111 1 257 2 209 2 265 1 37 1 191 1 59 1 219 1 338 1 222 1 41 1 
161 1 257 3 168 1 209 3 81 1 265 1 130 2 37 1 219 1 338 1 222 1 197 2 
289 1 279 1 295 2 222 2 
161 1 246 1 257 1 37 1 209 1 338 1 
161 1 265 1 199 1 257 2 59 1 37 1 219 1 209 2 338 1 222 1 
263 1 
161 1 265 1 257 1 37 1 219 1 209 1 338 1 222 1 

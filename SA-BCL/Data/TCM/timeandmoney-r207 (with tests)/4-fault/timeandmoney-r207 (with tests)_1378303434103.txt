#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 3 71 1 278 9 145 1 72 2 283 1 197 2 23 2 171 1 54 1 322 1 297 1 266 4 219 1 200 5 106 9 303 1 221 2 85 1 369 1 270 2 88 1 356 2 229 1 248 1 311 2 94 6 359 1 
253 3 71 1 278 9 145 1 72 2 283 1 197 2 23 2 171 1 54 1 322 1 297 1 266 4 219 1 200 5 106 9 303 1 221 2 85 1 369 1 270 2 88 1 356 2 229 1 248 1 311 2 94 6 359 1 
253 4 71 1 278 10 145 1 72 2 283 1 197 2 23 2 171 1 54 1 322 1 297 1 266 5 219 1 200 6 106 10 303 1 221 2 85 1 369 1 270 2 88 1 356 2 229 1 248 1 311 2 94 7 359 1 
253 2 71 1 278 7 145 1 72 2 283 1 197 2 23 2 171 1 54 1 322 1 297 1 266 3 219 1 200 4 106 7 303 1 221 1 85 1 270 2 88 1 356 2 229 1 248 1 311 2 94 4 359 1 
253 1 278 4 72 1 106 4 303 1 221 2 283 1 369 1 270 1 197 1 23 1 54 1 248 1 311 1 94 3 266 2 359 1 200 3 
278 2 145 1 72 1 106 2 303 1 36 1 270 1 197 1 88 1 351 1 356 1 248 1 249 1 311 1 200 1 359 1 
253 1 278 3 106 3 303 1 270 2 197 2 356 1 248 1 266 1 94 1 359 1 219 1 200 2 
253 3 278 9 72 1 283 1 197 2 23 1 54 1 266 4 219 1 200 5 345 1 106 9 303 1 221 2 85 1 239 1 270 2 369 1 356 1 229 1 248 1 311 1 94 7 359 1 
253 3 278 9 72 1 283 1 197 2 23 1 54 1 266 4 219 1 200 5 345 1 106 9 303 1 221 2 85 1 239 1 270 2 369 1 356 1 229 1 248 1 311 1 94 7 359 1 
20 1 127 1 285 1 
337 1 77 2 285 1 
95 2 254 2 175 2 326 1 113 2 52 2 78 1 222 2 
95 2 143 1 254 2 282 1 288 1 173 1 4 1 175 3 27 1 6 1 261 1 263 1 52 2 126 1 78 1 299 1 130 2 59 1 326 1 84 1 269 1 346 1 202 2 240 2 222 2 354 2 185 1 225 1 273 1 355 2 113 3 187 1 67 1 140 1 92 1 93 1 336 1 
95 1 254 1 76 1 175 1 113 1 52 1 98 1 78 1 120 1 222 1 
254 1 60 1 120 1 22 1 285 1 50 1 260 1 174 1 175 1 113 1 112 1 127 1 335 1 250 1 
95 1 254 1 222 1 120 1 22 1 285 1 260 2 50 1 174 1 175 1 52 1 113 1 112 1 127 1 335 2 
260 1 215 1 154 1 335 1 375 1 
163 1 260 2 215 1 127 1 335 2 375 1 285 1 259 1 
260 1 215 1 335 1 
95 1 254 1 73 1 98 1 120 1 222 1 260 1 76 1 175 1 52 1 113 1 78 1 335 1 375 1 
285 1 
163 1 260 2 215 1 127 1 335 2 375 1 285 1 198 1 
167 2 144 1 280 1 182 1 107 1 285 1 163 1 260 5 89 2 3 1 137 2 111 1 215 2 15 1 127 1 335 5 231 1 375 2 79 1 
20 1 326 1 
233 1 95 1 254 2 326 2 222 1 183 1 175 2 113 2 52 1 
43 1 47 1 276 1 
130 1 326 1 202 1 134 1 288 1 185 1 4 1 175 1 273 1 261 1 355 1 113 1 126 1 187 1 67 1 93 1 
130 1 254 1 202 1 222 1 353 1 288 1 185 1 4 1 175 2 273 1 261 1 355 1 126 1 52 1 113 2 43 1 67 1 187 1 93 1 17 1 
95 1 254 3 175 3 326 1 113 3 52 3 222 3 353 1 
254 1 175 1 113 1 52 1 98 1 120 1 222 1 
95 1 233 1 254 1 175 1 113 1 52 1 120 1 222 1 183 1 
143 1 95 2 233 1 254 3 120 1 22 1 288 1 50 1 260 1 4 1 174 1 175 4 27 1 261 1 263 1 126 1 52 3 78 1 102 1 299 1 130 1 59 1 326 1 346 1 202 1 156 1 240 1 222 3 353 1 354 2 185 1 225 1 273 1 355 1 113 4 112 1 67 1 187 1 335 1 140 1 92 1 93 1 17 1 336 1 
254 2 60 1 13 1 175 2 326 1 113 2 52 1 222 1 353 1 
95 1 233 1 254 3 120 1 222 3 242 1 22 1 285 1 353 2 260 1 50 1 174 1 175 3 52 3 113 3 112 1 335 1 102 1 17 1 
233 1 95 1 254 2 222 2 353 1 175 2 52 2 113 2 43 1 276 1 
130 1 326 1 202 1 185 1 288 1 4 1 175 1 273 1 261 1 355 1 113 1 126 1 187 1 67 1 93 1 
130 1 326 1 202 1 185 1 288 1 175 1 5 1 273 1 261 1 355 1 14 1 113 1 126 1 67 1 93 1 
210 1 193 1 47 2 172 1 287 1 263 1 148 1 299 1 59 1 84 2 346 1 240 4 157 1 109 1 354 2 207 1 225 1 43 2 309 1 92 1 276 2 377 1 166 1 336 2 
12 1 254 1 175 1 112 1 113 1 52 1 120 1 222 1 
233 1 95 1 254 5 60 1 326 1 97 1 222 4 353 2 13 1 175 5 52 4 113 5 237 1 17 1 
12 1 254 2 175 2 113 2 52 2 98 1 120 1 222 2 
235 1 100 1 
235 1 100 1 
0 1 208 1 
0 1 208 1 
0 1 208 1 
235 1 176 1 100 1 
235 1 176 1 100 1 
235 1 176 1 100 1 
235 1 232 1 100 1 
64 1 0 1 208 1 235 2 243 1 100 2 
256 1 235 1 100 1 
256 1 235 1 100 1 
256 1 235 1 100 1 
80 2 81 2 201 1 117 2 235 2 258 1 285 1 349 1 286 2 100 2 260 2 290 1 246 2 64 1 91 1 26 3 307 1 358 1 335 2 
80 1 81 1 254 2 326 1 238 1 360 1 117 1 222 2 235 1 286 1 162 1 100 1 290 1 260 1 175 2 26 1 113 2 52 2 335 1 188 1 232 1 310 1 209 1 325 1 
72 1 311 1 23 1 
72 1 36 1 311 1 
36 1 374 1 264 1 311 3 23 2 48 1 
41 1 36 1 374 1 264 1 311 2 23 1 
36 1 264 1 374 2 311 2 23 1 
167 1 19 1 337 1 360 1 285 2 172 1 260 5 215 1 77 2 127 1 367 1 79 1 107 2 348 1 133 1 163 1 89 1 207 1 137 1 111 1 335 5 188 1 375 4 114 2 310 1 189 1 376 1 190 1 141 1 252 1 
191 1 337 3 285 5 3 1 152 1 154 5 158 1 107 6 108 1 163 1 207 3 111 1 310 4 252 2 166 1 167 2 210 1 172 3 260 9 215 6 77 7 127 1 366 1 79 4 131 5 34 1 370 1 133 4 89 2 137 2 335 9 375 7 376 2 189 4 190 3 141 1 
95 1 167 1 254 1 337 1 73 1 98 1 120 1 285 2 172 1 260 3 76 1 3 1 175 1 52 1 77 2 78 1 127 1 367 1 79 1 222 1 348 1 107 2 133 1 89 1 207 1 137 1 113 1 335 3 375 2 310 1 114 1 376 1 189 1 190 1 252 1 
191 1 95 1 337 2 98 1 285 3 3 1 52 1 152 1 107 4 348 1 108 1 207 2 113 1 114 2 310 2 252 1 167 1 254 1 73 1 120 1 172 2 260 4 76 1 175 1 77 4 127 1 78 1 367 1 79 1 222 1 133 2 89 1 137 1 335 4 375 3 376 1 189 2 190 2 
288 1 20 1 363 1 
288 1 338 1 
53 1 
288 1 185 1 
288 3 185 1 363 2 330 1 93 1 352 1 
288 1 185 1 93 1 
288 1 217 1 
31 1 7 1 192 1 84 4 279 1 302 1 180 1 240 7 223 1 287 2 207 1 125 2 294 1 377 3 45 1 336 3 166 1 
31 1 7 1 192 1 84 4 279 1 302 1 180 1 240 7 223 1 287 2 207 1 125 2 294 1 377 3 45 1 336 3 166 1 
31 1 7 1 192 1 302 1 84 4 279 1 180 1 240 7 223 1 287 2 207 1 125 2 262 1 294 1 377 3 45 1 336 3 166 1 
192 2 313 1 279 1 255 1 210 1 172 4 287 4 291 1 320 4 51 1 125 3 294 2 218 4 31 1 299 2 59 2 7 5 82 2 302 1 84 19 346 2 240 31 180 2 223 2 184 1 354 4 224 1 207 5 225 2 110 1 44 1 377 9 45 1 190 4 166 2 336 12 
192 1 279 1 287 3 362 1 125 2 294 1 299 2 31 1 59 2 7 1 82 1 84 5 302 1 346 2 240 9 180 1 160 1 223 1 354 4 207 1 225 2 377 4 166 1 336 4 
278 2 72 1 315 1 361 1 197 1 339 1 23 1 48 1 123 1 296 1 128 1 200 1 30 1 130 1 106 2 303 1 202 1 36 1 9 1 270 1 273 1 355 1 356 1 308 1 67 1 357 1 248 1 311 2 94 1 359 1 
278 3 72 1 315 1 361 1 197 1 339 1 23 1 48 1 25 1 24 1 123 1 296 1 200 1 130 1 106 3 303 1 202 1 36 1 9 1 270 1 273 1 355 1 356 1 308 1 68 1 67 1 357 1 248 1 311 2 94 2 
278 2 72 1 361 1 339 1 23 1 48 1 25 1 24 1 123 1 296 1 200 1 130 1 106 2 303 1 202 1 36 1 9 1 273 1 356 1 355 1 308 1 67 1 248 1 311 2 94 2 
130 1 178 1 278 1 106 1 202 1 304 1 270 1 9 2 197 1 159 1 288 1 185 1 123 2 273 1 356 2 261 1 355 1 165 1 67 1 68 1 308 2 230 1 151 1 
130 1 278 1 72 1 106 1 202 1 315 1 36 1 361 1 270 1 9 1 339 1 197 1 23 1 48 1 25 1 123 1 273 1 356 1 355 1 67 1 308 1 357 1 296 1 311 2 128 1 359 1 
116 1 
337 2 96 2 195 4 285 2 2 1 288 1 50 1 342 1 151 1 344 1 60 1 202 2 155 1 241 2 107 2 159 1 350 2 61 2 163 3 111 1 355 2 113 1 112 1 67 1 247 2 70 1 250 1 167 1 254 1 21 1 169 2 120 1 22 1 75 1 260 5 174 1 175 1 215 6 261 2 77 2 127 1 79 2 130 2 220 1 33 1 35 2 185 1 89 1 136 1 137 1 40 1 273 1 335 5 376 1 277 1 
254 1 21 1 120 1 195 2 22 1 198 1 75 1 260 3 50 1 174 1 175 1 215 2 33 1 220 1 60 1 35 1 163 1 113 1 112 1 335 3 250 1 277 1 
254 1 21 1 120 1 195 3 22 1 285 1 198 1 75 1 260 3 50 1 174 1 175 1 215 1 127 1 33 1 220 1 60 1 61 1 163 1 113 1 112 1 335 3 250 1 277 1 
254 1 21 1 120 1 195 3 22 1 198 1 285 1 75 1 260 3 50 1 174 1 175 1 215 2 127 1 33 1 220 1 60 1 35 1 241 1 61 1 163 1 113 1 112 1 335 3 250 1 277 1 
96 2 337 2 195 6 198 1 285 5 49 1 50 1 342 1 60 1 155 1 241 4 107 1 350 2 61 4 163 3 111 1 112 1 113 1 247 2 250 1 167 1 254 1 21 1 120 1 169 2 22 1 121 1 75 1 260 5 174 1 175 1 215 7 127 5 79 1 32 1 220 1 33 1 35 4 86 1 332 1 89 1 137 1 335 5 277 1 
96 2 337 2 195 4 285 2 50 1 342 1 60 1 155 1 241 2 107 1 350 2 61 2 163 2 111 1 112 1 113 1 247 2 250 1 167 1 254 1 21 1 120 1 169 2 22 1 75 1 260 4 174 1 175 1 215 4 77 2 127 1 79 1 220 1 33 1 35 2 89 1 136 1 137 1 335 4 277 1 
167 1 254 1 337 2 96 2 21 1 169 2 120 1 195 4 22 1 285 1 121 1 75 1 49 1 260 4 50 1 174 1 175 1 215 4 127 1 79 1 342 1 32 1 33 1 220 1 60 1 35 2 155 1 241 2 107 1 350 2 61 2 163 2 89 1 137 1 111 1 113 1 112 1 335 4 247 2 250 1 277 1 
167 1 254 1 337 2 96 2 21 1 169 2 120 1 195 4 22 1 285 1 121 1 75 1 49 1 260 4 50 1 174 1 175 1 215 4 127 1 79 1 342 1 32 1 33 1 220 1 60 1 35 2 155 1 241 2 107 1 350 2 61 2 163 2 89 1 137 1 111 1 113 1 112 1 335 4 247 2 250 1 277 1 
167 1 254 1 96 2 21 1 120 1 195 4 22 1 285 1 121 1 75 1 260 4 50 1 174 1 175 1 215 4 77 2 127 1 79 1 33 1 220 1 60 1 35 2 155 1 241 2 107 1 333 2 61 2 205 1 163 2 39 2 89 1 186 1 90 1 137 1 111 1 113 1 112 1 335 4 247 2 250 1 277 1 
167 1 254 1 337 2 96 2 21 1 169 2 120 1 195 5 22 1 285 1 121 1 49 1 75 1 260 4 50 1 174 1 175 1 215 5 127 1 79 1 342 1 32 1 33 1 220 1 60 1 35 3 155 1 241 3 107 1 350 2 332 1 61 3 163 2 89 1 137 1 111 1 113 1 112 1 335 4 247 2 250 1 277 1 
167 1 254 1 337 2 96 2 21 1 169 2 120 1 195 5 22 1 285 1 121 1 49 1 75 1 260 4 50 1 174 1 175 1 215 5 127 1 79 1 342 1 32 1 33 1 220 1 60 1 35 3 155 1 241 3 107 1 350 2 332 1 61 3 163 2 89 1 137 1 111 1 113 1 112 1 335 4 247 2 250 1 277 1 
96 2 195 4 285 1 50 1 60 1 155 1 241 2 107 1 61 2 205 1 163 2 111 1 112 1 113 1 247 2 250 1 167 1 254 1 21 1 120 1 22 1 75 1 260 4 174 1 175 1 215 4 77 2 127 1 79 1 220 1 33 1 35 2 333 2 89 1 39 2 136 1 137 1 335 4 277 1 
20 1 192 1 279 1 47 1 287 2 125 1 263 1 299 1 31 1 59 1 326 2 302 1 84 3 346 1 240 6 157 1 223 1 354 2 225 1 207 1 43 1 276 1 92 1 377 2 166 1 336 3 
313 1 210 1 47 11 172 2 287 1 236 1 320 3 27 1 263 1 149 1 218 3 343 1 299 2 59 2 7 1 326 1 268 1 84 8 269 1 346 2 240 14 184 1 354 4 224 1 225 2 207 2 43 11 377 2 92 2 276 3 190 2 166 1 336 6 
115 1 254 1 199 1 288 1 236 1 213 1 4 1 175 2 261 1 27 1 126 1 263 1 52 1 299 1 130 1 59 1 326 1 84 1 202 1 346 1 269 1 222 1 240 2 134 1 353 1 185 1 354 2 225 1 273 1 355 1 113 2 67 1 187 1 93 1 276 1 92 1 17 1 336 1 
143 2 192 1 279 1 47 6 236 1 288 2 287 3 4 2 52 1 299 3 59 3 302 1 202 1 346 3 240 18 353 1 354 6 63 1 207 3 355 1 113 3 67 2 17 1 166 2 312 2 254 1 210 1 172 2 175 3 125 1 27 1 261 1 263 3 126 2 365 2 324 2 31 1 130 1 326 2 84 10 269 1 222 1 38 1 223 1 185 2 225 3 272 2 273 2 187 2 43 6 377 3 92 3 93 2 276 5 190 2 336 8 
254 1 25 1 288 3 175 1 101 1 261 2 27 1 6 2 52 1 263 2 293 1 150 1 151 1 30 1 299 2 130 8 59 2 83 1 84 1 202 7 346 2 269 1 222 1 240 2 157 1 10 1 159 1 353 1 354 4 185 2 225 2 226 1 273 2 355 8 227 1 113 1 67 2 92 2 336 1 
95 1 233 1 254 1 172 1 236 1 175 1 263 1 52 1 299 1 59 1 84 1 346 1 222 1 240 1 354 2 225 1 207 1 16 1 113 1 92 1 190 1 
299 1 59 1 7 1 84 2 346 1 240 2 47 1 157 1 172 1 354 2 225 1 207 1 263 1 43 1 309 1 377 1 276 1 92 1 
299 1 59 1 346 1 193 1 210 1 240 2 47 1 157 1 287 1 354 2 225 1 263 1 43 1 377 1 276 1 92 1 166 1 336 2 
299 1 59 1 84 2 346 1 240 2 47 1 157 1 172 1 354 2 225 1 207 1 263 1 43 1 276 1 92 1 190 1 
299 1 59 1 7 1 84 2 346 1 240 2 47 1 10 1 172 1 354 2 225 1 207 1 263 1 43 1 309 1 377 1 276 1 92 1 
299 1 59 1 346 1 193 1 210 1 240 2 47 1 10 1 354 2 225 1 263 1 43 1 276 1 92 1 166 1 336 2 
299 1 59 1 84 2 346 1 240 2 47 1 10 1 172 1 354 2 225 1 207 1 263 1 43 1 276 1 92 1 190 1 
299 1 59 1 84 2 346 1 240 2 47 1 172 1 354 2 225 1 207 1 263 1 43 1 276 1 92 1 190 1 
143 1 288 1 4 1 175 1 261 1 27 1 126 1 263 1 299 1 130 1 59 1 326 1 84 1 269 1 202 1 346 1 240 2 185 1 354 2 225 1 273 1 355 1 113 1 67 1 187 1 93 1 92 1 336 1 
288 1 175 1 5 1 261 1 27 1 126 1 263 1 299 1 130 1 59 1 326 1 84 1 269 1 202 1 346 1 240 2 185 1 354 2 225 1 273 1 14 1 355 1 113 1 67 1 138 1 93 1 92 1 336 1 
299 1 59 1 84 2 346 1 240 2 47 1 172 1 236 1 354 2 225 1 207 1 263 1 43 1 276 1 92 1 190 1 
143 1 312 1 47 1 172 1 288 1 4 1 175 1 126 1 263 1 30 1 299 1 130 1 59 1 84 2 202 1 346 1 240 2 185 1 354 2 207 1 225 1 273 1 355 1 113 1 43 1 67 1 187 1 276 1 93 1 92 1 190 1 
95 1 233 1 254 1 210 1 47 1 172 1 236 1 175 1 263 1 52 1 267 1 299 1 59 1 84 2 346 1 222 1 240 3 354 2 225 1 207 1 113 1 43 1 92 1 190 1 336 1 166 1 
192 1 313 2 279 1 210 1 281 1 284 1 99 1 74 1 172 7 287 2 318 1 122 3 362 1 320 4 125 1 216 1 218 4 58 1 31 1 105 1 299 3 59 3 82 1 7 7 302 1 84 27 346 3 240 40 37 1 204 1 223 1 184 2 62 1 354 6 224 2 225 3 207 8 275 1 373 1 377 9 190 7 166 2 336 13 
210 1 281 1 99 2 284 1 74 1 172 2 287 1 318 1 122 2 362 1 320 2 216 1 55 1 218 2 105 1 299 1 59 1 84 9 346 1 240 16 37 1 204 1 62 1 354 2 224 2 225 1 207 2 373 2 377 1 190 2 166 1 336 7 
192 1 313 2 279 1 210 2 281 1 284 1 99 1 74 1 172 7 287 3 318 1 122 4 362 1 320 4 125 1 216 1 55 1 218 4 31 1 105 1 299 3 59 3 82 1 7 7 302 1 84 28 346 3 240 44 37 1 204 1 223 1 184 2 62 1 354 6 224 2 225 3 207 8 275 1 373 1 377 10 190 7 166 3 336 16 
192 1 313 2 279 1 210 2 281 1 284 1 99 1 74 1 172 7 287 3 318 1 122 4 362 1 320 4 125 1 216 1 55 1 218 4 31 1 105 1 299 3 59 3 82 1 7 7 302 1 84 28 346 3 240 44 37 1 204 1 223 1 184 2 62 1 354 6 224 2 225 3 207 8 275 1 373 1 377 10 190 7 166 3 336 16 
192 1 313 2 279 1 210 2 281 1 284 1 99 1 74 1 172 7 287 3 318 1 122 3 362 1 320 4 125 1 216 1 55 1 218 4 31 1 105 1 299 1 59 1 7 6 302 1 84 25 346 1 240 39 37 1 204 1 223 1 184 2 62 1 354 2 224 2 225 1 207 8 373 1 377 9 190 7 166 3 336 14 
80 1 81 1 64 1 201 1 124 1 117 1 358 1 235 1 286 1 100 1 
232 1 325 1 
80 1 81 1 117 1 69 1 235 1 286 1 371 1 56 1 100 1 
80 1 81 1 201 1 117 1 235 1 285 1 349 1 286 1 100 1 290 1 260 1 246 1 64 1 91 1 26 2 307 1 358 1 335 1 
80 1 81 1 201 1 117 1 235 1 285 1 349 1 286 1 100 1 290 1 260 1 246 1 64 1 91 1 26 2 307 1 358 1 335 1 
80 1 81 1 201 1 117 1 235 1 285 1 349 1 286 1 100 1 290 1 260 1 246 1 64 1 91 1 26 2 307 1 358 1 335 1 
176 1 243 1 18 1 
176 1 243 1 18 1 
256 1 181 1 
256 1 181 1 243 1 
209 1 162 1 
254 2 117 1 360 1 235 1 286 1 100 1 340 1 260 1 175 2 26 1 52 2 325 1 80 1 81 1 326 1 238 1 222 2 162 1 246 1 113 2 307 1 335 1 188 1 375 1 310 1 232 1 209 1 
176 1 18 1 
256 1 181 1 243 1 
254 2 314 1 288 1 236 1 341 1 175 2 27 1 6 2 263 1 298 1 299 1 300 1 130 2 59 1 83 1 368 1 84 1 346 1 269 1 202 2 240 2 185 1 354 2 225 1 273 1 355 2 227 1 113 2 67 1 92 1 336 1 
130 2 72 1 202 2 328 1 36 1 361 1 23 1 48 1 25 1 245 1 123 1 273 1 355 2 67 1 357 1 321 1 296 1 311 2 30 1 
130 1 177 1 72 1 202 1 36 1 361 1 23 1 48 1 25 1 123 1 273 1 355 1 67 1 357 1 321 1 296 1 311 2 
130 1 202 1 159 1 288 1 185 1 245 1 123 1 273 1 261 1 355 1 67 1 28 1 230 1 151 1 
130 1 72 1 202 1 328 1 36 1 361 1 23 1 48 1 25 1 245 1 123 1 273 1 355 1 67 1 357 1 321 1 296 1 311 2 
301 1 
20 1 15 1 280 1 127 1 107 1 285 1 79 1 
167 1 337 1 169 1 107 1 285 2 350 1 163 1 260 1 89 1 137 1 215 1 111 1 77 1 127 1 335 1 79 1 342 1 
337 4 338 3 1 2 194 2 285 5 288 6 344 1 202 1 107 7 158 1 163 3 207 2 111 3 306 2 65 1 355 1 67 1 166 1 167 3 210 1 22 2 170 2 172 2 260 5 215 5 261 1 363 2 77 9 127 1 29 1 79 6 323 1 324 2 130 1 329 2 330 1 133 5 372 2 185 1 89 3 137 3 273 2 335 5 376 2 93 1 189 5 190 2 
167 1 337 2 284 1 285 2 74 1 172 2 318 1 320 1 77 4 216 1 79 2 218 1 107 4 204 1 133 3 224 1 89 1 207 2 137 1 111 1 189 3 190 2 
167 1 95 1 254 1 192 1 73 1 98 1 194 1 120 1 49 1 260 1 76 1 175 1 52 1 78 1 79 2 31 1 222 1 158 2 107 2 223 1 89 1 207 2 137 1 111 1 113 1 335 1 139 1 166 1 
167 1 89 1 137 1 111 1 15 1 280 1 127 1 107 1 285 1 79 1 
337 1 107 2 285 1 133 1 172 1 207 1 77 2 189 1 190 1 
163 1 260 1 215 1 127 1 335 1 285 1 
167 2 234 2 2 1 288 1 260 3 3 1 215 4 261 2 79 2 151 1 130 4 344 2 202 4 331 1 107 2 87 1 159 1 244 1 185 1 163 2 89 2 137 2 273 1 111 1 355 4 67 1 335 3 70 1 376 2 
95 2 143 1 254 2 288 1 4 1 175 3 27 1 261 1 52 2 126 1 263 1 78 1 299 1 130 1 59 1 326 1 346 1 202 1 240 1 222 2 354 2 185 1 225 1 273 1 355 1 113 3 187 1 67 1 140 1 93 1 92 1 336 1 
167 1 344 1 337 2 107 2 285 4 133 2 89 1 137 1 125 1 111 1 77 4 127 2 79 1 189 2 376 1 
319 1 80 1 117 1 
319 1 80 1 117 1 
319 1 80 1 117 1 
80 1 164 1 117 1 358 1 209 1 
80 1 117 1 305 1 
80 1 117 1 305 1 
80 1 117 1 305 1 
80 1 117 1 
235 1 100 1 
31 1 299 2 59 2 7 1 82 1 192 1 84 4 279 1 302 1 346 2 240 8 223 1 287 2 354 4 207 1 225 2 125 1 377 3 166 1 336 4 
31 1 20 1 192 1 279 1 302 1 84 3 240 6 223 1 287 2 207 1 125 1 377 2 336 3 166 1 
299 1 59 1 84 2 346 1 240 2 172 1 354 2 225 1 207 1 295 1 190 1 
7 2 313 1 84 6 240 8 184 1 172 2 224 1 320 2 207 2 377 2 190 2 218 2 336 2 
192 4 313 1 279 1 172 2 287 5 320 2 125 1 149 1 218 2 31 2 299 2 59 2 7 5 82 2 84 14 302 1 346 2 240 26 223 4 184 1 354 4 207 4 225 2 110 1 139 1 377 10 190 2 166 2 336 12 
240 1 336 1 218 1 
320 1 84 1 240 1 
207 1 7 1 84 3 240 4 377 1 324 1 190 1 172 1 336 1 
299 1 59 1 7 1 84 6 346 1 240 8 284 1 74 1 204 1 172 2 318 1 354 2 224 1 207 2 362 1 225 1 320 1 216 1 377 1 190 2 218 1 336 2 
31 1 7 1 192 1 84 3 240 6 223 1 287 1 207 1 377 2 166 1 336 3 
299 1 59 1 7 1 82 1 192 1 84 1 302 1 279 1 346 1 240 3 223 1 287 1 354 2 225 1 110 1 377 2 336 2 
299 1 31 1 59 1 7 2 192 2 84 5 346 1 240 10 223 2 354 2 287 3 225 1 362 1 207 2 139 1 377 5 336 5 166 2 
299 1 59 1 7 1 84 2 346 1 240 2 172 1 354 2 362 1 225 1 207 1 377 1 
299 1 59 1 7 1 84 2 210 1 346 1 240 4 172 1 287 1 354 2 362 1 225 1 207 1 377 2 190 1 336 2 166 1 
299 3 59 3 82 1 7 1 192 1 84 1 346 3 240 3 223 1 354 6 287 1 362 1 225 3 110 1 275 1 377 2 336 2 
192 3 313 1 279 1 255 1 210 3 172 4 287 7 291 1 362 1 320 4 125 1 295 1 218 4 31 2 299 5 59 5 82 2 7 6 302 1 84 20 346 5 240 39 223 3 184 1 354 10 224 1 225 5 207 6 110 1 275 1 44 1 377 13 190 4 336 19 166 5 
192 1 279 1 284 1 287 2 320 1 362 1 125 1 218 1 299 1 31 1 59 1 84 4 302 1 346 1 240 8 223 1 354 2 224 1 207 1 225 1 377 2 166 1 336 4 
313 1 210 3 284 1 74 1 172 4 318 1 287 3 362 1 320 2 216 1 295 1 218 2 299 2 59 2 7 2 84 11 346 2 240 20 204 1 184 1 354 4 224 1 225 2 207 4 377 5 190 4 336 9 166 3 
284 1 74 1 172 2 318 1 320 1 362 1 216 1 295 1 218 1 299 2 59 2 7 1 84 6 346 2 240 8 204 1 354 4 224 1 225 2 207 2 377 1 190 2 336 2 
210 1 284 1 74 1 172 2 318 1 287 1 320 1 362 1 216 1 295 1 218 1 299 2 59 2 84 6 346 2 240 10 204 1 354 4 224 1 225 2 207 2 377 1 190 2 336 4 166 1 
192 1 279 1 284 1 287 2 320 1 362 1 125 1 218 1 299 1 31 1 59 1 84 4 302 1 346 1 240 8 223 1 354 2 224 1 207 1 225 1 377 2 166 1 336 4 
299 1 59 1 7 1 84 6 346 1 240 8 284 1 74 1 204 1 172 2 318 1 354 2 224 1 207 2 362 1 225 1 320 1 216 1 377 1 190 2 218 1 336 2 
210 1 284 1 74 1 172 2 318 1 287 1 362 1 320 1 216 1 295 1 218 1 299 2 59 2 84 6 346 2 240 10 204 1 354 4 224 1 225 2 207 2 377 1 190 2 336 4 166 1 
210 1 284 1 74 1 172 2 287 1 318 1 362 1 320 1 216 1 218 1 299 3 59 3 82 1 7 2 84 7 346 3 240 11 204 1 354 6 224 1 225 3 207 2 275 1 377 3 190 2 166 1 336 4 
31 1 7 3 192 3 279 1 302 2 84 3 240 7 223 3 287 3 207 1 377 6 336 4 166 1 
210 1 284 1 74 1 172 2 318 1 287 1 362 1 320 1 216 1 218 1 299 3 59 3 82 1 7 1 84 7 346 3 240 11 204 1 354 6 224 1 225 3 207 2 275 1 377 2 190 2 336 4 166 1 
57 1 254 1 175 1 60 1 13 1 326 1 113 1 
57 1 179 1 254 1 60 1 326 1 327 1 132 1 292 1 13 1 175 1 42 1 113 1 
288 1 185 1 130 1 20 1 273 1 355 1 261 1 202 1 67 1 159 1 151 1 
130 1 254 1 326 1 202 1 222 1 353 1 288 1 185 1 4 1 175 2 273 1 261 1 355 1 126 1 52 1 113 2 67 1 93 1 
130 1 254 2 8 1 326 1 202 1 234 1 120 1 222 1 353 1 288 3 185 2 50 1 4 1 175 2 273 1 355 1 112 1 126 1 52 2 113 2 67 1 217 1 93 2 
254 2 234 1 120 1 147 1 288 3 50 1 175 2 52 2 126 1 217 1 130 2 8 1 326 1 202 2 222 1 353 1 185 2 273 1 14 1 355 2 113 2 112 1 67 1 93 2 
130 3 153 1 8 1 202 3 338 1 234 1 257 1 22 1 285 1 147 1 185 1 288 4 260 2 273 1 215 1 261 1 355 3 363 1 127 1 67 1 335 2 217 1 93 1 
95 1 254 1 338 1 73 1 98 1 234 1 120 1 22 1 285 1 288 2 260 2 76 1 175 1 215 1 363 1 52 1 127 1 78 1 130 1 202 1 329 1 222 1 355 1 113 1 335 2 
130 1 273 1 101 1 355 1 202 1 67 1 
130 7 202 6 330 1 317 1 25 1 185 2 288 3 214 1 334 1 101 1 226 1 273 3 6 1 261 2 355 7 227 1 67 2 293 1 150 1 93 1 30 1 
143 1 192 1 279 1 47 1 236 1 288 1 287 2 4 1 52 1 298 1 299 2 59 2 302 1 202 1 346 2 240 6 353 1 354 4 207 1 355 1 113 2 67 1 166 1 312 1 254 1 175 2 125 1 263 2 126 1 30 1 31 1 130 1 326 2 84 3 222 1 223 1 185 1 225 2 272 1 273 1 187 1 43 1 276 1 92 2 93 1 377 2 336 3 
167 2 280 1 338 1 1 1 22 1 285 1 170 1 288 2 260 3 215 2 261 1 363 1 127 1 79 1 130 1 202 1 329 1 107 1 244 1 372 1 163 1 89 2 137 2 111 2 15 1 355 1 335 3 375 1 
130 2 202 2 330 1 185 1 288 2 101 1 273 2 355 2 363 1 67 1 323 1 93 1 30 1 
168 1 130 4 202 4 159 1 147 1 185 1 288 1 273 1 261 1 355 4 67 1 151 1 30 1 
142 1 130 2 202 2 234 1 212 1 317 1 185 1 288 1 214 1 273 2 355 2 67 1 103 1 93 1 
130 1 72 1 273 1 355 1 261 1 202 1 67 1 36 1 361 1 311 1 
130 2 300 1 202 2 25 1 185 1 288 1 273 1 355 2 227 1 67 1 30 1 
168 1 130 5 202 4 234 1 159 1 185 2 288 3 226 1 273 2 261 1 355 5 227 1 67 2 293 1 151 1 30 1 
168 1 130 5 202 4 234 1 159 1 316 1 185 2 288 3 273 2 261 1 355 5 227 1 67 2 293 1 151 1 30 1 
130 1 254 1 326 1 202 1 222 1 353 1 288 1 185 1 175 2 273 1 261 1 355 1 14 1 126 1 52 1 113 2 67 1 93 1 
130 1 202 1 234 1 330 1 317 1 185 1 288 1 214 1 334 1 273 2 355 1 67 1 93 1 
254 1 368 1 314 1 146 1 341 1 175 1 113 1 129 1 104 1 
203 1 119 1 146 1 
326 1 378 1 129 1 104 1 146 1 
326 1 119 1 203 1 120 1 22 1 285 1 146 1 50 1 260 2 174 1 112 1 127 1 335 2 102 1 375 1 129 2 378 2 251 1 104 2 
20 1 303 1 248 1 200 1 
278 1 106 1 303 1 270 1 197 1 248 1 200 1 
356 1 106 1 9 1 
46 1 278 3 106 3 303 1 347 1 270 1 197 1 88 2 265 1 248 1 200 1 359 1 
278 2 106 2 303 1 221 1 270 1 197 1 248 1 94 1 200 1 
278 1 72 1 106 1 270 1 197 1 23 1 54 1 311 1 266 1 359 1 200 1 
278 1 106 1 270 1 197 1 248 1 200 1 359 1 
278 1 106 1 303 1 270 1 197 1 248 2 359 1 
278 2 106 2 211 1 270 2 197 2 274 1 66 1 248 1 200 1 359 1 
253 1 278 3 106 3 303 1 85 1 270 1 197 1 229 1 248 1 94 2 266 1 359 1 200 2 
278 2 72 1 106 2 303 1 36 1 270 1 197 1 23 1 48 1 11 1 248 1 311 2 94 1 200 1 359 1 
253 1 278 4 106 4 303 1 221 1 270 2 369 1 197 2 248 1 94 2 266 1 359 1 200 2 
278 1 106 1 303 1 270 1 197 1 248 1 200 1 359 1 
253 1 46 1 278 4 106 4 303 2 347 1 270 1 197 1 88 1 289 1 248 2 94 2 266 1 200 3 
278 2 106 2 303 1 239 1 270 1 196 1 197 1 135 1 248 1 94 1 200 1 359 1 
46 1 278 3 106 3 303 1 347 2 270 1 197 1 88 2 206 1 248 1 200 1 359 1 
228 1 118 1 271 2 200 2 
278 1 106 1 364 1 270 1 197 1 359 1 
278 2 106 2 303 1 229 1 270 1 197 1 248 1 94 1 200 1 359 1 
161 1 
278 1 106 1 303 1 270 1 197 1 248 1 200 1 359 1 
278 3 106 3 303 1 270 1 197 1 88 1 229 1 248 1 94 1 359 1 200 1 
289 1 253 1 266 1 200 1 
248 1 200 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (145,281) (145,281) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (145,281) (145,281) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (145,281) (145,281) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (145,281) (145,281) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 299 176 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 299 176 23 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (271,325) (271,325) (44,60) 134 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 36 119 103 194 342 21 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 36 119 103 194 342 21 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 36 119 103 194 342 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 299 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 36 119 103 194 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 36 119 103 194 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 36 119 103 194 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
219 1 145 1 3 1 98 1 346 1 281 1 189 1 217 1 347 1 186 1 252 1 
219 1 145 1 3 1 98 1 346 1 281 1 189 1 217 1 347 1 186 1 252 1 
219 1 145 1 3 1 98 1 346 1 281 1 189 1 217 1 347 1 186 1 252 1 
219 1 145 1 3 1 98 1 346 1 281 1 189 1 217 1 347 1 186 1 252 1 
68 1 222 1 98 1 3 4 346 1 345 1 125 1 189 4 16 2 305 1 170 2 25 1 180 3 19 1 91 3 22 1 186 1 321 1 
58 1 68 1 219 1 323 1 98 1 3 2 346 1 125 1 189 2 347 1 305 1 171 1 91 1 42 1 22 1 186 1 
98 2 3 3 346 1 125 1 189 3 16 1 347 1 180 1 91 2 22 1 186 2 283 1 321 1 
68 1 3 9 222 1 71 1 223 1 25 1 305 1 180 7 91 5 74 1 186 2 283 1 98 2 346 1 345 1 125 1 16 4 189 9 347 1 170 2 19 1 172 1 22 1 321 3 
68 1 3 9 222 1 71 1 223 1 25 1 305 1 180 7 91 5 74 1 186 2 283 1 98 2 346 1 345 1 125 1 16 4 189 9 347 1 170 2 19 1 172 1 22 1 321 3 
329 1 10 1 261 1 
9 1 117 2 10 1 
314 2 210 2 182 1 233 1 47 2 327 2 187 2 95 2 
4 1 115 2 116 2 326 1 158 1 28 2 327 2 160 1 29 1 182 1 55 2 340 1 187 3 95 2 96 1 210 3 77 2 76 1 32 1 14 1 146 1 15 1 214 1 18 1 248 1 314 2 265 1 38 1 231 1 81 1 233 1 85 1 47 2 109 1 153 1 271 1 270 1 
314 1 210 1 182 1 255 1 234 1 47 1 327 1 107 1 187 1 95 1 
12 1 210 1 135 1 247 1 315 1 225 1 249 1 234 1 339 1 47 1 187 1 10 1 261 1 286 1 
12 1 210 1 135 1 247 2 327 1 314 1 315 2 225 1 249 1 234 1 47 1 187 1 10 1 261 1 95 1 
315 1 343 1 247 1 322 1 67 1 
315 2 343 1 247 2 177 1 197 1 10 1 261 1 67 1 
315 1 343 1 247 1 
210 1 255 1 247 1 327 1 314 1 315 1 182 1 317 1 234 1 47 1 107 1 187 1 67 1 95 1 
10 1 
315 2 343 1 35 1 247 2 177 1 10 1 261 1 67 1 
343 2 126 1 247 5 240 1 149 1 289 2 242 2 315 5 140 1 104 1 175 1 92 1 43 1 335 1 177 1 10 1 261 1 67 2 218 2 
329 1 233 1 
253 1 210 2 327 1 314 1 233 2 47 2 93 1 187 2 95 1 
48 1 2 1 226 1 
210 1 77 1 76 1 302 1 14 1 214 1 116 1 326 1 248 1 231 1 55 1 81 1 233 1 85 1 270 1 187 1 
267 1 77 1 55 1 116 1 248 1 
314 1 210 3 233 1 47 3 327 3 319 1 187 3 95 3 
210 1 255 1 234 1 47 1 327 1 187 1 95 1 
314 1 253 1 210 1 234 1 47 1 93 1 327 1 187 1 95 1 
314 1 267 1 210 1 47 1 93 1 327 1 187 1 95 1 
210 2 233 1 246 1 47 2 327 1 319 1 187 2 286 1 95 1 
267 1 
210 2 2 1 327 2 314 1 93 1 47 2 319 1 187 2 95 2 226 1 
210 1 77 1 76 1 14 1 214 1 116 1 326 1 248 1 231 1 55 1 81 1 233 1 85 1 270 1 187 1 
210 1 77 1 14 1 229 1 214 1 116 1 326 1 248 1 231 1 55 1 81 1 233 1 235 1 85 1 187 1 
48 2 2 2 4 1 115 4 28 2 6 1 29 2 7 1 141 1 333 1 308 1 226 2 96 1 244 1 32 1 59 1 146 1 15 1 18 2 36 1 265 1 268 1 295 1 45 1 
210 1 249 1 69 1 234 1 47 1 327 1 187 1 95 1 
210 2 327 2 314 1 267 1 174 1 233 1 234 1 47 2 93 1 319 1 187 2 95 2 
210 2 255 1 69 1 234 1 47 2 327 2 187 2 95 2 
257 1 258 1 
257 1 258 1 
51 1 311 1 
51 1 311 1 
51 1 311 1 
129 1 257 1 258 1 
129 1 257 1 258 1 
239 1 257 1 258 1 
257 2 99 1 86 1 51 1 311 1 258 2 
129 1 257 1 258 1 
257 1 52 1 258 1 
257 1 52 1 258 1 
257 1 52 1 258 1 
299 1 257 1 89 1 176 1 258 1 241 1 
299 1 315 1 23 1 257 1 89 1 176 1 247 1 258 1 241 1 
19 1 68 1 305 1 
58 1 68 1 305 1 
73 1 19 2 58 1 68 3 151 1 108 1 
73 1 19 1 58 1 68 2 151 1 202 1 
19 1 73 1 58 1 68 2 151 2 
117 3 242 1 6 1 137 2 118 1 204 1 119 1 308 1 309 1 9 1 335 1 261 1 10 2 343 1 62 1 247 5 215 1 100 1 36 1 289 1 149 3 315 5 193 1 105 1 295 1 175 2 237 1 177 1 320 2 111 2 218 1 67 4 
24 1 26 1 240 1 117 9 242 2 6 3 137 6 54 1 119 3 308 3 309 4 56 1 9 3 335 1 282 1 122 5 261 1 10 5 343 6 247 9 215 1 100 2 36 3 289 2 149 8 315 9 39 1 295 3 175 6 237 2 177 1 320 6 322 5 67 7 218 2 
240 1 117 4 242 1 6 1 137 2 204 1 119 1 308 1 309 1 9 2 261 1 10 3 247 3 100 1 289 1 149 3 36 1 315 3 105 1 295 1 175 2 237 1 320 2 111 1 67 2 218 1 
24 1 117 7 240 1 242 1 6 2 137 4 204 1 119 2 308 2 309 2 56 1 9 3 261 1 10 4 247 4 100 1 289 1 149 5 36 2 315 4 39 1 105 1 295 2 175 4 237 1 320 4 111 2 218 1 67 3 
276 1 329 1 214 1 
183 1 214 1 
236 1 
231 1 214 1 
276 2 231 1 124 1 14 1 214 3 310 1 
231 1 14 1 214 1 
114 1 214 1 
133 1 57 1 59 2 228 1 115 7 33 1 18 4 63 1 6 1 29 3 7 3 216 1 294 1 295 1 168 2 336 1 207 1 
133 1 57 1 59 2 228 1 115 7 33 1 18 4 63 1 6 1 29 3 7 3 216 1 294 1 295 1 168 2 336 1 207 1 
133 1 57 1 59 2 228 1 33 1 61 1 115 7 18 4 63 1 6 1 29 3 7 3 216 1 294 1 295 1 168 2 336 1 207 1 
133 2 324 1 4 1 115 31 49 1 28 2 6 4 29 15 7 10 119 3 165 1 334 1 308 3 336 1 168 3 207 5 96 1 57 1 228 2 32 1 59 5 33 1 15 1 18 16 63 2 36 3 293 1 349 3 101 4 216 1 294 2 295 4 40 1 66 1 
300 1 133 1 273 1 4 2 115 9 28 4 6 1 29 4 7 4 168 2 336 1 207 1 96 2 32 2 59 3 228 1 33 1 15 2 18 5 63 1 216 1 294 1 295 1 40 1 
272 1 113 1 68 2 274 1 3 2 305 1 116 1 180 1 306 1 138 1 91 1 55 1 280 1 75 1 186 1 208 1 209 1 77 1 58 1 98 1 346 1 125 1 189 2 347 1 19 1 81 1 131 1 85 1 108 1 22 1 
272 1 113 1 68 2 274 1 3 3 305 1 50 1 116 1 180 2 181 1 306 1 138 1 91 1 55 1 280 1 75 1 186 1 209 1 77 1 58 1 98 1 125 1 189 3 347 1 19 1 316 1 81 1 85 1 108 1 22 1 
272 1 68 2 274 1 3 2 50 1 305 1 116 1 180 2 181 1 306 1 138 1 91 1 55 1 280 1 75 1 77 1 58 1 125 1 189 2 347 1 19 1 81 1 85 1 108 1 22 1 
272 2 274 2 3 1 304 1 116 1 90 1 27 1 55 1 75 2 121 1 186 1 341 1 77 1 98 1 189 1 214 1 347 2 248 1 231 1 316 1 81 1 173 1 85 1 
272 1 113 1 68 2 274 1 3 1 305 1 116 1 181 1 306 1 138 1 55 1 280 1 75 1 186 1 208 1 209 1 77 1 58 1 98 1 346 1 189 1 347 1 19 1 81 1 85 1 108 1 
147 1 
254 1 301 2 1 1 135 1 256 1 90 1 136 1 225 1 55 2 9 2 187 1 261 1 10 2 262 1 12 1 312 1 263 1 227 1 100 1 149 2 102 2 315 5 192 1 231 1 234 1 238 2 70 2 116 2 117 2 242 1 332 1 335 1 339 1 286 1 77 2 210 1 343 6 213 1 214 1 247 5 289 1 248 2 291 1 79 2 249 1 80 2 81 1 173 1 175 2 85 1 47 1 177 3 178 4 350 2 218 1 
12 1 210 1 343 2 254 1 263 1 135 1 256 1 35 1 247 3 136 1 315 3 192 1 225 1 249 1 80 1 234 1 339 1 47 1 177 1 178 2 187 1 286 1 
238 1 254 1 135 1 256 1 136 1 225 1 339 1 187 1 286 1 261 1 10 1 12 1 210 1 343 1 263 1 247 3 35 1 192 1 315 3 249 1 234 1 47 1 178 3 177 1 
238 1 254 1 135 1 256 1 136 1 225 1 339 1 187 1 286 1 261 1 10 1 12 1 210 1 263 1 343 2 35 1 247 3 192 1 315 3 102 1 249 1 80 1 234 1 47 1 177 1 178 3 
254 1 301 2 135 1 256 1 136 1 225 1 9 2 187 1 94 1 261 5 10 5 12 1 263 1 149 1 264 1 102 4 315 5 192 1 232 1 234 1 110 1 238 4 70 2 242 1 161 1 332 1 335 1 339 1 286 1 210 1 343 7 213 1 247 5 35 1 289 1 79 2 249 1 80 4 175 1 47 1 178 6 177 3 218 1 350 2 
238 2 254 1 301 2 135 1 256 1 70 2 117 2 136 1 242 1 225 1 332 1 9 2 335 1 339 1 187 1 261 1 10 2 262 1 286 1 12 1 210 1 343 4 263 1 213 1 247 4 149 1 289 1 102 2 192 1 315 4 79 2 249 1 80 2 175 1 234 1 47 1 177 2 178 4 350 2 218 1 
238 2 254 1 301 2 135 1 256 1 70 2 136 1 242 1 225 1 332 1 9 2 335 1 339 1 187 1 94 1 10 1 261 1 286 1 12 1 210 1 343 4 263 1 213 1 247 4 149 1 289 1 102 2 192 1 315 4 79 2 249 1 80 2 232 1 175 1 234 1 47 1 177 2 178 4 110 1 350 2 218 1 
238 2 254 1 301 2 135 1 256 1 70 2 136 1 242 1 225 1 332 1 9 2 335 1 339 1 187 1 94 1 10 1 261 1 286 1 12 1 210 1 343 4 263 1 213 1 247 4 149 1 289 1 102 2 192 1 315 4 79 2 249 1 80 2 232 1 175 1 234 1 47 1 177 2 178 4 110 1 350 2 218 1 
238 2 200 2 254 1 301 2 135 1 256 1 117 2 159 1 136 1 242 1 225 1 332 1 184 1 335 1 339 1 187 1 10 1 261 1 286 1 12 1 210 1 343 4 263 1 123 1 247 4 128 2 149 1 289 1 102 2 192 1 315 4 79 2 249 1 80 2 175 1 234 1 47 1 177 2 178 4 110 1 218 1 
238 3 254 1 301 2 135 1 256 1 70 2 242 1 136 1 225 1 332 1 9 2 335 1 339 1 187 1 94 1 10 1 261 1 286 1 12 1 210 1 263 1 343 5 213 1 247 4 149 1 289 1 264 1 192 1 315 4 102 3 79 2 249 1 80 3 232 1 175 1 234 1 47 1 177 2 178 5 110 1 350 2 218 1 
238 3 254 1 301 2 135 1 256 1 70 2 242 1 136 1 225 1 332 1 9 2 335 1 339 1 187 1 94 1 10 1 261 1 286 1 12 1 210 1 263 1 343 5 213 1 247 4 149 1 289 1 264 1 192 1 315 4 102 3 79 2 249 1 80 3 232 1 175 1 234 1 47 1 177 2 178 5 110 1 350 2 218 1 
238 2 200 2 254 1 301 2 135 1 256 1 117 2 136 1 242 1 159 1 225 1 332 1 335 1 339 1 187 1 10 1 261 1 262 1 286 1 12 1 210 1 343 4 263 1 247 4 128 2 149 1 289 1 102 2 192 1 315 4 79 2 249 1 80 2 175 1 234 1 47 1 177 2 178 4 218 1 
96 1 48 1 59 2 228 1 32 1 2 1 146 1 4 1 115 6 33 1 15 1 18 3 28 2 63 1 6 1 29 3 7 2 265 1 329 1 216 1 295 1 233 2 168 1 45 1 336 1 226 1 
155 1 48 11 2 4 4 2 115 14 158 1 28 4 6 1 29 6 31 1 7 2 331 1 119 2 165 1 308 1 207 1 169 1 226 11 96 2 59 1 32 2 146 2 15 2 18 8 36 2 349 3 101 3 265 1 295 2 233 1 66 1 152 1 109 1 
96 1 155 1 32 1 146 1 4 1 115 2 15 1 18 1 158 1 28 2 72 1 29 1 267 1 265 1 185 1 109 1 
96 1 77 1 155 1 134 1 60 1 32 1 146 1 4 1 325 1 115 1 15 1 116 1 158 1 28 2 29 1 248 1 267 1 265 1 55 1 271 1 
4 2 115 2 116 8 90 1 327 1 28 4 158 1 160 2 181 1 29 1 55 8 187 1 144 1 95 1 96 2 97 1 210 1 77 7 32 2 146 2 214 3 15 2 190 1 18 1 290 1 248 2 266 1 265 2 78 1 231 2 81 2 41 1 173 1 131 1 45 1 85 2 47 1 319 1 109 1 
298 1 48 1 155 1 2 1 4 1 115 3 327 1 28 2 6 1 29 2 7 1 119 1 308 1 93 1 187 1 226 1 95 1 96 1 210 1 59 1 32 1 146 1 15 1 18 1 36 1 314 1 265 1 295 1 47 1 
96 1 48 1 244 1 32 1 2 1 146 1 4 1 115 2 15 1 18 2 28 2 36 1 7 1 265 1 295 1 45 1 207 1 226 1 
96 1 48 1 59 1 32 1 2 1 146 1 4 1 115 2 15 1 28 2 6 1 29 2 7 1 265 1 268 1 308 1 45 1 226 1 
48 2 2 2 4 1 115 4 28 2 6 1 29 2 7 2 119 1 308 1 207 1 226 2 96 1 32 1 59 1 146 1 15 1 18 2 36 1 265 1 295 1 45 1 
96 1 48 1 244 1 32 1 2 1 146 1 4 1 115 2 15 1 18 2 28 2 36 1 7 1 265 1 78 1 295 1 207 1 226 1 
96 1 48 1 59 1 32 1 2 1 146 1 4 1 115 2 15 1 28 2 6 1 29 2 7 1 265 1 78 1 268 1 308 1 226 1 
48 2 2 2 4 1 115 4 28 2 6 1 29 2 7 2 119 1 308 1 207 1 226 2 96 1 32 1 59 1 146 1 15 1 18 2 36 1 265 1 78 1 295 1 
48 2 2 2 4 1 115 4 28 2 6 1 29 2 7 2 119 1 308 1 207 1 226 2 96 1 32 1 59 1 146 1 15 1 18 2 36 1 265 1 295 1 
4 1 115 2 326 1 116 1 28 2 158 1 29 1 55 1 187 1 96 1 76 1 77 1 210 1 32 1 14 1 146 1 214 1 15 1 18 1 248 1 265 1 231 1 81 1 233 1 85 1 109 1 270 1 271 1 
4 1 115 2 326 1 116 1 28 2 158 1 29 1 55 1 187 1 96 1 77 1 210 1 32 1 14 1 146 1 229 1 214 1 15 1 18 1 248 1 265 1 231 1 81 1 233 1 235 1 85 1 109 1 154 1 
155 1 48 2 2 2 4 1 115 4 28 2 6 1 29 2 7 2 119 1 308 1 207 1 226 2 96 1 32 1 59 1 146 1 15 1 18 2 36 1 265 1 295 1 
48 2 2 2 4 1 115 4 325 1 326 1 116 1 28 2 6 1 29 2 7 2 55 1 119 1 308 1 207 1 187 1 226 2 96 1 76 1 77 1 210 1 59 1 32 1 14 1 146 1 214 1 15 1 18 2 36 1 265 1 231 1 81 1 295 1 131 1 85 1 270 1 271 1 
155 1 48 1 2 1 4 1 115 3 327 1 28 2 6 1 29 1 7 1 119 1 308 1 142 1 93 1 207 1 187 1 95 1 226 1 96 1 210 1 32 1 146 1 15 1 18 2 36 1 314 1 265 1 295 1 47 1 
132 1 88 1 300 1 156 1 4 2 115 24 28 4 6 2 162 2 29 12 7 3 279 1 119 3 165 3 308 2 338 1 207 2 11 3 96 2 342 1 59 1 32 2 15 2 18 12 36 3 349 3 101 4 103 1 194 1 64 1 295 3 66 1 21 1 
132 1 88 1 300 1 156 1 4 2 115 24 28 4 6 2 162 2 29 12 7 4 279 1 119 3 165 3 308 2 338 1 207 2 11 3 96 2 342 1 59 2 32 2 15 2 18 12 36 3 349 3 101 4 103 1 194 1 64 1 295 3 66 1 21 1 
132 1 300 1 156 1 221 1 4 2 115 52 28 4 6 8 162 1 29 25 7 14 119 7 206 1 165 2 308 7 168 1 336 1 338 1 207 7 169 2 11 4 96 2 342 1 228 1 59 7 32 2 33 1 17 1 15 2 18 27 63 1 36 7 349 4 101 4 103 1 194 1 216 1 64 1 40 1 295 8 66 2 21 1 
132 2 88 1 300 1 156 1 4 2 115 19 28 4 6 3 162 1 29 10 7 6 164 1 119 3 165 1 308 3 338 1 207 3 11 2 96 2 342 1 59 3 32 2 15 2 18 9 36 3 349 1 101 2 295 3 66 1 21 1 
11 2 300 1 96 1 156 1 342 2 32 1 4 1 115 11 15 1 18 6 28 2 36 1 162 2 29 5 349 2 101 2 103 1 194 1 64 1 119 1 295 1 165 2 21 1 
155 1 4 1 115 2 157 1 116 2 28 2 158 1 53 1 160 2 29 1 55 2 187 2 96 1 97 1 210 2 77 2 13 1 245 1 32 1 146 1 214 1 15 1 190 1 18 1 34 1 265 1 231 1 81 1 85 1 47 2 109 1 
113 1 58 1 77 2 68 2 212 1 305 1 116 2 181 1 292 1 138 1 19 1 81 1 55 2 131 1 280 1 85 1 108 1 75 1 188 1 
113 1 58 1 77 1 68 2 212 1 201 1 305 1 116 1 181 1 138 1 19 1 55 1 81 1 280 1 85 1 108 1 75 1 
77 1 214 1 116 1 90 1 248 1 231 1 81 1 55 1 173 1 167 1 85 1 75 1 188 1 341 1 
113 1 58 1 77 1 68 2 212 1 305 1 116 1 181 1 292 1 138 1 19 1 81 1 55 1 280 1 85 1 108 1 75 1 188 1 
330 1 
329 1 140 1 175 1 43 1 149 1 10 1 261 1 
70 1 117 1 242 1 9 1 335 1 10 2 261 1 343 1 213 1 247 1 149 1 289 1 315 1 175 1 177 1 350 1 218 1 
0 2 1 1 137 6 6 2 307 1 225 2 140 1 183 3 55 3 308 2 310 1 9 6 261 2 10 8 14 3 100 2 149 9 315 5 231 3 65 2 320 6 112 1 114 2 116 3 117 12 242 4 203 1 276 2 278 2 163 1 119 2 335 4 120 2 287 2 77 3 211 1 343 5 214 10 127 2 247 5 289 4 36 2 248 1 81 4 295 2 250 2 175 8 131 1 43 1 44 2 83 2 85 3 177 3 218 4 
221 1 117 4 242 1 137 5 6 2 119 2 206 1 165 1 308 2 335 1 9 2 10 2 149 6 289 1 36 2 349 1 101 1 194 1 103 1 64 1 295 2 175 4 320 5 218 1 
255 1 327 1 242 1 6 1 182 1 335 1 187 1 95 1 287 1 210 1 228 1 247 1 63 1 289 1 149 2 314 1 315 1 216 1 65 2 232 1 295 2 251 1 175 2 317 1 234 1 47 1 107 1 218 1 
289 1 242 1 149 1 140 1 175 1 43 1 335 1 218 1 261 1 10 1 
287 1 117 10 36 2 149 5 137 5 6 2 119 2 65 2 295 2 250 1 175 5 308 2 9 5 320 5 10 5 
315 1 343 1 247 1 177 1 10 1 261 1 
112 2 1 2 116 4 90 1 240 1 242 2 307 1 277 1 55 4 335 1 312 1 77 4 343 4 214 1 100 2 247 3 148 1 289 2 149 2 291 1 248 2 315 3 231 1 81 1 173 1 175 2 85 1 177 2 218 2 
4 1 115 1 116 1 326 1 158 1 28 2 327 2 29 1 182 1 55 1 187 3 95 2 96 1 77 1 210 3 76 1 32 1 14 1 146 1 214 1 15 1 248 1 314 2 265 1 231 1 81 1 233 1 85 1 47 2 153 1 271 1 270 1 
1 1 100 1 117 4 289 1 242 1 149 1 137 2 175 2 168 1 9 2 335 1 320 2 218 1 261 2 10 4 
299 1 241 1 
299 1 241 1 
299 1 241 1 
299 1 241 1 
299 1 241 1 
299 1 241 1 
299 1 241 1 
299 1 241 1 
257 1 258 1 
300 1 4 1 115 8 28 2 6 1 29 4 7 2 165 1 168 1 336 1 96 1 32 1 228 1 59 2 33 1 15 1 18 4 63 1 349 1 101 1 194 1 216 1 295 1 
300 1 4 2 115 11 28 4 6 1 29 5 7 3 119 1 165 1 168 1 336 1 207 1 96 2 59 2 228 1 32 2 33 1 15 2 18 6 63 1 36 1 349 1 101 2 194 1 216 1 130 1 295 2 66 1 
300 1 96 1 32 1 4 1 115 5 15 1 18 3 28 2 36 1 29 2 349 1 101 1 103 1 194 1 64 1 119 1 295 1 165 1 
300 1 221 1 4 3 115 17 28 6 6 2 29 7 7 5 119 2 165 1 206 1 308 1 168 1 336 1 207 2 96 3 228 1 32 3 59 3 33 1 15 3 18 10 63 1 36 2 349 1 101 1 194 1 103 1 216 1 64 1 130 1 40 1 295 3 
300 1 4 1 115 8 28 2 6 1 29 4 7 2 165 1 168 1 336 1 96 1 32 1 228 1 59 2 33 1 15 1 18 4 63 1 349 1 101 1 194 1 216 1 295 1 
300 1 221 1 4 1 115 12 28 2 6 2 29 6 7 2 119 2 165 1 206 1 308 2 207 1 96 1 32 1 59 1 15 1 18 6 36 2 349 1 101 1 194 1 103 1 64 1 295 2 
300 1 96 2 32 2 4 2 115 5 15 2 18 3 28 4 36 1 29 2 349 1 101 1 103 1 194 1 64 1 119 1 295 1 130 1 165 1 
300 1 88 1 221 1 4 4 115 16 28 8 6 2 29 7 7 6 119 3 206 1 165 1 308 2 207 3 96 4 32 4 59 3 15 4 18 9 36 3 349 1 101 1 194 1 103 1 64 1 295 3 40 2 
228 3 59 3 115 7 33 2 18 3 63 3 6 1 29 4 7 6 216 1 295 1 336 1 207 3 
88 1 96 2 300 1 32 2 4 2 115 5 15 2 18 3 28 4 36 1 29 2 349 1 101 1 103 1 194 1 64 1 119 1 295 1 165 1 
96 2 59 2 32 2 228 1 4 2 115 8 33 1 15 2 18 4 28 4 63 1 6 1 29 4 7 3 216 1 295 1 40 1 168 1 336 1 207 1 
228 1 59 2 33 1 115 6 18 3 63 1 6 1 29 3 329 1 7 2 216 1 295 1 168 1 336 1 
96 1 59 1 32 1 4 1 115 4 15 1 18 2 28 2 36 1 6 1 29 2 7 2 119 1 130 1 295 1 308 1 207 1 
59 1 115 7 18 3 36 1 6 1 29 4 349 1 101 2 7 2 119 1 165 1 295 1 66 1 308 1 207 1 
4 2 115 23 28 4 6 3 29 12 30 1 7 9 119 2 308 2 168 1 336 1 207 4 169 1 96 2 228 2 59 5 32 2 33 1 15 2 18 11 63 2 36 2 349 2 101 2 216 1 295 3 40 2 66 1 152 1 
101 1 115 1 29 1 
349 1 115 1 18 1 
96 1 32 1 59 2 4 1 115 6 15 1 18 3 28 2 36 1 6 1 29 3 7 3 119 1 130 1 295 1 250 1 308 1 207 1 
300 1 221 1 4 1 115 12 28 2 6 2 29 6 7 2 119 2 165 1 206 1 308 2 207 1 96 1 32 1 59 1 15 1 18 6 36 2 349 1 101 1 194 1 103 1 64 1 295 2 
228 1 59 1 115 6 18 3 63 1 6 1 29 3 7 2 216 1 295 1 207 1 
96 1 59 1 228 1 32 1 4 1 33 1 115 3 15 1 18 1 63 1 28 2 29 2 30 1 7 2 40 1 336 1 207 1 
96 1 300 1 32 1 228 2 59 3 4 1 115 10 15 1 18 5 28 2 63 2 6 2 29 5 7 5 216 1 295 2 251 1 207 2 
300 1 96 1 32 1 4 1 115 2 15 1 18 2 28 2 36 1 7 1 295 1 207 1 
300 1 96 1 59 1 32 1 4 1 115 4 15 1 18 2 28 2 36 1 6 1 29 2 7 2 119 1 295 1 308 1 207 1 
88 1 300 1 96 3 32 3 228 1 59 1 4 3 115 3 15 3 18 1 28 6 63 1 29 2 30 1 7 2 40 1 207 1 
88 1 300 1 4 5 115 34 49 1 28 10 6 5 29 18 30 1 7 12 119 3 165 1 334 1 308 3 168 1 336 1 207 5 96 5 228 3 32 5 59 7 33 1 15 5 18 16 63 3 36 3 293 1 349 3 101 4 216 2 40 2 130 1 295 5 66 1 
199 1 210 1 233 1 47 1 246 1 187 1 286 1 
199 1 210 1 246 1 224 1 191 1 82 1 233 1 195 1 46 1 47 1 187 1 286 1 
329 1 231 1 77 1 81 1 55 1 173 1 214 1 85 1 90 1 116 1 248 1 
210 2 77 1 76 1 14 1 214 1 326 1 116 1 327 1 248 1 231 1 81 1 55 1 233 1 85 1 47 1 319 1 187 2 95 1 
12 1 112 1 114 1 210 2 77 1 76 1 14 2 214 3 326 1 116 1 327 1 231 2 278 1 249 1 81 1 55 1 233 1 234 1 85 1 47 2 319 1 187 2 95 2 
112 1 114 1 116 2 326 1 327 1 278 1 55 2 187 2 95 2 12 1 77 2 210 2 14 2 214 3 288 1 231 2 249 1 81 1 233 1 235 1 234 1 85 1 47 2 319 1 
112 1 114 1 77 3 343 1 14 1 214 4 247 2 116 3 288 1 248 1 276 1 8 1 315 2 225 1 231 1 205 1 278 1 81 1 55 3 183 1 85 1 10 1 261 1 
112 1 114 1 77 3 343 1 14 1 214 4 247 2 116 3 127 1 288 1 248 1 276 1 315 2 225 1 231 1 278 1 81 1 55 3 183 1 85 1 10 1 261 1 
77 1 81 1 55 1 85 1 116 1 290 1 
97 1 77 6 14 1 214 3 116 7 290 1 160 1 181 1 248 2 275 1 266 1 231 2 269 1 55 7 81 3 41 1 131 1 310 1 143 1 85 2 144 1 
48 1 2 1 4 2 53 1 6 1 7 2 55 1 187 2 95 1 226 1 96 2 60 1 228 1 59 2 14 1 146 2 15 2 18 3 63 1 265 2 231 1 233 2 270 1 271 1 319 1 155 1 325 1 115 6 116 1 326 1 28 4 327 1 29 3 336 1 168 1 76 1 77 1 210 2 32 2 33 1 214 1 216 1 81 1 295 1 131 1 85 1 47 1 
0 1 116 1 242 2 307 1 276 1 225 1 140 1 55 1 183 1 335 2 10 1 261 1 77 1 343 2 214 2 247 3 127 1 149 1 289 2 248 1 315 3 175 1 43 1 44 1 83 1 177 1 218 2 67 1 
77 2 211 1 14 1 214 2 116 2 290 1 276 1 231 1 55 2 81 2 131 1 310 1 85 1 
77 4 214 1 116 4 90 1 288 1 248 1 231 1 81 1 55 4 173 1 131 1 85 1 284 1 
112 1 77 2 14 1 5 1 214 1 116 2 348 1 230 1 231 1 269 1 55 2 81 2 143 1 85 1 
58 1 77 1 68 1 81 1 55 1 305 1 85 1 116 1 138 1 248 1 
77 2 97 1 245 1 214 1 116 2 181 1 231 1 55 2 81 1 131 1 85 1 
112 1 77 4 97 1 214 3 90 1 116 5 248 1 231 2 55 5 81 2 173 1 41 1 131 1 85 2 284 1 144 1 
112 1 77 4 97 1 214 3 90 1 116 5 248 1 243 1 231 2 55 5 81 2 173 1 131 1 85 2 284 1 144 1 
210 2 77 1 14 1 214 1 326 1 116 1 327 1 248 1 231 1 81 1 55 1 233 1 235 1 85 1 47 1 319 1 187 2 95 1 
112 1 77 1 14 1 214 1 116 1 275 1 231 1 269 1 55 1 81 2 310 1 143 1 85 1 
87 1 106 1 84 1 313 1 
87 1 315 1 106 1 166 1 84 1 196 1 247 1 313 1 198 1 67 1 
87 1 210 1 13 1 157 1 34 1 313 1 106 1 47 1 187 1 
87 1 166 1 196 1 
329 1 91 1 125 1 22 1 
91 1 3 1 98 1 125 1 189 1 22 1 186 1 
274 1 3 1 347 1 
91 1 139 1 344 1 3 3 98 1 42 2 346 1 125 1 189 3 22 1 186 1 328 1 
91 1 3 2 98 1 125 1 189 2 170 1 22 1 180 1 186 1 
68 1 98 1 3 1 346 1 189 1 16 1 25 1 305 1 19 1 91 1 186 1 
91 1 3 1 98 1 346 1 125 1 189 1 186 1 
3 1 98 1 346 1 125 2 189 1 22 1 186 1 
98 2 3 2 346 1 125 1 189 2 91 1 318 1 186 2 179 1 285 1 
98 1 3 3 346 1 125 1 189 3 223 1 16 1 180 2 172 1 91 2 22 1 186 1 321 1 
58 1 68 2 98 1 3 2 346 1 125 1 189 2 305 1 180 1 19 1 91 1 260 1 108 1 22 1 186 1 
98 2 3 4 222 1 346 1 125 1 189 4 16 1 170 1 180 2 91 2 22 1 186 2 321 1 
91 1 3 1 98 1 346 1 125 1 189 1 22 1 186 1 
344 1 3 4 98 1 125 2 189 4 16 1 180 2 91 3 139 1 42 1 22 2 297 1 186 1 321 1 
303 1 98 1 3 2 346 1 125 1 189 2 180 1 91 1 296 1 74 1 186 1 22 1 
91 1 139 2 150 1 344 1 3 3 98 1 42 2 346 1 125 1 189 3 22 1 186 1 
91 2 259 1 20 2 37 1 
3 1 98 1 346 1 189 1 337 1 186 1 
91 1 3 2 98 1 346 1 125 1 223 1 189 2 22 1 180 1 186 1 
220 1 
91 1 3 1 98 1 346 1 125 1 189 1 22 1 186 1 
98 1 3 3 346 1 189 3 125 1 223 1 180 1 91 1 42 1 186 1 22 1 
91 1 16 1 297 1 321 1 
91 1 125 1 

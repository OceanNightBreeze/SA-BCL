#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 187 277 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 227 177 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 227 177 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 227 177 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 227 177 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 227 177 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 57 341 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
89 1 243 1 272 9 335 4 337 2 154 1 28 1 274 1 6 1 94 6 224 1 299 2 343 2 301 1 344 2 54 2 163 1 75 9 230 1 121 1 307 1 346 5 232 2 40 2 212 1 80 1 82 1 125 3 
89 1 243 1 272 9 335 4 337 2 154 1 28 1 274 1 6 1 94 6 224 1 299 2 343 2 301 1 54 2 344 2 163 1 75 9 230 1 121 1 307 1 346 5 232 2 40 2 212 1 80 1 82 1 125 3 
89 1 243 1 272 10 335 5 337 2 154 1 28 1 274 1 6 1 94 7 224 1 299 2 343 2 301 1 54 2 344 2 163 1 75 10 230 1 121 1 307 1 346 6 232 2 40 2 212 1 80 1 82 1 125 4 
89 1 243 1 272 7 335 3 337 2 154 1 28 1 274 1 6 1 94 4 224 1 299 2 343 2 301 1 54 2 344 1 75 7 230 1 121 1 307 1 346 4 232 2 40 2 212 1 80 1 82 1 125 2 
54 1 344 2 163 1 89 1 230 1 75 4 346 3 272 4 335 2 337 1 232 1 154 1 40 1 94 3 224 1 299 1 82 1 125 1 
301 1 54 1 230 1 75 2 323 1 346 1 307 1 272 2 337 1 232 1 102 1 154 1 298 1 224 1 299 1 343 1 
230 1 75 3 243 1 346 2 272 3 335 1 337 2 232 2 154 1 94 1 224 1 125 1 343 1 
89 1 243 1 335 4 272 9 337 2 154 1 274 1 6 1 94 7 224 1 299 1 343 1 344 2 54 1 163 1 259 1 75 9 230 1 346 5 232 2 40 1 105 1 82 1 125 3 
89 1 243 1 335 4 272 9 337 2 154 1 274 1 6 1 94 7 224 1 299 1 343 1 344 2 54 1 163 1 259 1 75 9 230 1 346 5 232 2 40 1 105 1 82 1 125 3 
268 1 202 1 186 1 
149 2 268 1 239 1 
98 2 29 2 251 2 216 2 201 1 81 2 326 2 140 1 
63 2 64 1 46 1 291 1 47 1 48 1 128 1 216 3 201 1 2 1 50 1 25 1 316 1 4 1 246 1 29 2 251 2 250 1 156 1 254 2 117 1 158 1 8 1 98 2 136 2 258 1 260 1 326 2 140 1 123 1 144 1 145 2 312 2 330 1 81 3 126 1 85 1 
98 1 295 1 29 1 251 1 216 1 265 1 81 1 326 1 140 1 35 1 
138 1 216 1 90 1 3 1 202 1 326 1 273 1 295 1 351 1 268 1 61 1 225 1 130 1 81 1 
98 1 138 2 216 1 90 1 202 1 326 1 273 1 295 1 29 1 251 1 268 1 61 1 225 1 130 2 81 1 
13 1 138 1 287 1 130 1 320 1 
138 2 287 1 268 1 194 1 130 2 202 1 283 1 320 1 
138 1 130 1 320 1 
98 1 138 1 216 1 326 1 140 1 295 1 29 1 251 1 265 1 287 1 157 1 130 1 81 1 35 1 
268 1 
138 2 287 1 49 1 268 1 194 1 130 2 202 1 320 1 
138 5 127 2 202 1 221 1 244 1 26 1 247 1 350 1 205 1 287 2 268 1 194 1 130 5 53 1 300 1 134 2 147 1 320 2 159 2 
201 1 186 1 
98 1 216 2 119 1 201 2 326 2 29 1 251 1 339 1 81 2 
229 1 9 1 18 1 
63 1 64 1 136 1 46 1 47 1 48 1 216 1 201 1 2 1 4 1 68 1 250 1 145 1 81 1 85 1 8 1 
63 1 64 1 136 1 46 1 47 1 48 1 9 1 216 2 2 1 326 1 4 1 29 1 250 1 251 1 297 1 145 1 269 1 81 2 8 1 85 1 
98 1 208 1 216 5 119 1 201 1 3 1 326 5 29 4 251 4 297 1 30 1 269 2 81 5 83 1 
248 1 295 1 29 2 251 2 216 2 265 1 81 2 326 2 
98 1 29 3 251 3 216 3 201 1 269 1 81 3 326 3 
295 1 29 1 251 1 216 1 265 1 81 1 326 1 
98 1 295 1 29 1 251 1 216 1 119 1 339 1 81 1 326 1 
63 1 46 1 64 1 291 1 47 1 48 1 128 1 216 4 90 1 201 1 2 1 50 1 25 1 273 1 4 1 246 1 295 1 29 3 250 1 251 3 297 1 156 1 225 1 130 1 254 1 158 1 8 1 98 2 136 1 258 1 138 1 119 1 326 3 140 1 123 1 144 1 41 1 145 1 312 2 61 1 81 4 269 1 109 1 85 1 
29 1 251 1 30 1 216 2 201 1 3 1 81 2 269 1 326 2 
98 1 138 1 119 1 90 1 216 3 326 3 273 1 295 1 29 3 41 1 78 1 251 3 297 1 268 1 130 1 61 1 225 1 269 2 81 3 
98 1 229 1 9 1 119 1 216 2 326 2 29 2 251 2 269 1 81 2 
63 1 64 1 136 1 46 1 47 1 48 1 216 1 201 1 2 1 4 1 250 1 145 1 81 1 85 1 8 1 
63 1 64 1 136 1 47 1 48 1 216 1 201 1 189 1 180 1 4 1 250 1 145 1 81 1 85 1 8 1 
18 2 128 1 23 1 50 1 25 1 204 1 153 1 133 1 254 4 158 1 36 1 281 1 229 2 258 2 9 2 308 1 123 1 144 1 79 1 312 2 146 1 172 1 126 2 148 1 
295 1 248 1 29 1 251 1 216 1 225 1 81 1 326 1 
33 1 321 1 
33 1 321 1 
293 1 91 1 
293 1 91 1 
293 1 91 1 
20 1 33 1 321 1 
58 1 33 1 321 1 
37 1 293 1 91 1 252 1 33 2 321 2 
20 1 33 1 321 1 
20 1 33 1 321 1 
150 1 33 1 321 1 
150 1 33 1 321 1 
150 1 33 1 321 1 
0 1 216 2 201 1 220 1 203 1 5 1 29 2 251 2 69 1 130 1 33 1 321 1 279 1 138 1 325 1 326 2 139 1 141 1 58 1 192 1 124 1 352 1 81 2 195 1 
37 1 0 1 138 2 348 1 5 2 141 3 192 2 42 1 124 2 267 1 352 2 276 1 268 1 130 2 106 2 33 2 43 1 321 2 270 1 
54 1 299 1 40 1 
54 1 323 1 299 1 
54 3 31 1 323 1 24 1 196 1 40 2 
54 2 31 1 317 1 323 1 196 1 40 1 
54 2 31 2 323 1 196 1 40 1 
149 3 127 1 111 1 21 2 334 1 220 1 202 1 221 2 203 1 183 1 69 1 130 5 206 1 95 2 134 1 320 1 159 1 138 5 308 1 350 3 234 1 79 1 264 1 287 4 15 1 194 1 268 2 239 1 172 1 147 1 108 2 148 1 
149 9 127 2 111 2 21 6 151 5 334 2 202 1 221 6 203 4 183 1 296 1 130 9 95 6 53 1 134 2 320 6 255 1 159 2 345 1 138 9 308 3 101 1 122 1 13 5 350 8 234 3 79 3 287 7 268 5 194 1 239 3 172 3 147 1 197 1 148 3 
149 4 127 1 111 1 334 1 21 2 202 1 221 2 203 1 130 3 95 2 53 1 134 1 159 1 138 3 308 1 350 3 234 1 79 1 287 2 15 1 264 1 268 3 239 2 108 1 172 1 148 1 
149 7 127 1 111 1 21 4 334 1 202 1 221 4 203 2 296 1 130 4 95 4 53 1 134 1 159 1 138 4 308 2 101 1 350 5 234 2 79 2 15 1 264 1 287 3 268 4 239 3 108 2 172 2 197 1 148 2 
47 1 169 1 186 1 
47 1 57 1 
219 1 
4 1 47 1 48 1 
47 1 215 1 
4 1 47 1 
4 1 198 1 47 3 48 1 1 1 169 2 
17 1 258 3 10 2 282 1 336 1 308 1 284 1 153 3 204 2 311 1 168 1 32 1 237 1 254 7 289 1 172 1 126 4 
17 1 258 3 10 2 282 1 336 1 308 1 284 1 153 3 204 2 311 1 168 1 32 1 237 1 254 7 289 1 172 1 126 4 
17 1 258 3 10 2 113 1 282 1 336 1 308 1 284 1 153 3 204 2 311 1 168 1 32 1 237 1 254 7 289 1 172 1 126 4 
17 2 292 4 128 1 50 1 336 2 25 1 294 1 153 10 204 5 249 1 32 1 254 31 342 1 256 1 162 3 228 1 258 15 10 3 282 2 308 4 284 2 144 1 234 3 311 5 168 1 79 3 288 1 312 2 237 1 289 1 44 1 172 4 126 16 148 3 
226 1 17 1 258 4 128 2 10 2 282 1 50 2 336 1 25 2 308 1 284 1 153 4 204 3 144 2 311 1 168 1 104 1 32 1 288 1 312 4 237 1 254 9 172 1 126 5 
63 1 272 2 24 1 337 1 154 1 250 1 94 1 224 1 299 1 319 1 116 1 343 1 257 1 136 1 54 2 188 1 56 1 306 1 120 1 75 2 230 1 323 1 324 1 346 1 232 1 209 1 40 1 142 1 145 1 85 1 
63 1 24 1 272 3 337 1 154 1 250 1 94 2 224 1 299 1 319 1 72 1 116 1 343 1 257 1 136 1 54 2 188 1 56 1 306 1 75 3 323 1 324 1 346 1 190 1 232 1 40 1 142 1 310 1 145 1 85 1 
63 1 272 2 24 1 154 1 250 1 94 2 224 1 319 1 299 1 72 1 116 1 343 1 136 1 54 2 56 1 306 1 75 2 323 1 324 1 346 1 190 1 40 1 142 1 145 1 85 1 
63 1 64 1 136 1 65 1 47 1 306 2 75 1 22 1 262 1 272 1 337 1 232 1 245 1 4 1 142 2 165 1 250 1 310 1 145 1 319 2 331 1 343 2 85 1 
63 1 272 1 24 1 337 1 250 1 299 1 319 1 116 1 343 1 257 1 136 1 54 2 188 1 56 1 306 1 75 1 230 1 323 1 324 1 190 1 232 1 209 1 40 1 142 1 145 1 85 1 
318 1 
63 2 64 2 47 1 332 1 127 1 200 1 334 1 22 1 221 1 4 1 250 1 130 2 277 1 187 1 134 1 320 2 159 1 136 2 138 2 261 1 328 1 350 1 145 2 194 1 353 1 331 1 147 1 85 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 2 49 1 194 1 130 2 277 1 187 1 320 1 328 1 
332 1 127 1 138 1 130 1 277 1 187 1 134 1 147 1 328 1 159 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 138 1 130 1 277 1 187 1 328 1 
332 1 127 1 138 1 130 1 277 1 187 1 134 1 147 1 328 1 159 1 
18 1 128 1 201 2 50 1 336 1 25 1 204 2 153 2 32 1 254 6 186 1 158 1 36 1 229 1 9 1 258 3 10 1 282 1 308 1 123 1 144 1 168 1 312 2 237 1 172 1 126 3 
314 1 18 11 292 3 128 2 201 1 50 2 25 2 294 1 153 2 204 1 156 1 254 14 158 2 162 3 229 4 258 6 9 11 260 1 308 1 123 1 144 2 234 2 311 1 309 1 329 1 79 2 236 1 312 4 44 1 238 1 172 2 126 8 148 1 
63 1 46 1 64 1 199 1 47 1 48 1 128 1 216 2 201 1 2 1 50 1 25 1 4 1 68 1 29 1 250 1 251 1 297 1 156 1 254 2 158 1 8 1 136 1 229 1 258 1 260 1 326 1 123 1 210 1 144 1 59 1 329 1 145 1 312 2 81 2 269 1 126 1 85 1 
46 2 47 2 48 2 216 3 128 3 2 2 50 3 4 2 182 1 8 2 136 3 55 2 229 7 9 7 10 1 190 1 282 1 326 1 144 3 234 2 329 1 145 3 237 1 148 2 63 3 64 1 291 2 18 7 112 2 201 2 336 1 25 3 152 2 204 4 153 8 29 1 251 1 250 2 297 1 32 1 156 1 254 20 34 1 158 3 207 2 258 10 260 1 347 1 308 3 123 3 311 4 168 1 79 2 312 6 269 1 81 3 172 3 126 10 85 2 
63 8 64 2 47 3 88 1 216 1 128 2 22 1 66 1 50 2 25 2 4 2 29 1 251 1 250 2 156 1 185 1 340 1 254 2 158 2 36 1 136 7 74 1 258 1 120 1 260 1 190 1 326 1 191 1 123 2 144 2 145 8 312 4 330 2 81 1 269 1 331 1 173 1 126 1 85 2 
18 1 128 1 216 1 50 1 25 1 153 1 204 1 29 1 251 1 254 3 158 1 98 1 229 1 9 1 258 2 119 1 326 1 308 1 123 1 144 1 234 1 329 1 286 1 79 1 312 2 81 1 172 1 126 1 148 1 
281 1 229 1 9 1 18 1 128 1 50 1 25 1 153 1 123 1 144 1 311 1 79 1 312 2 254 2 158 1 172 1 126 2 36 1 
229 1 9 1 18 1 258 2 128 1 50 1 25 1 308 1 153 1 204 1 123 1 144 1 312 2 254 2 133 1 158 1 36 1 148 1 
18 2 128 1 50 1 25 1 153 2 204 1 254 4 158 1 36 1 229 2 9 2 258 2 308 1 123 1 144 1 234 1 311 1 79 1 312 2 172 1 126 2 148 1 
281 1 229 1 9 1 18 1 128 1 50 1 25 1 153 1 123 1 144 1 311 1 79 1 312 2 340 1 254 2 158 1 172 1 126 2 
229 1 9 1 18 1 258 2 128 1 50 1 25 1 308 1 153 1 204 1 123 1 144 1 312 2 340 1 254 2 133 1 158 1 148 1 
18 2 128 1 50 1 25 1 153 2 204 1 340 1 254 4 158 1 229 2 9 2 258 2 308 1 123 1 144 1 234 1 311 1 79 1 312 2 172 1 126 2 148 1 
229 2 258 2 9 2 18 2 128 1 50 1 25 1 308 1 204 1 153 2 123 1 144 1 234 1 311 1 79 1 312 2 254 4 158 1 172 1 126 2 148 1 
63 1 46 1 64 1 291 1 47 1 48 1 216 1 128 1 201 1 2 1 50 1 25 1 4 1 250 1 156 1 254 2 158 1 8 1 136 1 258 1 260 1 123 1 144 1 145 1 312 2 81 1 126 1 85 1 
63 1 64 1 47 1 48 1 216 1 128 1 201 1 50 1 25 1 180 1 4 1 250 1 156 1 254 2 158 1 8 1 302 1 136 1 258 1 260 1 189 1 123 1 144 1 145 1 312 2 81 1 126 1 85 1 
18 2 128 1 50 1 25 1 153 2 204 1 254 4 158 1 229 2 9 2 258 2 308 1 123 1 144 1 234 1 329 1 311 1 79 1 312 2 172 1 126 2 148 1 
63 1 46 1 291 1 47 1 48 1 18 2 216 1 128 1 2 1 50 1 25 1 204 1 153 2 4 1 250 1 254 4 158 1 8 1 207 1 136 1 229 2 258 2 9 2 120 1 308 1 123 1 144 1 234 1 311 1 79 1 145 1 312 2 81 1 172 1 126 2 148 1 85 1 
18 1 128 1 216 1 50 1 25 1 153 1 29 1 251 1 254 3 158 1 322 1 98 1 229 1 258 1 9 1 119 1 326 1 308 1 123 1 144 1 234 1 311 1 329 1 79 1 312 2 81 1 172 1 126 2 148 1 
227 1 144 1 128 1 104 1 312 2 177 1 50 1 25 1 93 1 179 1 
227 1 144 1 128 1 104 1 312 2 177 1 50 1 25 1 93 1 179 1 
227 1 144 1 128 1 104 1 312 2 177 1 50 1 25 1 93 1 179 1 
227 1 144 1 128 1 104 1 312 2 177 1 50 1 25 1 93 1 179 1 
227 1 144 1 128 1 104 1 312 2 177 1 50 1 25 1 93 1 179 1 
5 1 37 1 192 1 124 1 352 1 276 1 278 1 33 1 321 1 348 1 
58 1 195 1 
51 1 5 1 192 1 103 1 124 1 242 1 352 1 33 1 321 1 
20 1 76 1 
150 1 252 1 338 1 
37 1 0 1 138 1 348 1 5 1 141 2 192 1 124 1 267 1 352 1 276 1 268 1 130 1 106 1 33 1 43 1 321 1 270 1 
37 1 0 1 138 1 348 1 5 1 141 2 192 1 124 1 267 1 352 1 276 1 268 1 130 1 106 1 33 1 43 1 321 1 270 1 
37 1 0 1 138 1 348 1 5 1 141 2 192 1 124 1 267 1 352 1 276 1 268 1 130 1 106 1 33 1 43 1 321 1 270 1 
20 1 76 1 252 1 
20 1 76 1 252 1 
150 1 338 1 
150 1 252 1 338 1 
325 1 139 1 
216 2 201 1 220 1 203 1 5 1 29 2 251 2 69 1 130 1 33 1 321 1 279 1 138 1 325 1 326 2 139 1 141 1 58 1 233 1 192 1 124 1 287 1 352 1 81 2 106 1 43 1 195 1 
63 2 47 1 88 1 128 1 216 2 50 1 25 1 4 1 250 1 156 1 184 1 254 2 158 1 97 1 136 2 303 1 258 1 260 1 326 2 123 1 144 1 329 1 235 1 145 2 312 2 330 2 81 2 290 1 173 1 126 1 85 1 
63 2 54 2 136 2 304 1 56 1 323 1 306 1 120 1 24 1 190 1 40 1 222 1 250 1 145 2 129 1 299 1 116 1 85 1 257 1 
63 1 54 2 136 1 161 1 56 1 323 1 306 1 24 1 190 1 40 1 250 1 145 1 129 1 299 1 116 1 257 1 85 1 
63 1 64 1 136 1 47 1 304 1 306 1 22 1 245 1 4 1 250 1 145 1 132 1 331 1 85 1 
63 1 54 2 136 1 304 1 56 1 323 1 306 1 24 1 190 1 40 1 222 1 250 1 145 1 129 1 299 1 116 1 85 1 257 1 
266 1 
350 1 205 1 268 1 202 1 221 1 186 1 26 1 
149 1 127 1 333 1 202 1 221 1 155 1 130 1 134 1 320 1 159 1 138 1 349 1 350 1 268 2 194 1 239 1 147 1 
63 1 198 1 64 1 136 1 47 1 48 1 127 1 57 1 4 1 250 1 145 1 52 1 341 1 134 1 147 1 85 1 159 1 
149 6 87 1 127 2 292 1 334 1 21 5 202 2 221 5 67 1 130 1 95 5 134 2 320 1 96 1 159 2 162 1 137 1 118 2 138 1 305 1 231 1 308 2 143 1 350 8 234 2 263 1 79 2 194 1 268 5 353 1 44 1 239 3 147 2 172 2 148 2 
86 1 127 1 216 1 336 1 221 1 295 1 29 1 251 1 32 1 157 1 130 1 134 1 35 1 159 1 98 1 118 1 138 1 282 1 326 1 140 1 350 1 265 1 170 1 81 1 147 1 172 1 
350 1 205 1 127 1 268 1 202 1 221 1 134 1 147 1 26 1 159 1 
149 10 55 1 118 2 21 5 221 5 308 2 350 5 234 2 263 1 79 2 268 5 95 5 239 5 172 2 148 2 
138 1 268 1 130 1 194 1 202 1 320 1 
63 4 64 2 47 1 127 2 218 1 200 1 334 2 22 1 221 2 4 1 250 1 130 3 53 1 134 2 320 4 159 2 136 4 138 3 164 1 261 1 285 1 166 2 350 2 145 4 194 2 353 2 331 1 147 1 85 1 
63 1 64 1 46 1 291 1 47 1 48 1 216 3 128 1 201 1 2 1 50 1 25 1 246 1 4 1 29 2 251 2 250 1 156 1 254 1 158 1 8 1 98 2 136 1 258 1 326 2 140 1 123 1 144 1 145 1 312 2 81 3 85 1 
149 4 127 1 10 1 21 2 334 1 202 2 221 2 350 1 268 4 95 2 239 2 134 1 353 1 147 1 159 1 
192 1 77 1 352 1 
192 1 352 1 114 1 139 1 348 1 
192 1 77 1 352 1 
192 1 77 1 352 1 
192 1 14 1 352 1 
192 1 14 1 352 1 
192 1 14 1 352 1 
192 1 352 1 
33 1 321 1 
292 1 128 1 50 1 25 1 336 1 204 2 153 2 32 1 254 8 96 1 162 1 258 4 10 1 282 1 308 1 144 1 168 1 104 1 312 2 237 1 44 1 172 1 126 4 
292 2 128 2 50 2 336 1 25 2 294 1 204 2 153 3 32 1 254 11 96 1 162 1 258 5 10 1 282 1 327 1 308 1 144 2 234 1 311 1 168 1 79 1 104 1 312 4 237 1 44 1 172 2 126 6 
87 1 292 1 128 3 50 3 336 1 25 3 67 1 204 3 153 4 32 1 254 19 96 1 162 1 258 10 10 1 231 1 282 1 327 1 308 3 143 1 144 3 234 2 311 1 168 1 79 2 104 1 288 1 312 6 237 1 44 1 172 3 126 9 148 2 
87 1 292 1 128 3 50 3 336 1 25 3 67 1 204 3 153 5 32 1 254 17 96 1 162 1 258 7 10 1 231 1 282 1 327 1 308 2 143 1 144 3 234 2 311 2 168 1 79 2 104 1 288 1 312 6 237 1 44 1 172 3 126 10 148 1 
292 1 128 1 50 1 25 1 336 1 204 2 153 2 32 1 254 8 96 1 162 1 258 4 10 1 282 1 308 1 144 1 168 1 104 1 312 2 237 1 44 1 172 1 126 4 
87 1 292 1 128 1 50 1 25 1 67 1 204 1 153 2 254 12 96 1 162 1 258 6 231 1 308 2 143 1 144 1 234 2 311 1 79 2 104 1 312 2 44 1 172 2 126 6 148 2 
87 1 292 1 128 4 50 4 336 1 25 4 67 1 204 3 153 5 32 1 254 18 96 1 162 1 258 8 10 1 231 1 282 1 327 1 308 2 143 1 144 4 234 2 311 2 168 1 79 2 104 1 288 2 312 8 237 1 44 1 172 3 126 10 148 1 
87 1 292 1 128 4 50 4 25 4 178 1 67 1 204 3 153 6 254 16 96 1 162 1 258 7 231 1 308 2 143 1 144 4 234 3 311 3 79 3 104 1 288 2 312 8 44 1 172 3 126 9 148 2 
258 4 282 3 336 3 308 1 204 3 153 6 311 3 168 1 32 1 237 2 254 7 172 1 126 3 
87 1 292 1 128 4 50 4 336 1 25 4 178 1 67 1 204 3 153 4 32 1 254 18 96 1 162 1 258 8 10 1 231 1 282 1 308 2 143 1 144 4 234 2 311 1 168 1 79 2 104 1 288 2 312 8 237 1 44 1 172 3 126 10 148 1 
258 4 128 2 10 1 50 2 282 1 25 2 336 1 308 1 153 3 204 2 144 2 311 1 168 1 32 1 288 1 312 4 237 1 254 8 172 1 126 4 
258 3 10 1 282 1 336 1 308 1 204 2 153 2 168 1 32 1 237 1 254 6 186 1 172 1 126 3 
258 2 128 1 327 1 50 1 25 1 308 1 204 1 153 2 144 1 234 1 311 1 79 1 312 2 254 4 172 1 126 2 148 1 
162 1 258 4 292 2 294 1 308 1 204 1 153 2 234 1 311 1 79 1 254 7 44 1 172 1 126 3 148 1 
292 2 128 2 50 2 336 2 294 1 25 2 153 9 204 5 32 1 115 1 254 23 162 2 258 12 10 1 282 2 308 3 144 2 234 2 311 4 309 1 168 1 79 2 236 1 288 2 312 4 237 1 172 3 126 11 148 2 
258 1 292 1 254 1 
162 1 254 1 126 1 
55 1 258 3 128 1 50 1 327 1 25 1 308 1 153 3 204 2 144 1 234 1 311 1 79 1 312 2 254 6 172 1 126 3 148 1 
87 1 292 1 128 1 50 1 25 1 67 1 204 1 153 2 254 12 96 1 162 1 258 6 231 1 308 2 143 1 144 1 234 2 311 1 79 2 104 1 312 2 44 1 172 2 126 6 148 2 
258 3 282 1 336 1 308 1 204 1 153 2 311 1 32 1 254 6 172 1 126 3 
258 2 128 1 282 1 50 1 336 1 25 1 153 2 204 1 144 1 311 1 168 1 288 1 115 1 312 2 237 1 254 3 126 1 
258 3 282 1 336 1 308 1 204 1 153 1 32 1 170 1 254 5 172 1 126 2 
128 1 50 1 25 1 153 1 144 1 311 1 79 1 104 1 312 2 254 2 172 1 126 2 
258 2 128 1 50 1 25 1 308 1 204 1 153 2 144 1 234 1 311 1 79 1 104 1 312 2 254 4 172 1 126 2 148 1 
258 2 128 3 50 3 282 1 178 1 25 3 336 1 204 1 153 2 144 3 311 1 104 1 288 1 115 1 312 6 254 3 126 1 
292 4 128 5 50 5 336 3 178 1 25 5 294 1 153 12 204 7 249 1 32 2 115 1 254 34 342 1 162 3 228 1 258 18 10 1 282 3 327 1 308 5 144 5 234 3 311 5 168 1 79 3 104 1 288 2 312 10 237 1 44 1 172 5 126 16 148 3 
216 1 30 1 176 1 201 1 81 1 3 1 326 1 
38 1 216 1 176 1 201 1 3 1 326 1 100 1 30 1 223 1 7 1 81 1 313 1 
4 1 63 1 136 1 64 1 47 1 250 1 145 1 22 1 331 1 186 1 85 1 
63 1 64 1 136 1 47 1 48 1 216 2 201 1 2 1 326 1 4 1 29 1 251 1 250 1 145 1 269 1 81 2 8 1 85 1 
63 1 47 3 48 2 216 2 201 1 2 1 4 2 295 1 29 1 250 1 251 2 275 1 225 1 8 1 136 1 326 2 166 1 145 1 61 1 81 2 269 1 215 1 85 1 
63 2 47 3 48 2 216 2 201 1 180 1 4 2 295 1 29 1 250 1 251 2 275 1 225 1 8 1 136 2 326 2 166 1 167 1 145 2 61 1 81 2 269 1 215 1 85 1 
63 3 64 1 47 4 48 1 90 1 202 1 4 1 250 1 275 1 70 1 130 2 320 1 136 3 99 1 138 2 57 1 166 1 167 1 145 3 169 1 268 1 215 1 85 1 
63 3 64 1 136 3 47 4 48 1 138 2 315 1 90 1 57 1 202 1 4 1 166 1 167 1 250 1 145 3 275 1 169 1 268 1 130 2 215 1 320 1 85 1 
63 1 136 1 250 1 145 1 185 1 85 1 
63 7 198 1 64 2 136 6 47 3 74 1 88 1 48 1 110 1 120 1 190 1 66 1 92 1 191 1 27 1 4 2 250 2 145 7 330 1 185 1 85 3 
63 1 46 1 291 1 47 1 48 1 18 1 128 2 216 2 112 1 201 2 2 1 50 2 336 1 25 2 153 2 204 2 4 1 29 1 250 1 251 1 32 1 254 6 158 2 8 1 207 1 136 1 229 1 9 1 258 3 10 1 120 1 282 1 326 1 308 1 123 2 144 2 329 1 235 1 168 1 145 1 312 4 237 1 81 2 269 1 172 1 126 3 85 1 
63 1 64 1 175 1 47 2 127 2 315 1 90 1 202 1 221 1 26 1 205 1 130 3 134 2 320 2 159 2 136 1 39 1 138 3 57 1 285 1 350 1 145 1 287 1 169 1 268 1 194 1 147 2 84 1 
63 1 198 1 136 1 47 1 48 1 219 1 4 1 250 1 145 1 169 1 52 1 185 1 85 1 
63 4 64 1 136 4 47 1 120 1 22 1 4 1 167 1 250 1 145 4 71 1 331 1 85 1 
63 2 136 2 47 1 48 1 110 1 347 1 92 1 4 1 166 1 250 1 145 2 214 1 45 1 85 2 
63 1 54 1 136 1 64 1 250 1 56 1 145 1 323 1 299 1 85 1 
63 2 136 2 47 1 88 1 120 1 190 1 4 1 250 1 145 2 184 1 85 1 
63 5 64 1 136 4 47 3 88 1 74 1 120 1 22 1 66 1 4 2 166 1 250 2 145 5 71 1 331 1 85 2 
63 5 64 1 136 4 47 3 88 1 74 1 120 1 22 1 181 1 4 2 166 1 250 2 145 5 71 1 331 1 85 2 
63 1 64 1 136 1 47 1 48 1 216 2 201 1 326 1 180 1 4 1 29 1 251 1 250 1 145 1 269 1 81 2 8 1 85 1 
63 1 198 1 136 1 47 1 48 1 110 1 92 1 27 1 4 1 166 1 250 1 145 1 85 2 
160 1 211 1 241 1 201 1 73 1 
160 2 241 2 138 2 90 1 201 1 202 1 273 1 295 1 41 1 211 2 287 1 268 1 225 1 61 1 131 1 130 2 253 1 107 1 73 1 
303 1 211 1 241 1 216 1 81 1 326 1 97 1 290 1 73 1 
253 1 107 1 73 1 
224 1 346 1 186 1 154 1 
75 1 224 1 346 1 272 1 232 1 337 1 154 1 
319 1 272 1 343 1 
240 1 301 2 230 1 75 3 346 1 272 3 337 1 232 1 154 1 224 1 171 1 62 1 
344 1 94 1 75 2 224 1 346 1 272 2 232 1 337 1 154 1 
54 1 89 1 230 1 75 1 346 1 272 1 335 1 337 1 232 1 40 1 299 1 
75 1 230 1 224 1 346 1 272 1 232 1 337 1 
75 1 230 1 224 2 272 1 232 1 337 1 154 1 
217 1 230 1 75 2 346 1 272 2 337 2 232 2 60 1 224 1 174 1 
274 1 6 1 94 2 75 3 230 1 224 1 346 2 335 1 272 3 125 1 232 1 337 1 154 1 
54 2 323 1 230 1 75 2 346 1 12 1 272 2 24 1 337 1 232 1 154 1 40 1 94 1 224 1 299 1 
344 1 163 1 230 1 75 4 346 2 272 4 335 1 337 2 232 2 154 1 94 2 224 1 125 1 
75 1 230 1 224 1 346 1 272 1 232 1 337 1 154 1 
301 1 240 1 135 1 75 4 346 3 272 4 335 1 337 1 232 1 154 2 94 2 224 2 171 1 125 1 
259 1 193 1 94 1 75 2 230 1 224 1 346 1 272 2 354 1 232 1 337 1 154 1 
240 1 301 2 19 1 230 1 75 3 346 1 272 3 337 1 232 1 154 1 224 1 171 2 
16 1 271 2 213 1 346 2 
75 1 230 1 272 1 232 1 337 1 280 1 
6 1 94 1 75 2 230 1 224 1 346 1 272 2 232 1 337 1 154 1 
11 1 
75 1 230 1 224 1 346 1 272 1 232 1 337 1 154 1 
301 1 230 1 75 3 346 1 272 3 337 1 232 1 154 1 6 1 94 1 224 1 
135 1 346 1 335 1 125 1 
224 1 346 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
361 2 0 1 291 1 195 2 154 3 319 1 272 2 220 1 35 1 322 1 299 5 111 2 325 9 276 6 40 1 183 1 230 1 206 1 377 4 120 9 240 1 71 2 72 1 379 2 287 2 315 1 49 1 25 1 
361 2 0 1 291 1 195 2 154 3 319 1 272 2 220 1 35 1 322 1 299 5 111 2 325 9 276 6 40 1 183 1 230 1 206 1 377 4 120 9 240 1 71 2 72 1 287 2 379 2 315 1 49 1 25 1 
361 2 0 1 291 1 195 2 154 4 319 1 272 2 220 1 35 1 322 1 299 6 111 2 325 10 276 7 40 1 183 1 230 1 206 1 377 5 120 10 240 1 71 2 72 1 287 2 379 2 315 1 49 1 25 1 
361 2 291 1 195 2 154 2 319 1 272 2 220 1 35 1 322 1 299 4 111 2 325 7 276 4 40 1 183 1 230 1 206 1 377 3 120 7 240 1 71 2 72 1 287 2 379 1 315 1 49 1 25 1 
361 1 0 1 154 1 206 1 195 1 319 1 377 2 272 1 299 3 120 4 111 1 240 1 72 1 287 1 379 2 315 1 325 4 276 3 
361 1 196 1 319 1 272 1 220 1 35 1 299 1 120 2 310 1 111 1 80 1 71 1 72 1 287 1 315 1 325 2 
361 2 154 1 319 1 377 1 272 2 322 1 299 2 120 3 71 1 72 1 315 1 325 3 276 1 
361 2 152 1 0 1 154 3 195 1 319 1 272 2 322 1 299 5 368 1 111 1 325 9 276 7 40 1 206 1 377 4 120 9 71 1 240 1 72 1 379 2 287 1 315 1 49 1 
361 2 152 1 0 1 154 3 195 1 319 1 272 2 322 1 299 5 368 1 111 1 325 9 276 7 40 1 206 1 377 4 120 9 71 1 240 1 72 1 379 2 287 1 315 1 49 1 
36 1 37 1 250 1 
36 1 11 1 338 2 
45 2 1 2 175 2 284 2 128 1 47 1 91 2 296 2 
268 1 216 2 269 1 75 1 363 1 1 2 175 2 128 1 245 2 4 2 296 3 7 1 9 1 204 1 81 1 303 2 87 1 228 1 229 1 41 1 91 3 259 1 232 1 118 1 119 1 280 1 233 1 336 2 236 1 45 2 284 2 121 1 47 1 286 1 98 1 359 1 99 1 
45 1 1 1 175 1 284 1 128 1 358 1 91 1 302 1 296 1 114 1 
175 1 59 1 130 1 91 1 296 1 298 1 378 1 36 1 46 1 37 1 97 1 160 1 285 1 302 1 
1 1 175 1 59 1 130 1 91 1 296 1 298 2 45 1 378 1 36 1 284 1 37 1 160 1 285 2 302 1 
78 1 27 1 285 1 173 1 298 1 
78 1 36 1 37 1 285 2 106 1 173 1 100 1 298 2 
285 1 173 1 298 1 
1 1 128 1 175 1 91 1 296 1 76 1 298 1 78 1 45 1 284 1 285 1 358 1 302 1 114 1 
36 1 
78 1 36 1 37 1 248 1 285 2 173 1 100 1 298 2 
139 1 52 1 365 2 376 1 167 1 298 5 335 1 96 1 78 2 171 1 36 1 37 1 285 5 173 2 337 1 100 1 136 2 50 1 182 2 
373 1 268 1 363 1 175 1 245 1 91 2 4 1 296 2 118 1 119 1 280 1 7 1 179 1 336 1 158 1 45 1 204 1 284 1 98 1 87 1 
47 1 250 1 
1 1 175 2 91 2 296 2 44 1 45 1 284 1 47 2 165 1 
373 1 246 1 48 1 
268 1 363 1 245 1 91 1 4 1 296 1 119 1 118 1 280 1 7 1 336 1 204 1 47 1 98 1 87 1 215 1 
45 3 1 1 175 3 284 3 47 1 91 3 296 3 179 1 
45 1 175 1 284 1 91 1 302 1 296 1 114 1 
45 1 1 1 175 1 284 1 91 1 302 1 296 1 165 1 44 1 
268 1 216 1 269 1 363 1 75 1 1 2 175 3 128 1 245 1 130 1 156 1 4 1 296 4 31 1 7 1 298 1 179 1 158 1 204 1 160 1 302 1 303 2 87 1 228 1 59 1 91 4 232 1 118 1 119 1 44 1 280 1 233 1 336 1 236 1 378 1 45 3 284 3 121 1 285 1 47 1 286 1 98 1 359 1 99 1 
45 1 175 2 284 1 46 1 47 1 91 2 296 2 186 1 179 1 
1 1 175 3 59 1 29 1 130 1 91 3 296 3 44 1 31 1 298 1 179 2 158 1 45 3 378 1 36 1 284 3 285 1 160 1 302 1 
373 1 1 1 175 2 246 1 91 2 296 2 44 1 179 1 45 2 284 2 
268 1 363 1 245 1 91 1 4 1 296 1 119 1 118 1 280 1 7 1 336 1 204 1 47 1 98 1 87 1 
363 1 245 1 91 1 4 1 296 1 119 1 118 1 280 1 336 1 204 1 47 1 191 1 344 1 98 1 87 1 
269 1 216 4 246 2 320 1 219 1 9 2 163 1 326 1 303 2 226 1 57 1 277 1 373 2 228 1 58 1 232 1 233 1 282 1 236 2 309 1 121 1 48 2 286 1 101 1 
45 1 134 1 175 1 284 1 130 1 91 1 302 1 296 1 
1 1 175 5 61 1 91 5 296 5 44 1 186 1 179 2 158 1 307 1 45 4 284 4 46 1 47 1 
45 2 134 1 175 2 284 2 91 2 302 1 296 2 114 1 
222 1 253 1 
222 1 253 1 
102 1 135 1 
102 1 135 1 
102 1 135 1 
222 1 68 1 253 1 
222 1 68 1 253 1 
222 1 92 1 253 1 
102 1 222 2 369 1 127 1 135 1 253 2 
222 1 68 1 253 1 
222 1 362 1 253 1 
222 1 362 1 253 1 
222 1 362 1 253 1 
329 2 126 3 51 2 243 1 349 1 108 1 168 2 143 1 298 2 222 2 234 1 211 2 369 1 36 1 285 2 313 1 149 2 360 1 253 2 
126 1 51 1 175 2 131 1 296 2 32 1 298 1 321 1 222 1 133 1 274 1 253 1 329 1 18 1 91 2 168 1 92 1 143 1 45 2 211 1 284 2 69 1 285 1 47 1 
195 1 111 1 287 1 
310 1 111 1 287 1 
138 1 264 1 195 2 310 1 111 3 281 1 
138 1 195 1 310 1 111 2 262 1 281 1 
138 1 195 1 310 1 111 2 281 2 
365 1 219 1 297 2 298 5 321 1 78 4 133 1 300 1 36 2 11 1 37 1 136 1 12 1 226 1 182 1 374 1 16 1 140 2 42 2 185 1 209 1 167 1 20 1 96 3 309 1 69 1 285 5 312 1 173 1 338 3 100 1 50 2 101 1 
27 5 293 1 294 5 365 2 157 1 219 3 297 6 298 9 78 7 247 1 36 5 11 3 37 1 136 2 12 2 226 3 182 2 139 1 374 3 16 2 255 1 42 6 185 1 64 1 167 1 20 3 96 8 309 3 69 4 70 1 285 9 173 6 338 9 100 1 50 6 101 3 
365 1 219 1 297 2 298 3 78 2 36 3 11 2 37 1 136 1 12 1 226 1 182 1 374 1 139 1 16 1 140 1 209 1 42 2 20 1 96 3 309 1 69 1 285 3 312 1 338 4 50 2 101 1 
365 1 157 1 219 2 297 4 298 4 78 3 36 4 11 3 37 1 136 1 12 1 226 2 182 1 374 2 139 1 16 1 140 2 255 1 42 4 209 1 64 1 20 2 96 5 309 2 69 2 285 4 312 1 338 7 50 4 101 2 
98 1 250 1 341 1 
56 1 98 1 
227 1 
98 1 118 1 
17 1 184 1 98 3 118 1 119 1 341 2 
98 1 118 1 119 1 
161 1 98 1 
216 7 278 1 375 1 356 2 236 3 210 1 188 1 9 4 308 1 275 1 370 1 212 1 163 3 226 1 57 2 115 1 101 1 
216 7 278 1 375 1 356 2 236 3 210 1 188 1 9 4 308 1 275 1 370 1 212 1 163 3 226 1 57 2 115 1 101 1 
216 7 278 1 375 1 356 2 236 3 210 1 188 1 9 4 308 1 275 1 370 1 212 1 163 3 39 1 226 1 57 2 115 1 101 1 
216 46 217 1 219 4 9 24 202 1 55 1 275 1 370 7 372 1 163 15 303 4 85 1 115 1 226 7 57 8 228 2 205 2 278 2 89 1 333 4 62 1 351 1 375 3 232 2 233 2 356 3 236 22 210 2 20 4 188 3 308 1 21 4 309 4 189 1 121 2 212 2 101 7 
216 9 244 1 295 1 9 5 275 1 370 1 163 4 303 4 226 1 57 3 228 2 205 1 278 1 375 1 232 2 233 2 356 2 210 1 236 4 188 1 308 1 121 2 212 1 101 1 
361 1 363 1 195 1 245 1 319 1 4 1 272 1 273 1 200 1 8 1 299 1 204 1 111 2 325 2 345 1 276 1 346 1 208 1 353 1 66 1 19 1 336 1 264 1 120 2 310 1 172 1 71 1 72 1 287 1 315 1 
361 1 363 1 195 1 245 1 319 1 4 1 272 1 273 1 200 1 8 1 299 1 79 1 204 1 111 2 112 1 325 3 345 1 276 2 208 1 144 1 66 1 19 1 336 1 264 1 120 3 310 1 172 1 71 1 287 1 315 1 
363 1 195 1 245 1 319 1 4 1 200 1 8 1 299 1 204 1 111 2 112 1 325 2 345 1 276 2 144 1 66 1 19 1 336 1 264 1 120 2 310 1 172 1 71 1 287 1 315 1 
361 1 363 1 318 1 245 1 4 1 272 1 118 1 200 2 8 2 66 2 147 1 336 1 367 1 79 1 120 1 204 1 71 2 98 1 83 1 328 1 325 1 87 1 73 1 
361 1 363 1 195 1 245 1 208 1 4 1 272 1 273 1 200 1 19 1 8 1 66 1 336 1 264 1 310 1 120 1 204 1 111 2 172 1 71 1 72 1 112 1 287 1 345 1 325 1 346 1 
94 1 
245 2 342 1 4 2 5 1 6 2 296 1 109 2 298 5 204 1 11 2 160 1 302 1 347 1 15 1 16 1 59 1 65 1 167 1 118 1 355 2 173 6 363 1 175 1 365 1 270 1 130 1 367 1 36 2 37 1 225 1 136 1 83 1 181 1 87 2 182 1 231 1 90 2 91 1 145 1 336 2 235 4 96 2 378 1 237 2 238 1 46 1 285 5 97 1 190 2 148 2 338 2 98 1 100 3 50 2 340 1 
59 1 175 1 342 1 130 1 270 1 91 1 5 1 65 1 296 1 355 1 298 3 235 2 378 1 46 1 248 1 160 1 285 3 97 1 173 2 100 1 302 1 181 1 
59 1 175 1 342 1 130 1 270 1 90 1 91 1 5 1 65 1 296 1 298 3 235 3 378 1 36 1 46 1 248 1 37 1 160 1 285 3 97 1 173 1 100 1 302 1 181 1 
175 1 342 1 270 1 130 1 5 1 296 1 6 1 298 3 36 1 248 1 160 1 37 1 302 1 181 1 59 1 91 1 90 1 65 1 355 1 235 3 378 1 46 1 97 1 285 3 173 2 100 1 
342 1 5 1 6 4 296 1 109 2 298 5 159 1 11 2 160 1 248 1 302 1 116 1 59 1 65 1 167 1 355 4 23 1 173 7 124 1 175 1 130 1 270 1 365 1 36 5 37 5 136 1 181 1 182 1 91 1 90 4 145 1 283 1 235 6 378 1 96 1 237 2 46 1 285 5 97 1 190 2 148 2 100 3 50 1 340 1 
175 1 342 1 270 1 365 1 130 1 5 1 6 2 296 1 109 2 298 4 36 2 11 2 37 1 160 1 136 1 302 1 181 1 347 1 182 1 59 1 90 2 91 1 65 1 167 1 355 2 145 1 235 4 96 1 378 1 237 2 46 1 97 1 285 4 173 4 190 2 148 2 338 2 100 2 50 1 340 1 
175 1 342 1 270 1 130 1 365 1 5 1 6 2 296 1 109 2 298 4 159 1 36 1 11 2 37 1 160 1 136 1 302 1 181 1 182 1 116 1 59 1 90 2 91 1 65 1 167 1 355 2 145 1 235 4 96 1 378 1 237 2 46 1 97 1 285 4 23 1 173 4 190 2 148 2 100 2 50 1 340 1 
175 1 342 1 270 1 130 1 365 1 5 1 6 2 296 1 109 2 298 4 159 1 36 1 11 2 37 1 160 1 136 1 302 1 181 1 182 1 116 1 59 1 90 2 91 1 65 1 167 1 355 2 145 1 235 4 96 1 378 1 237 2 46 1 97 1 285 4 23 1 173 4 190 2 148 2 100 2 50 1 340 1 
175 1 105 2 342 1 270 1 130 1 365 1 5 1 6 2 296 1 298 4 36 1 37 1 160 1 136 1 302 1 180 1 181 1 251 1 182 1 116 1 59 1 90 2 91 1 65 1 167 1 355 2 145 1 235 4 96 1 378 1 237 2 46 1 97 1 285 4 173 4 190 2 338 2 100 2 213 2 242 1 50 1 
175 1 342 1 365 1 270 1 130 1 5 1 296 1 6 3 109 2 298 4 159 1 36 1 11 2 37 1 160 1 136 1 302 1 181 1 182 1 116 1 59 1 91 1 90 3 65 1 167 1 145 1 355 3 235 5 96 1 378 1 237 2 46 1 97 1 285 4 23 1 190 2 173 5 148 2 100 2 50 1 124 1 340 1 
175 1 342 1 365 1 270 1 130 1 5 1 296 1 6 3 109 2 298 4 159 1 36 1 11 2 37 1 160 1 136 1 302 1 181 1 182 1 116 1 59 1 91 1 90 3 65 1 167 1 145 1 355 3 235 5 96 1 378 1 237 2 46 1 97 1 285 4 23 1 190 2 173 5 148 2 100 2 50 1 124 1 340 1 
175 1 105 2 342 1 270 1 365 1 130 1 5 1 6 2 296 1 298 4 36 1 37 1 160 1 136 1 302 1 181 1 347 1 182 1 59 1 90 2 91 1 65 1 167 1 355 2 145 1 235 4 96 1 378 1 237 2 46 1 97 1 285 4 173 4 190 2 338 2 100 2 213 2 242 1 50 1 
269 1 216 6 246 1 9 3 275 1 250 1 163 2 303 2 57 2 226 1 373 1 277 1 228 1 278 1 375 1 232 1 233 1 356 1 236 3 188 1 308 1 121 1 47 2 48 1 286 1 101 1 
269 1 216 14 246 4 219 1 202 1 9 8 370 1 249 1 81 1 372 1 163 2 113 1 84 1 303 4 57 1 226 1 373 11 228 2 333 3 351 1 232 2 233 2 236 6 20 2 21 3 309 2 121 2 47 1 48 11 286 2 359 1 380 1 101 2 
268 1 363 1 269 1 216 2 175 1 245 1 54 1 246 1 4 1 296 2 7 1 179 1 158 1 9 1 204 1 249 1 81 1 303 2 87 1 228 1 91 2 232 1 118 1 119 1 261 1 280 1 93 1 233 1 336 1 236 1 45 1 284 1 121 1 47 1 98 1 286 1 359 1 215 1 
290 2 245 3 246 7 4 3 296 3 7 2 158 1 9 10 204 2 112 1 249 1 163 8 303 6 57 4 119 2 118 2 356 1 20 2 308 1 309 2 121 3 24 1 359 1 268 2 269 3 216 20 363 2 175 1 271 1 366 2 219 2 179 1 275 1 370 4 81 1 86 1 226 3 87 1 373 7 228 3 331 2 278 1 375 1 91 3 232 3 280 2 233 3 336 3 236 10 188 1 45 1 284 1 47 2 48 7 286 3 98 2 99 2 289 2 101 3 
150 1 363 2 269 2 216 2 175 1 245 7 104 1 199 1 4 8 296 1 179 1 224 1 9 1 367 1 204 2 112 1 81 1 83 1 303 4 87 2 14 1 277 1 228 2 332 1 41 2 91 1 232 2 353 1 118 2 233 2 336 8 236 1 45 1 284 1 121 2 357 1 98 3 286 2 359 1 
269 1 216 3 1 1 175 1 246 1 30 1 296 1 219 1 9 1 249 1 163 1 303 2 57 1 226 1 373 1 228 1 91 1 232 1 44 1 233 1 20 1 236 2 45 1 309 1 284 1 121 1 48 1 286 1 101 1 
373 1 277 1 216 2 269 1 228 1 58 1 246 1 232 1 233 1 9 2 309 1 121 1 370 1 48 1 286 1 163 1 303 2 101 1 
373 1 277 1 216 2 269 1 228 1 246 1 232 1 219 1 233 1 282 1 236 2 121 1 48 1 286 1 163 1 303 2 57 1 226 1 
269 1 216 4 246 2 219 1 9 2 370 1 163 2 303 2 226 1 57 1 277 1 373 2 228 1 232 1 233 1 20 1 236 2 309 1 121 1 48 2 286 1 101 1 
373 1 216 2 269 1 228 1 58 1 104 1 246 1 232 1 233 1 9 2 309 1 121 1 370 1 48 1 286 1 163 1 303 2 101 1 
373 1 216 2 269 1 228 1 104 1 246 1 232 1 219 1 233 1 282 1 236 2 121 1 48 1 286 1 303 2 226 1 
373 2 216 4 269 1 228 1 104 1 246 2 232 1 219 1 233 1 236 2 20 1 9 2 309 1 121 1 48 2 286 1 303 2 226 1 101 1 
216 4 269 1 246 2 219 1 9 2 370 1 163 2 303 2 226 1 57 1 373 2 228 1 232 1 233 1 20 1 236 2 309 1 121 1 48 2 286 1 101 1 
268 1 216 2 363 1 269 1 245 1 4 1 296 1 7 1 9 1 204 1 81 1 303 2 87 1 228 1 91 1 232 1 118 1 119 1 280 1 233 1 336 1 236 1 121 1 47 1 98 1 286 1 99 1 359 1 
216 2 363 1 269 1 245 1 4 1 296 1 9 1 204 1 81 1 344 1 303 2 87 1 228 1 91 1 232 1 118 1 119 1 280 1 233 1 336 1 236 1 239 1 121 1 47 1 191 1 98 1 286 1 359 1 
269 1 216 4 246 2 219 1 9 2 370 1 249 1 163 2 303 2 226 1 57 1 373 2 228 1 232 1 233 1 20 1 236 2 309 1 121 1 48 2 286 1 101 1 
268 1 216 4 363 1 269 1 290 1 245 1 246 2 4 1 296 1 219 1 7 1 9 2 204 1 370 1 163 2 303 2 57 1 226 1 373 2 228 1 91 1 232 1 119 1 353 1 118 1 280 1 233 1 336 1 236 2 20 1 309 1 121 1 48 2 98 1 286 1 99 1 101 1 
269 1 216 3 1 1 175 1 246 1 296 1 219 1 9 2 370 1 249 1 163 1 303 2 226 1 373 1 228 1 207 1 91 1 232 1 44 1 233 1 236 1 20 1 45 1 309 1 284 1 121 1 48 1 286 1 101 1 
3 1 295 1 9 27 202 2 10 1 163 14 303 8 57 7 205 2 257 1 351 2 169 1 356 1 20 7 308 1 309 7 21 4 121 4 122 1 74 1 216 51 176 1 364 1 219 6 275 1 370 7 82 1 372 2 226 7 228 4 330 3 333 4 278 1 375 1 232 4 233 4 187 1 236 24 188 1 288 1 192 1 193 1 101 8 
3 1 295 1 9 27 202 2 10 1 163 14 303 8 57 7 205 2 257 1 351 2 169 1 356 1 20 7 308 1 309 7 21 4 121 4 122 1 74 1 216 51 176 1 364 1 219 6 275 1 370 7 82 1 372 2 226 7 228 4 330 3 333 4 278 1 375 1 232 4 233 4 187 1 236 24 188 1 288 1 192 1 193 1 101 8 
216 50 176 1 3 1 295 1 219 7 202 2 9 26 10 1 275 1 370 7 82 1 372 2 163 14 303 4 57 7 226 8 330 3 228 2 205 1 278 1 257 1 333 4 351 2 375 1 232 2 169 1 233 2 356 1 187 1 236 24 20 7 188 1 308 1 21 4 309 7 121 2 288 1 122 1 193 1 192 1 74 1 101 8 
3 1 295 1 9 27 202 2 10 1 163 13 303 8 57 6 205 2 257 1 351 2 67 1 356 1 20 7 308 1 309 7 21 4 121 4 122 1 74 1 216 51 176 1 364 1 219 6 275 1 370 7 82 1 372 2 226 7 228 4 330 3 333 4 278 1 375 1 232 4 233 4 187 1 236 24 188 1 288 1 192 1 193 1 101 8 
216 24 176 1 3 1 295 1 219 2 9 13 10 2 370 1 82 1 163 3 372 2 303 6 57 2 226 2 330 3 228 3 205 2 333 2 257 1 232 3 169 1 233 3 187 1 236 11 20 3 21 2 309 3 121 3 288 1 122 1 192 2 193 1 74 1 101 3 
222 1 329 1 51 1 343 1 211 1 369 1 313 1 168 1 360 1 253 1 
92 1 32 1 
132 1 222 1 329 1 51 1 174 1 211 1 103 1 168 1 253 1 
329 1 126 2 51 1 349 1 108 1 168 1 143 1 298 1 222 1 234 1 211 1 369 1 36 1 285 1 313 1 149 1 360 1 253 1 
329 1 126 2 51 1 349 1 108 1 168 1 143 1 298 1 222 1 234 1 211 1 369 1 36 1 285 1 313 1 149 1 360 1 253 1 
329 1 126 2 51 1 349 1 108 1 168 1 143 1 298 1 222 1 234 1 211 1 369 1 36 1 285 1 313 1 149 1 360 1 253 1 
127 1 68 1 266 1 
127 1 68 1 266 1 
362 1 34 1 
362 1 127 1 34 1 
18 1 131 1 
126 1 51 1 175 2 131 1 296 2 32 1 298 1 321 1 222 1 78 1 133 1 274 1 304 1 253 1 329 1 18 1 91 2 168 1 92 1 234 1 45 2 211 1 284 2 69 1 285 1 47 1 149 1 
68 1 266 1 
362 1 127 1 34 1 
363 1 269 1 216 2 292 1 129 1 175 2 245 2 4 2 296 2 9 1 204 1 249 1 81 1 303 2 14 1 228 1 41 2 91 2 232 1 334 1 118 1 354 1 233 1 336 2 236 1 121 1 357 1 98 1 286 1 359 1 267 1 
363 1 195 1 28 1 245 2 208 1 4 2 353 1 200 1 19 1 336 2 170 1 264 1 310 1 204 1 111 2 172 1 112 1 287 1 214 1 
363 1 195 1 28 1 245 1 208 1 4 1 200 1 19 1 336 1 264 1 310 1 204 1 111 2 172 1 112 1 287 1 125 1 
363 1 26 1 245 1 318 1 4 1 118 1 200 1 336 1 367 1 204 1 98 1 83 1 214 1 87 1 
363 1 195 1 28 1 245 1 208 1 4 1 200 1 19 1 336 1 170 1 264 1 310 1 204 1 111 2 172 1 112 1 287 1 214 1 
260 1 
96 1 171 1 36 1 37 1 337 1 250 1 50 1 
365 1 167 1 109 1 298 1 96 1 36 2 11 1 37 1 285 1 173 1 148 1 338 1 100 1 136 1 50 1 340 1 182 1 
245 3 107 1 4 3 198 2 297 6 298 5 204 4 11 6 160 2 161 2 56 3 162 2 15 1 254 1 16 2 17 1 166 2 167 4 117 1 353 1 118 3 119 3 20 2 263 1 171 1 309 2 265 2 173 5 363 3 365 4 219 2 33 2 36 8 37 2 136 4 38 2 87 1 226 2 182 4 374 2 141 1 42 6 336 3 96 9 285 5 241 2 337 1 98 10 338 12 100 3 50 8 341 2 289 2 101 2 
365 2 177 1 297 5 219 2 33 1 298 1 36 5 11 3 37 2 136 2 82 1 327 1 372 1 226 2 182 2 15 1 16 1 374 3 333 1 257 1 42 5 167 2 187 1 20 2 96 8 21 1 309 2 285 1 173 1 338 6 100 1 122 1 50 5 193 1 101 2 
1 1 128 1 175 1 365 1 296 1 76 1 33 1 298 1 159 1 302 1 136 1 114 1 226 1 182 1 374 2 278 1 91 1 375 1 167 1 188 1 96 2 45 1 189 1 284 1 285 1 358 1 50 2 101 2 
365 1 167 1 96 1 171 1 36 1 37 1 337 1 136 1 50 1 182 1 
374 2 42 5 297 5 219 2 33 1 20 2 96 5 309 2 36 5 11 5 338 10 50 5 226 2 289 1 101 2 
36 1 37 1 285 1 173 1 100 1 298 1 
363 1 2 1 245 4 365 2 4 4 298 3 367 1 203 1 204 1 225 1 136 2 83 1 87 2 182 2 15 2 254 2 139 1 16 2 231 1 167 1 118 1 336 4 96 2 263 1 285 3 173 4 98 1 100 2 50 2 
268 1 216 1 75 1 363 1 269 1 1 2 175 2 128 1 245 1 4 1 296 3 7 1 204 1 303 2 87 1 228 1 91 3 232 1 119 1 118 1 280 1 233 1 336 1 236 1 45 2 284 2 121 1 47 1 98 1 286 1 359 1 99 1 
15 1 16 1 365 1 42 2 167 1 297 2 356 1 96 1 36 4 11 2 37 2 338 4 136 1 50 2 182 1 
211 1 168 1 252 1 
211 1 168 1 252 1 
211 1 18 1 313 1 350 1 168 1 
211 1 168 1 252 1 
211 1 168 1 13 1 
211 1 168 1 13 1 
211 1 168 1 13 1 
211 1 168 1 
222 1 253 1 
216 8 295 1 9 4 275 1 372 1 163 2 303 2 226 1 57 2 228 1 333 1 278 1 375 1 232 1 233 1 356 1 236 4 188 1 308 1 21 1 121 1 193 1 101 1 
216 11 295 1 9 6 275 1 370 1 372 1 163 3 303 4 226 1 57 2 228 2 278 1 333 1 351 1 375 1 142 1 232 2 233 2 356 1 236 5 20 1 188 1 308 1 21 2 309 1 121 2 193 1 101 2 
216 19 295 1 219 2 9 9 275 1 370 1 82 1 372 1 163 5 303 6 226 3 57 4 228 3 205 1 278 1 333 1 257 1 375 1 142 1 232 3 233 3 356 1 187 1 236 10 20 2 188 1 308 1 21 1 309 2 121 3 122 1 193 1 101 3 
216 17 295 1 219 1 9 10 275 1 370 2 82 1 372 1 163 4 303 6 57 2 226 2 228 3 205 1 278 1 333 1 257 1 375 1 142 1 232 3 233 3 356 1 187 1 236 7 20 2 188 1 308 1 21 1 309 2 121 3 122 1 193 1 101 3 
216 8 295 1 9 4 275 1 372 1 163 2 303 2 226 1 57 2 228 1 333 1 278 1 375 1 232 1 233 1 356 1 236 4 188 1 308 1 21 1 121 1 193 1 101 1 
216 12 295 1 219 2 9 6 370 1 82 1 372 1 163 2 303 2 57 1 226 2 228 1 333 1 257 1 232 1 233 1 187 1 236 6 20 2 21 1 309 2 121 1 122 1 193 1 101 2 
216 18 295 1 219 1 9 10 275 1 370 2 82 1 372 1 163 5 303 8 226 2 57 3 228 4 205 2 278 1 333 1 257 1 375 1 142 1 232 4 233 4 356 1 187 1 236 8 20 2 188 1 308 1 21 1 309 2 121 4 122 1 193 1 101 3 
216 11 364 1 295 1 219 1 9 7 370 2 82 1 163 2 372 1 303 6 226 1 228 3 205 1 333 1 257 1 232 3 233 3 187 1 236 4 20 2 21 1 309 2 121 3 122 1 193 1 101 2 
216 7 278 1 375 3 236 4 188 3 308 1 9 3 275 2 370 3 163 6 226 1 57 3 101 1 
216 18 364 1 295 1 219 1 9 10 275 1 370 1 82 1 372 1 163 4 303 8 226 2 57 3 228 4 205 2 278 1 333 1 257 1 375 1 232 4 233 4 356 1 187 1 236 8 20 2 188 1 308 1 21 1 309 2 121 4 122 1 193 1 101 3 
216 8 228 2 205 1 278 1 375 1 232 2 233 2 356 1 236 4 188 1 9 4 308 1 121 2 275 1 370 1 163 3 303 4 226 1 57 2 101 1 
216 6 278 1 375 1 356 1 236 3 188 1 308 1 9 3 275 1 250 1 163 2 57 2 226 1 101 1 
228 1 216 4 142 1 232 1 219 1 233 1 236 2 20 1 9 2 309 1 121 1 163 1 303 2 57 1 226 1 101 1 
216 12 333 2 351 1 219 2 236 6 20 2 202 1 9 6 21 2 309 2 370 2 372 1 163 4 57 2 226 2 101 2 
216 30 219 2 9 14 202 1 55 1 275 1 370 5 163 12 84 1 303 4 226 4 57 7 228 2 205 2 278 2 333 2 351 1 375 4 232 2 233 2 356 1 20 2 236 16 188 4 308 1 309 2 21 2 189 1 121 2 101 4 
236 1 216 1 21 1 
216 1 9 1 333 1 
228 1 216 6 142 1 232 1 219 1 233 1 236 3 20 1 9 3 309 1 121 1 370 2 163 3 303 2 226 1 57 1 289 1 101 1 
216 12 295 1 219 2 9 6 370 1 82 1 372 1 163 2 303 2 57 1 226 2 228 1 333 1 257 1 232 1 233 1 187 1 236 6 20 2 21 1 309 2 121 1 122 1 193 1 101 2 
216 6 278 1 375 1 236 3 188 1 9 3 370 1 163 2 226 1 57 1 101 1 
216 3 228 1 205 1 375 1 232 1 233 1 236 2 188 1 9 1 308 1 55 1 275 1 121 1 370 1 163 2 303 2 57 1 
228 1 216 10 278 1 375 2 295 1 232 1 233 1 236 5 188 2 9 5 189 1 121 1 370 2 163 5 303 2 57 3 226 2 101 2 
228 1 216 2 295 1 232 1 233 1 9 2 309 1 121 1 370 1 163 1 303 2 101 1 
228 1 216 4 295 1 232 1 219 1 233 1 236 2 20 1 9 2 309 1 121 1 370 1 163 2 303 2 57 1 226 1 101 1 
216 3 228 3 205 1 364 1 375 1 295 1 232 3 233 3 236 2 188 1 9 1 55 1 121 3 370 1 163 2 303 6 57 1 
216 41 364 1 295 1 219 4 202 1 9 20 55 1 275 1 370 7 372 1 163 14 303 10 85 1 226 6 57 7 228 5 205 2 278 2 89 1 333 4 62 1 351 1 375 3 142 1 232 5 233 5 356 1 236 21 20 4 188 3 308 1 21 4 309 4 121 5 101 6 
223 1 175 1 46 1 47 1 91 1 296 1 186 1 
223 1 201 1 175 1 317 1 46 1 47 1 63 1 91 1 296 1 137 1 186 1 110 1 
363 1 367 1 204 1 245 1 98 1 250 1 4 1 83 1 118 1 87 1 336 1 
268 1 363 1 175 1 245 1 91 2 4 1 296 2 118 1 119 1 280 1 179 1 336 1 45 1 204 1 284 1 47 1 98 1 87 1 
268 1 254 1 363 1 59 1 175 2 245 1 166 1 130 1 91 2 4 1 296 2 118 2 119 2 280 1 179 1 336 1 45 2 204 1 284 1 161 1 47 1 98 3 302 1 
363 1 175 2 245 2 130 1 4 2 296 2 179 1 204 1 161 1 344 1 302 1 254 1 59 1 60 1 166 1 91 2 119 2 118 2 280 1 336 2 45 2 284 1 47 1 98 3 
363 1 245 3 4 3 298 2 204 1 36 1 161 1 160 1 37 1 56 1 87 1 254 1 60 1 166 1 279 1 306 1 119 1 118 1 336 3 285 2 173 1 98 4 341 1 
254 1 363 1 60 1 245 3 166 1 4 3 118 1 119 1 298 2 336 3 36 1 204 1 37 1 160 1 161 1 285 2 56 1 173 1 98 4 162 1 87 1 341 1 
363 1 332 1 204 1 245 1 4 1 336 1 
150 1 363 2 332 1 17 1 245 6 41 1 258 1 352 1 199 1 4 7 353 1 119 1 118 2 221 1 336 7 224 1 204 3 357 1 112 1 98 3 87 2 
268 1 216 6 363 1 269 2 290 1 175 1 245 1 246 1 4 1 296 2 366 1 7 1 179 1 9 3 204 1 275 1 249 1 163 2 303 4 226 1 57 2 373 1 228 2 278 1 375 1 91 2 232 2 118 1 119 1 353 1 280 1 233 2 356 1 336 1 236 3 188 1 45 1 308 1 284 1 121 2 47 2 48 1 98 1 286 2 99 1 267 1 101 1 
245 1 365 2 4 1 298 3 78 1 36 1 37 1 160 1 56 1 136 2 162 1 38 1 87 1 182 2 167 2 336 1 96 1 171 1 263 1 265 1 285 3 241 1 173 2 337 1 98 2 100 1 50 1 341 1 
363 1 332 1 17 1 245 2 4 2 117 1 353 1 119 1 118 1 336 2 204 2 98 2 341 1 
363 1 60 1 245 4 4 4 353 1 118 1 336 4 367 1 204 1 371 1 98 1 83 1 87 1 
254 1 363 1 245 2 53 1 258 1 352 1 4 2 43 1 119 1 118 1 336 2 204 2 24 1 98 1 
363 1 310 1 204 1 111 1 172 1 245 1 287 1 4 1 87 1 336 1 
363 1 129 1 245 2 4 2 353 1 118 1 336 2 204 1 357 1 112 1 98 1 
150 1 254 1 363 2 245 4 4 5 199 1 353 1 118 2 336 5 367 1 204 2 371 1 357 1 98 3 83 1 87 1 
150 1 254 1 363 2 245 4 4 5 353 1 118 2 336 5 367 1 22 1 204 2 371 1 357 1 98 3 83 1 87 1 
363 1 175 1 245 1 91 2 4 1 296 2 118 1 119 1 280 1 179 1 336 1 45 1 204 1 284 1 47 1 98 1 344 1 87 1 
254 1 363 1 17 1 245 1 258 1 352 1 4 1 119 1 118 1 221 1 336 1 204 2 98 1 
301 1 47 1 256 1 164 1 178 1 
59 1 130 1 256 2 197 1 31 1 298 2 178 2 323 1 78 1 378 1 36 1 301 2 37 1 160 1 311 1 285 2 47 1 302 1 164 1 
292 1 175 1 301 1 256 1 91 1 296 1 164 1 334 1 354 1 
197 1 164 1 323 1 
299 1 319 1 250 1 315 1 
361 1 299 1 120 1 319 1 315 1 325 1 272 1 
71 1 325 1 66 1 
88 1 361 1 299 1 305 1 120 3 72 1 319 1 315 1 325 3 272 1 220 2 146 1 
361 1 299 1 120 2 319 1 379 1 315 1 325 2 272 1 276 1 
361 1 299 1 195 1 120 1 111 1 240 1 72 1 287 1 377 1 325 1 272 1 
361 1 299 1 120 1 72 1 319 1 325 1 272 1 
361 1 120 1 72 1 319 2 315 1 325 1 272 1 
361 2 151 1 194 1 319 1 272 2 77 1 299 1 120 2 72 1 325 2 
361 1 154 1 319 1 377 1 272 1 299 2 120 3 72 1 315 1 325 3 49 1 276 2 40 1 
361 1 195 1 319 1 272 1 299 1 264 1 310 1 120 2 111 2 72 1 314 1 287 1 315 1 325 2 276 1 
361 2 0 1 154 1 319 1 377 1 272 2 299 2 120 4 72 1 379 1 315 1 325 4 276 2 
361 1 299 1 120 1 72 1 319 1 315 1 325 1 272 1 
88 1 361 1 305 1 154 1 319 2 377 1 272 1 220 1 299 3 324 1 120 4 315 2 325 4 276 2 
361 1 299 1 368 1 153 1 120 2 72 1 319 1 315 1 325 2 272 1 276 1 339 1 
88 1 361 1 305 2 319 1 218 1 272 1 220 2 299 1 120 3 72 1 325 3 315 1 
299 2 155 2 123 1 316 1 
95 1 361 1 120 1 72 1 325 1 272 1 
361 1 299 1 120 2 72 1 319 1 315 1 325 2 272 1 276 1 40 1 
348 1 
361 1 299 1 120 1 72 1 319 1 315 1 325 1 272 1 
361 1 299 1 120 3 72 1 319 1 315 1 325 3 272 1 276 1 220 1 40 1 
299 1 324 1 154 1 377 1 
299 1 319 1 

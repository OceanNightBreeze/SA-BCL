#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (33,76) 142 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (62,172) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (11,43,290) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (62,172) (62,172) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (62,172) (62,172) 224 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 247 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (62,172) (62,172) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (11,43,290) (11,43,290) 252 263 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 247 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 54 339 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (33,76) (33,76) (12,213) 189 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (33,76) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (33,76) (33,76) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (62,172) (62,172) 224 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (33,76) 142 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 118 (88,111) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 118 (88,111) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 118 (16,188) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 118 (16,188) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 201 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 279 (205,261) (205,261) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 161 1 164 1 245 1 47 1 205 1 51 9 167 3 53 2 57 2 261 1 23 6 26 2 67 4 99 2 104 2 139 1 105 1 273 2 329 1 330 1 279 4 109 9 148 1 150 1 232 1 41 1 237 2 
240 1 161 1 164 1 245 1 47 1 205 1 51 9 167 3 53 2 57 2 261 1 23 6 26 2 67 4 99 2 104 2 139 1 105 1 273 2 329 1 330 1 279 4 109 9 148 1 150 1 232 1 41 1 237 2 
240 1 161 1 164 1 245 1 47 1 205 1 51 10 167 4 53 2 57 2 261 1 23 7 26 2 67 5 99 2 104 2 139 1 105 1 273 2 329 1 330 1 279 5 109 10 148 1 150 1 232 1 41 1 237 2 
240 1 161 1 164 1 245 1 47 1 205 1 51 7 167 2 53 2 57 1 261 1 23 4 26 2 67 3 99 2 104 2 139 1 105 1 273 2 330 1 279 3 109 7 148 1 150 1 232 1 41 1 237 2 
26 1 67 2 161 1 99 1 164 1 104 1 105 1 205 1 273 1 51 4 167 1 329 1 53 1 279 2 109 4 57 2 261 1 23 3 
26 1 161 1 99 1 215 1 104 1 205 1 51 2 307 1 53 1 330 1 109 2 148 1 173 1 261 1 237 1 
26 2 67 1 161 1 99 2 139 1 205 1 51 3 167 1 279 1 109 3 261 1 237 1 23 1 
26 2 67 4 161 1 99 2 164 1 2 1 104 1 105 1 47 1 139 1 205 1 273 1 51 9 167 3 329 1 53 1 279 4 109 9 57 2 150 1 261 1 63 1 23 7 237 1 
26 2 67 4 161 1 99 2 164 1 2 1 104 1 105 1 47 1 139 1 205 1 273 1 51 9 167 3 329 1 53 1 279 4 109 9 57 2 150 1 261 1 63 1 23 7 237 1 
36 1 332 1 247 1 
332 1 121 2 328 1 
322 2 211 2 78 2 89 1 9 2 
267 1 322 1 241 2 71 1 184 1 140 2 142 1 9 1 76 1 78 1 211 1 89 1 39 1 156 2 
322 1 211 1 78 1 89 1 9 1 62 1 
92 1 9 1 11 1 290 1 
322 1 211 1 78 1 9 1 11 1 
146 1 43 1 44 1 107 1 264 1 
36 1 146 1 43 2 332 1 44 2 183 1 320 1 264 1 
146 1 43 1 44 1 
322 1 43 1 172 1 44 1 211 1 78 1 89 1 9 1 62 1 264 1 
332 1 
36 1 146 1 43 2 332 1 44 2 183 1 30 1 264 1 
199 1 43 5 45 2 44 5 120 1 3 1 5 1 9 1 85 1 172 1 55 1 211 1 89 1 62 1 264 2 322 1 98 1 216 1 28 1 72 3 183 1 220 2 145 4 224 1 146 2 36 2 332 2 78 1 233 1 153 2 287 1 80 2 40 2 
247 1 
322 1 214 1 211 1 78 1 9 2 265 1 
267 1 158 1 241 1 211 1 78 1 140 1 156 1 9 1 106 1 
158 1 322 1 131 1 214 1 211 4 78 4 138 1 92 1 9 5 106 2 113 1 
211 1 78 1 9 1 
322 1 211 3 78 3 106 1 9 3 
211 1 78 1 9 1 
322 1 214 1 211 1 78 1 9 1 265 1 
322 1 158 1 214 1 211 2 78 2 9 2 106 1 
131 1 211 1 78 1 92 1 9 2 106 1 
158 1 211 1 78 1 9 1 106 1 
322 1 214 1 211 1 78 1 9 1 
267 1 241 1 140 1 156 1 
267 1 241 1 140 1 156 1 
82 1 324 1 257 1 17 1 187 1 303 2 90 1 238 1 
211 1 78 1 9 1 115 1 
302 1 74 1 
302 1 74 1 
136 1 285 1 
136 1 285 1 
136 1 285 1 
242 1 302 1 74 1 
242 1 302 1 74 1 
0 1 302 1 74 1 
293 1 136 1 302 2 235 1 285 1 74 2 
242 1 302 1 74 1 
310 1 302 1 74 1 
310 1 302 1 74 1 
310 1 302 1 74 1 
43 1 44 1 296 1 0 1 302 1 4 1 304 1 271 1 219 1 74 1 9 2 108 1 171 1 78 2 211 2 177 1 154 1 316 1 195 1 95 1 319 1 
43 2 296 2 44 2 163 2 270 1 246 1 302 2 122 1 219 2 29 1 74 2 144 1 108 1 332 1 154 3 235 1 196 1 95 2 319 2 
53 1 104 1 273 1 
53 1 104 1 307 1 
53 3 137 1 186 1 32 1 273 2 307 1 
53 2 137 1 250 1 32 1 273 1 307 1 
53 2 137 2 273 1 32 1 307 1 
43 5 117 1 295 1 45 1 44 5 121 3 3 1 4 1 7 1 10 2 206 1 255 2 55 1 18 1 174 1 177 1 212 1 264 4 66 2 97 1 72 2 183 1 145 3 328 1 146 1 36 1 332 2 153 1 155 1 195 1 80 1 40 1 
322 1 239 1 43 2 44 2 306 1 9 1 107 1 36 1 146 1 172 1 332 1 211 1 78 1 89 1 282 1 62 1 264 2 
43 3 45 1 44 3 121 4 7 1 10 1 206 1 255 2 55 1 18 1 174 1 177 1 212 1 264 2 66 2 97 1 72 2 145 3 328 2 36 1 332 3 153 1 155 1 287 1 80 1 40 1 
294 1 43 4 45 1 44 4 121 7 7 2 10 2 206 1 253 1 255 4 55 2 18 1 174 2 177 2 212 1 264 3 66 4 97 2 72 4 145 5 328 3 36 1 332 4 335 1 153 1 155 1 287 1 80 2 40 1 
129 1 247 1 22 1 
218 1 22 1 
217 1 
15 1 340 1 22 1 
147 1 22 1 
15 1 22 1 
129 2 15 1 336 1 340 1 22 3 207 1 
199 1 323 1 119 2 120 1 70 2 1 1 249 1 275 1 309 1 55 1 333 7 281 3 56 4 233 1 234 3 197 1 80 1 
199 1 323 1 119 2 120 1 70 2 1 1 249 1 275 1 309 1 55 1 333 7 281 3 56 4 233 1 234 3 197 1 80 1 
199 1 323 1 119 2 120 1 70 2 1 1 249 1 275 1 309 1 55 1 228 1 333 7 281 3 56 4 233 1 234 3 197 1 80 1 
199 1 81 1 82 1 119 5 120 2 244 1 1 1 303 2 249 2 7 3 309 1 55 4 256 1 56 16 257 1 58 1 174 3 318 1 323 1 97 3 324 1 326 1 101 3 70 3 141 4 31 1 275 2 333 31 281 10 233 2 234 15 197 5 80 4 238 1 
199 1 82 2 119 3 120 1 1 1 124 1 303 4 249 1 309 1 55 1 257 2 56 5 324 2 326 1 70 2 275 1 333 9 281 4 79 1 233 1 234 4 197 1 80 1 238 2 
241 1 161 1 6 1 251 1 205 1 51 2 307 1 14 1 53 2 170 1 261 1 23 1 26 1 99 1 327 1 104 1 186 1 140 1 222 1 221 1 273 1 109 2 37 1 191 1 230 1 338 1 192 1 156 1 237 1 
241 1 84 1 6 1 251 1 205 1 51 3 307 1 14 1 53 2 170 1 261 1 23 2 26 1 99 1 69 1 327 1 104 1 186 1 140 1 222 1 221 1 273 1 109 3 37 1 191 1 230 1 283 1 156 1 237 1 
241 1 251 1 205 1 51 2 307 1 14 1 53 2 170 1 261 1 23 2 69 1 327 1 104 1 186 1 140 1 222 1 221 1 273 1 109 2 37 1 191 1 283 1 156 1 237 1 
241 1 84 1 123 1 251 1 48 1 51 1 128 1 15 1 132 1 133 1 22 1 267 1 26 1 99 1 325 1 327 1 140 1 221 2 222 2 109 1 191 2 156 1 237 2 
26 1 161 1 241 1 99 1 69 1 327 1 104 1 186 1 6 1 251 1 140 1 221 1 222 1 273 1 307 1 51 1 53 2 14 1 170 1 109 1 37 1 230 1 191 1 338 1 156 1 237 1 
24 1 
43 2 241 2 45 1 44 2 297 1 3 1 123 1 305 1 251 1 252 1 9 1 11 1 15 1 175 1 92 1 263 1 212 1 22 1 267 2 325 1 327 1 72 1 183 1 140 2 145 1 146 2 334 1 153 1 157 1 156 2 40 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
146 1 43 2 44 2 183 1 175 1 92 1 305 1 30 1 252 1 263 1 9 1 11 1 290 1 
43 1 45 1 44 1 3 1 175 1 153 1 92 1 305 1 252 1 263 1 9 1 11 1 40 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 44 1 175 1 92 1 305 1 252 1 263 1 9 1 11 1 290 1 
43 1 45 1 44 1 3 1 175 1 153 1 92 1 305 1 252 1 263 1 9 1 11 1 40 1 290 1 
199 1 82 1 119 1 324 1 120 1 70 1 1 1 247 1 187 1 303 2 309 1 333 2 55 1 56 2 281 1 257 1 17 1 233 1 90 1 238 1 
82 1 324 1 101 1 102 1 187 1 303 2 141 1 54 1 333 2 56 1 257 1 90 1 234 1 339 1 238 1 
158 1 82 1 324 1 162 1 299 1 102 1 187 1 303 2 106 1 9 1 333 2 312 1 56 1 78 1 211 1 257 1 234 1 90 1 291 1 238 1 
267 1 158 1 82 1 241 1 324 1 102 1 187 1 303 2 140 1 189 1 106 1 9 1 33 1 12 1 76 1 333 1 312 1 78 1 211 1 257 1 234 1 90 1 156 1 238 1 
267 1 135 1 82 1 324 1 241 1 162 1 187 1 303 2 140 1 333 1 56 1 257 1 38 1 90 1 156 1 238 1 
82 1 303 2 7 1 9 1 55 1 257 1 211 1 56 1 174 1 90 1 322 1 97 1 324 1 214 1 102 1 187 1 277 1 333 2 78 1 234 1 80 1 238 1 
82 1 324 1 187 1 303 2 165 1 7 1 333 1 55 1 257 1 56 1 17 1 90 1 238 1 
97 1 82 1 324 1 187 1 303 2 333 1 257 1 17 1 90 1 234 1 96 1 80 1 238 1 
97 1 82 1 324 1 187 1 303 2 7 1 333 2 55 1 257 1 56 1 17 1 174 1 234 1 90 1 80 1 238 1 
135 1 82 1 324 1 187 1 303 2 165 1 7 1 333 1 55 1 257 1 56 1 90 1 238 1 
97 1 135 1 82 1 324 1 187 1 303 2 333 1 257 1 90 1 234 1 96 1 80 1 238 1 
97 1 135 1 82 1 324 1 187 1 303 2 7 1 333 2 55 1 257 1 56 1 174 1 234 1 90 1 80 1 238 1 
97 1 82 1 324 1 187 1 303 2 7 1 55 1 333 2 257 1 56 1 174 1 234 1 90 1 80 1 238 1 
76 1 267 1 241 1 140 1 156 1 
267 1 241 1 140 1 156 1 35 1 
97 1 82 1 324 1 102 1 187 1 303 2 7 1 333 2 55 1 257 1 56 1 174 1 234 1 90 1 80 1 238 1 
76 1 241 1 192 1 140 1 156 1 33 1 
82 1 160 1 303 2 7 1 9 1 55 1 257 1 211 1 56 1 174 1 90 1 322 1 97 1 324 1 214 1 102 1 187 1 333 2 78 1 234 1 80 1 238 1 
199 1 82 3 119 4 120 1 300 1 1 1 203 1 303 6 7 4 126 1 166 1 52 1 309 1 55 5 257 3 56 20 258 1 174 4 178 1 93 1 318 3 21 2 97 4 68 1 324 3 326 1 101 3 70 1 141 4 272 4 31 1 276 1 331 1 280 1 333 41 281 8 79 1 233 1 234 21 197 4 80 5 116 1 238 3 
199 1 82 4 119 4 120 1 300 1 1 1 203 1 303 8 7 4 126 1 166 1 52 1 309 1 55 5 257 4 56 20 258 1 174 4 178 1 93 1 318 3 21 2 97 3 68 1 324 4 326 2 101 3 70 1 141 4 272 4 31 1 276 1 331 1 280 1 333 38 281 7 79 1 233 1 234 18 197 3 80 4 116 1 238 4 
199 1 82 2 119 7 120 1 300 1 1 1 203 1 303 4 7 7 126 1 166 1 52 1 169 2 309 1 55 8 257 2 56 27 174 7 178 1 93 1 318 2 21 1 97 7 68 1 324 2 326 1 101 4 70 1 141 4 272 4 31 2 331 1 280 1 333 52 281 14 79 1 233 1 234 25 197 7 80 8 116 1 238 2 
82 2 119 3 303 4 7 3 166 1 52 2 55 3 257 2 56 9 258 1 174 3 260 1 178 1 318 1 21 1 97 3 324 2 101 1 141 2 272 2 31 1 331 1 280 1 333 19 281 6 79 1 234 10 197 3 80 3 238 2 
82 3 119 2 300 1 203 1 303 6 7 3 126 1 166 1 52 1 55 3 257 3 56 14 174 3 178 1 318 2 93 1 21 2 97 2 68 1 324 3 326 2 101 2 141 2 272 4 331 1 280 2 333 26 281 4 79 1 234 12 197 2 80 2 116 1 238 3 
296 1 202 1 302 1 122 1 219 1 235 1 74 1 196 1 95 1 319 1 
0 1 316 1 
269 1 311 1 296 1 302 1 219 1 74 1 95 1 319 1 180 1 
242 1 225 1 
293 1 310 1 254 1 
43 1 44 1 296 1 163 1 270 1 246 1 302 1 122 1 219 1 29 1 74 1 108 1 332 1 154 2 235 1 196 1 95 1 319 1 
43 1 44 1 296 1 163 1 270 1 246 1 302 1 122 1 219 1 29 1 74 1 108 1 332 1 154 2 235 1 196 1 95 1 319 1 
43 1 44 1 296 1 163 1 270 1 246 1 302 1 122 1 219 1 29 1 74 1 108 1 332 1 154 2 235 1 196 1 95 1 319 1 
293 1 242 1 225 1 
293 1 242 1 225 1 
310 1 254 1 
293 1 310 1 254 1 
171 1 304 1 
43 1 292 1 296 1 44 1 0 1 163 1 302 1 4 1 304 1 271 1 219 1 29 1 74 1 9 2 171 1 211 2 78 2 177 1 154 1 316 1 195 1 95 1 319 1 264 1 
182 1 248 1 185 1 9 2 
181 1 241 2 69 1 327 1 104 1 186 1 73 1 6 1 251 1 140 2 222 1 273 1 307 1 53 2 14 1 37 1 192 1 156 2 42 1 
241 1 69 1 243 1 327 1 104 1 186 1 73 1 6 1 140 1 251 1 222 1 273 1 307 1 53 2 14 1 37 1 156 1 
267 1 241 1 325 1 327 1 123 1 251 1 140 1 222 1 128 1 15 1 315 1 156 1 22 1 42 1 
181 1 241 1 69 1 327 1 104 1 186 1 73 1 6 1 251 1 140 1 222 1 273 1 307 1 53 2 14 1 37 1 156 1 42 1 
27 1 
36 1 98 1 332 1 72 1 28 1 247 1 145 1 
43 1 25 1 44 1 45 1 83 1 121 1 72 1 183 1 3 1 145 1 328 1 36 1 146 1 332 2 153 1 40 1 114 1 
241 3 3 4 251 4 8 2 7 2 13 1 255 6 15 3 88 2 174 2 176 2 91 1 22 10 267 1 97 2 98 1 268 2 28 1 183 3 34 1 36 2 192 1 40 4 288 1 43 5 45 4 44 5 121 12 50 2 129 2 55 2 313 2 59 2 212 2 66 6 213 2 327 3 72 8 218 3 220 2 140 3 145 9 328 6 146 5 226 2 147 2 332 8 334 1 336 1 337 1 153 4 340 3 156 3 80 2 
43 1 44 1 45 2 298 1 300 1 121 6 3 2 7 2 126 1 255 5 55 2 174 2 176 1 212 1 318 1 93 1 179 1 66 5 97 2 68 1 101 1 72 5 183 1 220 2 141 1 145 8 328 3 146 1 36 2 332 5 334 1 153 2 40 2 80 2 116 1 
322 1 199 1 43 1 44 1 45 1 120 1 72 1 3 1 220 2 9 1 145 2 224 1 172 1 55 1 211 1 78 1 89 1 110 1 233 1 153 1 62 1 80 1 40 1 
98 1 45 1 28 1 72 1 3 1 145 1 36 1 332 1 153 1 40 1 
97 2 72 5 121 10 220 2 7 2 145 5 50 1 328 5 255 5 332 5 55 2 174 2 176 1 80 2 66 5 
36 1 43 1 146 1 332 1 44 1 183 1 
43 3 45 2 241 4 44 3 297 1 3 1 123 1 251 1 13 1 15 1 212 2 94 1 61 1 22 1 267 2 325 1 327 1 72 2 183 2 140 4 145 2 146 4 334 2 337 2 153 2 287 1 157 1 156 4 40 2 
76 1 267 1 322 1 241 1 211 1 78 1 89 1 140 1 142 1 156 1 9 1 
45 1 70 1 121 4 72 2 3 1 145 1 328 2 255 2 36 2 332 4 334 1 153 1 212 1 40 1 66 2 
190 1 296 1 95 1 
190 1 296 1 95 1 
171 1 296 1 122 1 95 1 289 1 
190 1 296 1 95 1 
296 1 259 1 95 1 
296 1 259 1 95 1 
296 1 259 1 95 1 
296 1 95 1 
302 1 74 1 
199 1 82 1 119 2 120 1 300 1 1 1 303 2 309 1 55 1 257 1 56 4 318 1 324 1 101 1 70 1 141 1 333 8 281 2 79 1 233 1 234 4 80 1 238 1 
199 1 82 2 119 2 120 1 300 1 1 1 303 4 7 1 309 1 55 2 257 2 56 6 174 1 318 1 324 2 101 1 70 1 141 2 31 1 333 11 149 1 281 3 79 1 233 1 234 5 197 1 80 1 238 2 
199 1 82 3 119 3 120 1 300 1 1 1 303 6 7 2 126 1 309 1 55 3 257 3 56 9 174 2 318 1 93 1 97 2 68 1 324 3 326 1 101 1 70 1 141 1 333 19 149 1 281 4 79 1 233 1 234 10 197 1 80 3 116 1 238 3 
199 1 82 3 119 3 120 1 300 1 1 1 303 6 7 2 126 1 309 1 55 3 257 3 56 10 174 2 318 1 93 1 97 1 68 1 324 3 326 1 101 1 70 1 141 1 333 17 149 1 281 5 79 1 233 1 234 7 197 2 80 2 238 3 116 1 
199 1 82 1 119 2 120 1 300 1 1 1 303 2 309 1 55 1 257 1 56 4 318 1 324 1 101 1 70 1 141 1 333 8 281 2 79 1 233 1 234 4 80 1 238 1 
82 1 119 1 300 1 303 2 7 2 126 1 55 2 257 1 56 6 174 2 318 1 93 1 97 2 68 1 324 1 101 1 141 1 333 12 281 2 79 1 234 6 197 1 80 2 238 1 116 1 
199 1 82 4 119 3 120 1 300 1 1 1 303 8 7 2 126 1 309 1 55 3 257 4 56 10 174 2 318 1 93 1 97 1 68 1 324 4 326 2 101 1 70 1 141 1 333 18 149 1 281 5 79 1 233 1 234 8 197 2 80 2 116 1 238 4 
82 4 119 3 300 1 303 8 7 3 126 1 55 3 257 4 56 9 258 1 174 3 318 1 93 1 97 2 68 1 324 4 326 2 101 1 141 1 333 16 281 6 79 1 234 7 197 3 80 2 116 1 238 4 
199 1 119 3 120 3 1 1 309 2 333 7 55 1 281 6 56 3 233 3 234 4 197 3 80 1 
199 1 82 4 119 3 120 1 300 1 1 1 303 8 7 2 126 1 309 1 55 3 257 4 56 10 258 1 174 2 318 1 93 1 97 1 68 1 324 4 326 2 101 1 70 1 141 1 333 18 281 4 79 1 233 1 234 8 197 1 80 2 116 1 238 4 
199 1 82 2 119 2 324 2 326 1 120 1 70 1 1 1 303 4 309 1 55 1 333 8 56 4 281 3 257 2 233 1 234 4 197 1 80 1 238 2 
199 1 119 2 120 1 70 1 1 1 247 1 309 1 55 1 333 6 281 2 56 3 233 1 234 3 80 1 
97 1 82 1 119 1 324 1 303 2 7 1 55 1 333 4 281 2 149 1 257 1 56 2 174 1 234 2 197 1 80 1 238 1 
97 1 119 1 55 1 333 7 281 2 56 3 101 1 174 1 234 4 141 2 7 1 31 1 318 1 197 1 80 1 
199 1 82 2 119 5 120 2 1 1 303 4 7 2 169 1 309 1 54 1 55 3 56 11 257 2 174 2 97 2 324 2 326 2 101 2 70 1 141 2 31 1 333 23 281 9 233 2 234 12 112 1 197 4 80 3 238 2 
333 1 234 1 141 1 
333 1 56 1 101 1 
97 1 82 1 324 1 119 2 303 2 7 1 50 1 333 6 55 1 257 1 149 1 56 3 281 3 174 1 234 3 197 1 80 1 238 1 
82 1 119 1 300 1 303 2 7 2 126 1 55 2 257 1 56 6 174 2 318 1 93 1 97 2 68 1 324 1 101 1 141 1 333 12 281 2 79 1 234 6 197 1 80 2 238 1 116 1 
199 1 119 1 120 1 55 1 333 6 56 3 281 2 233 1 234 3 197 1 80 1 
82 1 119 1 324 1 120 1 326 1 1 1 303 2 309 1 333 3 56 1 281 2 257 1 233 1 234 2 112 1 197 1 238 1 
199 1 82 1 324 1 119 3 120 2 303 2 224 1 333 10 55 2 257 1 281 5 56 5 79 1 233 2 234 5 197 2 80 2 238 1 
82 1 324 1 303 2 7 1 55 1 333 2 257 1 56 2 281 1 79 1 197 1 238 1 
97 1 82 1 119 1 324 1 303 2 7 1 55 1 333 4 281 2 257 1 56 2 79 1 174 1 234 2 197 1 80 1 238 1 
82 3 324 3 119 1 326 1 120 1 303 6 333 3 257 3 281 2 56 1 258 1 79 1 233 1 234 2 112 1 197 1 238 3 
199 2 82 5 119 7 120 3 244 1 1 1 303 10 7 3 309 1 256 1 55 5 257 5 56 16 258 1 58 1 174 3 318 1 97 3 324 5 326 2 101 3 70 1 141 4 31 1 333 34 149 1 281 12 79 1 233 3 234 18 112 1 197 5 80 5 238 5 
103 1 9 1 168 1 210 1 131 1 152 1 92 1 
266 1 103 1 223 1 9 1 168 1 210 1 208 1 131 1 152 1 19 1 134 1 92 1 
267 1 15 1 241 1 325 1 327 1 247 1 123 1 251 1 140 1 156 1 22 1 
267 1 118 1 241 1 327 1 140 1 251 1 106 1 9 1 15 1 78 1 211 1 111 1 340 1 156 1 22 1 
118 1 241 1 327 1 140 1 251 1 106 1 9 1 15 1 78 1 211 1 111 1 337 1 340 1 156 1 22 1 
118 1 241 1 327 1 140 1 251 1 106 1 9 1 188 1 15 1 78 1 211 1 337 1 340 1 156 1 22 1 
267 1 43 2 268 1 44 2 241 3 327 1 218 1 251 1 140 3 127 1 75 1 36 1 226 1 147 1 146 1 332 1 15 1 129 1 16 1 337 1 340 1 156 3 22 4 
267 1 43 2 268 1 44 2 241 3 327 1 218 1 251 1 140 3 127 1 36 1 226 1 147 1 146 1 332 1 15 1 129 1 88 1 337 1 340 1 156 3 22 4 
321 1 241 1 327 1 251 1 140 1 156 1 
321 1 267 2 241 7 69 1 301 1 327 2 71 1 125 1 140 6 251 3 77 1 15 2 336 1 20 1 192 1 317 1 60 1 340 1 156 7 236 1 22 3 
211 1 78 1 9 1 106 1 
43 3 45 2 44 3 241 1 3 2 8 1 13 1 129 1 88 1 59 1 264 1 22 2 267 1 98 1 213 1 72 1 28 1 183 1 218 1 140 1 145 1 36 1 146 2 226 1 332 1 153 2 156 1 40 2 
321 1 241 2 327 1 140 2 251 2 129 1 15 1 336 1 192 1 340 1 156 2 288 1 22 2 
267 1 241 4 325 1 327 1 123 1 251 1 140 4 127 1 15 1 262 1 192 1 156 4 22 1 
241 2 301 1 327 1 140 2 251 2 49 1 15 1 151 1 337 1 60 1 340 1 156 2 22 1 341 1 
53 1 14 1 267 1 241 1 327 1 104 1 251 1 140 1 156 1 307 1 
227 1 15 1 241 2 69 1 327 1 192 1 251 1 125 1 140 2 156 2 22 1 
267 1 241 5 325 1 327 2 123 1 140 4 125 1 251 2 77 1 15 2 337 1 262 1 192 1 20 1 156 5 22 3 
267 1 241 5 325 1 100 1 327 2 123 1 140 4 125 1 251 2 15 2 337 1 262 1 192 1 20 1 156 5 22 3 
267 1 118 1 241 1 327 1 140 1 251 1 106 1 9 1 188 1 15 1 78 1 211 1 340 1 156 1 22 1 
241 1 301 1 327 1 140 1 251 2 15 1 336 1 337 1 60 1 340 1 156 1 236 1 22 1 
130 1 46 1 193 1 86 1 
43 1 44 1 130 1 229 1 201 1 46 1 314 1 193 1 264 1 86 1 
182 1 46 1 248 1 185 1 193 1 9 1 86 1 
201 1 314 1 86 1 
247 1 261 1 205 1 
109 1 26 1 99 1 261 1 205 1 51 1 
221 1 51 1 237 1 
26 1 161 1 99 1 143 1 205 1 51 3 109 3 209 1 148 2 261 1 284 1 
109 2 26 1 99 1 57 1 261 1 205 1 51 2 23 1 
26 1 67 1 161 1 99 1 164 1 104 1 273 1 51 1 279 1 53 1 109 1 
109 1 26 1 161 1 99 1 205 1 51 1 
279 1 109 1 26 1 161 1 99 1 261 1 205 1 51 1 
109 2 26 2 161 1 99 2 231 1 194 1 205 1 51 2 278 1 
26 1 67 1 161 1 99 1 47 1 205 1 51 3 167 1 279 1 109 3 150 1 261 1 23 2 
26 1 161 1 200 1 99 1 104 1 186 1 205 1 273 1 307 1 51 2 53 2 109 2 261 1 23 1 
279 1 67 1 109 4 26 2 161 1 99 2 57 1 261 1 205 1 51 4 167 1 23 2 329 1 
109 1 26 1 161 1 99 1 261 1 205 1 51 1 
26 1 67 1 99 1 143 1 205 2 51 4 167 1 279 1 109 4 148 1 261 2 284 1 64 1 23 2 
198 1 159 1 109 2 26 1 161 1 99 1 2 1 261 1 205 1 51 2 23 1 
109 3 26 1 161 1 148 2 99 1 261 1 284 1 143 2 205 1 274 1 51 3 
279 2 87 1 204 2 308 1 
109 1 26 1 161 1 99 1 51 1 65 1 
109 2 26 1 161 1 99 1 150 1 261 1 205 1 51 2 23 1 
286 1 
109 1 26 1 161 1 99 1 261 1 205 1 51 1 
109 3 26 1 161 1 148 1 99 1 150 1 261 1 205 1 51 3 23 1 
279 1 67 1 64 1 167 1 
205 1 

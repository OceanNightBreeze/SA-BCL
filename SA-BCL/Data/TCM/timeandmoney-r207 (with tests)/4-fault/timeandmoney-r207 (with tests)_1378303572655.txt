#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (128,198) 166 (47,178) (47,178) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (128,198) 166 (47,178) (47,178) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (128,198) 166 (47,178) (47,178) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (128,198) 166 (47,178) (47,178) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 99 375 35 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 99 375 35 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 27 1 330 1 270 1 166 1 299 1 47 1 178 1 68 1 198 1 205 1 
20 1 27 1 330 1 270 1 166 1 299 1 47 1 178 1 68 1 198 1 205 1 
20 1 27 1 330 1 270 1 166 1 299 1 47 1 178 1 68 1 198 1 205 1 
20 1 27 1 330 1 270 1 166 1 299 1 47 1 178 1 68 1 198 1 205 1 
235 1 68 4 173 1 99 1 270 1 299 4 49 1 155 1 274 3 330 1 218 2 8 2 114 1 375 1 376 1 27 1 380 1 119 1 88 3 
216 1 235 1 330 1 68 2 95 1 173 1 114 1 345 1 27 1 20 1 99 1 270 1 315 1 299 2 88 1 205 1 
274 1 235 1 330 2 218 1 68 3 173 1 27 1 20 1 270 2 128 1 299 3 119 1 88 2 
274 5 263 1 50 1 330 2 218 3 8 1 159 1 68 7 114 1 375 1 27 1 20 1 99 1 270 2 128 1 380 1 299 7 35 1 119 2 49 1 88 3 
274 5 263 1 50 1 330 2 218 3 8 1 159 1 68 7 114 1 375 1 27 1 20 1 99 1 270 2 128 1 380 1 299 7 35 1 119 2 49 1 88 3 
174 1 135 1 78 1 
275 2 174 1 115 1 
26 2 32 1 31 2 259 2 45 2 138 2 268 2 25 1 
36 1 144 2 285 1 38 1 320 1 288 1 237 1 67 2 94 1 268 2 96 2 344 1 294 2 152 1 45 2 215 1 154 1 364 2 302 1 353 1 367 1 113 1 138 3 25 1 81 1 161 1 257 1 26 3 280 1 162 1 282 1 116 1 32 1 31 2 357 1 259 2 230 1 
26 1 319 1 31 1 259 1 45 1 273 1 324 1 138 1 268 1 25 1 
196 1 250 1 104 1 354 1 78 1 122 1 138 1 291 1 26 1 174 1 19 1 193 1 45 1 273 1 
104 1 354 2 78 1 122 2 268 1 138 1 291 1 26 1 174 1 19 1 193 1 31 1 259 1 45 1 273 1 
150 1 106 1 354 1 122 1 246 1 
225 1 174 1 150 1 106 1 354 2 133 1 78 1 122 2 
106 1 354 1 122 1 
354 1 319 1 122 1 52 1 324 1 268 1 138 1 25 1 26 1 150 1 31 1 259 1 45 1 273 1 
174 1 
225 1 174 1 150 1 106 1 354 2 277 1 78 1 122 2 
249 2 354 5 106 2 252 1 189 1 253 1 78 1 369 2 289 2 122 5 199 1 172 1 225 1 174 1 150 2 191 1 335 1 262 1 204 1 
135 1 32 1 
188 1 138 2 268 1 26 2 31 1 32 2 259 1 45 2 248 1 
140 1 370 1 298 1 
364 1 302 1 353 1 38 1 288 1 367 1 67 1 138 1 96 1 26 1 280 1 162 1 116 1 32 1 357 1 260 1 
302 1 364 1 353 1 38 1 233 1 367 1 288 1 370 1 67 1 268 1 138 2 96 1 80 1 26 2 280 1 162 1 116 1 357 1 259 1 45 1 
26 3 233 1 31 1 32 1 259 3 45 3 138 3 268 3 
26 1 259 1 45 1 273 1 324 1 138 1 268 1 
26 1 188 1 31 1 259 1 45 1 248 1 273 1 138 1 268 1 
36 1 144 1 285 1 38 1 320 1 233 1 288 1 67 1 122 1 94 1 268 3 96 1 291 1 19 1 294 2 362 1 193 1 45 3 215 1 154 1 248 1 273 1 302 1 364 1 353 1 104 1 354 1 367 1 220 1 138 4 80 1 25 1 81 1 257 1 26 4 280 1 162 1 282 1 116 1 32 1 31 2 357 1 259 3 230 1 
26 2 250 1 233 1 32 1 259 1 45 2 138 2 268 1 290 1 
104 1 354 1 233 2 122 1 268 3 138 3 190 1 80 1 291 1 26 3 174 1 19 1 362 1 193 1 31 1 259 3 45 3 248 1 273 1 
233 1 370 1 268 2 138 2 26 2 140 1 31 1 259 2 45 2 248 1 
364 1 302 1 353 1 38 1 288 1 367 1 67 1 138 1 96 1 26 1 162 1 280 1 116 1 32 1 357 1 
364 1 302 1 38 1 288 1 367 1 67 1 9 1 138 1 96 1 26 1 162 1 280 1 32 1 34 1 357 1 
36 2 285 1 144 4 207 1 320 1 149 1 171 1 72 1 294 2 192 1 4 1 152 2 298 2 351 1 328 1 370 2 219 1 112 1 81 1 257 1 200 1 282 1 140 2 230 1 
26 1 175 1 193 1 259 1 45 1 273 1 138 1 268 1 
250 1 233 2 268 4 138 5 290 1 80 1 26 5 43 1 31 1 32 1 259 4 350 1 45 5 248 1 
26 2 175 1 259 2 45 2 273 1 324 1 138 2 268 2 
40 1 108 1 
40 1 108 1 
10 1 5 1 
10 1 5 1 
10 1 5 1 
40 1 108 1 141 1 
40 1 108 1 141 1 
120 1 40 1 108 1 
6 1 40 2 108 2 363 1 10 1 5 1 
40 1 108 1 141 1 
40 1 258 1 108 1 
40 1 258 1 108 1 
40 1 258 1 108 1 
337 1 131 1 89 2 354 2 15 1 108 2 121 1 265 1 122 2 174 1 226 1 40 2 29 2 363 1 229 2 177 3 118 1 261 2 231 2 
120 1 89 1 15 1 122 1 321 1 268 2 292 1 40 1 244 1 177 1 45 2 354 1 108 1 304 1 368 1 7 1 138 2 26 2 281 1 29 1 32 1 259 2 229 1 261 1 
114 1 99 1 380 1 
114 1 99 1 95 1 
114 3 276 1 241 1 158 1 380 2 95 1 
114 2 217 1 241 1 158 1 380 1 95 1 
114 2 241 1 158 2 380 1 95 1 
14 1 143 1 338 2 65 1 209 2 189 3 289 1 122 5 321 1 149 1 171 1 150 4 174 2 4 1 269 1 328 1 275 3 249 1 106 1 354 5 109 1 253 2 368 1 369 1 78 1 199 1 160 1 57 2 225 1 115 1 281 1 85 1 
14 1 359 1 65 3 234 1 209 6 189 8 289 2 122 9 239 1 149 3 171 3 150 7 174 5 4 3 269 2 246 5 328 3 275 9 249 2 156 1 106 6 354 9 109 2 253 6 368 4 78 1 369 2 255 1 371 5 199 1 57 6 225 1 115 3 164 1 204 1 
143 1 338 1 65 1 209 2 189 3 289 1 122 3 149 1 171 1 174 3 150 2 269 1 4 1 328 1 249 1 275 4 354 3 109 1 368 1 253 2 78 1 369 1 160 1 57 2 115 2 204 1 
143 1 338 2 359 1 65 2 209 4 189 5 289 1 122 4 239 1 149 2 171 2 174 4 150 3 269 1 4 2 328 2 275 7 249 1 156 1 354 4 109 1 368 2 253 4 78 1 369 1 160 1 57 4 115 3 204 1 
280 1 135 1 60 1 
256 1 280 1 
346 1 
280 1 367 1 
280 3 243 1 367 1 357 1 60 2 142 1 
280 1 367 1 357 1 
280 1 247 1 
36 3 144 7 208 1 303 1 23 1 210 1 331 2 149 1 361 1 200 2 4 1 356 1 152 4 245 1 351 3 316 1 46 1 
36 3 144 7 208 1 303 1 23 1 210 1 331 2 149 1 361 1 200 2 4 1 356 1 152 4 245 1 351 3 316 1 46 1 
36 3 144 7 208 1 303 1 107 1 23 1 210 1 331 2 149 1 361 1 200 2 4 1 356 1 152 4 245 1 351 3 316 1 46 1 
36 15 285 1 144 31 64 1 65 3 90 1 208 1 339 1 210 2 171 3 149 4 267 1 361 2 294 2 73 3 4 4 245 1 152 16 351 10 46 2 328 3 75 4 303 1 23 2 307 1 372 1 331 3 81 1 257 1 200 5 282 1 356 1 316 5 358 1 
36 6 285 1 144 14 208 2 39 1 210 2 149 3 361 1 294 2 4 3 152 8 351 3 46 2 329 1 303 1 23 1 331 2 81 1 257 1 201 1 200 2 282 1 356 1 316 1 
38 1 235 1 67 1 169 1 68 2 95 1 96 1 173 1 20 1 347 1 3 1 296 1 99 1 270 1 299 2 130 1 274 1 364 1 302 1 276 1 157 1 330 1 114 2 27 1 58 1 186 1 312 1 380 1 203 1 88 1 
38 1 235 1 236 1 67 1 169 1 68 3 95 1 96 1 173 1 20 1 347 1 3 1 296 1 99 1 270 1 299 3 213 1 274 2 276 1 364 1 302 1 157 1 330 1 114 2 58 1 378 1 312 1 380 1 203 1 88 1 
38 1 235 1 67 1 68 2 95 1 96 1 173 1 20 1 347 1 3 1 99 1 299 2 213 1 274 2 364 1 302 1 276 1 157 1 114 2 58 1 378 1 312 1 380 1 203 1 88 1 
302 1 364 1 38 1 136 1 157 2 367 1 236 1 288 1 330 1 67 1 221 1 68 1 96 1 373 1 20 2 280 1 176 1 58 2 117 1 270 1 299 1 203 2 86 1 
276 1 302 1 364 1 38 1 157 1 330 1 67 1 169 1 68 1 95 1 96 1 114 2 347 1 20 1 27 1 3 1 58 1 296 1 378 1 312 1 99 1 270 1 380 1 299 1 203 1 130 1 
170 1 
286 1 38 1 340 2 189 2 288 2 289 1 96 2 291 1 349 1 193 1 45 1 102 2 249 1 302 1 103 1 196 1 250 1 104 1 106 6 354 5 253 2 197 1 54 2 199 1 115 2 11 1 165 2 13 1 67 2 122 5 69 2 174 2 19 1 176 1 269 1 273 1 275 2 364 2 365 1 278 1 367 1 22 1 78 1 369 1 222 2 279 1 223 2 138 1 373 1 82 4 225 3 26 1 280 1 377 1 232 1 
122 3 291 1 19 1 193 1 45 1 273 1 103 1 250 1 196 1 104 1 354 3 106 2 277 1 22 1 138 1 82 2 26 1 225 1 11 1 165 1 13 1 232 1 
122 3 291 1 174 1 19 1 193 1 45 1 273 1 103 1 102 1 250 1 196 1 104 1 106 1 354 3 277 1 22 1 78 1 138 1 82 3 26 1 225 1 11 1 13 1 232 1 
340 1 122 3 291 1 174 1 19 1 193 1 45 1 273 1 103 1 102 1 250 1 196 1 104 1 354 3 106 2 277 1 22 1 78 1 138 1 82 3 225 1 26 1 11 1 165 1 13 1 232 1 
340 4 189 1 289 1 291 1 240 1 97 1 193 1 98 1 45 1 103 1 102 4 249 1 104 1 196 1 250 1 354 5 106 7 253 1 197 1 199 1 54 2 11 1 115 2 202 1 165 4 13 1 318 1 122 5 69 2 174 5 19 1 273 1 277 1 22 1 78 5 369 1 279 1 222 2 223 2 138 1 82 6 26 1 225 3 232 1 
340 2 189 1 289 1 291 1 193 1 45 1 249 1 103 1 102 2 104 1 250 1 196 1 354 4 106 4 253 1 197 1 199 1 54 2 11 1 115 2 165 2 13 1 122 4 69 2 174 2 19 1 273 1 275 2 22 1 369 1 78 1 279 1 222 2 223 2 138 1 82 4 26 1 225 2 377 1 232 1 
318 1 340 2 189 1 289 1 122 4 69 2 291 1 240 1 174 1 19 1 193 1 98 1 45 1 273 1 102 2 103 1 249 1 250 1 196 1 104 1 106 4 354 4 253 1 22 1 78 1 369 1 197 1 222 2 279 1 223 2 54 2 138 1 199 1 82 4 225 2 26 1 115 2 11 1 165 2 13 1 232 1 
318 1 340 2 189 1 289 1 122 4 69 2 291 1 240 1 174 1 19 1 193 1 98 1 45 1 273 1 102 2 103 1 249 1 250 1 196 1 104 1 106 4 354 4 253 1 22 1 78 1 369 1 197 1 222 2 279 1 223 2 54 2 138 1 199 1 82 4 225 2 26 1 115 2 11 1 165 2 13 1 232 1 
340 2 92 2 189 1 289 1 122 4 343 1 291 1 18 1 240 1 174 1 19 1 193 1 45 1 273 1 101 1 102 2 275 2 103 1 249 1 250 1 196 1 104 1 106 4 354 4 253 1 22 1 78 1 369 1 197 1 254 2 223 2 54 2 138 1 199 1 82 4 225 2 26 1 11 1 165 2 13 1 232 1 
318 1 340 3 189 1 289 1 122 4 69 2 291 1 240 1 174 1 19 1 193 1 98 1 45 1 273 1 249 1 103 1 102 3 250 1 196 1 104 1 354 4 106 5 253 1 22 1 78 1 369 1 197 1 222 2 279 1 223 2 54 2 199 1 138 1 82 5 225 2 26 1 115 2 11 1 202 1 165 3 13 1 232 1 
318 1 340 3 189 1 289 1 122 4 69 2 291 1 240 1 174 1 19 1 193 1 98 1 45 1 273 1 249 1 103 1 102 3 250 1 196 1 104 1 354 4 106 5 253 1 22 1 78 1 369 1 197 1 222 2 279 1 223 2 54 2 199 1 138 1 82 5 225 2 26 1 115 2 11 1 202 1 165 3 13 1 232 1 
340 2 189 1 92 2 289 1 291 1 193 1 45 1 101 1 249 1 103 1 102 2 104 1 250 1 196 1 354 4 106 4 253 1 197 1 254 2 199 1 54 2 11 1 165 2 13 1 122 4 174 1 19 1 273 1 275 2 22 1 369 1 78 1 223 2 138 1 82 4 26 1 225 2 377 1 232 1 
36 3 285 1 144 6 207 1 208 1 320 1 210 1 149 1 294 2 4 1 152 3 351 2 298 1 46 1 303 1 135 1 370 1 331 1 81 1 257 1 200 2 140 1 282 1 356 1 32 2 230 1 
36 6 285 2 144 14 64 1 65 2 320 1 94 1 171 1 149 1 151 1 294 4 73 3 4 2 152 8 351 2 298 11 328 2 75 3 370 11 372 1 113 1 81 2 200 1 257 2 355 1 227 1 282 2 140 4 59 1 32 1 33 1 230 2 316 1 
36 1 285 1 144 2 38 1 320 1 233 1 288 1 67 1 94 1 96 1 268 1 294 2 152 1 45 1 302 1 364 1 74 1 353 1 367 1 305 1 113 1 138 2 80 1 81 1 26 2 257 1 280 1 162 1 139 1 140 1 282 1 116 1 32 1 357 1 33 1 259 1 230 1 260 1 
36 10 285 3 144 20 38 2 233 1 145 2 288 1 94 1 149 3 96 3 294 6 4 3 152 10 45 1 298 7 351 8 46 1 154 2 302 2 353 2 105 2 303 1 113 1 309 2 200 4 257 3 310 2 162 2 116 2 356 1 259 1 357 2 316 4 167 1 65 2 208 1 320 3 67 3 123 1 124 1 210 1 171 2 268 1 328 2 364 3 367 2 370 7 331 1 138 3 80 1 81 3 26 3 280 2 282 3 140 7 378 1 32 2 33 1 230 3 
36 1 285 2 144 2 207 1 38 2 233 1 320 2 341 1 288 2 67 8 94 1 211 1 268 1 96 8 126 1 294 4 176 1 152 1 45 1 302 2 364 7 110 1 367 2 113 1 138 1 55 1 81 2 161 2 373 1 26 1 257 2 334 1 186 1 280 3 282 2 378 1 259 1 230 2 317 1 
36 2 285 1 144 3 65 1 320 1 171 1 149 1 268 1 294 2 4 1 152 1 351 1 298 1 327 1 45 1 328 1 248 1 370 1 138 1 81 1 200 1 257 1 26 1 140 1 282 1 31 1 259 1 33 1 230 1 
144 2 285 1 207 1 320 1 370 1 219 1 81 1 257 1 294 2 140 1 282 1 4 1 152 2 351 1 298 1 230 1 316 1 328 1 
36 2 144 2 285 1 207 1 320 1 370 1 112 1 171 1 149 1 81 1 200 1 257 1 294 2 140 1 282 1 351 1 298 1 230 1 
36 2 285 1 144 4 207 1 65 1 320 1 171 1 149 1 294 2 4 1 152 2 298 2 351 2 328 1 370 2 81 1 257 1 200 1 282 1 140 2 230 1 316 1 
144 2 285 1 320 1 370 1 219 1 55 1 81 1 257 1 294 2 140 1 282 1 4 1 152 2 351 1 298 1 230 1 316 1 328 1 
36 2 144 2 285 1 320 1 370 1 112 1 171 1 149 1 55 1 81 1 200 1 257 1 294 2 140 1 282 1 351 1 298 1 230 1 
36 2 285 1 144 4 65 1 320 1 171 1 149 1 294 2 4 1 152 2 298 2 351 2 328 1 370 2 55 1 81 1 257 1 200 1 282 1 140 2 230 1 316 1 
36 2 285 1 144 4 65 1 320 1 370 2 149 1 171 1 81 1 200 1 257 1 294 2 140 2 282 1 4 1 152 2 351 2 298 2 230 1 316 1 328 1 
36 1 144 2 285 1 38 1 320 1 288 1 67 1 94 1 96 1 294 2 152 1 154 1 302 1 364 1 353 1 367 1 113 1 138 1 81 1 26 1 257 1 162 1 280 1 282 1 116 1 32 1 357 1 230 1 
36 1 144 2 285 1 38 1 320 1 288 1 67 1 94 1 96 1 294 2 21 1 152 1 302 1 364 1 367 1 9 1 113 1 138 1 81 1 26 1 257 1 162 1 280 1 282 1 32 1 357 1 34 1 230 1 
36 2 285 1 144 4 65 1 320 1 171 1 149 1 294 2 4 1 152 2 298 2 351 2 328 1 370 2 81 1 257 1 200 1 282 1 140 2 33 1 230 1 316 1 
36 2 144 4 285 1 38 1 65 1 320 1 67 1 149 1 171 1 96 1 294 2 4 1 152 2 351 2 298 2 328 1 154 1 302 1 364 1 353 1 367 1 370 2 138 1 81 1 200 1 26 1 257 1 310 1 162 1 186 1 280 1 140 2 282 1 116 1 357 1 230 1 316 1 
36 1 285 1 144 3 65 1 320 1 149 1 171 1 268 1 294 2 4 1 152 2 351 1 45 1 298 1 328 1 248 1 306 1 370 1 138 1 81 1 257 1 26 1 282 1 140 1 31 1 259 1 33 1 230 1 316 1 
62 1 36 21 285 3 144 41 90 1 64 1 65 4 208 1 287 1 17 1 210 1 342 1 171 4 149 5 2 1 293 1 42 1 294 6 73 3 4 5 152 20 326 2 351 8 272 1 46 1 100 4 328 4 76 1 75 4 303 1 183 1 331 1 372 3 332 1 81 3 200 4 257 3 201 1 282 3 379 1 356 1 316 4 61 1 
62 1 36 18 285 4 144 38 90 2 64 1 65 4 208 1 287 1 17 1 210 1 342 1 171 3 149 4 2 1 293 1 42 1 294 8 73 3 4 5 152 20 326 2 351 7 272 1 46 1 100 4 328 4 76 1 75 4 303 1 183 1 331 1 372 3 332 1 81 4 200 4 257 4 201 1 282 4 379 1 356 1 316 3 61 1 
62 1 36 25 285 2 144 52 90 1 64 2 65 7 208 1 287 1 210 1 342 1 171 7 149 8 2 1 293 1 151 2 42 1 294 4 73 4 4 8 152 27 326 1 351 14 272 1 46 1 100 4 328 7 76 1 75 4 303 1 183 1 331 1 372 2 81 2 200 7 257 2 201 1 282 2 379 1 356 1 316 7 61 1 
36 10 285 2 144 19 64 1 65 3 287 1 171 3 149 3 2 1 42 1 294 4 73 1 4 3 152 9 326 1 351 6 272 2 100 2 328 3 179 1 75 2 372 1 332 1 81 2 200 3 257 2 201 1 282 2 379 1 316 3 
62 1 36 12 285 3 144 26 90 2 65 3 287 1 342 1 149 2 171 2 2 2 42 1 293 1 294 6 73 2 4 3 152 14 351 4 326 2 272 1 100 4 328 3 76 1 75 2 183 1 372 2 81 3 200 2 257 3 201 1 282 3 379 1 316 2 61 1 
63 1 89 1 40 1 108 1 29 1 121 1 265 1 363 1 229 1 261 1 
120 1 244 1 
333 1 89 1 40 1 16 1 108 1 29 1 194 1 229 1 261 1 
337 1 131 1 89 1 15 1 354 1 108 1 121 1 265 1 122 1 174 1 40 1 29 1 363 1 229 1 177 2 118 1 261 1 231 1 
337 1 131 1 89 1 15 1 354 1 108 1 121 1 265 1 122 1 174 1 40 1 29 1 363 1 229 1 177 2 118 1 261 1 231 1 
337 1 131 1 89 1 15 1 354 1 108 1 121 1 265 1 122 1 174 1 40 1 29 1 363 1 229 1 177 2 118 1 261 1 231 1 
37 1 6 1 141 1 
37 1 6 1 141 1 
125 1 258 1 
125 1 6 1 258 1 
304 1 7 1 
120 1 89 1 122 1 321 1 268 2 292 1 150 1 40 1 244 1 177 1 45 2 354 1 108 1 304 1 180 1 368 1 7 1 138 2 26 2 281 1 29 1 32 1 229 1 259 2 118 1 231 1 261 1 
37 1 141 1 
125 1 6 1 258 1 
36 1 285 1 144 2 38 1 320 1 67 2 148 1 94 1 211 1 96 2 294 2 271 1 152 1 45 2 302 1 364 2 110 1 367 1 24 1 53 1 308 1 113 1 138 2 81 1 161 2 26 2 257 1 280 1 282 1 33 1 230 1 
276 1 302 1 364 2 132 1 38 1 157 1 67 2 1 1 95 1 96 2 114 2 347 1 186 1 3 1 378 1 296 1 99 1 380 1 129 1 
276 1 364 1 302 1 38 1 66 1 157 1 67 1 1 1 95 1 96 1 114 2 347 1 3 1 378 1 296 1 99 1 380 1 
302 1 364 1 38 1 157 1 367 1 288 1 67 1 360 1 221 1 96 1 373 1 280 1 176 1 129 1 
276 1 364 1 132 1 302 1 38 1 157 1 67 1 1 1 95 1 96 1 114 2 347 1 3 1 378 1 296 1 99 1 380 1 129 1 
28 1 
174 1 135 1 252 1 189 1 253 1 78 1 335 1 
275 1 249 1 354 1 106 1 189 1 253 1 78 1 369 1 289 1 122 1 222 1 279 1 69 1 199 1 225 1 174 2 115 1 
38 4 189 9 288 1 289 4 93 1 149 2 96 3 291 2 242 2 295 1 243 1 4 2 300 2 247 2 302 3 249 4 105 2 106 5 354 5 251 2 252 1 253 8 199 4 256 3 57 6 115 6 311 2 314 1 357 3 60 2 65 2 264 2 209 6 67 3 122 5 171 2 174 8 269 2 328 2 364 3 275 12 366 2 278 1 367 3 78 2 369 4 225 3 83 2 186 1 280 10 30 1 335 1 336 2 187 1 
62 1 65 2 209 5 189 8 289 2 122 1 342 1 171 2 149 2 174 5 293 1 73 1 269 1 4 2 214 1 328 2 275 6 249 2 251 1 354 1 106 1 366 2 75 1 134 1 278 1 253 5 369 2 78 2 183 1 372 1 199 2 225 1 57 5 115 3 61 1 
318 1 319 1 208 1 189 2 39 1 289 1 122 1 210 1 149 1 324 1 268 1 4 2 45 1 46 1 273 1 249 1 251 1 366 1 354 1 253 2 369 1 52 1 138 1 199 1 25 1 26 1 31 1 259 1 
249 1 252 1 253 1 189 1 369 1 289 1 78 1 199 1 174 1 335 1 
275 10 105 1 251 1 366 2 65 2 209 5 253 5 189 5 171 2 149 2 57 5 115 5 174 5 4 2 328 2 
225 1 174 1 354 1 106 1 78 1 122 1 
286 1 38 1 288 2 189 2 289 2 67 4 122 3 70 1 96 4 176 1 295 1 269 2 302 1 249 2 364 4 365 1 106 4 354 3 278 2 367 1 253 2 369 2 199 1 373 1 225 2 280 1 30 2 87 1 204 1 
36 1 144 1 285 1 38 1 320 1 288 1 67 1 94 1 96 1 268 2 294 2 45 2 215 1 154 1 364 1 302 1 353 1 367 1 138 3 25 1 81 1 257 1 26 3 162 1 280 1 282 1 116 1 32 1 31 2 259 2 357 1 230 1 
275 4 249 1 209 2 278 1 253 2 189 1 369 1 289 1 78 2 331 1 199 1 57 2 115 2 174 4 269 1 
29 1 147 1 261 1 
29 1 147 1 261 1 
304 1 29 1 121 1 111 1 261 1 
29 1 147 1 261 1 
29 1 313 1 261 1 
29 1 313 1 261 1 
29 1 313 1 261 1 
29 1 261 1 
40 1 108 1 
36 4 144 8 285 1 208 1 210 1 149 1 294 2 73 1 4 1 152 4 351 2 46 1 75 1 303 1 331 1 372 1 81 1 257 1 201 1 200 2 282 1 356 1 61 1 
36 5 144 11 285 2 64 1 65 1 208 1 210 1 149 1 212 1 294 4 73 1 4 2 152 6 351 3 46 1 328 1 75 2 303 1 331 1 372 1 81 2 200 2 201 1 257 2 282 2 356 1 316 1 61 1 
36 10 62 1 144 19 285 3 65 2 90 1 208 1 210 1 342 1 171 2 149 3 212 1 293 1 294 6 73 1 4 3 152 9 351 4 46 1 328 2 75 1 303 1 183 1 331 1 372 1 81 3 257 3 201 1 200 3 282 3 356 1 316 1 61 1 
36 7 62 1 144 17 285 3 90 1 65 2 208 1 210 1 171 1 149 2 342 1 212 1 293 1 294 6 73 1 4 3 152 10 351 5 46 1 328 2 75 1 303 1 183 1 331 1 372 1 81 3 257 3 201 1 200 3 282 3 356 1 316 2 61 1 
36 4 144 8 285 1 208 1 210 1 149 1 294 2 73 1 4 1 152 4 351 2 46 1 75 1 303 1 331 1 372 1 81 1 257 1 201 1 200 2 282 1 356 1 61 1 
62 1 36 6 285 1 144 12 65 2 75 1 183 1 372 1 342 1 149 2 171 2 81 1 200 1 201 1 257 1 293 1 294 2 282 1 73 1 4 2 152 6 351 2 316 1 328 2 61 1 
62 1 36 8 144 18 285 4 65 2 90 2 208 1 210 1 342 1 171 1 149 2 212 1 293 1 294 8 73 1 4 3 152 10 351 5 46 1 328 2 75 1 303 1 183 1 331 1 372 1 81 4 257 4 201 1 200 3 282 4 356 1 316 2 61 1 
62 1 36 7 144 16 285 4 65 3 90 2 342 1 171 2 149 2 293 1 294 8 73 1 4 3 152 9 351 6 328 3 75 1 183 1 372 1 81 4 332 1 201 1 257 4 200 3 282 4 316 3 61 1 
36 4 144 7 303 2 208 1 210 3 149 1 200 3 4 1 356 1 152 3 351 6 46 3 316 3 
62 1 36 8 144 18 285 4 65 2 90 2 208 1 210 1 342 1 171 1 149 2 293 1 294 8 73 1 4 3 152 10 351 4 46 1 328 2 75 1 303 1 183 1 331 1 372 1 81 4 332 1 201 1 257 4 200 3 282 4 356 1 316 1 61 1 
36 4 144 8 285 2 90 1 208 1 303 1 210 1 331 1 149 1 81 2 200 2 257 2 294 4 282 2 4 1 356 1 152 4 351 3 316 1 46 1 
36 3 144 6 200 2 208 1 303 1 135 1 4 1 356 1 152 3 351 2 210 1 46 1 331 1 149 1 
36 2 285 1 144 4 65 1 149 1 171 1 81 1 200 1 212 1 257 1 294 2 282 1 4 1 152 2 351 2 316 1 328 1 
36 4 144 7 75 2 64 1 65 1 372 1 149 1 171 1 200 1 73 1 4 1 152 3 351 2 316 1 328 1 
36 12 144 23 285 2 65 2 64 1 90 2 208 1 210 2 171 2 149 3 151 1 294 4 73 2 4 3 152 11 351 9 46 2 328 2 75 2 303 1 331 1 224 1 81 2 200 5 257 2 227 1 282 2 356 1 316 4 
36 1 144 1 75 1 
144 1 73 1 152 1 
36 3 285 1 144 6 105 1 65 1 171 1 149 1 81 1 257 1 212 1 200 2 294 2 282 1 4 1 152 3 351 3 316 1 328 1 
62 1 36 6 285 1 144 12 65 2 75 1 183 1 372 1 342 1 149 2 171 2 81 1 200 1 201 1 257 1 293 1 294 2 282 1 73 1 4 2 152 6 351 2 316 1 328 2 61 1 
36 3 144 6 208 1 210 1 149 1 200 1 4 1 152 3 351 2 46 1 316 1 
36 2 144 3 285 1 90 1 303 1 210 1 224 1 81 1 200 1 257 1 294 2 282 1 356 1 152 1 351 2 316 1 46 1 
36 4 144 8 208 1 39 1 210 1 149 2 200 1 4 2 152 4 351 2 46 1 316 1 
285 1 144 2 81 1 201 1 257 1 294 2 282 1 4 1 152 2 351 1 316 1 328 1 
36 2 285 1 144 4 65 1 149 1 171 1 81 1 200 1 201 1 257 1 294 2 282 1 4 1 152 2 351 2 316 1 328 1 
36 2 144 3 285 3 90 1 210 1 224 1 332 1 81 3 201 1 257 3 200 1 294 6 282 3 152 1 351 2 46 1 316 1 
36 18 285 5 144 34 90 2 64 1 65 3 208 2 339 1 210 3 171 3 149 5 212 1 294 10 73 3 4 5 152 16 351 12 46 3 328 3 75 4 303 1 307 1 331 1 372 1 224 1 332 1 81 5 257 5 201 1 200 7 282 5 356 1 316 5 358 1 
26 1 250 1 77 1 32 1 45 1 138 1 290 1 
250 1 77 1 323 1 138 1 290 1 56 1 26 1 41 1 127 1 12 1 32 1 45 1 
373 1 302 1 364 1 38 1 280 1 176 1 135 1 367 1 288 1 67 1 96 1 
364 1 302 1 38 1 233 1 367 1 288 1 67 1 268 1 138 2 96 1 26 2 280 1 162 1 116 1 32 1 357 1 259 1 45 1 
364 1 302 1 104 1 38 1 233 1 367 2 67 1 268 2 138 2 96 1 26 2 280 3 162 1 193 1 30 1 116 1 32 1 357 2 259 1 336 1 45 2 247 1 273 1 
364 2 302 1 104 1 38 1 233 1 367 2 67 2 9 1 268 2 138 2 96 2 185 1 26 2 280 3 162 1 193 1 30 1 32 1 357 2 259 1 336 1 45 2 247 1 273 1 
206 1 364 3 302 1 38 1 354 2 106 1 288 1 367 1 78 1 67 3 122 2 96 3 185 1 291 1 256 1 174 1 280 4 284 1 30 1 357 1 336 1 247 1 60 1 
364 3 302 1 38 1 354 2 106 1 264 1 288 1 367 1 78 1 67 3 122 2 96 3 185 1 291 1 256 1 174 1 280 4 30 1 357 1 336 1 247 1 60 1 
302 1 364 1 126 1 38 1 67 1 96 1 
364 6 302 2 38 3 110 1 341 1 288 2 367 2 67 7 96 7 161 1 126 1 334 1 325 1 186 1 280 3 378 1 84 1 243 1 357 1 381 1 317 1 
36 3 285 2 144 6 38 1 145 1 233 1 148 1 149 1 96 1 294 4 4 1 152 3 45 1 351 2 298 1 46 1 154 1 302 1 353 1 303 1 257 2 200 2 310 1 162 1 116 1 356 1 259 1 357 1 208 1 320 2 67 1 210 1 268 1 364 1 367 1 370 1 331 1 138 2 81 2 26 2 186 1 280 1 140 1 282 2 32 2 33 1 230 2 
264 1 189 1 288 1 67 1 289 2 122 3 96 1 291 1 174 1 150 1 242 1 295 1 300 1 364 1 249 2 354 3 106 2 252 1 253 1 78 1 369 2 199 2 256 1 225 1 280 2 311 1 335 1 60 1 
364 2 302 1 38 2 367 1 67 2 96 2 126 1 186 1 280 2 243 1 357 1 60 1 187 1 
373 1 302 1 364 4 38 1 280 1 176 1 186 1 367 1 288 1 67 4 79 1 96 4 185 1 
364 2 302 1 38 2 367 1 67 2 124 1 184 1 96 2 374 1 325 1 280 1 30 1 357 1 381 1 
114 1 302 1 364 1 38 1 3 1 288 1 99 1 67 1 95 1 96 1 
364 2 302 1 38 1 110 1 367 1 67 2 96 2 186 1 280 1 378 1 271 1 
364 4 302 2 38 2 110 1 288 1 367 2 341 1 67 5 79 1 96 5 373 1 334 1 176 1 186 1 280 3 30 1 
364 4 302 2 38 2 110 1 288 1 367 2 341 1 67 5 79 1 96 5 266 1 373 1 176 1 186 1 280 3 30 1 
364 1 302 1 38 1 233 1 367 1 288 1 67 1 9 1 268 1 138 2 96 1 26 2 280 1 162 1 32 1 357 1 259 1 45 1 
364 1 302 1 38 2 367 1 67 1 96 1 325 1 280 1 30 1 84 1 243 1 357 1 381 1 
146 1 32 1 181 1 195 1 48 1 
168 1 104 1 354 2 146 1 78 1 122 2 181 2 71 1 291 1 174 1 150 1 19 1 348 1 193 1 362 1 32 1 195 2 48 2 273 1 
146 1 24 1 53 1 308 1 138 1 26 1 45 1 195 1 48 1 
168 1 146 1 71 1 
173 1 135 1 235 1 88 1 
173 1 235 1 330 1 270 1 299 1 68 1 88 1 
20 1 299 1 203 1 
352 1 235 1 330 1 51 1 68 3 173 1 27 1 44 1 270 1 315 2 299 3 88 1 
274 1 235 1 330 1 8 1 68 2 173 1 376 1 270 1 299 2 88 1 
330 1 218 1 68 1 114 1 27 1 99 1 270 1 380 1 299 1 49 1 88 1 
173 1 27 1 330 1 270 1 299 1 68 1 88 1 
173 2 27 1 235 1 330 1 270 1 299 1 68 1 
330 2 137 1 68 2 173 1 27 1 283 1 270 2 299 2 301 1 88 1 
274 2 263 1 50 1 235 1 330 1 218 1 68 3 173 1 27 1 270 1 299 3 119 1 88 2 
274 1 276 1 235 1 330 1 182 1 68 2 95 1 173 1 114 2 27 1 99 1 270 1 380 1 299 2 88 1 
274 2 235 1 330 1 218 1 8 1 68 3 173 1 376 1 27 1 270 1 299 3 119 1 155 1 88 2 
173 1 27 1 235 1 330 1 270 1 299 1 68 1 88 1 
352 1 274 2 235 2 330 1 218 1 51 1 68 4 173 2 376 1 270 1 315 1 299 4 119 1 88 3 
274 1 235 1 330 1 159 1 68 2 322 1 173 1 27 1 163 1 270 1 299 2 88 1 
352 1 91 1 235 1 330 1 51 2 68 3 173 1 27 1 270 1 315 2 299 3 88 1 
228 1 0 1 153 2 88 2 
27 1 238 1 330 1 270 1 299 1 68 1 
173 1 274 1 50 1 27 1 235 1 330 1 270 1 299 2 68 2 88 1 
297 1 
173 1 27 1 235 1 330 1 270 1 299 1 68 1 88 1 
274 1 50 1 235 1 330 1 68 3 173 1 27 1 270 1 315 1 299 3 88 1 
376 1 218 1 119 1 88 1 
173 1 88 1 

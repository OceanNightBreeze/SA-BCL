#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 118 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
185 1 327 1 266 1 168 3 209 2 186 1 99 1 101 1 233 2 302 9 304 1 274 1 129 2 334 1 368 2 366 4 173 1 236 2 339 2 135 1 372 2 261 1 25 9 164 6 163 1 349 1 27 5 294 1 
185 1 327 1 266 1 168 3 209 2 186 1 99 1 101 1 233 2 302 9 304 1 274 1 129 2 334 1 368 2 366 4 173 1 236 2 339 2 372 2 135 1 261 1 25 9 164 6 163 1 349 1 27 5 294 1 
185 1 327 1 266 1 168 4 209 2 186 1 99 1 101 1 233 2 302 10 304 1 274 1 129 2 334 1 368 2 366 5 173 1 236 2 339 2 372 2 135 1 261 1 25 10 164 7 163 1 349 1 27 6 294 1 
185 1 327 1 266 1 168 2 209 2 186 1 101 1 233 1 302 7 304 1 274 1 129 2 334 1 368 2 366 3 173 1 236 2 339 2 372 2 135 1 261 1 25 7 164 4 163 1 349 1 27 4 294 1 
266 1 168 1 236 1 186 1 99 1 339 1 233 2 372 1 302 4 25 4 274 1 129 1 164 3 349 1 27 3 368 1 366 2 173 1 
16 1 266 1 209 1 236 1 186 1 281 1 339 1 302 2 261 1 25 2 304 1 129 1 40 1 27 1 368 1 173 1 
266 1 168 1 209 1 186 1 302 3 25 3 129 2 334 1 164 1 27 2 368 2 366 1 173 1 
266 1 168 3 209 1 122 1 186 1 99 1 233 2 302 9 274 1 334 1 129 2 366 4 368 2 173 1 236 1 339 1 372 1 25 9 164 7 163 1 349 1 27 5 294 1 323 1 
266 1 168 3 209 1 122 1 186 1 99 1 233 2 302 9 274 1 334 1 129 2 366 4 368 2 173 1 236 1 339 1 372 1 25 9 164 7 163 1 349 1 27 5 294 1 323 1 
118 1 75 1 189 1 
75 1 22 1 37 2 
18 2 237 2 172 2 141 2 354 2 252 2 276 1 31 1 
120 1 35 1 36 2 354 2 270 1 252 2 148 1 80 1 172 3 333 1 192 1 104 1 276 1 220 1 18 3 20 1 237 2 338 1 371 2 341 1 161 1 241 1 86 1 286 1 226 1 162 2 242 1 68 1 141 2 115 1 375 1 48 1 292 1 293 1 90 2 31 1 165 2 
113 1 18 1 237 1 172 1 141 1 361 1 89 1 354 1 252 1 276 1 
93 1 95 1 18 1 299 1 340 1 75 1 189 1 65 1 252 1 301 1 113 1 172 1 306 1 377 1 
95 2 93 2 18 1 299 1 237 1 75 1 189 1 354 1 252 1 301 1 113 1 141 1 172 1 306 1 377 1 
95 1 93 1 132 1 376 1 21 1 
79 1 95 2 93 2 255 1 132 1 376 1 75 1 189 1 
95 1 93 1 376 1 
93 1 95 1 17 1 18 1 132 1 237 1 354 1 252 1 113 1 361 1 141 1 172 1 89 1 276 1 
75 1 
95 2 93 2 255 1 256 1 132 1 376 1 75 1 189 1 
93 5 95 5 278 1 132 2 97 1 187 1 352 1 280 2 75 1 189 1 211 2 316 1 6 1 38 1 225 1 138 2 255 1 376 2 324 1 
118 1 31 1 
18 2 229 1 237 1 354 1 252 2 172 2 141 1 49 1 31 2 
131 1 105 1 250 1 
18 1 300 1 338 1 35 1 371 1 241 1 286 1 162 1 68 1 172 1 333 1 192 1 375 1 293 1 90 1 31 1 
18 2 131 1 268 1 237 1 35 1 338 1 371 1 315 1 252 1 241 1 286 1 162 1 68 1 192 1 333 1 141 1 172 2 375 1 293 1 90 1 
18 3 268 1 237 3 172 3 141 3 354 1 252 3 31 1 
113 1 18 1 237 1 172 1 141 1 89 1 252 1 
113 1 18 1 229 1 237 1 172 1 141 1 354 1 49 1 252 1 
93 1 95 1 120 1 229 1 299 1 268 1 35 1 36 2 354 2 270 1 252 3 301 1 148 1 80 1 192 1 333 1 172 4 306 1 104 1 362 1 276 1 220 1 18 4 20 1 237 3 338 1 371 1 341 1 315 1 241 1 286 1 162 1 113 1 68 1 141 3 375 1 88 1 48 1 292 1 293 1 90 1 31 1 165 1 377 1 
18 2 156 1 237 1 268 1 172 2 141 1 340 1 252 2 31 1 
95 1 93 1 229 1 18 3 299 1 268 2 237 3 75 1 354 1 315 1 252 3 301 1 113 1 58 1 141 3 172 3 306 1 362 1 377 1 
229 1 18 2 131 1 268 1 237 2 354 1 250 1 252 2 141 2 172 2 
18 1 338 1 35 1 371 1 241 1 286 1 162 1 68 1 172 1 333 1 192 1 375 1 90 1 293 1 31 1 
18 1 35 1 371 1 241 1 111 1 286 1 162 1 235 1 68 1 172 1 192 1 375 1 90 1 293 1 31 1 
92 1 120 1 296 1 311 1 131 1 20 2 64 1 36 2 341 1 250 1 270 1 148 1 80 1 217 1 275 1 105 1 292 1 117 1 165 2 
113 1 254 1 18 1 237 1 306 1 172 1 141 1 252 1 
18 5 229 1 156 1 268 2 237 4 340 1 354 1 315 1 252 5 141 4 172 5 41 1 378 1 31 1 
113 1 254 1 18 2 237 2 172 2 141 2 89 1 252 2 
320 1 12 1 
320 1 12 1 
350 1 0 1 
350 1 0 1 
350 1 0 1 
320 1 12 1 160 1 
320 1 12 1 87 1 
350 1 248 1 0 1 320 2 12 2 107 1 
320 1 12 1 160 1 
320 1 12 1 160 1 
139 1 320 1 12 1 
139 1 320 1 12 1 
139 1 320 1 12 1 
195 1 93 2 95 2 154 1 157 2 98 1 199 1 75 1 54 3 66 2 213 1 319 1 320 2 149 2 12 2 91 1 130 2 107 1 144 2 
95 1 93 1 52 1 54 1 252 2 149 1 12 1 172 2 218 1 130 1 151 1 18 2 157 1 237 2 318 1 320 1 140 1 289 1 141 2 87 1 263 1 91 1 31 1 144 1 
236 1 339 1 372 1 
236 1 281 1 339 1 
171 1 236 3 281 1 134 1 219 1 372 2 
358 1 236 2 281 1 134 1 219 1 372 1 
236 2 281 1 134 2 219 1 372 1 
119 1 95 5 93 5 296 1 208 1 265 1 32 2 187 3 52 1 74 2 211 1 189 1 75 2 147 2 37 3 38 2 255 1 369 1 337 1 311 1 132 4 280 1 22 1 239 1 225 1 136 1 318 1 138 1 289 1 376 1 247 1 295 1 
95 2 93 2 189 1 75 1 354 1 252 1 361 1 172 1 276 1 309 1 17 1 18 1 132 2 237 1 21 1 238 1 259 1 113 1 141 1 376 1 89 1 
119 1 95 3 93 3 296 1 208 1 32 1 97 1 187 3 74 2 189 1 75 3 211 1 147 2 38 2 37 4 369 1 337 1 311 1 132 2 280 1 22 2 239 1 136 1 318 1 138 1 295 1 
119 2 95 4 93 4 296 2 208 2 32 2 97 1 187 5 74 4 189 1 75 4 211 1 147 4 37 7 38 4 369 1 337 1 311 2 132 3 280 1 22 3 239 2 345 1 136 1 318 2 138 1 180 1 28 1 295 1 
118 1 203 1 293 1 
204 1 293 1 
357 1 
293 1 241 1 
203 2 176 1 35 1 5 1 293 3 241 1 
35 1 293 1 241 1 
33 1 293 1 
119 1 92 2 42 1 296 1 370 1 20 3 73 1 251 1 8 1 102 1 125 2 360 1 346 1 115 4 116 1 117 3 165 7 
119 1 92 2 42 1 296 1 370 1 20 3 73 1 251 1 8 1 102 1 125 2 360 1 346 1 115 4 116 1 117 3 165 7 
119 1 92 2 42 1 296 1 370 1 121 1 20 3 73 1 251 1 8 1 102 1 125 2 360 1 346 1 115 4 116 1 117 3 165 7 
119 4 92 5 120 1 296 4 208 3 298 1 73 1 231 1 269 1 36 2 329 4 270 1 251 2 102 1 8 1 125 3 80 1 332 3 360 2 193 1 42 2 370 5 311 3 20 15 198 1 341 1 258 1 159 1 239 3 346 2 115 16 116 1 165 31 117 10 
119 1 92 3 296 1 120 2 231 1 73 1 3 1 36 4 270 2 251 1 102 1 125 2 80 2 360 1 365 1 42 1 370 1 20 4 341 2 115 5 346 1 116 1 165 9 117 4 
266 1 209 1 51 1 186 1 302 2 171 1 305 1 129 1 192 1 81 1 368 1 173 1 175 1 236 2 281 1 339 1 371 1 67 1 372 1 317 1 162 1 25 2 179 1 288 1 291 1 164 1 375 1 322 1 27 1 90 1 
266 1 209 1 51 1 77 1 302 3 356 1 171 1 305 1 129 1 192 1 368 1 173 1 175 1 236 2 281 1 339 1 371 1 67 1 372 1 284 1 317 1 162 1 25 3 179 1 288 1 164 2 375 1 322 1 27 1 90 1 
266 1 209 1 51 1 302 2 356 1 171 1 192 1 173 1 175 1 236 2 281 1 339 1 371 1 67 1 284 1 372 1 162 1 25 2 179 1 288 1 164 2 375 1 322 1 27 1 90 1 
326 1 209 2 51 2 77 1 302 1 11 1 192 1 129 1 368 1 108 1 60 1 175 2 222 1 257 1 371 1 67 2 241 1 162 1 25 1 68 1 375 1 90 1 293 1 
209 1 51 1 186 1 302 1 171 1 305 1 129 1 192 1 81 1 368 1 175 1 236 2 281 1 339 1 371 1 67 1 372 1 284 1 317 1 162 1 25 1 179 1 288 1 375 1 322 1 90 1 
45 1 
93 5 95 5 230 1 187 2 189 1 146 1 234 4 57 2 192 1 277 2 337 1 18 1 280 1 340 1 22 2 65 1 200 1 283 1 241 1 162 2 113 1 205 1 68 2 245 1 26 2 293 1 166 1 72 1 351 2 299 1 75 2 211 1 37 2 38 2 252 1 301 1 303 2 212 1 255 3 172 1 306 1 364 1 222 1 257 1 314 2 371 2 225 1 138 1 374 2 376 6 375 1 264 1 90 2 184 1 377 1 
95 3 93 3 230 1 299 1 252 1 301 1 212 1 234 2 255 1 256 1 172 1 306 1 18 1 340 1 65 1 283 1 113 1 245 1 374 1 376 2 264 1 377 1 
95 3 93 3 230 1 351 1 299 1 189 1 75 1 252 1 301 1 212 1 234 3 255 1 256 1 172 1 306 1 18 1 340 1 65 1 283 1 113 1 245 1 376 1 264 1 377 1 
95 3 93 3 230 1 351 1 299 1 189 1 75 1 252 1 301 1 212 1 234 3 255 1 256 1 172 1 306 1 18 1 340 1 65 1 283 1 113 1 245 1 26 1 374 1 376 2 264 1 377 1 
95 5 93 5 351 4 230 1 299 1 187 1 211 1 75 5 189 5 146 1 38 1 252 1 301 1 303 2 272 1 212 1 234 6 57 2 56 1 255 3 256 1 14 1 172 1 306 1 367 1 277 2 18 1 280 1 340 1 314 2 22 2 65 1 283 1 225 1 113 1 138 1 245 1 26 4 374 4 376 7 264 1 184 1 143 1 377 1 
93 4 95 4 230 1 187 1 189 1 146 1 234 4 57 2 277 2 18 1 280 1 340 1 65 1 22 2 283 1 113 1 245 1 26 2 351 2 72 1 299 1 211 1 75 2 301 1 252 1 38 1 37 2 212 1 303 2 255 2 306 1 172 1 314 2 225 1 138 1 374 2 376 4 264 1 184 1 377 1 
95 4 93 4 351 2 230 1 299 1 187 1 75 1 189 1 211 1 146 1 38 1 252 1 301 1 303 2 272 1 212 1 234 4 57 2 56 1 255 2 172 1 306 1 14 1 277 2 18 1 280 1 340 1 314 2 22 2 65 1 283 1 225 1 113 1 138 1 245 1 374 2 26 2 376 4 264 1 184 1 377 1 
95 4 93 4 351 2 230 1 299 1 187 1 75 1 189 1 211 1 146 1 38 1 252 1 301 1 303 2 272 1 212 1 234 4 57 2 56 1 255 2 172 1 306 1 14 1 277 2 18 1 280 1 340 1 314 2 22 2 65 1 283 1 225 1 113 1 138 1 245 1 374 2 26 2 376 4 264 1 184 1 377 1 
207 1 95 4 93 4 351 2 230 1 299 1 187 1 53 2 75 1 189 1 211 1 146 1 37 2 38 1 252 1 301 1 303 2 272 1 212 1 273 2 234 4 124 1 255 2 172 1 306 1 277 2 18 1 280 1 340 1 65 1 283 1 225 1 113 1 138 1 245 1 374 2 26 2 376 4 347 1 264 1 377 1 
95 4 93 4 230 1 351 3 299 1 187 1 75 1 189 1 211 1 146 1 38 1 252 1 301 1 303 2 272 1 212 1 234 5 57 2 56 1 255 2 172 1 306 1 14 1 367 1 277 2 18 1 280 1 340 1 314 2 22 2 65 1 283 1 225 1 113 1 138 1 245 1 26 3 374 3 376 5 264 1 184 1 377 1 
95 4 93 4 230 1 351 3 299 1 187 1 75 1 189 1 211 1 146 1 38 1 252 1 301 1 303 2 272 1 212 1 234 5 57 2 56 1 255 2 172 1 306 1 14 1 367 1 277 2 18 1 280 1 340 1 314 2 22 2 65 1 283 1 225 1 113 1 138 1 245 1 26 3 374 3 376 5 264 1 184 1 377 1 
93 4 95 4 230 1 187 1 53 2 189 1 146 1 273 2 234 4 277 2 18 1 280 1 340 1 65 1 283 1 113 1 245 1 26 2 347 1 351 2 72 1 299 1 211 1 75 1 301 1 252 1 38 1 37 2 212 1 303 2 255 2 306 1 172 1 225 1 138 1 374 2 376 4 264 1 377 1 
118 1 119 1 92 2 120 1 296 1 73 1 36 2 250 1 270 1 102 1 148 1 125 1 80 1 275 1 105 1 42 1 131 1 20 3 341 1 346 1 115 3 116 1 292 1 117 2 165 6 31 2 
119 3 296 1 120 2 208 3 123 1 269 1 329 4 36 4 270 2 250 3 78 1 148 1 214 1 80 2 332 3 105 13 194 1 370 2 311 1 20 7 155 1 131 13 341 2 258 2 239 3 242 1 115 10 48 1 292 2 31 1 165 17 117 2 
120 1 268 1 35 1 300 1 36 2 250 1 270 1 252 1 148 1 214 1 80 1 192 1 333 1 172 2 18 2 20 1 237 1 338 1 371 1 315 1 341 1 241 1 286 1 201 1 162 1 242 1 262 1 68 1 141 1 375 1 115 1 293 1 90 1 292 1 48 1 31 1 30 1 165 2 
268 1 188 1 270 2 148 2 13 1 333 1 192 1 105 2 18 2 20 2 237 1 338 1 341 2 239 1 241 1 286 1 162 1 68 1 115 3 292 2 293 1 165 5 117 2 119 1 120 2 208 1 210 1 35 1 36 4 250 2 252 1 214 1 80 2 172 2 220 1 370 2 131 2 371 1 315 1 260 1 227 1 141 1 375 1 48 1 90 1 
120 2 268 1 36 4 270 2 252 1 76 1 55 1 148 2 80 2 172 1 192 2 275 1 82 1 197 1 18 1 20 1 223 1 222 1 237 1 257 1 371 8 341 2 284 1 241 2 86 2 162 8 242 1 68 2 291 1 141 1 375 2 115 1 142 1 293 3 90 7 292 2 48 1 325 1 165 2 
119 1 92 1 1 1 120 1 296 1 229 1 208 1 354 1 36 2 250 1 270 1 252 1 148 1 214 1 80 1 172 1 105 1 18 1 311 1 131 1 20 2 237 1 341 1 239 1 141 1 115 1 292 1 117 1 165 3 
119 1 167 1 370 1 120 1 131 1 36 2 341 1 250 1 270 1 239 1 148 1 80 1 115 2 275 1 105 1 292 1 117 1 165 2 
92 1 120 1 296 1 311 1 131 1 20 2 64 1 36 2 341 1 250 1 270 1 148 1 80 1 275 1 105 1 292 1 117 1 165 2 
119 1 92 1 120 1 296 1 208 1 36 2 270 1 250 2 148 1 80 1 275 1 105 2 370 1 311 1 131 2 20 2 341 1 239 1 115 2 292 1 165 4 117 2 
119 1 167 1 370 1 120 1 131 1 36 2 341 1 250 1 270 1 239 1 55 1 148 1 80 1 115 2 105 1 292 1 117 1 165 2 
92 1 120 1 296 1 311 1 131 1 20 2 64 1 36 2 341 1 250 1 270 1 55 1 148 1 80 1 105 1 292 1 117 1 165 2 
119 1 370 1 120 1 208 1 131 1 36 2 341 1 250 1 270 1 239 1 55 1 148 1 80 1 115 2 105 1 292 1 117 1 165 2 
119 1 370 1 120 1 208 1 131 1 36 2 341 1 250 1 270 1 239 1 148 1 80 1 115 2 105 1 292 1 117 1 165 2 
120 1 35 1 36 2 270 1 148 1 80 1 192 1 333 1 172 1 220 1 18 1 20 1 338 1 371 1 341 1 241 1 286 1 162 1 242 1 68 1 115 1 375 1 90 1 293 1 292 1 48 1 31 1 165 2 
120 1 35 1 36 2 270 1 148 1 235 1 80 1 192 1 172 1 18 1 20 1 371 1 341 1 241 1 286 1 111 1 162 1 242 1 68 1 115 1 375 1 348 1 90 1 293 1 292 1 48 1 31 1 165 2 
119 1 370 1 120 1 208 1 131 1 36 2 341 1 250 1 270 1 239 1 148 1 214 1 80 1 115 2 105 1 292 1 117 1 165 2 
119 1 120 1 208 1 35 1 210 1 36 2 250 1 270 1 148 1 80 1 192 1 333 1 172 1 105 1 220 1 370 1 18 1 131 1 338 1 371 1 341 1 239 1 241 1 286 1 162 1 291 1 115 2 375 1 90 1 293 1 292 1 117 1 165 2 
119 1 120 1 229 1 208 1 354 1 36 2 270 1 250 1 252 1 148 1 214 1 80 1 172 1 105 1 370 1 18 1 131 1 237 1 341 1 239 1 24 1 141 1 115 2 292 1 117 1 165 2 
119 3 92 3 120 2 296 3 208 3 50 1 328 1 269 1 329 2 36 4 270 2 103 2 80 2 332 1 308 1 365 1 370 3 311 3 20 10 341 2 258 1 239 3 285 1 137 1 244 2 115 9 246 1 206 1 165 19 117 6 
119 3 92 2 296 2 120 3 208 3 297 1 231 2 50 1 328 2 269 2 36 6 329 2 270 3 9 1 103 1 331 1 80 3 332 2 365 1 370 2 311 2 20 12 63 1 341 3 239 3 285 2 344 1 137 1 244 4 290 1 115 14 246 1 117 4 165 26 
92 4 231 1 50 1 328 1 269 3 329 4 270 3 102 1 9 1 103 1 331 1 332 3 20 21 63 1 341 3 239 4 285 2 344 1 112 1 244 4 290 1 115 20 346 1 246 1 116 1 206 1 117 8 165 41 119 5 296 5 120 3 208 4 297 1 73 1 36 6 125 1 80 3 365 1 42 1 370 4 311 4 258 1 137 1 
119 5 92 4 120 4 296 4 208 4 297 1 73 1 231 2 50 1 328 1 269 3 329 4 36 8 270 4 102 1 9 1 103 1 125 1 331 1 80 4 332 3 365 1 42 1 370 3 311 3 20 18 63 1 341 4 258 1 239 4 285 2 344 1 112 1 137 1 290 1 244 4 346 1 115 20 116 1 246 1 206 1 165 38 117 7 
119 8 92 7 120 2 296 8 208 7 297 1 73 1 231 1 50 1 328 1 269 2 329 4 36 4 270 2 102 1 9 1 78 2 103 1 125 1 331 1 80 2 332 4 365 1 42 1 370 7 311 7 20 25 63 1 341 2 258 2 239 7 285 1 344 1 137 1 290 1 244 4 346 1 115 27 116 1 246 1 165 52 117 14 
61 1 319 1 149 1 320 1 157 1 12 1 98 1 130 1 107 1 144 1 
87 1 263 1 
373 1 149 1 320 1 267 1 157 1 12 1 363 1 130 1 144 1 
195 1 93 1 95 1 154 1 157 1 98 1 75 1 54 2 66 1 213 1 319 1 320 1 149 1 12 1 91 1 130 1 107 1 144 1 
195 1 93 1 95 1 154 1 157 1 98 1 75 1 54 2 66 1 213 1 319 1 320 1 149 1 12 1 91 1 130 1 107 1 144 1 
195 1 93 1 95 1 154 1 157 1 98 1 75 1 54 2 66 1 213 1 319 1 320 1 149 1 12 1 91 1 130 1 107 1 144 1 
248 1 94 1 160 1 
248 1 94 1 160 1 
139 1 7 1 
248 1 139 1 7 1 
151 1 218 1 
95 1 93 1 52 1 54 1 252 2 149 1 12 1 172 2 218 1 130 1 195 1 151 1 18 2 157 1 132 1 237 2 66 1 318 1 320 1 181 1 140 1 289 1 87 1 141 2 263 1 31 1 144 1 
94 1 160 1 
248 1 139 1 7 1 
120 1 96 1 232 1 36 2 270 1 252 2 148 1 214 1 216 1 80 1 192 1 172 2 152 1 196 1 82 1 18 2 20 1 223 1 371 2 341 1 241 1 86 2 162 2 242 1 375 1 115 1 293 1 292 1 48 1 90 2 165 2 
175 1 236 2 281 1 339 1 371 2 158 1 145 1 372 1 284 1 162 2 243 1 171 1 288 1 305 1 291 1 192 1 375 1 322 1 90 2 
175 1 236 2 281 1 339 1 371 1 145 1 372 1 284 1 162 1 171 1 288 1 305 1 192 1 183 1 375 1 322 1 90 1 
2 1 175 1 222 1 257 1 371 1 241 1 162 1 243 1 68 1 192 1 375 1 293 1 90 1 108 1 
175 1 236 2 281 1 339 1 371 1 158 1 145 1 372 1 284 1 162 1 243 1 171 1 288 1 305 1 192 1 375 1 322 1 90 1 
127 1 
118 1 187 1 352 1 75 1 189 1 38 1 324 1 
93 1 95 1 187 1 211 1 75 2 189 1 38 1 37 1 57 1 255 1 280 1 314 1 22 1 225 1 138 1 376 1 184 1 
93 5 95 5 187 9 189 2 5 1 147 6 150 2 192 4 15 2 337 2 280 4 22 6 240 2 239 2 241 3 343 1 162 3 203 2 204 3 205 1 68 1 291 1 293 10 119 2 296 2 208 2 33 2 299 2 352 1 35 3 249 1 74 6 211 4 75 8 37 12 38 8 253 1 126 1 255 3 43 2 221 2 311 2 133 2 313 2 371 3 85 1 225 4 260 2 178 2 138 4 375 3 376 5 90 3 324 1 
119 2 95 1 93 1 296 2 208 2 297 1 187 8 74 5 269 1 211 2 75 5 189 2 329 1 147 5 37 6 38 5 255 1 331 1 332 1 15 2 337 1 336 1 221 1 311 2 280 2 63 1 22 3 23 1 239 2 225 2 344 1 138 2 205 1 290 1 376 1 
119 1 95 1 93 1 73 1 187 1 211 1 354 1 38 1 252 1 56 1 361 1 172 1 15 1 276 1 42 1 17 1 310 1 18 1 280 1 237 1 225 1 113 1 138 1 141 1 346 1 89 1 
352 1 280 1 187 1 211 1 189 1 75 1 38 1 225 1 138 1 324 1 
119 2 221 1 296 2 208 2 311 2 187 5 74 5 75 5 22 5 147 5 239 2 38 5 37 10 260 1 15 2 
95 1 93 1 255 1 376 1 75 1 189 1 
166 1 93 3 95 3 97 1 187 2 249 1 211 2 38 2 126 2 255 2 192 1 364 1 337 2 174 1 222 1 280 2 257 1 371 4 342 1 241 1 225 1 162 4 138 2 205 2 68 2 375 1 376 4 293 1 90 4 
120 1 35 1 36 2 354 2 270 1 252 2 148 1 80 1 172 3 333 1 192 1 104 1 276 1 220 1 18 3 20 1 237 2 338 1 371 1 341 1 241 1 286 1 162 1 68 1 141 2 375 1 48 1 90 1 293 1 292 1 31 1 165 1 
337 1 280 1 187 1 74 2 211 1 189 2 75 4 22 2 147 2 37 4 38 2 225 1 138 1 125 1 205 1 
10 1 149 1 157 1 
19 1 149 1 157 1 98 1 218 1 
10 1 149 1 157 1 
10 1 149 1 157 1 
149 1 157 1 62 1 
149 1 157 1 62 1 
149 1 157 1 62 1 
149 1 157 1 
320 1 12 1 
119 1 92 2 42 1 296 1 370 1 120 2 73 1 20 4 231 1 36 4 341 2 270 2 102 1 125 1 80 2 115 4 346 1 116 1 165 8 117 3 
118 1 119 1 42 1 92 2 296 1 20 3 73 1 102 1 125 1 346 1 115 3 116 1 117 2 165 6 
119 1 92 1 296 1 120 1 370 1 208 1 311 1 20 2 36 2 341 1 270 1 239 1 110 1 80 1 115 2 117 2 165 4 
119 1 92 1 296 1 370 1 208 1 311 1 20 4 269 1 329 2 258 1 239 1 332 1 115 3 165 7 117 2 
119 3 92 5 296 3 120 2 208 2 73 1 231 2 329 2 36 4 270 2 102 1 78 1 125 1 80 2 332 2 194 1 42 2 370 4 153 1 311 2 20 12 258 1 341 2 239 2 346 2 115 11 116 1 117 9 165 23 
20 1 329 1 165 1 
332 1 115 1 165 1 
119 1 92 2 120 1 370 1 296 1 208 1 311 1 20 3 341 1 36 2 270 1 239 1 110 1 260 1 80 1 115 3 165 6 117 3 
119 2 92 1 120 1 296 2 208 2 297 1 269 1 329 1 36 2 270 1 80 1 331 1 332 1 365 1 370 1 311 2 20 6 63 1 341 1 239 2 344 1 290 1 115 6 165 12 117 2 
119 1 42 1 92 1 296 1 370 1 73 1 20 3 115 3 346 1 165 6 117 2 
92 1 42 1 370 1 120 1 153 1 20 2 231 1 36 2 341 1 270 1 102 1 80 1 115 1 346 1 116 1 117 2 165 3 
119 1 42 1 92 1 310 1 296 1 73 1 20 3 346 1 115 2 117 1 165 5 
119 1 120 1 370 1 36 2 341 1 270 1 239 1 80 1 115 2 365 1 165 2 117 1 
119 1 92 1 296 1 120 1 370 1 208 1 311 1 20 2 36 2 341 1 270 1 239 1 80 1 115 2 365 1 117 2 165 4 
42 1 92 1 120 3 370 1 153 1 231 1 20 2 36 6 341 3 270 3 80 3 346 1 115 1 206 1 365 1 165 3 117 2 
119 5 92 7 120 5 296 5 208 3 298 1 73 2 231 2 269 1 329 4 36 10 270 5 102 1 125 1 80 5 332 3 193 1 365 1 42 3 370 5 153 1 311 3 20 18 159 1 341 5 258 1 239 3 110 1 346 3 115 16 116 1 206 1 165 34 117 12 
119 1 92 2 296 1 120 1 73 1 269 1 329 1 36 2 270 1 102 1 125 1 80 1 332 1 365 1 42 1 20 4 341 1 290 1 115 4 346 1 116 1 165 8 117 2 
119 2 92 2 296 1 120 2 208 1 73 1 269 1 329 2 36 4 270 2 102 1 125 1 80 2 332 1 365 1 42 1 370 1 20 5 341 2 258 1 239 1 110 1 290 1 346 1 115 6 116 1 165 11 117 3 
119 3 92 3 120 3 296 3 208 2 297 1 73 1 231 1 269 1 329 1 36 6 270 3 102 1 125 1 331 1 80 3 332 1 365 1 42 1 370 1 311 2 20 10 63 1 341 3 239 2 110 1 344 1 290 1 346 1 115 9 116 1 165 19 117 4 
119 3 92 3 120 3 296 2 208 2 297 1 73 1 231 1 269 1 329 1 36 6 270 3 102 1 125 1 80 3 331 1 332 1 365 1 42 1 370 2 311 1 20 7 63 1 341 3 239 2 110 1 344 1 290 1 346 1 115 10 116 1 165 17 117 5 
119 1 92 2 296 1 120 1 73 1 269 1 329 1 36 2 270 1 102 1 125 1 80 1 332 1 365 1 42 1 20 4 341 1 290 1 115 4 346 1 116 1 165 8 117 2 
119 2 92 1 120 1 296 2 208 2 297 1 269 1 329 1 36 2 270 1 80 1 331 1 332 1 365 1 370 1 311 2 20 6 63 1 341 1 239 2 344 1 290 1 115 6 165 12 117 2 
119 3 92 3 120 4 296 2 208 2 297 1 73 1 231 2 269 1 329 1 36 8 270 4 102 1 125 1 331 1 80 4 332 1 365 1 42 1 370 2 311 1 20 8 63 1 341 4 239 2 110 1 344 1 290 1 346 1 115 10 116 1 165 18 117 5 
119 3 92 3 120 4 296 2 208 3 297 1 231 2 269 1 329 1 36 8 270 4 331 1 80 4 332 1 365 1 370 3 311 2 20 7 63 1 341 4 239 3 344 1 290 1 115 9 206 1 165 16 117 6 
119 1 42 3 92 3 296 1 370 3 20 4 73 1 102 1 346 3 115 3 116 2 165 7 117 6 
119 3 92 3 120 4 296 2 208 2 297 1 73 1 231 2 269 1 329 1 36 8 270 4 102 1 125 1 331 1 80 4 332 1 365 1 42 1 370 1 311 1 20 8 63 1 341 4 239 2 344 1 290 1 346 1 115 10 116 1 206 1 165 18 117 4 
18 1 156 1 172 1 340 1 84 1 252 1 31 1 
44 1 287 1 18 1 128 1 156 1 172 1 353 1 340 1 84 1 252 1 224 1 31 1 
118 1 162 1 222 1 68 1 192 1 375 1 257 1 371 1 293 1 90 1 241 1 
18 2 268 1 237 1 35 1 371 1 252 1 241 1 286 1 162 1 68 1 192 1 141 1 172 2 333 1 375 1 293 1 90 1 31 1 
18 2 33 1 268 1 237 2 35 2 371 1 240 1 301 1 252 2 241 2 286 1 162 1 113 1 126 1 306 1 192 1 141 1 172 2 333 1 375 1 293 3 90 1 31 1 
18 2 33 1 268 1 237 2 35 2 371 2 240 1 301 1 252 2 241 2 286 1 111 1 162 2 113 1 126 1 306 1 192 1 141 1 172 2 375 1 293 3 90 2 29 1 31 1 
93 2 95 2 33 1 299 1 35 1 34 1 75 1 189 1 371 3 240 1 241 1 162 3 203 1 126 1 204 1 68 1 192 1 376 1 375 1 90 3 293 4 29 1 379 1 
93 2 95 2 43 1 33 1 299 1 35 1 75 1 189 1 371 3 240 1 241 1 162 3 203 1 126 1 204 1 68 1 192 1 376 1 375 1 90 3 293 4 29 1 
162 1 197 1 192 1 375 1 371 1 90 1 
197 1 279 1 223 1 177 1 35 1 371 7 5 1 170 1 284 1 76 1 241 2 86 1 162 7 68 2 291 1 192 3 375 2 142 1 90 6 293 3 325 1 
92 3 268 1 188 1 270 2 102 1 148 2 333 1 192 1 105 1 152 1 18 2 20 6 237 1 338 1 341 2 241 1 286 1 162 1 113 1 291 1 346 2 115 5 292 2 293 1 116 1 117 3 165 11 31 3 69 1 119 2 120 2 296 2 73 2 210 1 35 1 36 4 250 1 252 1 214 1 125 1 80 2 172 2 220 1 42 2 310 1 131 1 371 1 141 1 375 1 90 1 
95 3 93 3 299 1 187 1 352 1 249 1 75 1 189 1 211 2 38 1 255 1 150 1 43 1 132 1 280 2 313 1 371 1 225 2 162 1 138 2 178 1 203 1 204 1 68 1 376 2 90 1 293 2 324 1 
197 1 35 1 371 2 5 1 85 1 241 1 162 2 203 1 291 1 192 2 375 1 90 2 293 2 
222 1 169 1 257 1 371 4 241 1 162 4 68 1 291 1 192 1 375 1 90 4 293 1 29 1 
177 1 35 1 371 2 170 1 355 1 241 1 162 2 126 1 182 1 59 1 192 2 375 1 90 2 293 1 
162 1 236 1 68 1 281 1 192 1 339 1 375 1 322 1 371 1 90 1 
223 1 232 1 371 2 284 1 241 1 162 2 291 1 192 1 375 1 90 2 293 1 
222 1 223 1 169 1 257 1 371 5 241 2 76 1 162 5 126 1 68 1 291 1 192 2 375 2 90 4 293 3 325 1 
70 1 222 1 223 1 169 1 257 1 371 5 241 2 76 1 162 5 126 1 68 1 291 1 192 2 375 2 90 4 293 3 
18 2 268 1 237 1 35 1 371 1 252 1 241 1 286 1 111 1 162 1 68 1 192 1 141 1 172 2 375 1 293 1 90 1 31 1 
279 1 177 1 35 1 371 1 5 1 170 1 241 1 162 1 126 1 192 2 375 1 90 1 293 1 
47 1 202 1 114 1 282 1 31 1 
93 2 95 2 71 1 299 1 132 1 100 1 282 2 75 1 189 1 301 1 47 1 113 1 114 2 202 2 359 1 306 1 362 1 31 1 377 1 
47 1 196 1 202 1 114 1 18 1 96 1 216 1 172 1 252 1 
47 1 71 1 359 1 
118 1 266 1 27 1 173 1 
302 1 25 1 266 1 129 1 27 1 368 1 173 1 
302 1 209 1 67 1 
266 1 186 1 4 1 109 1 302 3 25 3 304 2 129 1 27 1 368 1 228 1 173 1 
302 2 25 2 266 1 129 1 164 1 27 1 233 1 368 1 173 1 
302 1 25 1 236 1 274 1 186 1 129 1 339 1 27 1 366 1 368 1 372 1 
302 1 25 1 266 1 186 1 129 1 27 1 368 1 
302 1 25 1 266 2 186 1 129 1 368 1 173 1 
266 1 186 1 271 1 302 2 25 2 129 2 307 1 27 1 106 1 368 2 
266 1 168 1 186 1 302 3 25 3 129 1 163 1 164 2 27 2 294 1 368 1 366 1 173 1 
335 1 266 1 236 2 281 1 186 1 339 1 372 1 302 2 25 2 171 1 129 1 164 1 27 1 368 1 173 1 
266 1 168 1 186 1 99 1 233 1 302 4 25 4 129 2 164 2 27 2 368 2 366 1 173 1 
302 1 25 1 266 1 186 1 129 1 27 1 368 1 173 1 
266 2 168 1 109 1 330 1 302 4 25 4 304 1 129 1 164 2 27 3 228 1 368 1 366 1 173 2 
302 2 25 2 215 1 266 1 122 1 191 1 186 1 129 1 164 1 27 1 368 1 173 1 
302 3 25 3 266 1 304 2 321 1 186 1 129 1 27 1 109 1 228 2 368 1 173 1 
39 1 83 1 27 2 190 2 
302 1 25 1 312 1 186 1 129 1 368 1 
302 2 25 2 266 1 186 1 129 1 164 1 27 1 294 1 368 1 173 1 
46 1 
302 1 25 1 266 1 186 1 129 1 27 1 368 1 173 1 
302 3 25 3 266 1 304 1 186 1 129 1 164 1 27 1 294 1 368 1 173 1 
168 1 27 1 366 1 330 1 
266 1 27 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 218 46 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 218 380 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 218 380 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 218 380 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 218 380 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
310 1 3 1 75 1 97 1 354 2 122 4 355 2 153 9 154 1 81 2 182 1 82 1 213 2 160 3 288 1 289 2 165 1 66 1 348 2 193 1 268 2 112 5 198 6 323 1 43 1 246 1 247 1 327 9 
310 1 3 1 75 1 97 1 354 2 122 4 355 2 153 9 154 1 81 2 182 1 82 1 213 2 160 3 288 1 289 2 165 1 66 1 348 2 193 1 268 2 112 5 198 6 323 1 43 1 246 1 247 1 327 9 
310 1 3 1 75 1 97 1 354 2 122 5 355 2 153 10 154 1 81 2 182 1 82 1 213 2 160 4 288 1 289 2 165 1 66 1 348 2 193 1 268 2 112 6 198 7 323 1 43 1 246 1 247 1 327 10 
310 1 3 1 75 1 97 1 354 2 122 3 355 2 153 7 154 1 81 2 182 1 82 1 213 2 160 2 288 1 289 1 165 1 348 2 193 1 268 2 112 4 198 4 323 1 43 1 246 1 247 1 327 7 
289 2 3 1 66 1 122 2 354 1 348 1 355 1 268 1 193 1 153 4 198 3 112 3 43 1 246 1 82 1 327 4 160 1 213 1 
18 1 49 1 75 1 97 1 348 1 355 1 193 1 268 1 153 2 112 1 43 1 246 1 81 1 327 2 71 1 213 1 
165 1 122 1 348 2 355 2 193 1 153 3 112 2 198 1 43 1 246 1 81 1 327 3 160 1 
313 1 3 1 122 4 354 1 355 2 153 9 81 1 82 1 160 3 213 1 289 2 165 1 66 1 348 2 193 1 268 1 198 7 112 5 323 1 43 1 246 1 350 1 247 1 327 9 
313 1 3 1 122 4 354 1 355 2 153 9 81 1 82 1 160 3 213 1 289 2 165 1 66 1 348 2 193 1 268 1 198 7 112 5 323 1 43 1 246 1 350 1 247 1 327 9 
155 1 316 1 256 1 
232 1 256 1 35 2 
356 2 194 2 312 2 335 2 41 1 352 2 108 2 249 1 
333 1 312 2 147 2 335 3 202 1 2 1 352 2 249 1 76 1 152 1 5 1 78 1 356 3 317 2 127 1 261 1 236 1 13 1 363 1 285 1 345 1 19 1 108 2 133 1 346 2 373 1 292 1 375 2 194 2 195 1 306 1 41 1 245 1 42 1 271 1 69 2 44 1 
356 1 194 1 312 1 335 1 30 1 352 1 108 1 249 1 347 1 22 1 
61 1 335 1 17 1 30 1 352 1 48 1 189 1 356 1 55 1 155 1 56 1 256 1 257 1 184 1 
312 1 61 1 335 1 30 1 108 1 352 1 48 2 356 1 194 1 55 1 155 1 56 1 256 1 257 1 184 2 
60 1 210 1 48 1 216 1 184 1 
60 1 180 1 155 1 299 1 48 2 216 1 256 1 184 2 
60 1 48 1 184 1 
312 1 335 1 30 1 108 1 352 1 216 1 48 1 249 1 347 1 22 1 356 1 194 1 91 1 184 1 
256 1 
60 1 180 1 155 1 199 1 48 2 216 1 256 1 184 2 
60 2 297 1 248 1 287 1 365 1 107 2 148 1 276 1 337 1 216 2 48 5 180 1 89 1 322 2 155 1 256 1 158 2 184 5 72 1 
41 1 316 1 
15 1 312 1 335 2 352 2 108 1 278 1 356 2 194 1 41 2 
309 1 120 1 320 1 
13 1 363 1 335 1 345 1 2 1 346 1 152 1 78 1 356 1 306 1 41 1 317 1 69 1 127 1 59 1 236 1 
12 1 312 4 335 5 352 5 108 1 278 1 189 1 356 5 194 4 41 1 181 1 106 1 351 1 11 2 
356 2 194 2 312 2 335 2 30 1 352 2 175 1 347 1 
363 1 13 1 120 1 312 1 345 1 335 2 2 1 352 1 152 1 346 1 78 1 356 2 194 1 306 1 317 1 69 1 127 1 351 1 11 1 236 1 
356 3 194 3 312 3 335 3 41 1 108 1 352 3 11 1 
356 1 194 1 312 1 335 1 30 1 352 1 347 1 
356 1 194 1 15 1 312 1 335 1 30 1 352 1 108 1 278 1 
333 1 312 3 147 2 335 4 202 1 30 1 2 1 352 3 48 1 151 1 249 1 152 1 76 1 278 1 5 1 78 1 356 4 55 1 317 1 56 1 257 1 127 1 184 1 236 1 11 1 363 1 13 1 285 1 61 1 345 1 108 2 133 1 346 1 375 1 194 3 195 1 306 1 41 1 245 1 42 1 271 1 325 1 69 1 351 1 
356 2 194 1 312 1 335 2 41 1 352 2 181 1 189 1 11 1 
312 3 61 1 335 3 30 1 108 1 352 3 48 1 151 1 278 1 356 3 194 3 55 1 56 1 256 1 257 1 259 1 184 1 351 1 11 2 
309 1 356 2 194 2 120 1 312 2 335 2 352 2 108 1 278 1 11 1 
13 1 363 1 335 1 345 1 2 1 346 1 152 1 78 1 356 1 306 1 41 1 317 1 69 1 127 1 236 1 
13 1 363 1 335 1 345 1 2 1 346 1 152 1 251 1 356 1 306 1 41 1 317 1 69 1 58 1 127 1 
309 2 333 1 120 2 147 2 202 2 6 1 178 1 205 1 358 1 360 1 83 1 285 1 162 1 320 2 63 1 266 1 375 4 195 1 245 1 42 1 271 1 70 1 44 2 116 1 
356 1 194 1 61 1 312 1 335 1 30 1 352 1 175 1 
219 1 275 1 
219 1 275 1 
137 1 241 1 
137 1 241 1 
137 1 241 1 
219 1 275 1 26 1 
111 1 219 1 275 1 
137 1 369 1 10 1 241 1 219 2 275 2 
219 1 275 1 26 1 
219 1 275 1 26 1 
284 1 219 1 275 1 
284 1 219 1 275 1 
284 1 219 1 275 1 
171 1 226 1 312 2 335 2 336 1 352 2 48 1 95 1 50 1 356 2 211 1 57 1 184 1 237 1 238 1 38 1 194 2 293 1 305 1 41 1 244 1 111 1 219 1 275 1 
171 2 238 3 369 1 336 2 48 2 21 1 301 1 305 2 110 1 324 1 157 1 211 1 256 1 219 2 296 2 275 2 328 1 57 2 184 2 
268 1 354 1 213 1 
268 1 18 1 213 1 
268 3 18 1 103 1 354 2 142 1 129 1 
268 2 208 1 18 1 354 1 142 1 129 1 
268 2 18 1 354 1 142 1 129 2 
226 1 297 2 248 3 150 1 48 5 300 2 6 1 205 1 180 1 232 1 34 1 155 1 158 1 256 2 105 1 35 3 184 5 60 1 162 1 365 1 107 1 290 1 216 4 164 2 88 2 266 1 293 1 322 1 244 1 68 1 326 1 45 1 
297 6 119 1 248 8 173 1 337 1 48 9 300 6 6 3 53 1 205 3 180 1 230 1 232 3 34 2 210 5 155 1 256 5 158 2 105 2 35 9 184 9 60 6 343 1 162 3 365 1 107 2 290 3 216 7 88 6 266 3 293 4 322 2 220 1 326 1 223 5 
297 2 312 1 248 3 335 1 30 1 352 1 150 1 337 1 48 3 249 1 300 2 6 1 205 1 356 1 232 2 34 1 155 1 256 3 158 1 105 1 35 4 184 3 162 1 107 1 108 1 216 2 164 1 290 1 347 1 88 2 22 1 266 1 194 1 293 1 322 1 91 1 45 1 
297 2 119 1 248 3 337 1 150 1 48 2 300 2 6 1 205 1 232 2 34 1 256 2 158 1 105 1 35 4 184 2 162 1 107 1 164 1 216 1 290 1 88 2 266 1 293 1 322 1 45 1 
138 1 345 1 316 1 
345 1 378 1 
267 1 
345 1 2 1 127 1 
357 1 345 1 
345 1 127 1 
138 2 345 3 2 1 291 1 127 1 117 1 
162 1 202 3 188 1 132 1 174 2 7 1 266 1 375 7 209 1 167 1 253 1 139 1 360 3 258 1 302 1 116 2 44 4 
162 1 202 3 188 1 132 1 174 2 7 1 266 1 375 7 209 1 167 1 253 1 139 1 360 3 258 1 302 1 116 2 44 4 
319 1 162 1 202 3 188 1 132 1 174 2 7 1 266 1 375 7 209 1 167 1 253 1 139 1 360 3 258 1 302 1 116 2 44 4 
201 1 147 2 202 15 250 3 174 3 6 3 7 1 8 1 205 3 209 2 253 5 159 1 302 1 258 2 360 10 128 1 162 4 132 1 188 2 131 4 240 1 290 3 372 1 266 4 375 31 195 1 167 1 139 2 245 1 42 1 114 1 271 1 44 16 116 5 
332 1 147 4 202 4 174 2 8 1 7 1 229 1 209 1 253 1 258 1 360 4 162 1 132 1 188 1 266 1 375 9 195 2 167 1 139 1 245 2 42 2 271 2 44 5 116 3 
146 1 152 1 354 1 204 1 355 1 99 1 153 2 317 1 81 1 103 1 213 1 13 1 18 1 346 1 65 1 303 1 348 1 192 1 376 1 193 1 269 1 268 2 197 1 112 1 198 1 43 1 246 1 113 1 69 1 327 2 
144 1 146 1 121 1 203 1 152 1 354 1 204 1 355 1 99 1 153 3 317 1 81 1 103 1 213 1 13 1 18 1 346 1 65 1 348 1 192 1 376 1 269 1 268 2 197 1 112 1 198 2 43 1 246 1 69 1 327 3 
144 1 146 1 121 1 152 1 354 1 204 1 99 1 153 2 317 1 81 1 103 1 213 1 13 1 18 1 346 1 65 1 376 1 269 1 268 2 112 1 198 2 43 1 246 1 69 1 327 2 
227 1 203 1 152 1 52 1 204 2 355 1 123 1 153 1 317 1 81 2 255 1 127 1 13 1 345 1 346 1 65 2 348 1 376 2 24 1 306 1 69 1 327 1 115 1 
144 1 146 1 152 1 354 1 204 1 355 1 99 1 153 1 317 1 81 1 103 1 213 1 13 1 18 1 346 1 65 1 348 1 192 1 376 1 193 1 269 1 268 2 197 1 113 1 69 1 327 1 
186 1 
297 2 47 1 248 2 335 1 149 1 48 5 96 1 152 1 55 1 155 1 56 1 256 2 158 1 257 1 60 6 13 1 61 1 345 1 107 1 17 1 346 2 23 1 24 1 306 2 270 4 69 2 25 1 224 2 170 1 73 2 29 1 30 1 352 1 77 1 176 2 123 1 180 3 179 1 356 1 231 2 232 2 34 1 317 2 318 2 35 2 127 1 282 2 184 5 361 1 365 1 368 1 189 1 191 2 322 1 294 1 
60 2 61 1 335 1 17 1 30 1 352 1 48 3 96 1 189 1 191 1 180 1 179 1 356 1 55 1 199 1 270 2 56 1 257 1 25 1 184 3 361 1 170 1 
60 1 61 1 335 1 17 1 30 1 352 1 48 3 96 1 176 1 189 1 180 1 179 1 356 1 55 1 199 1 155 1 270 3 56 1 256 1 257 1 25 1 184 3 361 1 170 1 
335 1 30 1 352 1 48 3 96 1 176 1 180 1 179 1 356 1 55 1 56 1 155 1 257 1 256 1 361 1 184 3 60 2 61 1 17 1 189 1 191 1 199 1 270 3 25 1 170 1 224 1 
297 1 248 1 335 1 149 1 48 5 96 1 55 1 56 1 155 5 257 1 256 5 158 1 60 7 61 1 17 1 107 1 67 1 270 6 25 1 224 4 170 1 73 2 30 1 352 1 176 4 177 1 180 3 179 1 356 1 231 2 232 2 318 2 281 1 184 5 361 1 282 2 365 1 370 1 189 1 191 4 322 1 294 1 199 1 141 1 
297 1 47 1 248 1 335 1 149 1 48 4 96 1 55 1 56 1 155 1 257 1 158 1 256 2 60 4 61 1 107 1 17 1 270 4 25 1 170 1 224 2 73 2 30 1 352 1 176 2 179 1 180 2 356 1 231 2 232 2 318 2 35 2 184 4 361 1 282 2 365 1 189 1 191 2 322 1 294 1 
73 2 297 1 248 1 335 1 149 1 30 1 352 1 48 4 96 1 176 2 180 2 179 1 356 1 231 2 55 1 232 2 155 1 318 2 56 1 281 1 256 1 158 1 257 1 282 2 361 1 184 4 60 4 61 1 365 1 17 1 107 1 370 1 189 1 191 2 67 1 322 1 294 1 270 4 25 1 224 2 170 1 
73 2 297 1 248 1 335 1 149 1 30 1 352 1 48 4 96 1 176 2 180 2 179 1 356 1 231 2 55 1 232 2 155 1 318 2 56 1 281 1 256 1 158 1 257 1 282 2 361 1 184 4 60 4 61 1 365 1 17 1 107 1 370 1 189 1 191 2 67 1 322 1 294 1 270 4 25 1 224 2 170 1 
73 2 297 1 248 1 335 1 149 1 30 1 352 1 48 4 96 1 176 2 180 2 179 1 356 1 207 1 231 2 55 1 155 1 56 1 281 1 256 1 158 1 257 1 35 2 361 1 184 4 60 4 286 1 61 1 365 1 17 1 107 1 136 2 37 2 189 1 191 2 322 1 270 4 25 1 330 1 224 2 170 1 
73 2 297 1 248 1 335 1 149 1 30 1 352 1 48 4 96 1 176 3 180 2 179 1 356 1 231 2 55 1 232 2 155 1 318 2 56 1 281 1 256 1 158 1 257 1 282 2 361 1 184 4 60 5 61 1 365 1 107 1 17 1 370 1 189 1 191 3 67 1 322 1 294 1 270 5 25 1 141 1 170 1 224 3 
73 2 297 1 248 1 335 1 149 1 30 1 352 1 48 4 96 1 176 3 180 2 179 1 356 1 231 2 55 1 232 2 155 1 318 2 56 1 281 1 256 1 158 1 257 1 282 2 361 1 184 4 60 5 61 1 365 1 107 1 17 1 370 1 189 1 191 3 67 1 322 1 294 1 270 5 25 1 141 1 170 1 224 3 
297 1 47 1 248 1 335 1 149 1 48 4 96 1 55 1 56 1 155 1 257 1 158 1 256 1 60 4 61 1 107 1 17 1 270 4 25 1 170 1 224 2 73 2 30 1 352 1 176 2 179 1 180 2 356 1 231 2 35 2 184 4 361 1 365 1 189 1 37 2 136 2 191 2 322 1 330 1 
309 1 333 1 285 1 120 1 162 1 147 2 202 3 188 1 132 1 320 1 63 1 316 1 174 1 7 1 266 1 375 6 195 1 167 1 139 1 41 2 245 1 42 1 271 1 360 2 44 3 116 2 
309 4 333 2 120 11 147 4 202 6 250 3 228 1 6 2 205 1 253 1 360 2 128 1 285 1 130 1 162 1 131 3 320 11 240 1 290 2 133 1 135 1 242 1 292 1 266 2 375 14 195 2 41 1 245 2 42 2 271 2 379 1 116 1 44 8 
309 1 333 1 312 1 335 2 147 2 202 1 2 1 352 1 152 1 4 1 78 1 356 2 280 1 317 1 127 1 236 1 59 1 11 1 363 1 13 1 285 1 345 1 133 1 346 1 242 1 292 1 375 2 194 1 195 1 306 1 41 1 245 1 42 1 271 1 308 1 69 1 44 1 351 1 
333 3 144 1 147 6 335 3 202 10 2 2 152 2 98 2 6 2 7 1 205 2 253 4 102 2 104 1 11 1 13 2 14 1 161 2 162 3 345 2 346 3 266 3 167 1 306 1 271 3 69 3 116 4 351 1 309 7 312 1 120 7 74 1 352 1 174 1 76 2 78 2 356 3 317 3 360 8 127 2 236 2 363 2 285 3 188 1 132 1 320 7 290 2 133 1 242 1 292 1 375 20 194 1 195 3 139 1 41 2 245 3 42 3 44 10 143 2 
333 2 144 1 312 1 335 1 147 4 202 1 352 1 152 2 279 1 123 1 356 1 317 8 254 1 127 2 11 1 13 2 344 1 285 2 364 1 345 3 19 2 63 1 133 1 134 1 346 8 303 1 292 1 375 2 194 1 195 2 24 1 306 2 307 1 245 2 42 2 271 2 69 7 221 1 44 1 
309 1 333 1 120 1 312 1 147 2 335 1 202 2 314 1 352 1 278 1 6 1 205 1 356 1 360 1 285 1 162 1 320 1 108 1 290 1 242 1 266 1 375 3 194 1 195 1 245 1 42 1 271 1 116 1 44 1 
309 1 333 1 285 1 120 1 147 2 320 1 63 1 6 1 266 1 375 2 195 1 253 1 245 1 358 1 42 1 271 1 360 1 44 2 
309 1 333 1 285 1 120 1 147 2 162 1 202 2 320 1 63 1 178 1 205 1 375 2 195 1 245 1 42 1 271 1 360 1 116 1 
309 2 333 1 285 1 120 2 162 1 147 2 202 2 320 2 63 1 290 1 6 1 205 1 266 1 375 4 195 1 253 1 245 1 42 1 271 1 360 2 116 1 44 2 
309 1 333 1 285 1 120 1 147 2 320 1 6 1 266 1 375 2 195 1 253 1 245 1 358 1 42 1 254 1 271 1 360 1 44 2 
309 1 333 1 285 1 120 1 147 2 162 1 202 2 320 1 178 1 205 1 375 2 195 1 245 1 42 1 254 1 271 1 360 1 116 1 
309 2 333 1 285 1 120 2 162 1 147 2 202 2 320 2 290 1 6 1 205 1 266 1 375 4 195 1 253 1 245 1 42 1 254 1 271 1 360 2 116 1 44 2 
309 2 333 1 285 1 120 2 162 1 147 2 202 2 320 2 290 1 6 1 205 1 266 1 375 4 195 1 253 1 245 1 42 1 271 1 360 2 116 1 44 2 
333 1 335 1 147 2 202 1 2 1 152 1 76 1 78 1 356 1 317 1 127 1 236 1 363 1 13 1 285 1 345 1 133 1 346 1 292 1 375 2 195 1 306 1 41 1 245 1 42 1 271 1 69 1 44 1 
333 1 335 1 147 2 202 1 2 1 152 1 251 1 356 1 317 1 58 1 127 1 84 1 363 1 13 1 285 1 345 1 133 1 346 1 292 1 375 2 195 1 306 1 41 1 245 1 42 1 271 1 69 1 44 1 
309 2 333 1 285 1 120 2 162 1 147 2 202 2 320 2 290 1 6 1 242 1 205 1 266 1 375 4 195 1 253 1 245 1 42 1 271 1 360 2 116 1 44 2 
309 2 333 1 120 2 335 1 147 2 202 2 2 1 152 1 76 1 6 1 78 1 205 1 356 1 253 1 317 1 360 2 127 1 236 1 363 1 13 1 161 1 285 1 162 1 345 1 320 2 290 1 346 1 303 1 266 1 375 4 195 1 245 1 42 1 271 1 69 1 116 1 44 2 
309 1 333 1 312 1 120 1 147 2 335 1 202 1 352 1 278 1 6 1 205 1 356 1 253 1 360 1 285 1 162 1 263 1 320 1 108 1 290 1 242 1 266 1 375 3 194 1 195 1 245 1 42 1 271 1 44 2 
46 1 147 4 202 5 250 1 6 1 229 1 205 1 125 1 253 1 234 1 360 2 128 1 283 1 162 1 131 2 86 1 240 1 290 1 349 1 266 1 375 9 195 2 218 1 40 1 245 2 42 2 271 2 116 1 44 4 
311 1 147 6 202 9 94 1 250 2 6 2 8 2 229 1 205 1 125 1 253 1 234 1 360 2 128 2 162 1 131 2 86 3 163 1 290 2 109 1 349 2 266 2 375 20 195 3 218 1 40 2 245 3 377 1 42 3 271 3 295 1 116 1 44 11 380 1 
147 4 202 5 250 1 6 1 229 1 205 1 125 1 253 1 234 1 360 2 128 1 283 1 162 1 131 2 86 1 240 1 290 1 349 1 266 1 375 9 195 2 218 1 40 1 245 2 42 2 271 2 116 1 44 4 380 1 
147 4 202 5 250 1 6 1 229 1 205 1 125 1 253 1 234 1 360 2 128 1 283 1 162 1 131 2 86 1 240 1 290 1 349 1 266 1 375 9 195 2 218 1 40 1 245 2 42 2 271 2 116 1 44 4 380 1 
311 1 147 4 202 22 94 1 174 1 250 4 6 6 7 1 8 1 229 1 205 6 125 1 253 6 234 1 360 12 128 2 162 7 188 1 132 1 131 4 86 3 163 1 240 2 290 6 109 1 135 2 349 1 266 7 375 46 195 2 218 1 167 1 139 1 40 1 245 2 377 1 42 2 271 2 295 1 116 6 44 24 380 1 
171 1 301 1 305 1 369 1 336 1 21 1 219 1 275 1 57 1 340 1 
111 1 50 1 
171 1 305 1 126 1 336 1 20 1 219 1 275 1 57 1 338 1 
168 1 26 1 
284 1 10 1 371 1 
171 1 238 2 369 1 336 1 48 1 21 1 301 1 305 1 110 1 324 1 211 1 256 1 219 1 296 1 275 1 328 1 57 1 184 1 
171 1 238 2 369 1 336 1 48 1 21 1 301 1 305 1 110 1 324 1 211 1 256 1 219 1 296 1 275 1 328 1 57 1 184 1 
171 1 238 2 369 1 336 1 48 1 21 1 301 1 305 1 110 1 324 1 211 1 256 1 219 1 296 1 275 1 328 1 57 1 184 1 
10 1 168 1 26 1 
10 1 168 1 26 1 
284 1 371 1 
284 1 10 1 371 1 
95 1 38 1 
171 1 226 1 312 2 335 2 336 1 352 2 48 1 95 1 50 1 356 2 57 1 184 1 237 1 238 1 366 1 216 1 38 1 293 1 194 2 110 1 305 1 41 1 244 1 111 1 296 1 219 1 275 1 
333 1 334 1 335 2 147 2 202 1 315 1 352 2 152 1 279 1 32 1 356 2 317 2 127 1 13 1 285 1 345 1 19 2 133 1 346 2 87 1 242 1 292 1 375 2 195 1 90 1 245 1 42 1 271 1 69 2 221 1 44 1 
13 1 144 1 146 1 18 1 152 1 346 2 354 1 65 1 303 1 99 1 268 2 217 1 197 1 317 2 69 2 103 1 212 1 213 1 225 1 
13 1 144 1 146 1 18 1 346 1 152 1 354 1 65 1 99 1 268 2 217 1 197 1 317 1 156 1 69 1 103 1 213 1 
13 1 345 1 152 1 346 1 65 1 52 1 123 1 206 1 24 1 306 1 317 1 69 1 127 1 225 1 
13 1 144 1 146 1 18 1 152 1 346 1 354 1 65 1 99 1 268 2 217 1 197 1 317 1 69 1 103 1 212 1 213 1 225 1 
222 1 
297 1 248 1 287 1 155 1 316 1 256 1 72 1 
297 1 248 1 48 1 180 1 232 1 318 1 155 1 158 1 256 2 35 1 282 1 184 1 60 1 365 1 107 1 322 1 294 1 
297 8 248 9 2 3 48 5 152 4 300 6 6 2 205 2 155 2 102 2 158 4 257 2 256 8 214 1 60 5 13 3 262 1 62 1 345 10 162 2 107 4 346 3 303 1 304 2 266 2 306 1 69 3 117 1 72 1 29 1 172 2 277 2 79 1 180 3 357 2 34 2 317 3 232 6 235 1 35 12 127 3 184 5 85 2 287 1 365 4 367 2 290 2 190 2 88 6 138 2 196 2 322 4 39 2 378 3 
297 4 311 1 1 1 248 7 48 1 94 1 250 1 300 5 6 2 205 2 180 1 232 3 155 1 158 2 256 4 35 6 128 1 184 1 60 1 85 1 365 2 162 2 131 1 107 2 163 1 290 2 109 1 88 5 266 2 322 2 295 1 
297 2 248 2 312 1 335 1 30 1 352 1 48 1 249 1 7 1 356 1 252 1 158 1 184 1 85 2 365 1 162 1 188 1 107 1 370 1 108 1 347 1 22 1 266 2 194 1 196 1 322 1 139 1 91 1 
297 1 287 1 248 1 365 1 107 1 322 1 155 1 158 1 256 1 72 1 
85 2 297 5 248 5 162 2 290 2 300 5 6 2 88 5 266 2 205 2 196 1 232 5 102 1 256 5 35 10 
60 1 180 1 155 1 48 1 256 1 184 1 
297 2 248 2 29 2 337 1 48 3 152 1 77 1 123 1 339 1 180 2 317 4 34 2 158 2 127 1 184 3 36 1 214 1 60 4 13 1 62 2 345 1 365 1 368 1 107 2 346 4 24 1 322 2 306 2 69 4 
333 1 312 2 147 2 335 3 202 1 352 2 2 1 249 1 76 1 152 1 5 1 78 1 356 3 317 1 127 1 236 1 13 1 363 1 285 1 345 1 108 2 133 1 346 1 375 1 194 2 195 1 306 1 41 1 245 1 42 1 271 1 69 1 
297 2 248 1 365 1 107 1 29 1 174 1 300 2 88 2 322 1 232 2 34 1 155 2 158 1 256 4 35 4 
16 1 336 1 57 1 
336 1 21 1 57 1 92 1 38 1 
16 1 336 1 57 1 
16 1 336 1 57 1 
336 1 57 1 169 1 
336 1 57 1 169 1 
336 1 57 1 169 1 
336 1 57 1 
219 1 275 1 
162 1 147 4 202 4 132 1 188 1 174 1 7 1 8 1 266 1 375 8 195 2 167 1 253 1 139 1 245 2 42 2 271 2 360 3 44 4 116 2 
162 1 202 3 132 1 188 1 316 1 174 1 7 1 266 1 375 6 167 1 139 1 360 2 116 2 44 3 
162 1 147 2 202 2 290 1 6 1 205 1 266 1 375 4 195 1 253 1 245 1 42 1 233 1 271 1 360 2 116 1 44 2 
162 1 131 2 202 4 240 1 290 1 250 1 6 1 205 1 266 1 375 7 253 1 360 2 116 1 128 1 44 3 
147 4 202 12 174 1 250 2 51 1 6 2 7 1 8 2 205 2 253 4 360 9 130 1 162 3 188 2 132 1 131 2 290 2 240 1 135 1 266 3 375 23 195 2 167 1 139 2 245 2 42 2 271 2 44 11 116 5 
375 1 202 1 131 1 
375 1 250 1 44 1 
147 2 162 1 202 3 290 1 6 1 266 1 205 1 375 6 195 1 253 1 245 1 42 1 102 1 271 1 233 1 360 3 44 3 116 2 
311 1 147 2 202 6 94 1 250 1 6 2 229 1 205 2 253 1 360 2 128 1 162 2 131 1 163 1 290 2 109 1 266 2 375 12 195 1 245 1 42 1 271 1 295 1 44 6 116 1 
162 1 202 3 188 1 7 1 266 1 375 6 139 1 253 1 360 2 44 3 116 1 
147 2 188 1 132 1 202 2 51 1 8 1 375 3 195 1 167 1 253 1 139 1 245 1 42 1 271 1 360 2 44 1 116 1 
147 2 162 2 188 2 202 5 7 1 229 1 266 2 375 10 195 1 252 1 139 2 253 2 245 1 42 1 271 1 360 5 116 3 44 5 
147 2 6 1 229 1 266 1 375 2 195 1 253 1 245 1 42 1 271 1 360 1 44 2 
162 1 147 2 202 2 290 1 6 1 205 1 229 1 266 1 375 4 195 1 253 1 245 1 42 1 271 1 360 2 116 1 44 2 
147 6 202 2 188 1 51 1 8 1 229 1 375 3 195 3 139 1 253 1 245 3 42 3 271 3 360 2 116 1 44 1 283 1 
201 1 147 10 202 18 174 1 51 1 250 3 6 3 7 2 8 2 229 1 205 3 253 5 233 1 360 12 128 1 283 1 162 5 188 3 132 1 131 4 240 1 290 3 372 1 266 5 375 34 195 5 167 1 139 3 245 5 114 1 42 5 271 5 44 16 116 7 
311 1 147 2 202 4 174 1 250 1 7 1 229 1 360 2 128 1 162 1 131 1 132 1 188 1 266 1 375 8 195 1 167 1 139 1 245 1 42 1 271 1 44 4 116 2 
311 1 147 4 202 5 174 1 250 1 6 1 7 1 229 1 253 1 233 1 360 3 128 1 162 1 188 1 132 1 131 2 240 1 290 1 266 2 375 11 195 2 167 1 139 1 245 2 42 2 271 2 116 2 44 6 
311 1 147 6 202 7 94 1 250 1 6 2 8 1 229 1 205 2 253 1 233 1 360 2 128 1 162 2 131 1 163 1 290 2 109 1 266 2 375 13 195 3 245 3 42 3 271 3 295 1 44 6 116 1 
311 1 147 6 202 4 94 1 250 1 6 2 8 1 229 1 205 1 253 1 233 1 360 2 128 1 162 1 131 1 163 1 290 2 109 1 266 2 375 11 195 3 245 3 42 3 271 3 295 1 44 7 116 1 
311 1 147 2 202 4 174 1 250 1 7 1 229 1 360 2 128 1 162 1 131 1 132 1 188 1 266 1 375 8 195 1 167 1 139 1 245 1 42 1 271 1 44 4 116 2 
311 1 147 2 202 6 94 1 250 1 6 2 229 1 205 2 253 1 360 2 128 1 162 2 131 1 163 1 290 2 109 1 266 2 375 12 195 1 245 1 42 1 271 1 295 1 44 6 116 1 
311 1 147 8 202 5 94 1 250 1 6 2 8 2 229 1 205 1 253 1 233 1 360 2 128 1 162 1 131 1 163 1 290 2 109 1 266 2 375 12 195 4 245 4 42 4 271 4 295 1 44 7 116 1 
311 1 147 8 202 5 94 1 250 1 6 2 8 2 229 1 205 1 253 2 360 4 128 1 283 1 162 1 131 1 163 1 290 2 109 1 266 2 375 12 195 4 245 4 42 4 271 4 295 1 44 7 116 2 
162 1 202 4 132 2 188 3 7 1 266 1 375 7 167 1 139 3 253 3 360 6 116 3 44 3 
311 1 147 8 202 5 94 1 250 1 6 2 8 2 229 1 205 1 253 1 360 2 128 1 283 1 162 1 131 1 163 1 290 2 109 1 266 2 375 12 195 4 245 4 42 4 271 4 295 1 44 7 116 1 
356 1 335 1 80 1 41 1 352 1 181 1 189 1 
335 1 28 1 264 1 352 1 166 1 189 1 356 1 80 1 41 1 140 1 181 1 274 1 
13 1 24 1 345 1 306 1 317 1 316 1 69 1 152 1 346 1 127 1 123 1 
363 1 13 1 312 1 345 1 335 2 2 1 352 1 152 1 346 1 78 1 356 2 194 1 306 1 41 1 317 1 69 1 127 1 11 1 
312 1 93 1 335 1 172 1 30 2 352 1 2 2 152 1 78 1 356 1 357 1 55 1 317 1 127 2 11 1 13 1 363 1 61 1 62 1 345 3 346 1 194 1 41 1 69 1 
312 1 93 1 335 1 172 1 30 2 352 1 2 2 152 1 356 1 357 1 55 1 317 1 58 1 127 2 11 1 13 1 363 1 61 1 62 1 345 3 346 1 194 1 41 1 69 1 
60 1 13 1 62 1 345 4 172 1 2 1 48 2 265 1 152 1 346 3 138 1 357 1 306 1 317 3 155 1 378 1 69 3 256 1 257 1 200 1 127 1 184 2 185 1 
60 1 13 1 62 1 345 4 172 1 2 1 48 2 152 1 346 3 190 1 138 1 357 1 306 1 317 3 155 1 378 1 69 3 256 1 257 1 200 1 127 1 184 2 
13 1 364 1 317 1 69 1 152 1 346 1 
13 2 344 1 27 1 364 1 144 1 345 3 19 1 2 1 64 1 134 1 346 7 152 3 303 1 33 1 306 2 307 1 317 7 69 6 221 1 117 1 127 2 
309 1 333 2 120 1 312 1 335 2 147 4 202 3 2 1 352 1 174 1 152 1 76 1 98 1 7 1 78 1 356 2 317 1 360 2 127 1 11 1 236 1 363 1 13 1 285 2 161 1 162 1 345 1 188 1 132 1 320 1 346 1 87 1 242 1 303 1 266 1 375 6 194 1 195 2 167 1 139 1 41 2 245 2 42 2 271 2 69 1 44 3 116 2 
297 1 248 1 48 3 277 1 180 1 317 1 155 1 256 1 158 2 257 1 184 3 214 1 60 2 287 1 365 2 345 2 107 2 216 1 346 1 304 1 190 1 138 1 306 1 322 2 39 1 378 1 69 1 72 1 
13 1 364 1 262 1 345 2 2 1 346 2 152 2 303 1 138 1 317 2 69 2 117 1 127 1 
13 1 345 1 152 1 346 4 303 1 123 1 24 1 306 1 317 4 69 4 200 1 329 1 127 1 
13 1 27 1 14 1 62 1 345 1 2 1 346 2 152 2 33 1 317 2 69 2 183 1 127 1 260 1 
13 1 268 1 306 1 18 1 317 1 69 1 152 1 346 1 213 1 99 1 
13 1 144 1 345 1 346 2 152 1 303 1 32 1 317 2 69 2 221 1 127 1 
13 2 62 1 345 3 346 5 134 1 152 2 303 1 123 1 24 1 306 1 317 5 307 1 69 4 221 1 329 1 127 2 
13 2 62 1 345 3 346 5 152 2 303 1 123 1 24 1 306 1 317 5 307 1 69 4 273 1 221 1 329 1 127 2 
363 1 13 1 312 1 345 1 335 2 2 1 352 1 152 1 346 1 356 2 194 1 306 1 41 1 317 1 69 1 58 1 127 1 11 1 
13 1 27 1 62 1 345 1 2 1 64 1 346 1 152 2 33 1 317 1 69 1 117 1 127 1 
54 1 342 1 41 1 101 1 362 1 
341 1 342 1 118 1 61 1 30 1 216 1 48 2 31 1 151 1 54 2 55 1 41 1 101 2 155 1 56 1 256 1 257 1 184 2 362 2 
356 1 342 1 54 1 334 1 90 1 335 1 352 1 315 1 362 1 
341 1 342 1 31 1 
112 1 43 1 246 1 316 1 
153 1 112 1 43 1 246 1 327 1 348 1 355 1 
153 1 81 1 204 1 
145 1 353 1 97 2 348 1 355 1 100 1 193 1 153 3 112 1 246 1 43 1 327 3 
153 2 112 1 198 1 289 1 43 1 246 1 327 2 348 1 355 1 
268 1 193 1 153 1 112 1 3 1 354 1 122 1 327 1 348 1 213 1 355 1 
193 1 153 1 112 1 43 1 327 1 348 1 355 1 
193 1 153 1 43 2 246 1 327 1 348 1 355 1 
0 1 348 2 355 2 193 1 321 1 153 2 112 1 43 1 327 2 331 1 
122 1 348 1 355 1 193 1 153 3 323 1 198 2 112 2 43 1 246 1 247 1 327 3 160 1 
187 1 18 1 354 1 348 1 355 1 268 2 193 1 153 2 112 1 198 1 43 1 246 1 103 1 327 2 213 1 
289 1 66 1 122 1 348 2 355 2 193 1 153 4 198 2 112 2 43 1 246 1 327 4 160 1 
193 1 153 1 112 1 43 1 246 1 327 1 348 1 355 1 
145 1 97 1 353 1 122 1 348 1 355 1 124 1 153 4 198 2 112 3 43 2 246 2 327 4 160 1 
298 1 313 1 348 1 374 1 355 1 193 1 153 2 112 1 198 1 43 1 246 1 327 2 
145 2 353 1 97 2 348 1 355 1 193 1 153 3 112 1 246 1 43 1 272 1 327 3 
243 2 112 2 9 1 359 1 
193 1 153 1 239 1 327 1 348 1 355 1 
193 1 153 2 112 1 198 1 43 1 246 1 247 1 327 2 348 1 355 1 
215 1 
193 1 153 1 112 1 43 1 246 1 327 1 348 1 355 1 
97 1 348 1 355 1 193 1 153 3 198 1 112 1 246 1 43 1 247 1 327 3 
124 1 112 1 122 1 160 1 
112 1 43 1 

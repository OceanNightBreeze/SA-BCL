#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 83 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 83 194 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 3 124 1 224 9 26 1 101 1 297 1 7 1 77 1 299 1 184 4 57 2 230 1 233 1 255 1 369 9 42 2 326 2 117 2 261 2 287 6 191 1 18 1 150 5 378 1 219 2 333 2 151 1 379 1 
94 3 124 1 224 9 26 1 101 1 297 1 7 1 77 1 299 1 184 4 57 2 230 1 233 1 255 1 369 9 42 2 326 2 117 2 261 2 287 6 191 1 18 1 150 5 378 1 219 2 333 2 151 1 379 1 
94 4 124 1 224 10 26 1 101 1 297 1 7 1 77 1 299 1 184 5 57 2 230 1 233 1 255 1 369 10 42 2 326 2 117 2 261 2 287 7 191 1 18 1 150 6 378 1 219 2 333 2 151 1 379 1 
94 2 124 1 224 7 101 1 297 1 7 1 77 1 299 1 184 3 57 1 230 1 233 1 255 1 369 7 42 2 326 2 117 2 261 2 287 4 191 1 18 1 150 4 378 1 219 2 333 2 151 1 379 1 
230 1 94 1 369 4 42 1 224 4 26 1 326 1 117 1 101 1 7 1 287 3 191 1 184 2 18 1 150 3 57 2 219 1 333 1 
230 1 233 1 152 1 369 2 42 1 358 1 224 2 117 1 7 1 202 1 261 1 18 1 150 1 219 1 333 1 379 1 
230 1 94 1 369 3 42 2 224 3 7 1 261 1 77 1 287 1 184 1 18 1 150 2 219 2 
94 3 224 9 26 1 101 1 7 1 77 1 299 1 184 4 160 1 57 2 230 1 255 1 369 9 42 2 171 1 326 1 117 1 261 1 287 7 191 1 18 1 150 5 219 2 333 1 
94 3 224 9 26 1 101 1 7 1 77 1 299 1 184 4 160 1 57 2 230 1 255 1 369 9 42 2 171 1 326 1 117 1 261 1 287 7 191 1 18 1 150 5 219 2 333 1 
182 1 291 1 81 1 
10 2 291 1 114 1 
110 2 368 2 95 2 158 2 235 2 365 1 22 2 86 1 
93 1 122 1 313 2 195 1 69 1 95 2 51 1 245 1 295 2 272 1 179 1 155 1 32 1 158 2 205 1 80 1 365 1 108 1 278 1 187 1 59 1 13 1 110 2 368 3 342 1 60 2 113 1 235 2 146 2 86 1 115 2 237 1 260 1 238 1 216 1 377 1 22 3 
231 1 110 1 188 1 368 1 118 1 95 1 158 1 235 1 22 1 86 1 
368 1 98 1 125 1 235 1 282 1 118 1 17 1 291 1 309 1 79 1 206 1 193 1 22 1 81 1 
110 1 368 1 95 1 125 2 235 1 282 1 118 1 17 1 158 1 291 1 79 2 309 1 193 1 22 1 81 1 
363 1 2 1 125 1 79 1 58 1 
363 1 2 1 125 2 291 1 79 2 336 1 325 1 81 1 
2 1 125 1 79 1 
231 1 110 1 188 1 368 1 95 1 125 1 235 1 86 1 363 1 43 1 118 1 158 1 79 1 22 1 
291 1 
35 1 363 1 2 1 125 2 291 1 79 2 325 1 81 1 
168 2 344 2 2 2 96 1 125 5 71 1 24 1 325 1 296 1 361 1 64 1 363 2 291 1 79 5 350 2 20 1 81 1 354 1 305 1 
182 1 365 1 
110 1 368 2 266 1 84 1 95 1 235 2 158 1 22 2 365 2 
37 1 214 1 375 1 
122 1 195 1 368 1 113 1 245 1 295 1 146 1 115 1 272 1 249 1 32 1 260 1 365 1 22 1 108 1 278 1 
122 1 195 1 110 1 368 2 293 1 49 1 95 1 113 1 245 1 295 1 235 1 146 1 272 1 115 1 260 1 32 1 214 1 22 2 108 1 278 1 
110 3 368 3 293 1 95 3 158 1 235 3 365 1 22 3 
110 1 188 1 368 1 118 1 95 1 235 1 22 1 
110 1 368 1 266 1 118 1 95 1 84 1 158 1 235 1 22 1 
93 1 122 1 313 1 195 1 69 1 293 1 95 3 49 1 125 1 51 1 245 1 295 1 272 1 155 1 181 1 183 1 32 1 158 2 79 1 205 1 365 1 108 1 278 1 13 1 110 3 342 1 368 4 60 2 84 1 113 1 235 3 282 1 146 1 86 1 115 1 237 1 260 1 118 1 17 1 216 1 309 1 377 1 193 1 22 4 
110 1 368 2 293 1 95 1 317 1 235 2 206 1 365 1 22 2 
110 3 368 3 293 2 84 1 49 1 95 3 125 1 235 3 282 1 181 1 362 1 118 1 17 1 158 1 291 1 79 1 309 1 193 1 22 3 
110 2 368 2 293 1 84 1 95 2 235 2 214 1 375 1 158 1 22 2 
122 1 195 1 368 1 113 1 295 1 245 1 146 1 115 1 272 1 32 1 260 1 365 1 22 1 108 1 278 1 
122 1 368 1 142 1 113 1 295 1 245 1 146 1 115 1 272 1 260 1 365 1 22 1 108 1 278 1 92 1 
313 4 69 1 51 1 197 1 28 1 155 1 300 1 163 1 205 1 229 1 59 2 37 2 232 1 60 2 279 1 237 1 328 1 214 2 288 1 216 1 330 1 375 2 46 1 377 2 
110 1 368 1 118 1 1 1 17 1 95 1 235 1 22 1 
265 1 110 4 368 5 293 2 95 4 84 1 49 1 317 1 235 5 9 1 158 1 206 1 22 5 365 1 
110 2 188 1 368 2 1 1 118 1 95 2 235 2 22 2 
275 1 3 1 
275 1 3 1 
82 1 54 1 
82 1 54 1 
82 1 54 1 
275 1 338 1 3 1 
209 1 275 1 3 1 
82 1 275 2 157 1 234 1 3 2 54 1 
275 1 338 1 3 1 
275 1 338 1 3 1 
275 1 3 1 347 1 
275 1 3 1 347 1 
275 1 3 1 347 1 
311 1 356 1 3 2 125 2 144 1 116 3 128 1 284 2 131 2 275 2 263 1 157 1 135 2 78 1 291 1 227 2 79 2 341 1 352 2 
3 1 315 1 95 2 125 1 72 1 246 1 130 1 131 1 275 1 135 1 159 1 227 1 79 1 138 1 365 1 110 2 209 1 368 2 144 1 235 2 116 1 45 1 22 2 352 1 
326 1 117 1 333 1 
152 1 117 1 333 1 
48 1 298 1 152 1 281 1 326 2 333 3 
298 1 152 1 281 1 326 1 333 2 121 1 
298 2 152 1 281 1 326 1 333 2 
2 1 125 5 271 1 72 1 361 2 296 3 363 4 337 2 159 1 10 3 204 1 79 5 138 1 302 1 277 1 81 1 229 1 367 2 208 1 168 1 343 1 279 1 344 1 114 1 325 1 259 1 328 1 350 1 291 2 46 1 20 1 332 2 
68 1 2 6 96 1 125 9 178 1 72 4 361 6 296 8 363 7 337 6 10 9 79 9 302 3 322 1 277 2 58 5 81 1 229 3 208 2 168 2 343 1 279 3 344 2 61 1 211 1 114 3 170 5 325 1 328 3 218 1 291 5 350 2 46 3 20 1 332 6 
96 1 125 3 271 1 72 1 296 3 361 2 363 2 337 2 10 4 204 1 79 3 302 1 277 1 81 1 229 1 208 1 367 1 168 1 344 1 279 1 114 2 328 1 291 3 350 1 46 1 332 2 
68 1 96 1 125 4 271 1 72 2 296 5 361 4 363 3 337 4 10 7 79 4 204 1 302 2 277 1 81 1 229 2 208 1 367 2 168 1 344 1 279 2 211 1 114 3 328 2 218 1 291 4 350 1 46 2 332 4 
182 1 239 1 245 1 
245 1 270 1 
156 1 
113 1 245 1 
239 2 113 1 245 3 192 1 106 1 272 1 
113 1 245 1 272 1 
111 1 245 1 
229 1 59 4 313 7 314 1 210 1 197 3 273 2 25 1 28 2 318 1 319 1 213 1 102 1 103 1 377 3 46 1 242 1 
229 1 59 4 313 7 314 1 210 1 197 3 273 2 25 1 28 2 318 1 319 1 213 1 102 1 103 1 377 3 46 1 242 1 
229 1 59 4 313 7 314 1 210 1 197 3 273 2 25 1 28 2 318 1 319 1 213 1 321 1 102 1 103 1 377 3 46 1 242 1 
313 6 243 1 69 1 153 1 51 1 197 2 273 1 318 1 28 1 25 1 155 1 319 1 102 1 11 1 59 3 60 2 147 1 237 1 327 1 213 1 173 1 310 1 377 3 242 2 
313 9 314 1 69 2 4 1 51 2 197 4 273 2 28 3 25 1 318 1 155 2 102 1 103 1 11 1 229 1 12 1 59 5 60 4 210 1 237 2 213 1 46 1 377 4 242 1 
334 1 196 1 48 1 152 1 5 1 295 1 224 2 74 1 7 1 134 1 139 1 108 1 230 1 254 1 39 1 369 2 146 1 16 1 42 1 115 1 326 1 117 1 260 1 261 1 287 1 18 1 150 1 219 1 220 1 333 2 
48 1 196 1 152 1 5 1 295 1 99 1 224 3 74 1 104 1 76 1 134 1 139 1 108 1 230 1 254 1 39 1 369 3 146 1 42 1 115 1 326 1 117 1 260 1 261 1 287 2 18 1 150 1 219 1 220 1 333 2 
230 1 254 1 48 1 196 1 152 1 369 2 295 1 5 1 146 1 224 2 115 1 326 1 117 1 74 1 104 1 260 1 76 1 261 1 287 2 134 1 18 1 150 1 139 1 108 1 333 2 
122 1 113 1 245 1 5 2 369 1 295 1 99 1 42 1 146 1 148 1 224 1 115 1 74 2 30 1 260 1 261 2 134 2 90 1 185 1 340 1 108 1 366 1 219 1 
254 1 48 1 196 1 334 1 39 1 152 1 369 1 295 1 5 1 42 1 146 1 224 1 115 1 326 1 117 1 74 1 7 1 104 1 260 1 261 1 134 1 139 1 108 1 220 1 219 1 333 2 
248 1 
2 6 98 1 97 1 294 2 295 2 245 1 296 2 247 2 250 1 8 2 10 2 251 1 206 1 165 2 108 1 109 1 208 1 168 1 344 1 113 1 114 2 15 2 115 2 258 1 260 1 118 1 17 1 350 1 309 1 20 1 22 1 122 2 175 1 125 5 225 1 27 1 361 2 129 1 30 1 136 1 185 1 79 5 186 2 81 1 368 1 324 4 235 1 282 1 146 2 325 3 372 1 291 2 376 2 193 1 331 1 
2 2 98 1 125 3 225 1 27 1 129 1 136 1 79 3 206 1 35 1 368 1 324 2 235 1 282 1 325 1 118 1 17 1 309 1 376 1 193 1 22 1 331 1 
2 1 98 1 125 3 225 1 27 1 129 1 136 1 8 1 79 3 206 1 81 1 35 1 368 1 324 3 235 1 282 1 325 1 118 1 17 1 309 1 291 1 193 1 22 1 331 1 
2 2 98 1 125 3 225 1 27 1 129 1 136 1 8 1 79 3 206 1 165 1 81 1 35 1 368 1 324 3 235 1 282 1 325 1 118 1 17 1 309 1 291 1 376 1 193 1 22 1 331 1 
312 1 2 7 175 1 98 1 125 5 294 2 225 1 360 1 27 1 361 1 296 1 129 1 247 2 8 4 136 1 79 5 186 2 206 1 165 4 81 5 35 1 168 1 368 1 344 1 324 6 114 2 235 1 282 1 15 2 370 1 62 1 325 3 258 1 118 1 17 1 350 1 291 5 309 1 376 4 20 1 193 1 22 1 331 1 23 1 
2 4 175 1 98 1 125 4 294 2 225 1 27 1 361 1 296 1 129 1 247 2 8 2 136 1 10 2 79 4 186 2 206 1 165 2 81 1 168 1 368 1 344 1 324 4 114 2 235 1 282 1 15 2 325 2 258 1 372 1 118 1 17 1 291 2 350 1 309 1 376 2 20 1 193 1 22 1 331 1 
312 1 2 4 175 1 98 1 125 4 294 2 225 1 27 1 360 1 361 1 296 1 129 1 247 2 8 2 136 1 79 4 186 2 206 1 165 2 81 1 368 1 168 1 344 1 324 4 114 2 235 1 282 1 15 2 325 2 370 1 258 1 118 1 17 1 291 1 309 1 350 1 376 2 193 1 20 1 22 1 331 1 
312 1 2 4 175 1 98 1 125 4 294 2 225 1 27 1 360 1 361 1 296 1 129 1 247 2 8 2 136 1 79 4 186 2 206 1 165 2 81 1 368 1 168 1 344 1 324 4 114 2 235 1 282 1 15 2 325 2 370 1 258 1 118 1 17 1 291 1 309 1 350 1 376 2 193 1 20 1 22 1 331 1 
312 1 2 4 98 1 125 4 225 1 27 1 100 1 296 1 361 1 129 1 247 2 8 2 136 1 10 2 276 2 79 4 206 1 161 1 164 1 165 2 81 1 368 1 168 1 344 1 324 4 235 1 282 1 15 2 325 2 258 1 118 1 17 1 264 2 291 1 309 1 350 1 376 2 193 1 20 1 22 1 331 1 
312 1 2 5 175 1 98 1 125 4 294 2 225 1 27 1 360 1 361 1 296 1 129 1 247 2 136 1 8 3 79 4 186 2 206 1 165 3 81 1 168 1 368 1 344 1 324 5 114 2 235 1 282 1 15 2 325 2 370 1 62 1 258 1 118 1 17 1 291 1 350 1 309 1 376 3 20 1 193 1 22 1 331 1 
312 1 2 5 175 1 98 1 125 4 294 2 225 1 27 1 360 1 361 1 296 1 129 1 247 2 136 1 8 3 79 4 186 2 206 1 165 3 81 1 168 1 368 1 344 1 324 5 114 2 235 1 282 1 15 2 325 2 370 1 62 1 258 1 118 1 17 1 291 1 350 1 309 1 376 3 20 1 193 1 22 1 331 1 
2 4 98 1 125 4 225 1 27 1 296 1 361 1 129 1 247 2 8 2 136 1 10 2 276 2 79 4 206 1 164 1 165 2 81 1 168 1 368 1 344 1 324 4 235 1 282 1 15 2 325 2 258 1 372 1 118 1 17 1 264 2 291 1 350 1 309 1 376 2 20 1 193 1 22 1 331 1 
313 6 314 1 69 1 51 1 197 2 273 1 318 1 28 2 155 1 182 1 103 1 205 1 365 2 229 1 59 3 37 1 60 2 210 1 237 1 213 1 214 1 216 1 375 1 330 1 46 1 377 3 
313 22 69 2 153 4 51 2 197 4 25 2 6 2 28 2 155 2 205 1 302 4 365 1 229 4 13 1 59 13 37 16 60 4 279 4 280 2 147 1 237 2 285 1 328 2 238 1 173 4 214 16 216 2 329 1 374 1 375 6 377 9 46 2 353 1 
122 1 195 1 313 2 293 1 69 1 95 1 49 1 245 1 295 1 51 1 272 1 155 1 249 1 32 1 53 1 205 1 365 1 108 1 304 1 278 1 110 1 13 1 59 1 368 2 60 2 113 1 235 1 146 1 115 1 237 1 260 1 238 1 216 1 329 1 375 1 19 1 377 1 22 2 
195 2 293 1 49 1 95 1 295 3 51 3 245 2 197 8 155 3 104 1 103 1 205 3 56 2 162 2 302 2 108 2 13 1 110 1 59 10 342 2 60 6 210 1 113 2 115 3 213 1 260 2 65 2 214 7 216 3 119 1 22 3 122 1 313 20 314 1 357 1 69 3 273 1 272 2 318 1 28 4 25 4 32 2 137 1 364 2 365 2 278 2 229 3 368 3 37 7 279 2 235 1 146 3 237 3 328 2 238 1 329 1 375 7 46 3 377 10 
244 1 293 1 95 1 51 2 295 7 245 4 155 2 104 1 205 2 108 3 13 1 59 1 110 1 60 4 113 3 212 1 115 6 260 4 216 2 22 1 351 1 122 2 313 2 69 2 272 1 179 2 30 1 75 1 185 1 368 1 141 1 41 1 235 1 146 7 283 1 237 2 87 1 190 1 373 1 238 1 89 1 330 1 377 1 
313 3 69 1 95 1 51 1 197 1 28 1 155 1 158 1 205 1 302 1 229 1 110 1 59 1 368 1 37 1 60 2 279 1 84 1 235 1 237 1 328 1 214 1 216 1 329 1 375 1 46 1 377 2 47 1 22 1 
229 1 313 2 59 2 37 1 60 2 279 1 69 1 51 1 197 1 25 1 237 1 155 1 214 1 288 1 216 1 375 1 330 1 205 1 
313 2 37 1 60 2 69 1 51 1 197 1 28 1 237 1 155 1 328 1 214 1 216 1 375 1 330 1 205 1 163 1 46 1 377 2 
313 4 69 1 51 1 197 2 25 1 28 1 155 1 302 1 205 1 229 1 59 2 37 2 279 1 60 2 237 1 328 1 214 2 216 1 330 1 375 2 46 1 377 2 
229 1 313 2 59 2 37 1 60 2 279 1 69 1 51 1 197 1 25 1 237 1 155 1 75 1 214 1 288 1 216 1 375 1 205 1 
313 2 37 1 60 2 69 1 51 1 197 1 28 1 237 1 155 1 75 1 328 1 214 1 216 1 375 1 205 1 163 1 46 1 377 2 
313 4 69 1 51 1 197 2 25 1 28 1 155 1 75 1 302 1 205 1 229 1 59 2 37 2 279 1 60 2 237 1 328 1 214 2 216 1 375 2 46 1 377 2 
313 4 69 1 51 1 197 2 25 1 28 1 155 1 302 1 205 1 229 1 59 2 37 2 279 1 60 2 237 1 328 1 214 2 216 1 375 2 46 1 377 2 
122 1 313 2 195 1 69 1 295 1 245 1 51 1 272 1 155 1 32 1 205 1 365 1 108 1 278 1 59 1 13 1 342 1 368 1 60 2 113 1 146 1 115 1 237 1 260 1 238 1 216 1 377 1 22 1 
122 1 313 2 69 1 295 1 245 1 51 1 359 1 272 1 155 1 205 1 365 1 108 1 278 1 59 1 13 1 368 1 142 1 60 2 113 1 146 1 115 1 237 1 260 1 238 1 216 1 377 1 22 1 92 1 
313 4 69 1 51 1 197 2 25 1 28 1 155 1 302 1 205 1 229 1 59 2 37 2 279 1 60 2 237 1 328 1 214 2 216 1 329 1 375 2 46 1 377 2 
313 4 195 1 69 1 295 1 245 1 51 1 197 2 272 1 28 1 25 1 155 1 32 1 56 1 205 1 302 1 108 1 278 1 229 1 59 2 342 1 368 1 37 2 279 1 60 2 113 1 146 1 16 1 115 1 237 1 328 1 260 1 214 2 216 1 375 2 377 2 46 1 22 1 
313 3 69 1 95 1 51 1 197 1 25 1 155 1 203 1 158 1 205 1 302 1 229 1 110 1 59 2 368 1 37 1 60 2 279 1 84 1 235 1 237 1 328 1 214 1 216 1 329 1 375 1 377 1 46 1 22 1 
313 33 314 1 69 4 153 2 176 1 51 4 335 1 197 6 273 1 318 1 25 3 28 3 155 4 320 1 29 1 103 1 11 2 302 3 303 1 253 1 12 1 229 4 59 17 60 8 279 3 345 1 210 1 85 1 147 2 371 1 237 4 213 1 88 3 328 3 173 2 240 1 215 1 46 4 377 16 174 1 120 1 
313 46 69 3 176 1 153 4 51 3 335 1 197 8 25 4 6 2 28 4 155 3 320 1 29 2 11 2 302 7 303 1 253 1 12 1 229 7 59 24 60 6 279 7 85 2 280 2 147 2 371 1 237 3 88 4 328 6 173 4 289 1 240 1 215 1 377 22 46 6 120 1 
153 5 51 4 335 1 197 13 6 2 155 4 103 2 11 2 302 7 303 1 253 1 12 1 59 33 60 8 210 2 345 1 213 2 173 5 215 1 120 1 313 60 314 2 69 4 176 1 273 2 28 6 25 7 318 2 320 1 29 2 229 9 279 7 280 2 85 1 147 3 371 1 237 4 88 4 328 5 289 1 240 1 241 1 46 7 377 27 
313 35 314 1 69 4 153 2 176 1 51 4 335 1 197 5 273 1 318 1 25 3 28 2 155 4 320 1 29 1 103 1 11 2 302 3 303 1 253 1 12 1 229 4 59 18 60 8 279 3 345 1 210 1 85 1 147 2 371 1 237 4 213 1 88 4 328 3 173 2 289 1 240 1 215 1 46 4 377 17 120 1 
313 42 314 1 69 3 176 1 153 3 51 3 335 1 197 8 273 1 318 1 25 3 6 1 28 5 155 3 320 1 29 1 103 1 11 2 302 5 303 1 253 1 12 1 229 6 59 22 60 6 279 5 210 1 85 1 280 1 147 2 371 1 237 3 213 1 88 4 328 4 173 3 289 1 240 1 215 1 377 20 46 5 120 1 
292 1 131 1 356 1 275 1 157 1 3 1 135 1 78 1 227 1 352 1 
209 1 45 1 
131 1 275 1 3 1 135 1 346 1 227 1 223 1 149 1 352 1 
311 1 356 1 3 1 144 1 125 1 116 2 128 1 284 1 131 1 275 1 157 1 135 1 78 1 291 1 79 1 227 1 341 1 352 1 
311 1 356 1 3 1 144 1 125 1 116 2 128 1 284 1 131 1 275 1 157 1 135 1 78 1 291 1 79 1 227 1 341 1 352 1 
311 1 356 1 3 1 144 1 125 1 116 2 128 1 284 1 131 1 275 1 157 1 135 1 78 1 291 1 79 1 227 1 341 1 352 1 
338 1 234 1 169 1 
338 1 234 1 169 1 
201 1 347 1 
201 1 234 1 347 1 
130 1 246 1 
311 1 3 1 315 1 95 2 125 1 72 1 246 1 130 1 131 1 363 1 275 1 133 1 135 1 159 1 79 1 227 1 138 1 365 1 110 2 209 1 368 2 235 2 116 1 284 1 45 1 22 2 352 1 
338 1 169 1 
201 1 234 1 347 1 
313 2 69 1 244 1 245 1 295 2 51 1 179 2 154 1 155 1 132 1 205 1 108 1 166 1 59 1 13 1 368 2 14 1 60 2 113 1 145 1 235 2 146 2 115 2 237 1 260 1 238 1 216 1 329 1 377 1 351 1 22 2 
254 1 48 1 196 1 36 1 39 1 152 1 295 2 5 1 146 2 16 1 115 2 326 1 117 1 349 1 104 1 260 1 339 1 108 1 333 2 
254 1 48 1 196 1 39 1 152 1 295 1 5 1 146 1 115 1 326 1 117 1 349 1 104 1 260 1 108 1 333 2 66 1 
122 1 0 1 113 1 245 1 295 1 5 1 146 1 115 1 30 1 260 1 339 1 185 1 340 1 108 1 
254 1 48 1 196 1 36 1 39 1 152 1 295 1 5 1 146 1 115 1 326 1 117 1 349 1 104 1 260 1 339 1 108 1 333 2 
267 1 
182 1 291 1 71 1 296 1 81 1 361 1 354 1 
2 1 175 1 125 1 294 1 361 1 296 1 10 1 79 1 186 1 81 1 168 1 344 1 114 1 325 1 350 1 291 2 20 1 
2 5 245 10 295 3 296 9 199 1 337 6 10 12 55 2 207 1 162 2 302 2 108 3 109 1 208 2 111 2 168 4 344 4 113 3 114 6 16 1 115 3 257 2 260 4 350 4 20 4 21 2 67 1 354 1 122 1 222 1 125 5 71 1 269 2 270 3 272 3 361 8 180 2 31 1 33 2 79 5 34 2 81 2 229 2 140 2 279 2 146 3 325 3 328 2 239 2 291 8 192 1 193 2 46 2 332 6 
2 1 176 1 153 2 125 1 335 1 6 1 296 13 361 8 337 8 105 1 10 10 79 1 55 1 301 1 34 3 302 4 81 2 109 1 253 1 229 4 208 1 168 2 344 2 279 4 280 1 114 5 147 1 325 1 328 4 173 2 215 1 350 2 291 7 20 2 46 4 332 8 120 1 
95 1 125 1 318 1 361 2 296 2 158 1 79 1 55 1 34 2 229 2 231 1 110 1 188 1 368 1 168 1 344 1 210 1 235 1 370 1 86 1 213 1 189 1 43 1 118 1 350 1 20 1 46 1 22 1 
168 1 344 1 71 1 361 1 296 1 350 1 291 1 20 1 81 1 354 1 
229 2 279 2 114 5 361 5 296 5 328 2 337 5 10 10 291 5 55 1 34 2 162 1 302 2 46 2 332 5 
2 1 125 1 291 1 79 1 325 1 81 1 
122 2 2 4 96 1 125 3 245 2 295 4 272 1 296 2 361 2 199 1 30 1 250 1 251 1 79 3 185 1 108 2 109 2 208 2 168 2 141 1 344 2 113 2 146 4 283 1 115 4 325 2 87 1 308 1 260 3 89 1 44 1 350 2 20 1 67 2 
122 1 93 1 313 1 195 1 69 1 95 2 51 1 295 1 245 1 272 1 155 1 32 1 158 2 205 1 365 1 108 1 278 1 13 1 110 2 368 3 342 1 60 2 113 1 235 2 146 1 115 1 86 1 237 1 260 1 216 1 377 1 22 3 
208 1 168 1 344 1 114 2 273 1 361 2 296 1 337 2 10 4 350 1 291 4 20 1 332 2 81 2 109 1 
131 1 221 1 135 1 
200 1 130 1 131 1 135 1 78 1 
131 1 221 1 135 1 
131 1 221 1 135 1 
167 1 131 1 135 1 
167 1 131 1 135 1 
167 1 131 1 135 1 
131 1 135 1 
275 1 3 1 
229 1 313 8 59 4 314 1 60 4 210 1 69 2 51 2 197 3 273 1 25 1 28 2 237 2 318 1 155 2 213 1 103 1 11 1 46 1 377 4 
229 1 59 3 313 6 314 1 210 1 197 2 273 1 318 1 28 2 213 1 182 1 103 1 377 3 46 1 
229 1 59 2 313 4 60 2 279 1 69 1 51 1 197 2 28 1 237 1 25 1 155 1 328 1 286 1 377 2 46 1 302 1 
229 2 313 12 59 6 279 2 153 2 280 1 197 2 147 1 25 1 6 1 28 1 328 2 173 2 377 6 302 2 46 2 
313 23 314 1 69 2 153 2 51 2 197 9 273 1 318 2 25 4 28 5 6 1 155 2 103 1 11 2 302 2 229 3 59 11 279 2 60 4 210 1 280 1 237 2 213 2 285 1 328 2 173 2 310 1 377 12 46 3 
313 1 153 1 377 1 
313 1 59 1 173 1 
229 1 313 6 59 3 60 2 279 1 69 1 51 1 197 3 237 1 25 1 28 2 155 1 328 1 286 1 162 1 377 3 302 1 46 1 
313 22 69 1 153 2 176 1 51 1 335 1 197 4 28 2 6 1 25 2 155 1 302 4 253 1 12 1 229 4 59 11 60 2 279 4 280 1 147 1 237 1 328 4 173 2 215 1 377 11 46 4 120 1 
229 1 59 3 313 6 210 1 197 2 318 1 28 1 25 1 213 1 46 1 377 3 
59 1 313 3 314 1 60 2 69 1 51 1 197 2 25 1 28 1 318 1 237 1 155 1 213 1 103 1 11 1 310 1 377 2 
12 1 229 2 59 5 313 10 60 2 69 1 210 1 51 1 197 5 237 1 318 2 28 3 25 2 155 1 189 1 213 2 377 5 46 2 
12 1 229 1 59 2 313 2 60 2 279 1 69 1 51 1 197 1 237 1 25 1 155 1 
12 1 229 1 59 2 313 4 60 2 279 1 69 1 51 1 197 2 28 1 237 1 25 1 155 1 328 1 377 2 46 1 302 1 
12 1 313 3 59 1 60 6 345 1 69 3 51 3 197 2 237 3 318 1 28 1 25 1 155 3 213 1 11 1 310 1 377 2 
313 15 314 1 69 4 153 1 51 4 197 6 25 3 318 2 28 3 155 4 103 1 11 1 229 2 12 1 59 7 60 8 210 1 345 1 147 1 237 4 327 1 189 1 213 2 286 1 173 1 310 1 46 2 377 8 
313 24 314 1 69 2 153 1 176 1 51 2 335 1 197 9 273 1 318 2 25 4 28 5 155 2 103 1 11 1 302 2 253 1 12 1 229 5 59 14 60 4 279 2 210 2 147 1 237 2 189 1 213 2 328 1 173 1 215 1 377 10 46 4 120 1 
313 17 314 1 69 3 153 1 176 1 51 3 335 1 197 4 273 1 318 1 25 1 28 3 155 3 103 1 11 1 302 2 253 1 12 1 229 3 59 10 60 6 279 2 210 1 147 1 237 3 213 1 328 1 286 1 173 1 215 1 377 7 46 2 120 1 
313 29 314 1 69 3 153 2 176 1 51 3 335 1 197 6 273 1 318 1 28 4 6 1 25 2 155 3 103 1 11 1 302 4 253 1 12 1 229 5 59 14 60 6 279 4 210 1 280 1 147 1 237 3 213 1 328 4 286 1 173 2 215 1 377 15 46 5 120 1 
313 27 314 1 69 3 153 2 176 1 51 3 335 1 197 7 273 1 318 1 28 4 6 1 25 3 155 3 103 1 11 1 302 4 253 1 12 1 229 5 59 15 60 6 279 4 210 1 280 1 147 1 237 3 213 1 328 3 286 1 173 2 215 1 377 12 46 4 120 1 
313 24 314 1 69 2 153 1 176 1 51 2 335 1 197 9 273 1 318 2 25 4 28 5 155 2 103 1 11 1 302 2 253 1 12 1 229 5 59 14 60 4 279 2 210 2 147 1 237 2 189 1 213 2 328 1 173 1 215 1 377 10 46 4 120 1 
313 22 69 1 153 2 176 1 51 1 335 1 197 4 28 2 6 1 25 2 155 1 302 4 253 1 12 1 229 4 59 11 60 2 279 4 280 1 147 1 237 1 328 4 173 2 215 1 377 11 46 4 120 1 
313 28 314 1 69 4 176 1 153 2 51 4 335 1 197 7 273 1 318 1 28 4 6 1 25 3 155 4 103 1 11 2 302 4 253 1 12 1 229 5 59 15 60 8 279 4 210 1 280 1 147 1 237 4 213 1 328 3 286 1 173 2 215 1 377 13 46 4 120 1 
313 7 69 2 153 2 51 2 197 1 28 1 155 2 302 1 12 1 229 1 59 3 60 4 279 1 345 1 280 1 147 1 237 2 328 1 173 1 377 4 46 1 120 1 
229 1 313 7 59 3 314 2 210 1 197 6 318 3 28 3 25 3 213 3 103 1 377 4 46 1 
313 7 69 2 153 2 51 2 197 1 28 1 155 2 302 1 12 1 229 1 59 3 60 4 279 1 345 1 280 1 147 1 237 2 328 1 173 1 377 4 46 1 120 1 
83 1 
172 1 306 1 262 1 83 1 228 1 194 1 
122 1 182 1 30 1 260 1 113 1 245 1 185 1 295 1 146 1 115 1 108 1 
122 1 110 1 195 1 368 2 293 1 95 1 113 1 245 1 295 1 235 1 146 1 272 1 115 1 260 1 365 1 22 2 108 1 278 1 
195 1 293 1 95 1 295 1 245 3 272 2 180 1 365 1 108 1 278 1 110 2 111 1 368 2 113 2 235 2 282 1 146 1 115 1 260 1 118 1 17 1 22 2 67 1 
293 1 95 1 295 2 245 3 272 2 180 1 365 1 108 1 278 1 110 2 111 1 368 2 142 1 113 2 235 2 282 1 348 1 146 2 115 2 260 1 118 1 17 1 22 2 67 1 
355 1 122 1 2 1 125 2 245 4 295 3 270 1 272 1 180 1 252 1 79 2 108 1 81 1 111 1 113 1 348 1 146 3 115 3 260 1 239 1 291 1 193 1 67 1 
122 1 111 1 2 1 113 1 125 2 295 3 245 4 270 1 348 1 146 3 272 1 115 3 257 1 180 1 260 1 239 1 291 1 79 2 193 1 108 1 81 1 67 1 
260 1 295 1 41 1 146 1 115 1 108 1 
122 2 113 2 295 6 245 3 41 1 212 1 40 1 146 6 115 5 272 1 283 1 87 1 179 1 190 1 104 1 373 1 260 3 192 1 351 1 108 2 
313 6 195 1 314 1 293 1 69 2 95 1 245 1 51 2 295 1 197 2 273 1 272 1 28 2 318 1 154 1 155 2 103 1 32 1 205 2 56 1 365 2 108 1 278 1 229 1 59 3 110 1 368 2 342 1 37 1 60 4 210 1 113 1 235 1 16 1 146 1 115 1 237 2 213 1 260 1 214 1 65 1 216 2 329 1 375 1 377 3 46 1 22 2 
122 1 2 2 125 3 71 1 295 1 269 1 245 2 270 1 296 1 361 1 199 1 363 1 79 3 33 1 81 1 168 2 140 1 344 2 146 1 115 1 325 1 257 1 239 1 291 1 350 2 20 2 193 1 354 1 
113 1 295 2 245 2 41 1 16 1 146 2 115 2 272 1 260 2 239 1 192 1 207 1 108 1 
122 1 113 1 295 4 245 1 348 1 146 4 16 1 115 4 63 1 30 1 260 1 185 1 108 1 
141 1 357 1 113 1 295 2 245 1 146 2 115 2 272 1 283 1 87 1 260 2 89 1 108 1 67 1 
122 1 196 1 260 1 152 1 295 1 146 1 115 1 108 1 117 1 333 1 
104 1 260 1 113 1 245 1 295 2 146 2 16 1 351 1 115 2 108 1 166 1 
122 1 113 2 295 5 245 3 146 5 16 1 115 4 63 1 190 1 30 1 373 1 260 2 185 1 351 1 108 2 67 1 
122 1 112 1 113 2 295 5 245 3 146 5 16 1 115 4 63 1 190 1 30 1 260 2 185 1 351 1 108 2 67 1 
122 1 110 1 368 2 142 1 293 1 95 1 113 1 245 1 295 1 235 1 146 1 272 1 115 1 260 1 365 1 22 2 108 1 278 1 
113 1 295 1 245 1 40 1 146 1 115 1 272 1 283 1 87 1 260 2 192 1 108 1 67 1 
368 1 14 1 268 1 145 1 235 1 274 1 132 1 107 1 22 1 
70 1 268 1 91 1 
143 1 268 1 365 1 107 1 274 1 
268 1 70 1 143 2 125 2 282 1 274 2 181 1 363 1 118 1 17 1 217 1 291 1 79 2 309 1 193 1 365 1 107 2 81 1 91 1 
230 1 182 1 18 1 150 1 
230 1 18 1 369 1 150 1 42 1 224 1 219 1 
261 1 224 1 74 1 
230 1 323 1 177 1 369 3 316 1 42 1 224 3 7 1 18 1 150 1 219 1 379 2 
230 1 287 1 18 1 369 2 150 1 57 1 42 1 224 2 219 1 
369 1 42 1 224 1 326 1 117 1 101 1 7 1 184 1 150 1 219 1 333 1 
230 1 7 1 369 1 150 1 42 1 224 1 219 1 
230 2 7 1 18 1 369 1 42 1 224 1 219 1 
230 1 369 2 126 1 42 2 307 1 224 2 226 1 7 1 150 1 219 2 
230 1 94 1 255 1 369 3 42 1 224 3 7 1 299 1 287 2 184 1 18 1 150 2 219 1 
230 1 48 1 152 1 369 2 42 1 224 2 326 1 117 1 7 1 287 1 290 1 18 1 150 1 219 1 333 2 
230 1 94 1 369 4 42 2 224 4 26 1 7 1 287 2 184 1 18 1 150 2 57 1 219 2 
230 1 7 1 18 1 369 1 150 1 42 1 224 1 219 1 
230 2 94 1 323 1 316 1 369 4 42 1 224 4 256 1 287 2 184 1 18 2 150 3 219 1 379 1 
230 1 7 1 38 1 287 1 52 1 18 1 369 2 150 1 42 1 224 2 171 1 219 1 
230 1 323 2 316 1 369 3 42 1 224 3 198 1 7 1 18 1 150 1 219 1 379 2 
50 1 150 2 236 2 73 1 
7 1 369 1 42 1 224 1 127 1 219 1 
230 1 7 1 287 1 255 1 18 1 369 2 150 1 42 1 224 2 219 1 
123 1 
230 1 7 1 18 1 369 1 150 1 42 1 224 1 219 1 
230 1 255 1 369 3 42 1 224 3 7 1 287 1 18 1 150 1 219 1 379 1 
94 1 184 1 150 1 256 1 
230 1 150 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (10,125,153,265) (10,125,153,265) (47,83,131,316) 44 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (10,125,153,265) (10,125,153,265) (47,83,131,316) 44 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 294 24 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 294 172 323 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 294 172 155 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 294 117 79 309 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 294 172 46 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 294 24 177 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 294 194 108 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 294 287 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 294 172 155 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 294 287 142 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 294 172 155 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 294 172 7 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 294 172 7 277 171 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 172 7 277 171 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 172 7 277 186 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 294 287 142 300 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 294 287 142 300 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 294 172 7 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 294 172 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 294 (18,56) 299 146 (232,367) 15 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 294 172 267 257 87 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 294 172 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 294 194 108 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 294 (42,206) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 294 (18,56) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 294 (18,56) 299 146 (232,367) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (10,125,153,265) (10,125,153,265) (47,83,131,316) (47,83,131,316) (47,83,131,316) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
343 1 344 3 316 1 274 2 295 9 153 6 297 1 39 1 21 1 111 1 278 1 251 4 115 5 182 2 306 1 97 1 359 1 72 1 265 9 10 2 31 2 331 1 363 1 125 2 195 1 216 2 17 2 313 1 
343 1 344 3 316 1 274 2 295 9 153 6 297 1 39 1 21 1 111 1 278 1 251 4 115 5 182 2 306 1 97 1 359 1 72 1 265 9 10 2 31 2 331 1 363 1 125 2 195 1 216 2 17 2 313 1 
343 1 344 4 316 1 274 2 295 10 153 7 297 1 39 1 21 1 111 1 278 1 251 5 115 6 182 2 306 1 97 1 359 1 72 1 265 10 10 2 31 2 331 1 363 1 125 2 195 1 216 2 17 2 313 1 
343 1 344 2 316 1 274 2 295 7 153 4 297 1 39 1 21 1 111 1 278 1 251 3 115 4 182 2 97 1 359 1 72 1 265 7 10 2 31 2 331 1 363 1 125 2 195 1 216 2 17 1 313 1 
343 1 306 1 344 1 316 1 274 1 295 4 153 3 72 1 10 1 265 4 111 1 278 1 125 1 251 2 216 1 17 2 115 3 182 1 
343 1 97 1 274 1 295 2 72 1 39 1 10 1 265 2 31 1 364 1 278 1 125 1 216 1 115 1 241 1 128 1 
343 1 344 1 278 1 153 1 251 1 295 3 125 2 72 1 265 3 10 2 115 2 31 1 331 1 
44 1 153 1 295 1 125 1 72 1 131 1 265 2 10 1 
44 1 153 1 295 1 125 1 72 1 131 1 265 2 10 1 
311 1 221 1 183 1 
138 2 221 1 57 1 
113 2 1 1 346 2 326 2 356 2 349 2 291 2 68 1 
18 1 1 1 152 1 346 2 60 1 275 1 3 1 349 2 352 1 113 2 353 2 90 1 354 1 324 1 355 1 326 3 356 2 180 2 68 1 69 1 256 1 116 1 327 1 259 1 260 1 307 2 119 1 332 1 285 1 336 1 126 1 55 1 84 1 150 2 369 2 370 1 291 3 
113 1 346 1 280 1 326 1 356 1 349 1 270 1 250 1 291 1 68 1 
246 1 199 1 221 1 235 1 212 1 311 1 104 1 356 1 326 1 269 1 196 1 95 1 270 1 291 1 
346 1 199 1 349 1 221 1 212 2 113 1 311 1 104 1 356 1 326 1 269 1 196 2 95 1 270 1 291 1 
63 1 294 1 24 1 196 1 212 1 
63 1 294 1 323 1 196 1 172 1 212 1 
294 1 196 1 212 1 
346 1 280 1 349 1 250 1 212 1 113 1 63 1 65 1 356 1 326 1 196 1 270 1 68 1 291 1 
221 1 
63 1 294 1 155 1 196 1 172 1 212 1 
79 1 176 1 63 2 294 1 309 1 234 1 286 1 117 1 196 3 212 3 12 1 
1 1 183 1 
1 2 346 1 349 1 41 1 113 1 238 1 356 2 326 2 291 2 
262 1 32 1 62 1 
18 1 256 1 1 1 259 1 275 1 119 1 90 1 354 1 126 1 326 1 180 1 37 1 150 1 369 1 370 1 291 1 
256 1 18 1 346 1 259 1 275 1 144 1 119 1 62 1 113 1 90 1 354 1 53 1 126 1 356 1 326 2 180 1 150 1 369 1 370 1 291 2 
1 1 45 1 246 1 346 4 144 1 349 1 283 1 113 4 238 1 23 1 53 2 356 5 326 5 291 5 
113 2 346 2 280 1 326 2 356 2 81 1 270 1 291 2 
113 3 1 1 346 3 53 1 326 3 356 3 349 1 291 3 
113 1 346 1 280 1 326 1 356 1 270 1 291 1 
113 1 238 1 346 1 326 1 356 1 349 1 270 1 41 1 291 1 
18 1 293 1 1 1 152 1 199 1 346 3 60 1 275 1 3 1 349 2 352 1 113 3 353 2 90 1 354 1 326 4 356 3 180 1 95 1 69 1 68 1 256 1 116 1 327 1 259 1 260 1 144 1 307 1 119 1 212 1 332 1 238 1 336 1 53 1 126 1 104 1 269 1 196 1 270 1 370 1 150 1 369 1 271 1 291 4 
113 1 1 1 246 1 346 1 53 1 326 2 356 2 283 1 291 2 
293 1 346 3 199 1 144 1 98 1 349 1 221 1 212 1 113 3 238 1 53 2 104 1 269 1 356 3 326 3 196 1 270 1 95 1 291 3 
346 2 349 1 32 1 62 1 113 2 238 1 53 1 356 2 326 2 291 2 
18 1 256 1 1 1 259 1 275 1 119 1 90 1 354 1 126 1 326 1 180 1 150 1 369 1 370 1 291 1 
256 1 1 1 259 1 275 1 119 1 90 1 354 1 126 1 326 1 127 1 180 1 206 1 150 1 369 1 291 1 
152 1 219 1 60 1 348 1 3 2 201 1 173 1 249 1 62 2 352 1 353 2 355 2 116 1 327 1 262 2 32 2 307 4 191 1 332 1 51 1 365 1 13 1 290 1 314 1 
113 1 346 1 104 1 326 1 356 1 81 1 270 1 291 1 
263 1 339 1 
263 1 339 1 
358 1 282 1 
358 1 282 1 
358 1 282 1 
263 1 339 1 304 1 
263 1 339 1 304 1 
263 1 302 1 339 1 
358 1 124 1 239 1 263 2 282 1 339 2 
263 1 339 1 304 1 
263 1 164 1 339 1 
263 1 164 1 339 1 
263 1 164 1 339 1 
244 1 161 1 1 1 198 1 328 1 346 2 9 1 263 1 211 1 203 1 302 1 35 1 212 1 77 1 113 2 226 1 158 1 326 2 356 2 196 1 338 1 339 1 291 2 357 1 
161 3 263 2 264 1 221 1 120 1 203 2 212 2 225 1 226 2 158 2 52 1 92 1 54 1 239 1 196 2 240 2 338 1 339 2 357 2 
274 1 216 1 182 1 
364 1 274 1 216 1 
364 1 170 1 273 1 274 3 49 1 182 2 
364 1 170 1 274 2 210 1 49 1 182 1 
364 1 170 1 274 2 182 1 49 2 
63 1 294 1 46 1 196 1 172 1 212 1 
177 1 63 2 294 1 24 1 220 1 196 2 212 2 340 1 
292 3 221 3 249 1 156 2 176 1 63 2 22 1 64 1 25 2 137 1 138 4 234 1 329 1 328 1 11 1 284 2 212 3 12 1 166 1 365 1 286 1 311 1 196 3 57 2 290 1 314 1 
19 1 292 5 221 4 249 2 156 4 176 1 63 3 22 2 64 1 25 4 138 7 137 1 94 1 234 1 329 1 328 2 266 1 284 4 11 1 212 4 12 1 166 2 365 2 286 1 311 1 196 4 57 3 290 2 314 2 
259 1 253 1 183 1 
259 1 169 1 
174 1 
256 1 259 1 275 1 
315 1 259 1 
259 1 275 1 
256 1 259 2 275 1 174 1 334 1 253 2 141 1 
200 1 3 3 201 2 360 1 110 1 173 3 307 7 249 1 361 1 112 1 134 1 80 1 193 1 26 1 355 4 290 1 59 2 
200 1 3 3 201 2 360 1 110 1 173 3 307 7 249 1 361 1 112 1 134 1 80 1 193 1 26 1 355 4 290 1 59 2 
200 1 3 3 201 2 360 1 110 1 173 3 307 7 249 1 361 1 112 1 224 1 134 1 193 1 80 1 26 1 355 4 290 1 59 2 
20 1 86 4 200 1 60 1 2 1 3 15 201 5 298 1 110 1 222 1 173 10 249 4 351 1 112 1 352 1 22 3 353 2 134 2 355 16 26 2 116 1 258 1 360 2 74 3 307 31 361 5 332 1 365 3 193 1 80 2 312 1 290 4 59 3 314 3 
60 2 200 1 3 4 201 3 173 4 249 1 351 1 112 1 352 2 89 1 353 4 134 1 355 5 26 1 116 2 360 1 307 9 361 1 332 2 80 1 193 1 82 1 290 1 59 2 
343 1 85 1 245 1 273 1 274 2 153 1 295 2 223 1 132 1 278 1 354 1 115 1 180 1 254 1 182 1 143 1 72 1 265 2 10 1 31 1 147 1 76 1 364 1 125 1 16 1 126 1 216 1 289 1 369 1 150 1 
343 1 85 1 245 1 273 1 274 2 295 3 153 2 223 1 132 1 321 1 278 1 354 1 252 1 115 1 180 1 182 1 30 1 143 1 265 3 10 1 31 1 147 1 76 1 364 1 125 1 126 1 216 1 289 1 369 1 150 1 
343 1 85 1 245 1 273 1 274 2 295 2 153 2 132 1 278 1 354 1 252 1 115 1 180 1 182 1 30 1 265 2 31 1 147 1 76 1 364 1 126 1 216 1 289 1 369 1 150 1 
85 2 295 1 275 1 321 1 354 1 91 1 180 1 231 1 207 1 259 1 265 1 10 1 31 2 119 1 147 2 101 1 214 1 125 1 103 1 126 1 289 2 369 1 150 1 
30 1 245 1 143 1 85 1 273 1 274 2 295 1 72 1 10 1 265 1 223 1 31 1 132 1 76 1 147 1 364 1 354 1 125 1 126 1 216 1 289 1 180 1 254 1 182 1 150 1 369 1 
36 1 
292 1 108 1 294 1 234 1 119 1 11 1 34 1 212 1 12 1 286 1 194 1 196 1 180 1 150 1 369 1 
294 1 199 1 246 1 162 2 235 1 276 1 100 1 212 2 213 1 287 1 104 1 269 1 356 1 326 1 196 2 270 1 95 1 106 1 181 1 291 1 
294 1 246 1 199 1 155 1 172 1 221 1 162 3 235 1 276 1 100 1 212 2 213 1 6 1 311 1 104 1 269 1 356 1 326 1 196 2 270 1 95 1 106 1 181 1 291 1 
142 1 294 1 246 1 199 1 162 2 235 1 276 1 100 1 212 2 213 1 287 1 104 1 269 1 356 1 326 1 196 2 270 1 95 1 106 1 181 1 291 1 
294 1 155 1 196 1 172 1 212 1 
292 1 294 1 246 1 199 1 172 1 276 1 25 1 356 1 326 1 138 1 181 1 95 1 7 1 234 1 208 1 235 1 162 2 268 1 33 1 34 1 100 1 212 2 213 1 12 1 50 1 310 1 286 1 104 1 269 1 196 2 57 1 106 1 270 1 291 1 
292 1 294 1 171 1 199 1 246 1 347 1 172 1 276 1 277 1 25 1 326 1 356 1 181 1 95 1 7 1 208 1 234 1 235 1 162 2 268 1 33 1 100 1 34 1 212 2 12 1 213 1 50 1 310 1 286 1 104 1 269 1 196 2 57 1 106 1 270 1 291 1 
292 1 294 1 171 1 199 1 246 1 347 1 172 1 276 1 277 1 25 1 326 1 356 1 181 1 95 1 7 1 208 1 234 1 235 1 162 2 268 1 33 1 100 1 34 1 212 2 12 1 213 1 50 1 310 1 286 1 104 1 269 1 196 2 57 1 106 1 270 1 291 1 
292 1 294 1 199 1 246 1 172 1 276 1 277 1 25 1 325 1 326 1 356 1 138 1 181 1 95 1 7 1 233 1 234 1 186 1 118 1 235 1 162 2 268 1 100 1 34 1 212 2 12 1 213 1 50 1 167 1 286 1 104 1 269 1 196 2 106 1 270 1 291 1 
142 1 294 1 246 1 199 1 162 2 235 1 300 1 276 1 100 1 212 2 213 1 287 1 104 1 269 1 356 1 326 1 196 2 270 1 95 1 106 1 181 1 291 1 
142 1 294 1 246 1 199 1 162 2 235 1 300 1 276 1 100 1 212 2 213 1 287 1 104 1 269 1 356 1 326 1 196 2 270 1 95 1 106 1 181 1 291 1 
292 1 294 1 246 1 199 1 172 1 276 1 25 1 356 1 326 1 138 1 181 1 95 1 7 1 233 1 234 1 118 1 235 1 162 2 268 1 34 1 100 1 212 2 213 1 12 1 50 1 167 1 286 1 104 1 269 1 196 2 106 1 270 1 291 1 
1 2 152 1 327 1 116 1 219 1 60 1 200 1 262 1 3 3 201 2 360 1 32 1 307 6 173 2 249 1 62 1 112 1 332 1 352 1 353 2 134 1 193 1 355 3 290 1 183 1 59 1 
20 1 1 1 152 2 86 3 60 2 319 1 247 1 201 1 3 6 173 2 320 1 249 2 62 11 352 2 22 2 353 4 355 8 27 1 116 2 327 1 258 1 262 11 74 3 32 4 307 14 361 1 308 1 332 2 285 1 336 1 365 1 290 1 314 2 
18 1 1 1 152 1 346 1 60 1 275 1 3 1 320 1 175 1 113 1 352 1 90 1 353 2 354 1 326 2 356 1 355 1 180 1 184 1 256 1 327 1 116 1 259 1 144 1 32 1 307 2 119 1 332 1 333 1 285 1 336 1 53 1 126 1 37 1 370 1 369 1 150 1 291 2 
1 2 275 2 3 10 320 1 173 8 90 2 134 1 326 3 180 3 327 3 144 1 145 2 48 2 332 3 285 1 335 1 336 1 193 1 53 1 290 3 150 3 59 1 291 3 18 2 152 3 109 2 346 1 200 1 154 1 60 3 201 4 249 3 62 7 112 1 352 3 113 1 22 2 353 6 354 2 356 1 355 10 30 1 256 2 116 3 259 2 260 2 262 7 360 1 32 7 307 20 119 1 361 4 121 1 365 2 126 2 367 2 369 3 370 2 314 2 
38 1 151 1 152 2 219 1 346 1 60 2 275 2 3 1 4 1 113 1 352 2 353 4 354 2 135 1 326 1 356 1 355 1 180 7 231 1 207 1 30 1 116 2 327 2 259 3 209 1 307 2 330 1 119 2 332 2 285 1 336 1 53 1 16 1 126 2 369 8 150 8 84 2 291 1 341 1 
152 1 346 1 60 1 201 1 349 1 3 2 173 1 320 1 249 1 62 1 352 1 113 1 22 1 353 2 157 1 356 1 326 1 355 1 116 1 327 1 262 1 32 1 307 3 332 1 238 1 365 1 290 1 291 1 314 1 
152 1 327 1 116 1 219 1 60 1 262 1 32 1 173 1 307 2 249 1 361 1 62 1 332 1 352 1 51 1 353 2 355 2 314 1 
152 1 327 1 116 1 219 1 60 1 262 1 201 1 3 2 32 1 173 1 307 2 62 1 191 1 332 1 352 1 353 2 365 1 290 1 
152 1 327 1 116 1 219 1 60 1 262 2 201 1 3 2 32 2 173 2 307 4 249 1 361 1 62 2 332 1 352 1 22 1 353 2 365 1 355 2 290 1 314 1 
38 1 152 1 327 1 116 1 60 1 262 1 32 1 173 1 307 2 249 1 361 1 62 1 332 1 352 1 51 1 353 2 355 2 314 1 
38 1 152 1 327 1 116 1 60 1 262 1 201 1 3 2 32 1 173 1 307 2 62 1 191 1 332 1 352 1 353 2 365 1 290 1 
38 1 152 1 327 1 116 1 60 1 262 2 201 1 3 2 32 2 173 2 307 4 249 1 361 1 62 2 332 1 352 1 22 1 353 2 365 1 355 2 290 1 314 1 
152 1 327 1 116 1 60 1 262 2 201 1 3 2 32 2 173 2 307 4 249 1 361 1 62 2 332 1 352 1 22 1 353 2 365 1 355 2 290 1 314 1 
18 1 1 1 152 1 60 1 275 1 3 1 352 1 90 1 353 2 354 1 355 1 326 1 180 1 256 1 327 1 116 1 259 1 260 1 307 2 119 1 332 1 285 1 336 1 126 1 370 1 369 1 150 1 291 1 
1 1 152 1 197 1 60 1 275 1 3 1 352 1 90 1 353 2 354 1 355 1 326 1 180 1 206 1 256 1 327 1 116 1 259 1 307 2 119 1 332 1 285 1 336 1 126 1 127 1 369 1 150 1 291 1 
152 1 327 1 116 1 60 1 262 2 201 1 3 2 32 2 173 2 307 4 320 1 249 1 361 1 62 2 332 1 352 1 22 1 353 2 365 1 355 2 290 1 314 1 
18 1 152 1 60 1 275 1 201 1 3 2 173 2 249 1 62 2 352 1 22 1 90 1 353 2 354 1 355 2 326 1 180 1 256 1 327 1 116 1 259 1 262 2 260 1 32 2 307 4 48 1 361 1 332 1 365 1 126 1 16 1 290 1 370 1 369 1 150 1 314 1 291 1 
152 1 346 1 60 1 3 1 349 1 173 1 320 1 249 1 62 1 352 1 113 1 22 1 353 2 356 1 326 1 355 2 116 1 327 1 262 1 32 1 307 3 361 1 332 1 192 1 238 1 365 1 290 1 291 1 314 1 
243 1 20 1 218 2 86 2 60 2 201 3 3 10 173 6 249 3 352 2 22 3 353 4 355 9 255 1 305 2 116 2 258 1 74 1 307 19 75 1 361 3 237 1 332 2 123 1 365 3 168 1 82 1 368 1 290 3 314 3 
243 1 20 2 218 1 86 2 60 3 87 1 130 1 201 2 3 12 173 4 351 2 249 3 352 3 22 3 353 6 355 14 160 1 305 4 116 3 257 1 74 2 307 26 75 2 361 2 237 1 332 3 365 2 168 1 366 1 82 1 290 2 368 2 149 1 314 3 
243 1 20 3 218 1 86 4 200 1 60 3 87 1 130 1 201 4 3 21 173 8 351 1 249 5 112 1 352 3 22 4 353 6 134 1 355 20 160 1 29 1 305 4 257 1 116 3 258 1 360 1 74 3 307 41 75 2 361 4 237 1 332 3 123 1 365 4 193 1 168 1 366 1 82 1 368 1 290 5 149 1 59 1 314 4 
243 1 20 3 218 1 86 4 200 1 60 4 87 1 130 1 201 4 3 18 173 7 351 2 249 5 112 1 352 4 22 4 353 8 134 1 355 20 160 1 29 1 305 4 257 1 116 4 258 1 360 1 74 3 307 38 75 2 361 3 237 1 332 4 123 1 365 3 193 1 168 1 366 1 82 1 368 1 290 4 149 1 59 1 314 4 
243 1 20 2 218 1 86 4 200 1 60 2 87 1 319 2 130 1 201 7 3 25 173 14 351 1 249 8 112 1 352 2 22 7 353 4 134 1 355 27 160 1 305 4 257 1 116 2 258 2 360 1 74 4 307 52 75 1 361 7 237 1 332 2 365 7 193 1 168 1 366 1 82 1 368 1 290 8 149 1 59 1 314 7 
225 1 226 1 158 1 92 1 239 1 263 1 230 1 203 1 339 1 357 1 
244 1 302 1 
226 1 158 1 317 1 263 1 43 1 203 1 107 1 339 1 357 1 
202 1 304 1 
185 1 124 1 164 1 
161 2 263 1 264 1 221 1 120 1 203 1 212 1 225 1 226 1 158 1 52 1 92 1 239 1 196 1 240 1 338 1 339 1 357 1 
161 2 263 1 264 1 221 1 120 1 203 1 212 1 225 1 226 1 158 1 52 1 92 1 239 1 196 1 240 1 338 1 339 1 357 1 
161 2 263 1 264 1 221 1 120 1 203 1 212 1 225 1 226 1 158 1 52 1 92 1 239 1 196 1 240 1 338 1 339 1 357 1 
124 1 202 1 304 1 
124 1 202 1 304 1 
185 1 164 1 
185 1 124 1 164 1 
9 1 77 1 
244 1 1 1 198 1 346 2 203 1 302 1 113 2 63 1 226 1 158 1 326 2 356 2 357 1 161 1 328 1 9 1 263 1 264 1 190 1 211 1 35 1 212 1 77 1 196 1 240 1 339 1 291 2 
152 1 60 1 275 1 318 1 3 1 320 1 352 1 353 2 354 1 5 1 135 1 326 2 356 2 136 1 355 1 180 2 327 1 116 1 259 1 307 2 332 1 78 1 285 1 336 1 126 1 105 1 369 2 150 2 84 2 291 2 341 1 
30 1 143 1 245 1 273 1 274 2 76 1 362 1 364 1 354 1 159 1 126 1 16 1 216 1 289 1 180 2 182 1 139 1 150 2 369 2 
30 1 143 1 245 1 273 1 274 2 76 1 364 1 354 1 159 1 126 1 216 1 289 1 180 1 182 1 150 1 369 1 342 1 
259 1 275 1 119 1 354 1 103 1 126 1 289 1 93 1 180 1 231 1 139 1 150 1 369 1 207 1 
30 1 143 1 245 1 273 1 274 2 76 1 362 1 364 1 354 1 159 1 126 1 216 1 289 1 180 1 182 1 139 1 150 1 369 1 
229 1 
292 1 67 1 25 1 311 1 188 1 221 1 183 1 
292 1 294 1 234 1 208 1 172 1 34 1 33 1 12 1 310 1 286 1 25 1 138 1 57 1 
292 1 294 1 275 1 299 1 354 2 180 1 232 1 256 1 234 1 259 3 261 1 119 1 146 1 34 1 11 1 12 1 334 1 286 1 15 1 126 1 169 2 56 1 369 1 150 1 
292 5 294 1 20 1 86 1 87 1 172 1 221 4 249 1 156 4 22 1 25 2 138 6 234 1 257 1 267 1 74 1 284 4 34 1 165 1 12 1 365 1 286 1 366 1 311 1 57 3 290 1 314 1 
292 2 346 1 347 1 349 1 249 2 250 1 112 1 88 1 113 1 66 1 65 1 134 1 25 2 326 1 356 1 68 1 234 1 280 1 360 1 34 1 165 2 212 1 12 1 286 1 196 1 290 1 270 1 291 1 
292 1 234 1 188 1 221 1 34 1 12 1 67 1 286 1 25 1 311 1 
292 5 109 1 221 5 249 2 284 5 156 5 165 2 22 2 66 1 365 2 25 5 138 10 57 5 290 2 314 2 
294 1 172 1 
292 1 108 1 294 1 234 1 189 1 119 1 11 1 34 1 12 1 286 1 194 1 180 1 150 1 369 1 
18 1 1 1 152 1 346 2 60 1 275 1 3 1 349 2 352 1 113 2 353 2 90 1 354 1 326 3 356 2 180 1 68 1 69 1 256 1 116 1 327 1 259 1 260 1 307 1 119 1 332 1 336 1 126 1 369 1 150 1 370 1 291 3 
292 1 234 1 281 1 221 4 284 2 156 2 34 1 11 1 12 1 286 1 25 2 311 2 138 4 57 2 59 1 
0 1 226 1 357 1 
0 1 226 1 357 1 
226 1 92 1 228 1 77 1 357 1 
0 1 226 1 357 1 
226 1 227 1 357 1 
226 1 227 1 357 1 
226 1 227 1 357 1 
226 1 357 1 
263 1 339 1 
116 2 60 2 200 1 3 4 201 2 360 1 307 8 173 3 249 1 351 1 361 1 112 1 332 2 352 2 353 4 193 1 134 1 355 4 290 1 59 1 
200 1 3 3 360 1 201 2 173 2 307 6 249 1 112 1 193 1 134 1 355 3 290 1 183 1 59 1 
116 1 60 1 201 1 3 2 173 2 307 4 249 1 361 1 332 1 352 1 22 1 178 1 353 2 365 1 355 2 290 1 314 1 
20 1 86 2 258 1 201 1 3 4 74 1 307 7 173 2 249 1 361 1 22 1 365 1 355 3 290 1 314 1 
86 2 200 1 60 2 319 1 247 1 3 12 201 5 173 9 249 3 351 2 112 1 352 2 22 2 353 4 134 2 355 11 116 2 258 1 360 2 74 2 307 23 361 4 332 2 365 2 193 1 14 1 290 3 59 1 314 2 
86 1 3 1 307 1 
355 1 74 1 307 1 
116 1 109 1 60 1 3 3 201 2 307 6 173 3 249 1 361 1 332 1 352 1 22 1 353 2 178 1 365 1 355 3 290 1 314 1 
20 1 86 1 60 1 87 1 3 6 201 1 173 2 249 2 352 1 22 2 353 2 355 6 160 1 116 1 257 1 74 1 307 12 361 1 332 1 365 2 366 1 82 1 290 2 149 1 314 2 
3 3 360 1 201 1 307 6 173 2 249 1 361 1 112 1 134 1 355 3 290 1 
116 1 60 1 200 1 201 1 360 1 3 2 173 2 307 3 351 1 361 1 332 1 352 1 353 2 134 1 193 1 14 1 355 1 
116 1 60 1 360 2 201 3 3 5 173 5 307 10 249 2 361 2 112 1 332 1 352 1 88 1 353 2 134 2 355 5 82 1 290 2 
116 1 60 1 307 2 173 1 249 1 361 1 332 1 352 1 353 2 355 2 82 1 314 1 
116 1 60 1 201 1 3 2 173 2 307 4 249 1 361 1 332 1 352 1 22 1 353 2 365 1 355 2 82 1 290 1 314 1 
116 3 60 3 3 2 360 1 201 1 307 3 173 2 351 1 361 1 332 3 352 3 123 1 353 6 134 1 14 1 355 1 82 1 
20 1 86 4 200 1 60 5 298 1 3 18 201 7 222 1 173 12 351 2 249 5 112 2 352 5 22 3 178 1 353 10 134 3 355 16 116 5 258 1 360 3 74 3 307 34 361 5 332 5 123 1 365 3 193 1 14 1 312 1 82 1 290 5 59 1 314 3 
20 1 86 1 60 1 200 1 87 1 3 4 201 2 173 2 249 1 112 1 352 1 353 2 134 1 355 4 116 1 360 1 74 1 307 8 332 1 193 1 82 1 290 1 59 1 
20 1 86 2 200 1 60 2 87 1 201 2 3 5 173 3 249 2 112 1 352 2 22 1 353 4 178 1 134 1 355 6 116 2 258 1 360 1 74 1 307 11 361 1 332 2 193 1 82 1 290 1 59 1 314 1 
20 1 86 1 200 1 60 3 87 1 3 10 201 3 173 4 249 3 351 1 112 1 352 3 22 2 178 1 353 6 134 1 355 9 160 1 116 3 257 1 360 1 74 1 307 19 361 1 332 3 365 2 193 1 366 1 82 1 290 3 149 1 59 1 314 2 
20 1 86 1 200 1 60 3 87 1 3 7 201 3 173 5 351 1 249 3 112 1 352 3 22 2 178 1 353 6 134 1 355 10 160 1 116 3 257 1 360 1 74 1 307 17 361 2 332 3 365 1 193 1 366 1 82 1 290 2 149 1 59 1 314 2 
20 1 86 1 60 1 200 1 87 1 3 4 201 2 173 2 249 1 112 1 352 1 353 2 134 1 355 4 116 1 360 1 74 1 307 8 332 1 193 1 82 1 290 1 59 1 
20 1 86 1 60 1 87 1 3 6 201 1 173 2 249 2 352 1 22 2 353 2 355 6 160 1 116 1 257 1 74 1 307 12 361 1 332 1 365 2 366 1 82 1 290 2 149 1 314 2 
20 1 86 1 200 1 60 4 87 1 3 8 201 3 173 5 249 3 351 2 112 1 352 4 22 2 178 1 353 8 134 1 355 10 160 1 116 4 257 1 360 1 74 1 307 18 361 2 332 4 365 1 193 1 366 1 82 1 290 2 149 1 59 1 314 2 
20 1 86 1 60 4 87 1 3 7 201 3 173 6 249 3 351 2 352 4 22 3 353 8 355 9 160 1 116 4 257 1 74 1 307 16 361 3 332 4 123 1 365 2 366 1 82 1 290 2 149 1 314 3 
200 1 3 4 360 3 201 3 307 7 173 6 249 1 361 3 112 1 193 2 134 3 355 3 290 1 
20 1 86 1 200 1 60 4 87 1 3 8 201 3 173 4 249 3 351 2 112 1 352 4 22 2 353 8 134 1 355 10 160 1 116 4 257 1 360 1 74 1 307 18 361 1 332 4 123 1 365 1 193 1 366 1 82 1 290 2 149 1 59 1 314 2 
1 1 246 1 296 1 326 1 356 1 283 1 291 1 
1 1 296 1 246 1 71 1 236 1 283 1 303 1 114 1 288 1 356 1 326 1 291 1 
354 1 259 1 126 1 275 1 180 1 231 1 119 1 183 1 369 1 150 1 207 1 
256 1 18 1 1 1 346 1 259 1 275 1 119 1 113 1 90 1 354 1 53 1 126 1 356 1 326 2 180 1 150 1 369 1 291 2 
18 1 1 1 315 1 345 1 346 1 275 2 40 1 113 2 90 1 354 1 326 2 356 2 180 1 95 1 256 2 259 3 53 1 126 1 104 1 270 1 369 1 150 1 291 2 
1 1 315 1 345 1 346 1 275 2 40 1 113 2 90 1 354 1 326 2 356 2 180 2 95 1 206 1 256 2 259 3 148 1 53 1 126 1 104 1 270 1 369 2 150 2 291 2 
42 1 294 1 345 1 259 1 169 1 196 1 180 1 369 1 150 1 212 1 
294 1 345 1 259 1 169 1 56 1 196 1 180 1 369 1 150 1 212 1 
151 1 354 1 126 1 180 1 369 1 150 1 
30 1 256 1 151 1 259 3 209 1 275 2 73 1 330 1 119 2 4 1 334 1 354 3 135 1 16 1 126 2 217 1 180 6 84 1 58 1 150 7 369 7 
18 1 1 2 152 2 346 1 200 1 60 2 275 1 3 3 201 2 173 2 320 1 249 1 62 1 112 1 113 1 352 2 90 1 353 4 354 1 134 1 355 3 326 2 356 1 180 1 256 1 327 2 116 2 259 1 262 1 260 1 360 1 32 1 307 6 48 1 332 2 78 1 193 1 53 1 126 1 16 1 367 1 290 1 150 1 369 1 370 1 59 1 291 2 
294 1 234 1 259 1 189 1 299 1 146 1 119 1 34 1 212 1 12 1 63 1 286 1 169 1 56 1 196 1 180 1 369 1 150 1 232 1 
256 1 151 1 259 2 261 1 275 1 334 1 354 2 16 1 126 1 180 2 253 1 150 2 369 2 
8 1 259 1 275 1 119 1 148 1 354 1 16 1 126 1 180 4 231 1 150 4 369 4 207 1 
256 1 70 1 345 1 259 1 275 1 99 1 73 1 335 1 354 2 126 1 180 2 58 1 150 2 369 2 
364 1 245 1 354 1 274 1 126 1 216 1 180 1 119 1 369 1 150 1 
30 1 259 1 318 1 275 1 354 1 135 1 16 1 126 1 180 2 150 2 369 2 
8 1 345 1 259 3 275 2 209 1 119 1 330 1 354 2 135 1 16 1 126 2 180 4 231 1 150 5 369 5 207 1 
8 1 345 1 259 3 275 2 209 1 119 1 204 1 354 2 135 1 16 1 126 2 180 4 231 1 150 5 369 5 207 1 
256 1 1 1 346 1 259 1 275 1 119 1 113 1 90 1 354 1 53 1 126 1 356 1 326 2 180 1 206 1 150 1 369 1 291 2 
256 1 345 1 259 1 275 1 73 1 334 1 354 2 126 1 217 1 180 1 58 1 150 1 369 1 
1 1 179 1 205 1 350 1 279 1 
293 1 1 1 187 1 199 1 350 1 221 1 212 2 63 1 102 1 337 1 179 2 311 1 104 1 269 1 196 2 205 2 270 1 95 1 279 2 
5 1 105 1 326 1 356 1 136 1 350 1 205 1 291 1 279 1 
102 1 337 1 350 1 
343 1 278 1 115 1 183 1 
343 1 278 1 295 1 125 1 265 1 10 1 115 1 
295 1 31 1 147 1 
343 1 272 1 295 3 72 1 248 1 10 1 265 3 39 2 278 1 125 1 115 1 242 1 
343 1 278 1 153 1 295 2 125 1 265 2 10 1 115 1 17 1 
316 1 274 1 251 1 295 1 125 1 72 1 216 1 265 1 10 1 115 1 182 1 
278 1 295 1 125 1 72 1 265 1 10 1 115 1 
343 1 278 2 295 1 125 1 72 1 265 1 10 1 
96 1 295 2 72 1 61 1 10 2 265 2 278 1 125 2 215 1 115 1 
343 1 344 1 278 1 251 1 153 2 295 3 125 1 72 1 265 3 10 1 115 2 313 1 21 1 
343 1 273 1 274 2 295 2 153 1 72 1 10 1 265 2 163 1 364 1 278 1 125 1 216 1 115 1 182 1 
343 1 306 1 344 1 295 4 153 2 72 1 10 2 265 4 278 1 125 2 251 1 17 1 115 2 
343 1 278 1 295 1 125 1 72 1 265 1 10 1 115 1 
343 2 272 1 344 1 153 2 295 4 39 1 265 4 10 1 301 1 278 2 125 1 251 1 115 3 242 1 
153 1 295 1 125 1 72 1 131 1 265 2 10 1 47 1 83 1 
343 1 272 1 295 3 72 1 10 1 265 3 39 2 122 1 278 1 125 1 115 1 242 2 
129 2 115 2 140 1 322 1 
133 1 295 1 125 1 72 1 265 1 10 1 
343 1 278 1 153 1 295 2 125 1 72 1 265 2 10 1 115 1 313 1 
28 1 
343 1 278 1 295 1 125 1 72 1 265 1 10 1 115 1 
343 1 153 1 295 3 72 1 10 1 265 3 39 1 278 1 125 1 115 1 313 1 
344 1 251 1 115 1 301 1 
278 1 115 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (176,203) (176,203) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (176,203) (176,203) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (176,203) (176,203) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (176,203) (176,203) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 33 1 106 1 125 9 245 1 37 2 360 1 88 3 200 9 64 1 173 2 42 1 114 1 13 1 251 1 93 7 18 1 323 4 296 1 214 1 216 1 300 1 79 5 308 2 
194 1 33 1 106 1 125 9 245 1 37 2 360 1 88 3 200 9 64 1 173 2 42 1 114 1 13 1 251 1 93 7 18 1 323 4 296 1 214 1 216 1 300 1 79 5 308 2 
194 1 300 1 200 1 125 1 173 1 203 1 141 1 176 1 308 1 
194 1 300 1 200 1 125 1 173 1 203 1 141 1 176 1 308 1 
194 1 300 1 200 1 125 1 173 1 203 1 141 1 176 1 308 1 
194 1 300 1 200 1 125 1 173 1 203 1 141 1 176 1 308 1 
33 1 106 1 323 2 125 4 214 1 245 1 360 1 300 1 37 2 79 3 88 1 200 4 173 1 114 1 13 1 251 1 308 1 93 3 
194 1 153 1 106 1 125 2 35 1 79 1 300 1 360 1 102 1 200 2 52 1 173 1 114 1 141 1 251 1 308 1 
194 1 106 1 323 1 125 3 300 1 79 2 200 3 88 1 173 2 42 1 251 1 308 2 93 1 
39 1 333 1 351 1 
39 1 191 2 170 1 
237 2 347 1 368 2 168 2 81 2 47 1 366 2 344 2 
237 2 354 1 0 1 167 1 313 1 168 2 108 1 358 1 7 1 171 2 339 1 8 1 90 1 65 1 44 1 152 2 117 1 366 3 344 2 347 1 368 2 210 1 369 1 95 1 132 1 372 2 189 1 98 1 47 1 159 1 134 1 299 1 122 1 350 2 139 2 81 3 220 1 
237 1 347 1 368 1 94 1 168 1 198 1 81 1 61 1 366 1 344 1 
333 1 72 1 94 1 197 1 97 1 99 1 295 1 121 1 328 1 39 1 202 1 81 1 344 1 366 1 
237 1 333 1 368 1 72 1 94 1 168 1 197 2 97 1 99 1 121 2 39 1 202 1 81 1 344 1 366 1 
59 1 197 1 66 1 121 1 46 1 
272 1 39 1 333 1 183 1 59 1 197 2 121 2 46 1 
197 1 121 1 46 1 
237 1 347 1 368 1 94 1 59 1 168 1 197 1 198 1 121 1 61 1 278 1 81 1 344 1 366 1 
39 1 
71 1 39 1 333 1 183 1 59 1 197 2 121 2 46 1 
332 2 333 1 183 1 57 1 59 2 86 1 197 5 3 1 4 1 121 5 225 1 275 1 289 1 39 1 201 1 341 1 67 2 130 2 46 2 
351 1 47 1 
237 1 368 1 168 1 262 1 47 2 81 2 309 1 344 2 366 2 
73 1 364 1 271 1 
354 1 210 1 132 1 108 1 98 1 47 1 7 1 134 1 171 1 350 1 11 1 90 1 81 1 152 1 366 1 220 1 
354 1 105 1 237 1 73 1 210 1 168 1 132 1 108 1 98 1 7 1 134 1 171 1 350 1 90 1 81 2 152 1 307 1 344 1 366 2 220 1 
237 4 105 1 56 1 232 1 368 1 168 4 262 1 47 1 295 1 157 1 81 5 307 2 344 5 366 5 
237 2 94 1 168 2 81 2 297 1 61 1 366 2 344 2 
237 3 368 1 168 3 81 3 47 1 307 1 366 3 344 3 
237 1 94 1 168 1 81 1 61 1 366 1 344 1 
237 1 368 1 94 1 168 1 262 1 81 1 309 1 366 1 344 1 
354 1 237 3 105 1 0 1 313 1 168 3 197 1 262 1 108 1 358 1 7 1 171 1 8 1 90 1 230 1 202 1 65 1 152 1 117 1 366 4 344 3 347 1 368 2 72 1 210 1 369 1 94 1 95 1 132 1 372 2 98 1 96 1 97 1 99 1 47 1 121 1 159 1 134 1 299 1 350 1 139 1 81 4 307 1 220 1 
237 1 232 1 168 1 81 2 47 1 295 1 307 1 366 2 344 2 
105 1 237 3 368 1 72 1 94 1 168 3 197 1 262 1 96 1 97 1 99 1 121 1 39 1 202 1 81 3 307 2 250 1 344 3 366 3 
237 1 368 1 73 1 168 1 262 1 81 1 366 1 344 1 
354 1 210 1 132 1 108 1 98 1 47 1 7 1 171 1 134 1 350 1 90 1 81 1 152 1 366 1 220 1 
354 1 207 1 184 1 210 1 132 1 108 1 47 1 7 1 171 1 134 1 350 1 90 1 81 1 152 1 366 1 
32 1 196 1 73 1 313 2 372 2 349 1 358 1 159 1 299 1 8 1 362 1 364 1 139 2 10 1 65 1 117 1 
237 1 94 1 168 1 202 1 81 1 297 1 366 1 344 1 
290 1 342 1 
290 1 342 1 
304 1 193 1 
304 1 193 1 
304 1 193 1 
290 1 342 1 113 1 
290 1 342 1 113 1 
290 1 342 1 336 1 
181 1 348 1 290 2 342 2 304 1 193 1 
290 1 342 1 113 1 
290 1 342 1 288 1 
290 1 342 1 288 1 
290 1 342 1 288 1 
237 2 168 2 336 1 197 1 226 1 363 1 290 1 342 1 91 1 15 1 344 2 366 2 273 1 76 1 274 1 47 1 121 1 77 1 276 1 100 1 302 1 376 1 81 2 306 1 
348 1 195 2 335 1 154 1 273 2 197 2 76 2 36 1 121 2 100 2 9 1 39 1 228 1 290 2 342 2 91 3 192 1 306 2 15 1 
360 1 33 1 114 1 
360 1 153 1 114 1 
33 2 153 1 294 1 114 3 249 1 374 1 
33 1 153 1 114 2 249 1 115 1 374 1 
33 1 153 1 114 2 249 2 374 1 
31 1 32 1 332 1 196 1 333 1 57 3 59 4 241 1 197 5 170 1 128 1 226 1 289 2 39 2 112 2 201 1 316 1 67 1 292 2 130 1 46 1 183 1 119 1 121 5 77 1 298 1 158 1 376 1 191 3 256 2 54 1 353 1 
32 3 355 1 332 2 196 3 34 1 333 1 57 8 59 7 241 2 197 9 60 5 127 1 170 3 128 3 289 6 39 5 341 1 112 6 201 1 66 5 316 2 67 2 46 6 130 2 182 1 183 1 370 1 119 3 121 9 298 3 158 1 303 1 376 4 191 9 256 6 
237 1 32 1 332 1 333 1 196 1 57 3 59 2 241 1 168 1 197 3 198 1 170 2 128 1 61 1 289 2 39 3 341 1 112 2 316 1 67 1 292 1 366 1 344 1 130 1 347 1 368 1 94 1 119 1 121 3 298 1 278 1 376 1 191 4 81 1 256 2 353 1 54 1 
32 1 355 1 332 1 196 1 57 3 241 1 59 1 197 2 170 2 128 1 289 2 39 2 112 2 341 1 316 1 67 1 292 1 130 1 119 1 121 2 298 1 376 1 191 4 256 2 353 1 54 1 
134 1 211 1 351 1 
134 1 140 1 
62 1 
134 1 90 1 132 1 
134 1 259 1 
134 1 90 1 
134 3 90 1 211 2 132 1 247 1 327 1 
196 1 313 3 240 1 187 1 119 1 264 1 23 2 25 1 122 4 89 1 139 7 365 1 174 2 248 1 236 3 143 1 82 1 
196 1 313 3 240 1 187 1 119 1 264 1 23 2 25 1 122 4 89 1 139 7 365 1 174 2 248 1 236 3 143 1 82 1 
196 1 313 3 240 1 187 1 119 1 264 1 23 2 279 1 25 1 122 4 89 1 139 7 365 1 174 2 248 1 236 3 143 1 82 1 
257 1 32 3 196 4 313 15 260 1 240 2 107 1 145 1 128 3 263 1 264 5 8 1 89 1 269 1 365 2 174 5 248 2 65 1 177 3 117 1 92 1 187 1 372 2 188 4 119 4 298 3 159 1 23 3 122 16 25 2 139 31 143 1 236 10 82 1 
356 1 196 1 313 4 240 1 264 1 8 2 269 1 89 1 365 1 174 3 248 1 65 2 117 2 68 1 187 1 119 1 372 4 159 2 23 2 122 5 25 1 139 9 236 4 82 1 
194 1 33 1 106 1 125 2 242 1 110 1 169 1 7 1 171 1 360 1 200 2 173 1 270 1 152 1 114 2 129 1 251 1 93 1 16 1 70 1 153 1 210 1 294 1 253 1 79 1 300 1 350 1 286 1 163 1 308 1 
194 1 33 1 125 2 242 1 110 1 169 1 244 1 7 1 171 1 360 1 200 2 361 1 173 1 270 1 152 1 114 2 205 1 93 1 16 1 153 1 210 1 294 1 253 1 350 1 286 1 163 1 219 1 308 1 
171 1 361 1 350 1 110 1 152 1 219 1 
194 2 221 1 222 1 108 1 125 1 110 2 244 1 7 1 171 1 200 1 90 1 231 1 173 1 152 1 210 1 134 1 190 1 281 1 350 1 162 1 163 2 286 2 308 1 
194 1 33 1 125 1 242 1 110 1 169 1 7 1 171 1 360 1 200 1 173 1 270 1 152 1 114 2 16 1 70 1 153 1 210 1 294 1 253 1 300 1 350 1 286 1 163 1 219 1 308 1 
147 1 
332 1 333 1 57 1 334 1 85 1 238 1 124 5 197 4 87 2 338 2 170 2 289 1 39 1 340 1 268 2 201 1 343 3 202 1 175 1 151 1 45 1 67 1 14 1 130 1 366 1 344 1 46 5 252 1 183 2 72 1 94 1 97 1 99 1 295 1 156 1 121 4 22 2 328 1 282 3 235 3 81 1 30 1 
332 1 333 1 57 1 334 1 85 1 238 1 124 5 197 4 87 2 338 2 170 2 289 1 39 1 340 1 268 2 201 1 343 3 202 1 175 1 151 1 45 1 67 1 14 1 130 1 366 1 344 1 46 5 252 1 183 2 72 1 94 1 97 1 99 1 295 1 156 1 121 4 22 2 328 1 282 3 235 3 81 1 30 1 
332 1 333 1 57 1 238 1 197 4 338 2 6 2 289 1 340 1 201 1 343 2 202 1 67 1 344 1 69 2 72 1 295 1 121 4 156 1 22 2 218 1 81 1 30 1 166 1 124 4 39 1 175 1 45 1 366 1 130 1 46 4 183 2 94 1 97 1 99 1 328 1 282 2 235 2 191 2 
332 1 333 1 57 2 241 1 238 1 197 5 108 2 338 2 7 1 289 2 340 1 201 1 343 2 202 1 152 2 67 1 344 1 72 1 210 1 19 1 121 5 156 1 295 1 22 2 218 1 24 1 350 2 81 1 30 1 162 1 83 1 85 1 124 4 87 2 170 2 171 2 39 2 229 1 268 2 90 1 175 1 45 1 46 6 130 1 366 1 183 3 94 1 97 1 99 1 134 1 328 1 281 1 235 2 282 2 191 2 
238 1 124 2 197 3 340 1 343 1 202 1 175 1 366 1 344 1 46 2 71 1 72 1 183 1 94 1 97 1 99 1 295 1 156 1 121 3 328 1 81 1 30 1 
333 1 238 1 124 3 197 3 39 1 340 1 202 1 175 1 46 1 366 1 344 1 71 1 72 1 183 1 94 1 97 1 99 1 295 1 156 1 121 3 328 1 235 1 81 1 30 1 
333 1 238 1 124 3 197 3 39 1 340 1 343 1 202 1 175 1 366 1 344 1 46 2 71 1 183 1 72 1 94 1 97 1 99 1 295 1 156 1 121 3 328 1 282 1 235 1 81 1 30 1 
332 1 333 5 334 1 57 1 238 1 197 5 338 2 289 1 340 1 201 1 343 4 202 1 151 1 14 1 67 1 344 1 252 1 71 1 72 1 121 5 156 1 295 1 22 2 81 1 30 1 310 1 85 1 124 6 87 2 170 2 39 5 268 2 175 1 45 1 366 1 46 7 130 1 183 3 94 1 97 1 99 1 328 1 282 4 235 4 
332 1 333 1 57 1 238 1 197 4 338 2 289 1 340 1 201 1 343 2 202 1 67 1 344 1 72 1 295 1 121 4 156 1 22 2 218 1 81 1 30 1 85 1 124 4 87 2 170 2 39 2 268 2 175 1 45 1 366 1 130 1 46 4 183 2 94 1 97 1 99 1 328 1 282 2 235 2 191 2 
332 1 333 1 57 1 334 1 85 1 238 1 124 4 197 4 87 2 338 2 170 2 289 1 39 1 340 1 268 2 201 1 343 2 202 1 175 1 151 1 45 1 67 1 14 1 46 4 366 1 344 1 130 1 183 2 72 1 94 1 97 1 99 1 295 1 156 1 121 4 22 2 328 1 235 2 282 2 81 1 30 1 
332 1 333 1 57 1 334 1 85 1 238 1 124 4 197 4 87 2 338 2 170 2 289 1 39 1 340 1 268 2 201 1 343 2 202 1 175 1 151 1 45 1 67 1 14 1 46 4 366 1 344 1 130 1 183 2 72 1 94 1 97 1 99 1 295 1 156 1 121 4 22 2 328 1 235 2 282 2 81 1 30 1 
332 1 166 1 333 1 57 1 238 1 124 4 197 4 6 2 338 2 289 1 39 1 38 1 340 1 201 1 343 2 202 1 175 1 12 1 151 1 45 1 67 1 46 4 366 1 344 1 130 1 69 2 183 2 72 1 94 1 97 1 99 1 295 1 156 1 121 4 22 2 328 1 235 2 282 2 191 2 81 1 30 1 
196 1 313 3 240 1 358 1 8 1 364 1 10 1 89 1 365 1 174 2 271 1 65 1 117 1 73 1 187 1 372 2 119 1 47 2 159 1 299 1 23 1 122 3 139 6 351 1 236 2 82 1 
165 1 313 3 261 1 358 2 128 2 264 1 8 2 364 7 315 1 65 2 271 6 177 2 117 2 92 1 118 1 73 7 94 1 95 1 188 2 372 4 119 2 47 1 298 2 159 2 299 1 122 6 139 9 104 1 331 1 236 1 
354 1 237 1 105 1 261 1 313 1 167 1 168 1 108 1 358 1 7 1 171 1 8 1 11 1 291 1 90 1 152 1 271 1 65 1 366 2 344 1 117 1 131 1 210 1 132 1 95 1 326 1 98 1 372 2 47 1 134 1 159 1 299 1 122 1 350 1 139 2 81 2 307 1 220 1 
105 1 237 1 108 1 7 1 8 2 152 1 65 2 117 2 344 1 346 1 208 1 210 1 73 2 119 1 120 1 298 1 159 2 299 2 122 3 350 1 81 2 307 1 220 1 354 1 258 1 313 2 261 1 168 1 358 2 128 1 171 1 364 2 90 1 174 1 271 1 366 2 369 1 95 1 132 1 372 4 98 1 48 1 134 1 139 5 236 1 
237 1 167 1 313 1 168 1 108 2 146 1 358 2 243 1 7 2 171 7 8 2 10 1 90 2 152 8 65 2 129 1 317 1 366 1 344 1 117 2 180 1 210 2 95 1 21 1 372 4 189 2 49 1 134 3 159 2 299 2 160 1 122 1 281 1 350 8 139 2 81 1 162 1 219 1 307 1 
237 1 32 1 196 1 261 1 313 2 168 1 262 1 358 1 128 1 8 1 364 1 174 1 271 1 65 1 117 1 344 1 366 1 368 1 73 1 372 2 119 1 298 1 215 1 159 1 299 1 122 1 139 3 81 1 236 1 
73 1 372 2 119 1 358 1 128 1 159 1 78 1 299 1 8 1 122 2 364 1 139 2 10 1 65 1 117 1 
32 1 196 1 73 1 313 2 372 2 358 1 159 1 299 1 8 1 362 1 364 1 139 2 10 1 65 1 117 1 
73 1 372 2 119 1 358 1 298 1 128 1 159 1 299 1 8 1 122 2 364 1 139 2 10 1 65 1 117 1 
73 1 372 2 119 1 358 1 243 1 128 1 159 1 78 1 299 1 8 1 122 2 364 1 139 2 65 1 117 1 
32 1 196 1 73 1 313 2 372 2 358 1 243 1 159 1 299 1 8 1 362 1 364 1 139 2 65 1 117 1 
73 1 372 2 119 1 358 1 243 1 298 1 128 1 159 1 299 1 8 1 122 2 364 1 139 2 65 1 117 1 
73 1 372 2 119 1 358 1 298 1 128 1 159 1 299 1 8 1 122 2 364 1 139 2 65 1 117 1 
354 1 167 1 313 1 108 1 358 1 7 1 171 1 8 1 90 1 152 1 65 1 366 1 117 1 210 1 369 1 132 1 95 1 98 1 372 2 47 1 134 1 159 1 299 1 122 1 350 1 139 2 81 1 220 1 
354 1 167 1 313 1 108 1 358 1 7 1 171 1 8 1 90 1 152 1 65 1 366 1 117 1 207 1 210 1 184 1 132 1 95 1 372 2 47 1 134 1 159 1 299 1 122 1 137 1 350 1 139 2 81 1 
73 1 261 1 372 2 119 1 358 1 298 1 128 1 159 1 299 1 8 1 122 2 364 1 139 2 65 1 117 1 
354 1 258 1 358 1 7 1 128 1 171 1 8 1 364 1 90 1 152 1 65 1 129 1 366 1 117 1 73 1 210 1 369 1 132 1 119 1 98 1 372 2 298 1 134 1 159 1 299 1 122 2 350 1 139 2 81 1 220 1 
237 1 261 1 168 1 262 1 358 1 128 1 264 1 8 1 364 1 65 1 271 1 117 1 344 1 366 1 368 1 73 1 212 1 372 2 119 1 298 1 159 1 299 1 122 2 139 2 81 1 236 1 
257 1 32 3 196 3 313 10 128 3 172 1 264 3 8 2 174 3 65 2 116 2 177 1 117 2 68 1 92 1 17 1 322 1 324 1 188 2 372 4 119 3 298 3 159 2 301 2 101 1 122 9 26 1 139 19 284 1 236 6 
257 2 32 2 196 2 313 12 128 3 264 2 265 1 8 3 269 2 174 2 65 3 116 1 177 2 117 3 68 1 17 1 321 1 322 2 324 1 74 1 372 6 188 2 119 3 213 1 298 3 159 3 301 4 101 2 122 14 139 26 284 1 377 1 142 1 236 4 
257 3 32 4 196 5 313 21 240 1 128 4 172 1 264 4 265 1 8 3 89 1 269 1 365 1 174 4 43 1 65 3 116 1 177 3 117 3 68 1 92 1 17 1 321 1 322 1 187 1 324 1 74 1 188 4 372 6 119 5 213 1 298 4 159 3 301 4 101 2 23 1 122 20 139 41 284 1 377 1 142 1 236 8 82 1 
257 3 32 3 196 4 313 18 240 1 128 4 172 1 264 3 265 1 8 4 89 1 269 2 365 1 174 4 43 1 65 4 116 1 177 3 117 4 68 1 92 1 17 1 321 1 322 1 187 1 324 1 74 1 188 4 372 8 119 5 213 1 298 4 159 4 301 4 101 2 23 1 122 20 139 38 284 1 377 1 142 1 236 7 82 1 
257 2 32 7 196 8 313 25 240 1 128 7 264 7 265 1 8 2 89 1 269 1 365 1 315 2 174 7 65 2 116 1 177 4 117 2 68 1 92 2 17 1 321 1 322 1 187 1 324 1 74 1 188 4 372 4 119 8 213 1 298 7 159 2 301 4 101 1 23 1 122 27 139 52 284 1 377 1 142 1 236 14 82 1 
100 1 348 1 290 1 342 1 154 1 273 1 76 1 36 1 234 1 306 1 
302 1 336 1 
100 1 290 1 375 1 342 1 273 1 53 1 76 1 5 1 306 1 
293 1 113 1 
181 1 58 1 288 1 
348 1 195 1 154 1 273 1 197 1 76 1 36 1 121 1 100 1 9 1 39 1 228 1 290 1 342 1 91 2 192 1 306 1 15 1 
348 1 195 1 154 1 273 1 197 1 76 1 36 1 121 1 100 1 9 1 39 1 228 1 290 1 342 1 91 2 192 1 306 1 15 1 
348 1 195 1 154 1 273 1 197 1 76 1 36 1 121 1 100 1 9 1 39 1 228 1 290 1 342 1 91 2 192 1 306 1 15 1 
181 1 293 1 113 1 
181 1 293 1 113 1 
58 1 288 1 
181 1 58 1 288 1 
274 1 276 1 
237 2 195 1 59 1 336 1 168 2 197 1 226 1 363 1 228 1 290 1 342 1 91 1 366 2 344 2 273 1 76 1 274 1 47 1 121 1 77 1 276 1 100 1 302 1 376 1 81 2 29 1 306 1 
261 1 167 1 313 1 84 1 358 1 126 1 7 1 171 2 8 1 90 1 152 2 65 1 204 1 366 2 344 2 117 1 180 1 210 1 95 1 372 2 189 2 49 1 134 1 159 1 299 1 122 1 350 2 139 2 161 1 81 2 305 1 
312 1 33 1 153 1 294 1 210 1 253 1 109 1 169 1 7 1 171 2 360 1 350 2 255 1 270 1 114 2 152 2 129 1 219 1 286 1 
33 1 153 1 294 1 210 1 253 1 169 1 7 1 171 1 360 1 350 1 255 1 270 1 114 2 152 1 219 1 178 1 286 1 
210 1 221 1 108 1 109 1 7 1 134 1 171 1 281 1 350 1 90 1 352 1 152 1 162 1 286 1 
312 1 33 1 153 1 294 1 210 1 253 1 109 1 169 1 7 1 171 1 360 1 350 1 255 1 270 1 114 2 152 1 219 1 286 1 
55 1 
237 2 354 1 0 1 313 1 168 2 108 1 358 1 7 1 171 1 8 1 90 1 152 1 65 1 117 1 366 3 344 2 347 1 368 2 210 1 369 1 95 1 132 1 372 2 98 1 47 1 159 1 134 1 299 1 350 1 139 1 81 3 220 1 
332 1 333 2 57 1 241 1 19 1 170 2 23 1 289 2 39 4 112 2 201 1 191 4 256 2 67 1 130 1 
289 1 39 1 333 1 57 1 86 1 351 1 225 1 
332 1 333 1 183 1 57 1 85 1 197 1 87 1 121 1 170 1 289 1 39 2 201 1 268 1 191 1 67 1 46 1 130 1 
332 4 1 1 333 2 196 2 57 9 241 2 239 2 197 5 108 1 7 3 289 8 201 4 112 6 247 1 152 3 67 4 345 2 346 2 72 2 210 4 19 1 211 2 75 2 119 2 121 5 298 2 350 3 256 6 32 2 259 2 123 2 86 1 357 1 225 1 170 6 128 2 171 3 39 8 90 3 129 1 130 4 46 5 319 2 183 3 185 2 132 3 371 1 233 1 134 10 280 2 51 1 191 12 140 3 378 2 
257 1 32 2 332 2 196 2 333 2 57 8 241 1 239 1 197 1 170 3 128 2 148 1 265 1 289 5 39 5 112 5 201 2 67 2 177 1 46 1 130 2 321 1 183 1 209 1 19 1 74 1 75 2 188 1 119 2 121 1 298 2 191 6 377 1 142 1 256 5 
237 1 332 1 196 1 57 2 239 1 240 1 168 1 197 1 198 1 61 1 289 2 201 1 89 1 365 1 318 1 67 1 14 1 366 1 130 1 344 1 347 1 368 1 94 1 75 2 119 2 121 1 278 1 81 1 
332 1 333 1 57 1 86 1 225 1 289 1 39 1 201 1 67 1 130 1 
32 2 346 1 196 2 57 5 239 1 75 2 119 2 298 2 128 2 170 5 289 5 39 5 112 5 191 10 256 5 
39 1 333 1 183 1 197 1 121 1 46 1 
332 2 1 1 57 2 241 2 197 3 108 2 7 1 171 4 289 2 229 1 341 1 201 1 90 1 152 4 67 2 130 2 46 4 183 2 210 1 19 2 371 2 121 3 134 1 24 1 281 1 330 1 350 4 162 1 144 1 
367 1 76 1 306 1 
367 1 76 1 306 1 
154 1 76 1 155 1 306 1 276 1 
367 1 76 1 306 1 
136 1 76 1 306 1 
136 1 76 1 306 1 
136 1 76 1 306 1 
76 1 306 1 
290 1 342 1 
196 1 313 4 240 1 187 1 119 1 372 4 159 2 264 1 23 1 8 2 122 4 89 1 139 8 269 1 365 1 174 2 65 2 236 3 82 1 117 2 
23 1 196 1 122 3 313 3 139 6 89 1 240 1 365 1 187 1 174 2 351 1 119 1 236 2 82 1 
32 1 196 1 313 2 372 2 119 1 298 1 128 1 159 1 264 1 50 1 8 1 122 2 139 4 174 1 65 1 236 2 117 1 
32 1 257 1 196 1 313 4 188 2 119 1 298 1 128 1 264 1 122 3 139 7 174 1 236 2 177 1 92 1 
32 2 196 3 313 12 240 2 128 2 264 4 8 2 89 1 269 2 365 2 315 1 174 5 65 2 177 2 92 1 117 2 118 1 187 1 119 3 188 2 372 4 298 2 159 2 23 1 122 11 80 1 139 23 236 9 82 1 
313 1 139 1 188 1 
122 1 139 1 177 1 
32 1 346 1 196 1 313 3 372 2 119 1 298 1 128 1 159 1 264 1 50 1 8 1 122 3 139 6 174 2 65 1 236 3 117 1 
257 1 32 2 196 2 313 6 128 2 264 1 265 1 8 1 174 1 65 1 177 1 117 1 68 1 321 1 74 1 188 1 372 2 119 2 298 2 159 1 122 6 139 12 377 1 142 1 236 2 
196 1 313 3 240 1 119 1 264 1 122 3 89 1 139 6 365 1 174 1 236 2 
313 2 240 1 187 1 372 2 159 1 264 1 8 1 122 1 80 1 139 3 269 1 365 1 174 1 65 1 236 2 82 1 117 1 
196 2 313 5 240 2 372 2 119 2 159 1 264 2 8 1 122 5 139 10 89 1 365 2 174 3 65 1 318 1 236 5 117 1 68 1 
372 2 119 1 128 1 159 1 264 1 8 1 122 2 139 2 65 1 236 1 68 1 117 1 
32 1 196 1 313 2 372 2 119 1 298 1 128 1 159 1 264 1 8 1 122 2 139 4 174 1 65 1 236 2 68 1 117 1 
313 2 240 1 372 6 159 3 172 1 264 1 8 3 122 1 80 1 269 1 139 3 365 1 174 1 65 3 236 2 68 1 117 3 
257 1 32 3 196 5 260 1 313 18 240 3 107 1 128 3 263 1 172 1 264 5 8 5 89 2 269 2 365 3 174 7 65 5 177 3 117 5 68 1 92 1 187 1 188 4 372 10 119 5 298 3 159 5 23 1 50 1 122 16 80 1 139 34 236 12 82 1 
257 1 196 1 313 4 240 1 8 1 89 1 365 1 174 2 65 1 177 1 117 1 68 1 187 1 119 1 188 1 372 2 159 1 23 1 122 4 139 8 377 1 236 2 82 1 
257 1 196 1 313 5 240 1 128 1 264 1 8 2 89 1 365 1 174 2 65 2 177 1 68 1 117 2 92 1 187 1 188 2 372 4 119 2 298 1 159 2 23 1 50 1 122 6 139 11 377 1 236 3 82 1 
257 1 32 2 196 3 313 10 240 1 128 2 264 1 265 1 8 3 89 1 269 1 365 1 174 3 65 3 177 1 117 3 68 1 321 1 187 1 74 1 188 1 372 6 119 3 298 2 159 3 23 1 50 1 122 9 139 19 377 1 142 1 236 4 82 1 
257 1 32 1 196 2 313 7 240 1 128 2 264 2 265 1 8 3 89 1 269 1 365 1 174 3 65 3 177 1 117 3 68 1 321 1 187 1 74 1 188 1 372 6 119 3 298 2 159 3 23 1 50 1 122 10 139 17 377 1 142 1 236 5 82 1 
257 1 196 1 313 4 240 1 8 1 89 1 365 1 174 2 65 1 177 1 117 1 68 1 187 1 119 1 188 1 372 2 159 1 23 1 122 4 139 8 377 1 236 2 82 1 
257 1 32 2 196 2 313 6 128 2 264 1 265 1 8 1 174 1 65 1 177 1 117 1 68 1 321 1 74 1 188 1 372 2 119 2 298 2 159 1 122 6 139 12 377 1 142 1 236 2 
257 1 32 1 196 2 313 8 240 1 128 2 264 2 265 1 8 4 89 1 269 2 365 1 174 3 65 4 177 1 117 4 68 1 321 1 187 1 74 1 188 1 372 8 119 3 298 2 159 4 23 1 50 1 122 10 139 18 377 1 142 1 236 5 82 1 
257 1 32 2 196 2 313 7 128 3 264 3 172 1 265 1 8 4 269 2 174 3 65 4 177 1 68 1 117 4 321 1 74 1 188 1 372 8 119 3 298 3 159 4 122 9 139 16 377 1 142 1 236 6 
196 1 313 4 240 3 187 1 119 1 264 3 122 3 139 7 89 1 365 3 174 3 236 6 82 2 
257 1 32 1 196 2 313 8 240 1 128 2 264 1 172 1 265 1 8 4 89 1 269 2 365 1 174 3 65 4 177 1 68 1 117 4 321 1 187 1 74 1 188 1 372 8 119 3 298 2 159 4 23 1 122 10 139 18 377 1 142 1 236 4 82 1 
232 1 81 1 47 1 295 1 164 1 366 1 344 1 
232 1 223 1 133 1 47 1 295 1 359 1 138 1 81 1 164 1 311 1 344 1 366 1 
134 1 171 1 281 1 210 1 350 1 90 1 351 1 108 1 152 1 7 1 162 1 
354 1 237 1 210 1 168 1 132 1 108 1 98 1 47 1 7 1 134 1 171 1 350 1 90 1 81 2 152 1 307 1 344 1 366 2 
354 1 237 2 259 1 123 1 210 1 94 1 168 1 132 2 371 1 97 1 98 1 47 1 7 1 134 3 171 1 350 1 90 2 202 1 81 2 152 1 307 1 344 2 366 2 
237 2 354 1 259 1 123 1 168 1 7 1 171 2 90 2 246 1 202 1 152 2 366 2 344 2 184 1 210 1 94 1 132 2 371 1 97 1 47 1 134 3 350 2 81 2 307 1 
333 1 72 1 259 1 123 1 210 1 132 1 197 2 211 1 108 1 371 1 121 2 7 1 373 1 171 3 134 4 63 1 39 1 350 3 90 1 246 1 140 1 152 3 46 1 
333 1 72 1 259 1 123 1 210 1 185 1 132 1 197 2 211 1 108 1 371 1 121 2 7 1 171 3 134 4 39 1 350 3 90 1 246 1 140 1 152 3 46 1 
171 1 210 1 350 1 152 1 146 1 7 1 
320 1 210 3 132 1 21 1 2 1 108 2 189 1 146 1 7 2 49 1 171 6 134 3 217 1 160 1 350 7 90 2 247 1 152 7 129 1 317 1 219 1 
237 1 196 1 240 1 7 1 8 2 152 1 65 2 117 2 344 1 210 1 73 1 119 1 159 2 299 2 23 1 122 3 350 1 81 2 307 1 82 1 220 1 354 1 258 1 261 1 313 3 168 1 126 1 358 2 171 1 364 1 89 1 90 1 365 1 174 2 271 1 129 1 366 2 369 1 187 1 132 1 98 1 372 4 48 1 47 2 134 1 139 6 236 2 
332 2 1 1 333 1 57 1 59 1 86 1 197 3 108 1 225 1 171 1 289 1 39 1 201 2 152 1 67 2 130 2 46 2 345 1 72 1 183 1 185 1 211 1 121 3 134 2 280 1 350 1 140 1 378 1 
210 2 211 1 357 1 132 1 146 1 7 1 171 2 134 2 350 2 90 1 247 1 152 2 129 1 
210 1 108 1 7 1 171 4 134 1 103 1 281 1 350 4 90 1 246 1 152 4 129 1 162 1 
210 2 325 1 132 1 371 1 2 1 254 1 7 1 171 2 134 1 217 1 135 1 350 2 90 1 152 2 
171 1 360 1 153 1 210 1 350 1 108 1 114 1 152 1 169 1 7 1 
210 1 7 1 49 1 171 2 134 1 350 2 90 1 152 2 129 1 305 1 219 1 
210 2 371 1 108 1 21 1 7 2 49 1 171 4 134 3 103 1 160 1 281 1 350 5 90 2 152 5 129 1 162 1 
210 2 371 1 108 1 21 1 199 1 7 2 49 1 171 4 134 3 103 1 281 1 350 5 90 2 152 5 129 1 162 1 
354 1 237 1 210 1 184 1 168 1 132 1 108 1 47 1 7 1 134 1 171 1 350 1 90 1 81 2 152 1 307 1 344 1 366 2 
320 1 210 2 132 1 2 1 371 1 7 1 171 1 134 1 217 1 350 1 90 1 247 1 152 1 
329 1 186 1 337 1 47 1 111 1 
333 1 72 1 94 1 59 1 186 2 197 2 97 1 337 2 96 1 224 1 99 1 47 1 121 2 111 1 329 2 39 1 150 1 202 1 27 1 
84 1 186 1 111 1 329 1 161 1 81 1 204 1 344 1 366 1 
150 1 27 1 111 1 
106 1 125 3 300 1 79 1 200 3 52 1 64 1 173 1 93 1 308 1 251 1 
79 1 88 1 323 1 205 1 
79 1 106 1 
79 1 106 1 351 1 251 1 
79 1 200 1 106 1 125 1 173 1 251 1 308 1 
194 1 125 1 163 1 
106 1 125 3 79 1 300 1 200 3 52 2 173 1 41 1 285 1 179 1 308 1 251 1 
79 1 37 1 200 2 106 1 125 2 173 1 251 1 93 1 308 1 
360 1 79 1 300 1 33 1 200 1 323 1 125 1 173 1 114 1 214 1 308 1 
79 1 300 1 200 1 106 1 125 1 173 1 308 1 
300 1 200 1 106 2 125 1 173 1 251 1 308 1 
106 1 20 1 125 2 79 1 149 1 300 1 200 2 173 2 308 2 206 1 
106 1 323 1 125 3 296 1 300 1 79 2 200 3 88 1 64 1 173 1 251 1 308 1 93 2 
33 1 153 1 106 1 294 1 125 2 227 1 79 1 300 1 360 1 200 2 173 1 114 2 251 1 308 1 93 1 
106 1 323 1 125 4 300 1 37 1 79 2 200 4 88 1 173 2 13 1 251 1 308 2 93 2 
79 1 300 1 200 1 106 1 125 1 173 1 251 1 308 1 
106 2 323 1 125 4 79 3 200 4 88 1 52 1 41 1 173 1 285 1 205 1 251 2 93 2 308 1 
18 1 106 1 125 2 314 1 79 1 300 1 200 2 283 1 173 1 308 1 93 1 251 1 
287 1 106 1 125 3 79 1 300 1 200 3 52 2 173 1 41 2 285 1 308 1 251 1 
79 2 266 1 40 1 277 2 
300 1 200 1 267 1 125 1 173 1 308 1 
79 1 300 1 200 2 106 1 64 1 125 2 173 1 251 1 93 1 308 1 
28 1 
79 1 300 1 200 1 106 1 125 1 173 1 251 1 308 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 5 48 1 265 2 203 1 204 1 157 1 159 2 104 1 54 2 295 1 112 1 233 1 351 1 168 1 40 2 356 3 213 1 212 1 329 1 193 9 378 6 68 2 146 2 71 2 124 1 147 4 332 1 195 9 
25 5 48 1 265 2 203 1 204 1 157 1 159 2 104 1 54 2 295 1 112 1 233 1 351 1 168 1 40 2 356 3 213 1 212 1 329 1 193 9 378 6 68 2 146 2 71 2 124 1 147 4 332 1 195 9 
25 6 48 1 265 2 203 1 204 1 157 1 159 2 104 1 54 2 295 1 112 1 233 1 351 1 168 1 40 2 356 4 213 1 212 1 329 1 193 10 378 7 68 2 146 2 71 2 124 1 147 5 332 1 195 10 
25 4 265 2 203 1 204 1 157 1 159 2 104 1 54 1 295 1 112 1 233 1 351 1 168 1 40 2 356 2 213 1 212 1 329 1 193 7 378 4 68 2 146 2 71 2 124 1 147 3 332 1 195 7 
25 3 48 1 351 1 265 1 203 1 40 1 159 1 356 1 54 2 193 4 378 3 146 1 68 1 295 1 112 1 124 1 147 2 195 4 
25 1 351 1 265 1 310 1 40 1 213 1 104 1 193 2 146 1 68 1 295 1 71 1 124 1 259 1 195 2 269 1 
25 2 351 1 204 1 356 1 193 3 378 1 146 2 68 2 295 1 71 1 124 1 147 1 195 3 
25 5 48 1 265 1 203 1 204 1 159 1 184 1 32 1 54 2 295 1 112 1 351 1 168 1 40 1 356 3 212 1 193 9 378 7 68 2 146 2 71 1 147 4 124 1 195 9 
25 5 48 1 265 1 203 1 204 1 159 1 184 1 32 1 54 2 295 1 112 1 351 1 168 1 40 1 356 3 212 1 193 9 378 7 68 2 146 2 71 1 147 4 124 1 195 9 
225 1 288 1 201 1 
115 1 288 1 183 2 
58 2 226 2 363 2 141 1 113 2 156 2 277 2 317 1 
99 1 226 2 363 3 3 1 266 1 154 1 309 1 156 2 103 1 339 1 158 1 160 1 206 2 77 2 249 1 113 3 318 1 317 1 252 1 165 1 164 1 11 1 58 2 14 2 85 1 141 1 277 2 302 1 175 1 326 1 93 1 69 1 380 1 125 1 284 2 286 2 24 1 
58 1 226 1 197 1 341 1 363 1 141 1 113 1 156 1 277 1 359 1 
225 1 288 1 59 1 83 1 363 1 300 1 156 1 65 1 132 1 113 1 344 1 283 1 359 1 82 1 
225 1 58 1 288 1 226 1 59 1 83 1 363 1 277 1 156 1 65 2 132 2 113 1 344 1 359 1 82 1 
132 1 280 1 142 1 353 1 65 1 
225 1 288 1 132 2 304 1 280 1 353 1 242 1 65 2 
132 1 280 1 65 1 
58 1 226 1 197 1 13 1 363 1 353 1 141 1 277 1 156 1 65 1 341 1 132 1 113 1 359 1 
288 1 
225 1 288 1 132 2 304 1 280 1 353 1 28 1 65 2 
225 1 349 1 288 1 139 1 353 2 274 2 65 5 215 2 186 1 328 1 19 1 132 5 304 1 177 2 292 1 280 2 8 1 162 1 306 1 
201 1 317 1 
58 1 105 1 226 1 363 2 113 2 277 1 156 2 317 2 196 1 
262 1 281 1 235 1 
14 1 363 1 85 1 3 1 103 1 158 1 175 1 206 1 93 1 113 1 380 1 96 1 317 1 165 1 286 1 24 1 
58 1 14 1 235 1 85 1 363 2 3 1 277 1 156 1 103 1 158 1 175 1 206 1 93 1 113 2 380 1 223 1 165 1 24 1 128 1 286 1 
58 3 226 1 363 3 113 3 156 3 277 3 317 1 128 1 
58 1 341 1 363 1 113 1 156 1 277 1 359 1 
58 1 105 1 226 1 363 1 113 1 156 1 277 1 359 1 196 1 
99 1 226 2 363 4 3 1 289 1 266 1 156 3 158 1 339 1 103 1 160 1 105 1 206 1 132 1 77 2 249 1 113 4 344 1 317 1 252 1 165 1 347 1 82 1 11 1 58 3 59 1 83 1 14 1 85 1 141 1 277 3 302 1 175 1 65 1 93 1 69 1 380 1 125 1 359 1 284 1 223 1 24 1 128 1 286 1 
58 1 363 2 300 1 113 2 156 2 277 1 317 1 35 1 128 1 
58 3 226 1 288 1 12 1 59 1 83 1 363 3 277 3 156 3 65 1 105 1 132 1 344 1 113 3 359 1 223 1 347 1 82 1 128 2 
58 2 226 1 363 2 235 1 277 2 156 2 105 1 281 1 113 2 128 1 
14 1 363 1 85 1 3 1 103 1 158 1 175 1 206 1 93 1 113 1 380 1 317 1 165 1 286 1 24 1 
321 1 14 1 363 1 3 1 103 1 175 1 206 1 93 1 113 1 220 1 380 1 317 1 165 1 286 1 24 1 
99 1 181 1 262 2 149 1 264 1 130 1 160 1 5 1 77 2 7 1 249 1 318 2 252 1 11 1 166 1 235 2 281 2 258 1 121 1 69 2 23 1 72 1 125 1 284 4 
58 1 363 1 113 1 345 1 156 1 277 1 359 1 82 1 
58 4 226 1 363 5 300 1 277 4 156 5 105 1 41 1 21 1 113 5 223 1 35 1 317 1 128 2 
58 2 341 1 363 2 345 1 113 2 156 2 277 2 359 1 
170 1 46 1 
170 1 46 1 
73 1 320 1 
73 1 320 1 
73 1 320 1 
198 1 170 1 46 1 
170 1 240 1 46 1 
338 1 170 2 73 1 312 1 297 1 46 2 320 1 
198 1 170 1 46 1 
198 1 170 1 46 1 
55 1 170 1 46 1 
55 1 170 1 46 1 
55 1 170 1 46 1 
335 2 288 1 50 1 338 1 84 1 273 2 150 1 362 3 170 2 152 1 267 1 65 2 42 1 132 2 248 2 133 1 111 2 333 2 46 2 
335 1 362 1 150 1 363 2 52 1 156 2 132 1 248 1 250 1 111 1 113 2 317 1 58 2 273 1 170 1 210 1 172 1 62 1 277 2 256 1 65 1 240 1 46 1 127 1 
265 1 40 1 159 1 
265 1 310 1 40 1 
265 3 310 1 355 1 159 2 188 1 209 1 
282 1 364 1 265 1 310 1 355 1 188 1 
265 2 310 1 355 1 159 1 188 2 
225 1 288 2 52 1 183 3 102 1 130 1 5 1 33 1 132 5 7 1 134 1 250 1 115 1 349 1 15 2 210 1 274 1 353 4 117 2 65 5 215 1 19 2 328 3 177 1 304 1 92 1 280 1 179 1 121 1 44 1 241 2 260 1 
225 1 337 1 336 1 288 5 183 9 130 3 5 3 132 9 7 3 134 3 250 4 346 1 115 3 349 1 322 1 139 1 323 5 15 6 142 5 353 7 274 2 65 9 215 2 19 6 328 8 92 1 304 1 177 2 280 6 179 2 121 3 44 2 241 6 222 1 97 1 
225 1 288 3 183 4 130 1 5 1 33 1 132 3 7 1 250 1 134 1 115 2 139 1 15 2 353 2 274 1 117 1 65 3 215 1 328 3 19 2 177 1 179 1 44 1 121 1 241 2 260 1 
225 1 337 1 288 4 336 1 183 7 130 2 5 2 33 1 132 4 7 2 250 2 134 2 115 3 139 1 15 4 274 1 353 3 117 2 65 4 215 1 328 5 19 4 177 1 179 1 44 1 121 2 241 4 222 1 260 1 
201 1 165 1 230 1 
22 1 165 1 
293 1 
175 1 165 1 
199 1 3 1 369 1 175 1 230 2 165 3 
3 1 175 1 165 1 
165 1 31 1 
149 3 1 1 200 1 255 1 301 2 119 1 130 1 5 1 376 1 291 1 357 1 69 3 23 4 331 1 123 1 284 5 318 2 
149 3 1 1 200 1 255 1 301 2 119 1 130 1 5 1 291 1 376 1 357 1 23 4 69 4 331 1 123 1 284 6 318 2 
149 3 1 1 200 1 255 1 301 2 119 1 130 1 5 1 291 1 376 1 357 1 69 3 23 4 331 1 123 1 305 1 284 5 318 2 
99 1 0 3 149 8 1 3 200 2 130 5 160 1 5 5 314 1 106 3 340 1 291 1 77 2 7 2 249 1 134 2 252 1 318 16 36 1 255 5 301 3 237 1 325 1 119 1 216 1 376 1 357 2 121 2 69 19 23 13 331 2 123 3 284 35 98 1 
99 2 149 4 1 1 200 1 229 1 130 1 160 2 5 1 314 1 77 4 291 1 249 2 252 2 318 3 140 1 255 1 301 2 119 1 357 1 69 5 23 5 123 1 331 1 284 8 
25 1 361 1 51 1 265 2 310 1 159 1 185 1 206 1 295 1 371 1 57 1 209 1 351 1 14 1 86 1 374 1 278 1 40 1 214 1 193 2 378 1 93 1 120 1 68 1 146 1 71 1 124 1 195 2 286 1 24 1 
25 1 51 1 265 2 310 1 159 1 185 1 206 1 295 1 371 1 348 1 57 1 209 1 351 1 14 1 86 1 374 1 278 1 40 1 193 3 375 1 378 2 93 1 120 1 68 1 146 1 122 1 71 1 195 3 286 1 24 1 
25 1 265 2 310 1 159 1 185 1 206 1 295 1 371 1 348 1 57 1 209 1 351 1 14 1 374 1 278 1 40 1 193 2 378 2 93 1 120 1 122 1 71 1 195 2 286 1 24 1 
129 1 103 1 185 2 206 1 231 1 79 1 9 1 319 1 165 1 14 1 374 2 175 1 193 1 375 1 67 1 93 1 68 1 146 1 120 2 71 2 195 1 24 1 286 1 
361 1 51 1 265 2 310 1 159 1 185 1 206 1 371 1 57 1 209 1 14 1 86 1 374 1 278 1 40 1 193 1 93 1 120 1 68 1 146 1 122 1 71 1 124 1 195 1 286 1 24 1 
261 1 
288 2 47 1 100 2 245 1 156 1 103 2 4 2 206 2 6 1 107 1 113 1 344 1 165 1 208 1 115 2 349 1 116 2 59 1 169 1 14 2 300 1 173 1 175 1 211 2 65 5 215 1 303 2 19 2 304 3 177 1 126 1 359 1 360 2 24 1 225 1 363 1 129 1 183 2 231 1 132 5 370 1 82 1 190 1 83 1 236 1 274 1 145 2 328 2 280 6 93 1 44 1 379 1 283 1 286 2 285 4 
83 1 47 1 59 1 236 1 363 1 300 1 28 1 173 1 156 1 65 3 132 3 6 1 304 1 280 2 344 1 113 1 359 1 283 1 360 1 82 1 208 1 285 2 
225 1 288 1 83 1 47 1 59 1 236 1 363 1 300 1 28 1 173 1 156 1 65 3 4 1 132 3 6 1 304 1 280 1 344 1 113 1 359 1 283 1 82 1 208 1 285 3 
225 1 288 1 83 1 47 1 59 1 236 1 363 1 300 1 28 1 173 1 156 1 65 3 4 1 145 1 132 3 6 1 304 1 280 2 344 1 113 1 359 1 283 1 360 1 82 1 208 1 285 3 
288 5 47 1 100 2 245 1 156 1 4 4 6 1 109 1 344 1 113 1 208 1 349 1 115 2 167 1 116 2 59 1 169 1 300 1 173 1 65 5 211 2 215 1 19 1 303 2 304 3 178 1 177 1 359 1 360 4 225 5 363 1 28 1 132 5 82 1 37 1 83 1 236 1 274 1 145 4 328 1 280 7 194 1 283 1 285 6 
288 2 47 1 100 2 245 1 156 1 4 2 6 1 344 1 113 1 208 1 349 1 115 2 116 2 59 1 169 1 300 1 173 1 65 4 211 2 215 1 19 1 303 2 177 1 304 2 359 1 360 2 225 1 363 1 183 2 132 4 370 1 82 1 83 1 236 1 274 1 328 1 145 2 280 4 283 1 285 4 
225 1 288 1 47 1 100 2 245 1 363 1 156 1 4 2 6 1 132 4 109 1 113 1 344 1 82 1 208 1 115 2 349 1 116 2 37 1 59 1 83 1 169 1 236 1 300 1 274 1 173 1 211 2 65 4 215 1 145 2 303 2 19 1 328 1 304 2 177 1 178 1 280 4 283 1 359 1 360 2 285 4 
225 1 288 1 47 1 100 2 245 1 363 1 156 1 4 2 6 1 132 4 109 1 113 1 344 1 82 1 208 1 115 2 349 1 116 2 37 1 59 1 83 1 169 1 236 1 300 1 274 1 173 1 211 2 65 4 215 1 145 2 303 2 19 1 328 1 304 2 177 1 178 1 280 4 283 1 359 1 360 2 285 4 
225 1 288 1 47 1 363 1 183 2 156 1 4 2 53 2 76 1 365 1 6 1 132 4 316 1 109 1 113 1 344 1 82 1 208 1 349 1 116 2 59 1 83 1 191 2 169 1 236 1 300 1 274 1 173 1 211 2 65 4 215 1 145 2 328 1 19 1 304 2 177 1 280 4 283 1 359 1 360 2 285 4 
225 1 288 1 47 1 100 2 245 1 363 1 156 1 4 3 6 1 132 4 109 1 113 1 344 1 82 1 208 1 115 2 349 1 116 2 37 1 59 1 83 1 169 1 236 1 274 1 300 1 173 1 211 2 65 4 215 1 303 2 19 1 328 1 145 3 304 2 177 1 178 1 280 5 194 1 283 1 359 1 360 3 285 5 
225 1 288 1 47 1 100 2 245 1 363 1 156 1 4 3 6 1 132 4 109 1 113 1 344 1 82 1 208 1 115 2 349 1 116 2 37 1 59 1 83 1 169 1 236 1 274 1 300 1 173 1 211 2 65 4 215 1 303 2 19 1 328 1 145 3 304 2 177 1 178 1 280 5 194 1 283 1 359 1 360 3 285 5 
225 1 288 1 47 1 363 1 183 2 156 1 4 2 53 2 6 1 132 4 316 1 113 1 344 1 370 1 82 1 208 1 349 1 116 2 59 1 83 1 191 2 169 1 236 1 274 1 300 1 173 1 211 2 65 4 215 1 145 2 328 1 19 1 304 2 177 1 280 4 283 1 359 1 360 2 285 4 
99 1 262 1 149 2 1 1 201 1 160 1 130 1 5 1 291 1 77 2 249 1 252 1 318 2 317 1 11 1 235 1 301 1 119 1 281 1 23 2 69 3 72 1 123 1 125 1 331 1 284 5 
0 3 99 2 262 11 149 1 266 1 309 1 228 1 246 1 160 2 130 2 5 1 106 3 77 4 249 2 7 1 134 2 298 1 317 1 252 2 318 8 11 2 235 11 87 1 255 1 174 1 281 4 121 2 23 2 69 6 125 1 243 1 284 14 98 1 
99 1 49 1 363 2 3 1 266 1 309 1 156 1 158 1 103 1 160 1 206 1 367 1 77 2 249 1 113 2 317 1 165 1 252 1 318 1 137 1 11 1 58 1 14 1 85 1 277 1 175 1 93 1 281 1 69 1 380 1 125 1 96 1 243 1 223 1 284 2 24 1 286 1 128 1 
99 3 149 4 1 1 3 2 156 1 103 1 339 2 158 2 160 3 5 3 206 3 291 1 249 3 7 2 294 1 113 3 252 3 165 2 11 3 58 1 254 1 14 3 255 4 301 1 119 1 63 2 175 2 176 2 121 2 122 1 69 10 218 2 23 8 123 1 125 3 223 1 128 1 24 2 262 7 307 2 363 3 266 1 309 1 130 3 77 6 134 2 317 1 318 9 189 1 85 2 235 7 277 1 93 2 281 7 380 2 331 1 243 1 284 19 286 3 
99 2 363 1 129 1 266 1 309 1 156 1 103 2 160 2 290 1 206 8 231 1 77 4 249 2 161 1 113 1 34 1 165 3 252 2 318 1 11 2 58 1 14 7 277 1 118 1 326 2 175 2 279 1 214 1 327 1 93 2 122 1 69 1 72 1 125 2 180 1 284 2 128 1 24 2 286 8 
99 1 262 1 226 1 149 1 363 1 156 1 160 1 130 1 105 1 5 1 366 1 77 2 249 1 7 1 134 1 113 1 252 1 318 1 11 1 58 1 235 1 277 1 281 1 121 1 23 1 69 2 125 1 243 1 284 3 
99 1 262 1 235 1 264 1 255 1 160 1 130 1 77 2 281 1 249 1 121 1 23 1 72 1 125 1 284 2 252 1 318 2 11 1 
99 1 262 1 181 1 149 1 235 1 160 1 5 1 77 2 281 1 249 1 7 1 23 1 69 2 72 1 125 1 284 2 252 1 11 1 
99 1 262 2 149 1 130 1 160 1 5 1 77 2 249 1 7 1 134 1 318 2 252 1 11 1 235 2 255 1 281 2 121 1 23 2 69 2 72 1 125 1 284 4 
99 1 262 1 235 1 264 1 255 1 160 1 130 1 77 2 281 1 249 1 121 1 23 1 125 1 34 1 284 2 252 1 318 2 11 1 
99 1 262 1 181 1 149 1 235 1 160 1 5 1 77 2 281 1 249 1 7 1 23 1 69 2 125 1 34 1 284 2 252 1 11 1 
99 1 262 2 149 1 130 1 160 1 5 1 77 2 249 1 7 1 134 1 34 1 318 2 252 1 11 1 235 2 255 1 281 2 121 1 23 2 69 2 125 1 284 4 
99 1 262 2 149 1 130 1 160 1 5 1 77 2 249 1 7 1 134 1 318 2 252 1 11 1 235 2 255 1 281 2 121 1 23 2 69 2 125 1 284 4 
99 1 363 1 3 1 266 1 309 1 158 1 339 1 103 1 160 1 206 1 77 2 249 1 113 1 318 1 317 1 165 1 252 1 11 1 14 1 85 1 175 1 93 1 69 1 380 1 125 1 284 2 24 1 286 1 
99 1 363 1 3 1 266 1 309 1 103 1 160 1 206 1 77 2 249 1 113 1 318 1 317 1 165 1 252 1 11 1 321 1 14 1 175 1 93 1 69 1 380 1 220 1 125 1 284 2 224 1 24 1 286 1 
99 1 262 2 149 1 130 1 160 1 5 1 77 2 249 1 7 1 134 1 318 2 252 1 11 1 235 2 255 1 281 2 121 1 23 2 69 2 125 1 243 1 284 4 
99 1 262 2 149 1 307 1 363 1 3 1 158 1 339 1 130 1 160 1 5 1 206 1 77 2 7 1 249 1 134 1 113 1 318 2 165 1 252 1 11 1 14 1 235 2 85 1 255 1 175 1 214 1 281 2 93 1 121 1 69 2 23 2 380 1 125 1 284 4 24 1 286 1 
99 1 226 1 262 1 363 1 156 1 160 1 130 1 105 1 5 1 77 2 7 1 249 1 134 1 81 1 113 1 252 1 318 2 11 1 58 1 235 1 255 1 277 1 281 1 121 1 69 1 23 1 125 1 243 1 284 3 
0 2 99 2 149 1 228 1 229 1 160 2 130 2 5 2 106 1 108 1 77 4 249 2 7 2 134 2 207 1 10 1 252 2 318 6 271 1 234 1 61 1 255 1 18 1 66 1 121 2 69 7 23 2 284 13 98 1 
99 3 0 2 149 1 153 1 229 1 160 3 130 3 131 1 314 2 5 2 106 2 108 2 77 6 78 1 249 3 7 2 343 1 134 3 207 1 114 1 252 3 318 14 138 1 271 2 272 1 234 4 61 1 255 2 18 1 121 3 23 3 69 12 284 26 98 2 
0 2 99 2 149 1 228 1 229 1 160 2 130 2 5 1 106 1 108 1 77 4 249 2 7 1 343 1 134 2 207 1 252 2 318 7 271 1 234 2 61 1 255 1 18 1 66 1 121 2 69 6 23 2 284 13 98 1 
0 2 99 2 149 1 228 1 229 1 160 2 130 2 5 1 106 1 108 1 77 4 249 2 7 1 343 1 134 2 207 1 252 2 318 7 271 1 234 2 61 1 255 1 18 1 66 1 121 2 69 6 23 2 284 13 98 1 
0 4 99 2 149 7 1 1 153 1 228 2 229 1 160 2 130 8 131 1 314 1 5 8 106 4 291 1 78 1 108 1 77 4 249 2 7 7 343 1 134 7 207 1 114 1 298 2 252 2 318 26 138 1 271 1 272 1 234 4 61 1 255 6 301 1 119 1 18 1 121 7 69 26 23 13 331 1 123 1 284 52 98 2 
335 1 205 1 50 1 338 1 248 1 273 1 170 1 111 1 267 1 46 1 
240 1 127 1 
335 1 38 1 248 1 273 1 170 1 111 1 70 1 95 1 46 1 
335 1 288 1 50 1 338 1 150 1 273 1 362 2 170 1 152 1 267 1 65 1 42 1 132 1 248 1 133 1 111 1 333 1 46 1 
335 1 288 1 50 1 338 1 150 1 273 1 362 2 170 1 152 1 267 1 65 1 42 1 132 1 248 1 133 1 111 1 333 1 46 1 
335 1 288 1 50 1 338 1 150 1 273 1 362 2 170 1 152 1 267 1 65 1 42 1 132 1 248 1 133 1 111 1 333 1 46 1 
299 1 198 1 297 1 
299 1 198 1 297 1 
55 1 352 1 
55 1 352 1 297 1 
172 1 256 1 
335 1 362 1 363 2 152 1 52 1 156 2 132 1 248 1 250 1 111 1 113 2 317 1 58 2 273 1 170 1 354 1 353 1 210 1 172 1 62 1 256 1 277 2 65 1 240 1 333 1 46 1 127 1 
299 1 198 1 
55 1 352 1 297 1 
99 1 27 1 363 2 266 1 309 1 156 2 30 1 160 1 187 1 290 1 206 2 77 2 249 1 368 1 113 2 165 1 252 1 318 1 11 1 373 1 14 2 175 1 326 2 279 1 93 1 69 1 125 1 243 1 284 2 24 1 286 2 
51 1 14 2 265 2 310 1 40 1 159 1 214 1 206 2 232 1 93 1 120 1 122 1 163 1 371 1 253 1 57 1 209 1 24 1 286 2 
51 1 14 1 265 2 310 1 144 1 40 1 159 1 206 1 93 1 120 1 122 1 371 1 253 1 57 1 209 1 286 1 24 1 
60 1 14 1 129 1 103 1 175 1 206 1 231 1 93 1 120 1 79 1 163 1 165 1 24 1 286 1 
51 1 14 1 265 2 310 1 40 1 159 1 206 1 232 1 93 1 120 1 122 1 163 1 371 1 253 1 57 1 209 1 24 1 286 1 
270 1 
225 1 288 1 328 1 19 1 8 1 201 1 162 1 
225 1 288 2 100 1 245 1 183 1 132 1 115 1 349 1 274 1 65 1 215 1 19 1 328 1 303 1 177 1 304 1 280 1 
287 1 288 8 3 3 103 1 5 2 206 3 7 2 8 1 344 2 162 1 165 10 349 4 115 6 14 3 15 6 171 2 175 3 176 2 65 5 214 1 215 4 19 8 177 4 304 3 22 3 121 2 358 2 24 4 225 2 26 1 183 12 230 2 31 2 130 2 74 2 132 5 134 2 80 2 135 1 369 1 136 1 190 1 274 4 275 2 238 1 328 9 93 3 280 5 44 2 241 6 330 2 334 2 286 3 382 2 
0 1 225 2 288 5 151 1 153 1 183 6 311 1 130 2 131 1 5 2 132 1 106 1 78 1 7 2 134 2 80 1 114 1 349 2 115 3 138 1 190 1 15 5 274 2 65 1 215 2 328 8 19 5 304 1 177 2 280 1 44 1 121 2 241 5 98 1 334 2 
226 1 197 1 1 1 363 1 156 1 130 2 5 1 341 1 132 1 80 1 113 1 349 1 58 1 37 1 13 1 274 1 141 1 277 1 325 1 65 1 215 1 19 2 328 2 177 1 123 1 331 1 359 1 334 2 
349 1 225 1 288 1 274 1 215 1 19 1 328 1 177 1 8 1 162 1 
115 5 288 5 15 5 183 10 176 1 130 2 5 2 19 5 328 5 7 2 134 2 121 2 80 1 241 5 334 2 
225 1 288 1 132 1 304 1 280 1 65 1 
182 1 129 1 103 2 206 4 132 3 231 1 107 1 268 1 136 2 165 1 349 1 139 1 190 2 14 4 274 2 238 1 175 1 65 3 215 2 328 2 19 2 177 2 304 2 93 1 280 4 44 2 126 1 24 1 286 4 
99 1 226 2 363 3 3 1 266 1 156 2 103 1 339 1 158 1 160 1 206 1 77 2 249 1 113 3 317 1 252 1 165 1 11 1 58 2 14 1 85 1 141 1 277 2 302 1 175 1 93 1 69 1 380 1 125 1 284 1 286 1 24 1 
115 2 349 1 225 1 288 3 190 1 15 2 274 1 301 1 183 4 215 1 19 1 328 2 177 1 44 1 241 2 334 1 
248 1 111 1 296 1 
50 1 248 1 342 1 111 1 256 1 
248 1 111 1 296 1 
248 1 111 1 296 1 
248 1 111 1 219 1 
248 1 111 1 219 1 
248 1 111 1 219 1 
248 1 111 1 
170 1 46 1 
99 2 149 2 1 1 255 1 301 1 119 1 130 1 160 2 5 1 314 1 77 4 291 1 249 2 69 4 23 3 331 1 123 1 284 7 318 3 252 2 
149 2 1 1 201 1 301 1 119 1 130 1 5 1 291 1 69 3 23 2 123 1 331 1 284 5 318 2 
99 1 149 1 255 1 101 1 160 1 130 1 5 1 77 2 7 1 249 1 134 1 121 1 69 2 23 2 284 4 252 1 318 2 
0 2 149 1 228 1 255 1 130 1 5 1 106 1 7 1 134 1 121 1 69 4 23 2 284 7 98 1 318 3 
0 2 99 2 149 5 1 2 228 1 246 1 130 3 160 2 5 3 314 2 106 2 291 1 77 4 7 2 249 2 134 2 298 1 318 10 252 2 255 4 301 1 119 1 64 1 121 2 23 9 69 12 331 1 123 2 284 22 
0 1 69 1 284 1 
106 1 284 1 318 1 
99 1 149 2 255 1 101 1 176 1 160 1 130 1 5 1 77 2 249 1 7 1 134 1 121 1 69 3 23 3 284 6 252 1 318 3 
0 1 99 1 149 1 153 1 229 1 160 1 130 2 131 1 5 2 106 1 78 1 77 2 249 1 7 2 134 2 114 1 252 1 318 6 138 1 255 1 121 2 69 6 23 2 284 12 98 1 
149 1 1 1 255 1 130 1 5 1 69 3 23 2 331 1 123 1 284 6 318 3 
99 1 149 1 1 1 255 1 64 1 119 1 160 1 314 1 291 1 77 2 249 1 23 2 69 2 123 1 284 3 318 1 252 1 
99 1 149 3 1 2 255 2 229 1 325 1 160 1 130 2 5 2 77 2 249 1 23 5 69 5 123 2 331 1 284 10 252 1 318 5 
99 1 255 1 229 1 160 1 130 1 77 2 249 1 121 1 23 1 284 2 252 1 318 2 
99 1 149 1 255 1 229 1 160 1 130 1 5 1 77 2 7 1 249 1 134 1 121 1 69 2 23 2 284 4 252 1 318 2 
99 3 149 1 1 1 255 1 229 1 64 1 160 3 314 1 66 1 77 6 249 3 69 2 23 2 123 1 284 3 252 3 318 1 
0 4 99 5 149 7 1 3 228 1 101 1 229 1 160 5 130 5 314 2 5 5 340 1 106 3 291 1 77 10 249 5 7 3 134 3 252 5 318 15 36 1 255 5 301 1 237 1 119 1 64 1 66 1 121 3 69 18 23 12 331 2 123 3 284 33 98 1 
0 1 99 1 149 2 1 1 229 1 130 1 160 1 5 1 106 1 78 1 77 2 291 1 249 1 252 1 318 3 301 1 119 1 69 4 23 2 123 1 331 1 284 7 98 1 
0 2 99 2 149 2 1 1 228 1 101 1 229 1 160 2 130 2 5 1 106 1 291 1 78 1 77 4 249 2 134 1 252 2 318 5 255 1 301 1 119 1 121 1 69 5 23 3 331 1 123 1 284 10 98 1 
0 1 99 3 149 3 1 1 153 1 101 1 229 1 160 3 130 3 131 1 5 3 314 1 106 1 291 1 78 1 77 6 249 3 7 2 134 2 114 1 252 3 318 8 138 1 255 1 301 1 119 1 121 2 69 10 23 4 331 1 123 1 284 18 98 1 
0 1 99 3 149 3 1 1 153 1 101 1 229 1 160 3 130 3 131 1 314 1 5 2 106 1 291 1 78 1 77 6 249 3 7 1 134 2 114 1 252 3 318 9 138 1 255 2 301 1 119 1 121 2 69 7 23 5 331 1 123 1 284 16 98 1 
0 1 99 1 149 2 1 1 229 1 130 1 160 1 5 1 106 1 78 1 77 2 291 1 249 1 252 1 318 3 301 1 119 1 69 4 23 2 123 1 331 1 284 7 98 1 
0 1 99 1 149 1 153 1 229 1 160 1 130 2 131 1 5 2 106 1 78 1 77 2 249 1 7 2 134 2 114 1 252 1 318 6 138 1 255 1 121 2 69 6 23 2 284 12 98 1 
0 1 99 4 149 3 1 1 153 1 101 1 229 1 160 4 130 3 131 1 5 2 314 2 106 1 291 1 78 1 77 8 249 4 7 1 134 2 114 1 252 4 318 9 138 1 255 2 301 1 119 1 121 2 69 8 23 5 331 1 123 1 284 17 98 1 
0 1 99 4 149 3 153 1 229 1 160 4 130 3 131 1 5 2 314 2 106 1 78 1 77 8 249 4 7 2 134 3 114 1 252 4 318 9 138 1 255 3 66 1 121 3 69 7 23 6 284 16 98 1 
149 3 1 3 255 3 119 1 130 1 5 1 291 2 69 4 23 6 123 3 331 1 284 7 318 3 
0 1 99 4 149 3 1 1 153 1 229 1 160 4 130 3 131 1 5 2 314 2 106 1 291 1 78 1 77 8 249 4 7 1 134 2 114 1 252 4 318 9 138 1 255 1 301 1 119 1 66 1 121 2 69 8 23 4 331 1 123 1 284 17 98 1 
39 1 363 1 300 1 113 1 156 1 317 1 35 1 
39 1 363 1 227 1 300 1 29 1 156 1 247 1 113 1 221 1 45 1 317 1 35 1 
206 1 231 1 14 1 93 1 129 1 201 1 103 1 175 1 165 1 24 1 286 1 
58 1 14 1 363 2 85 1 3 1 277 1 156 1 103 1 175 1 206 1 93 1 113 2 380 1 317 1 165 1 24 1 128 1 286 1 
363 2 3 2 156 2 31 1 206 1 113 2 136 1 317 1 165 3 82 1 58 2 83 1 14 1 85 1 171 1 277 1 175 2 93 1 380 1 359 1 286 1 128 1 24 1 
363 2 3 2 156 2 31 1 206 2 113 2 136 1 317 1 165 3 82 1 58 2 83 1 14 2 171 1 277 1 175 2 93 1 381 1 220 1 380 1 359 1 286 2 128 1 24 1 
225 1 288 1 3 1 103 1 230 1 31 1 206 3 132 2 344 1 136 1 165 4 14 3 143 1 171 1 175 1 65 2 93 1 280 1 22 1 94 1 381 1 286 3 24 1 
225 1 288 1 14 3 3 1 171 1 103 1 175 1 31 1 65 2 230 1 206 3 132 2 280 1 93 1 22 1 344 1 381 1 358 1 136 1 165 4 24 1 286 3 
206 1 14 1 93 1 161 1 24 1 286 1 
14 6 3 1 202 1 155 1 118 1 103 2 326 1 175 2 279 1 90 1 214 1 327 1 206 7 93 2 161 1 122 1 369 1 180 1 165 3 286 7 24 3 
99 2 149 2 1 1 3 1 156 1 158 1 339 1 160 2 5 1 206 1 291 1 249 2 113 2 252 2 165 1 11 2 58 1 14 1 301 1 63 1 175 1 119 1 214 1 23 2 69 3 125 2 123 1 128 1 24 1 262 1 307 1 363 2 130 1 77 4 368 1 318 2 317 1 85 1 235 1 277 1 281 1 93 1 380 1 331 1 243 1 284 5 286 1 
225 1 288 1 103 1 230 1 74 1 206 1 132 3 8 1 344 1 162 1 165 2 349 2 14 1 274 2 353 1 275 1 238 1 65 3 215 2 328 1 19 1 177 2 304 1 280 2 22 1 330 1 358 1 286 1 
287 1 14 2 3 1 175 1 230 1 214 1 206 2 93 1 161 1 369 1 165 2 286 2 24 2 
14 4 129 1 103 1 175 1 214 1 75 1 206 4 231 1 93 1 381 1 165 1 24 1 286 4 
254 1 14 2 3 1 202 1 324 1 155 1 175 1 206 2 91 1 93 1 136 1 165 1 286 2 24 2 
206 1 14 1 93 1 265 1 310 1 103 1 40 1 57 1 24 1 286 1 
373 1 14 2 175 1 279 1 214 1 206 2 93 1 122 1 165 1 286 2 24 1 
14 4 129 1 103 1 118 1 175 2 279 1 214 1 75 1 206 5 231 1 93 2 136 1 180 1 165 3 286 5 24 2 
14 4 129 1 103 1 257 1 175 2 279 1 214 1 75 1 206 5 231 1 93 2 136 1 180 1 165 3 286 5 24 2 
58 1 14 1 363 2 3 1 277 1 156 1 103 1 175 1 206 1 93 1 113 2 380 1 220 1 317 1 165 1 24 1 128 1 286 1 
14 1 3 1 202 1 155 1 175 1 90 1 206 1 93 1 369 1 136 1 165 1 286 1 24 2 
43 1 377 1 276 1 251 1 317 1 
225 1 288 1 83 1 59 1 16 1 308 1 353 1 276 2 89 1 65 2 43 1 132 2 377 2 344 1 359 1 251 2 317 1 82 1 347 1 
187 1 27 1 43 1 377 1 363 1 113 1 156 1 30 1 251 1 
43 1 16 1 89 1 
25 1 351 1 201 1 295 1 
25 1 351 1 193 1 68 1 146 1 295 1 195 1 
71 1 374 1 195 1 
25 1 351 1 213 2 313 1 193 3 146 1 68 1 110 1 295 1 124 1 195 3 244 1 
25 1 54 1 351 1 193 2 378 1 68 1 146 1 295 1 195 2 
25 1 193 1 68 1 146 1 265 1 112 1 147 1 124 1 40 1 159 1 195 1 
25 1 351 1 193 1 68 1 146 1 124 1 195 1 
351 2 193 1 68 1 146 1 295 1 124 1 195 1 
25 1 351 1 148 1 192 1 20 1 193 2 146 2 68 2 124 1 195 2 
25 2 351 1 168 1 356 1 212 1 193 3 378 2 146 1 68 1 295 1 124 1 147 1 195 3 
25 1 351 1 2 1 265 2 310 1 159 1 40 1 193 2 378 1 146 1 68 1 295 1 124 1 195 2 209 1 
25 2 48 1 351 1 356 1 54 1 193 4 378 2 146 2 68 2 295 1 124 1 147 1 195 4 
25 1 351 1 193 1 68 1 146 1 295 1 124 1 195 1 
25 3 351 2 17 1 356 1 213 1 313 1 193 4 378 2 146 1 68 1 295 2 147 1 195 4 244 1 
25 1 350 1 351 1 184 1 193 2 217 1 378 1 146 1 68 1 295 1 124 1 195 2 
25 1 351 1 213 2 313 2 193 3 239 1 146 1 68 1 295 1 124 1 195 3 244 1 
25 2 372 2 56 1 88 1 
193 1 315 1 68 1 146 1 124 1 195 1 
25 1 351 1 193 2 378 1 68 1 146 1 295 1 124 1 195 2 212 1 
263 1 
25 1 351 1 193 1 68 1 146 1 295 1 124 1 195 1 
25 1 351 1 193 3 378 1 68 1 146 1 295 1 124 1 195 3 212 1 213 1 
25 1 17 1 147 1 356 1 
25 1 351 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (223,290) 270 216 (94,202) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (223,290) 270 216 (94,202) (94,202) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (223,290) 270 216 (94,202) (94,202) 370 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 30 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 30 316 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 319 1 47 2 77 1 302 1 360 1 53 2 52 2 229 1 275 1 281 9 305 2 159 1 253 1 327 9 345 4 214 1 114 1 115 1 88 1 116 2 259 2 174 6 69 3 263 2 100 1 351 1 352 5 
297 1 319 1 47 2 77 1 302 1 52 2 360 1 53 2 229 1 275 1 281 9 159 1 305 2 253 1 327 9 345 4 214 1 114 1 115 1 88 1 116 2 259 2 174 6 69 3 263 2 100 1 351 1 352 5 
297 1 319 1 47 2 77 1 302 1 52 2 360 1 53 2 229 1 275 1 281 10 159 1 305 2 253 1 327 10 345 5 214 1 114 1 115 1 88 1 116 2 259 2 174 7 69 4 263 2 100 1 351 1 352 6 
297 1 319 1 47 2 77 1 302 1 52 2 360 1 53 2 229 1 275 1 281 7 159 1 305 1 253 1 327 7 345 3 214 1 114 1 115 1 88 1 116 2 259 2 174 4 69 2 263 2 351 1 352 4 
214 1 319 1 47 1 259 1 302 1 53 1 52 1 229 1 174 3 69 1 281 4 263 1 305 2 100 1 253 1 352 3 327 4 345 2 
214 1 353 1 284 1 319 1 47 1 115 1 116 1 259 1 53 1 281 2 190 1 263 1 253 1 352 1 351 1 327 2 
214 1 319 1 47 2 88 1 116 1 53 2 174 1 69 1 281 3 253 1 352 2 327 3 345 1 
214 1 319 1 114 1 47 2 88 1 169 1 116 1 259 1 302 1 52 1 53 2 229 1 174 7 69 3 281 9 263 1 305 2 159 1 100 1 253 1 352 5 9 1 327 9 345 4 
214 1 319 1 114 1 47 2 88 1 169 1 116 1 259 1 302 1 52 1 53 2 229 1 174 7 69 3 281 9 263 1 305 2 159 1 100 1 253 1 352 5 9 1 327 9 345 4 
156 1 348 1 25 1 
54 1 
95 2 201 2 362 2 216 1 374 2 270 2 290 2 122 1 
75 1 0 1 267 2 201 3 154 1 270 2 247 1 277 2 189 1 206 1 108 1 362 2 341 1 250 1 366 2 365 2 131 2 326 1 368 1 192 1 160 1 165 1 216 1 372 1 18 1 290 2 92 1 65 1 117 1 95 2 144 1 23 1 374 3 176 1 99 1 122 1 124 1 
216 1 270 1 290 1 94 1 
13 1 201 1 170 1 172 1 156 1 340 1 207 1 278 1 348 1 362 1 148 1 374 1 212 1 191 1 
201 1 270 1 290 1 170 2 172 1 156 1 340 2 95 1 207 1 278 1 348 1 362 1 148 1 374 1 212 1 
64 1 340 1 79 1 170 1 62 1 
156 1 340 2 348 1 96 1 79 1 334 1 170 2 62 1 
340 1 79 1 170 1 
340 1 216 1 270 1 290 1 202 1 170 1 94 1 62 1 
348 1 
156 1 340 2 348 1 37 1 79 1 334 1 170 2 62 1 
318 1 371 1 257 1 215 2 268 1 203 1 79 2 170 5 62 2 32 1 156 1 340 5 348 1 241 1 252 2 161 1 334 1 101 2 265 1 
35 1 201 2 290 1 92 1 140 1 117 1 189 1 95 1 108 1 362 1 250 1 341 1 22 1 374 2 99 1 366 1 365 1 131 1 368 1 124 1 
25 1 122 1 
201 2 373 1 270 1 290 1 95 1 362 2 374 2 85 1 122 2 
35 1 21 1 120 1 
201 1 92 1 117 1 189 1 108 1 341 1 250 1 374 1 99 1 366 1 365 1 131 1 231 1 368 1 122 1 124 1 
13 1 45 1 201 5 270 1 290 4 140 1 219 1 39 1 95 4 362 5 22 2 374 5 85 1 122 1 
278 1 95 2 201 2 362 2 333 1 374 2 223 1 290 2 
95 3 201 3 362 3 22 1 374 3 270 1 290 3 122 1 
278 1 95 1 201 1 362 1 333 1 374 1 290 1 
278 1 95 1 201 1 362 1 374 1 373 1 270 1 85 1 290 1 
75 1 267 1 201 4 154 1 270 2 247 1 277 2 189 1 340 1 207 1 278 1 108 1 362 3 250 1 341 1 212 1 85 1 366 1 365 1 131 1 326 1 368 1 367 1 192 1 160 1 216 1 372 1 18 1 290 3 170 1 92 1 172 1 140 1 65 1 117 1 195 1 95 3 22 1 148 1 23 1 374 4 99 1 122 1 124 1 
13 1 45 1 95 1 201 2 362 2 22 1 374 2 290 1 122 1 
135 1 201 3 270 1 290 3 170 1 172 1 140 1 340 1 278 1 95 3 207 1 348 1 362 3 22 2 148 1 374 3 212 1 85 1 367 1 
95 2 35 1 201 2 362 2 22 1 120 1 374 2 270 1 85 1 290 2 
201 1 92 1 117 1 189 1 108 1 341 1 250 1 374 1 99 1 366 1 365 1 131 1 368 1 122 1 124 1 
184 1 201 1 31 1 92 1 117 1 108 1 341 1 250 1 374 1 366 1 365 1 131 1 368 1 122 1 124 1 
127 1 75 1 267 4 185 1 357 1 154 2 247 1 271 1 277 2 209 1 326 1 160 1 133 1 165 2 35 2 194 1 18 1 237 1 221 1 21 2 120 2 23 1 196 1 26 1 
278 1 95 1 201 1 362 1 374 1 223 1 290 1 172 1 
313 1 283 1 
313 1 283 1 
364 1 137 1 
364 1 137 1 
364 1 137 1 
313 1 61 1 283 1 
313 1 61 1 283 1 
76 1 313 1 283 1 
339 1 295 1 313 2 364 1 137 1 283 2 
313 1 61 1 283 1 
313 1 139 1 283 1 
313 1 139 1 283 1 
313 1 139 1 283 1 
28 1 76 1 201 2 340 1 362 2 210 1 109 1 310 1 111 1 283 1 313 1 15 1 288 1 289 1 290 2 170 1 93 1 315 1 95 2 374 2 70 1 224 1 122 1 73 1 
28 2 46 1 313 2 89 1 288 2 170 2 303 1 93 2 238 2 339 1 249 1 340 2 348 1 213 1 70 3 121 1 310 2 73 1 283 2 
263 1 259 1 52 1 
353 1 263 1 259 1 
273 1 353 1 40 1 263 3 272 1 52 2 
273 1 353 1 263 2 272 1 321 1 52 1 
273 2 353 1 263 2 272 1 52 1 
355 1 357 1 226 1 203 1 79 1 54 3 32 2 274 1 156 1 340 5 282 1 252 1 109 1 111 1 257 3 215 1 15 1 194 1 113 1 136 1 38 1 237 1 170 5 332 2 62 4 348 2 349 2 146 2 375 1 101 1 334 1 26 1 
318 1 182 1 355 2 357 3 226 3 79 6 203 1 104 1 54 9 32 6 274 1 156 1 340 9 280 1 252 2 109 4 14 1 257 8 215 2 194 3 136 3 38 2 237 3 170 9 20 1 332 6 62 7 64 5 143 5 348 5 349 6 72 1 334 1 101 2 26 3 
318 1 355 1 357 1 226 1 32 2 54 4 156 1 340 3 252 1 109 1 257 3 215 1 113 1 194 1 136 2 38 1 237 1 170 3 332 2 62 2 348 3 146 1 349 2 375 1 101 1 26 1 
318 1 355 1 357 2 226 2 54 7 32 4 156 1 340 4 280 1 252 1 109 2 14 1 257 5 215 1 113 1 194 2 136 3 38 1 237 2 170 4 332 4 62 3 348 4 349 4 146 2 375 1 72 1 101 1 26 2 
108 1 240 1 25 1 
108 1 27 1 
260 1 
108 1 368 1 92 1 
108 1 71 1 
108 1 92 1 
92 1 260 1 108 3 240 2 368 1 33 1 34 1 
152 1 165 4 267 7 185 2 154 3 237 1 19 1 187 2 221 3 279 1 322 1 361 1 158 1 343 1 376 1 309 1 26 1 
152 1 165 4 267 7 185 2 154 3 237 1 19 1 187 2 221 3 279 1 322 1 361 1 158 1 343 1 376 1 309 1 26 1 
152 1 165 4 267 7 185 2 154 3 237 1 19 1 187 2 221 3 279 1 322 1 361 1 158 1 343 1 376 1 87 1 309 1 26 1 
75 1 152 2 267 31 185 5 300 1 154 15 226 3 357 3 247 1 187 3 277 2 322 1 279 2 361 5 158 1 208 4 326 1 343 2 160 1 308 1 309 1 164 3 165 16 194 3 330 1 287 1 237 4 19 1 221 10 239 1 24 1 376 2 125 1 26 4 
75 2 152 1 267 9 185 3 300 1 154 4 247 2 187 2 277 4 322 1 279 1 361 1 158 1 326 2 160 2 343 1 165 5 237 1 19 1 220 1 221 4 44 1 376 1 26 1 
353 1 298 1 2 1 319 1 47 1 6 1 52 1 53 1 83 1 341 1 250 1 281 2 131 1 365 1 366 1 253 1 327 2 328 1 214 1 166 1 233 1 116 1 259 1 171 1 174 1 142 1 40 1 41 1 263 2 352 1 
183 1 353 1 298 1 319 1 47 1 244 1 6 1 52 1 53 1 8 1 83 1 341 1 250 1 281 3 131 1 365 1 366 1 327 3 328 1 214 1 166 1 233 1 116 1 259 1 171 1 174 2 40 1 142 1 263 2 352 1 
353 1 298 1 319 1 244 1 6 1 52 1 8 1 83 1 341 1 250 1 281 2 131 1 365 1 366 1 327 2 328 1 214 1 233 1 116 1 259 1 171 1 174 2 40 1 263 2 352 1 
266 1 183 1 298 2 47 1 48 1 53 1 106 1 83 2 108 1 250 1 341 1 281 1 131 1 365 1 366 1 327 1 234 1 17 1 116 2 92 1 171 2 117 1 261 1 
353 1 298 1 47 1 244 1 6 1 52 1 53 1 83 1 341 1 250 1 281 1 131 1 365 1 366 1 253 1 327 1 328 1 166 1 233 1 116 1 259 1 171 1 142 1 40 1 41 1 263 2 
49 1 
1 1 201 1 102 1 246 1 203 1 54 2 156 1 340 5 207 1 108 1 341 1 250 1 212 1 252 1 346 1 13 1 257 2 215 1 170 5 172 1 218 1 117 2 348 2 261 1 177 1 179 2 264 1 356 2 228 2 79 6 358 1 32 2 82 2 276 1 278 1 362 1 366 2 365 2 131 2 84 1 325 2 191 1 136 2 234 1 38 1 331 2 92 1 138 1 145 2 97 4 147 1 148 1 374 1 334 3 101 1 
13 1 201 1 37 1 102 1 246 1 79 2 170 3 138 1 172 1 82 1 276 1 340 3 278 1 207 1 362 1 97 2 148 1 212 1 177 1 374 1 191 1 334 1 
13 1 201 1 37 1 356 1 102 1 246 1 79 1 170 3 138 1 172 1 156 1 276 1 340 3 278 1 207 1 348 1 362 1 97 3 148 1 212 1 177 1 374 1 191 1 334 1 
201 1 102 1 356 1 246 1 79 2 276 1 82 1 156 1 340 3 207 1 278 1 362 1 212 1 191 1 13 1 37 1 170 3 138 1 172 1 348 1 97 3 148 1 374 1 177 1 179 1 334 1 
201 1 356 4 102 1 246 1 228 2 203 1 338 1 79 7 32 1 156 5 276 1 82 4 340 5 207 1 278 1 362 1 212 1 84 1 325 2 252 1 191 1 346 1 13 1 257 1 215 1 136 2 37 1 16 1 331 2 170 5 292 1 138 1 172 1 66 1 348 5 145 2 97 6 148 1 177 1 374 1 179 4 101 1 242 1 334 3 
201 1 102 1 246 1 203 1 54 2 156 1 340 4 207 1 212 1 252 1 346 1 13 1 257 1 215 1 170 4 172 1 348 1 177 1 179 2 356 2 228 2 79 4 32 1 276 1 82 2 278 1 362 1 84 1 191 1 325 2 136 2 331 2 138 1 97 4 145 2 148 1 147 1 374 1 101 1 334 2 
201 1 356 2 102 1 246 1 228 2 79 4 338 1 203 1 32 1 156 1 82 2 276 1 340 4 207 1 278 1 362 1 212 1 84 1 325 2 191 1 252 1 346 1 13 1 257 1 215 1 136 2 331 2 170 4 292 1 138 1 172 1 348 1 145 2 97 4 148 1 374 1 177 1 179 2 334 2 101 1 242 1 
201 1 356 2 102 1 246 1 228 2 79 4 338 1 203 1 32 1 156 1 82 2 276 1 340 4 207 1 278 1 362 1 212 1 84 1 325 2 191 1 252 1 346 1 13 1 257 1 215 1 136 2 331 2 170 4 292 1 138 1 172 1 348 1 145 2 97 4 148 1 374 1 177 1 179 2 334 2 101 1 242 1 
201 1 356 2 102 1 246 1 79 4 203 1 359 2 54 2 32 1 156 1 82 2 276 1 340 4 207 1 278 1 362 1 212 1 325 2 191 1 252 1 162 1 163 1 346 1 13 1 257 1 285 2 215 1 331 2 170 4 292 1 138 1 172 1 348 1 97 4 148 1 350 1 374 1 177 1 179 2 334 2 101 1 
201 1 102 1 356 3 246 1 228 2 203 1 338 1 79 5 32 1 156 1 276 1 82 3 340 4 207 1 278 1 362 1 212 1 84 1 325 2 252 1 191 1 346 1 13 1 257 1 215 1 136 2 331 2 170 4 292 1 138 1 172 1 66 1 348 1 145 2 97 5 148 1 374 1 177 1 179 3 334 2 101 1 242 1 
201 1 102 1 356 3 246 1 228 2 203 1 338 1 79 5 32 1 156 1 276 1 82 3 340 4 207 1 278 1 362 1 212 1 84 1 325 2 252 1 191 1 346 1 13 1 257 1 215 1 136 2 331 2 170 4 292 1 138 1 172 1 66 1 348 1 145 2 97 5 148 1 374 1 177 1 179 3 334 2 101 1 242 1 
201 1 102 1 246 1 203 1 359 1 54 1 32 1 276 1 340 2 207 1 278 1 362 1 212 1 325 1 191 1 252 1 162 1 346 1 13 1 257 1 215 1 331 1 170 2 138 1 172 1 97 2 147 1 148 1 177 1 374 1 101 1 
75 1 267 6 185 2 154 3 247 1 187 1 277 2 279 1 322 1 158 1 326 1 160 1 343 1 165 3 35 1 18 1 237 1 19 1 221 2 21 1 120 1 23 1 196 1 25 1 122 2 26 1 
75 2 3 1 267 14 185 1 154 6 226 2 357 1 247 2 277 4 361 1 208 3 326 2 160 2 57 1 164 3 58 1 165 8 35 11 194 2 287 1 18 1 236 1 237 2 65 1 221 2 144 1 21 11 120 4 23 2 24 1 122 1 377 1 26 1 
75 1 267 2 201 2 154 1 103 1 51 1 247 1 189 1 277 2 108 1 362 1 250 1 341 1 131 1 365 1 366 1 368 1 231 1 326 1 160 1 165 1 18 1 290 1 92 1 140 1 63 1 117 1 65 1 95 1 144 1 22 1 120 1 23 1 374 2 99 1 122 1 124 1 377 1 
4 1 201 3 244 1 154 10 247 3 204 2 155 2 108 2 341 2 250 2 158 1 343 1 160 3 165 10 18 3 19 1 65 1 117 1 221 8 21 7 22 1 120 7 23 3 317 2 122 2 124 2 26 3 75 3 267 20 185 4 226 2 357 2 187 1 277 6 189 2 279 1 322 1 362 1 361 4 363 1 131 3 365 3 366 3 326 3 368 2 35 7 194 2 372 2 290 1 237 3 92 2 140 1 95 1 144 1 374 3 99 2 42 2 243 1 377 1 
75 2 2 1 267 2 201 1 244 1 227 1 5 1 154 1 247 2 248 1 7 1 277 4 56 1 206 2 362 1 108 3 250 2 341 2 130 1 131 8 365 8 366 7 326 2 160 2 165 1 234 1 18 2 290 1 92 2 293 1 117 2 65 1 95 1 144 1 261 1 22 1 374 1 23 2 196 1 
75 1 267 3 185 1 201 1 270 1 226 1 357 1 154 2 247 1 277 2 362 1 85 1 326 1 160 1 255 1 165 1 35 1 194 1 18 1 290 1 237 1 221 1 95 1 21 1 120 1 23 1 374 1 377 1 26 1 
75 1 267 2 165 2 35 1 194 1 18 1 247 1 237 1 277 2 221 1 361 1 21 1 120 1 23 1 209 1 196 1 326 1 160 1 
75 1 127 1 267 2 185 1 35 1 357 1 154 2 18 1 247 1 277 2 221 1 21 1 120 1 23 1 196 1 326 1 160 1 26 1 
75 1 267 4 165 2 185 1 35 2 194 1 154 2 357 1 226 1 18 1 247 1 237 1 277 2 221 2 361 1 21 2 120 2 23 1 196 1 326 1 160 1 26 1 
75 1 267 2 165 2 35 1 194 1 18 1 247 1 237 1 56 1 277 2 221 1 361 1 21 1 120 1 23 1 209 1 326 1 160 1 
75 1 127 1 267 2 185 1 35 1 357 1 154 2 18 1 247 1 56 1 277 2 221 1 21 1 120 1 23 1 326 1 160 1 26 1 
75 1 267 4 165 2 185 1 35 2 194 1 154 2 357 1 226 1 18 1 247 1 237 1 56 1 277 2 221 2 361 1 21 2 120 2 23 1 326 1 160 1 26 1 
75 1 165 2 267 4 185 1 35 2 194 1 154 2 357 1 226 1 18 1 247 1 237 1 277 2 221 2 361 1 21 2 120 2 23 1 326 1 160 1 26 1 
75 1 267 2 201 1 154 1 247 1 189 1 277 2 108 1 250 1 341 1 131 1 365 1 366 1 368 1 326 1 160 1 165 1 372 1 18 1 92 1 117 1 65 1 144 1 374 1 23 1 99 1 122 1 124 1 
75 1 184 1 267 2 129 1 201 1 154 1 247 1 31 1 277 2 108 1 250 1 341 1 131 1 365 1 366 1 368 1 326 1 160 1 165 1 18 1 92 1 117 1 65 1 144 1 374 1 23 1 122 1 124 1 
75 1 267 4 165 2 185 1 35 2 194 1 154 2 357 1 226 1 18 1 247 1 237 1 277 2 221 2 361 1 21 2 120 2 23 1 326 1 160 1 26 1 377 1 
75 1 2 1 267 4 185 1 201 1 154 2 357 1 226 1 247 1 189 1 277 2 361 1 108 1 250 1 341 1 131 1 365 1 366 1 368 1 326 1 160 1 165 2 35 2 194 1 372 1 18 1 237 1 92 1 221 2 21 2 120 2 374 1 23 1 99 1 317 1 124 1 26 1 
75 1 225 1 267 3 201 1 154 1 357 1 270 1 226 1 247 1 277 2 361 1 362 1 85 1 326 1 160 1 165 2 35 1 194 1 18 1 290 1 237 1 221 1 95 1 21 1 120 1 23 1 374 1 26 1 377 1 
75 2 267 19 185 3 269 1 154 10 226 3 357 3 247 2 105 1 277 4 361 3 208 2 323 1 211 1 326 2 160 2 112 1 164 1 165 9 194 3 287 1 237 3 291 1 173 2 68 2 220 1 221 6 24 1 43 1 26 3 
200 1 75 3 267 26 185 2 300 2 269 1 154 12 226 3 357 2 247 3 277 6 361 2 208 2 211 2 326 3 193 1 160 3 254 1 10 1 112 1 164 2 12 1 165 14 194 3 237 3 291 2 173 4 68 1 221 4 220 1 98 1 24 2 43 1 26 2 
200 1 75 3 267 41 185 4 300 1 269 1 154 21 226 4 357 4 247 3 105 1 187 1 277 6 279 1 322 1 361 4 158 1 208 4 211 1 326 3 193 1 343 1 160 3 254 1 10 1 112 1 164 3 12 1 165 20 194 4 287 1 237 5 291 2 19 1 173 4 68 1 220 1 221 8 98 1 24 3 43 1 126 1 26 5 
200 1 75 4 267 38 185 4 300 2 269 1 154 18 226 4 357 3 247 4 105 1 187 1 277 8 279 1 322 1 361 3 158 1 208 4 211 1 326 4 193 1 343 1 160 4 254 1 10 1 112 1 164 3 12 1 165 20 194 4 287 1 237 5 291 2 19 1 173 4 68 1 220 1 221 7 98 1 24 3 43 1 126 1 26 4 
200 1 75 2 3 2 267 52 185 7 300 1 269 1 154 25 226 7 357 7 247 2 187 1 277 4 279 1 322 1 361 7 158 1 208 4 211 1 326 2 193 1 343 1 160 2 254 1 10 1 112 1 164 4 12 1 165 27 194 7 287 2 237 8 291 1 19 1 173 4 68 1 220 1 221 14 98 1 24 2 43 1 26 8 
339 1 249 1 28 1 313 1 213 1 288 1 369 1 93 1 310 1 283 1 
76 1 210 1 
335 1 28 1 313 1 86 1 288 1 91 1 93 1 310 1 283 1 
258 1 61 1 
295 1 336 1 139 1 
28 1 46 1 313 1 89 1 288 1 170 1 93 1 238 1 339 1 249 1 340 1 348 1 213 1 70 2 121 1 73 1 310 1 283 1 
28 1 46 1 313 1 89 1 288 1 170 1 93 1 238 1 339 1 249 1 340 1 348 1 213 1 70 2 121 1 73 1 310 1 283 1 
28 1 46 1 313 1 89 1 288 1 170 1 93 1 238 1 339 1 249 1 340 1 348 1 213 1 70 2 121 1 73 1 310 1 283 1 
295 1 258 1 61 1 
295 1 258 1 61 1 
336 1 139 1 
295 1 336 1 139 1 
315 1 289 1 
28 1 76 1 201 2 340 1 362 2 210 1 109 1 310 1 111 1 283 1 313 1 15 1 89 1 288 1 289 1 290 2 170 1 93 1 62 1 238 1 141 1 315 1 95 2 374 2 70 1 224 1 122 1 
75 1 267 2 201 2 154 1 247 1 248 1 7 1 55 1 277 2 206 2 108 1 362 2 250 1 341 1 131 2 365 2 366 2 326 1 160 1 110 1 311 1 256 1 312 1 165 1 18 1 92 1 65 1 144 1 23 1 374 2 377 1 
353 1 298 1 2 1 233 1 320 1 244 1 78 1 259 1 52 1 40 1 142 1 262 1 250 1 341 1 263 2 366 2 365 2 131 2 328 1 
353 1 298 1 233 1 244 1 259 1 52 1 107 1 40 1 142 1 262 1 341 1 250 1 263 2 366 1 365 1 131 1 328 1 
298 1 234 1 245 1 78 1 92 1 106 1 117 1 108 1 261 1 250 1 341 1 366 1 365 1 131 1 
353 1 298 1 233 1 320 1 244 1 78 1 259 1 52 1 40 1 142 1 262 1 250 1 341 1 263 2 366 1 365 1 131 1 328 1 
168 1 
32 1 156 1 371 1 257 1 348 1 161 1 25 1 
228 1 203 1 79 1 32 1 54 1 156 1 340 1 84 1 252 1 257 1 215 1 136 1 170 1 348 1 145 1 101 1 334 1 
226 1 29 1 79 2 203 2 155 1 32 3 54 2 340 2 108 4 341 1 250 2 131 1 365 1 366 1 252 2 368 1 33 1 257 2 36 1 215 2 194 1 38 1 60 1 237 1 170 2 92 1 332 2 117 1 67 1 349 2 148 1 240 1 296 1 178 1 334 1 101 2 199 1 27 2 
200 1 226 2 357 2 203 1 54 3 32 4 208 1 252 1 10 1 254 1 164 1 12 1 257 6 215 1 194 2 237 2 332 5 349 5 98 1 24 1 101 1 26 2 
257 2 215 1 216 1 286 2 270 1 290 1 202 1 237 1 338 1 203 1 170 1 19 1 94 1 32 1 340 1 279 1 252 1 101 1 343 1 370 1 26 1 
371 1 257 1 215 1 203 1 32 1 156 1 348 1 252 1 161 1 101 1 
257 2 194 1 136 2 226 1 357 1 237 1 332 2 32 2 54 4 348 2 349 2 26 1 
156 1 340 1 348 1 79 1 170 1 334 1 
318 1 1 2 50 2 203 1 79 4 32 2 340 3 108 1 250 1 341 1 131 4 365 4 366 4 252 2 257 2 215 2 234 1 38 2 170 3 92 1 218 1 117 2 118 1 175 1 261 1 197 1 264 1 101 2 334 2 
75 1 267 1 201 3 154 1 270 2 247 1 277 2 189 1 362 2 108 1 341 1 250 1 131 1 365 1 366 1 326 1 192 1 368 1 160 1 216 1 372 1 18 1 290 2 92 1 65 1 117 1 95 2 374 3 23 1 99 1 122 1 124 1 
1 1 257 1 215 1 38 1 203 1 332 1 54 1 32 1 156 1 348 1 252 1 101 1 
181 1 288 1 310 1 
181 1 288 1 310 1 
213 1 288 1 289 1 205 1 310 1 
181 1 288 1 310 1 
288 1 186 1 310 1 
288 1 186 1 310 1 
288 1 186 1 310 1 
288 1 310 1 
313 1 283 1 
75 2 267 8 165 4 185 2 300 1 154 4 237 1 247 2 187 1 19 1 277 4 221 3 322 1 279 1 361 1 158 1 326 2 160 2 343 1 26 1 
165 3 267 6 185 2 154 3 237 1 187 1 19 1 322 1 279 1 221 2 158 1 25 1 343 1 26 1 
75 1 165 2 267 4 185 1 167 1 194 1 154 2 357 1 226 1 247 1 237 1 277 2 221 2 361 1 326 1 160 1 26 1 
164 1 267 7 165 3 185 1 194 1 287 1 357 1 154 4 226 1 237 1 221 2 361 1 208 2 24 1 26 1 
75 2 3 1 267 23 185 5 300 2 226 2 154 12 357 2 247 2 187 1 277 4 279 2 322 1 361 4 158 1 208 2 326 2 343 2 160 2 57 1 164 2 165 11 194 2 287 1 237 3 19 1 314 1 221 9 26 3 
267 1 208 1 154 1 
164 1 267 1 165 1 
75 1 267 6 165 3 167 1 185 2 194 1 154 3 226 1 357 1 247 1 237 1 155 1 277 2 221 3 361 1 326 1 160 1 26 1 
75 1 200 1 267 12 185 1 154 6 226 2 357 2 247 1 277 2 361 1 208 1 326 1 160 1 10 1 254 1 164 1 12 1 165 6 194 2 237 2 220 1 221 2 98 1 24 1 26 2 
165 3 267 6 185 1 154 3 237 1 19 1 279 1 221 2 361 1 343 1 26 1 
75 1 165 1 267 3 185 1 300 1 154 2 247 1 314 1 277 2 221 2 279 1 322 1 361 1 158 1 326 1 343 1 160 1 
75 1 165 5 267 10 185 3 154 5 247 1 237 2 19 1 277 2 220 1 279 2 221 5 361 2 326 1 160 1 343 2 370 1 26 2 
75 1 165 2 267 2 194 1 247 1 237 1 277 2 220 1 221 1 361 1 326 1 160 1 
75 1 165 2 267 4 185 1 194 1 154 2 357 1 226 1 247 1 237 1 277 2 221 2 220 1 361 1 326 1 160 1 26 1 
75 3 267 3 165 1 185 1 300 1 154 2 247 3 105 1 314 1 277 6 220 1 279 1 221 2 361 1 326 3 160 3 343 1 
75 5 267 34 185 7 300 2 154 18 226 3 357 3 247 5 187 1 105 1 277 10 279 3 322 1 361 5 158 1 208 4 326 5 343 3 160 5 164 3 165 16 167 1 194 3 330 1 287 1 237 5 19 2 314 1 239 1 220 1 221 12 24 1 125 1 26 5 
75 1 267 8 185 2 154 4 247 1 187 1 277 2 322 1 279 1 208 1 158 1 326 1 160 1 343 1 164 1 165 4 237 1 19 1 220 1 221 2 98 1 24 1 26 1 
75 2 267 11 185 2 154 5 226 1 247 2 187 1 277 4 279 1 322 1 361 1 158 1 208 2 326 2 343 1 160 2 164 1 165 6 167 1 194 1 287 1 237 2 19 1 220 1 221 3 98 1 24 1 26 1 
75 3 200 1 267 19 185 3 300 1 154 10 226 2 357 2 247 3 187 1 277 6 279 1 322 1 361 1 158 1 208 1 326 3 343 1 160 3 254 1 10 1 164 1 12 1 165 9 167 1 194 2 237 3 19 1 220 1 221 4 98 1 24 1 26 3 
75 3 200 1 267 17 185 3 300 1 154 7 226 2 357 1 247 3 187 1 277 6 279 1 322 1 361 2 158 1 208 1 326 3 343 1 160 3 10 1 254 1 164 1 12 1 165 10 167 1 194 2 237 3 19 1 220 1 221 5 98 1 24 1 26 2 
75 1 267 8 185 2 154 4 247 1 187 1 277 2 322 1 279 1 208 1 158 1 326 1 160 1 343 1 164 1 165 4 237 1 19 1 220 1 221 2 98 1 24 1 26 1 
75 1 200 1 267 12 185 1 154 6 226 2 357 2 247 1 277 2 361 1 208 1 326 1 160 1 10 1 254 1 164 1 12 1 165 6 194 2 237 2 220 1 221 2 98 1 24 1 26 2 
200 1 75 4 267 18 185 3 300 2 154 8 226 2 357 1 247 4 187 1 277 8 279 1 322 1 361 2 158 1 208 1 326 4 343 1 160 4 254 1 10 1 164 1 12 1 165 10 167 1 194 2 237 3 19 1 220 1 221 5 98 1 24 1 26 2 
200 1 75 4 267 16 185 3 300 2 154 7 226 3 357 2 247 4 105 1 277 8 361 3 208 1 326 4 160 4 254 1 10 1 164 1 12 1 165 9 194 3 237 3 220 1 221 6 98 1 24 1 26 2 
267 7 165 3 185 3 154 4 237 1 19 1 322 2 279 3 221 6 361 3 158 1 343 3 26 1 
200 1 75 4 267 18 185 3 300 2 154 8 226 2 357 1 247 4 187 1 105 1 277 8 279 1 322 1 361 1 158 1 208 1 326 4 343 1 160 4 254 1 10 1 164 1 12 1 165 10 194 2 237 3 19 1 220 1 221 4 98 1 24 1 26 2 
30 1 
316 1 59 1 30 1 306 1 217 1 80 1 
117 1 108 1 261 1 250 1 341 1 234 1 131 1 365 1 366 1 25 1 92 1 
201 2 290 1 92 1 117 1 95 1 108 1 362 1 250 1 22 1 341 1 374 2 99 1 366 1 365 1 131 1 368 1 122 1 124 1 
201 2 50 1 290 1 92 2 172 1 278 1 95 2 157 1 108 3 362 2 250 1 22 1 341 1 212 1 374 2 99 1 71 1 366 1 365 1 131 1 368 2 122 1 124 1 
201 2 329 1 50 1 290 1 92 2 31 1 172 1 278 1 95 2 157 1 108 3 362 2 250 1 22 1 341 1 212 1 374 2 71 1 366 2 365 2 131 2 368 2 122 1 124 1 
128 1 329 1 50 1 79 1 170 2 92 1 117 1 156 1 340 2 348 1 157 1 108 4 250 1 341 1 148 1 240 1 71 1 366 3 365 3 131 3 368 1 149 1 27 1 
329 1 50 1 79 1 170 2 92 1 117 1 156 1 340 2 348 1 157 1 108 4 250 1 341 1 148 1 296 1 240 1 71 1 366 3 365 3 131 3 368 1 27 1 
250 1 341 1 130 1 131 1 365 1 366 1 
2 1 244 1 227 1 5 1 92 2 7 1 293 1 347 1 117 2 206 1 108 3 341 2 250 3 119 1 130 1 366 6 365 7 131 7 368 1 33 1 11 1 
75 2 2 1 267 6 185 2 201 2 154 3 247 2 187 1 204 1 277 4 189 1 279 1 322 1 108 1 362 1 250 1 341 1 158 1 366 1 365 1 131 1 368 1 326 2 343 1 160 2 110 1 165 3 35 1 372 1 18 2 237 1 290 1 19 1 92 1 221 2 95 1 21 1 22 1 120 1 23 2 374 2 317 1 99 1 122 2 124 1 26 1 377 1 
29 1 203 2 79 2 32 1 156 1 340 3 108 2 365 1 366 1 131 1 252 2 161 1 371 1 257 1 215 2 36 1 60 1 170 3 62 1 117 1 175 1 348 1 148 1 296 1 240 1 101 2 334 1 27 1 
2 1 92 1 67 1 108 2 341 1 250 2 240 1 130 1 366 2 365 2 131 2 368 1 33 1 
2 1 329 1 234 1 92 1 117 1 261 1 108 1 250 1 341 1 366 4 365 4 131 4 232 1 
74 1 50 1 92 1 304 1 347 1 108 1 341 1 250 2 119 1 366 2 365 2 131 2 368 1 243 1 
353 1 117 1 250 1 341 1 233 1 263 1 131 1 365 1 366 1 259 1 
311 1 2 1 244 1 92 1 7 1 108 1 341 1 250 1 366 2 365 2 131 2 
2 1 50 1 234 1 5 1 227 1 92 2 7 1 117 1 261 1 108 3 341 2 250 2 366 4 365 5 131 5 232 1 
2 1 50 1 234 1 227 1 92 2 7 1 117 1 261 1 108 3 341 2 250 2 366 4 365 5 131 5 232 1 180 1 
201 2 290 1 92 1 31 1 117 1 95 1 108 1 362 1 250 1 22 1 341 1 374 2 366 1 365 1 131 1 368 1 122 1 124 1 
50 1 92 1 347 1 108 1 341 1 250 2 119 1 366 1 365 1 131 1 368 1 33 1 11 1 
294 1 222 1 235 1 122 1 150 1 
153 1 235 2 170 2 172 1 62 1 156 1 340 2 294 2 278 1 207 1 348 1 148 1 212 1 222 2 367 1 122 1 150 1 151 1 123 1 
256 1 312 1 201 1 55 1 294 1 362 1 222 1 374 1 150 1 
153 1 123 1 150 1 
214 1 319 1 352 1 25 1 
214 1 319 1 47 1 281 1 352 1 327 1 53 1 
83 1 116 1 327 1 
214 1 299 1 319 1 47 1 53 1 281 3 253 1 352 1 351 2 344 1 327 3 134 1 
214 1 174 1 319 1 47 1 281 2 305 1 352 1 327 2 53 1 
47 1 259 1 53 1 52 1 229 1 281 1 263 1 253 1 352 1 327 1 345 1 
214 1 47 1 281 1 253 1 352 1 327 1 53 1 
214 2 319 1 47 1 281 1 253 1 327 1 53 1 
214 1 47 2 301 1 53 2 281 2 251 1 253 1 132 1 352 1 327 2 
214 1 319 1 47 1 114 1 53 1 174 2 69 1 281 3 159 1 253 1 352 2 327 3 345 1 
214 1 353 1 319 1 47 1 259 1 53 1 52 1 188 1 174 1 40 1 281 2 263 2 253 1 352 1 327 2 
214 1 319 1 47 2 53 2 174 2 69 1 281 4 305 1 253 1 100 1 352 2 327 4 345 1 
214 1 319 1 47 1 281 1 253 1 352 1 327 1 53 1 
214 2 299 1 319 2 47 1 53 1 174 2 69 1 281 4 230 1 351 1 352 3 327 4 345 1 134 1 
214 1 174 1 319 1 342 1 47 1 281 2 169 1 253 1 352 1 81 1 327 2 53 1 
214 1 299 2 319 1 47 1 53 1 281 3 198 1 253 1 352 1 351 2 327 3 134 1 
337 1 354 2 307 1 352 2 
47 1 281 1 324 1 253 1 327 1 53 1 
214 1 174 1 319 1 114 1 47 1 281 2 253 1 352 1 327 2 53 1 
90 1 
214 1 319 1 47 1 281 1 253 1 352 1 327 1 53 1 
214 1 174 1 319 1 114 1 47 1 281 3 253 1 352 1 351 1 327 3 53 1 
69 1 230 1 352 1 345 1 
214 1 352 1 

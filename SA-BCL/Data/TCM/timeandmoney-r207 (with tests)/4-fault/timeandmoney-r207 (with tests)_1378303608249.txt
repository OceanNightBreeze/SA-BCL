#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 246 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 246 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 48 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 3 298 3 159 2 225 1 269 1 110 1 226 2 111 1 96 1 273 2 314 1 317 1 309 1 
298 9 159 2 2 1 235 1 35 1 5 1 96 4 217 1 193 2 219 1 197 2 309 1 43 9 129 1 19 2 174 1 225 1 269 1 110 1 226 2 111 3 113 1 273 5 314 6 317 2 117 1 207 2 356 1 
298 9 159 2 2 1 235 1 35 1 5 1 96 4 217 1 193 2 219 1 197 2 309 1 43 9 129 1 19 2 174 1 225 1 269 1 110 1 226 2 111 3 113 1 273 5 314 6 317 2 117 1 207 2 356 1 
298 10 159 2 2 1 235 1 35 1 5 1 96 5 217 1 193 2 219 1 197 2 309 1 43 10 129 1 19 2 174 1 225 1 269 1 110 1 226 2 111 4 113 1 273 6 314 7 317 2 117 1 207 2 356 1 
298 7 159 2 2 1 235 1 35 1 5 1 96 3 217 1 193 1 219 1 197 2 309 1 43 7 129 1 19 2 225 1 269 1 110 1 226 2 111 2 113 1 273 4 314 4 317 2 117 1 207 2 356 1 
43 4 298 4 159 1 19 1 174 1 269 1 235 1 110 1 111 1 226 1 96 2 314 3 273 3 193 2 117 1 207 1 197 1 309 1 
43 2 298 2 169 1 159 1 276 1 19 1 269 1 110 1 226 1 35 1 273 1 317 1 219 1 285 1 197 1 309 1 
298 9 159 2 2 1 235 1 5 1 96 4 193 2 197 1 309 1 288 1 43 9 221 1 19 1 174 1 225 1 269 1 110 1 111 3 226 2 314 7 273 5 317 1 117 1 207 1 
298 9 159 2 2 1 235 1 5 1 96 4 193 2 197 1 309 1 288 1 43 9 221 1 19 1 174 1 225 1 269 1 110 1 111 3 226 2 314 7 273 5 317 1 117 1 207 1 
263 1 101 1 0 1 187 1 105 1 106 1 45 1 256 1 33 1 304 1 126 1 363 1 138 1 322 1 
196 1 
198 1 368 1 0 2 18 1 363 2 139 1 45 1 196 1 
168 1 343 2 198 2 58 1 368 1 68 1 54 1 0 5 255 1 278 1 45 2 303 1 354 2 363 5 139 1 99 1 196 1 183 2 119 1 
246 1 139 1 196 1 
272 1 41 2 196 1 
101 2 263 1 105 2 304 2 106 2 256 2 33 2 4 1 
53 1 325 1 256 2 33 3 329 1 333 2 4 1 304 2 218 1 241 2 167 2 367 1 306 1 10 1 101 3 263 1 310 1 345 1 102 2 105 2 265 1 106 2 202 1 224 1 80 1 108 1 293 2 47 1 21 1 294 1 83 1 271 1 154 1 157 1 232 1 252 1 88 1 
101 1 263 1 187 1 105 1 304 1 106 1 256 1 138 1 33 1 322 1 
101 1 76 1 0 1 77 1 256 1 188 1 33 1 191 1 181 1 363 1 139 1 196 1 31 1 322 1 
101 1 0 2 76 1 77 1 105 1 106 1 256 1 33 1 191 1 304 1 363 2 139 1 196 1 31 1 322 1 
198 1 359 1 0 1 363 1 45 1 
198 1 368 1 0 2 363 2 139 1 45 1 196 1 64 1 
198 1 0 1 363 1 
101 2 75 1 15 1 105 1 106 1 256 2 33 2 4 2 304 1 
254 1 190 1 26 1 
101 1 10 1 102 1 325 1 265 1 202 1 224 1 33 1 108 1 293 1 333 1 294 1 4 1 284 1 252 1 88 1 
246 1 4 1 
101 3 105 3 304 3 106 1 378 1 256 3 33 3 4 1 
101 1 187 1 105 1 304 1 256 1 33 1 322 1 
101 1 75 1 15 1 105 1 304 1 106 1 256 1 33 1 322 1 
358 1 0 1 325 1 144 1 256 3 33 4 333 1 4 1 191 1 304 3 363 1 241 1 167 2 367 1 306 1 10 1 101 4 310 1 263 1 345 1 76 1 102 1 15 1 77 1 265 1 105 3 202 1 106 2 245 1 224 1 80 1 108 1 293 1 21 1 294 1 83 1 271 1 378 1 157 1 232 1 252 1 88 1 31 1 322 1 
101 2 152 1 105 1 304 1 256 2 378 1 188 1 33 2 4 1 
101 3 358 1 0 1 76 1 15 1 77 1 105 3 106 1 245 1 328 1 256 3 33 3 191 1 304 3 363 1 378 2 196 1 322 1 31 1 
101 2 254 1 15 1 105 2 106 1 256 2 33 2 304 2 378 1 26 1 
101 1 10 1 102 1 325 1 265 1 202 1 224 1 33 1 108 1 293 1 333 1 294 1 4 1 252 1 88 1 
101 1 10 1 102 1 325 1 265 1 202 1 224 1 33 1 108 1 293 1 333 1 4 1 316 1 366 1 88 1 
91 1 254 2 274 1 70 1 190 2 262 1 241 4 57 1 167 2 306 1 80 1 135 1 47 2 21 1 295 1 150 1 83 2 227 1 271 1 355 1 26 2 157 1 232 1 253 1 
101 1 105 1 304 1 370 1 256 1 33 1 322 1 31 1 
10 1 101 2 254 1 102 1 325 1 265 1 105 1 202 1 245 1 224 1 256 1 33 2 108 1 293 1 333 1 294 1 304 1 378 1 252 1 88 1 
101 5 15 1 105 4 106 1 245 1 256 5 188 1 330 1 33 5 4 1 375 1 152 1 304 4 378 2 
101 2 187 1 370 1 105 2 304 2 256 2 33 2 322 1 
275 1 149 1 40 1 
199 1 73 1 149 2 40 2 220 1 134 1 
149 1 40 1 
149 1 40 1 
199 1 73 1 
199 1 73 1 
199 1 73 1 
149 1 16 1 40 1 
149 1 16 1 40 1 
149 1 16 1 40 1 
149 1 40 1 52 1 
149 1 40 1 52 1 
149 1 40 1 52 1 
0 2 149 2 242 2 32 1 327 1 56 1 134 1 147 1 136 3 261 1 162 1 337 2 362 2 363 2 342 1 318 2 40 2 196 1 308 2 
0 1 160 1 275 1 256 2 33 2 4 1 147 1 93 1 238 1 337 1 304 2 362 1 363 1 40 1 240 1 308 1 100 1 101 2 242 1 149 1 105 2 223 1 136 1 315 1 
148 1 276 1 19 2 207 1 95 2 
19 1 207 1 197 1 
276 1 19 1 197 1 
148 1 276 1 19 3 247 1 207 2 95 1 
23 1 148 1 276 1 19 2 207 1 95 1 
0 5 160 1 211 2 303 1 363 5 364 2 240 1 41 3 57 1 196 2 343 1 198 1 168 3 58 2 13 1 368 1 223 1 45 4 46 1 295 1 249 2 150 1 204 1 270 1 228 1 272 1 354 1 355 1 139 1 320 1 231 1 183 1 
90 1 68 1 359 5 0 9 160 4 211 6 301 1 334 1 303 1 363 9 41 9 57 3 196 5 198 6 343 2 168 8 58 6 13 3 368 1 45 7 268 1 46 2 371 1 295 3 249 6 150 3 349 5 228 2 272 3 354 2 355 3 139 1 51 1 231 1 183 2 
68 1 0 3 160 1 211 2 363 3 364 1 41 4 57 1 196 3 343 1 168 3 58 2 13 1 45 2 46 1 295 1 249 2 204 1 150 1 270 1 228 1 272 2 354 1 355 1 139 1 183 1 
90 1 68 1 0 4 160 2 211 4 334 1 363 4 364 2 41 7 57 2 196 4 343 1 168 5 58 4 13 2 46 1 45 3 295 2 249 4 204 1 150 2 270 1 228 1 272 3 354 1 355 2 139 1 51 1 183 1 
130 1 
50 1 246 1 108 1 
141 1 108 1 
108 1 88 1 
10 1 103 1 50 2 312 1 108 3 88 1 
10 1 108 1 88 1 
131 1 108 1 
89 2 145 1 233 1 70 4 262 5 241 15 344 1 12 2 17 1 47 8 373 2 150 3 83 7 114 1 179 2 355 3 206 1 118 1 87 1 
89 3 122 3 360 1 145 1 233 1 70 7 332 1 260 1 336 1 239 1 283 1 36 4 262 14 38 1 241 41 57 3 167 2 12 3 13 3 17 1 80 1 47 21 21 1 373 3 295 3 83 20 150 6 179 2 114 7 271 1 355 6 206 1 118 2 157 1 87 2 
209 1 89 2 360 1 145 1 70 5 262 7 241 17 167 4 12 2 291 1 17 1 80 2 21 2 47 9 373 2 150 3 83 8 114 2 179 2 271 2 355 3 206 1 118 1 157 2 87 1 
89 2 145 1 233 1 70 4 262 5 241 15 12 2 17 1 47 8 373 2 150 3 83 7 179 2 114 1 355 3 206 1 118 1 87 1 
89 2 145 1 233 1 70 4 262 7 241 15 12 2 17 1 47 8 373 2 150 3 83 7 114 3 179 2 355 3 206 1 118 1 87 1 
298 1 159 1 325 1 212 1 69 2 333 1 123 1 194 1 43 1 201 1 102 1 104 2 202 1 347 2 224 1 108 1 293 1 226 1 317 2 86 1 321 1 185 1 88 1 
43 1 298 1 159 1 102 1 276 1 325 1 104 1 79 1 202 1 19 2 347 1 247 1 234 1 69 1 269 1 293 1 92 1 333 1 226 1 281 1 338 1 192 1 317 1 207 1 197 1 184 1 
298 2 159 1 325 1 276 1 234 1 69 1 34 1 333 1 281 1 338 1 192 1 197 1 309 1 43 2 102 1 104 1 79 1 202 1 347 1 19 2 247 1 269 1 293 1 110 1 226 1 273 1 314 1 317 1 207 1 184 1 
298 3 159 1 325 1 276 1 234 1 69 1 333 1 92 1 361 1 281 1 338 1 197 1 309 1 43 3 201 1 102 1 104 1 79 1 202 1 347 1 19 2 247 1 293 1 110 1 226 1 273 1 314 2 317 1 207 1 184 1 
298 2 325 1 276 1 234 1 69 1 333 1 92 1 361 1 197 1 309 1 43 2 102 1 104 1 79 1 202 1 347 1 19 2 247 1 293 1 110 1 273 1 314 2 317 1 207 1 184 1 
290 1 
186 2 0 5 325 1 55 2 188 1 333 2 191 1 282 2 196 2 198 6 343 1 101 1 58 2 102 2 60 4 202 1 107 2 292 1 108 1 203 1 293 2 354 1 66 1 116 1 29 1 31 1 120 1 212 1 256 1 33 1 303 1 163 1 363 5 164 2 41 2 168 2 368 3 76 1 77 1 224 2 267 1 46 1 81 1 49 1 272 2 181 1 377 1 139 1 85 2 379 1 140 2 321 1 183 1 88 1 322 1 
186 1 0 3 256 1 188 1 33 1 191 1 163 1 363 3 101 1 198 2 368 1 76 1 60 2 77 1 18 1 49 1 181 1 116 1 379 1 29 1 31 1 322 1 
0 3 256 1 188 1 33 1 191 1 163 1 363 3 196 1 198 1 101 1 368 1 76 1 60 3 77 1 18 1 49 1 181 1 116 1 139 1 379 1 140 1 29 1 31 1 322 1 
186 1 0 3 256 1 188 1 33 1 191 1 282 1 163 1 363 3 196 1 101 1 198 2 368 1 76 1 60 3 77 1 18 1 49 1 181 1 116 1 139 1 379 1 140 1 29 1 31 1 322 1 
186 4 0 5 55 2 279 1 188 1 191 1 282 4 196 5 101 1 198 7 343 1 58 1 60 6 18 1 107 2 292 1 63 1 354 1 66 1 116 1 29 1 31 1 256 1 33 1 72 1 163 1 303 1 363 5 164 2 168 1 368 3 76 1 77 1 178 1 49 1 180 1 181 1 272 2 139 5 85 2 379 1 140 4 183 1 322 1 
186 2 0 4 55 2 188 1 191 1 282 2 196 2 101 1 343 1 198 4 58 1 60 4 107 2 292 1 354 1 66 1 116 1 29 1 31 1 256 1 33 1 303 1 163 1 363 4 164 2 41 2 168 1 368 2 76 1 77 1 81 1 49 1 181 1 272 2 85 2 139 1 379 1 140 2 183 1 322 1 
186 2 0 4 55 2 256 1 188 1 33 1 191 1 72 1 282 2 163 1 303 1 363 4 164 2 196 1 198 4 168 1 101 1 343 1 58 1 368 2 76 1 60 4 77 1 107 2 292 1 63 1 178 1 49 1 272 2 181 1 354 1 66 1 139 1 85 2 116 1 379 1 140 2 183 1 29 1 31 1 322 1 
186 2 0 4 55 2 256 1 188 1 33 1 191 1 72 1 282 2 163 1 303 1 363 4 164 2 196 1 198 4 168 1 101 1 343 1 58 1 368 2 76 1 60 4 77 1 107 2 292 1 63 1 178 1 49 1 272 2 181 1 354 1 66 1 139 1 85 2 116 1 379 1 140 2 183 1 29 1 31 1 322 1 
186 2 0 4 55 2 256 1 188 1 33 1 191 1 282 2 163 1 303 1 363 4 164 2 41 2 196 1 9 2 198 4 168 1 101 1 343 1 58 1 368 2 76 1 60 4 77 1 346 1 178 1 376 1 49 1 151 1 181 1 354 1 66 1 139 1 116 1 379 1 140 2 183 1 29 1 142 2 31 1 322 1 
186 3 0 4 55 2 256 1 188 1 33 1 72 1 191 1 282 3 303 1 163 1 363 4 164 2 196 1 168 1 343 1 101 1 198 5 58 1 368 2 76 1 60 5 77 1 107 2 292 1 63 1 178 1 49 1 180 1 272 2 354 1 181 1 66 1 139 1 85 2 116 1 379 1 140 3 183 1 29 1 31 1 322 1 
186 3 0 4 55 2 256 1 188 1 33 1 72 1 191 1 282 3 303 1 163 1 363 4 164 2 196 1 168 1 343 1 101 1 198 5 58 1 368 2 76 1 60 5 77 1 107 2 292 1 63 1 178 1 49 1 180 1 272 2 354 1 181 1 66 1 139 1 85 2 116 1 379 1 140 3 183 1 29 1 31 1 322 1 
186 2 0 4 55 2 188 1 191 1 282 2 196 1 9 2 101 1 343 1 198 4 58 1 60 4 354 1 66 1 116 1 29 1 31 1 256 1 33 1 303 1 163 1 363 4 164 2 41 2 168 1 368 2 76 1 77 1 81 1 376 1 49 1 181 1 139 1 379 1 140 2 183 1 142 2 322 1 
91 1 53 1 325 2 212 1 256 1 300 1 33 1 34 1 92 1 333 7 237 1 304 1 241 2 167 4 127 1 306 2 101 1 11 1 345 1 369 1 102 8 78 1 105 1 202 2 224 2 108 3 80 2 293 8 21 2 47 1 83 1 271 2 353 1 154 2 378 1 321 1 157 2 232 2 88 2 
254 1 256 1 33 1 70 1 190 1 304 1 262 1 57 1 241 3 167 2 306 1 101 1 13 1 15 1 105 1 106 1 80 1 21 1 47 1 295 1 150 1 83 2 271 1 355 1 26 1 319 1 157 1 232 1 156 1 
91 1 89 1 254 1 145 1 70 2 4 2 190 1 262 2 241 6 167 2 306 1 12 1 17 1 246 1 80 1 21 1 47 3 373 1 150 1 83 3 179 1 271 1 355 1 26 1 157 1 232 1 
254 11 53 1 122 3 70 1 332 1 4 1 260 1 190 11 262 2 36 3 241 14 57 2 167 4 306 2 345 1 74 1 13 2 14 1 175 1 80 2 21 2 47 8 295 1 83 6 150 2 114 1 351 1 271 2 355 1 26 4 157 2 232 1 156 1 
121 1 53 1 325 1 256 1 33 2 333 1 4 1 284 1 304 1 241 2 167 2 306 1 10 1 101 2 345 1 102 1 170 1 265 1 105 1 202 1 245 1 224 1 108 1 80 1 293 1 294 1 21 1 47 1 83 1 271 1 230 1 26 1 378 1 232 1 156 1 157 1 252 1 88 1 
89 1 53 1 325 2 145 1 189 1 333 1 4 3 3 2 190 7 341 2 241 28 57 2 101 3 10 2 12 2 345 1 13 2 102 1 105 1 202 2 245 1 17 1 108 2 293 1 21 3 294 2 295 2 150 5 114 1 355 5 206 1 26 7 157 3 156 1 252 2 254 7 256 1 33 3 70 6 259 2 125 2 304 1 262 7 167 6 367 2 306 3 311 1 265 2 44 1 224 1 80 3 47 14 373 2 83 14 179 2 271 3 378 1 232 3 322 1 88 2 
91 1 254 1 274 1 80 1 21 1 47 2 150 1 190 1 114 1 271 1 262 1 26 1 241 2 57 1 232 1 167 2 157 1 306 1 
91 1 254 1 70 1 80 1 21 1 295 1 83 2 190 1 271 1 262 1 355 1 26 1 241 2 232 1 167 2 157 1 306 1 253 1 
91 1 254 2 70 1 190 2 262 2 57 1 241 4 167 2 306 1 13 1 80 1 47 2 21 1 295 1 150 1 83 2 114 1 271 1 355 1 26 2 157 1 232 1 
254 1 274 1 80 1 21 1 47 2 150 1 190 1 114 1 271 1 262 1 353 1 26 1 241 2 57 1 232 1 167 2 157 1 306 1 
254 1 70 1 80 1 21 1 295 1 83 2 190 1 271 1 262 1 353 1 355 1 26 1 241 2 232 1 167 2 157 1 306 1 253 1 
254 2 70 1 190 2 262 2 57 1 241 4 167 2 306 1 13 1 80 1 47 2 21 1 295 1 150 1 83 2 114 1 271 1 353 1 355 1 26 2 157 1 232 1 
254 2 70 1 190 2 262 2 241 4 57 1 167 2 306 1 13 1 80 1 47 2 21 1 295 1 150 1 83 2 114 1 271 1 355 1 26 2 157 1 232 1 
53 1 325 1 33 1 333 1 4 1 241 2 367 1 167 2 306 1 10 1 101 1 345 1 102 1 265 1 202 1 224 1 108 1 80 1 293 1 47 1 294 1 21 1 83 1 271 1 232 1 157 1 252 1 88 1 
53 1 325 1 33 1 333 1 4 1 241 2 366 1 167 2 306 1 10 1 101 1 345 1 102 1 265 1 202 1 224 1 108 1 80 1 293 1 47 1 21 1 83 1 271 1 316 1 380 1 232 1 157 1 88 1 
254 2 70 1 190 2 262 2 57 1 241 4 167 2 306 1 13 1 80 1 47 2 21 1 295 1 150 1 83 2 114 1 271 1 355 1 26 2 157 1 232 1 156 1 
254 2 325 1 33 1 70 1 34 1 333 1 259 1 190 2 262 2 241 4 57 1 367 1 167 2 306 1 10 1 101 1 13 1 102 1 265 1 202 1 108 1 80 1 293 1 47 2 294 1 21 1 295 1 83 2 150 1 114 1 271 1 355 1 26 2 232 1 157 1 252 1 88 1 
254 1 256 1 33 1 302 1 190 1 304 1 262 1 57 1 241 3 167 2 306 1 101 1 13 1 15 1 105 1 106 1 80 1 21 1 47 2 295 1 83 1 150 1 114 1 271 1 355 1 26 1 157 1 232 1 156 1 
122 1 213 2 70 3 332 1 260 1 124 1 36 2 262 6 39 1 241 19 57 3 167 4 128 1 13 3 291 1 80 2 21 2 47 9 295 3 177 2 83 10 150 3 114 3 205 1 271 2 84 1 229 1 25 1 355 3 157 2 
122 2 360 2 213 4 257 1 70 2 258 1 260 2 262 4 36 2 6 1 98 1 39 2 241 26 57 3 167 6 128 2 13 3 291 1 80 3 20 1 21 3 47 14 295 2 177 1 83 12 22 1 150 3 114 2 205 1 271 3 84 1 229 1 355 2 157 3 
89 1 323 1 145 1 332 1 6 1 98 1 57 4 241 41 13 4 12 1 291 1 17 1 20 1 21 3 295 4 150 5 22 1 114 4 205 1 355 5 25 1 157 3 122 3 360 1 213 4 257 1 70 3 258 1 260 3 262 7 36 4 39 1 167 6 128 2 80 3 47 20 373 1 177 1 83 21 179 1 84 1 271 3 229 1 
89 1 323 1 145 1 332 1 6 1 98 1 57 4 241 38 13 4 12 1 291 1 17 1 20 1 21 4 295 3 150 5 22 1 114 3 205 1 355 4 25 1 157 4 122 3 360 2 213 4 257 1 70 4 258 1 260 3 262 7 36 4 39 1 167 8 128 2 80 4 47 20 373 1 177 1 83 18 179 1 84 1 271 4 229 1 
89 1 122 4 360 1 145 1 213 4 257 1 70 6 332 2 258 1 260 2 6 1 36 4 262 13 98 1 39 1 241 52 57 7 167 4 128 1 12 1 74 2 13 7 291 1 17 1 20 1 80 2 21 2 47 27 373 1 295 7 177 1 22 1 83 25 150 8 179 1 114 7 205 1 271 2 84 1 229 1 355 8 157 2 
261 1 337 1 242 1 149 1 32 1 362 1 277 1 40 1 134 1 308 1 
275 1 315 1 
335 1 337 1 242 1 149 1 7 1 24 1 362 1 40 1 308 1 
0 1 149 1 242 1 32 1 327 1 56 1 134 1 147 1 136 2 261 1 162 1 337 1 362 1 363 1 318 1 40 1 196 1 308 1 
0 1 149 1 242 1 32 1 327 1 56 1 134 1 147 1 136 2 261 1 162 1 337 1 362 1 363 1 318 1 40 1 196 1 308 1 
0 1 149 1 242 1 32 1 327 1 56 1 134 1 147 1 136 2 261 1 162 1 337 1 362 1 363 1 318 1 40 1 196 1 308 1 
16 1 220 1 146 1 
16 1 220 1 146 1 
143 1 52 1 
143 1 220 1 52 1 
100 1 93 1 
0 1 160 1 275 1 256 2 33 2 4 1 93 1 238 1 162 1 337 1 304 2 362 1 363 1 40 1 240 1 308 1 100 1 101 2 242 1 149 1 105 2 223 1 45 1 136 1 315 1 318 1 28 1 
16 1 146 1 
143 1 220 1 52 1 
53 1 325 1 256 2 33 2 333 2 280 1 237 1 195 1 241 2 167 2 306 1 101 2 289 1 345 1 102 2 78 1 202 1 172 1 244 1 108 1 80 1 293 2 21 1 47 1 83 1 271 1 154 2 232 1 156 1 157 1 88 1 
102 1 325 1 202 1 212 1 224 1 194 1 321 1 69 1 108 1 109 1 30 1 293 1 333 1 88 1 
102 1 276 1 325 1 79 1 202 1 19 2 247 1 234 1 69 1 293 1 92 1 333 1 281 1 137 1 182 1 207 1 197 1 30 1 
102 2 276 1 325 1 79 1 202 1 19 2 247 1 234 1 69 1 34 1 293 2 92 1 333 2 281 1 137 1 182 1 207 1 197 1 30 1 
102 1 276 1 325 1 79 1 202 1 19 2 247 1 234 1 69 1 293 1 92 1 333 1 214 1 281 1 137 1 207 1 197 1 
42 1 
343 1 168 1 58 1 278 1 303 1 354 1 139 1 99 1 196 1 183 1 
168 5 58 5 13 2 211 5 3 1 295 2 249 5 150 2 350 2 272 5 355 2 41 10 27 1 57 2 196 5 
198 1 368 1 0 1 363 1 139 1 196 1 
120 1 324 2 68 1 210 1 0 3 325 3 1 1 212 1 333 4 161 1 303 1 363 3 10 1 343 2 168 2 198 4 58 2 368 2 102 4 202 2 173 1 267 1 224 2 46 2 108 2 293 4 112 1 115 1 354 2 377 2 357 1 321 1 183 2 88 2 
168 1 58 1 278 1 246 1 139 1 99 1 196 1 
0 1 303 1 363 1 41 1 196 2 168 1 343 1 198 1 58 1 368 1 107 1 292 1 272 1 354 1 85 1 139 1 183 1 
324 1 0 5 325 4 278 1 333 3 94 2 3 2 99 1 57 2 196 8 10 3 343 4 198 5 200 2 58 8 13 2 102 3 202 3 108 10 293 3 112 1 295 2 249 6 150 2 65 2 350 2 354 4 355 2 208 2 27 2 299 2 211 6 34 1 71 1 216 1 303 4 363 5 41 12 166 2 168 9 264 1 368 3 77 2 131 2 224 1 46 2 312 1 50 2 272 6 377 1 139 2 141 3 183 4 88 3 
0 1 122 1 211 5 258 1 260 1 339 1 303 2 36 1 6 1 98 1 363 1 41 6 57 2 196 5 198 1 168 8 343 2 58 5 368 1 222 1 13 2 46 1 20 1 295 2 249 5 22 1 150 2 350 2 354 2 272 3 377 1 355 2 139 2 27 1 183 2 
0 1 187 1 256 1 33 1 72 1 303 1 304 1 126 1 363 1 101 1 343 1 168 2 263 1 58 2 12 1 105 1 106 1 373 1 150 2 179 1 350 2 354 1 355 1 206 1 138 1 27 1 183 1 322 1 
325 1 256 2 33 3 333 1 4 1 304 2 241 1 167 2 367 1 306 1 101 3 263 1 310 1 10 1 345 1 102 1 105 2 265 1 106 2 202 1 224 1 80 1 108 1 293 1 294 1 21 1 83 1 271 1 157 1 232 1 252 1 88 1 
89 1 343 1 168 1 58 2 211 2 46 1 249 2 303 1 272 2 354 1 377 1 139 2 41 4 196 4 183 1 
337 1 242 1 32 1 176 1 93 1 
337 1 242 1 158 1 
337 1 242 1 158 1 
337 1 242 1 158 1 
59 1 337 1 242 1 
59 1 337 1 242 1 
59 1 337 1 242 1 
337 1 242 1 
149 1 40 1 
12 2 291 1 80 1 70 3 21 1 47 5 373 2 83 5 150 2 114 2 179 1 271 1 262 5 355 2 206 1 241 10 157 1 167 2 
291 1 80 1 21 1 47 2 150 1 114 1 271 1 262 1 57 1 241 2 167 2 157 1 
13 1 291 1 70 1 80 1 21 1 47 2 295 1 83 2 150 1 114 1 271 1 262 2 355 1 57 1 241 4 167 2 157 1 
12 1 171 1 291 1 360 1 80 3 70 1 21 3 47 1 373 1 83 2 114 1 271 3 262 2 25 1 241 3 167 6 157 3 
89 1 122 3 360 1 145 1 70 5 260 1 336 1 239 1 283 1 36 3 262 9 241 32 57 2 167 8 12 2 13 2 291 1 17 1 348 1 80 4 21 4 47 16 373 2 295 2 83 16 150 5 179 2 114 4 271 4 25 1 355 5 206 1 157 4 
89 1 360 1 145 1 70 4 262 7 241 18 167 4 12 2 17 1 80 2 21 2 47 9 373 2 83 9 150 3 114 3 179 2 271 2 355 3 206 1 157 2 
89 1 12 1 246 1 17 1 145 1 70 2 47 3 373 1 83 3 150 1 179 1 262 2 355 1 241 6 
13 1 348 1 70 1 80 1 21 1 47 2 295 1 83 2 150 1 114 1 271 1 262 2 355 1 57 1 241 4 167 2 157 1 
13 1 122 1 70 1 47 3 332 1 295 1 83 4 150 1 260 1 114 1 36 2 262 2 355 1 241 7 57 1 
89 1 122 2 360 1 145 1 70 5 332 1 36 2 262 7 57 2 241 26 167 2 12 2 13 2 74 1 17 1 80 1 47 13 21 1 373 2 295 2 150 5 83 13 179 2 114 2 351 1 271 1 355 5 206 1 157 1 
83 1 36 1 241 1 
122 1 241 1 47 1 
13 1 348 1 80 1 70 2 21 1 47 3 3 1 295 1 83 3 150 1 114 1 271 1 262 3 355 1 241 6 57 1 157 1 167 2 
122 1 70 1 258 1 260 1 36 1 6 1 262 2 98 1 241 12 57 2 167 2 13 2 291 1 80 1 20 1 21 1 47 6 295 2 83 6 22 1 150 2 114 1 271 1 355 2 157 1 
12 1 70 1 47 3 373 1 150 1 83 3 179 1 114 1 262 2 355 1 241 6 
12 1 171 1 360 1 17 1 145 1 70 1 80 1 47 1 21 1 373 1 83 2 114 1 271 1 262 2 241 3 167 2 157 1 
89 1 122 1 145 1 70 4 260 1 36 1 6 1 262 5 241 16 167 2 12 2 291 1 17 1 80 1 21 1 47 8 373 2 150 3 83 8 114 1 179 2 271 1 355 3 206 1 157 1 
89 1 122 1 145 1 70 4 332 1 260 1 36 2 6 1 262 6 241 19 57 1 167 4 12 2 13 1 291 1 17 1 348 1 80 2 21 2 47 10 373 2 83 9 150 4 179 2 114 2 271 2 355 3 206 1 157 2 
89 1 122 1 360 1 145 1 70 5 258 1 260 1 36 1 6 1 262 7 98 1 241 27 57 2 167 6 12 2 13 2 291 1 17 1 348 1 80 3 20 1 21 3 47 13 373 2 295 2 83 14 22 1 150 5 179 2 114 2 271 3 355 5 206 1 157 3 
89 1 122 1 360 1 145 1 70 5 258 1 260 1 36 1 6 1 262 9 98 1 241 25 57 2 167 6 12 2 13 2 291 1 17 1 348 1 80 3 20 1 21 3 47 14 373 2 295 1 83 11 22 1 150 5 179 2 114 4 271 3 355 4 206 1 157 3 
89 1 122 1 145 1 70 4 260 1 36 1 6 1 262 5 241 16 167 2 12 2 291 1 17 1 80 1 21 1 47 8 373 2 150 3 83 8 114 1 179 2 271 1 355 3 206 1 157 1 
122 1 70 1 258 1 260 1 36 1 6 1 262 2 98 1 241 12 57 2 167 2 13 2 291 1 80 1 20 1 21 1 47 6 295 2 83 6 22 1 150 2 114 1 271 1 355 2 157 1 
89 1 122 1 360 2 145 1 70 5 258 1 260 1 36 1 6 1 262 7 98 1 241 26 57 2 167 8 12 2 13 2 291 1 17 1 348 1 80 4 20 1 21 4 47 14 373 2 295 1 83 12 22 1 150 5 179 2 114 2 271 4 355 4 206 1 157 4 
122 1 360 2 70 3 258 1 260 1 36 1 6 1 262 6 98 1 241 16 57 3 167 8 13 3 291 1 80 4 20 1 21 4 47 9 295 2 83 7 22 1 150 3 114 3 271 4 25 1 355 2 157 4 
12 3 17 1 145 2 70 3 47 3 373 3 83 4 150 1 114 3 179 1 262 6 355 1 241 7 
89 1 122 1 360 2 145 1 70 5 258 1 260 1 36 1 6 1 262 7 98 1 241 26 57 2 167 8 12 2 13 2 291 1 17 1 80 4 20 1 21 4 47 14 373 2 295 1 83 12 22 1 150 5 179 2 114 2 271 4 25 1 355 4 206 1 157 4 
101 1 152 1 155 1 256 1 188 1 33 1 4 1 
101 1 61 1 256 1 188 1 33 1 62 1 4 1 82 1 152 1 352 1 37 1 155 1 
102 4 325 1 202 1 212 1 224 1 133 1 34 1 108 1 293 4 333 4 321 1 307 1 88 1 
10 1 324 1 210 1 102 2 325 2 202 1 173 1 1 1 108 1 293 2 333 2 115 1 313 1 88 1 
102 1 276 1 325 1 79 1 202 1 19 1 224 1 197 1 293 1 333 1 
289 1 102 2 325 1 202 1 34 1 108 1 293 2 333 2 92 1 237 1 88 1 
11 1 324 1 102 5 369 1 325 2 202 2 212 1 224 1 34 1 108 3 293 5 333 4 237 1 321 1 307 1 88 2 
324 1 102 5 369 1 325 2 202 2 212 1 224 1 34 1 108 3 293 5 333 4 237 1 8 1 321 1 307 1 88 2 
102 1 325 1 202 1 212 1 246 1 224 1 321 1 108 1 293 1 333 1 88 1 
10 1 101 2 102 1 325 1 265 1 105 1 202 1 224 1 256 1 33 2 108 1 293 1 333 1 4 1 304 1 378 1 252 1 88 1 
10 2 101 2 299 1 324 1 76 1 102 1 325 1 265 1 105 2 131 1 202 1 256 2 33 2 108 3 293 1 333 1 4 1 304 1 378 1 252 1 322 1 31 1 88 2 
10 2 101 2 299 1 324 1 76 1 102 2 325 1 265 1 105 2 131 1 202 1 256 2 133 1 33 2 108 3 293 2 333 2 4 1 304 1 316 1 378 1 322 1 31 1 88 2 
10 1 198 1 299 1 324 1 0 2 102 3 77 1 325 1 131 1 202 1 224 1 133 1 108 4 293 3 333 3 50 1 67 1 363 2 139 1 141 1 196 1 88 1 287 1 
10 1 198 1 299 1 324 1 0 2 102 3 77 1 325 1 131 1 202 1 224 1 133 1 108 4 293 3 333 3 50 1 363 2 139 1 208 1 141 1 196 1 88 1 
102 1 325 1 202 1 300 1 293 1 333 1 
10 1 11 1 369 1 102 7 325 3 202 2 173 1 1 1 224 2 132 1 300 1 312 1 34 1 108 3 293 7 92 1 333 6 237 1 154 1 127 1 88 2 
89 1 325 1 145 1 333 1 4 3 280 1 190 1 341 1 241 14 101 2 10 1 12 2 102 1 105 1 202 1 17 1 108 1 293 1 294 1 21 2 150 3 114 1 355 3 206 1 26 1 157 2 156 1 252 1 254 1 256 1 33 2 34 1 70 4 259 1 304 1 262 5 367 1 167 4 306 2 265 1 44 1 80 2 47 7 373 2 83 7 179 2 271 2 378 1 232 2 322 1 88 1 
0 3 278 1 333 1 94 1 303 2 363 3 99 1 196 1 166 1 168 1 343 2 198 2 58 1 200 1 368 1 102 1 77 1 224 1 45 1 108 2 293 1 112 1 354 2 50 1 139 1 208 1 141 1 183 2 
10 1 102 2 325 2 202 1 300 1 312 1 34 1 108 2 293 2 333 2 216 1 50 1 88 1 
10 1 101 2 102 1 325 1 265 1 105 1 202 1 224 1 256 1 33 2 108 1 293 1 333 1 4 1 304 1 316 1 378 1 88 1 
10 1 324 1 102 1 325 2 202 1 173 1 1 1 132 1 312 1 108 1 293 1 333 1 88 1 
101 1 243 1 172 1 244 1 153 1 256 1 33 1 195 1 372 1 
358 1 76 1 77 1 243 1 372 1 48 1 191 1 153 1 296 1 381 1 31 1 322 1 
243 1 153 1 372 1 381 1 4 1 
0 1 251 1 296 1 363 1 45 1 372 1 48 1 
298 1 43 1 159 1 273 1 269 1 110 1 309 1 226 1 
43 4 298 4 159 1 326 1 266 1 110 2 226 1 111 1 96 1 314 2 273 3 305 1 219 1 309 2 
43 2 298 2 159 1 221 1 269 1 110 1 226 1 97 1 273 1 314 1 165 1 309 1 
374 1 298 3 43 3 159 1 326 1 273 1 305 2 219 2 269 1 110 1 309 1 226 1 
273 1 365 1 286 1 
215 1 298 1 43 1 159 1 269 1 226 1 
298 2 43 2 159 1 5 1 273 1 314 1 269 1 110 1 309 1 226 1 
331 1 
298 1 43 1 159 1 273 1 269 1 110 1 309 1 226 1 
273 1 246 1 110 1 309 1 
298 1 43 1 159 1 273 1 110 1 309 1 226 1 
298 1 347 1 317 1 
298 3 43 3 159 1 326 1 273 1 305 1 219 2 269 1 248 1 110 1 309 1 226 1 
298 2 43 2 159 1 273 1 314 1 193 1 110 1 309 1 226 1 
298 1 43 1 159 1 96 1 273 1 19 1 207 1 197 1 235 1 269 1 226 1 
298 1 43 1 159 1 273 1 269 1 110 1 226 1 
298 1 43 1 159 1 269 1 110 2 309 1 226 1 
297 1 43 2 298 2 159 2 269 1 236 1 110 1 226 2 250 1 273 1 
43 3 298 3 159 1 2 1 269 1 110 1 226 1 111 1 5 1 96 1 314 2 273 2 309 1 
43 2 298 2 159 1 276 1 19 2 247 1 269 1 110 1 226 1 340 1 273 1 314 1 207 1 197 1 309 1 
43 4 298 4 159 2 174 1 269 1 110 1 226 2 111 1 96 1 314 2 273 2 193 1 309 1 
43 3 298 3 159 1 269 1 226 1 110 1 5 1 314 1 273 1 219 1 309 1 
96 1 273 1 266 1 111 1 
273 1 110 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (66,106) (66,106) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 249 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 191 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 68 127 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 228 147 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 224 206 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 338 135 132 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 338 135 132 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 338 135 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 224 206 247 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 224 206 247 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (66,106) (66,106) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (66,106) (66,106) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (66,106) (66,106) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 249 170 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (99,154) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 16 (304,334) 138 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 229 110 111 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (196,303) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (232,240) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 3 255 1 257 2 48 1 301 2 52 1 261 1 33 3 8 1 333 1 238 1 97 1 271 2 
202 1 255 3 1 2 257 5 47 1 48 4 301 2 52 1 261 6 142 1 8 2 61 1 97 1 271 2 183 1 101 1 318 9 102 2 103 2 321 1 284 1 33 9 333 1 238 1 286 2 246 1 337 1 82 1 
202 1 255 3 1 2 257 5 47 1 48 4 301 2 52 1 261 6 142 1 8 2 61 1 97 1 271 2 183 1 101 1 318 9 102 2 103 2 321 1 284 1 33 9 333 1 238 1 286 2 246 1 337 1 82 1 
202 1 255 4 1 2 257 6 47 1 48 5 301 2 52 1 261 7 142 1 8 2 61 1 97 1 271 2 183 1 101 1 318 10 102 2 103 2 321 1 284 1 33 10 333 1 238 1 286 2 246 1 337 1 82 1 
202 1 255 2 1 1 257 4 47 1 48 3 301 2 52 1 261 4 142 1 8 2 61 1 97 1 271 2 183 1 101 1 318 7 102 2 103 2 321 1 284 1 33 7 333 1 238 1 286 2 246 1 337 1 
102 1 318 4 255 1 1 2 103 1 257 3 47 1 48 2 301 1 261 3 33 4 333 1 286 1 238 1 97 1 271 1 246 1 82 1 
318 2 102 1 254 1 257 1 301 1 33 2 142 1 8 1 333 1 238 1 286 1 124 1 97 1 271 1 241 1 183 1 
255 3 1 2 134 1 257 5 48 4 47 1 301 2 52 1 261 7 8 1 61 1 97 1 271 2 222 1 318 9 102 1 103 1 33 9 333 1 238 1 286 1 246 1 337 1 82 1 
255 3 1 2 134 1 257 5 48 4 47 1 301 2 52 1 261 7 8 1 61 1 97 1 271 2 222 1 318 9 102 1 103 1 33 9 333 1 238 1 286 1 246 1 337 1 82 1 
17 1 114 1 
17 1 114 1 
317 1 176 1 17 2 177 1 109 1 114 1 
71 1 
164 1 17 1 226 1 65 1 18 1 165 1 155 1 216 1 31 1 140 1 316 1 
107 1 18 1 65 1 226 1 17 2 155 1 140 1 164 1 165 1 145 1 63 1 216 1 
17 1 114 1 
17 1 114 1 
17 1 
18 2 107 1 156 2 158 1 165 2 34 1 145 1 63 1 216 2 
9 1 281 1 118 1 
133 1 152 1 42 1 319 1 18 1 45 1 185 2 156 1 69 1 88 1 27 2 116 1 143 2 128 1 37 1 216 1 240 1 130 1 276 1 
156 1 71 1 
133 1 42 1 319 1 107 1 18 2 45 1 185 1 69 1 27 1 190 1 116 1 165 1 143 1 9 1 128 1 63 1 37 1 240 1 216 2 275 1 
18 3 165 3 107 3 145 1 156 1 63 3 216 3 275 1 
18 1 165 1 107 1 155 1 63 1 70 1 216 1 
18 1 165 1 107 1 34 1 155 1 145 1 63 1 158 1 216 1 
17 1 226 1 65 1 107 2 18 2 155 1 173 1 190 1 230 1 140 1 164 1 165 2 34 1 145 1 63 2 216 2 275 1 
18 2 165 2 107 1 156 1 63 1 216 2 31 1 29 1 275 1 
17 1 226 1 107 1 18 1 65 1 155 1 190 1 230 1 140 1 285 1 164 1 165 1 63 1 216 1 275 1 
18 2 165 2 107 2 34 1 9 1 145 1 63 2 216 2 275 1 118 1 
133 1 319 1 42 1 18 1 45 1 185 1 156 1 69 1 27 1 116 1 143 1 128 1 37 1 216 1 240 1 
133 1 319 1 42 1 18 1 185 1 156 1 69 1 27 1 210 1 303 1 116 1 143 1 128 1 37 1 216 1 
0 1 136 2 205 1 209 1 85 1 211 1 7 1 214 1 9 2 11 4 312 1 64 2 221 1 281 2 73 2 118 2 193 1 166 1 331 1 168 1 197 1 36 1 200 1 39 1 
164 1 18 1 165 1 107 1 155 1 63 1 216 1 32 1 
293 1 107 4 18 5 156 1 31 1 29 1 190 1 165 5 34 1 145 1 63 4 216 5 275 2 83 1 
18 2 165 2 107 2 155 1 63 2 70 1 216 2 32 1 
259 1 113 1 262 1 
327 1 21 1 259 2 283 1 30 1 262 2 
259 1 262 1 
259 1 262 1 
327 1 21 1 
327 1 21 1 
327 1 21 1 
259 1 262 1 182 1 
259 1 262 1 182 1 
259 1 262 1 182 1 
41 1 259 1 262 1 
41 1 259 1 262 1 
41 1 259 1 262 1 
106 1 105 2 277 1 66 1 17 2 279 1 23 2 259 2 322 2 262 2 75 2 58 2 129 1 
105 1 18 1 17 1 107 1 279 1 23 1 259 1 322 1 262 1 75 1 58 1 165 1 63 1 216 1 249 1 
102 2 103 1 328 1 308 2 241 1 
102 1 103 1 286 1 
102 1 286 1 241 1 
102 3 308 1 328 1 103 2 241 1 163 1 
102 2 308 1 328 1 103 1 241 1 289 1 
17 1 146 1 114 1 
213 1 17 2 3 1 191 1 114 2 
317 1 17 2 109 1 68 1 114 1 162 1 176 1 177 1 167 1 311 1 201 1 
317 1 17 1 109 1 68 1 162 1 176 1 177 1 167 1 311 1 127 1 201 1 
264 1 
69 1 270 1 71 1 
67 1 69 1 
133 1 69 1 
133 1 42 1 69 3 270 2 12 1 314 1 
133 1 42 1 69 1 
69 1 38 1 
108 1 136 4 294 1 172 1 205 1 112 2 265 1 73 3 120 1 7 1 166 2 195 1 62 1 11 7 150 1 220 1 98 1 39 3 
2 1 136 16 172 1 294 2 297 1 205 4 209 1 265 1 7 4 214 1 62 1 11 31 150 2 98 1 64 2 220 2 151 1 108 2 110 1 112 3 229 3 73 15 120 5 193 1 166 5 331 1 332 1 126 4 36 3 197 3 125 1 77 1 245 3 39 10 
136 5 294 1 205 1 209 2 265 1 7 1 214 2 62 1 11 9 150 1 64 4 220 1 98 1 108 1 112 2 161 1 73 4 120 1 193 2 166 3 331 2 77 1 244 1 39 4 
108 1 136 4 294 1 172 1 205 1 112 2 265 1 73 3 120 1 7 1 166 2 62 1 11 7 150 1 220 1 98 1 39 3 
108 1 136 4 294 1 172 1 205 1 112 2 265 1 73 3 120 1 7 1 166 2 62 1 11 7 150 1 220 1 98 1 39 3 
133 1 42 1 301 1 90 1 305 2 57 1 8 2 143 1 144 1 179 1 271 1 184 1 318 1 319 2 185 1 157 2 69 1 25 1 27 1 282 1 325 1 192 1 116 1 326 2 33 1 329 1 287 1 239 1 37 1 
171 1 299 1 301 1 137 1 305 1 8 1 143 1 95 1 271 1 315 1 318 1 102 2 103 1 319 1 185 1 157 1 186 1 27 1 163 1 117 1 326 1 33 1 286 1 238 1 37 1 241 1 
171 1 257 1 208 1 301 1 261 1 137 1 305 1 8 1 143 1 95 1 97 1 271 1 315 1 318 2 102 2 103 1 319 1 185 1 157 1 186 1 27 1 163 1 117 1 326 1 33 2 333 1 286 1 238 1 37 1 241 1 
171 1 257 1 258 1 299 1 301 1 261 2 90 1 305 1 8 1 143 1 95 1 97 1 271 1 315 1 318 3 102 2 103 1 319 1 185 1 157 1 186 1 27 1 163 1 117 1 326 1 33 3 333 1 286 1 37 1 241 1 
257 1 258 1 299 1 261 2 305 1 8 1 143 1 95 1 97 1 315 1 318 2 102 2 319 1 103 1 185 1 157 1 27 1 163 1 117 1 326 1 33 2 333 1 286 1 37 1 241 1 
123 1 
317 1 17 1 143 1 177 1 109 1 185 1 280 1 147 1 27 1 228 1 162 1 116 1 201 1 
224 1 226 1 65 1 17 2 18 1 155 1 31 1 140 1 164 1 165 1 194 1 35 1 96 1 216 1 131 1 252 1 316 1 
226 1 17 2 18 1 65 1 155 1 31 1 140 1 164 1 165 1 194 1 35 1 96 1 216 1 131 1 14 1 252 1 316 1 
224 1 226 1 17 2 18 1 65 1 206 1 155 1 31 1 140 1 164 1 165 1 194 1 35 1 96 1 216 1 131 1 252 1 316 1 
17 1 
51 1 140 1 212 1 92 1 59 1 177 1 96 1 216 1 316 1 317 1 17 2 18 1 65 1 226 1 109 1 280 1 155 1 323 1 31 1 162 1 164 1 165 1 194 1 35 1 131 1 338 1 252 1 
132 1 135 1 51 1 140 1 212 1 92 1 59 1 177 1 96 1 216 1 316 1 317 1 65 1 18 1 17 2 226 1 109 1 280 1 155 1 323 1 26 1 31 1 162 1 164 1 165 1 194 1 35 1 131 1 338 1 252 1 
132 1 135 1 51 1 140 1 212 1 92 1 59 1 177 1 96 1 216 1 316 1 317 1 65 1 18 1 17 2 226 1 109 1 280 1 155 1 323 1 26 1 31 1 162 1 164 1 165 1 194 1 35 1 131 1 338 1 252 1 
135 1 260 1 302 1 175 1 140 1 92 1 59 1 177 1 94 1 96 1 216 1 316 1 317 1 65 1 18 1 17 2 226 1 109 1 280 1 155 1 323 1 31 1 162 1 164 1 165 1 194 1 35 1 131 1 338 1 252 1 
224 1 226 1 17 2 18 1 65 1 206 1 155 1 31 1 140 1 164 1 165 1 194 1 35 1 96 1 216 1 247 1 131 1 252 1 316 1 
224 1 226 1 17 2 18 1 65 1 206 1 155 1 31 1 140 1 164 1 165 1 194 1 35 1 96 1 216 1 247 1 131 1 252 1 316 1 
302 1 140 1 92 1 59 1 177 1 94 1 96 1 216 1 316 1 317 1 17 2 18 1 65 1 226 1 109 1 280 1 155 1 323 1 31 1 162 1 164 1 165 1 194 1 35 1 131 1 338 1 252 1 
133 1 42 1 136 1 44 1 209 1 211 1 143 2 214 1 11 2 272 1 218 1 64 2 184 1 319 2 185 2 69 1 27 2 282 1 325 1 116 1 73 1 329 1 193 1 331 1 237 1 168 1 287 1 37 1 130 1 
256 1 43 1 136 1 205 1 209 1 211 1 7 1 214 1 9 1 145 1 63 1 11 3 216 1 64 2 107 1 18 1 281 1 118 1 73 2 193 1 165 1 166 1 34 1 331 1 168 1 36 1 197 1 245 1 39 1 
136 3 294 1 205 1 209 1 211 1 265 1 7 1 214 1 9 1 62 1 11 6 98 1 64 2 108 1 112 1 156 2 281 1 71 1 118 1 73 3 193 1 166 2 331 1 168 1 200 1 39 2 
256 1 2 1 136 8 44 1 205 1 209 2 174 1 211 1 7 2 214 2 9 11 11 14 64 4 13 1 110 1 156 1 187 1 281 11 72 1 229 3 120 1 73 6 118 4 193 2 166 1 237 1 331 2 168 2 126 3 36 2 197 1 245 2 39 2 
133 1 42 1 256 1 136 1 45 1 44 1 209 1 211 1 143 1 214 1 63 1 11 2 216 2 273 1 275 1 64 2 152 1 319 1 18 2 107 1 185 1 153 1 156 1 69 1 27 1 190 1 116 1 118 1 73 1 193 1 165 1 331 1 237 1 168 1 128 1 37 1 240 1 291 1 
256 1 265 1 7 3 266 2 9 7 11 20 10 2 98 1 275 1 107 1 18 3 108 1 112 1 185 3 22 2 28 1 27 3 281 7 188 1 190 1 116 1 118 7 120 4 193 3 36 2 197 2 128 2 288 1 37 2 39 8 133 2 42 2 136 10 294 1 44 1 45 2 205 3 296 2 299 1 209 3 304 2 211 3 143 3 214 3 62 1 63 1 216 3 64 6 319 2 156 2 69 2 73 10 165 1 166 4 237 1 331 3 168 3 240 2 245 2 
136 2 209 1 85 1 281 1 211 1 120 1 118 1 7 1 193 1 214 1 331 1 168 1 9 1 36 1 11 2 200 1 64 2 39 1 
0 1 205 1 209 1 281 1 211 1 118 1 73 2 193 1 166 1 214 1 331 1 168 1 9 1 197 1 11 2 200 1 64 2 39 1 
136 2 205 1 209 1 211 1 7 1 214 1 9 2 11 4 64 2 281 2 118 2 120 1 73 2 193 1 166 1 331 1 168 1 36 1 197 1 245 1 200 1 39 2 
136 2 209 1 85 1 281 1 211 1 120 1 118 1 7 1 193 1 214 1 331 1 168 1 9 1 36 1 11 2 272 1 64 2 39 1 
0 1 205 1 209 1 281 1 211 1 118 1 73 2 193 1 166 1 214 1 331 1 168 1 9 1 197 1 11 2 272 1 64 2 39 1 
136 2 205 1 209 1 211 1 7 1 214 1 9 2 11 4 272 1 64 2 281 2 118 2 120 1 73 2 193 1 166 1 331 1 168 1 36 1 197 1 245 1 39 2 
136 2 205 1 209 1 281 2 211 1 73 2 120 1 118 2 7 1 193 1 166 1 214 1 331 1 168 1 9 2 197 1 36 1 11 4 245 1 64 2 39 2 
133 1 42 1 136 1 45 1 44 1 209 1 211 1 143 1 214 1 11 2 216 1 64 2 319 1 18 1 185 1 156 1 22 1 69 1 27 1 116 1 73 1 193 1 237 1 331 1 168 1 128 1 37 1 240 1 
133 1 42 1 136 1 44 1 209 1 210 1 303 1 211 1 267 1 143 1 214 1 11 2 216 1 64 2 319 1 18 1 185 1 156 1 69 1 27 1 116 1 73 1 193 1 237 1 331 1 168 1 128 1 37 1 
256 1 136 2 205 1 209 1 211 1 7 1 214 1 9 2 11 4 64 2 281 2 118 2 120 1 73 2 193 1 166 1 331 1 168 1 36 1 197 1 245 1 39 2 
133 1 42 1 136 2 45 1 205 1 296 1 208 1 209 1 211 1 7 1 143 1 214 1 9 2 11 4 216 1 64 2 319 1 18 1 185 1 22 1 69 1 281 2 27 1 73 2 120 1 118 2 193 1 166 1 331 1 168 1 197 1 36 1 128 1 37 1 240 1 245 1 39 2 
256 1 136 2 205 1 209 1 211 1 7 1 214 1 145 1 9 1 63 1 11 3 216 1 64 2 107 1 18 1 281 1 160 1 73 1 120 1 118 1 193 1 165 1 34 1 331 1 168 1 197 1 36 1 245 1 39 1 
2 1 136 9 84 1 205 3 86 1 209 2 306 1 307 1 7 3 214 2 148 2 11 19 64 4 20 1 110 1 229 1 73 10 120 3 193 2 166 3 236 1 331 2 126 2 36 3 197 3 198 1 244 1 245 3 81 2 39 6 
136 14 205 2 84 1 207 1 86 2 209 3 300 1 87 1 306 1 307 2 7 3 214 3 148 1 269 1 11 26 181 1 64 6 110 2 111 1 229 2 120 2 73 12 193 3 166 2 236 1 331 3 77 2 126 2 36 3 197 2 244 1 245 3 81 4 39 4 
2 1 136 20 294 1 84 1 205 5 207 1 86 1 209 3 300 1 87 1 265 1 306 1 307 2 7 5 214 3 62 1 148 1 269 1 181 1 11 41 98 1 64 6 20 1 108 1 110 3 112 1 111 1 229 3 73 21 120 4 193 3 166 4 236 1 331 3 77 1 126 4 36 4 197 4 80 1 244 1 245 4 81 4 39 8 
2 1 136 20 294 1 84 1 205 4 207 1 86 1 209 4 300 1 87 1 265 1 306 1 307 2 7 5 214 4 62 1 148 1 269 1 181 1 11 38 98 1 64 8 20 1 108 1 110 3 112 1 111 1 229 3 73 18 120 3 193 4 166 4 236 1 331 4 77 2 126 4 36 4 197 3 80 1 244 1 245 4 81 4 39 7 
2 2 136 27 294 1 84 1 205 8 207 1 86 1 209 2 300 1 87 1 174 2 265 1 306 1 307 1 7 8 214 2 62 1 148 1 269 1 181 1 11 52 98 1 64 4 108 1 110 2 112 1 111 1 229 4 73 25 120 7 193 2 166 7 236 1 331 2 77 1 126 4 36 7 197 7 244 1 245 7 81 4 39 14 
105 1 309 1 75 1 259 1 23 1 322 1 53 1 30 1 262 1 219 1 
149 1 113 1 
234 1 105 1 75 1 235 1 259 1 23 1 322 1 262 1 159 1 
106 1 105 1 277 1 66 1 17 1 279 1 23 1 259 1 322 1 262 1 75 1 58 2 129 1 
106 1 105 1 277 1 66 1 17 1 279 1 23 1 259 1 322 1 262 1 75 1 58 2 129 1 
106 1 105 1 277 1 66 1 17 1 279 1 23 1 259 1 322 1 262 1 75 1 58 2 129 1 
49 1 283 1 182 1 
49 1 283 1 182 1 
41 1 79 1 
41 1 283 1 79 1 
93 1 91 1 
277 1 105 1 58 1 17 1 75 1 259 1 23 1 322 1 129 1 114 1 262 1 249 1 170 1 
49 1 182 1 
41 1 283 1 79 1 
133 1 40 1 4 1 256 1 5 1 136 1 44 1 46 1 209 1 211 1 143 2 214 1 178 1 11 2 216 2 218 1 64 2 319 1 18 2 185 2 69 1 27 2 115 1 73 1 193 1 165 2 331 1 237 1 168 1 37 1 130 2 
133 1 42 1 305 1 57 1 143 1 184 1 319 2 185 1 69 1 282 1 27 1 325 1 192 1 116 1 329 1 74 1 76 1 287 1 37 1 
102 2 171 1 103 1 319 1 225 1 185 1 299 1 27 1 305 1 163 1 117 1 143 1 286 1 76 1 95 1 37 1 241 1 336 1 
102 2 171 1 103 1 319 1 225 1 185 2 299 1 208 1 27 2 305 1 163 1 117 1 143 2 286 1 76 1 95 1 37 1 241 1 336 1 
102 2 171 1 103 1 319 1 185 1 299 1 27 1 305 1 163 1 117 1 143 1 286 1 95 1 37 1 241 1 336 1 100 1 
320 1 
317 1 59 1 177 1 109 1 280 1 99 1 
7 1 59 1 205 1 197 1 36 1 245 1 162 1 
143 1 185 1 27 1 116 1 
59 1 154 1 71 1 99 1 
317 1 59 1 177 1 109 1 280 1 51 1 162 1 212 1 
133 1 317 1 319 2 42 1 67 1 19 1 109 1 280 1 185 1 69 2 27 1 138 1 162 1 116 1 177 1 143 1 334 1 37 1 12 1 16 1 201 1 
317 1 59 1 177 1 110 1 109 1 111 1 280 1 126 1 229 1 162 1 
317 1 17 1 108 1 109 1 294 1 205 1 280 1 26 1 324 1 162 1 265 1 7 2 59 2 177 1 242 1 290 2 
317 1 104 1 59 1 177 1 109 1 280 1 162 1 201 1 
75 1 322 1 53 1 91 1 55 1 
75 1 203 1 322 1 
75 1 203 1 322 1 
75 1 203 1 322 1 
75 1 322 1 199 1 
75 1 322 1 199 1 
75 1 322 1 199 1 
75 1 322 1 
259 1 262 1 
108 2 136 5 294 2 205 2 209 1 265 1 120 2 73 5 7 2 193 1 214 1 166 3 331 1 11 10 242 1 244 1 64 2 39 5 
136 2 209 1 120 1 7 1 193 1 214 1 331 1 36 1 11 2 244 1 64 2 39 1 
136 2 205 1 209 1 73 2 120 1 7 1 193 1 166 1 214 1 331 1 197 1 36 1 11 4 244 1 245 1 64 2 39 2 
20 1 108 1 136 1 294 1 209 3 73 2 120 1 121 1 193 3 214 3 166 1 331 3 77 1 11 3 244 1 64 6 39 2 
2 1 136 16 294 3 205 5 209 5 265 2 7 5 214 5 62 1 11 34 98 1 64 10 151 1 20 1 108 3 110 1 112 1 227 1 229 3 73 18 120 5 121 1 193 5 166 7 332 1 331 5 77 2 125 1 126 4 36 3 197 3 244 1 245 3 39 12 
136 4 294 1 205 1 209 1 265 1 7 1 214 1 62 1 11 8 64 2 98 1 108 1 110 1 112 1 111 1 229 1 73 4 193 1 166 2 331 1 126 1 244 1 39 2 
2 1 136 6 294 1 205 1 209 2 265 1 7 2 214 2 62 1 11 11 98 1 64 4 108 1 110 1 112 1 111 1 227 1 229 1 73 5 120 1 193 2 166 2 331 2 126 2 36 1 244 1 245 1 39 3 
136 9 294 1 205 3 209 3 300 1 87 1 265 1 7 3 214 3 62 1 11 19 181 1 269 1 98 1 64 6 108 1 110 1 112 1 111 1 227 1 229 1 120 1 73 10 193 3 166 3 331 3 126 1 36 2 197 2 77 1 244 1 245 2 39 4 
136 10 294 1 205 2 209 3 300 1 87 1 265 1 7 3 214 3 62 1 11 17 181 1 269 1 98 1 64 6 108 1 110 1 112 1 111 1 227 1 229 1 120 2 73 7 193 3 166 3 331 3 77 1 126 1 36 2 197 1 244 1 245 2 39 5 
136 4 294 1 205 1 209 1 265 1 7 1 214 1 62 1 11 8 64 2 98 1 108 1 110 1 112 1 111 1 229 1 73 4 193 1 166 2 331 1 126 1 244 1 39 2 
136 6 205 2 209 1 300 1 87 1 7 2 214 1 11 12 181 1 269 1 64 2 110 1 111 1 229 1 120 1 73 6 193 1 166 1 331 1 126 1 36 2 197 2 244 1 245 2 39 2 
136 10 294 1 205 2 209 4 300 1 87 1 265 1 7 3 214 4 62 1 269 1 11 18 181 1 98 1 64 8 108 1 110 1 112 1 111 1 227 1 229 1 120 2 73 8 193 4 166 3 331 4 126 1 36 2 197 1 77 2 244 1 245 2 39 5 
136 9 205 2 209 4 300 1 87 1 7 3 214 4 269 1 11 16 181 1 64 8 20 1 110 1 111 1 229 1 120 3 73 7 193 4 166 3 331 4 126 1 36 3 197 2 77 2 244 1 245 3 39 6 
108 3 136 3 294 3 205 1 265 1 73 4 120 3 7 1 166 3 62 2 11 7 98 1 39 6 
136 10 294 1 205 2 209 4 300 1 87 1 265 1 7 3 214 4 62 1 269 1 11 18 181 1 98 1 64 8 20 1 108 1 110 1 112 1 111 1 229 1 120 1 73 8 193 4 166 3 331 4 126 1 36 2 197 1 77 2 244 1 245 2 39 4 
136 4 108 1 294 1 112 1 205 1 209 2 265 1 73 4 120 1 7 1 193 2 166 2 214 2 331 2 77 1 62 1 11 8 64 4 98 1 39 3 
108 1 136 3 294 1 112 1 205 1 71 1 265 1 73 3 7 1 166 2 62 1 11 6 98 1 39 2 
136 2 205 1 209 1 227 1 73 2 120 1 7 1 193 1 166 1 214 1 331 1 197 1 36 1 11 4 245 1 64 2 39 2 
2 1 136 3 110 1 205 1 229 1 73 4 120 1 7 1 166 1 197 1 126 2 36 1 11 7 245 1 39 2 
2 1 136 11 294 2 205 3 209 2 174 1 265 1 7 3 214 2 62 1 11 23 98 1 64 4 108 2 112 1 229 2 72 1 120 4 73 12 121 1 193 2 166 5 331 2 36 2 126 2 197 2 77 2 245 2 39 9 
126 1 11 1 73 1 
136 1 11 1 229 1 
136 3 205 1 209 1 227 1 73 3 120 1 7 1 193 1 214 1 166 2 331 1 36 1 197 1 10 1 11 6 245 1 64 2 39 3 
136 6 205 2 209 1 300 1 87 1 7 2 214 1 11 12 181 1 269 1 64 2 110 1 111 1 229 1 120 1 73 6 193 1 166 1 331 1 126 1 36 2 197 2 244 1 245 2 39 2 
136 3 108 1 294 1 205 1 265 1 73 3 120 1 7 1 166 1 11 6 39 2 
136 1 108 1 294 1 209 1 120 1 73 2 121 1 193 1 166 1 214 1 331 1 62 1 77 1 11 3 64 2 98 1 39 2 
18 1 165 1 156 1 216 1 31 1 29 1 217 1 
18 1 156 1 50 1 6 1 189 1 29 1 31 1 165 1 310 1 180 1 216 1 217 1 
184 1 133 1 319 2 42 1 185 2 208 1 69 1 27 2 282 1 325 1 116 1 329 1 143 2 287 1 37 1 
184 1 133 1 42 1 319 2 185 2 69 1 27 2 325 1 329 1 143 2 287 1 288 1 37 1 274 1 
102 1 319 1 143 1 286 1 185 1 95 1 37 1 27 1 241 1 116 1 
40 1 133 1 319 1 4 1 185 2 208 1 299 1 69 1 27 2 143 2 37 1 
184 1 133 2 42 1 319 3 4 1 185 3 208 1 69 3 282 1 27 2 325 1 116 1 56 1 233 1 329 1 143 3 287 1 37 2 
184 1 133 2 42 1 319 3 4 1 185 3 298 1 208 1 69 3 282 1 27 2 325 1 116 1 233 1 329 1 143 3 287 1 37 2 
143 1 185 1 282 1 27 1 71 1 116 1 
133 1 42 1 319 1 107 1 18 2 185 1 156 1 69 1 27 1 116 1 165 1 143 1 128 1 63 1 37 1 216 2 240 1 275 1 
133 2 42 2 143 1 63 2 215 1 216 2 274 1 275 1 319 1 18 2 107 1 65 1 185 1 156 1 155 1 69 3 27 1 164 1 165 2 128 1 37 1 240 1 38 1 
133 2 42 2 303 1 143 2 63 2 215 1 216 2 274 1 275 1 319 1 18 2 107 1 65 1 185 2 156 1 155 1 69 3 27 2 164 1 165 2 128 1 37 1 243 1 38 1 
67 1 17 1 143 1 185 1 196 1 69 1 27 1 274 1 
232 1 67 1 17 1 143 1 185 1 69 1 27 1 274 1 
319 1 143 1 185 1 37 1 27 1 169 1 
184 1 133 2 42 1 319 3 4 1 185 7 299 1 208 1 69 3 27 6 56 1 116 2 233 1 143 7 330 1 287 1 37 2 130 1 335 1 12 1 169 1 
256 1 265 1 7 1 9 1 11 6 275 1 98 1 107 1 18 2 108 1 185 1 112 1 22 1 27 1 281 1 115 1 118 1 193 2 128 1 37 1 39 2 133 1 42 1 136 3 45 1 294 1 296 1 205 1 208 1 209 2 304 1 211 2 143 1 214 2 62 1 63 1 216 2 64 4 319 1 156 2 69 1 73 3 165 1 166 2 331 2 168 2 240 1 
17 1 114 1 
133 1 42 1 319 2 19 1 185 2 208 1 69 2 27 2 143 2 37 1 270 1 12 1 169 1 
133 1 42 1 319 1 107 1 18 2 185 1 156 1 69 1 27 1 303 1 116 1 165 1 143 1 128 1 63 1 37 1 216 2 275 1 
184 1 133 1 42 1 319 2 185 1 69 1 27 1 143 1 330 1 287 1 37 1 12 1 274 1 
18 1 165 1 5 1 178 1 295 1 46 1 24 1 216 1 251 1 
24 1 248 1 263 1 
295 1 156 1 24 1 89 1 251 1 
226 1 17 2 65 1 295 2 156 1 155 1 24 1 114 1 89 2 139 1 263 1 230 1 140 1 164 1 248 1 251 2 
318 1 257 1 333 1 238 1 97 1 301 1 271 1 33 1 
318 4 292 1 255 1 257 3 48 1 301 1 261 2 119 1 33 4 60 1 333 2 97 2 271 1 183 1 
318 2 223 1 257 1 278 1 301 1 261 1 33 2 333 1 238 1 97 1 271 1 222 1 
318 3 257 1 301 1 119 1 33 3 122 1 60 2 238 1 333 1 97 1 271 1 183 2 
257 2 78 1 250 2 253 1 
318 1 238 1 301 1 271 1 231 1 33 1 
318 2 257 1 333 1 238 1 97 1 301 1 261 1 271 1 337 1 33 2 
313 1 
318 1 257 1 333 1 238 1 97 1 301 1 271 1 33 1 
257 1 333 1 97 1 71 1 
318 1 257 1 333 1 97 1 301 1 271 1 33 1 
8 1 157 1 33 1 
318 3 257 1 301 1 33 3 119 1 60 1 238 1 333 1 97 1 271 1 183 2 15 1 
318 2 1 1 257 1 333 1 97 1 301 1 261 1 271 1 33 2 
318 1 102 1 103 1 257 1 47 1 48 1 301 1 33 1 238 1 286 1 271 1 
318 1 257 1 333 1 238 1 301 1 271 1 33 1 
318 1 333 2 238 1 97 1 301 1 271 1 33 1 
318 2 257 1 204 1 301 2 54 1 141 1 33 2 333 1 238 1 271 2 
318 3 255 1 257 2 48 1 301 1 261 2 33 3 333 1 238 1 61 1 97 1 271 1 337 1 
102 2 318 2 103 1 257 1 301 1 261 1 163 1 33 2 333 1 238 1 268 1 286 1 97 1 241 1 271 1 
318 4 1 1 255 1 257 2 48 1 301 2 261 2 33 4 333 1 238 1 97 1 271 2 82 1 
318 3 257 1 301 1 261 1 33 3 238 1 333 1 97 1 271 1 337 1 183 1 
292 1 255 1 257 1 48 1 
257 1 333 1 

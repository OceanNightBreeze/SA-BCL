#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 234 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 234 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 234 98 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 234 98 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
220 1 24 2 146 1 165 1 119 2 307 3 335 5 306 1 105 1 108 4 86 6 129 1 176 2 70 1 33 9 241 1 35 1 93 1 36 2 376 1 351 1 16 1 215 2 246 2 76 1 297 2 19 1 21 9 
220 1 24 2 146 1 165 1 307 3 335 5 306 1 119 2 105 1 108 4 86 6 129 1 176 2 70 1 33 9 241 1 35 1 93 1 36 2 376 1 351 1 16 1 215 2 246 2 76 1 297 2 19 1 21 9 
220 1 24 2 146 1 165 1 307 4 335 6 306 1 119 2 105 1 108 5 86 7 129 1 176 2 70 1 33 10 241 1 35 1 93 1 36 2 376 1 351 1 16 1 215 2 246 2 76 1 297 2 19 1 21 10 
220 1 129 1 176 2 24 2 70 1 146 1 165 1 33 7 241 1 119 1 306 1 335 4 307 2 105 1 36 2 93 1 376 1 16 1 351 1 215 2 108 3 297 2 76 1 246 2 86 4 19 1 21 7 
220 1 129 1 176 1 24 1 33 4 241 1 307 1 306 1 119 2 335 3 35 1 36 1 376 1 215 1 297 1 108 2 86 3 21 4 
220 1 129 1 152 1 176 1 331 1 33 2 241 1 335 1 105 1 36 1 215 1 297 1 48 1 76 1 246 1 21 2 
220 1 129 1 70 1 33 3 241 1 307 1 335 2 215 2 297 2 246 1 108 1 86 1 21 3 
203 1 220 1 129 1 176 1 24 1 70 1 146 1 33 9 241 1 119 2 306 1 335 5 307 3 35 1 36 1 376 1 55 1 16 1 215 2 297 2 246 1 108 4 86 7 21 9 
203 1 220 1 129 1 176 1 24 1 70 1 146 1 33 9 241 1 119 2 306 1 335 5 307 3 35 1 36 1 376 1 55 1 16 1 215 2 297 2 246 1 108 4 86 7 21 9 
292 1 308 1 334 1 
151 1 334 1 197 2 
360 2 372 2 143 2 12 2 102 2 7 2 163 1 202 1 
248 1 77 1 161 1 143 3 3 2 42 1 102 2 332 2 302 1 163 1 252 1 360 3 275 1 336 2 45 1 227 1 279 1 7 2 229 1 202 1 67 1 284 1 50 2 341 1 321 1 11 1 12 2 90 1 264 1 209 2 372 2 115 1 243 1 136 1 135 1 73 1 216 1 
360 1 372 1 37 1 143 1 257 1 12 1 102 1 7 1 163 1 247 1 
286 1 143 1 237 1 334 1 274 1 372 1 360 1 308 1 187 1 362 1 158 1 377 1 124 1 247 1 
143 1 237 2 12 1 102 1 334 1 274 2 372 1 360 1 308 1 362 1 158 1 377 1 7 1 124 1 247 1 
178 1 237 1 107 1 274 1 210 1 
361 1 308 1 237 2 107 1 200 1 334 1 274 2 210 1 
237 1 107 1 274 1 
143 1 237 1 12 1 102 1 163 1 210 1 274 1 372 1 360 1 37 1 188 1 257 1 7 1 247 1 
334 1 
308 1 101 1 237 2 107 1 200 1 334 1 274 2 210 1 
217 1 128 1 339 1 262 2 51 2 237 5 334 1 133 1 210 2 274 5 168 1 293 2 308 1 294 1 278 1 47 1 200 1 107 2 150 1 
77 1 161 1 341 1 143 2 3 1 102 1 332 1 264 1 209 1 324 1 372 1 360 2 115 1 135 1 137 1 227 1 229 1 7 1 216 1 29 1 
292 1 202 1 
59 1 8 1 143 2 12 1 102 1 372 2 360 2 7 1 202 2 
260 1 235 1 29 1 
77 1 353 1 161 1 341 1 143 1 3 1 332 1 264 1 209 1 360 1 115 1 135 1 227 1 229 1 216 1 202 1 
324 1 360 3 372 3 143 3 12 1 102 3 7 3 202 1 
360 1 372 1 143 1 257 1 102 1 7 1 247 1 
59 1 8 1 360 1 372 1 143 1 12 1 102 1 7 1 247 1 
248 1 77 1 161 1 143 4 3 1 42 1 102 3 332 1 302 1 163 1 5 1 274 1 360 4 336 2 362 1 45 1 227 1 279 1 229 1 7 3 124 1 202 1 67 1 8 1 50 1 341 1 321 1 11 1 12 2 237 1 90 1 264 1 182 1 209 1 324 1 372 3 115 1 136 1 135 1 137 1 158 1 377 1 216 1 247 1 
324 1 360 2 372 2 187 1 118 1 143 2 102 1 7 1 202 1 
8 1 288 1 143 3 12 1 237 1 102 3 334 1 182 1 274 1 324 2 372 3 360 3 362 1 137 1 158 1 377 1 7 3 124 1 247 1 
8 1 235 1 143 2 12 1 102 2 324 1 372 2 360 2 7 2 29 1 
77 1 161 1 341 1 143 1 3 1 332 1 264 1 209 1 360 1 115 1 135 1 227 1 229 1 216 1 202 1 
77 1 161 1 143 1 3 1 332 1 264 1 209 1 360 1 115 1 135 1 227 1 378 1 229 1 281 1 202 1 
248 1 99 1 2 1 145 1 42 1 302 1 252 2 336 2 279 1 311 1 258 1 259 1 29 2 261 1 260 2 50 4 235 2 321 1 131 1 90 2 153 1 370 1 136 1 17 1 
360 1 372 1 158 1 143 1 102 1 7 1 140 1 247 1 
8 1 324 2 360 5 372 5 53 1 187 1 118 1 137 1 143 5 12 1 102 4 7 4 58 1 202 1 
360 2 372 2 143 2 257 1 102 2 7 2 140 1 247 1 
22 1 276 1 
22 1 276 1 
206 1 109 1 
206 1 109 1 
206 1 109 1 
22 1 276 1 79 1 
22 1 276 1 270 1 
22 2 276 2 206 1 301 1 298 1 109 1 
22 1 276 1 79 1 
22 1 276 1 79 1 
22 1 276 1 159 1 
22 1 276 1 159 1 
22 1 276 1 159 1 
191 1 22 2 218 2 205 1 237 2 251 1 238 2 301 1 273 3 334 1 274 2 103 1 104 2 268 1 276 2 71 2 277 1 138 2 97 1 
22 1 218 1 143 2 102 2 273 1 164 1 274 1 104 1 360 2 276 1 225 1 277 1 81 1 82 1 25 1 7 2 231 1 202 1 237 1 238 1 349 1 372 2 138 1 270 1 
36 1 176 1 24 1 
36 1 176 1 331 1 
36 3 24 2 331 1 195 1 92 1 183 1 
36 2 24 1 331 1 31 1 92 1 183 1 
36 2 24 1 331 1 183 1 92 2 
334 2 197 3 274 5 308 1 81 1 149 1 259 1 107 1 200 1 26 1 231 1 261 1 68 1 110 1 151 1 128 3 339 2 262 1 51 1 287 2 237 5 344 1 153 1 133 1 210 4 291 1 349 1 373 2 293 1 17 1 328 2 352 1 
162 1 334 5 197 9 274 9 308 1 149 1 259 3 107 6 200 1 261 3 151 3 128 8 339 6 262 2 51 2 52 1 178 5 237 9 344 2 180 1 153 3 132 5 133 1 210 7 291 3 349 4 373 6 375 1 325 1 293 2 294 1 17 3 328 6 271 1 352 2 
334 3 197 4 274 3 308 1 26 1 259 1 261 1 68 1 151 2 128 3 262 1 339 2 51 1 287 1 237 3 344 1 153 1 210 2 349 1 291 1 373 2 293 1 294 1 17 1 328 2 352 1 
162 1 334 4 197 7 274 4 308 1 26 1 259 2 261 2 68 1 151 3 128 5 262 1 339 4 51 1 287 2 237 4 344 1 180 1 153 2 210 3 349 2 291 2 373 4 325 1 293 1 294 1 17 2 328 4 352 1 
115 1 292 1 32 1 
115 1 358 1 
34 1 
115 1 264 1 
60 1 115 3 227 1 264 1 125 1 32 2 
115 1 227 1 264 1 
115 1 30 1 
261 1 329 1 367 1 99 2 50 7 87 1 78 2 90 3 355 1 252 4 214 1 311 3 123 1 259 1 314 1 27 1 338 1 
261 1 329 1 367 1 99 2 50 7 87 1 78 2 90 3 355 1 252 4 214 1 311 3 123 1 259 1 314 1 27 1 338 1 
261 1 329 1 367 1 99 2 50 7 87 1 78 2 90 3 355 1 252 4 214 1 311 3 123 1 57 1 259 1 314 1 27 1 338 1 
261 3 329 2 69 4 366 1 367 3 99 1 50 20 61 1 78 1 90 10 153 3 252 10 291 3 120 1 242 3 244 1 189 1 106 1 311 4 17 3 199 1 259 3 314 1 
248 1 329 1 99 3 61 1 42 1 78 1 355 1 302 1 252 6 44 1 336 2 311 5 123 1 259 2 85 1 314 1 27 1 338 1 261 2 367 2 50 11 321 1 177 1 90 5 214 1 
220 1 161 1 24 1 331 1 3 1 332 1 195 1 4 1 253 1 63 1 305 1 335 1 64 1 310 1 229 1 86 1 204 1 126 1 232 1 129 1 9 1 176 1 209 1 33 2 241 1 36 2 215 1 297 1 246 1 21 2 
220 1 161 1 24 1 331 1 3 1 195 1 332 1 354 1 4 1 357 1 253 1 63 1 305 1 335 1 310 1 229 1 86 2 204 1 232 1 129 1 9 1 176 1 209 1 33 3 36 2 72 1 215 1 297 1 246 1 21 3 
220 1 161 1 24 1 331 1 3 1 332 1 354 1 195 1 4 1 253 1 335 1 310 1 229 1 86 2 204 1 232 1 129 1 9 1 176 1 209 1 33 2 36 2 72 1 246 1 21 2 
204 2 161 1 232 2 289 1 3 1 332 1 264 1 357 1 4 2 209 1 347 1 33 1 115 1 350 1 114 1 135 1 122 1 229 1 172 1 215 1 246 2 297 1 21 1 
161 1 24 1 331 1 3 1 332 1 354 1 195 1 4 1 253 1 63 1 305 1 64 1 310 1 229 1 204 1 232 1 9 1 176 1 209 1 33 1 241 1 36 2 215 1 297 1 246 1 21 1 
240 1 
161 1 3 2 332 2 334 2 274 5 337 2 229 1 124 1 172 1 230 2 174 1 285 2 128 2 339 2 286 1 51 1 10 1 179 2 237 5 91 1 133 1 347 1 184 1 14 1 293 1 134 1 187 1 135 2 245 1 56 1 20 1 352 1 247 1 193 2 143 1 197 2 360 1 308 1 362 1 200 3 107 6 365 1 28 1 151 2 262 1 264 1 209 2 154 2 372 1 115 1 269 1 158 1 377 1 74 4 379 2 
143 1 101 1 274 3 360 1 362 1 124 1 365 1 107 2 200 1 28 1 285 1 286 1 10 1 237 3 372 1 269 1 187 1 158 1 377 1 74 2 20 1 247 1 
143 1 101 1 334 1 274 3 360 1 308 1 362 1 124 1 107 1 365 1 200 1 28 1 286 1 10 1 237 3 154 1 372 1 269 1 187 1 158 1 377 1 74 3 20 1 247 1 
143 1 101 1 334 1 274 3 360 1 308 1 362 1 124 1 200 1 365 1 107 2 28 1 285 1 286 1 10 1 237 3 154 1 372 1 269 1 187 1 158 1 377 1 74 3 379 1 20 1 247 1 
41 1 334 5 274 5 337 2 124 1 6 1 230 2 285 4 128 1 286 1 339 1 51 1 10 1 237 5 179 2 133 1 293 1 187 1 94 1 245 1 56 1 20 1 247 1 193 2 143 1 101 1 360 1 308 5 362 1 365 1 200 3 107 7 28 1 151 2 262 1 111 1 112 1 154 4 372 1 269 1 158 1 377 1 74 6 379 4 
334 2 274 4 337 2 124 1 230 2 285 2 128 1 286 1 339 1 51 1 10 1 237 4 179 2 91 1 133 1 293 1 187 1 245 1 56 1 20 1 247 1 193 2 143 1 197 2 360 1 308 1 362 1 365 1 200 2 107 4 28 1 151 2 262 1 154 2 372 1 269 1 158 1 377 1 74 4 379 2 
193 2 143 1 41 1 334 1 274 4 360 1 308 1 362 1 337 2 6 1 124 1 107 4 200 2 365 1 230 2 28 1 285 2 151 2 128 1 339 1 262 1 286 1 51 1 10 1 179 2 237 4 111 1 133 1 154 2 372 1 269 1 293 1 187 1 158 1 245 1 377 1 74 4 56 1 379 2 20 1 247 1 
193 2 143 1 41 1 334 1 274 4 360 1 308 1 362 1 337 2 6 1 124 1 107 4 200 2 365 1 230 2 28 1 285 2 151 2 128 1 339 1 262 1 286 1 51 1 10 1 179 2 237 4 111 1 133 1 154 2 372 1 269 1 293 1 187 1 158 1 245 1 377 1 74 4 56 1 379 2 20 1 247 1 
193 2 143 1 334 1 197 2 274 4 360 1 308 1 362 1 337 2 84 1 6 1 124 1 107 4 200 2 365 1 28 1 285 2 128 1 339 1 262 1 286 1 51 1 10 1 237 4 133 1 290 1 154 2 372 1 269 1 293 1 187 1 158 1 95 2 377 1 296 1 74 4 190 2 56 1 379 2 20 1 247 1 
193 2 143 1 41 1 334 1 274 4 360 1 308 1 362 1 337 2 6 1 124 1 200 2 365 1 107 5 230 2 28 1 285 3 151 2 128 1 339 1 262 1 286 1 51 1 10 1 179 2 237 4 111 1 112 1 133 1 154 3 372 1 293 1 269 1 187 1 158 1 245 1 377 1 74 5 56 1 379 3 20 1 247 1 
193 2 143 1 41 1 334 1 274 4 360 1 308 1 362 1 337 2 6 1 124 1 200 2 365 1 107 5 230 2 28 1 285 3 151 2 128 1 339 1 262 1 286 1 51 1 10 1 179 2 237 4 111 1 112 1 133 1 154 3 372 1 293 1 269 1 187 1 158 1 245 1 377 1 74 5 56 1 379 3 20 1 247 1 
334 1 274 4 337 2 124 1 285 2 128 1 286 1 339 1 51 1 10 1 237 4 91 1 133 1 290 1 293 1 187 1 95 2 56 1 190 2 20 1 247 1 193 2 143 1 197 2 360 1 308 1 362 1 365 1 200 2 107 4 28 1 262 1 154 2 372 1 269 1 158 1 377 1 74 4 379 2 
248 1 99 2 145 1 42 1 78 1 302 1 355 1 252 3 336 2 123 1 279 1 311 2 27 1 259 1 29 1 338 1 202 2 261 1 260 1 50 6 235 1 321 1 90 3 292 1 136 1 214 1 
248 2 99 1 330 1 42 2 302 2 252 8 224 1 336 4 311 2 279 1 312 1 259 2 202 1 29 11 283 1 69 3 260 11 366 1 261 1 367 1 50 14 235 4 321 2 11 1 90 6 153 1 291 2 242 3 243 1 136 2 244 1 17 2 75 1 
248 1 77 1 353 1 161 1 143 2 3 1 332 1 42 1 102 1 302 1 252 1 224 1 360 2 336 2 170 1 309 1 227 1 279 1 229 1 7 1 202 1 50 2 235 1 341 1 321 1 11 1 90 1 264 1 209 1 208 1 324 1 372 1 115 1 243 1 135 1 136 1 137 1 216 1 
77 2 161 2 3 3 78 1 332 3 42 3 224 1 167 2 336 6 227 2 123 1 279 3 7 1 229 2 338 1 175 1 50 20 235 7 341 2 11 1 90 10 291 2 243 1 135 1 136 3 137 1 17 2 248 3 99 4 143 3 354 1 102 1 355 1 302 3 252 10 255 2 360 3 256 2 311 8 364 1 27 1 259 3 202 2 67 2 29 7 261 3 260 7 367 4 321 3 264 2 153 2 209 3 323 2 324 1 372 1 115 2 156 1 214 1 216 2 
248 2 249 1 161 2 143 1 194 1 145 1 3 8 354 1 102 1 332 8 42 2 302 2 356 1 252 1 360 1 275 2 336 4 279 2 7 1 229 2 172 1 315 1 126 1 319 1 50 2 321 2 11 1 90 1 264 2 209 7 347 1 324 1 155 1 372 1 115 3 243 1 135 2 136 2 39 1 
248 1 99 1 143 1 102 1 42 1 43 1 302 1 252 1 224 1 360 1 336 2 311 1 279 1 7 1 259 1 29 1 260 1 8 1 261 1 50 3 235 1 321 1 12 1 90 2 153 1 291 1 372 1 136 1 17 1 
260 1 248 1 367 1 50 2 235 1 321 1 145 1 131 1 42 1 302 1 252 2 336 2 136 1 311 1 279 1 17 1 259 1 29 1 
260 1 248 1 261 1 99 1 50 2 235 1 321 1 2 1 145 1 42 1 90 2 302 1 153 1 336 2 136 1 311 1 279 1 29 1 
261 1 260 2 248 1 367 1 99 1 50 4 235 2 321 1 145 1 42 1 90 2 302 1 153 1 252 2 291 1 336 2 136 1 311 2 279 1 17 1 259 1 29 2 
260 1 248 1 367 1 50 2 235 1 321 1 131 1 42 1 302 1 356 1 252 2 336 2 136 1 311 1 279 1 17 1 259 1 29 1 
260 1 248 1 261 1 99 1 50 2 235 1 321 1 2 1 42 1 90 2 302 1 356 1 153 1 336 2 136 1 311 1 279 1 29 1 
261 1 260 2 248 1 367 1 99 1 50 4 235 2 321 1 42 1 90 2 302 1 356 1 153 1 252 2 291 1 336 2 136 1 311 2 279 1 17 1 259 1 29 2 
261 1 260 2 248 1 367 1 99 1 50 4 235 2 321 1 42 1 90 2 302 1 153 1 252 2 291 1 336 2 136 1 311 2 279 1 17 1 259 1 29 2 
248 1 77 1 161 1 143 1 3 1 332 1 42 1 302 1 252 1 360 1 336 2 227 1 279 1 229 1 202 1 67 1 50 2 341 1 321 1 11 1 90 1 264 1 209 1 115 1 243 1 135 1 136 1 216 1 
248 1 77 1 161 1 143 1 3 1 332 1 42 1 302 1 252 1 360 1 336 2 227 1 279 1 229 1 281 1 202 1 50 2 321 1 11 1 90 1 264 1 209 1 348 1 115 1 243 1 135 1 136 1 378 1 
261 1 260 2 248 1 367 1 99 1 50 4 235 2 321 1 42 1 90 2 302 1 153 1 252 2 224 1 291 1 336 2 136 1 311 2 279 1 17 1 259 1 29 2 
248 1 77 1 99 1 161 1 143 1 3 1 332 1 42 1 302 1 252 2 360 1 336 2 256 1 227 1 311 2 279 1 229 1 259 1 29 2 67 1 261 1 260 2 367 1 126 1 50 4 235 2 341 1 321 1 90 2 264 1 153 1 209 1 291 1 115 1 136 1 17 1 216 1 
248 1 143 1 102 1 42 1 302 1 252 2 224 1 360 1 336 2 311 1 279 1 7 1 259 1 29 1 261 1 8 1 260 1 367 1 50 3 235 1 321 1 12 1 90 1 153 1 291 1 372 1 136 1 38 1 17 1 
248 2 23 1 99 2 61 1 42 2 302 2 252 15 336 4 80 1 363 1 147 1 65 3 311 5 85 1 259 4 69 4 366 1 261 4 367 3 233 1 50 32 234 1 88 1 89 2 321 2 90 17 345 1 153 4 211 1 291 4 185 1 374 1 242 3 157 1 244 3 17 4 98 1 
248 2 23 1 99 3 61 2 42 2 302 2 252 16 336 4 80 1 363 1 147 1 65 3 311 6 85 1 259 4 69 4 366 1 261 3 367 3 233 1 50 31 234 1 88 1 89 2 321 2 90 15 345 1 153 3 211 1 291 4 185 1 374 1 242 3 157 1 244 3 17 4 98 1 
248 1 99 6 61 1 78 1 42 1 355 1 302 1 252 23 336 2 363 1 147 1 123 1 65 2 311 12 312 2 27 1 85 1 259 7 338 1 69 4 366 2 261 7 367 6 233 1 50 44 234 1 88 1 89 1 321 1 90 21 345 1 153 6 211 1 291 6 185 1 374 1 242 4 157 1 244 2 214 1 17 6 98 1 
248 2 99 3 223 1 42 2 302 2 252 9 336 4 80 1 65 2 311 6 85 1 259 3 69 2 366 1 261 3 367 3 233 1 50 19 234 2 88 1 89 1 321 2 90 10 153 3 291 3 374 1 242 1 244 1 17 3 98 1 
248 1 99 1 61 2 42 1 302 1 252 10 336 2 363 1 147 1 311 2 65 2 85 1 259 2 261 1 69 2 367 1 233 1 50 18 234 1 88 1 89 2 321 1 90 8 345 1 153 1 211 1 291 2 374 2 242 2 185 1 157 1 244 2 17 2 98 1 
22 1 160 1 218 1 104 1 276 1 205 1 138 1 238 1 301 1 97 1 
82 1 270 1 
254 1 22 1 218 1 104 1 318 1 340 1 276 1 138 1 238 1 
191 1 22 1 218 1 205 1 237 1 251 1 238 1 301 1 273 2 334 1 274 1 103 1 104 1 276 1 71 1 277 1 138 1 97 1 
191 1 22 1 218 1 205 1 237 1 251 1 238 1 301 1 273 2 334 1 274 1 103 1 104 1 276 1 71 1 277 1 138 1 97 1 
191 1 22 1 218 1 205 1 237 1 251 1 238 1 301 1 273 2 334 1 274 1 103 1 104 1 276 1 71 1 277 1 138 1 97 1 
222 1 79 1 298 1 
222 1 79 1 298 1 
267 1 159 1 298 1 
267 1 159 1 
225 1 164 1 
22 1 218 1 143 2 251 1 102 2 273 1 164 1 274 1 360 2 104 1 276 1 225 1 81 1 82 1 25 1 46 1 7 2 231 1 202 1 237 1 238 1 210 1 349 1 372 2 71 1 138 1 270 1 
222 1 79 1 
267 1 159 1 
248 1 299 1 249 1 161 1 143 2 194 1 3 2 332 2 42 1 302 1 252 1 224 1 360 2 275 2 336 2 279 1 229 1 201 1 50 2 321 1 11 1 90 1 264 1 181 1 209 2 372 2 115 1 243 1 136 1 18 1 139 1 
204 1 126 1 161 1 250 1 176 1 24 1 130 1 331 1 3 2 195 1 354 1 332 2 209 2 253 1 305 1 371 1 36 2 310 1 229 1 
204 1 161 1 176 1 24 1 130 1 331 1 142 1 3 1 195 1 354 1 332 1 209 1 253 1 305 1 36 2 310 1 229 1 
204 1 161 1 250 1 3 1 332 1 207 1 264 1 209 1 347 1 115 1 350 1 135 1 229 1 172 1 
204 1 161 1 250 1 176 1 24 1 130 1 331 1 3 1 195 1 354 1 332 1 209 1 253 1 305 1 371 1 36 2 310 1 229 1 
116 1 
168 1 128 1 339 1 292 1 308 1 47 1 334 1 
334 2 197 1 274 1 308 1 200 1 107 1 230 1 151 1 128 1 339 1 262 1 51 1 179 1 237 1 133 1 293 1 245 1 
219 1 161 1 1 2 3 2 332 2 334 8 274 5 168 1 227 1 228 1 229 2 47 1 49 2 126 1 128 9 339 8 51 4 237 5 133 4 184 1 291 2 293 4 135 1 17 2 352 2 60 1 144 2 197 12 358 3 62 2 255 2 308 2 362 2 107 5 200 3 259 2 317 2 261 2 151 6 262 4 263 2 264 1 153 2 209 2 32 2 373 6 115 6 212 2 40 1 328 6 117 1 
334 4 197 6 274 1 308 1 363 1 147 1 107 1 200 1 259 2 69 1 261 2 128 7 151 3 262 2 339 4 320 1 51 2 237 1 345 1 133 2 153 2 291 2 373 5 212 1 242 1 185 1 293 2 157 1 244 1 17 2 328 5 
143 1 144 1 41 1 102 1 355 1 163 1 274 1 360 1 257 1 7 1 259 2 338 1 261 1 128 2 262 1 339 2 51 1 177 1 237 1 12 1 133 1 372 1 212 2 293 1 37 1 188 1 214 1 247 1 
128 1 262 1 339 1 51 1 133 1 334 1 168 1 293 1 308 1 47 1 
261 2 151 5 128 5 339 5 144 1 334 5 153 2 197 10 255 1 291 2 373 5 212 2 17 2 259 2 328 5 
308 1 237 1 107 1 200 1 334 1 274 1 
219 1 192 1 161 1 3 4 332 4 274 3 229 1 107 4 200 2 172 1 128 2 262 2 339 2 51 2 368 2 237 3 264 1 133 1 209 4 184 2 347 1 14 1 115 1 293 2 134 1 135 2 294 1 327 1 352 2 
248 1 77 1 161 1 143 3 3 1 42 1 332 1 102 2 302 1 163 1 360 3 336 2 45 1 227 1 279 1 7 2 229 1 202 1 67 1 50 1 341 1 321 1 11 1 12 2 90 1 264 1 209 1 372 2 115 1 135 1 136 1 216 1 
151 2 128 1 339 2 262 1 51 1 78 1 133 1 334 4 197 4 184 1 373 2 293 1 308 2 328 2 352 1 
218 1 138 1 303 1 
218 1 225 1 236 1 138 1 97 1 
218 1 138 1 303 1 
218 1 138 1 303 1 
218 1 138 1 198 1 
218 1 138 1 198 1 
218 1 138 1 198 1 
218 1 138 1 
22 1 276 1 
248 1 99 2 78 1 42 1 302 1 355 1 252 4 336 2 123 1 311 2 259 1 85 1 27 1 338 1 261 1 69 1 50 8 321 1 90 4 242 1 157 1 244 1 214 1 
248 2 99 2 78 1 42 2 355 1 302 2 252 6 336 4 123 1 311 3 27 1 85 1 259 2 338 1 261 1 69 2 366 1 367 1 50 11 321 2 90 5 291 1 242 1 326 1 157 1 244 1 214 1 17 1 
248 2 99 3 61 1 42 2 355 1 302 2 252 10 336 4 363 1 147 1 123 1 311 5 27 1 85 1 259 4 338 1 69 1 261 4 367 2 50 21 177 1 321 2 90 11 345 1 153 2 291 2 242 1 185 1 326 1 157 1 244 1 214 1 17 2 
248 2 99 3 61 1 42 2 355 1 302 2 252 11 336 4 363 1 147 1 123 1 311 6 27 1 85 1 259 4 338 1 69 1 261 3 367 3 50 19 177 1 321 2 90 8 345 1 153 1 291 2 242 1 185 1 326 1 157 1 244 1 214 1 17 2 
248 1 99 2 78 1 42 1 302 1 355 1 252 4 336 2 123 1 311 2 259 1 85 1 27 1 338 1 261 1 69 1 50 8 321 1 90 4 242 1 157 1 244 1 214 1 
248 1 99 1 42 1 302 1 252 6 336 2 363 1 147 1 311 2 85 1 259 2 69 1 261 2 367 1 50 12 321 1 90 6 345 1 153 2 291 2 242 1 185 1 157 1 244 1 17 2 
248 2 99 1 61 2 42 2 302 2 252 7 336 4 363 1 147 1 311 2 85 1 259 2 69 1 261 1 367 1 50 12 321 2 90 5 345 1 153 1 291 2 242 1 185 1 326 1 157 1 244 1 17 2 
248 2 99 2 61 2 42 2 302 2 252 7 336 4 80 1 363 1 147 1 311 4 85 1 259 2 69 1 261 1 367 2 50 12 321 2 90 5 345 1 153 1 291 2 242 1 185 1 157 1 244 1 17 2 
261 1 367 3 50 7 99 3 90 4 355 3 252 3 214 3 123 2 311 6 27 1 259 1 338 1 
248 2 99 1 61 2 42 2 302 2 252 7 336 4 80 1 363 1 147 1 311 2 85 1 259 2 69 1 261 1 367 1 50 12 321 2 90 5 345 1 153 1 291 2 242 1 185 1 157 1 244 1 17 2 
248 1 99 2 61 1 42 1 302 1 355 1 252 5 336 2 123 1 311 4 27 1 259 2 338 1 261 2 367 2 50 10 321 1 177 1 90 5 214 1 
261 1 99 2 50 6 78 1 90 3 355 1 252 3 292 1 214 1 123 1 311 2 27 1 259 1 338 1 
261 1 248 1 367 1 99 1 50 4 321 1 42 1 90 2 302 1 153 1 252 2 291 1 336 2 326 1 311 2 17 1 259 1 
261 1 69 2 366 1 367 1 99 1 50 7 90 4 153 1 252 3 291 1 242 1 244 1 17 1 311 2 259 1 
330 1 99 3 61 1 355 1 252 10 311 5 123 1 312 1 259 4 27 1 338 1 261 4 366 1 69 2 367 2 50 20 177 1 90 10 153 2 291 2 242 2 214 1 17 2 
69 1 50 1 90 1 
242 1 50 1 252 1 
248 1 261 1 367 1 50 6 99 2 321 1 42 1 90 3 302 1 153 1 252 3 255 1 291 1 336 2 326 1 17 1 311 3 259 1 
248 1 99 1 42 1 302 1 252 6 336 2 363 1 147 1 311 2 85 1 259 2 69 1 261 2 367 1 50 12 321 1 90 6 345 1 153 2 291 2 242 1 185 1 157 1 244 1 17 2 
261 1 367 1 50 6 99 1 90 3 355 1 252 3 214 1 311 2 259 1 338 1 
50 1 61 1 295 1 90 1 
248 1 261 2 367 2 99 3 50 10 321 1 177 1 42 1 90 5 302 1 355 2 252 5 336 2 214 2 311 5 85 1 259 2 338 1 
248 1 367 1 50 2 321 1 42 1 302 1 252 2 336 2 17 1 311 1 85 1 259 1 
261 1 248 1 367 1 99 1 50 4 321 1 42 1 90 2 302 1 153 1 252 2 291 1 336 2 311 2 17 1 85 1 259 1 
248 2 367 1 50 3 99 1 61 1 321 2 42 2 90 2 302 2 355 1 252 1 336 4 80 1 295 1 214 1 311 2 85 1 
248 3 99 3 61 1 42 3 355 1 302 3 252 12 120 1 336 6 80 1 123 1 199 1 311 6 27 1 85 1 259 4 338 1 69 3 261 4 367 3 50 24 177 1 321 3 90 12 153 2 291 2 242 3 326 1 244 1 214 1 189 1 17 2 
360 1 372 1 127 1 187 1 118 1 143 1 202 1 
127 1 118 1 141 1 143 1 333 1 196 1 372 1 360 1 187 1 169 1 15 1 202 1 
115 1 161 1 292 1 135 1 3 1 332 1 229 1 264 1 172 1 209 1 347 1 
77 1 161 1 341 1 143 2 3 1 102 1 332 1 264 1 209 1 324 1 372 1 360 2 115 1 135 1 227 1 229 1 7 1 202 1 
77 1 161 1 143 2 3 1 332 1 102 1 360 2 121 1 227 2 7 2 229 1 124 1 202 1 341 1 368 1 30 1 264 2 209 1 324 1 372 2 115 3 158 1 247 1 
77 1 161 1 221 1 143 2 3 2 332 2 102 1 360 2 121 1 227 2 7 2 229 1 124 1 202 1 368 1 30 1 264 2 209 2 324 1 372 2 115 3 158 1 378 1 247 1 
161 1 221 1 368 1 30 1 237 2 3 3 332 3 264 1 334 1 265 1 209 3 32 1 274 2 358 1 115 4 308 1 135 1 362 1 121 1 227 1 229 1 107 1 316 1 
161 1 221 1 368 1 30 1 237 2 3 3 332 3 264 1 334 1 209 3 32 1 274 2 62 1 358 1 115 4 308 1 135 1 362 1 121 1 227 1 229 1 107 1 
161 1 319 1 3 1 332 1 229 1 209 1 
60 1 126 1 319 1 161 2 194 1 3 7 354 1 332 7 264 2 209 6 266 1 155 1 275 1 115 3 213 1 135 2 171 1 227 1 39 1 229 3 315 1 
248 2 77 1 99 2 161 1 143 2 3 1 78 1 42 2 102 1 332 1 355 1 302 2 252 3 224 1 167 1 360 2 336 4 256 1 227 1 311 2 123 1 279 2 229 1 7 1 259 1 27 1 29 1 202 2 338 1 67 1 260 1 261 1 126 1 50 6 235 1 341 1 321 2 90 3 264 1 209 1 324 1 372 1 115 1 136 2 214 1 139 1 216 1 
219 1 1 1 3 1 332 1 334 1 274 3 62 1 358 1 168 1 308 1 362 1 47 1 107 2 200 1 49 1 317 1 128 1 339 1 262 2 51 2 237 3 133 2 209 1 32 1 210 1 115 2 293 2 135 1 
60 1 319 1 161 1 3 1 332 1 264 1 32 1 209 1 34 1 115 2 227 1 228 1 229 2 
126 1 161 1 221 1 3 4 332 4 264 1 209 4 347 1 304 1 115 1 135 1 229 1 172 1 
175 1 161 1 368 1 3 2 343 1 332 2 264 1 209 2 115 1 213 1 226 1 171 1 227 1 229 2 
36 1 161 1 135 1 176 1 331 1 310 1 3 1 332 1 229 1 209 1 
299 1 115 1 126 1 161 1 194 1 3 2 354 1 332 2 229 1 264 1 209 2 
126 1 161 2 368 1 3 5 194 1 332 5 264 2 209 4 347 1 304 1 155 1 115 3 135 1 39 1 229 2 172 1 
126 1 161 2 368 1 3 5 194 1 332 5 264 2 209 4 347 1 304 1 359 1 155 1 115 3 135 1 229 2 172 1 
77 1 161 1 143 2 3 1 102 1 332 1 264 1 209 1 324 1 372 1 360 2 115 1 135 1 227 1 378 1 229 1 7 1 202 1 
60 1 161 1 368 1 3 1 332 1 264 1 209 1 266 1 115 1 213 1 171 1 227 1 229 2 
360 1 372 1 186 1 143 1 342 1 369 1 18 1 181 1 201 1 
369 1 322 1 66 1 
186 1 342 1 148 1 369 1 202 1 
342 2 369 1 237 2 346 1 322 1 334 1 182 1 210 1 274 2 186 2 308 1 362 1 158 1 377 1 148 2 124 1 202 1 247 1 66 1 
335 1 220 1 292 1 129 1 
335 1 220 1 129 1 215 1 297 1 21 1 33 1 
246 1 4 1 21 1 
220 1 129 1 272 1 13 1 33 3 241 1 335 1 105 2 280 1 215 1 297 1 21 3 
335 1 119 1 220 1 129 1 215 1 297 1 86 1 21 2 33 2 
241 1 335 1 36 1 376 1 176 1 24 1 215 1 108 1 297 1 21 1 33 1 
241 1 335 1 129 1 215 1 297 1 21 1 33 1 
241 1 220 1 129 2 215 1 297 1 21 1 33 1 
129 1 33 2 241 1 113 1 335 1 83 1 96 1 215 2 297 2 21 2 
220 1 129 1 146 1 33 3 241 1 307 1 335 2 16 1 215 1 297 1 108 1 86 2 21 3 
0 1 220 1 129 1 24 1 176 1 331 1 195 1 33 2 241 1 335 1 36 2 215 1 297 1 86 1 21 2 
220 1 129 1 33 4 241 1 119 1 307 1 335 2 35 1 215 2 297 2 108 1 86 2 21 4 
241 1 335 1 220 1 129 1 215 1 297 1 21 1 33 1 
220 2 129 2 272 1 13 1 33 4 307 1 335 3 105 1 215 1 297 1 108 1 86 2 282 1 21 4 
203 1 220 1 129 1 239 1 33 2 241 1 166 1 335 1 215 1 297 1 86 1 21 2 
241 1 335 1 220 1 105 2 129 1 272 1 13 2 215 1 297 1 380 1 21 3 33 3 
335 2 300 1 313 2 173 1 
241 1 54 1 215 1 297 1 21 1 33 1 
241 1 335 1 220 1 129 1 16 1 215 1 297 1 86 1 21 2 33 2 
100 1 
241 1 335 1 220 1 129 1 215 1 297 1 21 1 33 1 
241 1 335 1 220 1 105 1 129 1 16 1 215 1 297 1 86 1 21 3 33 3 
335 1 307 1 108 1 282 1 
335 1 129 1 

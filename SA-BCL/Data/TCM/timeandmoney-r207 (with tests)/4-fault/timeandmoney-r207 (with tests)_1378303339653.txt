#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 274 (58,87) (58,87) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 274 (58,87) (58,87) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 274 (58,87) (58,87) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 274 (58,87) (58,87) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 274 (171,277) (171,277) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (37,181,268,270) 209 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (37,181,268,270) 209 311 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (37,181,268,270) 209 311 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 256 23 189 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 256 23 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (2,237,279) (2,237,279) (2,237,279) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (2,237,279) (2,237,279) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,181,268,270) (37,181,268,270) (2,237,279) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (155,355) (155,355) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 86 212 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 86 212 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 1 139 1 184 1 87 1 58 1 107 1 37 1 181 1 274 1 
268 1 139 1 184 1 87 1 58 1 107 1 37 1 181 1 274 1 
268 1 139 1 184 1 87 1 58 1 107 1 37 1 181 1 274 1 
268 1 139 1 184 1 87 1 58 1 107 1 37 1 181 1 274 1 
139 1 268 1 270 3 175 1 37 4 242 1 129 1 92 1 78 2 163 3 145 1 164 1 165 2 107 4 258 1 216 1 181 1 12 1 
268 1 139 1 204 1 184 1 171 1 107 1 37 1 277 1 181 1 129 1 274 1 
268 2 139 1 184 1 107 1 37 2 181 2 209 1 
311 1 268 2 139 1 270 1 184 1 107 2 37 3 181 2 293 1 209 1 
311 1 268 2 139 1 270 1 184 1 107 2 37 3 181 2 293 1 209 1 
174 1 61 1 288 1 
334 1 174 1 79 2 
327 2 206 2 42 2 221 1 347 2 262 2 84 2 138 1 
290 1 1 1 73 2 221 1 194 1 3 1 200 1 296 2 206 3 347 3 168 1 9 1 208 1 326 1 56 1 327 2 14 1 147 1 60 1 84 2 18 1 102 1 19 2 103 1 254 1 85 1 150 1 42 2 43 1 215 2 337 1 262 2 219 1 138 1 153 1 25 1 24 2 
327 1 206 1 42 1 221 1 346 1 347 1 262 1 84 1 169 1 239 1 
231 1 156 1 339 1 174 1 329 1 61 1 84 1 160 1 178 1 275 1 206 1 347 1 266 1 239 1 
327 1 231 1 339 2 174 1 329 1 61 1 84 1 160 1 178 1 42 1 206 1 347 1 262 1 266 2 239 1 
338 1 339 1 55 1 199 1 266 1 
338 1 339 2 174 1 61 1 55 1 325 1 70 1 266 2 
338 1 339 1 266 1 
327 1 339 1 221 1 292 1 84 1 42 1 206 1 346 1 347 1 262 1 55 1 169 1 266 1 239 1 
174 1 
338 1 339 2 174 1 320 1 61 1 55 1 325 1 266 2 
339 5 338 2 174 1 27 1 51 2 61 1 281 1 77 2 202 1 119 1 207 1 106 2 248 1 6 1 121 1 55 2 325 1 33 1 266 5 
288 1 138 1 
327 1 341 1 84 2 247 1 206 2 42 1 347 2 262 1 138 2 
312 1 191 1 137 1 
56 1 1 1 14 1 296 1 102 1 85 1 103 1 206 1 150 1 104 1 347 1 215 1 9 1 208 1 138 1 24 1 
1 1 56 1 327 1 14 1 47 1 312 1 196 1 84 1 296 1 102 1 103 1 85 1 150 1 206 2 347 2 215 1 262 1 208 1 9 1 24 1 
327 4 47 2 49 1 196 1 341 1 235 1 84 5 132 1 275 1 206 5 42 1 347 5 262 4 138 1 
327 2 206 2 347 2 262 2 84 2 169 1 244 1 239 1 
327 3 47 1 42 1 206 3 347 3 262 3 84 3 138 1 
327 1 206 1 347 1 262 1 84 1 169 1 239 1 
327 1 247 1 206 1 42 1 347 1 341 1 262 1 84 1 239 1 
1 1 47 1 339 1 73 1 221 1 222 1 194 1 196 1 341 1 3 1 160 1 178 1 296 1 206 4 347 4 168 1 208 1 9 1 326 1 56 1 231 1 327 3 14 1 147 1 60 1 329 1 40 1 84 3 102 1 19 2 103 1 85 1 150 1 42 2 43 1 215 1 337 1 262 3 138 1 266 1 153 1 239 1 25 1 24 1 
327 1 47 1 275 1 206 2 49 1 347 2 262 1 84 2 138 1 
327 3 231 1 339 1 47 2 174 1 196 1 329 1 341 1 40 1 84 3 160 1 178 1 42 1 206 3 347 3 262 3 120 1 266 1 239 1 
327 2 47 1 312 1 341 1 84 2 42 1 206 2 347 2 262 2 191 1 
56 1 1 1 14 1 296 1 102 1 85 1 103 1 206 1 150 1 347 1 215 1 9 1 208 1 138 1 24 1 
1 1 14 1 296 1 102 1 85 1 103 1 206 1 150 1 347 1 215 1 7 1 300 1 208 1 138 1 24 1 
291 1 140 1 73 4 312 2 271 1 194 1 3 1 245 1 166 1 168 1 183 1 326 2 301 1 211 1 147 1 127 1 60 1 186 1 18 2 101 1 19 2 43 1 137 2 191 2 
327 1 206 1 347 1 262 1 160 1 84 1 244 1 239 1 
74 1 253 1 
74 1 253 1 
333 1 243 1 
333 1 243 1 
333 1 243 1 
81 1 74 1 253 1 
193 1 74 1 253 1 
333 1 74 2 32 1 243 1 253 2 198 1 
81 1 74 1 253 1 
81 1 74 1 253 1 
75 1 74 1 253 1 
75 1 74 1 253 1 
75 1 74 1 253 1 
339 1 256 1 74 1 253 1 189 1 265 1 23 1 266 1 230 1 
256 1 74 1 253 1 265 1 23 1 230 1 
258 1 242 1 129 1 
204 1 258 1 129 1 
226 1 204 1 157 1 187 1 242 2 129 3 
204 1 157 1 187 1 242 1 44 1 129 2 
204 1 157 1 242 1 187 2 129 2 
338 1 339 5 174 2 158 1 51 1 77 1 316 2 202 2 207 1 166 1 324 1 121 3 55 4 325 1 79 3 301 1 34 2 170 1 250 1 127 1 39 1 61 1 236 1 188 1 101 1 334 1 335 1 106 1 287 1 88 1 112 2 266 5 
338 6 339 9 174 5 158 3 51 2 343 1 199 5 77 2 202 6 207 1 166 3 121 8 55 7 325 1 33 1 79 9 301 3 34 6 170 4 13 5 127 3 61 1 352 1 331 1 82 1 188 1 83 1 101 3 307 1 334 3 335 2 106 2 88 2 112 6 266 9 
339 3 174 3 51 1 158 1 77 1 316 1 202 2 324 1 166 1 121 3 55 2 33 1 301 1 79 4 34 2 170 1 127 1 61 1 236 1 101 1 334 2 335 1 106 1 88 1 112 2 266 3 
339 4 174 4 51 1 158 2 77 1 316 2 202 4 324 1 166 2 121 5 55 3 79 7 33 1 301 2 34 4 170 2 127 2 61 1 352 1 236 1 82 1 83 1 101 2 334 3 335 1 106 1 88 1 112 4 266 4 
150 1 240 1 288 1 
150 1 249 1 
330 1 
103 1 150 1 102 1 
150 1 278 1 
103 1 150 1 
103 1 150 3 240 2 223 1 197 1 102 1 
140 2 73 7 241 1 186 3 162 1 101 1 18 4 283 1 345 1 336 1 151 1 238 2 180 1 166 1 109 1 326 3 263 1 
140 2 73 7 241 1 186 3 162 1 101 1 18 4 283 1 345 1 336 1 151 1 238 2 180 1 166 1 109 1 326 3 263 1 
140 2 73 7 241 1 186 3 162 1 315 1 101 1 18 4 283 1 345 1 336 1 151 1 238 2 180 1 166 1 109 1 326 3 263 1 
140 5 73 31 241 5 158 3 195 1 162 2 5 1 318 1 345 1 276 1 180 1 166 4 168 1 326 15 301 3 229 1 303 1 147 1 127 3 60 1 305 4 186 10 18 16 101 4 283 2 19 2 336 1 151 1 43 1 238 3 108 3 109 2 111 1 263 2 
140 3 73 9 241 1 342 1 162 1 345 1 276 1 180 1 166 1 168 2 326 4 147 2 60 2 186 4 332 1 101 1 18 5 283 1 19 4 151 1 43 2 238 2 109 1 263 1 
268 1 139 1 1 1 270 1 2 1 313 1 242 1 296 1 297 1 226 1 204 1 322 1 181 1 208 1 36 1 279 1 184 1 37 2 59 1 129 2 237 1 353 1 255 1 215 1 107 1 258 1 24 1 
268 1 1 1 270 2 2 1 313 1 242 1 296 1 297 1 226 1 204 1 181 1 208 1 36 1 279 1 184 1 37 3 59 1 306 1 129 2 353 1 255 1 215 1 107 2 258 1 133 1 356 1 24 1 
1 1 36 1 270 2 313 1 2 1 184 1 37 2 59 1 242 1 306 1 129 2 296 1 297 1 226 1 204 1 353 1 107 1 215 1 258 1 133 1 208 1 24 1 
1 1 268 1 155 1 296 1 297 2 181 1 208 1 36 2 184 2 37 1 15 1 38 1 85 1 103 1 353 2 354 1 150 1 215 1 107 1 356 1 355 1 24 1 154 1 
268 1 139 1 1 1 2 1 313 1 242 1 296 1 297 1 226 1 204 1 181 1 208 1 36 1 279 1 184 1 37 1 59 1 129 2 237 1 353 1 255 1 215 1 107 1 258 1 133 1 24 1 
176 1 
1 1 141 1 174 2 51 1 272 1 178 1 317 2 275 1 94 1 228 4 8 1 325 3 97 2 57 1 231 1 329 1 61 1 16 1 334 2 103 1 64 1 150 1 106 1 67 1 190 2 152 2 154 1 24 2 239 1 338 6 339 5 156 1 160 1 161 1 77 1 296 2 202 2 206 1 207 1 347 1 121 2 208 1 122 1 79 2 251 2 128 2 84 1 214 1 85 2 354 1 215 2 88 1 264 2 45 1 266 5 
141 1 156 1 339 3 338 2 272 1 160 1 178 1 317 1 206 1 275 1 347 1 320 1 228 2 325 1 231 1 329 1 16 1 84 1 67 1 45 1 266 3 239 1 
141 1 338 1 156 1 339 3 174 1 272 1 160 1 178 1 206 1 275 1 347 1 320 1 228 3 325 1 231 1 329 1 16 1 61 1 84 1 67 1 190 1 45 1 266 3 239 1 
141 1 156 1 339 3 338 2 174 1 272 1 160 1 178 1 317 1 206 1 275 1 320 1 347 1 228 3 325 1 231 1 251 1 329 1 16 1 61 1 84 1 67 1 190 1 45 1 266 3 239 1 
141 1 174 5 51 1 272 1 178 1 317 4 275 1 320 1 319 1 228 6 325 3 97 2 231 1 329 1 16 1 61 5 334 2 149 1 285 1 106 1 67 1 190 4 152 2 239 1 339 5 338 7 156 1 26 1 160 1 77 1 161 1 117 1 202 1 206 1 207 1 347 1 121 1 122 1 251 4 128 2 84 1 45 1 264 2 266 5 
141 1 174 2 51 1 272 1 178 1 317 2 275 1 228 4 325 2 97 2 231 1 329 1 16 1 61 1 334 2 106 1 67 1 190 2 152 2 239 1 339 4 156 1 338 4 160 1 77 1 161 1 202 1 206 1 207 1 347 1 121 1 122 1 79 2 251 2 128 2 84 1 214 1 45 1 264 2 266 4 
141 1 338 4 156 1 339 4 174 1 51 1 272 1 160 1 161 1 178 1 77 1 117 1 202 1 317 2 206 1 275 1 207 1 347 1 121 1 228 4 325 2 122 1 97 2 231 1 251 2 128 2 329 1 61 1 16 1 84 1 334 2 149 1 285 1 106 1 67 1 190 2 152 2 264 2 45 1 266 4 239 1 
141 1 338 4 156 1 339 4 174 1 51 1 272 1 160 1 161 1 178 1 77 1 117 1 202 1 317 2 206 1 275 1 207 1 347 1 121 1 228 4 325 2 122 1 97 2 231 1 251 2 128 2 329 1 61 1 16 1 84 1 334 2 149 1 285 1 106 1 67 1 190 2 152 2 264 2 45 1 266 4 239 1 
141 1 338 4 156 1 339 4 174 1 340 1 51 1 272 1 160 1 161 1 143 1 178 1 77 1 117 1 202 1 317 2 246 2 203 1 206 1 275 1 207 1 347 1 31 2 121 1 228 4 325 2 79 2 231 1 251 2 128 2 329 1 61 1 16 1 84 1 106 1 67 1 190 2 264 2 45 1 266 4 239 1 
141 1 156 1 339 4 338 5 174 1 51 1 272 1 160 1 161 1 77 1 178 1 117 1 202 1 317 3 206 1 275 1 207 1 347 1 319 1 121 1 228 5 325 2 122 1 97 2 231 1 251 3 128 2 329 1 61 1 16 1 84 1 334 2 149 1 285 1 106 1 67 1 190 3 152 2 264 2 45 1 266 4 239 1 
141 1 156 1 339 4 338 5 174 1 51 1 272 1 160 1 161 1 77 1 178 1 117 1 202 1 317 3 206 1 275 1 207 1 347 1 319 1 121 1 228 5 325 2 122 1 97 2 231 1 251 3 128 2 329 1 61 1 16 1 84 1 334 2 149 1 285 1 106 1 67 1 190 3 152 2 264 2 45 1 266 4 239 1 
141 1 174 1 51 1 272 1 143 1 178 1 317 2 275 1 228 4 325 2 231 1 329 1 16 1 61 1 106 1 67 1 190 2 239 1 339 4 156 1 338 4 160 1 77 1 161 1 202 1 246 2 206 1 207 1 347 1 31 2 121 1 79 2 251 2 128 2 84 1 214 1 45 1 264 2 266 4 
140 2 73 6 312 1 194 1 3 1 162 1 245 1 345 1 180 1 166 1 168 1 326 3 147 1 60 1 186 2 18 3 101 1 19 2 151 1 43 1 238 1 288 1 263 1 191 1 138 2 137 1 
140 1 115 1 73 14 241 1 312 11 194 1 158 2 294 1 3 2 200 1 118 1 318 1 166 2 348 1 168 2 326 6 301 2 147 2 127 1 186 2 305 3 60 2 18 8 101 1 19 4 43 2 108 3 111 1 138 1 137 11 191 4 153 1 71 1 
1 1 115 1 47 1 73 2 194 1 196 1 3 1 296 1 200 1 206 2 347 2 208 1 9 1 168 1 326 1 80 1 56 1 327 1 14 1 147 1 60 1 100 1 84 1 18 1 102 1 103 1 85 1 19 2 150 1 104 1 215 1 43 1 262 1 289 1 138 1 191 1 24 1 153 1 
269 1 1 2 140 4 47 1 312 7 3 3 321 2 180 1 9 2 326 10 56 2 327 1 14 2 147 3 60 3 186 8 101 3 18 10 102 2 19 6 103 2 150 2 151 1 238 1 337 2 191 7 153 1 24 3 192 1 115 1 73 20 241 4 194 3 158 2 196 1 162 1 200 1 296 3 345 1 206 3 347 3 298 2 166 3 299 2 168 3 208 2 301 2 127 2 84 1 85 1 173 1 215 3 43 3 133 1 262 1 263 1 138 2 137 7 267 2 
1 2 290 2 47 1 73 2 50 1 194 2 3 2 142 1 296 8 200 1 245 1 206 1 52 1 347 1 322 1 95 1 208 2 168 2 326 1 123 1 327 1 147 2 60 2 84 1 18 1 85 2 19 4 103 2 150 3 354 1 215 7 43 2 133 1 260 1 262 1 218 1 24 8 153 1 154 1 
140 1 115 1 73 3 312 1 194 1 158 1 341 1 3 1 206 1 347 1 166 1 168 1 326 2 302 1 301 1 327 1 147 1 127 1 186 1 60 1 84 1 18 1 101 1 19 2 42 1 43 1 262 1 191 1 137 1 
73 2 241 1 312 1 271 1 147 1 194 1 186 1 60 1 3 1 18 2 245 1 19 2 43 1 166 1 168 1 301 1 191 1 137 1 
140 1 73 2 312 1 147 1 127 1 194 1 186 1 60 1 3 1 101 1 245 1 19 2 43 1 168 1 326 2 191 1 137 1 211 1 
140 1 73 4 312 2 241 1 158 1 194 1 3 1 245 1 166 1 168 1 326 2 301 1 147 1 127 1 60 1 186 2 18 2 101 1 19 2 43 1 137 2 191 2 
73 2 241 1 312 1 271 1 147 1 194 1 186 1 60 1 3 1 18 2 19 2 43 1 166 1 168 1 218 1 301 1 191 1 137 1 
140 1 73 2 312 1 147 1 127 1 194 1 186 1 60 1 3 1 101 1 19 2 43 1 168 1 218 1 326 2 191 1 137 1 211 1 
140 1 73 4 312 2 241 1 158 1 194 1 3 1 166 1 168 1 326 2 301 1 147 1 127 1 60 1 186 2 18 2 101 1 19 2 43 1 218 1 137 2 191 2 
140 1 73 4 312 2 241 1 158 1 194 1 3 1 166 1 168 1 326 2 301 1 147 1 127 1 60 1 186 2 18 2 101 1 19 2 43 1 137 2 191 2 
1 1 73 2 194 1 3 1 200 1 296 1 206 1 347 1 208 1 9 1 168 1 326 1 56 1 14 1 147 1 60 1 18 1 102 1 103 1 85 1 19 2 150 1 215 1 43 1 337 1 138 1 24 1 153 1 
1 1 73 2 194 1 3 1 200 1 296 1 206 1 347 1 7 1 208 1 300 1 168 1 326 1 14 1 147 1 126 1 60 1 18 1 102 1 103 1 85 1 19 2 150 1 215 1 43 1 138 1 24 1 153 1 
140 1 115 1 73 4 312 2 241 1 158 1 194 1 3 1 166 1 168 1 326 2 301 1 147 1 127 1 60 1 186 2 18 2 101 1 19 2 43 1 137 2 191 2 
1 1 140 1 73 4 241 1 312 2 194 1 158 1 3 1 296 1 206 1 321 1 347 1 322 1 166 1 208 1 9 1 168 1 326 2 301 1 56 1 14 1 147 1 127 1 186 2 60 1 101 1 18 2 102 1 103 1 19 2 150 1 215 1 43 1 337 1 191 2 137 2 24 1 
115 1 73 3 241 1 312 1 194 1 158 1 341 1 3 1 206 1 347 1 166 1 168 1 326 1 301 1 327 1 147 1 127 1 186 1 60 1 84 1 101 1 18 2 19 2 42 1 65 1 43 1 262 1 137 1 191 1 
140 3 73 19 241 3 158 3 342 1 179 1 29 2 318 1 205 1 166 3 168 2 326 10 301 3 232 1 147 2 212 1 99 1 127 3 305 2 60 2 186 6 18 9 101 3 19 4 66 1 86 2 43 2 20 1 108 1 111 1 
140 1 73 26 241 2 158 3 224 1 342 1 179 2 29 4 276 2 166 3 168 3 326 12 301 3 35 1 232 1 147 3 212 1 99 1 127 2 186 3 60 3 305 2 17 1 131 1 101 2 18 14 172 1 19 6 86 1 257 1 43 3 20 2 108 2 111 2 
140 3 73 41 241 4 158 4 224 1 342 1 162 1 179 1 29 4 318 1 205 1 345 1 276 1 180 1 166 5 168 3 326 21 301 4 35 1 232 1 147 3 212 1 99 1 127 4 305 4 60 3 186 7 17 1 131 1 18 20 101 5 172 1 309 1 19 6 86 1 151 1 257 1 43 3 238 1 20 2 108 3 111 3 263 1 
140 4 224 1 179 1 318 1 276 2 180 1 326 18 232 1 147 4 99 1 186 7 60 4 17 1 101 4 18 20 19 8 151 1 238 1 108 3 20 2 111 3 73 38 241 3 158 4 342 1 162 1 29 4 345 1 205 1 166 5 168 4 301 4 35 1 127 3 212 1 305 4 131 1 172 1 309 1 257 1 86 1 43 4 263 1 
140 6 73 44 241 6 158 6 224 1 342 1 162 1 118 2 179 1 29 2 318 2 345 1 276 1 180 1 166 7 168 2 326 21 301 6 35 1 232 1 147 2 212 1 99 1 127 6 305 4 60 2 186 12 17 1 131 1 18 23 101 7 172 1 19 4 86 1 151 1 257 1 43 2 238 1 20 1 108 4 111 2 263 1 
1 1 290 2 115 1 73 2 194 1 3 1 142 1 296 2 200 1 206 2 347 2 208 1 11 1 168 1 326 1 147 1 213 1 60 1 234 1 84 2 18 1 103 1 19 2 150 1 43 1 215 2 260 1 217 1 110 1 24 2 153 1 
1 1 36 1 313 1 59 1 242 1 129 2 314 1 296 2 308 1 226 1 204 1 255 1 215 2 258 1 133 1 322 1 208 1 90 1 24 2 
36 1 1 1 313 1 59 1 242 1 129 2 314 1 296 1 226 1 204 1 255 1 215 1 258 1 133 1 208 1 24 1 351 1 
1 1 36 1 304 1 38 1 296 1 103 1 85 1 150 1 354 1 215 1 208 1 90 1 24 1 154 1 
1 1 36 1 313 1 59 1 242 1 129 2 314 1 296 1 308 1 226 1 204 1 255 1 215 1 258 1 133 1 208 1 90 1 24 1 
344 1 
174 1 27 1 61 1 288 1 121 1 281 1 202 1 
339 1 338 1 174 2 51 1 61 1 77 1 202 1 334 1 207 1 106 1 121 1 325 1 152 1 122 1 79 1 97 1 266 1 
1 4 174 8 177 2 51 4 223 1 178 2 322 1 53 2 54 1 278 2 10 2 325 3 57 1 61 2 281 1 101 2 102 3 103 3 284 2 334 6 63 2 150 10 286 2 106 4 68 1 112 6 24 3 338 5 339 5 27 1 240 2 158 2 77 4 296 3 201 2 202 8 207 4 166 2 121 9 299 2 350 1 208 3 79 12 301 2 210 1 34 6 249 3 127 2 85 1 215 3 261 1 88 2 310 2 266 5 
339 1 338 1 174 4 51 2 158 2 224 1 77 2 202 4 207 2 323 1 166 2 121 7 10 1 325 1 79 6 301 2 34 5 35 1 127 2 305 1 61 1 131 1 101 2 172 1 334 3 106 2 257 1 108 1 111 1 112 5 266 1 
339 1 221 1 51 1 292 1 76 1 162 1 77 1 202 2 206 1 207 1 346 1 347 1 166 2 121 2 10 2 169 1 327 1 84 1 101 1 42 1 285 1 106 1 151 1 262 1 310 1 263 1 266 1 239 1 
27 1 174 1 51 1 61 1 77 1 281 1 202 1 207 1 106 1 121 1 
174 5 127 2 158 2 101 2 202 5 334 5 166 2 299 1 121 5 310 1 10 2 301 2 112 5 79 10 34 5 
339 1 338 1 174 1 61 1 325 1 266 1 
1 1 338 4 339 3 51 2 77 2 296 4 202 2 30 1 94 1 207 1 121 2 208 1 350 1 325 2 33 1 57 2 125 1 103 1 85 2 150 1 64 1 354 1 106 2 215 4 261 2 88 2 266 3 24 4 154 1 
1 1 73 1 221 1 194 1 3 1 296 1 206 3 347 3 168 1 9 1 208 1 326 1 56 1 327 2 14 1 147 1 60 1 84 2 102 1 19 2 85 1 103 1 42 2 150 1 43 1 215 1 337 1 262 2 138 1 153 1 24 1 25 1 
57 1 174 4 51 1 61 2 77 1 202 2 334 2 207 1 106 1 238 1 88 1 121 1 112 2 79 4 34 2 
256 1 230 1 
256 1 230 1 
256 1 230 1 
256 1 230 1 
256 1 230 1 
256 1 230 1 
256 1 230 1 
256 1 230 1 
74 1 253 1 
140 2 73 8 241 1 147 2 186 3 60 2 162 1 101 1 18 4 19 4 345 1 151 1 276 1 43 2 238 1 180 1 166 1 168 2 326 4 263 1 
140 2 73 6 186 2 162 1 18 3 101 1 345 1 151 1 238 1 180 1 288 1 166 1 326 3 263 1 
140 1 73 4 241 1 147 1 127 1 158 1 186 2 60 1 101 1 18 2 225 1 19 2 43 1 166 1 168 1 326 2 301 1 
140 1 73 7 241 1 127 1 158 1 305 2 186 2 101 1 18 3 318 1 108 1 166 1 111 1 326 4 301 1 
140 5 73 23 241 4 158 2 273 1 162 2 118 1 318 1 345 1 276 2 180 1 166 3 348 1 168 2 326 12 301 2 147 2 127 2 186 9 305 2 60 2 18 11 101 3 19 4 151 1 43 2 238 1 108 2 263 2 
73 1 305 1 326 1 
73 1 108 1 18 1 
140 2 73 6 241 1 147 1 127 1 158 1 60 1 186 3 18 3 101 1 225 1 19 2 43 1 166 1 299 1 168 1 326 3 301 1 
140 1 73 12 241 1 158 2 224 1 342 1 166 2 168 1 326 6 301 2 35 1 147 1 127 2 305 1 60 1 186 2 131 1 18 6 101 2 172 1 19 2 257 1 43 1 108 1 111 1 
140 1 73 6 241 1 186 2 162 1 18 3 101 1 151 1 166 1 326 3 263 1 
140 1 73 3 241 1 147 1 186 2 60 1 273 1 162 1 18 1 19 2 345 1 276 1 43 1 180 1 168 1 263 1 326 2 
140 3 73 10 241 2 147 1 60 1 186 5 342 1 76 1 162 2 18 5 101 2 19 2 151 1 43 1 166 2 168 1 263 2 326 5 
73 2 241 1 147 1 60 1 186 1 342 1 18 2 19 2 43 1 166 1 168 1 301 1 
140 1 73 4 241 1 147 1 127 1 158 1 186 2 60 1 342 1 101 1 18 2 19 2 43 1 166 1 168 1 326 2 301 1 
140 1 73 3 241 1 147 3 60 3 186 2 273 1 342 1 162 1 18 1 19 6 205 1 276 1 43 3 168 3 326 2 263 1 
140 7 73 34 241 5 195 1 158 3 273 1 342 1 162 3 5 1 225 1 318 1 345 1 205 1 276 2 180 1 166 5 168 5 326 18 229 1 301 3 147 5 127 3 305 4 60 5 186 12 18 16 101 5 19 10 151 2 43 5 238 1 108 3 111 1 263 3 
140 2 73 8 342 1 162 1 345 1 180 1 166 1 168 1 326 4 147 1 305 1 60 1 186 2 131 1 101 1 18 4 19 2 151 1 43 1 238 1 108 1 111 1 263 1 
140 2 73 11 241 1 158 1 342 1 162 1 225 1 318 1 345 1 180 1 166 2 168 2 326 5 301 1 147 2 305 2 60 2 186 3 131 1 101 1 18 6 19 4 151 1 43 2 238 1 108 1 111 1 263 1 
140 1 73 13 241 1 158 2 224 1 342 1 225 1 276 1 166 2 168 3 326 7 301 2 35 1 147 3 127 2 305 1 60 3 186 2 131 1 18 6 101 2 172 1 19 6 257 1 43 3 108 1 111 1 
140 1 73 11 241 1 158 2 224 1 342 1 225 1 276 1 166 2 168 3 326 4 301 2 35 1 147 3 127 1 305 1 60 3 186 2 131 1 18 7 101 1 172 1 19 6 257 1 43 3 108 1 111 1 
140 2 73 8 342 1 162 1 345 1 180 1 166 1 168 1 326 4 147 1 305 1 60 1 186 2 131 1 101 1 18 4 19 2 151 1 43 1 238 1 108 1 111 1 263 1 
140 1 73 12 241 1 158 2 224 1 342 1 166 2 168 1 326 6 301 2 35 1 147 1 127 2 305 1 60 1 186 2 131 1 18 6 101 2 172 1 19 2 257 1 43 1 108 1 111 1 
140 1 73 12 241 1 158 2 224 1 342 1 225 1 276 2 166 2 168 4 326 5 301 2 35 1 147 4 127 1 305 1 60 4 186 2 131 1 18 7 101 1 172 1 19 8 257 1 43 4 108 1 111 1 
140 2 73 12 241 2 158 2 224 1 342 1 205 1 276 2 166 2 168 4 326 5 301 2 35 1 147 4 127 1 305 1 60 4 186 4 131 1 18 7 101 1 172 1 19 8 257 1 43 4 108 1 111 1 
140 3 73 7 241 3 186 6 162 3 101 1 18 3 345 2 151 1 180 1 166 1 326 4 263 3 
140 1 73 12 241 1 158 2 224 1 342 1 205 1 276 2 166 2 168 4 326 5 301 2 35 1 147 4 127 1 305 1 60 4 186 2 131 1 18 7 101 1 172 1 19 8 257 1 43 4 108 1 111 1 
206 1 275 1 48 1 49 1 347 1 84 1 138 1 
124 1 116 1 48 1 49 1 84 1 275 1 206 1 347 1 259 1 349 1 22 1 138 1 
1 1 103 1 85 1 150 1 354 1 215 1 288 1 208 1 296 1 154 1 24 1 
1 1 327 1 14 1 47 1 84 1 296 1 102 1 103 1 85 1 150 1 206 2 347 2 215 1 262 1 9 1 208 1 138 1 24 1 
1 1 327 2 14 1 47 1 329 1 160 1 84 2 296 1 102 2 103 2 150 3 206 2 347 2 215 1 53 1 278 1 261 1 262 1 9 1 208 1 138 1 239 1 24 1 
1 1 47 1 160 1 296 2 206 2 347 2 53 1 278 1 208 1 300 1 327 2 14 1 329 1 84 2 102 2 103 2 150 3 215 2 261 1 262 1 89 1 138 1 24 2 239 1 
1 1 338 1 339 2 72 1 240 1 174 1 178 1 296 3 53 1 278 1 208 1 249 1 61 1 102 1 103 1 85 1 150 4 215 3 261 1 89 1 135 1 266 2 24 3 
1 1 339 2 338 1 174 1 240 1 177 1 61 1 178 1 296 3 102 1 85 1 103 1 150 4 215 3 53 1 278 1 261 1 89 1 208 1 266 2 24 3 249 1 
1 1 215 1 50 1 208 1 296 1 24 1 
290 1 0 1 1 3 50 1 223 1 28 1 296 7 102 1 85 2 103 2 62 1 150 3 52 1 215 6 133 1 260 1 322 1 95 1 208 2 123 1 24 7 
1 1 140 2 47 1 312 1 3 2 321 1 322 1 180 1 9 1 11 1 326 3 56 1 327 1 14 1 147 2 60 2 186 2 18 3 101 1 102 1 19 4 103 1 150 1 151 1 238 1 337 1 191 1 24 1 115 1 73 6 194 2 162 1 296 1 206 2 345 1 347 2 166 1 168 2 208 1 84 1 215 1 43 2 262 1 263 1 138 2 137 1 267 1 
339 3 338 2 174 1 27 1 240 1 177 1 51 2 77 2 178 1 296 1 202 1 207 2 121 1 350 1 55 1 325 1 249 1 61 1 281 1 85 1 284 1 63 1 150 2 106 2 286 1 215 1 266 3 24 1 
1 2 103 1 150 2 240 1 215 2 50 1 322 1 223 1 54 1 208 1 296 2 102 1 24 2 
98 1 1 1 296 4 85 1 103 1 354 1 150 1 215 4 322 1 89 1 208 1 24 4 154 1 
0 1 1 2 233 1 185 1 296 2 102 1 103 1 173 1 62 1 150 1 215 2 261 1 208 1 24 2 
1 1 85 1 204 1 215 1 258 1 59 1 129 1 208 1 296 1 24 1 
1 1 103 1 150 1 215 2 260 1 133 1 322 1 217 1 208 1 296 2 24 2 
98 1 1 2 296 5 85 1 103 2 354 1 150 3 215 4 322 1 260 1 261 1 95 1 208 2 123 1 154 1 24 5 
98 1 1 2 296 5 85 1 103 2 354 1 150 3 215 4 322 1 260 1 261 1 21 1 95 1 208 2 154 1 24 5 
1 1 327 1 14 1 47 1 84 1 296 1 102 1 103 1 85 1 150 1 206 2 347 2 215 1 262 1 300 1 208 1 138 1 24 1 
0 1 1 2 223 1 28 1 296 1 102 1 103 1 62 1 150 1 215 1 261 1 208 1 24 1 
328 1 134 1 46 1 138 1 41 1 
231 1 339 2 174 1 328 2 329 1 61 1 159 1 40 1 160 1 178 1 130 1 41 1 167 1 55 1 134 2 46 2 138 1 266 2 239 1 
206 1 347 1 213 1 234 1 110 1 84 1 134 1 46 1 41 1 
159 1 130 1 41 1 
145 1 288 1 92 1 163 1 
145 1 268 1 107 1 37 1 181 1 92 1 163 1 
184 1 107 1 297 1 
220 1 139 1 268 1 114 1 37 3 92 1 93 1 163 1 145 1 105 2 107 3 181 1 
145 1 268 1 270 1 107 2 37 2 181 1 92 1 163 1 78 1 
268 1 139 1 165 1 107 1 37 1 258 1 181 1 242 1 129 1 12 1 163 1 
268 1 139 1 107 1 37 1 181 1 92 1 163 1 
145 1 268 1 139 1 107 1 37 1 181 1 92 2 
268 2 139 1 107 2 37 2 252 1 181 2 92 1 144 1 146 1 163 1 
139 1 268 1 113 1 270 2 175 1 37 3 92 1 282 1 163 2 145 1 165 1 107 3 181 1 
139 1 268 1 270 1 37 2 242 1 129 2 92 1 163 1 145 1 148 1 226 1 204 1 107 2 258 1 181 1 
139 1 268 2 270 2 175 1 37 4 92 1 78 1 163 2 145 1 165 1 107 4 181 2 216 1 
145 1 268 1 139 1 107 1 37 1 181 1 92 1 163 1 
268 1 114 1 270 2 175 1 37 4 92 2 93 1 163 3 145 2 165 1 105 1 107 4 69 1 181 1 
139 1 268 1 270 1 37 2 280 1 293 1 92 1 163 1 145 1 107 2 181 1 96 1 
145 1 268 1 139 1 114 2 105 2 107 3 37 3 181 1 92 1 295 1 93 1 163 1 
182 2 227 1 4 1 163 2 
268 1 139 1 91 1 107 1 37 1 181 1 
145 1 268 1 139 1 270 1 107 2 37 2 181 1 92 1 282 1 163 1 
136 1 
145 1 268 1 139 1 107 1 37 1 181 1 92 1 163 1 
145 1 268 1 139 1 270 1 105 1 107 3 37 3 181 1 92 1 282 1 163 1 
165 1 175 1 69 1 163 1 
92 1 163 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (91,169,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (91,169,324) 23 348 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (91,169,324) 23 342 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (91,169,324) (91,169,324) 345 44 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (91,169,324) 23 103 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 3 339 1 340 1 138 1 79 1 329 1 235 2 192 3 284 1 274 1 116 1 350 2 267 2 
31 1 339 2 13 2 340 1 235 5 192 9 347 2 61 1 284 1 303 1 350 2 267 2 105 1 104 1 137 9 138 1 308 1 270 2 181 1 139 1 79 3 329 6 113 1 274 1 248 1 229 1 116 4 209 2 
31 1 339 2 13 2 340 1 235 5 192 9 347 2 61 1 284 1 303 1 350 2 267 2 105 1 104 1 137 9 138 1 308 1 270 2 181 1 139 1 79 3 329 6 113 1 274 1 248 1 229 1 116 4 209 2 
31 1 339 2 13 2 340 1 235 6 192 10 347 2 61 1 284 1 303 1 350 2 267 2 105 1 104 1 137 10 138 1 308 1 270 2 181 1 139 1 79 4 329 7 113 1 274 1 248 1 229 1 116 5 209 2 
31 1 339 2 13 2 340 1 235 4 192 7 347 2 61 1 284 1 303 1 350 2 267 2 105 1 104 1 137 7 138 1 308 1 270 2 181 1 79 2 329 4 113 1 274 1 248 1 229 1 116 3 209 1 
31 1 105 1 13 1 137 4 340 1 138 1 270 1 79 1 139 1 329 3 235 3 192 4 347 1 284 1 116 2 350 1 209 2 267 1 
137 2 13 1 339 1 340 1 313 1 138 1 270 1 235 1 192 2 113 1 284 1 21 1 229 1 350 1 67 1 267 1 
31 1 339 1 13 1 340 1 235 5 192 9 347 1 284 1 195 1 303 1 350 2 267 2 105 1 137 9 138 1 270 1 79 3 329 7 139 1 357 1 274 1 248 1 116 4 209 2 
31 1 339 1 13 1 340 1 235 5 192 9 347 1 284 1 195 1 303 1 350 2 267 2 105 1 137 9 138 1 270 1 79 3 329 7 139 1 357 1 274 1 248 1 116 4 209 2 
0 1 56 1 108 1 57 1 15 1 14 1 164 1 83 1 196 1 215 1 362 1 240 1 242 1 91 1 
194 1 
194 1 272 1 72 1 156 1 33 1 15 1 240 2 91 2 
33 1 15 2 161 2 35 1 36 1 16 1 194 1 99 1 272 2 156 1 228 1 278 1 200 1 240 5 66 2 54 1 91 5 185 1 218 2 
19 1 194 1 33 1 
194 1 63 1 293 2 
83 2 56 2 215 2 196 2 160 1 57 2 108 2 242 1 
231 1 146 1 56 2 147 1 258 1 57 2 34 1 119 1 5 2 121 1 122 1 215 3 196 2 154 1 304 1 319 1 321 1 241 2 322 2 242 1 45 1 75 1 307 1 160 1 352 1 108 2 204 1 328 1 83 3 27 2 208 1 226 2 166 1 87 1 251 1 336 1 299 1 
0 1 164 1 83 1 56 1 215 1 196 1 57 1 108 1 362 1 242 1 
169 1 324 1 
83 1 56 1 215 1 196 1 57 1 108 1 324 1 
272 1 295 1 15 1 240 1 91 1 
254 1 194 1 272 1 156 1 33 1 15 1 240 2 91 2 
272 1 240 1 91 1 
0 1 56 1 57 2 108 1 160 1 245 1 83 2 215 2 196 1 330 1 133 1 
257 1 349 1 279 1 
146 1 75 1 258 1 160 1 352 1 98 1 5 1 121 1 122 1 83 1 215 1 27 1 226 1 166 1 251 1 299 1 
19 1 160 1 
146 1 56 1 75 1 258 1 352 1 57 1 121 1 5 1 122 1 83 2 196 1 215 2 27 1 226 1 166 1 167 1 349 1 312 1 251 1 299 1 
83 3 56 3 215 3 196 3 108 1 160 1 57 3 167 1 
0 1 164 1 83 1 56 1 215 1 196 1 57 1 
56 1 0 1 108 1 57 1 245 1 83 1 196 1 215 1 133 1 
83 2 56 2 215 2 196 2 348 1 108 1 57 2 167 1 324 1 23 1 245 1 312 1 
83 2 56 1 215 2 196 1 160 1 57 2 167 1 97 1 82 1 
83 1 56 1 215 1 196 1 342 1 57 1 167 1 324 1 23 1 312 1 
56 2 257 1 108 1 57 2 245 1 83 2 196 2 215 2 167 1 349 1 
146 1 75 1 258 1 160 1 352 1 5 1 121 1 122 1 83 1 215 1 27 1 226 1 166 1 251 1 299 1 
146 1 75 1 258 1 160 1 352 1 353 1 5 1 121 1 122 1 83 1 247 1 215 1 27 1 226 1 166 1 
231 1 147 1 257 2 34 1 259 1 261 1 154 2 319 1 198 1 349 2 321 1 241 2 322 4 71 1 45 2 106 1 269 1 109 1 328 1 294 1 141 1 249 1 168 1 279 2 
0 1 83 1 56 1 215 1 196 1 57 1 320 1 152 1 
56 4 57 5 108 1 160 1 97 1 49 1 245 1 82 1 83 5 318 1 196 4 215 5 167 2 312 1 
0 1 164 1 83 2 56 2 215 2 196 2 57 2 320 1 
176 1 315 1 266 1 
176 2 24 1 282 1 89 1 130 1 266 2 
176 1 266 1 
176 1 266 1 
24 1 130 1 
24 1 130 1 
24 1 130 1 
176 1 277 1 266 1 
176 1 277 1 266 1 
176 1 277 1 266 1 
176 1 260 1 266 1 
176 1 260 1 266 1 
176 1 260 1 266 1 
256 1 306 1 176 2 150 1 282 1 213 2 236 2 206 2 6 1 194 1 239 1 276 3 51 1 158 2 265 2 240 2 266 2 144 1 91 2 
210 1 56 2 171 1 57 2 213 1 315 1 236 1 123 1 196 2 215 2 153 1 158 1 240 1 266 1 176 1 160 1 26 1 206 1 83 2 276 1 51 1 86 1 333 1 91 1 
347 1 273 1 13 2 21 1 129 2 
347 1 13 1 270 1 
13 1 21 1 270 1 
347 2 283 1 273 1 13 3 21 1 129 1 
347 1 136 1 273 1 13 2 21 1 129 1 
171 1 15 4 33 1 93 1 16 1 237 2 261 1 123 1 194 2 63 1 156 1 264 1 66 1 240 5 218 1 326 1 161 1 111 1 293 3 271 1 26 1 140 2 272 1 141 1 183 2 228 2 297 1 249 1 361 1 168 1 54 3 91 5 
15 7 33 1 314 1 16 1 237 6 261 3 17 5 317 1 194 5 63 3 156 1 240 9 66 2 218 2 326 1 161 2 110 1 111 3 293 9 26 4 140 6 272 6 295 5 141 3 28 1 331 1 228 6 297 2 249 3 361 2 168 3 54 8 90 1 185 1 91 9 
33 1 15 2 261 1 237 2 194 3 63 2 264 1 66 1 240 3 218 1 161 1 111 1 293 4 271 1 26 1 140 2 141 1 183 1 297 1 228 2 249 1 361 1 168 1 54 3 91 3 185 1 
33 1 15 3 237 4 261 2 194 4 63 3 264 1 66 1 240 4 218 1 161 1 111 2 293 7 271 1 26 2 140 4 141 2 183 2 28 1 331 1 297 1 228 4 249 2 361 1 168 2 54 5 90 1 91 4 185 1 
224 1 
19 1 352 1 288 1 
182 1 352 1 
146 1 352 1 
146 1 122 1 288 2 352 3 334 1 221 1 
146 1 122 1 352 1 
352 1 292 1 
45 4 281 1 259 3 180 1 234 1 261 1 141 1 154 3 84 1 358 1 198 2 142 1 102 1 11 2 29 1 143 1 216 1 322 7 
231 1 147 1 281 2 149 1 34 1 259 10 234 2 214 4 120 1 261 4 154 15 40 1 198 5 42 1 102 1 321 1 22 1 157 3 216 1 241 2 322 31 132 1 45 16 111 3 141 4 358 1 84 2 142 2 249 3 11 3 29 1 143 5 168 3 30 1 
231 2 45 5 147 2 281 1 2 1 259 4 34 2 234 1 244 1 261 1 141 1 358 1 154 4 84 1 142 1 42 1 198 3 102 1 11 2 321 2 29 1 143 1 241 4 322 9 
45 4 281 1 259 3 234 1 261 1 141 1 154 3 84 1 358 1 198 2 142 1 102 1 11 2 29 1 143 1 216 1 322 7 
45 4 281 1 259 3 234 1 261 1 141 1 154 3 84 1 358 1 198 2 142 1 102 1 11 2 29 1 143 1 216 1 322 7 
146 1 339 2 137 1 75 1 258 1 352 1 151 1 346 2 192 1 121 1 5 1 310 1 27 1 225 1 165 1 226 1 101 1 52 2 350 1 184 2 325 1 230 1 267 1 
339 1 170 1 13 2 343 1 341 1 258 1 189 1 212 1 346 1 192 1 5 1 121 1 347 1 283 1 21 1 350 1 174 1 267 1 351 1 137 1 138 1 270 1 27 1 226 1 52 1 184 1 
339 1 170 1 13 2 340 1 343 1 341 1 258 1 212 1 346 1 235 1 192 2 5 1 121 1 347 1 283 1 284 1 21 1 350 1 174 1 267 1 351 1 137 2 138 1 270 1 329 1 27 1 226 1 52 1 184 1 338 1 
339 1 13 2 340 1 343 1 341 1 258 1 189 1 212 1 346 1 235 1 192 3 5 1 121 1 347 1 283 1 284 1 21 1 350 1 174 1 267 1 351 1 137 3 270 1 329 2 27 1 310 1 226 1 52 1 311 1 184 1 
339 1 13 2 340 1 343 1 341 1 258 1 189 1 212 1 346 1 235 1 192 2 5 1 121 1 283 1 347 1 284 1 21 1 137 2 270 1 329 2 27 1 226 1 52 1 311 1 184 1 
48 1 
146 1 169 1 258 1 95 1 16 1 345 1 121 1 5 2 238 1 286 1 156 1 101 1 66 1 240 2 324 1 218 1 44 1 74 1 75 2 352 1 161 1 354 1 272 2 27 2 226 2 228 1 361 1 54 1 91 2 230 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
272 1 72 1 169 1 44 1 74 1 286 1 156 1 345 1 240 2 324 1 91 2 
169 1 44 1 74 1 286 1 161 1 16 1 345 1 66 1 240 1 324 1 218 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 345 1 240 1 324 1 91 1 
169 1 44 1 74 1 286 1 161 1 16 1 345 1 66 1 240 1 324 1 218 1 91 1 
231 2 146 2 56 1 148 1 258 2 147 2 57 1 189 1 34 2 119 1 121 2 5 7 215 1 196 1 154 1 126 1 8 1 319 2 128 1 304 1 101 1 321 2 241 4 322 2 201 1 106 1 45 1 75 2 352 3 204 2 328 2 83 1 27 8 226 8 167 1 335 1 337 1 338 1 230 1 
231 1 56 1 257 1 147 1 57 1 259 1 34 1 59 1 261 1 196 1 215 1 154 2 198 1 319 1 349 1 321 1 241 2 322 3 45 1 108 1 111 1 328 1 245 1 83 1 141 1 10 1 249 1 168 1 279 1 
231 1 257 1 147 1 34 1 259 2 234 1 261 1 19 1 154 3 319 1 198 2 349 1 102 1 321 1 241 2 322 6 106 1 45 3 160 2 328 1 141 1 358 1 142 1 11 1 29 1 279 1 
231 2 147 2 257 4 149 1 259 2 34 2 119 1 59 1 214 3 261 2 262 1 154 6 287 1 304 1 198 1 319 2 349 11 321 2 157 3 22 1 241 4 322 14 45 8 160 1 111 2 328 1 114 1 222 1 141 1 249 1 143 1 168 2 279 11 
146 1 231 1 56 1 258 1 257 1 147 1 57 1 34 1 119 1 59 1 121 1 5 1 98 1 122 1 215 2 196 1 154 1 319 1 304 1 321 1 241 2 322 2 45 1 177 1 75 1 160 1 352 1 328 1 83 2 27 1 226 1 166 1 359 1 167 1 298 1 251 1 312 1 299 1 
231 3 92 2 146 2 147 3 189 1 34 3 96 1 234 1 5 3 196 1 154 10 39 2 198 4 319 3 102 1 321 3 241 6 322 20 45 10 160 2 327 1 111 2 328 3 166 2 167 1 249 2 11 1 168 2 251 2 299 2 56 1 211 2 258 2 257 7 57 1 259 8 119 1 59 1 261 3 121 2 122 2 215 3 304 1 349 7 75 1 307 2 352 2 179 2 83 3 27 3 141 3 358 1 226 3 227 1 142 1 29 1 143 4 312 1 279 7 
231 1 106 1 45 2 257 1 147 1 269 1 259 1 34 1 328 1 261 1 319 1 349 1 321 1 143 1 241 2 322 2 168 1 279 1 
231 1 106 1 257 1 147 1 259 1 34 1 328 1 294 1 141 1 154 2 198 1 319 1 349 1 249 1 321 1 241 2 322 2 279 1 
231 1 106 1 45 2 257 2 147 1 259 2 34 1 111 1 328 1 261 1 141 1 154 2 198 1 319 1 249 1 349 2 321 1 143 1 241 2 322 4 168 1 279 2 
231 1 45 2 257 1 147 1 269 1 259 1 34 1 328 1 261 1 128 1 319 1 349 1 321 1 143 1 241 2 322 2 168 1 279 1 
231 1 257 1 147 1 259 1 34 1 328 1 294 1 141 1 154 2 198 1 128 1 319 1 349 1 249 1 321 1 241 2 322 2 279 1 
231 1 45 2 257 2 147 1 259 2 34 1 111 1 328 1 261 1 141 1 154 2 198 1 128 1 319 1 249 1 349 2 321 1 143 1 241 2 322 4 168 1 279 2 
231 1 45 2 257 2 147 1 259 2 34 1 111 1 328 1 261 1 141 1 154 2 198 1 319 1 249 1 349 2 321 1 143 1 241 2 168 1 322 4 279 2 
146 1 231 1 258 1 147 1 34 1 119 1 121 1 5 1 122 1 215 1 154 1 304 1 319 1 321 1 241 2 322 2 45 1 307 1 75 1 160 1 352 1 328 1 83 1 27 1 226 1 166 1 251 1 299 1 
146 1 231 1 258 1 147 1 34 1 119 1 121 1 5 1 122 1 62 1 215 1 154 1 304 1 319 1 321 1 241 2 322 2 45 1 75 1 160 1 352 1 353 1 328 1 247 1 83 1 27 1 226 1 166 1 
231 1 45 2 257 2 147 1 259 2 34 1 59 1 111 1 328 1 261 1 141 1 154 2 198 1 319 1 249 1 349 2 321 1 143 1 241 2 322 4 168 1 279 2 
146 1 231 1 257 2 258 1 147 1 259 2 34 1 261 1 121 1 5 1 122 1 215 1 154 2 39 1 198 1 319 1 349 2 321 1 241 2 322 4 45 2 307 1 352 1 111 1 328 1 83 1 27 1 141 1 226 1 166 1 249 1 143 1 168 1 279 2 251 1 299 1 338 1 
231 1 56 1 147 1 257 1 57 1 259 1 34 1 59 1 261 1 301 1 196 1 215 1 154 1 319 1 349 1 321 1 241 2 322 3 45 2 108 1 111 1 328 1 245 1 83 1 141 1 249 1 143 1 168 1 279 1 
231 2 280 1 147 2 2 1 149 1 118 1 94 2 34 2 259 6 190 1 214 2 261 3 20 1 154 10 198 3 321 2 157 1 22 1 217 2 241 4 322 19 134 1 45 9 178 1 111 3 141 3 249 3 143 3 168 3 252 1 
231 3 147 3 2 1 118 1 149 2 94 1 259 4 34 3 214 2 261 3 20 1 154 12 42 2 198 2 321 3 157 2 217 4 241 6 322 26 134 2 45 14 46 1 178 1 111 3 220 1 80 1 296 1 141 2 360 1 88 1 249 2 143 2 168 3 252 2 
231 3 187 1 280 1 147 3 2 1 149 3 118 1 94 1 34 3 259 8 234 1 214 4 261 5 20 1 154 21 42 1 198 4 102 1 321 3 157 3 22 1 217 4 241 6 322 41 134 1 45 20 46 1 178 1 111 4 220 1 80 1 296 1 141 5 358 1 360 1 142 1 88 1 249 4 11 1 29 1 143 4 168 4 252 2 
231 4 187 1 280 1 147 4 2 1 149 3 118 1 94 1 34 4 259 7 234 1 214 4 261 5 20 1 154 18 42 2 198 4 102 1 321 4 157 3 22 1 217 4 241 8 322 38 134 1 45 20 46 1 178 1 111 4 220 1 80 1 296 1 141 4 358 1 360 1 142 1 88 1 249 3 11 1 29 1 143 3 168 4 252 2 
231 2 147 2 2 1 149 2 118 1 94 1 34 2 259 14 234 1 214 4 261 8 20 1 154 25 42 1 198 7 102 1 321 2 157 4 22 2 217 4 241 4 322 52 134 1 45 27 46 1 178 1 111 7 220 1 80 1 114 2 296 1 141 8 358 1 360 1 142 1 88 1 249 7 11 1 29 1 143 7 168 7 252 1 
206 1 6 1 306 1 176 1 282 1 213 1 158 1 266 1 305 1 236 1 
210 1 315 1 
206 1 285 1 176 1 127 1 162 1 213 1 158 1 266 1 236 1 
256 1 306 1 176 1 282 1 213 1 236 1 206 1 6 1 194 1 239 1 276 2 51 1 158 1 265 1 240 1 266 1 144 1 91 1 
256 1 306 1 176 1 282 1 213 1 236 1 206 1 6 1 194 1 239 1 276 2 51 1 158 1 265 1 240 1 266 1 144 1 91 1 
256 1 306 1 176 1 282 1 213 1 236 1 206 1 6 1 194 1 239 1 276 2 51 1 158 1 265 1 240 1 266 1 144 1 91 1 
9 1 277 1 89 1 
9 1 277 1 89 1 
260 1 37 1 
89 1 260 1 37 1 
153 1 333 1 
210 1 56 2 171 1 57 2 15 1 213 1 315 1 172 1 236 1 123 1 215 2 196 2 153 1 265 1 158 1 240 1 266 1 176 1 160 1 26 1 206 1 83 2 276 1 86 1 333 1 144 1 91 1 
9 1 277 1 
89 1 260 1 37 1 
146 1 231 1 55 1 258 1 147 1 57 2 344 1 34 1 119 1 59 1 121 1 60 1 5 2 124 1 215 2 154 1 126 1 319 1 304 1 321 1 241 2 322 2 45 1 352 1 204 2 328 1 83 2 27 2 226 2 250 1 337 1 
146 1 186 1 75 1 258 1 352 1 346 1 121 1 5 1 27 1 223 1 226 1 225 1 101 1 230 1 
186 1 13 2 258 1 343 1 341 1 189 1 270 1 346 1 4 1 5 1 121 1 347 1 283 1 27 1 226 1 100 1 21 1 174 1 
186 1 13 2 258 1 343 1 341 1 189 1 270 1 346 1 4 1 121 1 5 2 347 1 283 1 27 2 226 2 100 1 21 1 174 1 338 1 
13 2 290 1 343 1 341 1 258 1 189 1 270 1 346 1 5 1 121 1 347 1 283 1 27 1 226 1 100 1 21 1 174 1 
316 1 
33 1 161 1 36 1 16 1 99 1 194 1 228 1 66 1 54 1 218 1 
211 1 111 2 293 10 261 2 237 5 140 5 194 5 141 2 63 5 41 1 65 2 228 5 249 2 168 2 54 5 
194 1 272 1 156 1 33 1 240 1 91 1 
146 1 1 1 258 1 95 1 16 1 121 1 5 4 238 1 197 1 156 2 101 1 66 2 240 3 218 2 75 2 352 1 161 2 354 2 356 1 272 4 27 4 226 4 85 2 228 2 361 2 54 2 185 1 91 3 230 1 
19 1 194 1 99 1 33 1 228 1 36 1 54 1 
232 1 25 1 33 1 161 1 16 1 293 1 191 1 272 1 194 2 156 1 63 1 228 1 240 1 66 1 54 1 91 1 218 1 
146 1 211 1 75 1 258 2 352 2 161 1 16 1 221 1 121 1 5 1 122 1 207 1 27 1 182 1 226 1 66 1 54 1 323 1 135 1 218 1 
149 1 33 2 16 2 214 1 237 5 261 2 194 5 156 1 63 3 302 1 41 1 65 2 157 1 240 1 66 2 218 2 76 1 46 1 161 2 354 1 111 2 293 6 80 1 272 1 140 5 296 1 141 2 360 1 228 5 361 1 88 1 249 2 168 2 54 8 91 1 
0 1 56 1 57 1 14 1 16 1 234 1 261 2 215 1 196 1 41 1 65 2 102 1 66 1 240 1 242 1 218 1 78 1 108 1 161 1 164 1 83 1 141 1 115 1 142 1 228 2 362 1 54 2 91 1 
146 1 231 1 56 2 147 1 258 1 57 2 34 1 119 1 5 1 121 1 122 1 215 3 196 2 154 1 319 1 321 1 241 2 322 1 242 1 75 1 307 1 160 1 108 2 352 1 328 1 83 3 27 1 226 1 166 1 251 1 336 1 299 1 
33 2 161 1 16 1 354 1 293 4 237 2 140 2 194 4 63 2 228 2 361 1 11 1 66 1 54 1 218 1 
6 1 153 1 213 1 236 1 253 1 
107 1 213 1 236 1 
107 1 213 1 236 1 
107 1 213 1 236 1 
50 1 213 1 236 1 
50 1 213 1 236 1 
50 1 213 1 236 1 
213 1 236 1 
176 1 266 1 
231 1 45 5 147 1 2 1 34 1 259 5 234 2 261 2 141 2 115 1 154 5 142 2 198 3 102 1 321 1 241 2 143 2 322 10 
231 1 45 2 147 1 2 1 34 1 259 1 261 1 321 1 241 2 143 1 168 1 322 2 
231 1 45 2 147 1 2 1 259 2 34 1 111 1 261 1 141 1 154 2 198 1 249 1 321 1 241 2 143 1 168 1 322 4 
231 3 175 1 45 1 280 1 147 3 2 1 34 3 259 2 234 1 154 2 42 1 142 1 198 1 321 3 241 6 143 1 322 3 
231 5 280 1 147 5 2 1 149 1 34 5 259 12 234 3 214 4 120 1 261 5 154 18 40 1 42 2 198 7 102 2 321 5 157 3 22 1 241 10 322 34 132 1 175 1 45 16 243 1 111 3 141 5 358 1 142 3 249 3 11 1 29 1 143 5 168 3 
231 1 147 1 2 1 149 1 34 1 259 2 214 1 234 1 261 1 154 4 198 2 102 1 157 1 321 1 241 2 322 8 45 4 80 1 141 1 358 1 142 1 11 1 29 1 
231 2 147 2 2 1 149 1 34 2 259 3 234 1 214 2 261 2 154 5 198 2 102 1 321 2 157 1 22 1 241 4 322 11 45 6 243 1 111 1 80 1 141 1 358 1 142 1 11 1 29 1 143 1 168 1 
231 3 147 3 2 1 149 1 34 3 259 4 234 1 214 1 261 3 154 10 198 3 42 1 102 1 157 1 321 3 241 6 322 19 45 9 243 1 46 1 111 2 80 1 296 1 141 3 358 1 360 1 142 1 88 1 249 2 11 1 29 1 143 1 168 2 
231 3 147 3 2 1 149 1 34 3 259 5 234 1 214 1 261 3 154 7 42 1 198 3 102 1 157 1 321 3 241 6 322 17 45 10 243 1 46 1 111 2 80 1 296 1 141 2 358 1 360 1 142 1 249 1 88 1 11 1 29 1 143 2 168 2 
231 1 147 1 2 1 149 1 34 1 259 2 214 1 234 1 261 1 154 4 198 2 102 1 157 1 321 1 241 2 322 8 45 4 80 1 141 1 358 1 142 1 11 1 29 1 
231 1 147 1 2 1 149 1 34 1 259 2 214 1 261 2 154 6 198 1 157 1 321 1 241 2 322 12 45 6 46 1 111 2 80 1 296 1 141 2 360 1 249 2 88 1 143 1 168 2 
231 4 147 4 2 1 149 1 34 4 259 5 234 1 214 1 261 3 154 8 198 3 42 2 102 1 321 4 157 1 241 8 322 18 45 10 243 1 46 1 111 2 80 1 296 1 141 2 358 1 360 1 142 1 88 1 249 1 11 1 29 1 143 2 168 2 
231 4 147 4 280 1 2 1 149 1 34 4 259 6 214 1 261 3 154 7 198 3 42 2 321 4 157 1 241 8 322 16 45 9 46 1 111 3 80 1 296 1 141 2 360 1 88 1 249 2 143 3 168 3 
45 3 259 6 234 3 261 1 141 1 154 4 358 1 142 3 198 3 102 1 29 2 143 3 322 7 
231 4 147 4 280 1 2 1 149 1 34 4 259 4 234 1 214 1 261 3 154 8 198 3 42 2 102 1 321 4 157 1 241 8 322 18 45 10 46 1 111 2 80 1 296 1 141 2 358 1 360 1 142 1 88 1 249 1 11 1 29 1 143 1 168 2 
231 2 45 4 147 2 259 3 34 2 234 1 261 1 141 1 154 4 358 1 198 2 42 1 142 1 102 1 11 1 321 2 29 1 143 1 241 4 322 8 
45 3 259 2 234 1 261 1 19 1 141 1 154 3 358 1 142 1 198 2 102 1 11 1 29 1 322 6 
231 1 45 2 243 1 147 1 259 2 34 1 111 1 261 1 141 1 154 2 198 1 249 1 321 1 241 2 143 1 168 1 322 4 
45 3 149 1 259 2 111 1 214 2 261 1 141 1 154 4 198 1 249 1 157 1 22 1 143 1 322 7 168 1 
231 2 147 2 259 9 34 2 234 2 214 2 261 3 154 12 287 1 198 5 42 2 102 1 22 1 157 2 321 2 241 4 322 23 175 1 45 11 111 2 114 1 141 3 358 1 142 2 249 2 11 1 29 1 143 4 168 2 
154 1 214 1 322 1 
45 1 157 1 322 1 
231 1 211 1 45 3 147 1 243 1 34 1 259 3 111 1 261 1 141 1 154 3 198 2 249 1 321 1 241 2 143 1 322 6 168 1 
231 1 147 1 2 1 149 1 34 1 259 2 214 1 261 2 154 6 198 1 157 1 321 1 241 2 322 12 45 6 46 1 111 2 80 1 296 1 141 2 360 1 249 2 88 1 143 1 168 2 
45 3 259 2 234 1 261 1 141 1 154 3 142 1 198 1 102 1 143 1 322 6 
231 1 175 1 45 1 147 1 259 2 34 1 234 1 154 2 358 1 198 1 142 1 42 1 321 1 29 1 143 1 241 2 322 3 
83 1 255 1 215 1 160 1 57 1 97 1 82 1 
268 1 255 1 160 1 57 1 3 1 97 1 81 1 82 1 83 1 215 1 173 1 53 1 
146 1 27 4 7 1 226 4 75 1 258 1 352 1 101 1 159 1 121 1 230 1 338 1 5 4 
146 1 188 1 258 2 352 1 327 1 5 2 205 1 121 1 122 1 27 2 275 1 226 2 125 1 85 1 
27 1 13 1 226 1 75 1 258 1 341 1 21 1 270 1 121 1 5 1 
146 1 258 1 352 1 189 1 5 2 121 1 124 1 27 2 226 2 126 1 338 1 
146 2 75 1 258 2 352 3 5 4 121 2 27 5 226 5 85 1 126 1 101 1 8 1 159 1 230 1 338 1 201 1 
146 2 75 1 202 1 258 2 352 3 5 4 121 2 27 5 226 5 85 1 126 1 101 1 159 1 230 1 338 1 201 1 
146 1 19 1 27 1 226 1 75 1 258 1 352 1 101 1 121 1 230 1 5 1 
146 1 56 1 75 1 258 1 160 1 352 1 57 1 5 1 121 1 122 1 83 2 196 1 215 2 27 1 226 1 166 1 167 1 299 1 
146 2 56 1 0 1 258 1 57 2 152 1 121 1 5 1 122 2 215 2 196 2 199 1 77 1 160 1 352 3 292 1 83 2 27 1 226 1 166 1 85 1 167 1 299 1 
146 2 56 1 0 1 258 1 57 2 152 1 121 1 5 2 122 2 215 2 196 2 7 1 199 1 77 1 160 1 352 3 353 1 292 1 83 2 27 2 226 2 166 1 85 1 167 1 
145 1 146 1 258 1 33 1 121 1 5 3 122 1 194 1 7 1 288 1 199 1 240 2 73 1 75 1 352 4 292 1 309 1 272 1 27 3 182 1 226 3 85 1 91 2 
146 1 73 1 75 1 258 1 352 4 33 1 292 1 5 3 121 1 122 1 194 1 272 1 27 3 7 1 182 1 226 3 85 1 288 1 199 1 332 1 240 2 91 2 
27 1 226 1 258 1 148 1 121 1 5 1 
146 2 75 2 148 1 258 3 352 3 189 1 204 1 221 1 5 6 205 1 121 2 122 1 27 7 226 7 125 1 126 1 8 1 335 1 131 1 201 1 338 1 
92 1 231 2 146 1 147 2 34 2 234 1 5 1 196 1 39 1 154 3 319 2 198 2 102 1 321 2 241 4 322 6 45 3 160 2 328 2 166 1 167 1 11 1 250 1 251 1 299 1 338 1 56 1 257 1 258 1 57 1 259 2 59 1 261 1 121 1 122 1 215 2 349 1 307 1 352 1 83 2 27 1 141 1 226 1 358 1 142 1 29 1 279 1 
1 1 33 1 15 1 36 1 16 2 5 1 194 1 99 1 156 1 288 1 66 2 240 3 218 2 70 1 73 1 75 1 352 2 161 2 47 1 112 1 272 2 27 1 182 1 226 1 228 1 332 1 54 1 91 3 
146 1 148 1 258 2 352 2 221 1 5 2 121 1 122 1 27 2 226 2 288 1 323 1 338 1 
146 1 56 1 75 1 258 1 160 1 352 1 57 1 353 1 5 1 121 1 122 1 83 2 196 1 215 2 27 1 226 1 166 1 167 1 
146 1 258 2 352 1 221 1 5 1 205 1 121 1 122 1 27 1 226 1 125 1 85 1 131 1 
246 1 160 1 64 1 193 1 69 1 
246 1 64 1 15 1 103 1 300 1 240 1 324 1 23 1 193 1 69 1 91 1 18 1 
55 1 83 1 215 1 57 1 64 1 344 1 69 1 193 1 60 1 
103 1 300 1 69 1 
284 1 137 1 340 1 138 1 350 1 235 1 192 1 267 1 
43 1 32 1 137 4 340 2 291 1 329 2 79 1 235 3 192 4 284 2 229 1 116 1 350 1 267 1 
357 1 284 1 137 2 340 1 138 1 233 1 263 1 350 1 329 1 235 1 192 2 267 1 
117 1 32 1 284 1 137 3 340 1 138 1 291 2 229 2 350 1 235 1 192 3 267 1 
155 1 203 1 235 2 68 2 
137 1 138 1 219 1 350 1 192 1 267 1 
284 1 137 2 340 1 248 1 138 1 350 1 329 1 235 1 192 2 267 1 
12 1 
284 1 137 1 340 1 138 1 350 1 235 1 192 1 267 1 
19 1 284 1 340 1 235 1 
284 1 137 1 340 1 350 1 235 1 192 1 267 1 
339 1 137 1 52 1 
32 1 284 1 137 3 340 1 138 1 291 1 229 2 350 1 355 1 235 1 192 3 267 1 
284 1 137 2 340 1 209 1 350 1 329 1 235 1 192 2 267 1 
347 1 105 1 13 1 137 1 138 1 270 1 116 1 350 1 235 1 192 1 267 1 
137 1 340 1 138 1 350 1 235 1 192 1 267 1 
284 1 137 1 340 2 138 1 350 1 192 1 267 1 
38 1 137 2 340 1 138 1 289 1 350 2 163 1 235 1 192 2 267 2 
137 3 340 1 138 1 329 2 79 1 235 2 192 3 284 1 248 1 303 1 116 1 350 1 267 1 
13 2 137 2 340 1 138 1 58 1 270 1 329 1 235 1 192 2 283 1 347 1 284 1 21 1 350 1 267 1 
284 1 137 4 340 1 138 1 116 1 209 1 350 2 79 1 329 2 139 1 235 2 192 4 267 2 
284 1 137 3 248 1 340 1 138 1 229 1 350 1 329 1 235 1 192 3 267 1 
43 1 116 1 79 1 235 1 
340 1 235 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) (111,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (111,287) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) (111,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (73,80,92,251) (73,80,92,251) (73,80,92,251) 267 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
267 1 92 1 248 1 80 1 73 1 
280 1 224 1 206 1 
206 1 250 1 87 2 
211 2 158 2 266 2 56 2 160 2 255 1 24 1 19 2 
211 2 45 2 255 1 296 2 216 1 84 1 221 1 88 1 130 1 223 1 132 1 266 3 56 2 133 1 268 1 229 1 10 1 231 1 19 3 22 2 192 1 24 1 103 1 277 1 107 2 318 2 320 1 157 1 321 1 158 2 160 2 202 1 162 1 249 1 41 1 115 1 289 1 
198 1 211 1 158 1 266 1 56 1 160 1 24 1 166 1 19 1 4 1 
210 1 211 1 79 1 109 1 198 1 224 1 266 1 176 1 204 1 206 1 16 1 233 1 167 1 19 1 
211 2 24 1 79 2 4 1 109 1 158 2 198 2 224 1 56 2 266 2 176 1 160 2 206 1 16 2 233 1 166 1 18 1 167 1 19 2 
272 1 90 1 169 1 79 1 16 1 
272 1 224 1 212 1 169 1 79 2 206 1 16 2 217 1 
272 1 79 1 16 1 
211 1 169 1 79 1 24 1 4 1 198 1 158 1 56 1 266 1 160 1 16 1 166 1 18 1 19 1 
206 1 
272 1 224 1 169 1 79 2 206 1 16 2 217 1 156 1 
21 1 272 2 47 1 313 1 169 2 79 5 274 1 71 2 217 1 127 1 224 1 134 1 179 1 57 2 245 2 181 1 114 1 206 1 16 5 
280 1 255 1 
96 1 211 2 255 2 158 1 266 2 56 1 160 1 117 1 19 2 
99 1 116 1 125 1 
45 1 22 1 255 1 26 1 216 1 107 1 88 1 130 1 223 1 266 1 202 1 10 1 162 1 115 1 19 1 289 1 
211 1 45 1 22 1 216 1 50 1 107 1 88 1 130 1 223 1 158 1 56 1 266 2 202 1 10 1 162 1 116 1 115 1 182 1 19 2 289 1 
211 3 158 3 266 3 56 3 160 1 255 1 182 1 19 3 
198 1 211 1 158 1 266 1 56 1 166 1 19 1 
96 1 198 1 211 1 158 1 266 1 56 1 160 1 117 1 19 1 
211 3 45 1 255 1 79 1 296 1 84 1 216 1 50 1 88 1 130 1 223 1 132 1 266 4 56 3 176 1 133 1 177 1 268 1 229 1 10 1 182 1 16 1 233 1 64 1 19 4 22 1 192 1 24 1 103 1 107 1 318 2 157 1 321 1 109 1 158 3 198 1 202 1 160 2 162 1 41 1 115 1 117 1 167 1 289 1 
211 2 158 1 266 2 56 1 255 1 204 1 182 1 164 1 19 2 
211 3 79 1 50 1 109 1 198 1 158 3 176 1 56 3 266 3 160 1 203 1 117 1 206 1 16 1 182 2 233 1 64 1 167 1 19 3 
99 1 211 2 158 2 56 2 266 2 160 1 182 1 117 1 116 1 19 2 
45 1 22 1 255 1 216 1 107 1 88 1 130 1 223 1 266 1 202 1 10 1 162 1 115 1 19 1 289 1 
45 1 22 1 255 1 1 1 216 1 107 1 88 1 222 1 223 1 266 1 202 1 162 1 115 1 19 1 289 1 
296 4 221 2 125 2 7 1 299 1 132 1 268 1 229 1 99 2 146 1 68 1 190 1 151 1 103 2 318 2 157 1 321 1 32 1 322 1 41 1 116 2 40 1 
109 1 198 1 211 1 158 1 266 1 56 1 189 1 19 1 
211 5 158 4 244 1 266 5 56 4 160 1 255 1 204 1 117 1 182 2 164 1 235 1 50 1 19 5 
198 1 211 2 158 2 189 1 266 2 56 2 166 1 19 2 
97 1 228 1 
97 1 228 1 
310 1 226 1 
310 1 226 1 
310 1 226 1 
97 1 228 1 122 1 
97 1 228 1 278 1 
97 2 310 1 9 1 226 1 228 2 334 1 
97 1 228 1 122 1 
97 1 228 1 122 1 
97 1 228 1 51 1 
97 1 228 1 51 1 
97 1 228 1 51 1 
97 2 185 1 214 1 150 2 79 2 194 1 104 2 124 1 128 2 77 1 228 2 283 2 11 2 39 1 303 1 285 3 206 1 16 2 334 1 
211 2 292 1 253 1 255 1 79 1 295 1 124 1 171 1 128 1 55 1 56 2 266 2 228 1 11 1 16 1 19 2 97 1 150 1 104 1 278 1 158 2 282 1 324 1 285 1 
23 1 93 1 94 1 
239 1 93 1 94 1 
290 1 239 1 23 2 94 3 315 1 43 1 
239 1 23 1 94 2 315 1 306 1 43 1 
239 1 23 1 94 2 315 1 43 2 
46 1 253 1 169 4 79 5 294 1 82 1 217 1 87 3 297 2 53 2 173 1 54 1 6 2 299 1 224 1 55 1 57 1 179 1 181 2 12 1 16 5 272 1 21 3 146 1 151 1 71 1 32 1 245 1 324 1 38 1 206 2 250 1 
47 1 169 7 49 5 79 9 294 2 217 1 87 9 297 6 5 1 53 6 173 2 54 1 90 5 299 3 55 4 224 1 179 1 57 2 301 1 181 6 304 1 16 9 272 6 21 8 146 3 151 3 71 2 275 1 32 3 35 1 113 1 245 2 38 3 206 5 250 3 
46 1 47 1 169 2 79 3 294 1 297 2 87 4 173 1 53 2 6 1 224 1 299 1 55 1 57 1 12 1 181 2 16 3 21 3 146 1 151 1 71 1 32 1 245 1 38 1 206 3 250 2 
47 1 46 1 169 3 79 4 294 1 87 7 297 4 53 4 173 1 6 2 224 1 299 2 55 2 57 1 12 1 181 4 304 1 16 4 21 5 146 2 151 2 71 1 275 1 32 2 113 1 245 1 38 2 206 4 250 3 
223 1 280 1 243 1 
223 1 175 1 
83 1 
223 1 88 1 
223 3 74 1 88 1 261 1 243 2 289 1 
223 1 88 1 289 1 
223 1 72 1 
271 1 142 1 291 1 241 1 296 7 103 3 154 3 316 2 105 1 75 1 221 4 32 1 299 1 227 1 139 1 307 2 330 1 
271 1 142 1 291 1 241 1 296 7 103 3 154 3 316 2 105 1 75 1 221 4 32 1 299 1 227 1 139 1 307 2 330 1 
271 1 142 1 291 1 241 1 296 7 103 3 154 3 316 2 105 1 75 1 221 4 32 1 129 1 299 1 227 1 139 1 307 2 330 1 
291 1 168 2 296 37 221 19 299 5 227 1 268 2 13 4 139 2 307 3 140 1 269 1 271 2 98 4 142 2 146 4 241 1 191 1 151 4 103 18 154 8 316 3 105 2 75 1 195 1 318 4 28 1 32 5 321 2 157 2 197 1 34 1 163 1 38 4 41 2 330 5 
168 1 296 9 221 5 299 1 227 1 268 2 302 1 139 1 307 3 142 1 271 1 241 1 153 1 103 4 154 4 316 2 105 1 75 1 318 4 32 1 157 2 321 2 41 2 330 1 
267 1 92 1 248 1 80 1 73 1 
92 1 248 1 80 1 73 1 287 1 
111 1 92 1 248 1 251 1 
92 1 248 1 80 1 73 1 287 1 
267 1 92 1 248 1 80 1 73 1 
208 1 
252 1 79 5 87 2 88 1 173 1 172 1 266 1 176 1 179 1 181 2 15 1 16 5 19 1 272 6 21 2 187 2 22 2 193 2 107 2 109 1 198 1 200 1 204 1 206 2 115 1 45 2 210 1 211 1 216 2 217 3 219 4 223 1 224 1 57 1 59 1 230 1 232 1 233 1 236 1 141 1 148 2 70 2 71 1 314 1 317 2 242 1 159 1 245 1 162 1 247 2 250 2 165 2 328 1 329 1 167 1 
211 1 210 1 79 3 217 1 219 2 266 1 176 1 230 1 15 1 16 3 233 1 232 1 19 1 272 2 314 1 156 1 109 1 198 1 200 1 204 1 167 1 165 1 
211 1 210 1 79 3 217 1 219 3 224 1 266 1 176 1 230 1 15 1 16 3 233 1 232 1 19 1 272 1 314 1 317 1 156 1 109 1 198 1 200 1 204 1 206 1 167 1 
211 1 210 1 79 3 217 1 219 3 224 1 266 1 176 1 230 1 15 1 16 3 233 1 232 1 19 1 272 2 314 1 70 1 156 1 317 1 109 1 198 1 200 1 204 1 206 1 167 1 165 1 
252 1 79 5 176 1 266 1 8 1 179 1 181 1 15 1 16 5 19 1 272 7 21 1 100 1 187 2 193 2 109 1 198 1 200 1 204 1 206 5 44 1 210 1 211 1 217 3 219 6 224 5 57 1 230 1 138 1 233 1 232 1 308 1 148 2 70 4 314 1 71 1 156 1 317 4 242 1 245 1 247 2 250 2 165 4 167 1 
252 1 79 4 87 2 176 1 266 1 179 1 181 1 15 1 16 4 19 1 21 1 272 4 187 2 193 2 109 1 198 1 200 1 204 1 206 2 211 1 210 1 217 2 219 4 224 1 57 1 230 1 233 1 232 1 141 1 148 2 314 1 71 1 70 2 242 1 317 2 245 1 247 2 250 2 167 1 165 2 
252 1 211 1 210 1 79 4 217 2 219 4 224 1 266 1 176 1 8 1 179 1 57 1 181 1 230 1 138 1 15 1 16 4 233 1 232 1 19 1 272 4 21 1 187 2 148 2 100 1 193 2 70 2 314 1 71 1 317 2 242 1 109 1 198 1 200 1 245 1 247 2 204 1 206 1 250 2 165 2 167 1 
252 1 211 1 210 1 79 4 217 2 219 4 224 1 266 1 176 1 8 1 179 1 57 1 181 1 230 1 138 1 15 1 16 4 233 1 232 1 19 1 272 4 21 1 187 2 148 2 100 1 193 2 70 2 314 1 71 1 317 2 242 1 109 1 198 1 200 1 245 1 247 2 204 1 206 1 250 2 165 2 167 1 
252 1 211 1 210 1 293 2 79 4 217 2 87 2 219 4 224 1 266 1 176 1 179 1 57 1 181 1 230 1 15 1 16 4 233 1 232 1 19 1 272 4 21 1 100 1 193 2 70 2 314 1 71 1 317 2 109 1 31 1 198 1 200 1 245 1 247 2 204 1 205 1 206 1 165 2 167 1 333 2 288 1 
252 1 211 1 210 1 79 4 217 2 219 5 224 1 266 1 176 1 8 1 57 1 179 1 181 1 230 1 138 1 15 1 16 4 233 1 232 1 19 1 21 1 308 1 272 5 187 2 148 2 100 1 193 2 71 1 314 1 70 3 242 1 317 3 109 1 198 1 200 1 245 1 247 2 204 1 206 1 250 2 167 1 165 3 
252 1 211 1 210 1 79 4 217 2 219 5 224 1 266 1 176 1 8 1 57 1 179 1 181 1 230 1 138 1 15 1 16 4 233 1 232 1 19 1 21 1 308 1 272 5 187 2 148 2 100 1 193 2 71 1 314 1 70 3 242 1 317 3 109 1 198 1 200 1 245 1 247 2 204 1 206 1 250 2 167 1 165 3 
252 1 210 1 211 1 293 2 79 4 217 2 87 2 219 4 224 1 266 1 176 1 57 1 179 1 181 1 230 1 15 1 16 4 232 1 233 1 19 1 141 1 272 4 21 1 193 2 70 2 71 1 314 1 317 2 109 1 198 1 200 1 245 1 247 2 204 1 206 1 165 2 167 1 333 2 288 1 
255 2 296 6 221 3 125 1 132 1 299 1 227 1 268 1 229 1 139 1 307 2 271 1 99 1 190 1 241 1 103 3 154 2 316 1 75 1 318 2 157 1 321 1 32 1 280 1 116 1 41 1 
120 1 255 1 121 1 296 14 221 8 125 11 132 1 299 1 268 2 229 2 13 3 269 1 98 3 144 1 99 4 146 2 192 1 151 1 103 6 154 1 318 4 320 1 157 2 321 2 32 2 197 1 34 1 325 1 38 2 41 2 116 11 330 1 
45 1 211 1 120 1 255 1 81 1 296 2 216 1 50 1 88 1 221 1 126 1 130 1 223 1 132 1 266 2 56 1 10 1 229 1 268 1 182 1 19 2 99 1 22 1 192 1 103 1 26 1 107 1 318 2 157 1 321 1 320 1 158 1 202 1 78 1 162 1 115 1 41 1 289 1 
255 2 84 2 88 2 266 3 268 3 10 2 182 1 19 3 271 1 99 7 186 1 22 3 192 1 103 10 25 2 107 3 279 1 29 2 32 3 202 2 38 2 41 3 115 2 116 7 289 2 45 3 211 1 120 1 296 20 216 1 50 1 221 10 125 7 130 2 223 2 299 3 132 3 56 1 227 1 229 3 137 1 139 1 307 2 237 2 145 1 146 2 241 1 151 2 154 6 316 1 75 1 318 6 320 1 321 3 157 3 158 1 162 2 331 2 330 4 
211 1 45 8 296 2 256 1 215 1 216 2 221 1 88 2 131 1 223 3 265 1 132 2 266 1 56 1 300 1 268 2 229 2 59 1 14 1 182 1 19 1 22 8 188 1 190 1 192 1 102 1 103 1 107 7 279 1 318 4 157 2 321 2 320 1 158 1 159 1 162 2 249 2 115 2 41 2 
211 1 120 1 296 3 221 1 125 1 132 1 299 1 56 1 266 1 268 1 229 1 19 1 99 1 146 1 151 1 103 2 106 1 318 2 157 1 321 1 32 1 158 1 160 1 38 1 116 1 117 1 41 1 
99 1 146 1 190 1 296 2 154 1 221 2 125 1 318 2 321 1 157 1 32 1 7 1 132 1 229 1 268 1 116 1 41 1 330 1 
99 1 190 1 68 1 296 2 151 1 103 2 125 1 318 2 321 1 157 1 132 1 299 1 229 1 268 1 116 1 41 1 
296 4 221 2 125 2 132 1 299 1 268 1 229 1 99 2 146 1 190 1 151 1 103 2 154 1 318 2 32 1 157 1 321 1 38 1 41 1 116 2 330 1 
99 1 146 1 296 2 215 1 154 1 221 2 125 1 318 2 321 1 157 1 32 1 7 1 132 1 229 1 268 1 116 1 41 1 330 1 
99 1 68 1 296 2 151 1 215 1 103 2 125 1 318 2 321 1 157 1 132 1 299 1 229 1 268 1 116 1 41 1 
99 2 146 1 151 1 296 4 103 2 215 1 221 2 125 2 318 2 321 1 157 1 32 1 299 1 132 1 229 1 268 1 38 1 116 2 41 1 
99 2 146 1 151 1 296 4 103 2 154 1 221 2 125 2 318 2 321 1 157 1 32 1 299 1 132 1 229 1 268 1 38 1 116 2 41 1 330 1 
45 1 255 1 296 2 84 1 216 1 221 1 88 1 130 1 223 1 132 1 266 1 10 1 229 1 268 1 19 1 22 1 192 1 103 1 107 1 318 2 320 1 321 1 157 1 202 1 162 1 115 1 41 1 289 1 
45 1 255 1 1 1 296 2 216 1 221 1 88 1 222 1 223 1 132 1 266 1 229 1 268 1 234 1 19 1 22 1 192 1 103 1 107 1 318 2 320 1 321 1 157 1 202 1 162 1 115 1 41 1 289 1 
120 1 296 4 221 2 125 2 132 1 299 1 268 1 229 1 99 2 146 1 151 1 103 2 154 1 318 2 32 1 157 1 321 1 38 1 41 1 116 2 330 1 
45 1 296 4 84 1 221 2 88 1 125 2 130 1 223 1 299 1 132 1 266 1 10 1 229 1 268 1 19 1 99 2 146 1 22 1 151 1 102 1 103 2 25 1 154 1 107 1 318 2 32 1 321 1 157 1 202 1 162 1 38 1 116 2 115 1 41 1 330 1 289 1 
211 1 120 1 296 3 221 2 125 1 299 1 132 1 56 1 266 1 268 1 229 1 19 1 99 1 146 1 151 1 103 1 154 1 318 2 157 1 321 1 32 1 158 1 160 1 38 1 117 1 41 1 286 1 116 1 330 1 
168 2 0 1 3 1 259 1 178 1 268 4 13 4 269 2 20 1 98 4 271 1 103 27 27 1 32 9 196 1 197 2 34 2 201 1 281 2 38 8 41 4 209 1 48 1 296 57 123 1 218 1 221 30 299 8 227 1 302 1 139 1 307 2 146 8 241 1 69 1 151 7 152 4 154 11 316 1 75 1 318 8 321 4 157 4 330 9 
168 2 0 2 48 2 296 26 123 1 218 1 3 1 221 14 299 2 178 1 268 3 302 1 13 2 307 1 20 1 98 2 146 3 69 1 152 4 151 2 103 12 154 3 27 1 318 6 157 3 321 3 196 1 32 3 197 2 281 1 38 3 41 3 330 2 209 1 
168 2 0 2 3 1 178 1 268 4 13 5 269 2 20 1 98 5 271 2 103 31 27 1 32 9 196 1 197 3 34 2 201 1 281 1 38 7 41 4 209 1 48 1 296 64 123 1 218 1 221 33 299 9 227 2 302 1 139 2 307 3 146 7 241 2 69 1 151 7 152 4 154 12 316 2 75 2 318 8 321 4 157 4 327 1 330 9 
168 2 0 1 3 1 178 1 268 4 13 4 269 2 20 1 98 4 271 1 103 25 27 1 32 8 196 1 197 2 34 2 201 1 281 1 38 7 41 4 209 1 48 1 296 53 123 1 218 1 221 28 299 7 227 1 302 1 139 1 307 2 146 7 241 1 69 1 151 6 152 4 154 9 316 1 75 1 318 8 321 4 157 4 330 7 
168 1 0 1 48 1 296 52 123 1 218 1 3 1 221 27 299 8 178 1 227 1 268 2 13 4 302 1 139 1 307 1 269 2 20 1 271 1 98 4 146 7 241 1 69 1 152 4 151 7 103 25 154 8 316 1 27 1 75 1 318 4 196 1 157 2 321 2 32 8 197 2 34 2 281 1 38 7 41 2 330 7 209 1 
97 1 128 1 77 1 185 1 228 1 11 1 150 1 104 1 86 1 334 1 
295 1 278 1 
97 1 128 1 228 1 170 1 11 1 150 1 61 1 305 1 104 1 
97 1 185 1 150 1 79 1 194 1 124 1 104 1 128 1 77 1 228 1 283 1 11 1 39 1 303 1 285 2 206 1 16 1 334 1 
97 1 185 1 150 1 79 1 194 1 124 1 104 1 128 1 77 1 228 1 283 1 11 1 39 1 303 1 285 2 206 1 16 1 334 1 
97 1 185 1 150 1 79 1 194 1 124 1 104 1 128 1 77 1 228 1 283 1 11 1 39 1 303 1 285 2 206 1 16 1 334 1 
225 1 9 1 122 1 
225 1 9 1 122 1 
51 1 298 1 
9 1 51 1 298 1 
282 1 171 1 
211 2 292 1 253 1 255 1 169 1 79 1 295 1 171 1 128 1 55 1 266 2 56 2 228 1 11 1 16 1 19 2 97 1 150 1 194 1 104 1 278 1 158 2 112 1 282 1 283 1 324 1 285 1 
225 1 122 1 
9 1 51 1 298 1 
45 2 211 2 120 1 296 2 2 1 88 1 221 1 223 1 131 1 132 1 266 2 91 1 229 1 58 1 268 1 19 2 22 2 240 1 188 1 192 1 103 1 107 2 318 2 321 1 157 1 320 1 162 1 249 2 115 1 41 1 207 1 
290 1 45 2 239 1 22 2 213 1 23 1 102 1 276 1 107 2 220 1 279 1 110 1 93 1 162 1 94 2 60 1 246 1 115 1 184 1 
290 1 45 1 239 1 22 1 23 1 276 1 107 1 279 1 110 1 76 1 93 1 162 1 94 2 60 1 246 1 115 1 184 1 
66 1 45 1 22 1 216 1 107 1 220 1 88 1 223 1 159 1 162 1 60 1 59 1 115 1 62 1 
290 1 45 1 239 1 22 1 213 1 23 1 276 1 107 1 220 1 279 1 110 1 93 1 162 1 94 2 60 1 246 1 115 1 184 1 
95 1 
21 1 280 1 224 1 134 1 313 1 181 1 206 1 
79 1 217 1 87 1 224 1 57 1 179 1 181 1 16 1 21 1 272 1 148 1 187 1 71 1 242 1 245 1 206 2 250 1 
254 1 79 5 258 2 87 12 260 2 173 2 88 3 175 3 176 2 179 4 181 8 16 5 17 2 21 9 272 5 22 3 102 1 107 3 108 1 32 2 199 2 36 2 38 2 115 3 206 8 118 1 289 3 45 3 119 1 216 1 217 3 297 6 53 6 223 10 224 2 299 2 134 1 57 4 135 1 136 2 146 2 313 1 151 2 71 4 155 2 72 2 74 1 243 2 162 4 245 4 250 6 328 1 331 2 
79 1 123 1 85 2 218 1 217 1 3 1 87 6 297 5 260 1 173 1 53 5 299 2 224 2 180 1 57 2 179 2 181 5 13 1 16 1 183 1 20 1 98 1 272 1 21 8 146 2 151 2 71 2 196 1 32 2 197 1 245 2 38 2 206 5 250 3 328 1 
211 1 79 1 85 2 260 1 4 1 299 1 266 1 56 1 57 1 179 1 181 2 138 1 139 1 16 1 18 1 19 1 271 1 67 1 21 2 241 1 24 1 71 1 32 2 198 1 158 1 160 1 245 1 166 1 
21 1 224 1 134 1 57 1 179 1 313 1 245 1 181 1 71 1 206 1 
21 5 146 2 151 2 297 5 87 10 260 1 53 5 32 2 299 2 181 5 38 2 206 5 250 5 331 1 
272 1 224 1 79 1 206 1 16 1 217 1 
45 4 47 1 79 3 216 2 217 2 88 1 173 2 223 1 57 2 179 1 181 2 59 1 16 3 236 1 21 2 272 4 147 1 309 1 22 4 71 2 107 4 108 1 159 1 162 1 245 2 115 1 118 2 329 1 328 2 
45 1 211 2 255 1 296 1 216 1 84 1 88 1 130 1 223 1 132 1 266 3 56 2 133 1 268 1 10 1 229 1 19 3 22 1 192 1 24 1 103 1 107 1 318 2 157 1 321 1 158 2 160 2 202 1 162 1 41 1 115 1 289 1 
21 1 71 1 316 1 297 2 87 4 53 2 173 1 224 2 179 1 57 1 245 1 181 2 206 4 250 2 328 1 
161 1 11 1 104 1 
77 1 11 1 171 1 104 1 332 1 
161 1 11 1 104 1 
161 1 11 1 104 1 
262 1 11 1 104 1 
262 1 11 1 104 1 
262 1 11 1 104 1 
11 1 104 1 
97 1 228 1 
271 1 168 1 241 1 296 8 103 4 154 3 316 1 75 1 221 4 318 4 32 1 321 2 157 2 299 1 227 1 268 2 139 1 41 2 307 2 330 1 
271 1 241 1 296 6 103 3 154 2 316 1 75 1 221 3 32 1 280 1 299 1 227 1 139 1 307 2 
146 1 296 4 151 1 103 2 221 2 318 2 321 1 157 1 32 1 299 1 268 1 38 1 326 1 41 1 
98 2 146 2 151 2 296 12 103 6 154 2 221 6 32 2 197 1 34 1 299 2 13 2 38 2 269 1 330 2 
168 2 296 30 121 1 221 14 299 4 227 1 268 2 13 2 139 4 307 5 269 1 271 4 98 2 67 1 146 2 241 2 151 2 103 16 154 10 316 1 75 1 195 1 318 4 32 4 321 2 157 2 34 1 38 2 41 2 330 5 
296 1 13 1 103 1 
98 1 296 1 221 1 
146 1 296 6 151 1 103 3 154 1 221 3 318 2 157 1 321 1 32 1 299 1 268 1 38 1 41 1 326 1 331 1 330 1 
296 12 123 1 3 1 218 1 221 6 299 2 268 1 13 1 302 1 20 1 98 1 146 2 151 2 103 6 154 1 318 2 157 1 321 1 196 1 32 2 197 1 38 2 41 1 330 1 
271 1 241 1 296 6 103 3 154 2 221 3 32 1 299 1 139 1 307 1 330 1 
271 1 168 1 296 3 103 2 154 2 75 1 221 1 195 1 318 2 321 1 157 1 227 1 268 1 139 1 41 1 307 1 330 1 
271 2 67 1 241 1 296 10 103 5 154 5 221 5 318 2 157 1 321 1 32 2 299 2 268 1 302 1 139 2 41 1 307 3 330 2 
146 1 296 2 154 1 221 2 318 2 321 1 157 1 32 1 268 1 302 1 41 1 330 1 
146 1 151 1 296 4 103 2 154 1 221 2 318 2 321 1 157 1 32 1 299 1 268 1 302 1 38 1 41 1 330 1 
271 1 168 1 296 3 103 2 154 2 195 1 221 1 318 6 321 3 157 3 201 1 268 3 302 1 139 1 41 3 307 1 330 1 
168 2 296 41 221 20 299 6 227 1 268 5 13 4 302 1 139 3 307 4 140 1 269 1 271 3 98 4 146 4 241 2 191 1 151 4 103 21 154 11 316 1 75 1 195 1 318 10 157 5 321 5 32 6 197 1 34 1 201 1 163 1 38 4 326 1 41 5 330 7 
296 8 123 1 221 4 299 1 227 1 268 1 13 1 302 1 139 1 307 2 98 1 271 1 241 1 103 4 154 2 316 1 75 1 318 2 32 1 157 1 321 1 197 1 41 1 
296 11 123 1 221 6 299 1 227 1 268 2 13 2 302 1 139 1 307 2 269 1 271 1 98 1 146 1 241 1 103 5 154 3 316 1 75 1 318 4 157 2 321 2 32 2 197 1 38 1 41 2 326 1 330 1 
168 1 296 19 123 1 218 1 3 1 221 9 299 3 227 1 268 3 13 1 302 1 139 1 307 3 20 1 271 1 98 1 146 2 241 1 151 2 103 10 154 4 316 1 75 1 318 6 157 3 321 3 196 1 32 3 197 1 38 2 326 1 41 3 330 1 
168 1 296 17 123 1 3 1 218 1 221 10 299 2 227 1 268 3 13 1 302 1 139 1 307 2 20 1 271 1 98 1 146 2 241 1 151 1 103 7 154 4 316 1 75 1 318 6 157 3 321 3 196 1 32 3 197 1 38 2 326 1 41 3 330 2 
296 8 123 1 221 4 299 1 227 1 268 1 13 1 302 1 139 1 307 2 98 1 271 1 241 1 103 4 154 2 316 1 75 1 318 2 32 1 157 1 321 1 197 1 41 1 
296 12 123 1 3 1 218 1 221 6 299 2 268 1 13 1 302 1 20 1 98 1 146 2 151 2 103 6 154 1 318 2 157 1 321 1 196 1 32 2 197 1 38 2 41 1 330 1 
168 2 296 18 123 1 218 1 3 1 221 10 299 2 227 1 268 4 13 1 302 1 139 1 307 3 20 1 271 1 98 1 146 2 241 1 151 1 103 8 154 5 316 1 75 1 318 8 157 4 321 4 196 1 32 3 197 1 38 2 326 1 41 4 330 2 
168 1 296 11 123 1 3 1 218 1 221 7 299 1 268 3 13 1 302 1 20 1 98 1 146 2 151 1 103 4 154 2 318 6 157 3 321 3 196 1 32 2 197 1 201 1 38 2 41 3 330 2 
271 3 241 1 296 7 103 4 154 6 75 2 221 3 32 1 299 1 227 1 139 3 307 3 330 3 
168 2 296 18 123 1 218 1 3 1 221 10 299 2 227 1 268 4 13 1 302 1 139 1 307 3 20 1 271 1 98 1 146 2 241 1 151 1 103 8 154 4 316 1 75 1 318 8 157 4 321 4 196 1 32 3 197 1 201 1 38 2 41 4 330 1 
211 1 264 1 266 1 255 1 204 1 164 1 19 1 
211 1 255 1 30 1 89 1 33 1 264 1 266 1 284 1 204 1 164 1 19 1 270 1 
223 1 159 1 280 1 45 1 22 1 162 1 59 1 115 1 216 1 107 1 88 1 
211 1 45 1 22 1 255 1 216 1 107 1 88 1 130 1 223 1 158 1 56 1 266 2 202 1 162 1 182 1 115 1 19 2 289 1 
211 2 45 1 22 1 255 1 72 1 107 1 88 2 109 1 130 1 198 1 223 3 158 1 56 2 266 2 202 1 136 1 162 1 182 1 115 1 118 1 167 1 19 2 289 2 
45 2 211 2 255 1 88 2 222 1 223 3 266 2 56 2 136 1 182 1 19 2 22 2 72 1 107 2 109 1 158 1 198 1 202 1 162 1 115 1 118 1 167 1 42 1 289 2 
45 3 272 1 22 3 79 2 216 1 72 1 107 3 88 1 52 1 243 1 323 1 223 4 224 1 175 1 176 1 136 1 162 1 206 1 16 2 115 1 118 1 42 1 289 1 
45 3 272 1 22 3 79 2 216 1 72 1 107 3 88 1 243 1 223 4 224 1 199 1 175 1 176 1 136 1 162 1 206 1 16 2 115 1 118 1 42 1 289 1 
45 1 22 1 162 1 14 1 115 1 107 1 
45 7 22 7 312 1 101 1 102 1 256 1 216 2 257 1 107 6 74 1 88 2 279 1 131 1 223 3 265 1 300 1 162 3 249 1 14 1 115 2 289 1 
211 1 45 1 120 1 255 2 296 6 84 1 221 3 88 1 125 1 130 1 223 1 299 1 132 2 266 2 56 1 227 1 229 2 268 2 10 1 139 1 182 1 307 2 19 2 237 1 271 1 99 1 240 1 22 1 241 1 102 1 103 3 25 1 154 2 316 1 75 1 107 1 318 4 32 1 157 2 321 2 158 1 202 1 162 1 116 1 115 1 41 2 289 1 
45 1 169 1 79 3 216 1 217 1 223 2 224 1 175 1 176 1 134 1 57 2 179 2 181 1 16 3 17 1 21 1 272 2 22 1 313 1 71 2 155 1 107 1 108 1 243 1 199 1 245 2 36 1 206 1 
45 2 22 2 102 1 107 2 74 1 88 1 243 1 223 2 135 1 162 2 14 1 115 1 289 1 
45 4 22 4 149 1 102 1 216 1 107 4 88 1 159 1 223 1 162 1 59 1 115 1 42 1 
45 2 22 2 312 1 273 1 101 1 107 2 88 1 223 1 137 1 162 2 115 1 118 1 63 1 289 1 
45 1 239 1 22 1 93 1 162 1 94 1 115 1 216 1 107 1 184 1 
223 1 131 1 45 2 22 2 162 1 102 1 2 1 115 1 107 2 88 1 279 1 
45 5 22 5 149 1 102 1 256 1 216 1 107 4 88 2 159 1 131 1 223 3 265 1 162 2 59 1 115 2 118 1 
45 5 143 1 22 5 149 1 102 1 256 1 216 1 107 4 88 2 159 1 131 1 223 3 162 2 59 1 115 2 118 1 
211 1 45 1 22 1 255 1 216 1 107 1 88 1 223 1 158 1 222 1 56 1 266 2 202 1 162 1 182 1 115 1 19 2 289 1 
45 1 22 1 312 1 101 1 257 1 107 1 74 1 88 1 223 1 162 2 115 1 118 1 289 1 
238 1 211 1 319 1 91 1 266 1 58 1 207 1 19 1 65 1 
263 1 319 1 174 1 
238 1 319 1 255 1 37 1 65 1 
211 1 169 1 255 1 79 2 4 1 263 1 174 1 224 1 266 1 56 1 176 1 16 2 233 1 64 1 18 1 19 1 65 2 238 2 311 1 24 1 319 1 109 1 158 1 198 2 160 1 37 2 206 1 166 1 167 1 

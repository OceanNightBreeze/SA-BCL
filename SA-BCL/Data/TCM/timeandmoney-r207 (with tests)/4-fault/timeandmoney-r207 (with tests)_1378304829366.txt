#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 10 325 137 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 10 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 10 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 10 325 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 10 325 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 95 30 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 309 1 140 5 82 1 361 1 194 3 40 1 319 1 245 1 116 1 43 2 199 1 45 1 47 1 201 2 28 2 181 1 126 2 296 2 31 1 258 9 35 1 208 1 352 6 57 2 162 9 281 2 307 4 
109 1 309 1 140 5 82 1 361 1 194 3 40 1 319 1 245 1 116 1 43 2 199 1 45 1 47 1 201 2 28 2 181 1 126 2 296 2 31 1 258 9 35 1 208 1 352 6 57 2 162 9 281 2 307 4 
109 1 309 1 140 6 82 1 361 1 194 4 40 1 319 1 245 1 116 1 43 2 199 1 45 1 47 1 201 2 28 2 181 1 126 2 296 2 31 1 258 10 35 1 208 1 352 7 57 2 162 10 281 2 307 5 
109 1 309 1 140 4 82 1 361 1 194 2 40 1 319 1 245 1 116 1 43 2 199 1 45 1 47 1 201 2 28 2 181 1 126 2 296 1 31 1 258 7 208 1 352 4 57 2 162 7 281 2 307 3 
181 1 126 1 309 1 296 2 140 3 361 1 194 1 258 4 35 1 352 3 57 1 116 1 281 1 162 4 47 1 307 2 201 1 28 1 
181 1 286 1 126 1 309 1 140 1 361 1 258 2 208 1 291 1 43 1 199 1 281 1 162 2 365 1 201 1 28 1 
181 1 309 1 140 2 361 1 31 1 258 3 194 1 352 1 43 1 281 2 162 3 307 1 201 2 
107 1 109 1 309 1 311 1 140 5 361 1 194 3 40 1 116 1 43 1 47 1 201 2 28 1 181 1 126 1 296 2 31 1 258 9 35 1 352 7 57 1 162 9 281 2 307 4 
107 1 109 1 309 1 311 1 140 5 361 1 194 3 40 1 116 1 43 1 47 1 201 2 28 1 181 1 126 1 296 2 31 1 258 9 35 1 352 7 57 1 162 9 281 2 307 4 
358 1 260 1 15 1 
358 1 19 1 342 2 
138 2 166 1 226 2 21 1 348 2 294 2 169 2 218 2 
138 3 166 1 67 1 337 2 21 1 169 2 243 1 289 1 171 1 218 2 145 2 196 1 246 1 25 1 118 1 84 2 271 1 272 1 119 1 85 1 294 2 204 1 125 1 254 1 127 1 226 3 369 1 370 2 348 2 8 1 51 1 75 1 159 1 58 1 38 1 210 2 306 1 
138 1 302 1 226 1 12 1 21 1 16 1 348 1 294 1 169 1 218 1 
358 1 87 1 138 1 213 1 253 1 226 1 91 1 368 1 128 1 348 1 313 1 302 1 323 1 15 1 
358 1 213 2 138 1 253 1 226 1 91 1 368 1 348 1 313 2 169 1 218 1 302 1 323 1 15 1 294 1 
213 1 308 1 11 1 232 1 313 1 
358 1 213 2 308 1 203 1 97 1 11 1 15 1 313 2 
213 1 308 1 313 1 
213 1 138 1 226 1 21 1 313 1 348 1 169 1 218 1 302 1 11 1 160 1 12 1 16 1 294 1 
358 1 
358 1 213 2 308 1 97 1 56 1 11 1 15 1 313 2 
358 1 213 5 345 1 308 2 190 2 73 1 313 5 143 1 300 2 242 1 290 1 351 1 97 1 11 2 305 2 280 1 15 1 374 1 274 1 
166 1 260 1 
138 2 166 2 226 2 69 1 348 2 349 1 169 1 218 1 294 1 
165 1 72 1 136 1 
138 1 125 1 166 1 226 1 67 1 369 1 370 1 171 1 289 1 53 1 75 1 196 1 210 1 306 1 84 1 271 1 
138 2 125 1 226 2 369 1 67 1 7 1 370 1 348 1 241 1 169 1 289 1 171 1 218 1 75 1 196 1 306 1 210 1 84 1 271 1 136 1 
138 3 166 1 226 3 7 1 348 3 294 1 169 3 218 3 
138 1 302 1 226 1 12 1 348 1 169 1 218 1 
138 1 302 1 226 1 69 1 348 1 294 1 349 1 169 1 218 1 
138 4 213 1 166 1 67 1 337 1 21 1 313 1 169 3 241 1 289 1 171 1 218 3 145 2 196 1 323 1 25 1 118 1 271 1 84 1 85 1 294 2 204 1 125 1 253 1 254 1 127 1 91 1 226 4 368 1 369 1 7 1 370 1 32 1 348 3 8 1 51 1 349 1 302 1 75 1 159 1 58 1 306 1 210 1 262 1 
138 2 166 1 226 2 128 1 68 1 7 1 348 2 169 1 218 1 
358 1 213 1 138 3 253 1 226 3 91 1 368 1 7 2 313 1 348 3 349 1 241 1 169 3 218 3 302 1 323 1 262 1 200 1 294 1 
138 2 72 1 226 2 7 1 348 2 349 1 169 2 218 2 294 1 136 1 
138 1 125 1 166 1 226 1 67 1 369 1 370 1 171 1 289 1 75 1 196 1 210 1 306 1 84 1 271 1 
138 1 125 1 166 1 346 1 226 1 67 1 369 1 370 1 171 1 289 1 75 1 196 1 210 1 84 1 148 1 
165 2 266 1 65 1 337 4 362 1 144 1 145 2 25 2 118 1 119 2 85 1 70 1 180 1 204 1 206 1 72 2 8 1 159 1 58 1 231 1 99 1 234 1 236 1 136 2 
138 1 302 1 323 1 226 1 348 1 169 1 218 1 276 1 
138 5 166 1 226 5 128 1 68 1 7 2 348 5 349 1 169 4 241 1 218 4 113 1 294 1 152 1 
138 2 302 1 226 2 12 1 348 2 169 2 276 1 218 2 
193 1 247 1 
193 1 247 1 
94 1 185 1 
94 1 185 1 
94 1 185 1 
193 1 247 1 356 1 
2 1 193 1 247 1 
94 1 185 1 193 2 247 2 235 1 135 1 
193 1 247 1 356 1 
193 1 247 1 356 1 
117 1 193 1 247 1 
117 1 193 1 247 1 
117 1 193 1 247 1 
358 1 213 2 110 1 297 1 193 2 313 2 0 1 314 1 328 2 317 1 3 1 96 2 209 1 247 2 101 2 135 1 377 3 177 2 176 2 
213 1 138 2 166 1 110 1 78 1 193 1 81 1 313 1 217 1 169 2 218 2 2 1 247 1 176 1 177 1 6 1 88 1 226 2 348 2 328 1 36 1 355 1 101 1 377 1 
126 1 57 1 28 1 
126 1 291 1 28 1 
291 1 205 1 191 1 57 2 147 1 28 3 
291 1 205 1 191 1 57 1 261 1 28 2 
291 1 191 1 205 2 57 1 28 2 
213 5 358 2 308 1 333 1 266 1 190 1 78 1 19 1 65 1 336 1 217 1 313 5 24 2 143 2 41 1 340 1 273 1 342 3 202 1 180 1 345 3 256 1 300 1 9 2 97 1 305 1 11 4 36 1 99 1 374 1 15 1 332 2 
213 9 358 5 308 6 333 2 266 3 190 2 19 3 65 3 313 9 24 6 143 6 41 3 321 1 340 1 26 1 342 9 151 1 202 2 180 3 251 5 345 8 300 2 97 1 36 4 11 7 305 2 280 1 232 5 373 1 99 3 264 1 284 1 15 1 374 1 332 6 
358 3 213 3 333 1 190 1 266 1 19 2 65 1 336 1 313 3 143 2 24 2 41 1 273 1 342 4 202 1 180 1 345 3 300 1 9 1 11 2 305 1 36 1 280 1 99 1 15 1 332 2 
358 4 213 4 333 1 190 1 266 2 19 3 65 2 336 1 313 4 24 4 143 4 41 2 273 1 342 7 151 1 202 1 180 2 345 5 300 1 9 2 305 1 36 2 11 3 280 1 99 2 15 1 264 1 284 1 332 4 
260 1 196 1 120 1 
95 1 196 1 
71 1 
196 1 289 1 
196 3 92 1 120 2 289 1 171 1 315 1 
196 1 289 1 171 1 
93 1 196 1 
180 1 266 1 239 1 334 1 90 2 18 1 154 1 337 7 20 1 362 2 320 1 25 3 98 1 70 3 119 4 275 1 123 1 
180 1 266 1 239 1 334 1 90 2 18 1 154 1 337 7 20 1 362 2 320 1 25 3 98 1 70 3 119 4 275 1 123 1 
180 1 266 1 239 1 334 1 90 2 18 1 154 1 337 7 20 1 362 2 257 1 320 1 25 3 98 1 70 3 119 4 275 1 123 1 
266 4 334 2 239 5 18 1 65 3 240 1 20 1 337 31 362 5 142 1 41 3 320 1 145 2 25 15 118 1 248 4 85 1 119 16 70 10 275 2 123 2 295 1 180 4 252 3 204 1 90 3 154 1 299 1 157 1 228 1 159 1 98 2 99 3 14 1 
266 1 334 1 239 1 18 1 337 9 362 3 320 1 322 1 145 4 25 4 118 2 85 2 119 5 70 4 275 1 123 1 180 1 204 2 90 2 154 1 33 1 159 2 98 1 14 1 
237 1 309 1 140 1 361 1 363 1 291 1 43 1 174 1 147 1 84 1 341 1 222 1 201 1 28 2 179 1 181 1 126 1 125 1 255 1 370 1 258 2 352 1 75 1 57 1 210 1 13 1 162 2 281 1 331 1 188 1 
237 1 309 1 238 1 140 1 363 1 291 1 43 1 147 1 174 1 84 1 341 1 222 1 201 1 28 2 179 1 124 1 181 1 126 1 125 1 255 1 370 1 258 3 352 2 75 1 57 1 210 1 162 3 281 1 331 1 102 1 
237 1 309 1 238 1 140 1 363 1 291 1 43 1 147 1 84 1 341 1 28 2 179 1 124 1 181 1 125 1 126 1 255 1 370 1 258 2 352 2 75 1 57 1 210 1 162 2 331 1 
310 1 67 1 289 1 363 2 196 1 43 2 84 1 201 1 179 2 125 1 255 2 370 1 184 1 34 1 258 1 75 1 259 1 210 1 162 1 281 1 134 1 102 1 103 1 
237 1 361 1 363 1 291 1 43 1 174 1 147 1 84 1 341 1 222 1 201 1 28 2 179 1 124 1 126 1 125 1 255 1 370 1 258 1 75 1 57 1 210 1 13 1 162 1 281 1 331 1 
357 1 
138 1 333 1 190 1 77 1 143 2 289 1 4 2 292 1 196 1 197 2 198 1 84 2 44 1 342 2 87 1 345 2 253 1 91 1 348 1 300 1 302 1 97 3 305 1 210 2 15 1 163 2 59 1 100 1 358 2 213 5 62 2 308 6 167 1 19 2 67 2 312 1 313 5 112 2 114 1 323 1 173 1 122 2 29 1 125 1 226 1 368 1 128 1 370 2 183 2 34 1 75 1 37 1 374 1 134 1 375 4 
213 3 87 1 138 1 308 2 77 1 253 1 167 1 226 1 91 1 368 1 128 1 183 1 313 3 348 1 302 1 97 1 56 1 323 1 198 1 173 1 44 1 375 2 
138 1 213 3 358 1 308 1 77 1 167 1 313 3 198 1 323 1 173 1 44 1 87 1 253 1 91 1 226 1 368 1 128 1 348 1 302 1 56 1 97 1 163 1 15 1 375 3 
138 1 213 3 358 1 308 2 77 1 167 1 313 3 4 1 198 1 323 1 173 1 44 1 87 1 253 1 91 1 226 1 368 1 128 1 348 1 183 1 302 1 97 1 56 1 163 1 15 1 375 3 
213 3 138 1 308 3 77 1 167 1 313 3 4 2 198 1 323 1 173 1 44 1 325 1 87 1 253 1 226 1 91 1 368 1 128 1 348 1 183 2 302 1 10 1 97 1 56 1 375 2 137 1 
358 2 213 4 138 1 308 4 62 2 190 1 77 1 167 1 19 2 313 4 143 1 112 2 4 2 197 2 198 1 323 1 173 1 44 1 342 2 122 2 87 1 345 1 29 1 253 1 226 1 91 1 368 1 128 1 183 2 348 1 300 1 302 1 97 2 305 1 15 1 163 2 59 1 374 1 100 1 375 4 
213 2 87 1 138 1 77 1 253 1 167 1 226 1 91 1 368 1 128 1 313 2 348 1 302 1 10 1 323 1 198 1 173 1 44 1 375 2 
213 2 87 1 138 1 77 1 253 1 167 1 226 1 91 1 368 1 128 1 313 2 348 1 302 1 10 1 323 1 198 1 173 1 44 1 375 2 
358 1 138 1 213 4 308 4 62 2 108 1 77 1 190 1 167 1 216 2 313 4 268 2 143 1 42 1 4 2 197 2 198 1 323 1 173 1 44 1 342 2 87 1 345 1 253 1 91 1 226 1 368 1 128 1 183 2 348 1 300 1 54 1 302 1 97 2 305 1 15 1 163 2 59 1 374 1 375 4 212 1 
213 2 87 1 138 1 308 1 77 1 253 1 167 1 226 1 91 1 368 1 128 1 183 1 313 2 348 1 302 1 10 1 4 1 323 1 198 1 173 1 44 1 163 1 325 1 375 3 
213 2 87 1 138 1 308 1 77 1 253 1 167 1 226 1 91 1 368 1 128 1 183 1 313 2 348 1 302 1 10 1 4 1 323 1 198 1 173 1 44 1 163 1 325 1 375 3 
358 1 213 4 138 1 308 4 62 2 190 1 77 1 108 1 167 1 216 2 313 4 268 2 143 1 4 2 197 2 198 1 323 1 173 1 44 1 342 2 87 1 345 1 29 1 253 1 226 1 91 1 368 1 128 1 183 2 348 1 300 1 302 1 97 2 305 1 15 1 163 2 59 1 374 1 375 4 
165 1 266 1 166 2 18 1 337 6 362 2 320 1 145 2 25 3 118 1 85 1 70 2 119 3 275 1 180 1 204 1 72 1 90 1 154 1 8 1 260 1 159 1 58 1 98 1 234 1 136 1 
165 11 266 2 166 1 267 1 239 1 287 1 65 2 240 1 337 14 362 1 142 1 243 1 41 2 145 4 25 6 118 2 248 3 70 2 85 2 119 8 180 1 252 3 204 2 72 4 277 1 127 1 350 1 8 2 159 2 58 1 99 1 330 1 136 11 
138 2 166 1 267 1 67 1 337 2 169 1 241 1 289 1 171 1 218 1 243 1 219 1 196 1 145 2 25 1 271 1 84 1 118 1 85 1 119 1 250 1 125 1 204 1 72 1 226 2 127 1 369 1 370 1 7 1 348 1 8 1 53 1 75 1 230 1 159 1 58 1 306 1 210 1 
138 3 239 4 337 20 241 1 243 1 289 2 41 2 145 6 196 2 84 3 85 3 249 2 204 3 90 1 154 1 7 1 348 1 8 3 51 2 55 1 304 2 159 3 58 3 210 3 306 2 98 1 99 2 165 7 266 3 166 2 267 1 18 1 168 2 65 2 67 1 362 4 169 1 218 1 171 2 320 1 115 2 25 10 118 3 271 2 119 10 70 8 275 1 124 1 180 3 125 2 72 7 127 1 226 3 369 2 370 3 371 1 131 1 75 2 136 7 
138 1 67 2 337 2 23 1 169 1 218 1 243 1 289 2 318 1 196 3 145 4 293 1 25 1 84 8 118 2 272 2 149 1 85 2 119 1 86 1 343 1 124 1 125 2 204 2 226 1 127 1 7 1 370 8 348 1 8 2 34 1 75 2 159 2 58 2 210 7 283 1 234 1 134 1 188 1 
165 1 138 1 266 1 267 1 65 1 337 3 362 1 169 1 218 1 41 1 145 2 25 2 118 1 70 1 85 1 119 1 294 1 150 1 180 1 204 1 72 1 226 1 348 1 349 1 8 1 159 1 58 1 99 1 136 1 
165 1 204 1 266 1 72 1 239 1 65 1 337 2 8 1 145 2 159 1 58 1 231 1 118 1 234 1 70 1 85 1 119 2 136 1 
165 1 180 1 204 1 72 1 337 2 362 1 8 1 145 2 159 1 58 1 25 2 118 1 99 1 234 1 70 1 85 1 236 1 136 1 
165 2 266 1 239 1 65 1 337 4 362 1 41 1 145 2 25 2 118 1 119 2 85 1 70 2 180 1 204 1 72 2 8 1 159 1 58 1 99 1 234 1 136 2 
165 1 204 1 266 1 72 1 239 1 65 1 337 2 8 1 145 2 293 1 159 1 58 1 231 1 118 1 70 1 85 1 119 2 136 1 
165 1 180 1 204 1 72 1 337 2 362 1 8 1 145 2 293 1 159 1 58 1 25 2 118 1 99 1 70 1 85 1 236 1 136 1 
165 2 266 1 239 1 65 1 337 4 362 1 41 1 145 2 293 1 25 2 118 1 119 2 85 1 70 2 180 1 204 1 72 2 8 1 159 1 58 1 99 1 136 2 
180 1 165 2 204 1 266 1 72 2 239 1 65 1 337 4 362 1 8 1 41 1 145 2 159 1 58 1 25 2 118 1 99 1 70 2 85 1 119 2 136 2 
138 1 166 1 67 1 337 2 243 1 289 1 171 1 196 1 145 2 25 1 271 1 84 1 118 1 119 1 85 1 125 1 204 1 226 1 127 1 369 1 370 1 51 1 8 1 75 1 159 1 58 1 306 1 210 1 
138 1 166 1 67 1 337 2 243 1 289 1 171 1 196 1 145 2 324 1 25 1 84 1 118 1 148 1 119 1 85 1 125 1 204 1 346 1 226 1 127 1 369 1 370 1 8 1 75 1 159 1 58 1 210 1 
165 2 266 1 267 1 239 1 65 1 337 4 362 1 41 1 145 2 25 2 118 1 119 2 85 1 70 2 180 1 204 1 72 2 8 1 159 1 58 1 99 1 136 2 
165 2 138 1 266 1 239 1 65 1 337 4 362 1 171 1 289 1 41 1 196 1 145 2 25 2 271 1 84 1 118 1 70 2 119 2 85 1 180 1 125 1 204 1 72 2 226 1 369 1 370 1 51 1 8 1 75 1 304 1 159 1 58 1 306 1 210 1 99 1 136 2 188 1 
138 1 165 1 266 1 267 1 239 1 65 1 337 3 169 1 218 1 41 1 145 2 25 1 118 1 70 1 85 1 119 2 294 1 180 1 204 1 72 1 227 1 226 1 348 1 349 1 8 1 159 1 58 1 99 1 136 1 
104 1 266 3 239 3 215 1 65 3 240 1 337 19 362 3 142 1 41 3 145 4 25 10 118 2 248 2 85 2 119 9 70 6 223 1 180 3 252 1 204 2 33 1 279 1 229 1 329 1 159 2 76 2 99 3 263 1 164 2 
266 3 239 2 64 1 215 1 80 1 65 3 337 26 362 2 142 2 1 1 41 3 145 6 25 12 118 3 248 2 70 4 85 3 119 14 223 1 121 1 180 2 252 2 204 3 207 1 33 1 279 2 329 2 159 3 76 1 14 2 99 2 263 1 164 4 17 1 
239 4 80 1 240 1 337 41 142 3 1 1 41 4 145 6 248 4 85 3 252 3 204 3 90 1 154 1 207 1 156 1 159 3 98 1 99 4 14 1 263 1 164 4 17 1 104 1 266 5 64 1 18 1 65 4 215 1 362 4 320 1 25 21 118 3 70 8 119 20 223 1 121 1 275 1 180 5 33 1 279 1 329 2 76 1 
104 1 266 5 239 3 18 1 64 1 80 1 215 1 65 4 240 1 337 38 362 4 142 3 1 1 41 4 320 1 145 8 25 18 118 4 248 4 85 4 119 20 70 7 223 1 275 1 121 1 180 4 252 3 204 4 90 1 154 1 207 1 156 1 33 1 279 1 329 2 159 4 76 1 98 1 14 2 99 3 263 1 17 1 164 4 
266 8 239 7 18 1 64 1 80 1 215 1 65 7 240 2 337 52 362 7 142 2 1 1 41 7 320 1 145 4 25 25 118 2 248 4 85 2 119 27 70 14 223 1 275 1 121 1 180 8 252 4 204 2 90 1 277 2 154 1 207 1 33 1 279 1 329 1 159 2 76 1 98 1 14 1 99 7 263 1 17 1 164 4 
328 1 3 1 270 1 193 1 247 1 101 1 0 1 135 1 176 1 177 1 
2 1 88 1 
328 1 303 1 347 1 193 1 247 1 101 1 278 1 176 1 177 1 
358 1 213 1 110 1 297 1 193 1 313 1 0 1 314 1 328 1 3 1 96 1 209 1 247 1 101 1 135 1 377 2 177 1 176 1 
358 1 213 1 110 1 297 1 193 1 313 1 0 1 314 1 328 1 3 1 96 1 209 1 247 1 101 1 135 1 377 2 177 1 176 1 
358 1 213 1 110 1 297 1 193 1 313 1 0 1 314 1 328 1 3 1 96 1 209 1 247 1 101 1 135 1 377 2 177 1 176 1 
63 1 356 1 235 1 
63 1 356 1 235 1 
117 1 155 1 
117 1 155 1 235 1 
81 1 355 1 
138 2 213 1 166 1 78 1 193 1 360 1 81 1 313 1 217 1 314 1 169 2 218 2 2 1 247 1 176 1 177 1 6 1 88 1 226 2 348 2 328 1 96 1 11 1 36 1 355 1 101 1 377 1 
63 1 356 1 
117 1 155 1 235 1 
138 2 214 1 267 1 139 1 337 2 170 1 289 1 243 1 318 1 196 1 145 2 25 1 84 2 118 1 272 2 85 1 119 1 343 1 125 1 204 1 226 2 127 1 370 2 348 2 8 1 52 1 75 1 159 1 58 1 210 2 265 1 
124 1 179 1 237 1 126 1 125 1 79 1 370 2 291 1 75 1 57 1 147 1 210 2 174 1 84 2 354 1 175 1 331 1 28 2 188 1 
124 1 179 1 237 1 126 1 125 1 79 1 359 1 370 1 291 1 75 1 57 1 147 1 210 1 174 1 84 1 331 1 28 2 
179 1 125 1 67 1 370 1 289 1 184 1 34 1 75 1 196 1 210 1 84 1 354 1 134 1 366 1 
124 1 179 1 237 1 126 1 125 1 79 1 370 1 291 1 75 1 57 1 147 1 210 1 174 1 84 1 354 1 175 1 331 1 28 2 
22 1 
358 1 345 1 260 1 73 1 15 1 143 1 290 1 
358 2 213 1 308 1 190 1 19 1 313 1 143 1 112 1 342 1 122 1 345 1 300 1 97 1 305 1 100 1 374 1 15 1 
125 1 190 1 30 1 67 1 370 1 300 1 289 1 171 1 315 1 95 1 75 1 196 1 305 1 210 1 84 1 374 1 60 1 
213 1 358 4 308 1 190 1 266 2 80 1 19 3 65 2 313 1 24 5 142 1 143 4 1 1 41 2 248 1 121 1 342 6 180 2 345 7 252 1 207 1 301 1 300 1 97 1 305 1 99 2 374 1 15 1 17 1 332 5 187 1 
138 1 213 1 190 1 266 2 335 1 21 1 313 1 143 2 169 1 218 1 320 1 46 1 294 1 275 1 180 1 345 2 226 1 348 1 300 1 302 1 305 1 160 1 12 1 98 1 374 1 16 1 187 2 61 1 
358 1 345 1 190 1 73 1 300 1 143 1 290 1 305 1 374 1 15 1 
358 5 180 2 345 5 266 2 335 1 65 2 19 5 143 5 24 5 41 2 115 1 99 2 332 5 342 10 187 2 
358 1 213 1 308 1 97 1 15 1 313 1 
106 1 213 3 333 2 308 4 190 2 192 2 67 2 312 1 313 3 143 2 289 1 114 1 196 1 292 2 84 4 345 2 125 1 225 1 370 4 300 2 34 1 75 1 97 2 305 2 280 1 210 4 186 1 374 1 134 1 
138 3 166 1 67 1 337 1 21 1 169 2 218 2 171 1 289 1 145 2 196 1 25 1 118 1 84 1 271 1 85 1 294 2 204 1 125 1 254 1 127 1 226 3 369 1 370 1 348 2 51 1 8 1 75 1 159 1 58 1 210 1 306 1 
358 4 333 1 345 1 190 1 90 1 19 2 24 2 143 2 300 1 292 1 305 1 374 1 15 2 332 2 342 4 
328 1 129 1 176 1 
328 1 3 1 39 1 355 1 176 1 
328 1 129 1 176 1 
328 1 129 1 176 1 
328 1 220 1 176 1 
328 1 220 1 176 1 
328 1 220 1 176 1 
328 1 176 1 
193 1 247 1 
180 1 266 1 204 2 90 1 239 1 18 1 154 1 337 8 362 2 320 1 145 4 159 2 25 4 118 2 98 1 14 1 119 4 70 3 85 2 275 1 
180 1 266 1 320 1 260 1 90 1 18 1 154 1 25 3 98 1 337 6 119 3 70 2 362 2 275 1 
180 1 204 1 266 1 239 1 65 1 337 4 362 1 41 1 145 2 159 1 25 2 233 1 118 1 99 1 70 2 85 1 119 2 
180 1 252 1 266 1 239 1 65 1 240 1 337 7 362 1 142 1 41 1 25 4 99 1 248 2 119 3 70 2 
266 3 239 4 18 1 65 2 287 1 240 1 337 23 362 5 41 2 320 1 145 4 25 12 118 2 248 2 70 9 119 11 85 2 275 2 180 3 252 2 204 2 153 1 90 1 277 1 154 1 159 2 98 2 99 2 14 2 
25 1 337 1 248 1 
252 1 337 1 119 1 
180 1 204 1 266 1 239 1 65 1 337 6 362 2 41 1 115 1 145 2 159 1 25 3 118 1 233 1 99 1 85 1 119 3 70 3 
266 2 239 1 80 1 65 2 337 12 362 1 142 1 1 1 41 2 145 2 25 6 118 1 248 1 85 1 119 6 70 2 121 1 180 2 252 1 204 1 207 1 33 1 159 1 99 2 17 1 
180 1 266 1 239 1 337 6 362 1 320 1 25 3 98 1 119 3 70 2 275 1 
204 1 153 1 239 1 18 1 154 1 337 3 362 1 145 2 159 1 25 2 98 1 118 1 14 1 119 1 70 2 85 1 275 1 
180 2 204 1 266 2 239 2 337 10 362 3 33 1 320 1 145 2 159 1 25 5 118 1 98 2 85 1 70 5 119 5 275 2 61 1 
204 1 266 1 239 1 65 1 337 2 33 1 145 2 159 1 118 1 85 1 119 2 70 1 
180 1 204 1 266 1 239 1 65 1 337 4 362 1 33 1 41 1 145 2 159 1 25 2 118 1 99 1 70 2 85 1 119 2 
104 1 204 3 153 1 239 1 337 3 362 1 33 1 145 6 159 3 25 2 118 3 98 1 14 1 85 3 70 2 119 1 275 1 
104 1 266 5 239 5 18 1 65 3 240 1 337 34 362 7 142 1 41 3 320 2 145 10 25 18 118 5 248 4 85 5 119 16 70 12 275 3 295 1 180 5 252 3 204 5 153 1 90 1 154 1 299 1 33 1 157 1 159 5 98 3 233 1 14 2 99 3 
266 1 18 1 80 1 337 8 362 2 142 1 320 1 145 2 25 4 118 1 248 1 85 1 119 4 70 2 275 1 180 1 252 1 204 1 90 1 154 1 33 1 159 1 98 1 
266 2 239 1 18 1 80 1 65 1 240 1 337 11 362 2 142 1 41 1 320 1 145 4 25 5 118 2 248 2 85 2 119 6 70 3 275 1 180 1 252 1 204 2 90 1 154 1 33 1 159 2 98 1 233 1 
266 3 239 1 18 1 80 1 65 2 337 19 362 3 142 1 1 1 41 2 320 1 145 6 25 10 118 3 248 1 85 3 119 9 70 4 275 1 121 1 180 3 252 1 204 3 90 1 154 1 207 1 33 1 159 3 98 1 233 1 99 2 14 1 17 1 
266 3 239 2 18 1 80 1 65 2 337 17 362 3 142 1 1 1 41 2 320 1 145 6 25 7 118 3 248 1 85 3 119 10 70 5 275 1 121 1 180 2 252 1 204 3 90 1 154 1 207 1 33 1 159 3 98 1 233 1 14 1 99 1 17 1 
266 1 18 1 80 1 337 8 362 2 142 1 320 1 145 2 25 4 118 1 248 1 85 1 119 4 70 2 275 1 180 1 252 1 204 1 90 1 154 1 33 1 159 1 98 1 
266 2 239 1 80 1 65 2 337 12 362 1 142 1 1 1 41 2 145 2 25 6 118 1 248 1 85 1 119 6 70 2 121 1 180 2 252 1 204 1 207 1 33 1 159 1 99 2 17 1 
266 3 239 2 18 1 80 1 65 2 337 18 362 3 142 1 1 1 41 2 320 1 145 8 25 8 118 4 248 1 85 4 119 10 70 5 275 1 121 1 180 2 252 1 204 4 90 1 154 1 207 1 33 1 159 4 98 1 233 1 99 1 14 2 17 1 
104 1 266 3 239 3 80 1 65 3 337 16 362 3 142 1 1 1 41 3 145 8 25 7 118 4 248 1 85 4 119 9 70 6 121 1 180 2 252 1 204 4 207 1 33 1 159 4 99 2 14 2 17 1 
180 1 266 1 239 3 18 1 154 2 337 7 362 3 320 1 25 4 98 3 70 6 119 3 275 3 
104 1 266 3 239 1 18 1 80 1 65 2 337 18 362 3 142 1 1 1 41 2 320 1 145 8 25 8 118 4 248 1 85 4 119 10 70 4 275 1 121 1 180 2 252 1 204 4 90 1 154 1 207 1 33 1 159 4 98 1 99 1 14 2 17 1 
138 1 105 1 166 1 226 1 128 1 68 1 348 1 
105 1 138 1 166 1 226 1 128 1 288 1 68 1 348 1 353 1 195 1 221 1 376 1 
125 1 75 1 260 1 196 1 210 1 84 1 67 1 370 1 134 1 289 1 34 1 
138 2 125 1 166 1 226 2 369 1 67 1 7 1 370 1 348 1 169 1 289 1 171 1 218 1 75 1 196 1 210 1 306 1 84 1 
138 2 166 1 192 1 169 1 218 2 171 2 289 2 196 3 323 1 84 1 48 1 125 1 253 1 226 2 369 1 370 1 7 1 348 2 93 1 302 1 75 1 306 1 210 1 
138 2 166 1 192 1 169 1 218 2 171 2 289 2 196 3 323 1 84 2 148 1 48 1 224 1 125 1 253 1 226 2 369 1 370 2 7 1 348 2 93 1 302 1 75 1 210 2 
213 2 358 1 308 1 192 1 67 1 313 2 171 1 289 1 196 4 84 3 120 1 48 1 327 1 224 1 125 1 368 1 370 3 372 1 93 1 95 1 75 1 210 3 15 1 
358 1 213 2 224 1 308 1 125 1 182 1 192 1 368 1 67 1 370 3 313 2 289 1 171 1 93 1 95 1 75 1 196 4 210 3 84 3 15 1 120 1 48 1 
125 1 75 1 210 1 84 1 370 1 149 1 
124 1 125 2 298 1 67 2 370 7 338 1 23 1 315 1 171 1 289 2 318 1 75 3 196 3 210 6 84 7 272 1 283 1 149 1 86 1 188 1 326 1 
165 1 138 2 266 1 166 2 267 1 18 1 168 1 337 6 362 2 169 1 289 1 171 1 218 1 320 1 196 1 145 4 25 3 118 2 84 1 271 1 119 3 70 2 85 2 275 1 180 1 125 1 204 2 72 1 90 1 226 2 154 1 369 1 7 1 370 1 348 1 8 2 51 1 52 1 75 1 304 1 159 2 58 2 210 1 306 1 98 1 136 1 188 1 
358 1 106 1 213 3 308 2 190 2 111 1 67 1 313 3 143 1 290 1 196 2 84 1 120 1 344 1 345 1 182 1 368 1 73 1 370 1 300 2 95 1 97 1 305 2 11 1 210 1 211 1 15 1 374 2 
71 1 125 1 370 1 315 1 171 1 289 1 75 1 196 1 210 1 84 1 149 1 120 1 60 1 
224 1 125 1 67 1 370 4 34 1 289 1 132 1 75 1 196 1 210 4 84 4 134 1 188 1 
178 1 125 1 192 1 367 1 298 1 370 2 171 1 289 1 55 1 75 2 196 1 210 2 84 2 326 1 
237 1 126 1 291 1 125 1 75 1 210 1 84 1 67 1 370 1 28 1 
124 1 214 1 125 1 370 2 289 1 318 1 75 1 196 1 210 2 84 2 188 1 
125 2 192 1 67 1 370 5 23 1 34 1 289 2 132 1 318 1 75 2 196 3 210 4 84 5 134 1 86 1 188 1 
125 2 192 1 67 1 370 5 34 1 289 2 132 1 318 1 75 2 196 3 83 1 210 4 84 5 134 1 86 1 188 1 
138 2 125 1 166 1 226 2 369 1 67 1 7 1 370 1 348 1 169 1 289 1 171 1 218 1 75 1 196 1 210 1 84 1 148 1 
125 1 192 1 298 1 370 1 338 1 315 1 171 1 289 1 75 2 196 1 210 1 84 1 326 1 
364 1 166 1 172 1 130 1 158 1 
358 1 213 2 166 1 253 1 91 1 368 1 130 1 313 2 158 2 302 1 364 2 323 1 11 1 172 2 262 1 282 1 15 1 133 1 378 1 
138 1 226 1 139 1 130 1 348 1 170 1 364 1 172 1 265 1 
282 1 130 1 378 1 
181 1 309 1 260 1 140 1 
181 1 309 1 140 1 162 1 281 1 201 1 258 1 
363 1 43 1 258 1 
181 1 89 1 309 1 140 1 361 1 258 3 74 1 339 1 199 2 281 1 162 3 201 1 
181 1 352 1 309 1 296 1 140 1 162 2 281 1 201 1 258 2 
126 1 140 1 361 1 258 1 57 1 116 1 281 1 162 1 307 1 201 1 28 1 
181 1 140 1 162 1 281 1 361 1 201 1 258 1 
181 2 309 1 162 1 281 1 361 1 201 1 258 1 
181 1 49 1 50 1 66 1 140 1 361 1 258 2 281 2 162 2 201 2 
181 1 109 1 309 1 140 2 361 1 258 3 194 1 40 1 352 2 281 1 162 3 307 1 201 1 
181 1 126 1 309 1 140 1 361 1 258 2 244 1 352 1 291 1 57 1 147 1 281 1 162 2 201 1 28 2 
181 1 309 1 296 1 140 2 361 1 258 4 194 1 35 1 352 2 281 2 162 4 307 1 201 2 
181 1 309 1 140 1 162 1 281 1 361 1 201 1 258 1 
181 2 89 1 309 2 140 3 258 4 194 1 352 2 74 1 146 1 199 1 162 4 281 1 307 1 201 1 
285 1 181 1 309 1 311 1 140 1 361 1 316 1 258 2 352 1 281 1 162 2 201 1 
181 1 89 1 309 1 140 1 361 1 258 3 269 1 74 2 199 2 281 1 162 3 201 1 
189 1 140 2 141 1 27 2 
161 1 162 1 281 1 361 1 201 1 258 1 
40 1 181 1 352 1 309 1 140 1 162 2 281 1 361 1 201 1 258 2 
5 1 
181 1 309 1 140 1 162 1 281 1 361 1 201 1 258 1 
181 1 309 1 140 1 361 1 258 3 40 1 352 1 199 1 281 1 162 3 201 1 
146 1 140 1 307 1 194 1 
181 1 140 1 

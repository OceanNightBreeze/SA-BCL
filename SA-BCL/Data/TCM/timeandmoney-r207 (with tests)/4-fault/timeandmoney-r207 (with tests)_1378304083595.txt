#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (33,45,134,265) (33,45,134,265) (68,175,194,287) 274 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (33,45,134,265) (33,45,134,265) (68,175,194,287) 274 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (75,321,355) 53 51 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (75,321,355) 53 51 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (75,321,355) 53 (48,144,236) 188 324 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (75,321,355) 53 51 238 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (75,321,355) 53 51 238 55 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (33,45,134,265) (33,45,134,265) (68,175,194,287) (68,175,194,287) (68,175,194,287) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 1 265 6 158 9 130 1 161 1 164 2 45 2 134 2 271 1 33 9 229 1 97 1 52 2 348 1 326 1 139 1 233 2 235 1 118 4 354 1 104 5 287 1 22 2 84 1 259 2 152 3 243 1 205 1 
292 1 265 6 158 9 130 1 161 1 164 2 45 2 134 2 271 1 33 9 229 1 97 1 52 2 348 1 326 1 139 1 233 2 235 1 118 4 354 1 104 5 287 1 22 2 84 1 259 2 152 3 243 1 205 1 
292 1 265 7 158 10 130 1 161 1 164 2 45 2 134 2 271 1 33 10 229 1 97 1 52 2 348 1 326 1 139 1 233 2 235 1 118 5 354 1 104 6 287 1 22 2 84 1 259 2 152 4 243 1 205 1 
292 1 265 4 158 7 161 1 164 2 45 2 134 2 271 1 33 7 229 1 97 1 52 2 348 1 326 1 139 1 233 1 235 1 118 3 354 1 104 4 287 1 22 2 84 1 259 2 152 2 243 1 205 1 
233 2 265 3 118 2 104 3 158 4 130 1 164 1 134 1 45 1 287 1 33 4 22 1 84 1 152 1 97 1 52 1 205 1 326 1 
315 1 104 1 158 2 161 1 145 1 146 1 134 1 45 1 271 1 33 2 22 1 84 1 259 1 52 1 205 1 326 1 
265 1 118 1 354 1 104 2 158 3 134 2 45 2 33 3 84 1 259 1 152 1 205 1 326 1 
45 1 134 1 265 1 274 1 33 2 175 1 158 1 326 1 
45 1 134 1 265 1 274 1 33 2 175 1 158 1 326 1 
111 1 252 1 241 1 
111 1 234 2 34 1 
75 2 321 2 141 2 143 2 128 1 281 2 355 2 247 1 
294 1 155 1 156 1 128 1 41 1 247 1 91 2 160 1 297 1 343 1 95 1 321 2 208 1 347 1 137 1 138 1 56 1 75 2 193 1 141 2 142 2 143 2 281 3 355 3 213 1 77 1 36 1 240 1 216 2 290 2 307 1 80 1 179 1 217 2 331 1 309 1 220 1 
246 1 75 1 321 1 141 1 143 1 128 1 212 1 281 1 355 1 76 1 
75 1 236 1 53 1 
111 1 75 1 280 2 141 1 143 1 355 1 281 1 212 1 144 2 356 1 252 1 48 1 321 1 37 1 361 1 
132 1 280 1 322 1 242 1 144 1 
132 1 111 1 252 1 289 1 280 2 242 1 144 2 126 1 
132 1 280 1 144 1 
246 1 75 1 280 1 141 1 327 1 128 1 143 1 212 1 76 1 355 1 281 1 144 1 321 1 242 1 
111 1 
132 1 111 1 252 1 302 1 280 2 242 1 144 2 126 1 
111 1 279 1 280 5 303 1 5 2 144 5 131 1 13 1 341 1 132 2 252 1 30 1 81 1 67 2 345 1 228 2 242 2 126 1 360 1 
241 1 247 1 
75 2 141 1 143 1 355 2 281 2 247 2 319 1 258 1 321 1 
72 1 129 1 190 1 
155 1 193 1 142 1 281 1 355 1 247 1 91 1 297 1 240 1 215 1 343 1 216 1 80 1 208 1 309 1 138 1 
23 1 155 1 193 1 75 1 141 1 142 1 129 1 355 2 281 2 91 1 297 1 240 1 343 1 216 1 80 1 321 1 6 1 208 1 309 1 138 1 
23 1 75 3 321 3 141 3 143 1 281 3 355 3 247 1 
246 1 75 1 321 1 141 1 212 1 281 1 355 1 
258 1 75 1 321 1 141 1 143 1 212 1 281 1 355 1 319 1 
23 1 155 1 156 1 128 1 41 1 247 1 91 1 319 1 297 1 343 1 48 1 321 3 6 1 208 1 347 1 138 1 168 1 349 1 193 1 75 3 280 1 141 3 142 1 143 2 281 4 355 4 212 1 213 1 144 1 77 1 36 1 240 1 356 1 216 1 290 1 307 1 80 1 179 1 217 2 37 1 331 1 309 1 220 1 361 1 
23 1 75 2 321 1 141 1 281 1 355 1 51 1 53 1 
111 1 23 2 349 1 75 3 58 1 280 1 141 3 143 1 212 1 355 3 281 3 144 1 319 1 356 1 48 1 321 3 6 1 37 1 361 1 
72 1 23 1 75 2 321 2 141 2 143 1 129 1 281 2 355 2 319 1 
155 1 193 1 142 1 281 1 355 1 247 1 91 1 297 1 240 1 343 1 216 1 80 1 208 1 309 1 138 1 
142 1 281 1 355 1 247 1 91 1 297 1 240 1 343 1 216 1 80 1 208 1 257 1 309 1 300 1 138 1 
156 1 41 2 129 2 27 1 298 1 95 2 344 1 190 2 72 2 171 1 121 1 213 1 282 1 77 1 36 1 79 1 357 1 307 1 61 1 290 4 17 1 217 2 220 1 221 1 
75 1 321 1 141 1 212 1 281 1 355 1 361 1 110 1 
23 2 75 5 264 1 141 4 143 1 355 4 281 4 247 1 319 1 321 4 6 1 51 1 53 1 313 1 
246 1 75 2 321 2 141 2 212 1 281 2 355 2 110 1 
31 1 210 1 
31 1 210 1 
0 1 201 1 
0 1 201 1 
0 1 201 1 
66 1 31 1 210 1 
66 1 31 1 210 1 
31 1 210 1 69 1 
0 1 272 1 31 2 210 2 201 1 40 1 
66 1 31 1 210 1 
31 1 210 1 267 1 
31 1 210 1 267 1 
31 1 210 1 267 1 
111 1 1 1 280 2 2 1 210 2 222 2 10 2 144 2 285 3 93 1 214 1 18 1 272 1 96 2 31 2 49 2 116 1 21 2 231 1 
2 1 222 1 247 1 342 1 29 1 96 1 321 2 49 1 31 1 273 1 69 1 191 1 75 2 280 1 141 2 210 1 10 1 355 2 281 2 144 1 59 1 285 1 177 1 14 1 
22 1 52 1 164 1 
22 1 52 1 145 1 
133 1 106 1 124 1 22 3 145 1 164 2 
106 1 266 1 124 1 22 2 145 1 164 1 
106 1 124 2 22 2 145 1 164 1 
111 2 3 1 295 1 5 1 27 1 132 1 252 1 30 1 67 1 228 1 275 2 256 1 166 1 98 2 191 1 234 3 171 1 279 2 34 1 280 5 121 1 144 5 13 3 177 1 239 1 14 1 108 1 242 4 109 1 126 1 221 1 362 2 
111 5 295 1 5 2 27 3 341 1 132 6 44 1 252 1 30 1 67 2 322 5 228 2 167 1 166 2 98 6 191 4 234 9 171 3 279 6 34 3 280 9 121 3 144 9 12 1 60 1 13 8 239 2 286 1 178 5 242 7 333 1 109 3 126 1 221 3 362 6 
111 3 5 1 27 1 341 1 252 1 67 1 228 1 275 1 256 1 166 1 98 2 191 1 234 4 171 1 279 2 34 2 280 3 121 1 144 3 13 3 239 1 242 2 108 1 109 1 221 1 362 2 
111 4 5 1 27 2 341 1 44 1 252 1 67 1 228 1 275 2 256 1 166 1 98 4 191 2 234 7 171 2 279 4 34 3 280 4 121 2 144 4 60 1 13 5 239 1 286 1 108 1 242 3 109 2 221 2 362 4 
241 1 297 1 203 1 
100 1 297 1 
318 1 
138 1 297 1 
358 1 308 1 208 1 138 1 297 3 203 2 
208 1 138 1 297 1 
297 1 122 1 
171 1 74 1 353 1 337 1 41 3 27 1 320 1 79 3 123 1 149 1 95 4 290 7 17 2 107 1 62 1 82 1 189 2 
171 1 74 1 353 1 337 1 41 3 27 1 320 1 79 3 123 1 149 1 95 4 290 7 17 2 107 1 62 1 82 1 189 2 
171 1 74 1 353 1 337 1 41 3 27 1 320 1 79 3 123 1 149 1 95 4 290 7 17 2 107 1 62 1 82 1 310 1 189 2 
245 1 244 1 156 1 89 1 337 2 41 15 27 4 320 2 28 4 95 16 189 3 192 1 350 3 74 2 171 4 353 2 196 1 121 3 77 1 36 1 123 1 79 10 149 5 307 1 290 31 17 5 107 1 62 1 217 2 82 1 109 3 221 3 180 1 63 1 
156 2 337 1 41 4 27 1 320 1 95 5 189 2 192 1 117 1 171 1 74 1 353 1 77 2 36 2 79 4 123 1 149 1 307 2 290 9 17 3 62 1 107 1 217 4 260 1 
265 1 184 1 296 1 223 1 91 1 158 2 65 1 340 1 43 1 164 1 133 1 45 1 134 1 253 1 33 2 52 1 326 1 142 1 104 1 304 1 145 1 216 1 288 1 80 1 20 1 22 2 84 1 259 1 309 1 205 1 
265 2 184 1 223 1 91 1 158 3 65 1 340 1 43 1 164 1 133 1 45 1 134 1 33 3 52 1 325 1 142 1 104 1 304 1 145 1 176 1 216 1 288 1 80 1 20 1 22 2 84 1 259 1 309 1 311 1 205 1 
265 2 184 1 223 1 91 1 158 2 65 1 164 1 133 1 33 2 52 1 325 1 142 1 104 1 304 1 145 1 216 1 288 1 80 1 20 1 22 2 84 1 259 1 309 1 311 1 205 1 
301 1 142 1 157 1 158 1 91 1 223 2 25 1 65 2 92 1 297 1 176 1 343 1 216 1 270 1 198 1 134 1 45 1 288 2 80 1 33 1 259 2 309 1 138 1 
184 1 223 1 91 1 158 1 65 1 340 1 43 1 164 1 133 1 45 1 134 1 253 1 33 1 52 1 325 1 326 1 142 1 304 1 145 1 216 1 288 1 80 1 20 1 22 2 259 1 309 1 
112 1 
5 1 91 2 163 1 297 1 132 2 343 2 270 1 30 1 67 1 188 1 228 1 138 1 324 1 53 1 352 1 301 1 75 1 279 1 280 2 236 1 142 2 103 1 144 2 13 1 239 1 216 2 80 1 359 1 309 1 154 1 126 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
132 1 75 1 302 1 280 2 236 1 188 1 144 2 154 1 126 1 163 1 324 1 53 1 
75 1 30 1 280 1 236 1 67 1 188 1 228 1 5 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 280 1 236 1 188 1 144 1 154 1 163 1 324 1 53 1 
75 1 30 1 280 1 236 1 67 1 188 1 228 1 5 1 144 1 154 1 163 1 324 1 53 1 
156 1 337 1 129 1 41 3 247 2 27 1 320 1 95 3 189 1 190 1 72 1 171 1 213 1 77 1 36 1 123 1 79 2 307 1 61 1 290 6 17 2 62 1 241 1 107 1 217 2 220 1 
244 1 245 1 156 2 41 6 129 11 247 1 27 2 28 3 207 1 95 8 50 1 255 1 190 11 54 1 72 4 350 3 56 1 171 1 173 1 213 1 121 1 77 2 36 2 79 2 149 1 307 2 290 14 17 1 179 1 217 4 220 2 109 2 221 2 
23 1 155 1 183 1 156 1 41 1 247 1 91 1 297 1 343 1 207 1 46 1 95 1 321 1 6 1 208 1 138 1 72 1 56 1 193 1 75 1 174 1 141 1 142 1 281 2 355 2 213 1 77 1 36 1 240 1 215 1 216 1 307 1 290 2 80 1 179 1 217 2 309 1 220 1 
127 2 41 10 129 7 91 3 320 1 95 10 227 2 321 1 6 1 7 1 189 1 138 2 190 7 325 1 56 1 193 2 141 1 142 3 281 3 240 2 105 2 149 4 290 20 17 4 107 1 62 1 332 1 291 2 109 2 23 1 155 2 156 3 337 1 247 2 27 3 297 2 343 1 207 1 208 2 347 2 72 7 171 3 75 1 355 3 213 3 121 2 36 3 77 3 123 1 79 8 216 3 307 3 80 2 179 1 38 1 217 6 309 2 220 3 221 2 
206 1 23 1 156 2 296 1 41 1 115 1 91 8 297 3 343 2 269 1 270 1 95 1 321 1 137 2 138 2 325 1 73 1 56 1 301 1 140 1 75 1 141 1 142 7 11 1 281 1 355 1 213 2 77 2 36 2 147 1 216 8 61 1 307 2 290 2 80 2 179 1 217 4 309 2 220 2 
156 1 129 1 41 2 319 1 27 1 207 1 95 1 321 1 190 1 72 1 171 1 75 1 141 1 143 1 355 1 281 1 213 1 121 1 77 1 36 1 79 1 307 1 290 3 17 1 217 2 220 1 261 1 109 1 221 1 
72 1 156 1 129 1 213 1 282 1 36 1 77 1 27 1 79 1 149 1 290 2 61 1 307 1 95 2 217 2 220 1 190 1 221 1 
72 1 171 1 156 1 129 1 41 2 213 1 121 1 36 1 77 1 79 1 357 1 290 2 61 1 307 1 17 1 217 2 220 1 190 1 
156 1 129 2 41 2 27 1 95 2 190 2 72 2 171 1 213 1 121 1 77 1 36 1 79 2 149 1 307 1 61 1 290 4 17 1 217 2 220 1 109 1 221 1 
72 1 156 1 11 1 129 1 213 1 282 1 36 1 77 1 27 1 79 1 149 1 290 2 307 1 95 2 217 2 220 1 190 1 221 1 
72 1 171 1 156 1 11 1 129 1 41 2 213 1 121 1 36 1 77 1 79 1 357 1 290 2 307 1 17 1 217 2 220 1 190 1 
156 1 129 2 41 2 27 1 95 2 190 2 72 2 171 1 11 1 213 1 121 1 77 1 36 1 79 2 149 1 307 1 290 4 17 1 217 2 220 1 109 1 221 1 
156 1 129 2 41 2 27 1 95 2 190 2 72 2 171 1 213 1 121 1 77 1 36 1 79 2 149 1 290 4 307 1 17 1 217 2 220 1 109 1 221 1 
155 1 156 1 41 1 247 1 91 1 297 1 343 1 95 1 208 1 347 1 138 1 56 1 193 1 142 1 355 1 281 1 213 1 36 1 77 1 240 1 216 1 290 2 307 1 80 1 179 1 217 2 309 1 220 1 
156 1 41 1 247 1 91 1 297 1 343 1 95 1 208 1 257 1 300 1 138 1 56 1 142 1 237 1 355 1 281 1 213 1 36 1 77 1 240 1 216 1 290 2 307 1 80 1 179 1 217 2 309 1 220 1 
156 1 129 2 41 2 27 1 207 1 95 2 190 2 72 2 171 1 213 1 121 1 77 1 36 1 79 2 149 1 307 1 290 4 17 1 217 2 220 1 109 1 221 1 
155 1 156 1 41 2 129 2 296 1 91 1 27 1 297 1 95 2 208 1 347 1 138 1 190 2 72 2 171 1 193 1 142 1 355 1 281 1 121 1 213 1 36 1 77 1 240 1 79 2 216 1 149 1 290 4 307 1 17 1 80 1 217 2 309 1 220 1 291 1 109 1 221 1 
156 1 114 1 41 1 129 1 319 1 27 1 207 1 95 2 321 1 190 1 72 1 171 1 75 1 141 1 143 1 355 1 281 1 121 1 213 1 77 1 36 1 79 1 149 1 307 1 290 3 217 2 220 1 109 1 221 1 
244 1 245 1 156 2 317 1 41 10 248 1 27 3 225 2 28 2 95 9 136 1 230 1 169 1 70 2 117 1 350 1 171 3 121 3 77 2 36 2 15 1 79 6 149 3 307 2 290 19 19 1 17 3 217 4 109 3 221 3 
244 2 156 3 336 1 317 1 41 12 248 2 162 1 27 3 225 1 28 2 95 14 32 1 136 1 230 1 70 4 192 2 117 1 350 2 171 2 209 1 195 1 121 2 77 3 36 3 79 4 15 2 149 2 307 3 290 26 17 2 217 6 153 1 109 3 221 3 
317 1 41 21 320 1 225 1 95 20 136 1 230 1 189 1 192 1 195 1 15 1 149 4 290 41 17 4 62 1 107 1 153 1 109 4 204 1 245 1 244 3 156 3 336 1 337 1 248 2 27 5 162 1 28 4 32 1 169 1 70 4 350 3 117 1 171 5 209 1 121 4 36 3 77 3 79 8 123 1 307 3 217 6 221 4 
244 3 245 1 156 4 336 1 337 1 317 1 41 18 248 2 162 1 27 5 320 1 225 1 28 4 95 20 32 1 136 1 230 1 169 1 189 1 70 4 192 2 117 1 350 3 209 1 171 4 195 1 121 3 77 4 36 4 123 1 15 1 79 7 149 3 307 4 290 38 17 4 107 1 62 1 217 8 153 1 109 4 221 4 204 1 
244 2 245 2 156 2 336 1 337 1 317 1 41 25 248 1 162 1 27 8 320 1 225 1 28 4 95 27 32 1 136 1 230 1 189 1 70 4 192 1 117 1 350 4 209 1 171 8 173 2 195 1 121 7 77 2 36 2 123 1 15 1 79 14 149 7 307 2 290 52 17 7 107 1 62 1 217 4 153 1 109 7 221 7 
99 1 272 1 96 1 49 1 31 1 210 1 116 1 222 1 10 1 231 1 
29 1 69 1 
335 1 314 1 96 1 49 1 31 1 210 1 222 1 10 1 211 1 
111 1 1 1 2 1 280 1 210 1 222 1 10 1 144 1 285 2 93 1 214 1 272 1 96 1 31 1 49 1 116 1 21 1 231 1 
111 1 1 1 2 1 280 1 210 1 222 1 10 1 144 1 285 2 93 1 214 1 272 1 96 1 31 1 49 1 116 1 21 1 231 1 
111 1 1 1 2 1 280 1 210 1 222 1 10 1 144 1 285 2 93 1 214 1 272 1 96 1 31 1 49 1 116 1 21 1 231 1 
66 1 351 1 40 1 
66 1 351 1 40 1 
135 1 267 1 
135 1 267 1 40 1 
273 1 342 1 
64 1 222 1 247 1 93 1 342 1 29 1 96 1 49 1 31 1 273 1 321 2 69 1 191 1 75 2 280 1 210 1 141 2 10 1 281 2 355 2 144 1 59 1 285 1 177 1 14 1 21 1 242 1 
66 1 351 1 
135 1 267 1 40 1 
156 1 41 1 91 2 297 1 186 1 251 1 269 1 207 1 95 1 137 2 138 1 73 1 56 1 75 2 142 2 281 2 355 2 213 1 328 1 36 1 77 1 216 2 307 1 290 2 80 1 179 1 217 2 309 1 220 1 334 1 39 1 
142 2 184 1 296 1 91 2 249 1 145 1 43 1 164 1 133 1 216 2 288 1 80 1 20 1 22 2 346 1 52 1 309 1 71 1 325 1 
142 1 184 1 91 1 145 1 43 1 164 1 133 1 216 1 199 1 288 1 80 1 20 1 22 2 52 1 309 1 71 1 325 1 
301 1 142 1 91 1 249 1 92 1 297 1 343 1 216 1 270 1 288 1 80 1 218 1 309 1 138 1 
142 1 184 1 91 1 249 1 145 1 43 1 164 1 133 1 216 1 288 1 80 1 20 1 22 2 346 1 52 1 309 1 71 1 325 1 
197 1 
111 1 252 1 279 1 241 1 345 1 303 1 13 1 
111 2 5 1 132 1 252 1 30 1 67 1 299 1 228 1 170 1 234 1 101 1 279 1 34 1 280 1 144 1 13 1 126 1 
316 1 5 4 91 3 132 5 227 2 228 4 98 6 138 3 323 2 232 2 100 3 234 12 102 1 8 2 279 8 280 5 142 3 144 5 13 9 239 2 330 1 16 1 150 1 109 2 203 2 111 8 296 1 339 2 27 2 297 10 343 1 252 2 30 4 67 4 345 1 208 3 352 1 171 2 172 2 34 6 303 1 120 2 121 2 122 2 356 2 216 3 306 2 80 3 308 1 85 2 309 4 126 3 221 2 362 6 
244 1 111 5 336 1 5 2 162 1 27 2 132 1 187 1 28 1 252 2 30 2 67 2 32 1 228 2 98 5 323 1 352 1 234 6 350 1 8 2 209 1 171 2 279 5 280 1 34 3 195 1 144 1 121 2 13 8 239 1 126 1 109 2 221 2 312 1 362 5 
181 1 246 1 337 1 128 1 5 1 24 1 27 2 320 1 30 1 67 1 321 1 228 1 323 1 8 2 171 1 279 2 75 1 280 1 141 1 327 1 143 1 212 1 281 1 355 1 76 1 144 1 13 2 107 1 
111 1 279 1 303 1 5 1 13 1 252 1 30 1 67 1 228 1 345 1 
234 10 111 5 8 2 171 2 279 5 34 5 121 2 27 2 13 5 227 1 98 5 323 1 109 2 221 2 362 5 
132 1 111 1 252 1 280 1 144 1 126 1 
5 2 91 4 185 1 297 1 341 1 132 4 343 2 270 1 30 1 67 2 228 2 138 1 352 2 102 1 301 1 279 2 280 3 142 4 103 1 144 3 13 2 239 2 216 4 80 1 83 1 150 2 359 1 309 1 126 2 
155 1 156 1 128 1 41 1 247 1 91 1 297 1 343 1 321 2 208 1 347 1 138 1 75 2 193 1 141 2 142 1 143 2 281 3 355 3 213 1 77 1 36 1 240 1 216 1 290 1 307 1 80 1 179 1 217 2 331 1 309 1 220 1 
234 4 111 4 352 1 279 2 34 2 5 1 13 1 239 1 252 2 30 1 67 1 228 1 98 2 189 1 362 2 
96 1 49 1 305 1 
96 1 49 1 305 1 
96 1 273 1 49 1 90 1 231 1 
96 1 49 1 305 1 
96 1 49 1 151 1 
96 1 49 1 151 1 
96 1 49 1 151 1 
96 1 49 1 
31 1 210 1 
192 1 171 1 156 2 337 1 41 4 27 1 36 2 77 2 320 1 79 3 123 1 149 1 290 8 95 4 307 2 17 2 107 1 62 1 217 4 189 1 
171 1 337 1 41 3 27 1 320 1 123 1 79 2 95 3 290 6 17 2 241 1 62 1 107 1 189 1 
171 1 156 1 88 1 41 2 121 1 36 1 77 1 27 1 79 2 149 1 307 1 95 2 290 4 17 1 217 2 109 1 221 1 
244 1 245 1 350 1 171 1 41 4 121 1 27 1 79 2 28 2 149 1 290 7 95 3 17 1 109 1 221 1 
245 1 87 1 156 2 337 2 41 12 27 3 320 2 28 2 95 11 50 1 189 1 192 2 350 2 171 3 173 1 121 2 36 2 77 2 123 1 79 9 149 4 290 23 307 2 17 5 107 1 62 1 217 4 109 2 221 2 
28 1 290 1 41 1 
350 1 290 1 95 1 
171 1 156 1 88 1 41 3 121 1 77 1 36 1 27 1 79 3 149 1 307 1 290 6 95 3 227 1 17 2 217 2 109 1 221 1 
244 1 156 1 336 1 41 6 162 1 27 2 28 1 95 6 32 1 350 1 117 1 209 1 171 2 195 1 121 2 77 1 36 1 79 2 149 1 290 12 307 1 17 1 217 2 109 2 221 2 
171 1 337 1 41 3 27 1 320 1 79 2 149 1 95 3 290 6 17 1 107 1 
192 1 87 1 156 1 337 1 41 2 36 1 77 1 320 1 79 2 123 1 149 1 95 1 290 3 307 1 17 1 62 1 217 2 
181 1 117 1 171 2 156 1 337 2 41 5 77 1 36 1 27 2 320 2 79 5 149 2 307 1 95 5 290 10 17 3 107 1 217 2 
117 1 156 1 36 1 77 1 27 1 79 1 149 1 307 1 95 2 290 2 217 2 221 1 
117 1 171 1 156 1 41 2 121 1 36 1 77 1 27 1 79 2 149 1 307 1 95 2 290 4 17 1 217 2 109 1 221 1 
192 1 87 1 117 1 156 3 337 1 41 2 36 3 77 3 320 1 79 2 149 1 290 3 307 3 95 1 17 1 217 6 169 1 
244 1 245 1 87 1 156 5 88 1 337 3 41 18 27 5 320 3 28 4 95 16 189 1 169 1 192 2 117 1 350 3 171 5 196 1 121 3 77 5 36 5 123 1 79 12 149 5 307 5 290 34 17 7 107 2 62 1 217 10 109 3 180 1 221 3 63 1 
244 1 156 1 337 1 41 4 27 1 320 1 28 1 95 4 189 1 350 1 117 1 171 1 209 1 77 1 36 1 123 1 79 2 290 8 307 1 17 2 62 1 107 1 217 2 
244 1 245 1 156 2 88 1 337 1 41 5 27 2 320 1 28 2 95 6 189 1 117 1 350 1 171 1 209 1 77 2 36 2 123 1 79 3 149 1 290 11 307 2 17 2 107 1 62 1 217 4 109 1 221 1 
244 1 156 3 88 1 336 1 337 1 41 10 162 1 27 3 320 1 28 1 95 9 32 1 189 1 192 1 350 1 117 1 209 1 171 3 195 1 121 2 77 3 36 3 123 1 79 4 149 1 290 19 307 3 17 3 107 1 62 1 217 6 109 2 221 2 
244 1 156 3 88 1 336 1 337 1 41 7 162 1 27 3 320 1 28 1 95 10 32 1 189 1 192 1 350 1 117 1 209 1 171 2 195 1 121 1 77 3 36 3 123 1 79 5 149 2 290 17 307 3 17 3 107 1 62 1 217 6 109 2 221 2 
244 1 156 1 337 1 41 4 27 1 320 1 28 1 95 4 189 1 350 1 117 1 171 1 209 1 77 1 36 1 123 1 79 2 290 8 307 1 17 2 62 1 107 1 217 2 
244 1 156 1 336 1 41 6 162 1 27 2 28 1 95 6 32 1 350 1 117 1 209 1 171 2 195 1 121 2 77 1 36 1 79 2 149 1 290 12 307 1 17 1 217 2 109 2 221 2 
244 1 156 4 336 1 88 1 337 1 41 8 162 1 27 3 320 1 28 1 95 10 32 1 189 1 192 2 117 1 350 1 209 1 171 2 195 1 121 1 77 4 36 4 123 1 79 5 149 2 290 18 307 4 17 3 107 1 62 1 217 8 109 2 221 2 
244 1 156 4 336 1 41 7 162 1 27 3 28 1 95 9 32 1 169 1 192 2 117 1 350 1 209 1 171 2 195 1 121 2 77 4 36 4 79 6 149 3 290 16 307 4 17 3 217 8 109 3 221 3 
171 1 337 3 41 4 27 1 320 3 123 1 79 6 149 3 290 7 95 3 17 3 62 2 107 1 
244 1 156 4 336 1 337 1 41 8 162 1 27 3 320 1 28 1 95 10 32 1 189 1 169 1 192 2 117 1 350 1 209 1 171 2 195 1 121 1 77 4 36 4 123 1 79 4 149 1 290 18 307 4 17 3 107 1 62 1 217 8 109 2 221 2 
75 1 51 1 238 1 53 1 
55 1 78 1 226 1 75 1 51 1 283 1 238 1 53 1 262 1 
216 1 343 1 270 1 301 1 80 1 241 1 142 1 91 1 309 1 138 1 297 1 
23 1 75 1 193 1 141 1 142 1 355 2 281 2 247 1 91 1 297 1 240 1 343 1 216 1 80 1 321 1 208 1 309 1 138 1 
23 1 247 1 91 1 339 1 297 3 321 2 208 2 138 2 193 1 75 2 141 1 142 1 281 2 355 2 212 1 240 1 122 1 216 1 80 1 37 1 150 1 309 1 361 1 
23 1 247 1 91 2 339 1 26 1 297 3 321 2 208 2 257 1 138 2 75 2 141 1 142 2 281 2 355 2 212 1 240 1 122 1 216 2 80 1 37 1 150 1 309 1 361 1 
111 1 100 1 280 2 142 3 144 2 91 3 42 1 339 1 26 1 297 4 94 1 122 1 356 1 132 1 343 1 216 3 252 1 80 1 150 1 208 1 309 1 138 1 203 1 
111 1 100 1 172 1 280 2 142 3 144 2 91 3 339 1 26 1 297 4 122 1 356 1 132 1 343 1 216 3 252 1 80 1 150 1 208 1 309 1 138 1 203 1 
216 1 140 1 80 1 142 1 91 1 309 1 
206 1 73 1 140 1 142 6 296 1 115 1 91 7 268 1 297 3 147 1 343 2 216 7 254 1 80 2 308 1 208 1 309 3 137 1 138 2 325 1 202 1 
23 1 155 1 156 2 337 1 129 1 41 3 296 1 247 2 91 1 27 1 297 1 320 1 207 1 95 3 321 1 208 1 347 1 189 1 138 1 190 1 72 1 171 1 75 1 193 1 141 1 142 1 281 2 355 2 213 2 77 2 36 2 240 1 79 2 123 1 216 1 105 1 290 6 307 2 17 2 80 1 107 1 62 1 217 4 309 1 220 2 334 1 291 1 
111 1 5 2 91 1 297 2 132 2 343 1 252 1 30 2 67 2 345 1 228 2 100 1 102 1 279 1 172 1 280 3 142 1 303 1 144 3 120 1 13 1 356 1 216 1 306 1 242 1 85 1 126 1 203 1 
140 1 142 2 296 1 91 2 297 2 216 2 16 1 80 1 308 1 208 1 309 2 138 1 203 1 
301 1 142 4 296 1 91 4 26 1 297 1 343 1 216 4 270 1 80 1 219 1 309 1 138 1 
142 2 91 2 224 1 297 1 216 2 254 1 165 1 80 1 150 1 7 1 208 1 309 2 138 1 202 1 
216 1 343 1 80 1 20 1 142 1 22 1 91 1 52 1 309 1 145 1 
73 1 142 2 296 1 91 2 297 1 251 1 216 2 80 1 309 1 138 1 325 1 
73 1 206 1 301 1 142 4 296 1 91 5 115 1 297 3 343 1 216 5 270 1 80 2 150 1 219 1 309 2 138 2 
73 1 206 1 301 1 142 4 296 1 91 5 329 1 297 3 343 1 216 5 270 1 80 2 150 1 219 1 309 2 138 2 
23 1 75 1 141 1 142 1 355 2 281 2 247 1 91 1 297 1 240 1 343 1 216 1 80 1 321 1 208 1 309 1 257 1 138 1 
142 1 91 1 268 1 297 1 216 1 254 1 80 1 308 1 150 1 208 1 309 2 138 1 202 1 
113 1 75 1 355 1 281 1 338 1 328 1 284 1 186 1 39 1 
293 1 349 1 113 1 4 1 212 1 338 1 284 1 356 1 200 1 48 1 37 1 361 1 
113 1 4 1 247 1 338 1 284 1 
111 1 293 1 349 1 113 2 280 2 4 2 212 1 247 1 144 2 338 2 284 1 356 1 252 1 200 1 48 1 37 1 242 1 361 1 86 1 
241 1 104 1 84 1 205 1 
45 1 134 1 33 1 104 1 84 1 158 1 205 1 
259 1 158 1 65 1 
45 1 134 1 271 2 33 3 104 1 119 1 84 1 125 1 158 3 159 1 205 1 326 1 
233 1 45 1 134 1 265 1 33 2 104 1 84 1 158 2 205 1 
287 1 45 1 134 1 118 1 33 1 22 1 104 1 158 1 52 1 164 1 326 1 
45 1 134 1 33 1 104 1 158 1 205 1 326 1 
45 1 134 1 33 1 84 1 158 1 205 2 326 1 
57 1 9 1 104 1 158 2 134 2 45 2 33 2 276 1 205 1 326 1 
265 2 118 1 104 2 158 3 134 1 45 1 33 3 229 1 84 1 152 1 205 1 326 1 139 1 
265 1 104 1 158 2 35 1 145 1 164 1 133 1 134 1 45 1 33 2 22 2 84 1 52 1 205 1 326 1 
233 1 265 2 118 1 104 2 158 4 130 1 134 2 45 2 33 4 84 1 152 1 205 1 326 1 
45 1 134 1 33 1 104 1 84 1 158 1 205 1 326 1 
182 1 265 2 118 1 104 3 158 4 159 1 134 1 45 1 271 1 33 4 125 1 84 2 152 1 205 2 
45 1 134 1 265 1 194 1 33 2 175 1 68 1 158 1 326 1 
278 1 104 1 158 3 159 2 134 1 45 1 271 2 33 3 125 1 84 1 326 1 205 1 
148 1 47 1 104 2 250 2 
263 1 45 1 134 1 33 1 158 1 326 1 
45 1 134 1 265 1 33 2 104 1 229 1 84 1 158 2 205 1 326 1 
277 1 
45 1 134 1 33 1 104 1 84 1 158 1 205 1 326 1 
265 1 104 1 158 3 134 1 45 1 271 1 33 3 229 1 84 1 326 1 205 1 
182 1 118 1 104 1 152 1 
104 1 205 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 334 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 334 284 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
261 1 138 2 355 1 178 3 319 2 320 3 48 1 338 1 257 1 134 1 203 1 268 2 363 1 
320 9 319 2 192 1 292 2 48 6 125 2 28 1 257 1 134 1 203 3 327 2 79 1 106 1 261 4 82 1 138 2 355 1 178 9 142 1 337 1 338 1 144 2 376 1 268 5 66 1 216 1 242 1 363 2 
320 9 319 2 192 1 292 2 48 6 125 2 28 1 257 1 134 1 203 3 327 2 79 1 106 1 261 4 82 1 138 2 355 1 178 9 142 1 337 1 338 1 144 2 376 1 268 5 66 1 216 1 242 1 363 2 
320 10 319 2 192 1 292 2 48 7 125 2 28 1 257 1 134 1 203 4 327 2 79 1 106 1 261 5 82 1 138 2 355 1 178 10 142 1 337 1 338 1 144 2 376 1 268 6 66 1 216 1 242 1 363 2 
320 7 319 2 192 1 292 2 48 4 125 2 28 1 257 1 134 1 203 2 327 1 79 1 106 1 261 3 82 1 138 2 355 1 178 7 142 1 337 1 338 1 144 2 376 1 268 4 66 1 242 1 363 2 
261 2 138 1 355 1 178 4 319 1 320 4 48 3 292 1 338 1 125 1 144 1 28 1 257 1 203 1 268 3 216 1 327 2 106 1 
138 1 355 1 178 2 142 1 319 1 320 2 124 1 338 1 125 1 144 1 257 1 101 1 268 1 66 1 230 1 363 1 
346 1 320 9 319 2 192 1 48 7 292 1 125 1 28 1 257 1 203 3 134 1 327 2 106 1 261 4 82 1 138 2 355 1 178 9 161 1 338 1 144 1 268 5 216 1 363 1 
346 1 320 9 319 2 192 1 48 7 292 1 125 1 28 1 257 1 203 3 134 1 327 2 106 1 261 4 82 1 138 2 355 1 178 9 161 1 338 1 144 1 268 5 216 1 363 1 
330 1 176 1 274 1 26 1 181 1 97 1 279 1 215 1 358 1 16 1 269 1 258 1 19 1 80 1 
195 1 
313 1 176 1 215 2 195 1 90 1 285 1 19 2 265 1 
176 2 139 1 10 1 21 2 223 1 195 1 27 1 265 1 313 1 295 1 128 1 215 5 31 2 341 1 19 5 90 2 316 1 361 1 118 2 
313 1 186 1 195 1 
318 1 195 1 204 2 
279 2 352 1 358 2 16 2 274 2 26 2 181 2 80 1 
92 1 0 1 43 1 274 2 290 1 51 1 156 1 26 3 351 1 170 1 279 3 352 1 368 1 130 1 227 1 282 1 297 1 300 1 326 1 32 2 80 1 303 2 262 1 108 1 177 1 356 1 14 2 181 2 286 2 112 1 184 1 238 2 358 2 16 2 88 1 270 1 342 1 
279 1 358 1 16 1 274 1 269 1 258 1 26 1 181 1 97 1 80 1 
332 1 250 1 195 1 96 1 276 1 26 1 169 1 279 1 313 1 215 1 16 1 135 1 269 1 19 1 
332 1 274 1 195 1 96 1 276 1 26 1 181 1 169 1 279 1 313 1 358 1 215 2 16 1 269 1 19 2 
183 1 176 1 215 1 90 1 19 1 
313 1 176 1 215 2 195 1 90 1 143 1 19 2 265 1 
215 1 90 1 19 1 
262 1 43 1 177 1 72 1 273 1 263 1 26 2 181 1 351 1 279 2 112 1 238 1 358 1 227 1 297 1 88 1 16 1 326 1 32 1 303 1 
155 1 274 1 26 2 322 1 181 1 279 2 352 2 358 1 16 2 
44 1 72 1 117 1 
262 1 177 1 43 1 26 1 365 1 351 1 279 1 112 1 352 1 238 1 227 1 88 1 297 1 326 1 32 1 303 1 
352 1 186 1 
279 3 352 1 358 3 273 1 274 1 16 3 26 3 181 3 
279 1 358 1 16 1 269 1 26 1 181 1 97 1 
279 1 358 1 155 1 16 1 274 1 269 1 26 1 181 1 322 1 
92 1 43 1 273 1 274 2 290 1 96 1 276 1 156 1 26 4 322 1 351 1 169 1 170 1 279 4 352 1 227 1 282 1 297 1 369 1 300 1 326 1 32 1 80 1 303 1 262 1 108 1 232 1 177 1 332 1 356 1 263 1 14 2 181 3 286 1 112 1 184 1 238 1 358 3 215 1 88 1 16 3 269 1 342 1 19 1 
279 2 352 1 358 1 273 1 16 2 250 1 298 1 26 2 181 1 
273 2 332 1 274 1 195 1 276 1 263 1 96 1 26 3 322 1 181 3 169 1 279 3 215 1 358 3 16 3 269 1 369 1 19 1 136 1 
273 1 72 1 274 1 26 2 322 1 181 2 279 2 358 2 16 2 117 1 
262 1 177 1 43 1 26 1 351 1 279 1 112 1 352 1 238 1 227 1 88 1 297 1 326 1 32 1 303 1 
262 1 177 1 43 1 26 1 36 1 351 1 279 1 352 1 238 1 37 1 227 1 297 1 326 1 32 1 303 1 
92 1 69 1 44 2 154 1 72 2 74 1 290 1 194 1 123 1 170 1 4 1 130 2 282 2 300 1 56 1 235 1 14 2 286 4 184 1 38 1 148 1 342 1 67 1 117 2 
279 1 358 1 16 1 269 1 26 1 181 1 169 1 349 1 
273 2 274 1 250 1 263 1 26 5 181 4 322 1 279 5 352 1 358 4 16 5 189 1 298 1 159 1 
279 2 358 2 16 2 269 1 26 2 181 2 97 1 349 1 
353 1 83 1 100 1 
98 1 353 2 100 2 64 1 217 1 168 1 
353 1 100 1 
353 1 100 1 
98 1 64 1 
98 1 64 1 
98 1 64 1 
353 1 100 1 58 1 
353 1 100 1 58 1 
353 1 100 1 58 1 
171 1 353 1 100 1 
171 1 353 1 100 1 
171 1 353 1 100 1 
70 1 247 2 345 2 140 2 73 1 47 1 373 1 195 1 364 2 336 1 168 1 314 2 61 1 113 3 353 2 215 2 5 1 100 2 19 2 
247 1 345 1 364 1 26 2 157 1 279 2 352 1 199 1 353 1 100 1 233 1 83 1 181 2 59 1 113 1 314 1 61 1 358 2 215 1 315 1 146 1 16 2 378 1 19 1 
144 2 15 1 340 2 292 1 124 1 
144 1 292 1 125 1 
144 1 124 1 125 1 
144 3 15 1 340 1 292 2 278 1 124 1 
144 2 15 1 272 1 340 1 292 1 124 1 
69 1 318 1 154 1 2 1 21 1 24 2 291 2 195 2 27 2 123 1 157 1 198 1 295 1 281 1 31 1 259 1 204 3 176 4 233 1 111 2 265 1 59 1 313 1 38 1 215 5 187 1 63 1 90 1 19 5 379 1 316 3 118 1 
76 1 274 1 195 1 26 1 97 1 279 1 258 1 80 1 330 1 176 2 181 1 183 1 312 1 313 1 215 2 239 1 358 1 16 1 269 1 90 1 19 2 
69 1 318 2 2 1 154 1 21 1 195 3 291 2 24 2 123 1 27 2 198 1 281 1 31 1 204 4 176 2 111 1 59 1 313 1 38 1 187 1 215 3 19 3 379 1 361 1 316 3 118 1 
69 2 318 3 2 1 154 2 21 1 193 1 195 4 24 4 291 4 123 2 27 4 198 1 281 1 31 1 204 7 176 3 333 1 307 1 111 2 59 2 313 1 38 2 215 4 187 1 19 4 379 2 361 1 316 5 118 1 
211 1 
186 1 380 1 351 1 
306 1 351 1 
297 1 351 1 
262 1 372 1 297 1 380 2 105 1 351 3 
262 1 297 1 351 1 
173 1 351 1 
305 1 69 1 343 1 179 2 56 2 194 3 123 1 348 1 286 7 350 1 85 1 145 1 52 1 130 4 282 3 54 1 324 1 152 1 
69 4 343 2 154 3 222 1 290 1 194 10 196 1 123 4 350 1 170 1 52 1 323 3 226 4 130 16 54 2 282 15 324 2 8 1 300 1 301 1 305 1 179 3 56 5 14 2 310 1 286 31 85 2 145 1 38 3 241 1 342 1 379 3 165 1 152 5 
69 1 343 1 222 1 251 1 290 2 194 4 123 1 170 2 52 1 130 5 324 1 282 4 54 1 300 2 305 1 179 2 56 3 14 4 286 9 85 1 145 1 342 2 18 1 152 1 
305 1 69 1 343 1 179 2 56 2 194 3 123 1 286 7 350 1 85 1 145 1 52 1 130 4 282 3 54 1 324 1 152 1 
305 1 69 1 343 1 179 2 56 2 194 3 123 1 286 7 350 1 85 1 145 1 52 1 130 4 282 3 54 1 324 1 152 1 
138 1 177 1 178 1 319 1 320 1 13 1 167 1 208 2 347 1 293 1 351 1 238 1 227 1 297 1 65 2 326 1 283 1 32 1 104 1 303 1 362 2 151 1 363 2 
107 1 138 1 178 1 319 1 320 1 208 1 292 1 278 1 124 1 125 1 374 1 144 2 256 1 238 1 227 1 257 1 65 1 228 1 326 1 328 1 218 1 32 1 41 1 303 1 362 1 363 1 
320 2 319 1 48 1 292 1 278 1 124 1 125 1 227 1 257 1 228 1 326 1 32 1 328 1 303 1 107 1 138 1 355 1 178 2 208 1 338 1 374 1 144 2 238 1 163 1 268 1 65 1 218 1 362 1 41 1 363 1 
320 3 319 1 292 1 48 2 278 1 293 1 124 1 125 1 256 1 227 1 228 1 326 1 32 1 328 1 303 1 107 1 138 1 355 1 178 3 208 1 210 1 338 1 374 1 144 2 238 1 268 1 65 1 362 1 41 1 363 1 
320 2 48 2 292 1 278 1 124 1 125 1 256 1 227 1 228 1 326 1 32 1 303 1 107 1 355 1 178 2 208 1 210 1 338 1 374 1 144 2 238 1 268 1 65 1 362 1 363 1 
304 1 
246 2 2 1 249 1 250 1 195 2 252 2 96 1 49 1 351 1 295 1 200 1 297 1 102 1 7 1 104 1 204 2 303 2 13 1 110 2 265 3 313 1 215 5 16 1 269 1 19 5 164 1 316 2 118 1 318 2 21 1 23 1 276 1 27 2 366 1 277 1 26 1 169 1 78 4 279 1 131 2 227 1 135 1 326 1 31 1 32 2 329 2 81 1 177 2 332 1 339 1 238 2 375 2 40 2 287 1 90 6 
332 1 250 1 276 1 96 1 49 1 285 1 366 1 277 1 26 1 265 1 78 2 169 1 339 1 279 1 215 3 375 1 102 1 16 1 269 1 135 1 90 2 19 3 
250 1 96 1 276 1 252 1 195 1 49 1 26 1 277 1 366 1 169 1 78 3 279 1 102 1 135 1 332 1 285 1 265 1 339 1 313 1 215 3 16 1 269 1 90 1 19 3 
250 1 96 1 276 1 252 1 195 1 49 1 26 1 277 1 366 1 169 1 78 3 279 1 102 1 135 1 332 1 285 1 265 1 339 1 313 1 215 3 40 1 375 1 16 1 269 1 19 3 90 2 
94 1 250 1 96 1 195 1 49 1 97 1 295 1 200 1 102 1 258 1 265 1 313 1 215 3 358 1 16 2 269 2 19 3 316 1 118 1 166 1 21 1 274 1 276 1 26 2 366 1 277 1 27 1 78 2 169 1 279 2 132 1 135 1 31 1 80 1 330 1 34 1 332 1 285 1 181 1 339 1 375 2 40 2 90 3 
246 2 250 1 96 1 252 2 195 2 49 1 295 1 200 1 102 1 7 1 204 2 110 2 265 2 313 1 215 4 16 1 269 1 19 4 316 1 118 1 318 2 21 1 23 1 276 1 26 1 366 1 277 1 27 1 78 4 169 1 279 1 131 2 135 1 31 1 329 2 332 1 339 1 40 2 375 2 90 4 
21 1 274 1 250 1 195 1 96 1 276 1 49 1 27 1 26 2 277 1 366 1 97 1 169 1 78 2 279 2 295 1 200 1 132 1 102 1 258 1 135 1 31 1 80 1 330 1 34 1 332 1 181 1 339 1 313 1 358 1 215 2 16 2 269 2 19 2 316 1 118 1 
21 1 274 1 250 1 195 1 96 1 276 1 49 1 27 1 26 2 277 1 366 1 97 1 169 1 78 2 279 2 295 1 200 1 132 1 102 1 258 1 135 1 31 1 80 1 330 1 34 1 332 1 181 1 339 1 313 1 358 1 215 2 16 2 269 2 19 2 316 1 118 1 
120 2 246 2 21 1 250 1 3 1 195 1 252 2 197 2 96 1 276 1 49 1 27 1 26 1 277 1 366 1 169 1 78 4 279 1 295 1 102 1 7 1 354 1 135 1 31 1 204 2 329 2 332 1 265 2 339 1 313 1 215 4 375 2 40 2 16 1 269 1 90 4 19 4 288 1 316 1 219 1 118 1 
94 1 274 1 250 1 195 1 96 1 276 1 252 1 49 1 26 2 277 1 366 1 97 1 169 1 78 3 279 2 102 1 258 1 135 1 80 1 330 1 332 1 181 1 339 1 313 1 358 1 215 2 40 1 375 1 16 2 269 2 19 2 90 1 
94 1 274 1 250 1 195 1 96 1 276 1 252 1 49 1 26 2 277 1 366 1 97 1 169 1 78 3 279 2 102 1 258 1 135 1 80 1 330 1 332 1 181 1 339 1 313 1 358 1 215 2 40 1 375 1 16 2 269 2 19 2 90 1 
246 2 250 1 96 1 197 2 252 2 195 1 49 1 295 1 102 1 7 1 204 2 265 2 313 1 215 4 16 1 269 1 19 4 316 1 118 1 120 2 21 1 23 1 276 1 26 1 366 1 277 1 27 1 78 4 169 1 279 1 135 1 31 1 329 2 332 1 339 1 40 2 375 2 90 4 288 1 
92 2 0 2 45 1 273 1 75 1 290 2 26 1 351 3 279 1 170 2 256 1 368 1 227 2 53 1 130 1 282 1 297 2 229 1 326 2 300 2 32 8 104 1 303 7 177 2 13 1 356 1 14 4 181 1 286 2 86 1 184 2 238 8 358 1 163 1 16 1 359 1 360 1 148 1 342 2 
92 1 69 1 44 1 154 1 72 1 274 1 194 1 290 1 26 1 123 1 322 1 254 1 170 1 279 1 130 1 282 2 300 1 56 1 14 2 181 1 286 3 184 1 358 1 38 1 16 1 147 1 342 1 379 1 117 1 
92 1 69 1 44 1 72 1 290 1 194 2 123 1 170 1 352 2 52 1 130 3 54 1 282 3 300 1 305 1 179 1 56 2 14 2 286 6 85 1 184 1 145 1 186 1 148 1 342 1 117 1 
92 1 69 1 44 11 154 2 72 11 194 2 290 2 123 2 294 1 254 1 170 2 352 1 323 3 226 3 368 1 130 8 282 6 300 2 301 1 56 1 12 1 11 1 356 1 14 4 286 14 184 2 38 1 162 1 241 1 342 2 379 2 152 1 117 4 
92 1 43 1 273 1 290 1 365 1 121 1 26 2 351 1 254 1 170 1 279 2 367 1 352 1 368 1 227 1 130 1 297 1 282 1 326 1 300 1 32 1 303 1 262 1 177 1 263 1 356 1 14 2 181 1 286 2 112 1 184 1 238 1 358 1 88 1 16 1 342 1 243 1 117 1 
92 3 43 2 344 2 44 7 154 2 290 3 194 8 156 2 254 1 351 2 352 2 52 1 296 1 256 1 54 1 297 2 300 3 303 3 305 1 262 2 56 4 356 1 263 1 14 6 264 2 112 2 358 1 16 1 68 1 117 7 69 3 273 1 72 7 25 2 26 3 123 3 279 3 170 3 368 1 227 2 130 10 282 10 326 2 32 3 33 2 177 1 179 1 234 1 181 1 286 20 85 1 145 1 184 3 238 3 38 2 88 2 342 3 379 2 152 4 
92 1 44 1 154 1 72 1 194 1 290 1 14 2 123 1 286 2 170 1 184 1 4 1 130 2 148 1 300 1 342 1 152 1 117 1 
92 1 69 1 44 1 56 1 72 1 74 1 194 1 290 1 14 2 286 2 170 1 184 1 38 1 282 2 148 1 300 1 342 1 117 1 
92 1 69 1 154 1 44 2 72 2 290 1 194 2 123 1 170 1 130 2 282 2 300 1 56 1 14 2 286 4 184 1 38 1 148 1 342 1 379 1 117 2 152 1 
92 1 44 1 154 1 72 1 75 1 194 1 290 1 14 2 123 1 286 2 170 1 184 1 4 1 130 2 300 1 342 1 152 1 117 1 
92 1 69 1 44 1 56 1 72 1 75 1 74 1 194 1 290 1 14 2 286 2 170 1 184 1 38 1 282 2 300 1 342 1 117 1 
92 1 69 1 44 2 154 1 56 1 72 2 75 1 194 2 290 1 14 2 123 1 286 4 170 1 184 1 38 1 130 2 282 2 300 1 342 1 379 1 152 1 117 2 
92 1 69 1 44 2 154 1 56 1 72 2 194 2 290 1 14 2 123 1 286 4 170 1 184 1 38 1 130 2 282 2 300 1 342 1 379 1 152 1 117 2 
92 1 43 1 290 1 156 1 26 1 351 1 279 1 170 1 352 1 368 1 130 1 227 1 297 1 282 1 326 1 300 1 32 1 303 1 262 1 177 1 356 1 14 2 286 2 112 1 184 1 238 1 88 1 342 1 
92 1 43 1 221 1 290 1 26 1 351 1 279 1 170 1 352 1 368 1 130 1 227 1 297 1 282 1 326 1 300 1 32 1 303 1 262 1 177 1 356 1 14 2 36 1 286 2 184 1 238 1 37 1 342 1 
92 1 69 1 44 2 154 1 56 1 72 2 194 2 290 1 14 2 123 1 286 4 254 1 170 1 184 1 38 1 130 2 282 2 300 1 342 1 379 1 152 1 117 2 
92 1 69 1 43 1 44 2 154 1 72 2 194 2 290 1 156 1 25 1 123 1 26 1 351 1 279 1 170 1 130 2 227 1 282 2 297 1 326 1 300 1 32 1 303 1 262 1 56 1 14 2 286 4 112 1 184 1 238 1 38 1 88 1 163 1 342 1 379 1 152 1 117 2 
92 1 69 1 154 1 44 1 72 1 274 1 194 1 290 1 26 1 123 1 322 1 254 1 170 1 279 1 130 2 282 1 300 1 14 2 181 1 286 3 60 1 184 1 38 1 358 1 16 1 342 1 379 1 152 1 117 1 
190 2 69 3 154 3 290 2 194 6 321 1 123 3 170 2 323 1 226 2 201 1 130 9 282 10 300 2 301 1 56 3 207 1 180 1 14 4 286 19 212 1 38 3 267 1 241 1 342 2 18 1 379 3 91 2 116 1 152 3 
244 1 69 2 190 4 154 3 222 2 194 4 290 3 321 2 123 3 170 3 323 2 226 2 201 1 130 14 30 1 282 12 174 1 300 3 301 2 56 2 207 2 209 1 335 1 14 6 286 26 213 1 38 2 267 1 342 3 18 1 379 3 91 1 152 2 116 1 
244 1 190 4 69 5 154 4 275 1 222 1 290 3 194 8 321 1 123 5 170 3 52 1 323 3 226 4 201 1 130 20 54 1 30 1 282 21 174 1 300 3 301 3 305 1 179 1 56 4 207 2 209 1 180 1 335 1 14 6 286 41 85 1 213 1 145 1 38 4 267 1 241 1 342 3 18 1 379 4 91 1 116 1 152 4 
244 1 190 4 69 4 154 4 275 1 222 2 290 4 194 7 321 1 123 5 170 4 52 1 323 3 226 4 201 1 130 20 54 1 30 1 282 18 174 1 300 4 301 3 305 1 179 1 56 4 207 2 209 1 180 1 335 1 14 8 286 38 85 1 213 1 145 1 38 3 267 1 241 1 342 4 18 1 379 4 91 1 116 1 152 3 
244 1 190 4 69 8 154 7 222 1 290 2 194 14 321 1 123 8 170 2 52 1 323 4 226 4 201 1 130 27 54 1 30 1 282 25 174 1 300 2 301 2 305 1 179 1 56 7 12 2 207 1 209 1 335 1 14 4 286 52 85 1 213 1 145 1 38 7 267 1 241 2 342 2 18 1 379 7 91 1 116 1 152 7 
317 1 314 1 70 1 353 1 247 1 345 1 100 1 47 1 364 1 168 1 
199 1 83 1 
266 1 119 1 314 1 353 1 247 1 345 1 100 1 364 1 84 1 
70 1 247 1 345 1 140 1 73 1 47 1 373 1 195 1 364 1 336 1 168 1 61 1 314 1 113 2 353 1 215 1 100 1 19 1 
70 1 247 1 345 1 140 1 73 1 47 1 373 1 195 1 364 1 336 1 168 1 61 1 314 1 113 2 353 1 215 1 100 1 19 1 
70 1 247 1 345 1 140 1 73 1 47 1 373 1 195 1 364 1 336 1 168 1 61 1 314 1 113 2 353 1 215 1 100 1 19 1 
62 1 58 1 217 1 
62 1 58 1 217 1 
371 1 171 1 
371 1 171 1 217 1 
146 1 315 1 
20 1 247 1 345 1 364 1 26 2 157 1 279 2 352 1 199 1 353 1 100 1 176 1 140 1 233 1 83 1 336 1 181 2 59 1 314 1 113 1 215 1 358 2 315 1 146 1 16 2 378 1 19 1 
62 1 58 1 
371 1 171 1 217 1 
92 1 0 2 248 1 290 1 26 2 122 1 351 1 254 1 279 2 170 1 158 1 368 1 227 1 53 1 130 1 297 1 282 1 326 1 300 1 32 2 137 1 303 2 356 1 14 2 286 2 184 1 238 2 16 2 359 1 342 1 42 1 
245 1 177 1 109 1 13 1 347 1 351 1 238 1 227 1 297 1 65 1 326 1 32 1 104 1 303 1 
107 1 245 1 292 1 278 1 124 1 125 1 144 2 256 1 238 1 227 1 65 1 299 1 228 1 326 1 149 1 32 1 328 1 303 1 
107 1 245 1 292 1 278 1 124 1 125 1 144 2 256 1 238 2 227 1 163 1 65 1 299 1 228 1 326 1 149 1 32 2 328 1 303 2 
107 1 292 1 278 1 124 1 125 1 144 2 256 1 238 1 227 1 240 1 65 1 228 1 326 1 149 1 32 1 328 1 303 1 
202 1 
10 1 21 1 223 1 195 1 27 1 295 1 313 1 31 1 316 1 118 1 
69 2 344 1 318 5 154 2 46 2 291 5 24 5 195 5 123 2 27 5 311 1 38 2 379 2 204 10 316 5 
313 1 215 1 195 1 19 1 90 1 265 1 
220 1 71 1 2 2 21 2 249 1 27 2 351 1 295 1 227 1 297 1 326 1 31 2 32 4 104 1 303 4 81 2 177 2 57 1 13 1 357 2 265 2 238 4 215 3 90 4 19 3 164 1 361 1 316 2 118 2 
313 1 10 1 186 1 223 1 195 1 27 1 316 1 
318 1 21 1 195 2 27 1 295 1 200 1 131 1 31 1 204 1 110 1 265 1 313 1 215 1 90 1 19 1 316 1 118 1 
344 2 2 2 154 2 46 2 291 6 195 8 253 2 351 10 295 4 99 2 297 3 303 3 9 2 204 12 262 3 10 1 306 3 206 1 309 2 357 1 265 3 311 2 313 2 215 5 163 1 19 5 316 9 118 4 271 2 69 2 318 6 71 1 21 4 223 1 276 2 24 6 123 2 27 8 227 3 173 2 29 1 325 1 326 4 31 4 32 3 81 1 331 2 177 1 372 1 238 3 38 2 90 5 380 2 379 2 
244 1 69 2 318 3 2 1 154 2 46 2 21 2 24 5 291 5 195 5 27 5 123 2 295 2 323 1 226 1 30 1 174 1 31 2 301 1 204 6 81 1 209 1 311 1 265 1 213 1 313 2 215 1 38 2 114 1 19 1 90 1 115 1 379 2 316 8 118 2 
69 1 46 2 21 1 274 1 26 1 123 2 27 2 97 1 279 1 295 1 54 1 258 1 31 1 80 1 330 1 34 1 35 1 181 1 311 1 85 1 145 1 215 1 358 1 16 1 269 1 19 1 316 2 118 1 
92 1 43 1 274 2 290 1 156 1 26 3 351 1 170 1 279 3 352 1 227 1 282 1 297 1 300 1 326 1 32 1 303 1 80 1 262 1 108 1 177 1 356 1 14 2 181 2 286 1 112 1 184 1 238 1 358 2 16 2 88 1 342 1 
318 2 179 1 2 1 21 1 291 2 24 2 195 4 27 2 295 1 313 2 31 1 204 4 316 1 118 1 81 1 
247 1 345 1 146 1 47 1 17 1 
247 1 345 1 50 1 
247 1 345 1 50 1 
247 1 345 1 50 1 
127 1 247 1 345 1 
127 1 247 1 345 1 
127 1 247 1 345 1 
247 1 345 1 
353 1 100 1 
69 2 56 3 35 1 290 1 194 5 14 2 123 2 286 10 170 1 85 2 145 1 130 5 54 2 282 5 300 1 342 1 18 1 152 2 
154 1 290 1 194 1 14 2 123 1 286 2 170 1 130 2 300 1 18 1 342 1 152 1 
69 1 154 1 56 1 194 2 290 1 14 2 123 1 286 4 170 1 38 1 130 2 282 2 300 1 18 1 342 1 379 1 152 1 
56 1 222 1 290 3 194 2 180 1 14 6 286 3 170 3 85 1 130 1 172 1 282 2 54 1 300 3 18 1 342 3 152 1 
69 5 154 3 222 2 290 5 194 12 196 1 123 5 170 5 52 1 323 3 226 4 129 1 130 16 172 1 54 3 282 18 8 1 300 5 301 1 305 1 179 1 56 7 310 1 180 1 14 10 286 34 85 3 145 2 38 3 241 1 342 5 18 1 379 3 152 5 
305 1 69 1 179 1 56 2 222 1 194 3 290 2 123 1 14 4 286 8 170 2 85 1 145 1 52 1 130 4 282 4 54 1 300 2 342 2 152 1 
305 1 69 1 179 1 56 2 194 2 123 1 286 6 85 1 52 1 145 1 186 1 130 3 282 3 54 1 
69 1 154 1 56 1 194 2 290 1 14 2 123 1 286 4 170 1 129 1 38 1 130 2 282 2 300 1 342 1 379 1 152 1 
69 1 154 1 56 1 194 2 123 1 286 7 323 1 226 2 38 1 130 3 282 4 241 1 301 1 379 1 152 1 
69 3 154 2 222 2 194 9 290 2 123 3 170 2 52 1 323 2 226 2 130 11 172 1 54 2 282 12 300 2 305 1 179 1 56 5 12 1 14 4 286 23 85 2 145 1 38 2 162 1 241 1 342 2 379 2 152 4 
226 1 282 1 286 1 
323 1 130 1 286 1 
69 1 344 1 154 1 56 2 290 1 194 3 14 2 123 1 286 6 170 1 129 1 38 1 130 3 282 3 300 1 342 1 379 1 152 1 
244 1 69 2 154 2 290 1 194 2 123 2 170 1 323 1 226 1 130 6 282 6 30 1 300 1 174 1 301 1 56 1 209 1 14 2 286 12 213 1 38 2 342 1 18 1 379 2 152 1 
69 1 56 1 194 2 123 1 286 6 85 1 145 1 130 3 282 3 54 1 152 1 
305 1 56 1 222 1 194 2 290 1 14 2 286 3 85 1 170 1 52 1 130 1 172 1 54 1 282 2 300 1 342 1 152 1 
69 1 290 1 194 2 123 1 170 1 323 1 52 1 226 1 130 4 282 4 54 1 300 1 301 1 305 1 179 1 56 2 14 2 286 8 85 1 213 1 145 1 342 1 18 1 
69 1 154 1 290 2 194 3 123 2 170 2 52 1 323 1 226 2 129 1 130 6 54 1 282 5 300 2 301 1 305 1 179 1 56 2 14 4 286 11 85 1 213 1 145 1 241 1 18 1 342 2 379 1 152 1 
244 1 69 3 154 2 222 1 290 3 194 4 123 3 170 3 52 1 323 1 129 1 226 1 130 9 54 1 30 1 282 10 300 3 174 1 301 1 305 1 179 1 56 3 209 1 14 6 286 19 85 1 213 1 145 1 38 2 342 3 18 1 379 2 152 1 
244 1 69 2 154 2 222 1 290 3 194 5 123 3 170 3 52 1 323 1 129 1 226 1 130 10 54 1 282 7 30 1 300 3 174 1 301 1 305 1 179 1 56 3 209 1 14 6 286 17 85 1 213 1 145 1 38 1 342 3 18 1 379 2 152 2 
69 1 290 1 194 2 123 1 170 1 323 1 52 1 226 1 130 4 282 4 54 1 300 1 301 1 305 1 179 1 56 2 14 2 286 8 85 1 213 1 145 1 342 1 18 1 
244 1 69 2 154 2 290 1 194 2 123 2 170 1 323 1 226 1 130 6 282 6 30 1 300 1 174 1 301 1 56 1 209 1 14 2 286 12 213 1 38 2 342 1 18 1 379 2 152 1 
244 1 69 2 154 2 222 2 290 4 194 5 123 3 170 4 52 1 323 1 226 1 129 1 130 10 54 1 30 1 282 8 174 1 300 4 301 1 305 1 179 1 56 3 209 1 14 8 286 18 85 1 213 1 145 1 38 1 342 4 18 1 379 2 152 2 
244 1 69 2 154 3 222 2 290 4 194 6 123 3 170 4 323 1 226 1 130 9 30 1 282 7 174 1 300 4 301 1 56 3 209 1 14 8 180 1 286 16 213 1 38 2 18 1 342 4 379 3 152 3 
305 2 69 1 56 3 194 6 123 1 286 7 85 3 52 1 145 1 130 3 282 4 54 3 152 3 
244 1 69 2 154 2 222 2 290 4 194 4 123 3 170 4 52 1 323 1 226 1 130 10 54 1 30 1 282 8 174 1 300 4 301 1 305 1 179 1 56 3 209 1 14 8 180 1 286 18 85 1 213 1 145 1 38 1 18 1 342 4 379 2 152 1 
334 1 
284 1 231 1 1 1 280 1 225 1 334 1 
177 1 13 1 351 1 238 4 39 1 227 1 133 1 163 1 297 1 326 1 32 4 104 1 303 4 
262 1 22 1 205 1 357 1 351 1 238 2 214 1 227 1 297 1 55 1 326 2 32 2 68 1 303 2 
107 1 144 1 238 1 177 1 227 1 326 1 32 1 124 1 303 1 125 1 
256 1 238 2 227 1 297 1 163 1 359 1 326 1 32 2 137 1 303 2 351 1 
177 1 45 1 13 1 357 1 351 3 238 5 227 2 133 1 163 1 297 2 360 1 359 1 326 2 32 5 104 1 303 4 
177 1 45 1 13 1 357 1 351 3 238 5 185 1 227 2 133 1 163 1 297 2 359 1 326 2 32 5 104 1 303 4 
238 1 177 1 186 1 227 1 297 1 13 1 326 1 32 1 104 1 303 1 351 1 
262 1 43 1 177 1 273 1 26 2 181 1 351 1 279 2 352 1 238 1 358 1 227 1 297 1 16 1 88 1 326 1 32 1 303 1 
262 2 43 1 332 1 273 1 26 2 181 2 357 1 169 1 351 3 279 2 352 1 238 1 358 1 227 1 173 1 297 2 16 2 88 1 269 1 326 1 32 1 9 1 303 1 
43 1 273 1 26 2 351 3 169 1 279 2 352 1 227 1 173 1 297 2 326 1 32 2 303 2 9 1 262 2 332 1 357 1 181 2 238 2 37 1 358 1 39 1 16 2 269 1 
153 1 276 1 195 1 351 4 227 1 173 1 297 1 326 1 32 3 303 3 9 1 262 1 306 1 177 1 357 1 313 1 238 3 215 2 39 1 90 1 19 2 380 1 150 1 
262 1 177 1 306 1 195 1 276 1 357 1 351 4 313 1 238 3 99 1 215 2 39 1 227 1 173 1 297 1 326 1 19 2 32 3 90 1 380 1 9 1 303 3 
86 1 238 1 227 1 326 1 32 1 303 1 
262 1 0 1 177 2 45 1 141 1 372 1 22 1 205 1 351 3 86 1 256 1 238 7 227 2 163 1 297 2 359 1 360 1 229 1 326 3 32 7 303 6 
92 2 43 1 44 1 290 2 194 2 156 1 254 1 351 1 352 2 52 1 297 1 54 1 300 2 303 1 262 1 305 1 56 2 14 4 112 1 358 1 163 1 16 1 117 1 69 1 273 1 72 1 25 1 26 2 123 1 279 2 170 2 227 1 130 3 282 3 326 1 32 1 33 1 179 1 181 1 286 6 85 1 184 2 145 1 238 1 88 1 342 2 42 1 
71 1 21 2 223 1 195 1 276 1 27 1 253 1 351 2 295 2 99 1 31 2 32 1 303 1 331 1 176 1 10 1 177 1 306 1 309 1 265 1 313 1 238 1 215 3 19 3 90 2 380 1 316 1 118 2 
262 1 372 1 206 1 351 2 86 1 238 2 227 1 163 1 297 1 326 2 32 2 380 1 303 2 
262 1 43 1 177 1 273 1 26 2 181 1 351 1 279 2 352 1 238 1 358 1 37 1 227 1 297 1 16 1 326 1 32 1 303 1 
262 1 141 1 372 1 22 1 205 1 357 1 351 1 238 1 227 1 297 1 326 2 32 1 303 1 
279 1 158 1 160 1 248 1 16 1 26 1 122 1 237 1 260 1 
182 1 370 1 237 1 
352 1 93 1 160 1 260 1 237 1 
93 2 176 1 160 2 191 1 332 1 195 1 276 1 96 1 237 1 169 1 182 1 352 1 313 1 215 2 269 1 369 1 370 1 19 2 260 2 
138 1 355 1 178 1 257 1 320 1 319 1 268 1 338 1 
261 1 138 1 355 2 178 4 142 1 320 4 319 1 48 2 338 2 87 1 203 1 268 3 302 1 175 1 
138 1 355 1 178 2 161 1 319 1 320 2 289 1 48 1 338 1 257 1 268 1 103 1 
138 1 355 1 178 3 319 1 320 3 142 2 236 1 338 1 87 1 257 1 268 1 175 2 
126 2 95 1 268 2 77 1 
138 1 178 1 257 1 6 1 320 1 319 1 
138 1 355 1 178 2 257 1 320 2 319 1 268 1 192 1 48 1 338 1 
89 1 
138 1 355 1 178 1 257 1 320 1 319 1 268 1 338 1 
355 1 186 1 268 1 338 1 
138 1 355 1 178 1 320 1 319 1 268 1 338 1 
320 1 208 1 363 1 
138 1 355 1 178 3 319 1 320 3 142 2 338 1 188 1 257 1 87 1 268 1 175 1 
138 1 355 1 178 2 320 2 319 1 268 1 48 1 327 1 338 1 
261 1 144 1 138 1 28 1 178 1 257 1 320 1 319 1 268 1 292 1 125 1 
138 1 355 1 178 1 257 1 320 1 319 1 268 1 
138 1 355 2 178 1 257 1 320 1 319 1 338 1 
138 2 355 1 178 2 319 2 320 2 308 1 224 1 257 1 268 1 377 1 
261 1 82 1 138 1 355 1 178 3 257 1 320 3 319 1 268 2 203 1 192 1 48 2 338 1 
138 1 355 1 178 2 319 1 320 2 292 1 48 1 278 1 124 1 338 1 125 1 144 2 255 1 257 1 268 1 
261 1 138 2 355 1 178 4 257 1 320 4 319 2 268 2 203 1 216 1 48 2 327 1 338 1 
138 1 355 1 178 3 257 1 142 1 320 3 319 1 192 1 268 1 48 1 338 1 
261 1 268 1 203 1 302 1 
355 1 268 1 

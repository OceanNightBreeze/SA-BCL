#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (20,134,225) (20,134,225) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 113 250 228 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 113 250 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 350 179 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 113 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
261 2 25 3 188 1 189 1 5 2 266 5 112 2 90 2 51 1 94 2 181 1 70 1 120 1 13 1 156 1 121 1 14 9 34 2 140 1 202 1 77 1 123 1 353 9 303 6 60 1 355 1 23 4 127 2 
261 2 25 3 188 1 189 1 5 2 266 5 112 2 90 2 51 1 94 2 181 1 70 1 120 1 13 1 156 1 121 1 14 9 34 2 140 1 202 1 77 1 123 1 353 9 303 6 60 1 355 1 23 4 127 2 
261 2 25 4 188 1 189 1 5 2 266 6 112 2 90 2 51 1 94 2 181 1 70 1 120 1 13 1 156 1 121 1 14 10 34 2 140 1 202 1 77 1 123 1 353 10 303 7 60 1 355 1 23 5 127 2 
261 1 25 2 188 1 189 1 5 2 266 4 112 2 90 2 51 1 94 2 181 1 70 1 13 1 156 1 121 1 14 7 34 2 140 1 202 1 77 1 123 1 353 7 303 4 60 1 355 1 23 3 127 2 
261 2 120 1 25 1 121 1 188 1 14 4 34 1 5 1 202 1 266 3 353 4 112 1 303 3 60 1 355 1 94 1 23 2 127 1 
317 1 156 1 121 1 188 1 14 2 34 1 140 1 5 1 202 1 88 1 266 1 142 1 353 2 112 1 90 1 94 1 
25 1 121 1 188 1 14 3 34 2 5 2 202 1 266 2 353 3 90 1 303 1 23 1 181 1 
261 2 25 3 188 1 5 2 336 1 266 5 112 1 90 1 51 1 315 1 94 1 181 1 70 1 120 1 121 1 14 9 34 2 202 1 353 9 303 7 60 1 355 1 23 4 127 1 
261 2 25 3 188 1 5 2 336 1 266 5 112 1 90 1 51 1 315 1 94 1 181 1 70 1 120 1 121 1 14 9 34 2 202 1 353 9 303 7 60 1 355 1 23 4 127 1 
53 1 145 1 98 1 
349 1 143 2 145 1 
49 2 319 2 190 2 311 2 340 2 91 2 187 1 160 1 
128 2 105 1 190 2 311 2 106 1 334 1 6 1 218 1 109 1 68 1 49 3 154 1 153 1 340 3 91 2 292 2 175 1 249 1 227 2 254 1 319 2 72 1 320 1 256 1 160 1 324 2 79 1 232 1 302 1 57 2 235 1 144 1 257 1 102 1 187 1 281 1 103 1 
49 1 319 1 277 1 190 1 58 1 311 1 340 1 91 1 160 1 219 1 
53 1 137 1 49 1 58 1 311 1 340 1 185 1 145 1 93 1 167 1 108 1 198 1 223 1 119 1 
53 1 137 1 319 1 190 1 311 1 185 1 49 1 58 1 91 1 340 1 145 1 93 2 167 2 223 1 119 1 
351 1 151 1 93 1 167 1 295 1 
53 1 351 1 151 1 272 1 268 1 145 1 93 2 167 2 
151 1 93 1 167 1 
239 1 319 1 190 1 311 1 219 1 160 1 351 1 49 1 277 1 58 1 91 1 340 1 167 1 93 1 
145 1 
53 1 351 1 151 1 272 1 145 1 76 1 93 2 167 2 
200 1 53 1 73 1 272 1 323 2 19 2 38 1 285 1 163 2 287 1 351 2 165 1 338 1 288 1 151 2 328 1 145 1 167 5 93 5 
187 1 98 1 
252 1 319 1 190 1 311 2 49 2 304 1 340 2 91 1 187 2 
4 1 273 1 220 1 
227 1 72 1 256 1 334 1 6 1 324 1 101 1 49 1 235 1 154 1 153 1 340 1 144 1 292 1 187 1 175 1 
319 4 190 1 311 5 108 1 345 2 89 1 49 5 352 1 11 1 304 1 91 4 340 5 187 1 357 1 
54 1 49 2 319 2 277 1 58 1 311 2 340 2 91 2 
227 1 319 1 72 1 311 1 273 1 256 1 334 1 345 1 6 1 324 1 352 1 49 2 235 1 153 1 154 1 144 1 91 1 340 2 292 1 175 1 
49 3 319 3 190 1 311 3 340 3 91 3 187 1 345 1 
49 1 319 1 277 1 58 1 311 1 340 1 91 1 
252 1 49 1 319 1 190 1 58 1 311 1 304 1 340 1 91 1 
128 2 190 2 311 3 334 1 6 1 109 1 68 1 49 4 153 1 154 1 340 4 91 3 292 1 175 1 316 1 93 1 249 1 223 1 119 1 137 1 227 1 254 1 319 3 72 1 320 1 256 1 185 1 345 1 160 1 324 1 79 1 232 1 302 1 57 1 352 1 235 1 124 1 304 1 58 1 144 1 102 1 187 1 167 1 281 1 
49 2 319 1 311 2 340 2 91 1 187 1 108 1 345 1 357 1 
137 1 319 3 190 1 311 3 185 1 345 2 265 1 352 1 49 3 304 1 58 1 91 3 340 3 145 1 316 1 93 1 167 1 223 1 119 1 
49 2 319 2 190 1 311 2 304 1 340 2 91 2 273 1 345 1 220 1 
227 1 72 1 256 1 334 1 6 1 324 1 49 1 235 1 154 1 153 1 340 1 144 1 292 1 187 1 175 1 
227 1 72 1 256 1 334 1 6 1 324 1 49 1 234 1 235 1 153 1 340 1 144 1 292 1 293 1 187 1 
330 1 128 2 105 2 4 2 169 1 312 1 220 2 68 2 10 1 314 1 249 1 254 1 270 1 273 2 322 1 79 1 232 1 302 1 57 4 327 1 102 1 258 1 209 1 43 1 
54 1 49 1 319 1 58 1 311 1 340 1 91 1 119 1 
225 1 30 1 
225 1 30 1 
20 1 35 1 
20 1 35 1 
20 1 35 1 
225 1 30 1 162 1 
225 2 30 2 20 1 35 1 
134 1 225 1 30 1 
225 1 30 1 162 1 
225 1 30 1 162 1 
225 1 30 1 148 1 
225 1 30 1 148 1 
225 1 30 1 148 1 
133 1 250 1 225 1 30 1 113 1 228 1 93 1 167 1 61 1 
133 1 250 1 225 1 30 1 113 1 61 1 
112 1 94 1 127 1 
142 1 112 1 94 1 
96 1 142 1 112 3 132 1 24 1 127 2 
182 1 96 1 142 1 112 2 24 1 127 1 
96 1 142 1 112 2 127 1 24 2 
212 1 263 1 131 2 151 1 290 1 117 1 118 1 93 5 296 2 183 2 53 1 318 1 73 1 322 1 272 1 323 1 346 1 19 1 38 3 163 1 325 1 56 1 349 1 351 4 205 1 143 3 327 1 328 2 258 1 145 2 167 5 209 1 
213 1 263 2 131 6 7 1 151 6 289 1 117 3 118 1 93 9 295 5 200 1 296 6 53 1 318 4 17 1 73 1 322 3 272 1 323 2 19 2 38 8 163 2 349 3 351 7 205 2 143 9 276 5 327 3 207 1 328 6 21 1 258 3 145 5 167 9 209 3 
212 1 263 1 131 2 117 1 93 3 200 1 296 2 53 1 183 1 318 1 322 1 323 1 346 1 19 1 38 3 163 1 349 2 351 2 205 1 143 4 327 1 328 2 145 3 258 1 167 3 209 1 
212 1 213 1 263 1 131 4 7 1 117 2 93 4 296 4 200 1 53 1 183 2 318 2 17 1 322 2 323 1 19 1 346 1 38 5 163 1 349 3 205 1 351 3 143 7 327 2 328 4 145 4 258 2 167 4 209 2 
146 1 6 1 98 1 
193 1 6 1 
122 1 
72 1 144 1 6 1 
111 1 6 1 
144 1 6 1 
146 2 157 1 72 1 144 1 191 1 6 3 
343 1 211 1 0 2 64 1 52 1 105 4 274 1 335 1 68 3 10 2 57 7 195 1 314 3 258 1 246 1 209 1 282 1 
343 1 211 1 0 2 64 1 52 1 105 4 274 1 335 1 68 3 10 2 57 7 195 1 314 3 258 1 246 1 209 1 282 1 
343 1 211 1 0 2 64 1 52 1 105 4 97 1 274 1 335 1 68 3 10 2 57 7 195 1 314 3 258 1 246 1 209 1 282 1 
0 3 211 2 64 1 128 2 238 4 105 16 45 1 335 1 150 1 68 15 10 5 48 1 195 2 117 3 314 10 246 1 247 1 343 5 52 2 254 1 322 3 274 1 40 1 79 1 232 1 57 31 125 1 327 3 102 1 258 4 329 3 356 1 209 4 282 2 
0 2 211 1 64 1 128 4 105 5 45 1 335 1 68 4 10 3 195 1 314 4 246 1 343 1 52 1 254 2 99 1 79 2 232 2 204 1 57 9 102 2 258 1 209 1 282 1 
188 1 147 1 5 1 132 1 46 1 172 1 266 1 50 1 112 2 90 1 153 1 292 1 32 1 94 1 226 1 227 1 121 1 14 2 34 1 15 1 344 1 202 1 324 1 142 1 353 2 235 1 303 1 82 1 83 1 127 1 
332 1 188 1 147 1 5 1 132 1 172 1 266 1 50 1 112 2 90 1 153 1 292 1 94 1 226 1 227 1 14 3 138 1 34 1 15 1 344 1 202 1 324 1 142 1 353 3 235 1 303 2 82 1 83 1 127 1 62 1 
332 1 188 1 147 1 132 1 172 1 266 1 50 1 112 2 90 1 153 1 292 1 94 1 227 1 14 2 138 1 344 1 202 1 324 1 142 1 353 2 235 1 303 2 82 1 83 1 127 1 
227 1 139 1 14 1 333 1 34 1 5 1 107 1 334 1 6 1 324 1 171 1 172 2 353 1 235 1 153 1 90 2 42 1 82 2 144 1 292 1 83 2 248 1 62 1 
332 1 226 1 121 1 227 1 14 1 147 1 34 1 15 1 5 1 344 1 132 1 46 1 324 1 172 1 142 1 50 1 353 1 112 2 235 1 153 1 90 1 82 1 292 1 83 1 94 1 127 1 
255 1 
1 2 311 1 170 1 6 1 8 1 49 1 93 5 223 1 53 1 227 2 137 1 16 2 272 3 185 1 323 1 19 1 324 2 231 1 143 2 235 1 328 2 58 1 144 1 145 2 280 1 104 1 65 1 333 1 240 1 67 1 334 2 108 1 286 1 151 6 337 1 153 1 116 4 340 1 291 1 292 2 198 1 155 2 119 1 33 2 73 1 38 2 163 1 41 1 349 2 203 2 205 1 354 2 42 1 167 5 168 2 
104 1 137 1 311 1 272 1 185 1 76 1 108 1 286 1 231 1 8 1 151 2 49 1 354 1 116 2 58 1 340 1 280 1 167 3 93 3 198 1 223 1 119 1 
104 1 311 1 108 1 286 1 8 1 151 1 49 1 116 3 340 1 93 3 198 1 223 1 119 1 53 1 137 1 185 1 272 1 76 1 231 1 58 1 280 1 145 1 167 3 168 1 
104 1 311 1 108 1 286 1 8 1 49 1 151 2 116 3 340 1 93 3 198 1 223 1 119 1 53 1 33 1 137 1 272 1 185 1 76 1 231 1 354 1 58 1 280 1 145 1 167 3 168 1 
1 2 130 1 311 1 8 1 49 1 93 5 223 1 53 5 137 1 16 2 185 1 272 3 323 1 19 1 231 1 58 1 328 1 280 1 145 5 104 1 240 1 108 1 286 1 151 7 152 1 116 6 340 1 69 1 198 1 155 2 119 1 33 4 73 1 76 1 37 1 38 1 163 1 78 1 41 1 203 2 349 2 354 4 167 5 168 4 
1 2 311 1 8 1 49 1 93 4 223 1 53 1 137 1 16 2 185 1 272 2 323 1 19 1 231 1 143 2 58 1 328 1 280 1 145 2 104 1 240 1 67 1 108 1 286 1 151 4 116 4 340 1 198 1 155 2 119 1 33 2 73 1 38 1 163 1 41 1 203 2 349 2 354 2 167 4 168 2 
104 1 1 2 240 1 311 1 108 1 286 1 8 1 151 4 49 1 152 1 116 4 340 1 93 4 69 1 198 1 155 2 223 1 119 1 53 1 33 2 137 1 16 2 73 1 272 2 185 1 323 1 19 1 38 1 231 1 163 1 41 1 78 1 349 2 203 2 354 2 328 1 58 1 145 1 280 1 167 4 168 2 
104 1 1 2 240 1 311 1 108 1 286 1 8 1 151 4 49 1 152 1 116 4 340 1 93 4 69 1 198 1 155 2 223 1 119 1 53 1 33 2 137 1 16 2 73 1 272 2 185 1 323 1 19 1 38 1 231 1 163 1 41 1 78 1 349 2 203 2 354 2 328 1 58 1 145 1 280 1 167 4 168 2 
104 1 66 1 310 2 311 1 108 1 286 1 8 1 151 4 49 1 116 4 340 1 93 4 198 1 223 1 119 1 53 1 33 2 137 1 229 1 16 2 73 1 272 2 185 1 323 1 19 1 38 1 231 1 163 1 41 1 78 1 203 2 233 1 143 2 354 2 126 2 328 1 58 1 145 1 280 1 167 4 168 2 
104 1 1 2 240 1 311 1 108 1 286 1 8 1 49 1 151 5 152 1 116 5 340 1 69 1 93 4 198 1 155 2 223 1 119 1 53 1 33 3 137 1 16 2 73 1 272 2 185 1 323 1 37 1 19 1 38 1 163 1 231 1 41 1 78 1 349 2 203 2 354 3 328 1 58 1 145 1 280 1 167 4 168 3 
104 1 1 2 240 1 311 1 108 1 286 1 8 1 49 1 151 5 152 1 116 5 340 1 69 1 93 4 198 1 155 2 223 1 119 1 53 1 33 3 137 1 16 2 73 1 272 2 185 1 323 1 37 1 19 1 38 1 163 1 231 1 41 1 78 1 349 2 203 2 354 3 328 1 58 1 145 1 280 1 167 4 168 3 
310 2 311 1 8 1 49 1 93 4 223 1 53 1 137 1 16 2 185 1 272 2 323 1 19 1 231 1 233 1 143 2 58 1 328 1 280 1 145 1 104 1 67 1 108 1 286 1 151 4 116 4 340 1 198 1 119 1 33 2 73 1 38 1 163 1 41 1 203 2 354 2 126 2 167 4 168 2 
0 1 64 1 52 1 128 2 105 3 254 1 4 1 273 1 312 1 98 1 220 1 335 1 68 3 10 2 79 1 302 1 232 1 57 6 195 1 314 2 102 1 187 2 258 1 246 1 209 1 249 1 
63 1 128 4 238 3 105 8 4 11 106 1 220 4 10 1 68 6 48 1 244 1 117 2 314 2 249 1 343 1 136 1 254 2 320 1 74 1 273 11 322 2 39 1 79 2 232 2 302 2 57 14 327 1 102 2 187 1 258 2 356 1 329 3 209 1 
128 2 105 1 311 1 106 1 334 1 149 1 6 1 220 1 68 1 49 2 29 1 114 1 153 1 154 1 244 1 340 2 91 1 292 1 175 1 249 1 227 1 319 1 254 1 72 1 320 1 256 1 345 1 324 1 79 1 232 1 302 1 101 1 57 2 352 1 235 1 144 1 102 1 187 1 
0 1 128 6 4 7 215 1 311 1 6 2 220 7 10 4 49 3 174 2 91 1 314 8 175 2 52 1 227 3 319 1 320 1 273 7 322 2 275 1 324 3 232 3 57 20 235 2 327 2 144 2 102 3 187 2 64 1 332 1 105 10 106 1 334 1 109 2 335 1 68 10 154 2 153 2 244 1 194 2 195 1 340 3 117 2 292 3 246 1 294 2 199 1 249 3 343 4 254 3 72 2 256 2 345 1 79 3 302 3 352 1 81 2 258 3 209 3 
128 4 332 1 2 1 105 1 333 1 311 1 106 1 217 1 334 2 312 1 6 3 68 1 49 1 153 2 340 1 91 1 292 8 32 1 92 1 249 2 269 1 12 1 227 7 319 1 254 2 320 1 345 1 159 1 324 8 79 2 232 2 302 2 57 2 235 2 236 1 42 1 144 2 102 2 103 2 
128 2 105 1 4 1 190 1 311 1 220 1 10 1 68 2 49 1 244 1 91 1 340 1 117 1 314 1 249 1 254 1 319 1 273 1 322 1 79 1 301 1 232 1 302 1 57 3 327 1 304 1 102 1 258 1 209 1 
343 1 128 2 105 2 254 1 4 1 270 1 273 1 322 1 312 1 220 1 79 1 302 1 232 1 57 2 314 1 102 1 258 1 249 1 
128 2 254 1 4 1 273 1 169 1 312 1 220 1 10 1 79 1 68 2 302 1 232 1 57 2 327 1 314 1 102 1 209 1 249 1 
128 2 105 2 4 2 312 1 220 2 68 2 10 1 117 1 314 2 249 1 343 1 254 1 322 1 273 2 79 1 232 1 302 1 57 4 327 1 102 1 258 1 209 1 
343 1 128 2 105 2 254 1 4 1 270 1 273 1 322 1 220 1 79 1 302 1 232 1 57 2 314 1 102 1 258 1 92 1 249 1 
128 2 254 1 4 1 273 1 169 1 220 1 10 1 79 1 68 2 302 1 232 1 57 2 327 1 314 1 102 1 92 1 209 1 249 1 
128 2 105 2 4 2 220 2 68 2 10 1 117 1 314 2 92 1 249 1 343 1 254 1 322 1 273 2 79 1 232 1 302 1 57 4 327 1 102 1 258 1 209 1 
128 2 105 2 4 2 220 2 68 2 10 1 117 1 314 2 249 1 343 1 254 1 322 1 273 2 79 1 232 1 302 1 57 4 327 1 102 1 258 1 209 1 
128 2 105 1 106 1 334 1 6 1 109 1 68 1 49 1 153 1 154 1 340 1 292 1 175 1 249 1 227 1 254 1 72 1 320 1 256 1 324 1 79 1 302 1 232 1 57 2 235 1 144 1 102 1 187 1 
128 2 105 1 106 1 334 1 6 1 27 1 68 1 49 1 153 1 340 1 293 1 292 1 249 1 227 1 254 1 72 1 320 1 256 1 324 1 79 1 302 1 232 1 57 2 234 1 235 1 144 1 102 1 187 1 
128 2 105 2 4 2 220 2 68 2 10 1 244 1 117 1 314 2 249 1 343 1 254 1 322 1 273 2 79 1 232 1 302 1 57 4 327 1 102 1 258 1 209 1 
128 2 105 2 4 2 6 1 109 1 220 2 10 1 68 2 49 1 153 1 154 1 340 1 117 1 314 2 292 1 175 1 32 1 249 1 343 1 227 1 254 1 72 1 273 2 322 1 256 1 324 1 79 1 302 1 232 1 57 4 235 1 327 1 81 1 144 1 102 1 258 1 209 1 
128 2 105 2 190 1 4 1 311 1 110 1 220 1 68 1 49 1 244 1 91 1 340 1 117 1 314 1 249 1 343 1 254 1 319 1 322 1 273 1 79 1 232 1 302 1 57 3 327 1 304 1 102 1 258 1 209 1 
128 4 238 2 105 9 283 1 9 1 10 3 68 10 48 1 222 2 117 3 314 6 180 2 343 3 297 1 251 1 254 2 184 1 322 3 79 2 232 2 204 1 57 19 327 3 102 2 258 3 356 1 22 1 329 1 209 3 210 1 
128 6 85 1 238 2 105 14 45 2 283 1 10 2 68 12 222 1 117 3 267 1 314 4 180 4 343 2 251 2 254 3 253 1 184 1 271 1 322 3 75 1 347 1 79 3 232 3 204 1 57 26 327 2 102 3 258 3 209 2 22 2 356 2 329 2 210 1 
0 1 128 6 85 1 214 1 45 1 10 4 9 1 48 1 222 1 314 8 267 1 180 4 52 1 184 1 271 1 322 4 232 3 57 41 327 4 102 3 329 3 22 1 64 1 238 4 105 20 283 1 335 1 68 21 117 4 195 1 246 1 343 4 251 2 254 3 253 1 75 1 347 1 79 3 204 1 258 5 209 5 356 3 210 1 
0 1 64 1 85 1 128 8 238 4 105 20 214 1 45 2 283 1 335 1 9 1 10 4 68 18 48 1 222 1 195 1 117 4 267 1 314 7 246 1 180 4 343 3 52 1 251 2 253 1 254 4 184 1 271 1 322 4 75 1 347 1 79 4 232 4 204 1 57 38 327 3 102 4 258 5 356 3 22 1 329 3 209 4 210 1 
0 1 64 1 85 1 128 4 238 4 105 27 45 1 283 1 335 1 10 7 68 25 48 2 222 1 195 1 117 7 267 1 314 14 246 1 180 4 343 7 52 1 251 1 253 1 254 2 184 1 271 1 322 7 75 1 39 2 347 1 79 2 232 2 204 1 57 52 327 7 102 2 258 8 356 2 22 1 329 4 209 8 210 1 
128 2 2 1 105 1 311 2 106 1 6 1 68 1 49 2 153 1 115 1 244 1 340 2 292 2 245 1 342 1 249 1 227 2 254 1 320 1 36 1 324 2 79 1 232 1 302 1 57 2 235 1 236 1 144 1 102 1 307 1 103 2 
332 1 226 1 227 2 147 1 201 1 344 1 132 1 324 2 192 1 142 1 112 2 235 1 153 1 278 1 292 2 83 1 32 1 94 1 127 1 
332 1 226 1 227 1 147 1 299 1 201 1 344 1 132 1 324 1 142 1 112 2 235 1 153 1 292 1 83 1 94 1 127 1 
227 1 139 1 333 1 334 1 6 1 324 1 164 1 235 1 153 1 278 1 42 1 144 1 292 1 83 1 
332 1 226 1 227 1 147 1 201 1 344 1 132 1 324 1 192 1 142 1 112 2 235 1 153 1 278 1 292 1 83 1 94 1 127 1 
341 1 
53 1 165 1 338 1 328 1 145 1 38 1 98 1 
1 1 240 1 151 1 93 1 155 1 53 1 73 1 272 1 323 1 19 1 38 1 163 1 349 1 143 1 328 1 145 2 167 1 
84 1 309 1 131 6 87 2 216 2 6 10 221 1 93 5 223 2 53 2 227 3 272 3 322 2 323 4 19 4 324 3 143 12 235 4 327 2 328 8 279 2 144 3 145 8 146 2 334 1 111 2 193 3 338 1 151 5 243 2 153 3 339 1 117 2 291 1 292 3 294 2 32 1 71 2 296 6 157 1 72 3 73 4 300 2 158 2 38 9 163 4 349 6 205 2 165 1 208 1 258 2 167 5 259 2 209 2 
85 1 238 1 131 5 151 1 117 2 291 1 267 1 93 1 296 5 53 2 253 1 141 1 300 1 73 2 272 1 322 2 75 1 323 2 19 2 38 8 163 2 347 1 349 3 205 1 143 6 206 1 327 2 328 5 279 2 145 5 258 2 167 1 356 1 329 1 209 2 
331 1 239 1 190 1 311 1 219 1 49 1 340 1 195 1 91 1 246 1 69 1 93 1 52 1 319 1 300 1 73 1 323 1 19 1 160 1 38 2 163 1 277 1 58 1 328 2 279 2 258 2 167 1 209 1 
53 1 73 1 323 1 19 1 38 1 163 1 165 1 338 1 328 1 145 1 
296 5 131 5 300 1 322 2 38 5 349 5 143 10 327 2 328 5 279 2 117 2 294 1 258 2 145 5 209 2 
53 1 151 1 272 1 145 1 93 1 167 1 
84 1 65 1 333 1 334 2 6 1 337 1 151 3 153 1 339 1 292 3 291 1 93 2 179 1 200 1 227 3 73 1 272 1 323 2 19 2 38 2 324 3 163 2 350 1 205 2 235 1 328 1 42 1 144 1 167 2 
128 2 190 2 311 2 334 1 6 1 109 1 68 1 49 3 154 1 153 1 340 3 91 2 292 1 175 1 249 1 227 1 254 1 319 2 72 1 320 1 256 1 160 1 324 1 79 1 302 1 232 1 57 1 235 1 144 1 102 1 187 1 281 1 
0 1 296 2 53 2 131 2 73 1 323 1 19 1 38 1 163 1 349 2 205 1 143 4 328 2 291 1 145 4 
133 1 113 1 
133 1 113 1 
133 1 113 1 
133 1 113 1 
133 1 113 1 
133 1 113 1 
133 1 113 1 
133 1 113 1 
225 1 30 1 
0 1 343 1 64 1 128 4 52 1 105 4 254 2 45 1 335 1 68 4 10 2 79 2 232 2 57 8 195 1 314 3 102 2 258 1 246 1 209 1 
0 1 64 1 52 1 105 3 98 1 335 1 68 3 10 2 57 6 195 1 314 2 246 1 258 1 209 1 
343 1 262 1 128 2 105 2 254 1 322 1 10 1 68 2 79 1 232 1 57 4 327 1 117 1 314 2 102 1 258 1 209 1 
343 1 238 2 105 3 322 1 10 1 68 4 57 7 48 1 327 1 117 1 314 2 258 1 209 1 356 1 329 1 
0 1 64 1 128 4 238 2 105 11 45 2 335 1 68 12 10 5 48 1 173 1 195 2 117 2 314 9 246 1 343 4 136 1 52 2 254 2 322 2 39 1 79 2 232 2 57 23 327 2 102 2 258 3 329 2 209 3 
68 1 57 1 238 1 
57 1 105 1 329 1 
343 1 262 1 128 2 105 3 254 1 322 1 79 1 68 3 10 2 232 1 57 6 327 1 117 1 102 1 314 3 294 1 258 1 209 1 
128 2 85 1 238 1 105 6 68 6 10 1 117 2 314 2 267 1 343 1 254 1 253 1 322 2 75 1 347 1 79 1 232 1 204 1 57 12 327 2 102 1 258 2 329 1 356 1 209 2 
343 1 52 1 105 3 68 3 10 1 57 6 195 1 314 2 246 1 258 1 209 1 
343 1 64 1 52 1 128 2 105 1 254 1 45 1 335 1 10 1 68 2 79 1 232 1 57 3 173 1 195 1 314 2 102 1 
343 2 128 2 52 2 331 1 105 5 254 1 79 1 10 3 68 5 232 1 204 1 57 10 195 2 102 1 314 5 246 1 258 2 209 2 
343 1 128 2 105 2 254 1 322 1 79 1 204 1 232 1 57 2 102 1 314 1 258 1 
343 1 128 2 105 2 254 1 322 1 10 1 68 2 79 1 204 1 232 1 57 4 327 1 117 1 314 2 102 1 258 1 209 1 
343 1 128 6 52 1 105 1 254 3 45 1 9 1 68 2 79 3 10 1 204 1 232 3 57 3 173 1 195 1 102 3 314 2 
0 1 64 1 262 1 128 10 238 4 105 16 45 2 335 1 150 1 68 18 9 1 10 7 48 1 173 1 195 3 117 3 314 12 246 2 247 1 343 5 52 3 254 5 322 3 79 5 232 5 204 1 57 34 125 1 327 3 102 5 258 5 356 1 329 3 209 5 
0 1 64 1 128 2 238 1 105 4 335 1 68 4 10 2 195 1 314 2 246 1 52 1 254 1 75 1 79 1 232 1 204 1 57 8 102 1 258 1 209 1 329 1 356 1 
0 1 64 1 262 1 128 4 238 2 105 6 335 1 10 2 68 5 48 1 195 1 117 1 314 3 246 1 343 1 52 1 254 2 322 1 75 1 79 2 204 1 232 2 57 11 102 2 258 2 209 1 356 1 329 1 
0 1 64 1 262 1 128 6 85 1 238 1 105 9 45 1 335 1 68 10 10 3 195 1 117 2 314 4 267 1 246 1 343 1 52 1 254 3 253 1 322 2 75 1 347 1 79 3 232 3 204 1 57 19 327 2 102 3 258 3 329 1 356 1 209 3 
0 1 64 1 262 1 128 6 85 1 238 1 105 10 45 1 335 1 68 7 10 3 195 1 117 2 314 5 267 1 246 1 343 2 52 1 254 3 253 1 322 2 75 1 347 1 79 3 232 3 204 1 57 17 327 1 102 3 258 3 329 1 356 1 209 2 
0 1 64 1 128 2 238 1 105 4 335 1 68 4 10 2 195 1 314 2 246 1 52 1 254 1 75 1 79 1 232 1 204 1 57 8 102 1 258 1 209 1 329 1 356 1 
128 2 85 1 238 1 105 6 68 6 10 1 117 2 314 2 267 1 343 1 254 1 253 1 322 2 75 1 347 1 79 1 232 1 204 1 57 12 327 2 102 1 258 2 329 1 356 1 209 2 
0 1 64 1 262 1 128 8 85 1 238 1 105 10 45 2 335 1 68 8 10 3 195 1 117 2 267 1 314 5 246 1 343 2 52 1 254 4 253 1 322 2 75 1 347 1 79 4 232 4 204 1 57 18 327 1 102 4 258 3 356 1 329 1 209 2 
128 8 85 1 238 1 105 9 45 2 68 7 9 1 10 3 117 3 267 1 314 6 343 3 254 4 253 1 322 3 75 1 347 1 79 4 204 1 232 4 57 16 327 2 102 4 258 3 356 1 329 1 209 2 
343 3 64 1 52 3 105 3 335 2 68 4 10 3 57 7 195 3 314 6 246 1 258 1 209 1 
0 1 64 1 128 8 85 1 238 1 105 10 45 2 335 1 68 8 9 1 10 3 195 1 117 2 267 1 314 4 246 1 343 1 52 1 254 4 253 1 322 2 75 1 347 1 79 4 204 1 232 4 57 18 327 1 102 4 258 3 356 1 329 1 209 2 
49 1 311 1 340 1 187 1 108 1 357 1 177 1 
241 1 311 1 108 1 264 1 166 1 49 1 59 1 340 1 187 1 177 1 357 1 260 1 
227 1 235 1 153 1 333 1 42 1 144 1 292 1 334 1 6 1 98 1 324 1 
227 1 319 1 72 1 311 1 256 1 334 1 345 1 6 1 324 1 49 2 235 1 153 1 144 1 91 1 340 2 292 1 187 1 175 1 
87 1 311 2 6 3 111 1 49 2 153 1 339 1 340 2 91 1 292 1 175 1 119 1 227 1 319 2 72 2 256 1 185 1 345 1 324 1 235 1 58 1 144 2 187 1 
227 2 87 1 319 2 72 2 311 2 185 1 256 1 345 1 6 3 324 2 111 1 55 1 49 2 235 1 153 1 58 1 144 2 91 1 340 2 339 1 292 2 293 1 187 1 119 1 
53 1 86 1 227 3 146 1 87 1 72 1 334 1 242 1 6 4 324 3 111 1 55 1 193 1 151 1 235 1 153 1 144 1 339 1 292 3 145 1 167 2 93 2 223 1 
53 1 227 3 146 1 87 1 72 1 216 1 334 1 6 4 324 3 111 1 55 1 193 1 151 1 235 1 153 1 144 1 339 1 292 3 145 1 167 2 93 2 223 1 
227 1 235 1 153 1 292 1 217 1 324 1 
12 1 332 1 2 1 227 6 157 1 72 1 217 1 334 2 159 1 6 3 161 1 324 7 100 1 235 3 153 2 144 2 305 1 292 7 32 1 103 1 269 1 
0 1 64 1 128 4 105 3 4 1 311 1 6 1 109 1 220 1 335 1 68 3 10 2 49 2 153 1 154 1 244 1 174 1 195 1 340 2 91 1 314 2 292 1 246 1 175 1 32 1 249 2 52 1 227 1 319 1 254 2 72 1 273 1 256 1 36 1 345 1 324 1 79 2 232 2 302 2 57 6 235 1 81 1 144 1 102 2 187 2 258 1 209 1 
84 1 146 1 216 1 334 1 6 2 193 1 338 1 151 2 243 1 292 1 93 3 223 1 53 1 227 1 73 2 272 1 323 2 158 1 19 2 38 1 324 1 163 2 351 1 165 1 328 1 145 1 167 3 259 1 
146 1 227 2 309 1 157 1 72 1 217 1 6 2 324 2 235 2 153 1 144 1 292 2 32 1 
227 4 333 1 334 1 6 1 324 4 55 1 235 1 153 1 42 1 144 1 292 4 32 1 178 1 
129 1 227 2 72 1 6 1 275 1 324 2 100 1 326 1 235 2 153 1 339 1 144 1 305 1 292 2 
142 1 227 1 112 1 235 1 153 1 292 1 334 1 344 1 94 1 324 1 
332 1 2 1 227 2 6 1 324 2 235 1 115 1 153 1 144 1 292 2 32 1 
12 1 2 1 227 4 333 1 334 1 6 3 324 5 235 2 153 2 42 1 339 1 144 2 292 5 32 1 178 1 269 1 
44 1 2 1 227 4 333 1 334 1 6 3 324 5 235 2 153 2 42 1 339 1 144 2 292 5 32 1 178 1 269 1 
227 1 319 1 72 1 311 1 256 1 334 1 345 1 6 1 324 1 49 2 235 1 153 1 144 1 91 1 340 2 292 1 293 1 187 1 
227 1 157 1 72 1 6 1 161 1 324 1 100 1 235 2 153 1 339 1 144 1 305 1 292 1 
348 1 187 1 308 1 197 1 28 1 
53 1 298 1 26 1 3 1 137 1 185 1 28 2 348 2 351 1 58 1 187 1 145 1 197 1 308 2 316 1 167 2 93 2 223 1 119 1 
311 1 28 1 348 1 49 1 340 1 245 1 197 1 307 1 342 1 
298 1 3 1 197 1 
266 1 188 1 202 1 98 1 
266 1 353 1 188 1 14 1 34 1 5 1 202 1 
172 1 14 1 90 1 
95 1 237 1 156 2 121 1 14 3 188 1 34 1 5 1 230 1 202 1 266 1 353 3 
261 1 266 1 353 2 188 1 14 2 303 1 34 1 5 1 202 1 
121 1 14 1 34 1 5 1 266 1 353 1 112 1 355 1 23 1 94 1 127 1 
266 1 353 1 121 1 14 1 34 1 5 1 202 1 
353 1 121 1 188 1 14 1 34 1 5 1 202 2 
121 1 14 2 34 2 321 1 5 2 202 1 266 1 353 2 196 1 176 1 
25 1 121 1 188 1 14 3 34 1 5 1 202 1 266 2 353 3 303 2 51 1 23 1 70 1 
121 1 188 1 14 2 34 1 5 1 202 1 132 1 266 1 142 1 80 1 353 2 112 2 303 1 94 1 127 1 
261 1 120 1 25 1 121 1 188 1 14 4 34 2 5 2 202 1 266 2 353 4 303 2 23 1 
266 1 353 1 121 1 188 1 14 1 34 1 5 1 202 1 
237 1 25 1 156 1 188 2 14 4 34 1 230 1 5 1 202 2 47 1 266 3 353 4 303 2 23 1 
266 1 353 2 121 1 188 1 14 2 303 1 34 1 313 1 18 1 5 1 315 1 202 1 
237 2 156 2 121 1 14 3 188 1 34 1 230 1 5 1 202 1 266 1 353 3 306 1 
266 2 31 2 284 1 135 1 
353 1 121 1 14 1 34 1 5 1 186 1 
266 1 353 2 121 1 188 1 14 2 303 1 34 1 5 1 202 1 70 1 
224 1 
266 1 353 1 121 1 188 1 14 1 34 1 5 1 202 1 
156 1 121 1 14 3 188 1 34 1 5 1 202 1 266 1 353 3 303 1 70 1 
47 1 25 1 266 1 23 1 
266 1 202 1 

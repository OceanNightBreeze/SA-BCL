#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 375 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 1 120 1 183 1 184 1 240 1 137 2 367 1 101 1 147 5 215 1 333 2 149 4 78 1 54 1 108 9 110 9 13 2 127 1 14 7 377 1 316 1 61 3 162 1 317 1 
132 1 120 1 183 1 184 1 240 1 137 2 367 1 101 1 147 5 215 1 333 2 149 4 78 1 54 1 108 9 110 9 13 2 127 1 14 7 377 1 316 1 61 3 162 1 317 1 
132 1 361 1 120 2 364 1 240 1 137 2 367 1 101 1 46 1 147 5 215 2 193 1 333 2 149 4 78 1 54 1 108 9 110 9 13 2 127 1 14 6 377 1 316 1 61 3 91 1 162 2 317 2 118 1 
132 1 361 1 120 2 364 1 240 1 137 2 367 1 101 1 46 1 147 5 215 2 193 1 333 2 149 4 78 1 54 1 108 9 110 9 13 2 127 1 14 6 377 1 316 1 61 3 91 1 162 2 317 2 118 1 
132 1 361 1 120 2 364 1 240 1 137 2 367 1 101 1 46 1 147 6 215 2 193 1 333 2 149 5 78 1 54 1 108 10 110 10 13 2 127 1 14 7 377 1 316 1 61 4 91 1 162 2 317 2 118 1 
132 1 361 1 120 2 364 1 240 1 137 1 367 1 101 1 46 1 147 4 215 2 193 1 333 2 149 3 78 1 108 7 110 7 13 2 127 1 14 4 377 1 316 1 61 2 91 1 162 2 317 2 118 1 
132 1 108 4 120 1 13 1 110 4 240 1 137 2 14 3 147 3 377 1 316 1 61 1 215 1 333 1 149 2 78 1 54 1 317 1 
132 1 108 2 13 1 110 2 346 1 240 1 147 1 263 1 46 1 377 1 215 1 333 1 162 1 36 1 317 1 118 1 
132 1 108 3 13 2 110 3 240 1 127 1 14 1 147 2 377 1 61 1 333 2 162 1 149 1 
146 1 9 1 144 1 
68 2 151 1 144 1 
171 1 207 2 125 2 300 1 294 2 218 2 318 2 192 2 
207 3 294 3 139 1 42 1 189 1 190 1 192 2 350 1 48 2 300 1 103 1 218 2 106 1 169 1 305 1 171 1 56 1 80 1 308 1 310 1 125 2 312 1 277 1 83 2 57 1 174 2 88 2 282 1 129 1 357 1 284 1 234 2 318 2 117 1 163 1 205 1 321 1 
171 1 44 1 207 1 229 1 125 1 294 1 218 1 99 1 318 1 192 1 
79 1 274 1 360 1 207 1 294 1 296 1 144 1 242 1 229 1 246 1 335 1 9 1 318 1 28 1 
79 1 274 1 207 1 125 1 294 1 144 1 192 1 242 2 229 1 246 2 218 1 335 1 9 1 318 1 28 1 
242 1 246 1 82 1 167 1 43 1 
242 2 24 1 246 2 82 1 313 1 9 1 43 1 144 1 
242 1 246 1 82 1 
171 1 207 1 125 1 20 1 294 1 99 1 43 1 192 1 242 1 44 1 229 1 246 1 218 1 318 1 
144 1 
242 2 201 1 24 1 246 2 82 1 9 1 43 1 144 1 
19 1 82 2 86 1 43 2 143 1 144 1 200 1 268 1 242 5 74 1 24 1 246 5 283 1 216 1 34 2 25 2 116 2 250 1 9 1 
146 1 300 1 
207 2 125 1 294 2 192 1 300 2 218 1 150 1 318 2 94 1 
241 1 355 1 30 1 
207 1 308 1 294 1 277 1 42 1 57 1 190 1 350 1 88 1 48 1 300 1 284 1 234 1 169 1 273 1 205 1 
207 2 308 1 125 1 294 2 277 1 42 1 57 1 355 1 190 1 267 1 192 1 350 1 88 1 48 1 284 1 234 1 169 1 318 1 205 1 64 1 
207 3 125 3 300 1 218 1 294 3 318 3 64 1 192 3 
207 1 229 1 125 1 294 1 99 1 318 1 192 1 
207 1 229 1 125 1 294 1 218 1 150 1 318 1 94 1 192 1 
207 4 294 4 135 1 139 1 42 1 189 1 190 1 192 3 267 1 350 1 242 1 48 1 300 1 246 1 103 1 218 2 335 1 169 1 305 1 28 1 79 1 274 1 171 1 80 1 308 1 310 1 125 3 312 1 277 1 83 1 126 1 57 1 174 2 88 1 282 1 129 1 229 1 284 1 234 1 94 1 318 3 163 1 205 1 64 1 
360 1 207 2 228 1 125 1 300 1 294 2 318 2 192 1 64 1 
274 1 79 1 207 3 125 3 255 1 294 3 135 1 144 1 267 1 192 3 242 1 229 1 246 1 218 1 335 1 94 1 318 3 64 2 28 1 
207 2 125 2 294 2 355 1 192 2 218 1 94 1 318 2 64 1 30 1 
207 1 308 1 294 1 277 1 42 1 57 1 190 1 350 1 88 1 48 1 300 1 284 1 234 1 169 1 205 1 
292 1 207 1 294 1 339 1 42 1 57 1 190 1 350 1 88 1 48 1 300 1 284 1 234 1 169 1 205 1 
241 2 297 1 189 1 70 1 330 1 305 1 107 1 30 2 80 1 309 1 310 1 223 1 312 1 354 1 83 4 174 2 355 2 282 1 129 2 158 1 159 1 288 1 117 2 344 1 
207 1 229 1 125 1 294 1 335 1 92 1 318 1 192 1 
360 1 207 5 125 4 98 1 294 5 198 1 192 4 267 1 228 1 300 1 218 1 318 5 94 1 64 2 
207 2 229 1 125 2 294 2 99 1 92 1 318 2 192 2 
194 1 182 1 
194 1 182 1 
231 1 12 1 
231 1 12 1 
231 1 12 1 
269 1 194 1 182 1 
269 1 194 1 182 1 
194 1 182 1 152 1 
194 2 231 1 12 1 182 2 324 1 290 1 
269 1 194 1 182 1 
194 1 182 1 319 1 
194 1 182 1 319 1 
194 1 182 1 319 1 
221 3 194 2 65 2 182 2 324 1 347 1 4 1 144 1 298 2 242 2 49 1 246 2 378 2 233 1 75 1 104 2 272 1 180 1 131 2 
207 2 96 1 65 1 182 1 294 2 211 1 347 1 192 2 214 1 298 1 242 1 300 1 246 1 152 1 220 1 221 1 194 1 125 2 84 1 90 1 378 1 318 2 342 1 131 1 
120 1 215 1 317 1 
263 1 215 1 317 1 
263 1 120 2 232 1 303 1 317 3 329 1 
263 1 120 1 232 1 374 1 317 2 329 1 
263 1 120 1 232 1 317 2 329 2 
97 2 165 2 68 3 297 1 43 4 143 2 144 2 214 1 268 1 242 5 24 1 246 5 217 1 369 1 25 1 250 3 9 1 151 1 107 1 55 1 220 1 10 1 222 1 124 1 223 1 82 1 158 1 130 1 34 1 116 1 177 2 342 1 
293 5 97 6 165 6 68 9 297 3 43 7 142 1 143 6 144 5 242 9 268 1 47 1 246 9 24 1 217 2 369 3 25 2 167 5 250 8 9 1 151 3 107 3 10 1 222 2 223 3 82 6 86 1 356 1 158 3 60 1 34 2 62 1 116 2 342 4 178 1 
97 2 165 2 68 4 297 1 43 2 143 2 144 3 242 3 246 3 217 1 25 1 369 1 250 3 9 1 151 2 107 1 55 1 222 1 223 1 86 1 158 1 130 1 34 1 116 1 177 1 342 1 
97 4 165 4 68 7 297 2 43 3 143 4 144 4 242 4 246 4 217 1 25 1 369 2 250 5 9 1 151 3 107 2 55 1 222 1 223 2 86 1 356 1 158 2 130 1 34 1 62 1 116 1 177 2 342 2 178 1 
146 1 161 1 190 1 
190 1 179 1 
153 1 
57 1 190 1 
81 1 161 2 203 1 42 1 57 1 190 3 
42 1 57 1 190 1 
51 1 190 1 
11 1 309 3 172 1 154 1 83 7 297 1 188 1 100 1 129 3 158 1 148 1 288 2 304 2 252 1 122 1 117 4 336 1 
11 1 309 3 172 1 154 1 83 7 297 1 188 1 100 1 129 3 158 1 148 1 288 2 304 2 252 1 122 1 117 4 336 1 
11 1 309 3 172 1 154 1 83 7 297 1 188 1 376 1 100 1 129 3 158 1 148 1 288 2 304 2 252 1 122 1 117 4 336 1 
208 1 66 4 39 1 265 3 325 1 297 4 188 2 189 1 100 1 243 1 369 3 148 1 252 1 304 3 26 1 122 5 107 3 336 2 29 1 11 1 80 1 309 10 310 1 223 3 154 2 172 2 278 1 83 31 174 2 282 1 129 15 158 4 288 5 117 16 
11 1 309 4 80 2 310 2 172 1 154 1 83 9 297 1 188 1 189 2 281 1 174 4 100 1 282 2 129 4 245 1 158 1 148 1 288 3 304 2 26 1 122 1 117 5 336 1 
132 1 0 1 120 1 67 1 240 1 147 1 102 1 48 1 215 1 50 1 7 1 8 1 302 1 333 1 303 1 108 2 110 2 13 1 85 1 88 1 14 1 263 1 377 1 284 1 234 1 162 1 287 1 16 1 317 2 205 1 
132 1 0 1 120 1 67 1 22 1 138 1 147 1 102 1 48 1 215 1 50 1 7 1 302 1 333 1 303 1 108 3 110 3 13 1 85 1 88 1 14 2 263 1 377 1 230 1 284 1 234 1 162 1 16 1 317 2 205 1 
132 1 0 1 120 1 22 1 147 1 48 1 50 1 215 1 7 1 302 1 303 1 108 2 110 2 85 1 88 1 14 2 263 1 377 1 230 1 284 1 162 1 234 1 16 1 317 2 205 1 
108 1 0 2 134 1 238 1 13 1 110 1 111 1 85 2 338 1 138 1 113 1 57 1 190 1 350 1 88 1 176 1 48 1 7 2 284 1 162 2 333 1 234 1 205 1 
0 1 120 1 67 1 240 1 102 1 48 1 215 1 50 1 7 1 302 1 333 1 303 1 108 1 110 1 13 1 85 1 88 1 263 1 230 1 284 1 234 1 162 1 287 1 16 1 317 2 205 1 
133 1 
207 1 360 1 209 1 323 1 294 1 296 1 143 1 144 1 268 1 242 4 72 5 45 2 24 2 246 4 331 3 25 1 248 1 370 2 250 1 166 1 335 1 9 1 151 2 27 1 28 1 79 1 274 1 337 1 82 5 311 1 314 2 156 1 262 3 229 1 32 3 115 1 34 1 116 1 358 2 37 1 318 1 63 1 
207 1 360 1 209 1 323 1 294 1 296 1 143 1 144 1 268 1 242 4 72 5 45 2 24 2 246 4 331 3 25 1 248 1 370 2 250 1 166 1 335 1 9 1 151 2 27 1 28 1 79 1 274 1 337 1 82 5 311 1 314 2 156 1 262 3 229 1 32 3 115 1 34 1 116 1 358 2 37 1 318 1 63 1 
360 1 207 1 345 1 209 1 68 2 294 1 296 1 143 1 144 1 268 1 242 4 72 4 331 2 24 2 270 2 246 4 25 1 248 1 370 2 250 1 166 1 335 1 9 1 27 1 28 1 79 1 274 1 82 4 311 1 199 1 314 2 262 2 32 2 229 1 115 1 34 1 116 1 379 2 318 1 
134 1 294 1 296 1 143 2 190 1 144 2 350 2 242 5 45 2 48 2 246 5 248 1 250 2 9 1 53 1 151 2 253 1 311 1 260 1 199 1 314 2 57 1 262 2 115 1 116 1 358 2 318 1 205 1 360 1 207 1 323 1 209 1 68 2 268 1 72 4 331 2 24 3 217 1 25 1 370 2 166 1 335 1 27 1 28 1 79 1 274 1 82 6 173 1 338 1 88 2 32 2 229 1 34 1 284 1 234 2 
274 1 79 1 360 1 207 1 82 2 311 1 294 1 296 1 242 3 201 1 72 2 229 1 115 1 24 1 331 1 246 3 248 1 166 1 335 1 27 1 318 1 28 1 
274 1 79 1 360 1 207 1 82 1 311 1 294 1 296 1 144 1 262 1 242 3 201 1 72 3 229 1 115 1 24 1 246 3 248 1 166 1 335 1 9 1 27 1 318 1 28 1 
207 1 360 1 294 1 296 1 144 1 242 3 72 3 24 1 246 3 331 1 248 1 166 1 335 1 9 1 27 1 28 1 79 1 274 1 82 2 311 1 262 1 201 1 229 1 32 1 115 1 318 1 
237 1 360 1 207 1 209 1 323 1 294 1 296 1 143 1 144 5 268 1 242 5 72 6 45 2 24 3 246 5 331 4 25 1 248 1 370 2 250 1 166 1 335 1 9 5 151 2 27 1 28 1 79 1 274 1 337 1 82 7 311 1 314 2 156 1 262 4 201 1 229 1 32 4 115 1 34 1 116 1 358 2 37 1 318 1 63 1 
360 1 207 1 209 1 323 1 68 2 294 1 296 1 143 1 144 2 268 1 242 4 72 4 45 2 331 2 24 2 246 4 25 1 248 1 370 2 250 1 166 1 335 1 9 1 151 2 27 1 28 1 79 1 274 1 82 4 311 1 199 1 314 2 262 2 32 2 229 1 115 1 34 1 116 1 358 2 318 1 
207 1 360 1 209 1 323 1 294 1 296 1 143 1 144 1 242 4 268 1 72 4 45 2 331 2 24 2 246 4 25 1 248 1 370 2 250 1 166 1 335 1 9 1 151 2 27 1 28 1 79 1 274 1 337 1 82 4 311 1 314 2 156 1 262 2 32 2 229 1 115 1 34 1 116 1 358 2 37 1 318 1 
207 1 360 1 209 1 323 1 294 1 296 1 143 1 144 1 242 4 268 1 72 4 45 2 331 2 24 2 246 4 25 1 248 1 370 2 250 1 166 1 335 1 9 1 151 2 27 1 28 1 79 1 274 1 337 1 82 4 311 1 314 2 156 1 262 2 32 2 229 1 115 1 34 1 116 1 358 2 37 1 318 1 
207 1 360 1 345 1 209 1 68 2 294 1 296 1 143 1 144 1 242 4 268 1 72 4 331 2 24 2 270 2 246 4 25 1 248 1 370 2 250 1 166 1 335 1 9 1 27 1 28 1 254 1 79 1 274 1 82 4 311 1 314 2 156 1 262 2 32 2 229 1 115 1 34 1 116 1 379 2 318 1 17 1 
241 1 297 1 189 1 188 1 100 1 146 1 300 2 148 1 304 1 305 1 336 1 30 1 11 1 80 1 309 2 310 1 312 1 354 1 83 6 355 1 174 2 282 1 129 3 158 1 288 2 117 3 
66 3 39 1 41 1 265 3 325 1 326 1 241 11 139 1 297 2 189 2 191 1 23 1 300 1 369 2 122 1 305 2 107 2 30 4 309 2 80 2 310 2 223 1 312 1 279 1 83 14 174 4 355 11 282 2 129 6 158 1 288 1 117 8 321 1 
207 2 294 2 42 1 213 1 139 1 189 1 190 1 192 1 267 1 350 1 48 1 300 1 169 1 305 1 273 1 30 1 372 1 308 1 80 1 310 1 125 1 277 1 312 1 279 1 83 2 57 1 174 2 226 1 88 1 282 1 129 1 284 1 234 1 318 1 117 1 205 1 64 1 321 1 
294 3 241 7 139 1 42 2 297 3 188 1 189 3 190 2 192 1 100 1 350 1 48 3 300 2 103 2 148 1 304 1 305 3 107 2 11 1 308 2 309 8 310 3 312 3 155 1 57 2 355 7 59 2 202 1 158 3 318 1 204 2 117 10 359 1 64 1 205 2 321 1 207 3 267 1 369 2 169 2 122 4 336 1 30 7 80 3 125 1 223 2 277 2 279 1 83 20 174 6 88 3 282 3 129 10 230 1 284 2 234 3 288 4 343 2 236 2 
207 1 134 1 210 1 294 1 69 1 136 1 139 1 189 2 190 3 192 1 350 2 48 8 8 1 371 1 305 2 307 1 80 2 125 1 310 2 312 2 354 1 83 2 338 1 57 2 174 4 88 8 282 2 129 1 230 1 357 2 284 2 234 7 341 1 93 1 318 1 117 1 64 1 205 2 321 1 
207 1 294 1 241 1 297 1 189 1 192 1 369 1 218 1 305 1 107 1 30 1 309 1 80 1 125 1 310 1 256 1 223 1 312 1 279 1 83 3 355 1 174 2 282 1 129 2 158 1 288 1 94 1 318 1 117 1 
309 1 80 1 310 1 312 1 241 1 83 2 354 1 297 1 189 1 355 1 174 2 70 1 282 1 122 1 305 1 117 2 107 1 30 1 
309 1 80 1 310 1 223 1 312 1 241 1 83 2 354 1 189 1 355 1 174 2 282 1 129 2 158 1 288 1 305 1 344 1 30 1 
241 2 297 1 189 1 369 1 305 1 122 1 107 1 30 2 80 1 309 2 310 1 223 1 312 1 354 1 83 4 174 2 355 2 282 1 129 2 158 1 288 1 117 2 
309 1 80 1 310 1 312 1 241 1 83 2 297 1 189 1 355 1 174 2 70 1 282 1 371 1 122 1 305 1 117 2 107 1 30 1 
309 1 80 1 310 1 223 1 312 1 241 1 83 2 189 1 355 1 174 2 282 1 129 2 158 1 288 1 371 1 305 1 344 1 30 1 
241 2 297 1 189 1 369 1 371 1 305 1 122 1 107 1 30 2 80 1 309 2 310 1 223 1 312 1 83 4 174 2 355 2 282 1 129 2 158 1 288 1 117 2 
309 2 80 1 310 1 223 1 312 1 241 2 83 4 297 1 189 1 355 2 174 2 282 1 129 2 158 1 369 1 288 1 122 1 305 1 117 2 107 1 30 2 
207 1 294 1 42 1 139 1 189 1 190 1 350 1 48 1 300 1 103 1 169 1 305 1 308 1 80 1 310 1 277 1 312 1 83 2 57 1 174 2 88 1 282 1 129 1 284 1 234 1 117 1 205 1 321 1 
292 1 207 1 294 1 42 1 139 1 189 1 190 1 350 1 145 1 48 1 300 1 169 1 305 1 80 1 310 1 312 1 83 2 339 1 57 1 174 2 88 1 282 1 129 1 284 1 234 1 117 1 205 1 321 1 
241 2 297 1 189 1 369 1 305 1 122 1 107 1 30 2 80 1 309 2 310 1 223 1 312 1 279 1 83 4 174 2 355 2 282 1 129 2 158 1 288 1 117 2 
207 1 294 1 241 2 297 1 42 1 189 1 190 1 48 1 103 1 369 1 8 1 169 1 122 1 305 1 107 1 30 2 309 2 308 1 80 1 310 1 223 1 277 1 312 1 83 4 57 1 355 2 174 2 88 1 282 1 129 2 158 1 284 1 234 1 288 1 117 2 205 1 236 1 
207 1 294 1 241 1 349 1 297 1 189 1 192 1 369 1 218 1 122 1 305 1 107 1 30 1 309 1 80 1 125 1 310 1 223 1 312 1 279 1 83 3 174 2 355 1 282 1 129 1 158 1 94 1 318 1 117 2 
66 2 39 1 239 2 265 1 325 1 295 1 348 1 297 3 328 1 189 2 5 1 71 1 245 1 369 3 332 2 105 1 122 3 107 3 80 2 309 6 310 2 223 3 83 19 224 1 174 4 282 2 129 10 158 3 288 3 117 9 
181 1 66 2 239 1 265 2 295 1 325 2 327 1 348 1 297 3 328 2 189 3 141 1 71 2 245 1 369 3 332 4 26 2 122 2 107 3 309 4 80 3 310 3 223 2 83 26 224 1 58 1 174 6 225 1 282 3 129 12 158 2 288 2 117 14 38 1 
181 1 66 4 39 1 121 1 239 1 265 3 325 3 295 1 327 1 348 1 297 5 188 1 328 2 189 3 141 1 5 1 100 1 71 1 245 1 369 4 332 4 148 1 304 1 26 1 122 4 107 4 336 1 11 1 80 3 309 8 310 3 223 4 83 41 224 1 58 1 174 6 225 1 282 3 129 21 158 5 288 4 38 1 117 20 
181 1 66 4 39 1 121 1 239 1 265 3 325 3 295 1 327 1 348 1 297 5 188 1 328 2 189 4 141 1 5 1 100 1 71 1 245 1 369 4 332 4 148 1 304 1 26 2 122 3 107 4 336 1 11 1 80 4 309 7 310 4 223 3 83 38 224 1 58 1 174 8 225 1 282 4 129 18 158 4 288 4 38 1 117 20 
181 1 66 4 39 2 41 2 239 1 265 4 325 2 295 1 327 1 348 1 297 8 188 1 328 1 189 2 141 1 100 1 71 1 245 1 369 7 332 4 148 1 304 1 26 1 122 7 107 7 336 1 11 1 80 2 309 14 310 2 223 7 83 52 224 1 58 1 174 4 225 1 282 2 129 25 158 8 288 7 38 1 117 27 
298 1 194 1 65 1 49 1 247 1 182 1 378 1 324 1 4 1 131 1 
96 1 152 1 
298 1 194 1 65 1 264 1 15 1 182 1 378 1 95 1 131 1 
221 2 194 1 65 1 182 1 324 1 347 1 4 1 144 1 242 1 298 1 49 1 246 1 378 1 233 1 75 1 104 1 272 1 131 1 
221 2 194 1 65 1 182 1 324 1 347 1 4 1 144 1 242 1 298 1 49 1 246 1 378 1 233 1 75 1 104 1 272 1 131 1 
221 2 194 1 65 1 182 1 324 1 347 1 4 1 144 1 242 1 298 1 49 1 246 1 378 1 233 1 75 1 104 1 272 1 131 1 
269 1 290 1 112 1 
269 1 290 1 112 1 
352 1 319 1 
290 1 352 1 319 1 
90 1 211 1 
207 2 96 1 65 1 322 1 182 1 294 2 211 1 43 1 192 2 214 1 242 1 298 1 300 1 246 1 104 1 272 1 152 1 220 1 221 1 194 1 125 2 84 1 90 1 378 1 342 1 318 2 131 1 
269 1 112 1 
290 1 352 1 319 1 
207 2 294 2 69 1 212 1 139 1 189 1 190 1 351 1 48 2 305 1 170 1 219 1 307 1 80 1 310 1 195 1 312 1 279 1 83 2 57 1 174 2 88 2 282 1 129 1 357 2 284 1 234 2 318 2 117 1 205 1 321 1 
120 1 363 1 196 1 88 2 263 1 102 1 230 1 48 2 215 1 50 1 7 1 284 1 8 1 302 1 234 2 249 1 303 1 317 2 205 1 
120 1 363 1 366 1 88 1 263 1 102 1 230 1 48 1 215 1 50 1 7 1 302 1 284 1 234 1 303 1 317 2 205 1 
134 1 111 1 196 1 338 1 57 1 190 1 350 1 88 1 48 1 7 1 284 1 234 1 235 1 205 1 
120 1 363 1 196 1 88 1 263 1 102 1 230 1 48 1 215 1 50 1 7 1 302 1 284 1 234 1 249 1 303 1 317 2 205 1 
251 1 
207 3 294 3 139 1 42 1 189 1 190 1 192 2 350 1 48 1 300 1 103 1 218 2 169 1 305 1 171 1 80 1 308 1 310 1 125 2 277 1 312 1 83 1 57 1 174 2 88 1 282 1 129 1 284 1 234 1 318 2 163 1 205 1 
97 2 165 2 68 4 173 1 143 2 144 4 268 1 217 1 34 1 25 1 116 1 250 1 304 1 9 2 151 2 
19 1 146 1 74 1 250 1 9 1 143 1 144 1 
323 1 82 1 68 1 143 1 144 2 242 1 268 1 45 1 246 1 24 1 34 1 25 1 116 1 250 1 358 1 9 1 151 1 
81 1 375 1 42 1 57 1 190 2 350 1 88 1 175 1 268 1 48 1 34 1 25 1 284 1 116 1 234 1 179 1 205 2 
181 1 97 5 362 2 66 1 165 5 68 6 265 1 325 1 327 1 297 2 141 1 143 5 144 5 242 1 268 2 217 1 246 1 24 1 25 2 369 2 250 8 271 1 9 2 151 3 353 1 107 2 31 1 223 2 82 1 173 1 225 1 158 2 34 2 116 2 38 1 
207 1 362 2 20 1 294 1 99 1 2 1 297 2 188 1 143 2 192 1 268 1 242 1 44 1 246 1 25 1 218 1 148 1 250 2 336 1 171 1 31 1 337 1 125 1 229 1 158 1 34 1 116 1 318 1 
19 1 143 1 144 1 268 1 74 1 34 1 25 1 116 1 250 1 9 1 
97 5 31 1 362 2 223 2 165 5 68 10 297 2 143 5 144 5 59 1 158 2 369 2 250 5 151 5 107 2 
242 1 246 1 24 1 82 1 9 1 144 1 
164 1 134 1 190 1 143 2 350 2 268 1 242 3 299 1 48 4 217 2 24 2 246 3 25 2 250 2 53 1 82 4 173 2 86 1 338 1 260 1 57 1 88 4 89 2 34 2 284 1 116 2 234 4 289 1 205 1 
298 1 52 1 131 1 
298 1 52 1 131 1 
298 1 90 1 33 1 4 1 131 1 
298 1 52 1 131 1 
298 1 365 1 131 1 
298 1 365 1 131 1 
298 1 365 1 131 1 
298 1 131 1 
194 1 182 1 
11 1 309 3 80 2 310 2 83 8 297 1 189 2 188 1 174 4 100 1 282 2 129 4 158 1 148 1 304 1 288 2 26 1 117 4 122 1 336 1 
11 1 309 2 83 6 297 1 188 1 100 1 129 3 146 1 158 1 148 1 304 1 288 2 117 3 336 1 
309 2 80 1 310 1 223 1 83 4 297 1 189 1 128 1 174 2 282 1 129 2 158 1 369 1 288 1 117 2 122 1 107 1 
309 2 223 1 66 2 39 1 265 1 325 1 83 7 297 1 129 4 158 1 369 1 288 1 117 3 122 1 107 1 
66 2 39 1 41 1 40 1 265 2 297 3 188 2 189 2 191 1 100 1 369 2 148 1 304 1 26 2 122 4 107 2 336 2 11 1 309 9 80 2 310 2 223 2 83 23 174 4 282 2 129 12 158 3 288 5 117 11 
129 1 66 1 83 1 
265 1 83 1 117 1 
80 1 309 3 310 1 223 1 83 6 297 1 189 1 128 1 174 2 59 1 282 1 129 3 158 1 369 1 288 2 117 3 122 1 107 1 
181 1 66 1 265 1 325 1 327 1 297 2 189 1 141 1 245 1 369 2 122 1 107 2 80 1 309 2 310 1 223 2 83 12 174 2 225 1 282 1 129 6 158 2 288 1 38 1 117 6 
309 2 83 6 297 1 188 1 129 3 158 1 148 1 288 1 117 3 122 1 336 1 
11 1 309 2 80 1 310 1 40 1 83 3 188 1 189 1 174 2 100 1 282 1 129 2 288 1 26 1 117 1 122 1 336 1 
80 1 309 5 310 1 2 1 83 10 297 2 189 1 188 2 174 2 282 1 245 1 129 5 158 2 148 1 288 3 122 2 117 5 336 2 
80 1 309 1 310 1 83 2 297 1 189 1 174 2 282 1 245 1 117 2 122 1 107 1 
309 2 80 1 310 1 223 1 83 4 297 1 189 1 174 2 282 1 129 2 245 1 158 1 369 1 288 1 117 2 122 1 107 1 
80 3 309 2 310 3 40 1 83 3 189 3 188 1 174 6 5 1 282 3 129 2 245 1 288 1 26 1 122 1 117 1 336 1 
208 1 66 4 39 1 40 1 265 3 325 1 297 5 188 3 189 5 5 1 100 1 245 1 369 3 148 2 304 1 26 2 122 5 107 3 336 3 29 1 11 1 80 5 309 12 310 5 223 3 278 1 83 34 128 1 174 10 282 5 129 18 158 5 288 7 117 16 
66 1 265 1 325 1 297 1 189 1 188 1 100 1 245 1 148 1 304 1 336 1 11 1 80 1 309 2 310 1 83 8 174 2 282 1 129 4 158 1 288 2 38 1 117 4 
66 2 39 1 265 1 325 1 297 2 188 1 189 2 100 1 245 1 369 1 148 1 304 1 122 1 107 1 336 1 11 1 80 2 309 3 310 2 83 11 128 1 174 4 282 2 129 5 158 1 288 2 38 1 117 6 
181 1 66 1 265 1 325 1 327 1 297 3 188 1 189 3 141 1 100 1 245 1 369 2 148 1 304 1 26 1 122 1 107 2 336 1 11 1 80 3 309 4 310 3 223 2 83 19 128 1 174 6 225 1 282 3 129 10 158 3 288 3 38 1 117 9 
181 1 66 1 265 1 325 1 327 1 297 3 188 1 189 3 141 1 100 1 245 1 369 2 148 1 304 1 26 1 122 2 107 2 336 1 11 1 80 3 309 5 310 3 223 1 83 17 128 1 174 6 225 1 282 3 129 7 158 2 288 3 38 1 117 10 
66 1 265 1 325 1 297 1 189 1 188 1 100 1 245 1 148 1 304 1 336 1 11 1 80 1 309 2 310 1 83 8 174 2 282 1 129 4 158 1 288 2 38 1 117 4 
181 1 66 1 265 1 325 1 327 1 297 2 189 1 141 1 245 1 369 2 122 1 107 2 80 1 309 2 310 1 223 2 83 12 174 2 225 1 282 1 129 6 158 2 288 1 38 1 117 6 
181 1 66 1 265 1 325 1 327 1 297 3 188 1 189 4 141 1 100 1 245 1 369 2 148 1 304 1 26 2 122 2 107 2 336 1 11 1 80 4 309 5 310 4 223 1 83 18 128 1 174 8 225 1 282 4 129 8 158 2 288 3 38 1 117 10 
181 1 66 1 265 1 325 1 327 1 297 3 189 4 141 1 5 1 245 1 369 3 26 2 122 3 107 3 80 4 309 6 310 4 223 2 83 16 174 8 225 1 282 4 129 7 158 2 288 3 38 1 117 9 
11 1 309 6 83 7 297 1 188 3 100 2 129 4 158 1 148 1 288 3 122 3 117 3 336 3 
181 1 66 1 265 1 325 1 327 1 297 3 188 1 189 4 141 1 5 1 100 1 245 1 369 2 148 1 304 1 26 2 122 1 107 2 336 1 11 1 80 4 309 4 310 4 223 1 83 18 174 8 225 1 282 4 129 8 158 2 288 3 38 1 117 10 
207 1 360 1 228 1 300 1 294 1 76 1 318 1 
360 1 207 1 294 1 257 1 368 1 228 1 300 1 301 1 286 1 76 1 318 1 123 1 
134 1 146 1 48 1 284 1 234 1 338 1 57 1 190 1 205 1 88 1 350 1 
207 2 308 1 125 1 294 2 42 1 57 1 190 1 192 1 350 1 88 1 48 1 300 1 284 1 234 1 169 1 318 1 205 1 64 1 
79 1 207 2 308 1 125 1 294 2 42 2 57 2 190 3 192 2 88 1 229 1 89 1 48 1 300 1 51 1 284 1 234 1 77 1 335 1 169 1 318 2 205 1 64 1 
207 2 294 2 42 2 190 3 192 2 48 2 300 1 51 1 77 1 335 1 169 1 79 1 125 1 339 1 57 2 88 2 89 1 229 1 284 1 234 2 285 1 318 2 64 1 205 1 
186 1 42 1 190 4 144 1 350 1 242 2 48 3 246 2 51 1 77 1 9 1 274 1 82 1 197 1 57 1 88 3 89 1 161 1 284 1 234 3 285 1 179 1 205 1 
274 1 82 1 42 1 57 1 190 4 144 1 350 1 88 3 242 2 227 1 89 1 48 3 246 2 51 1 161 1 284 1 234 3 285 1 77 1 9 1 205 1 179 1 
48 1 284 1 234 1 341 1 205 1 88 1 
81 1 210 1 185 1 69 1 136 1 42 1 57 2 190 3 350 2 88 7 357 1 230 1 48 7 73 1 8 1 284 2 234 6 341 1 168 1 93 1 205 3 
207 2 294 2 241 1 212 1 297 1 42 1 188 1 189 2 190 1 192 1 100 1 48 1 300 2 103 1 8 1 148 1 304 1 169 1 305 2 336 1 30 1 11 1 309 2 80 2 308 1 310 2 125 1 312 2 277 1 83 6 279 1 57 1 355 1 174 4 88 1 282 2 129 3 158 1 284 1 234 1 288 2 318 1 204 1 117 3 205 1 64 1 236 1 
19 1 43 1 140 1 143 1 190 2 144 1 350 1 268 2 242 3 299 1 48 1 74 1 246 3 24 1 25 2 250 1 9 1 274 1 82 2 280 1 88 1 227 1 34 2 160 1 161 1 116 2 234 1 179 1 
81 1 42 1 57 1 190 2 88 2 175 1 48 2 161 1 8 1 284 1 234 2 341 1 205 2 
134 1 3 1 338 1 57 1 190 1 350 1 88 4 48 4 8 1 284 1 234 4 285 1 205 1 
373 1 185 1 155 1 42 1 57 1 190 1 88 2 89 1 48 2 284 1 234 2 168 1 320 1 205 2 
263 1 48 1 215 1 50 1 284 1 234 1 317 1 205 1 88 1 350 1 
351 1 230 1 48 2 284 1 8 1 234 2 69 1 57 1 190 1 205 1 88 2 
134 1 210 1 69 1 136 1 3 1 338 1 57 2 190 3 350 1 88 5 89 1 48 5 8 1 284 2 234 4 205 2 
134 1 21 1 69 1 136 1 3 1 338 1 57 2 190 3 350 1 88 5 89 1 48 5 8 1 284 2 234 4 205 2 
207 2 125 1 294 2 42 1 339 1 57 1 190 1 192 1 350 1 88 1 48 1 300 1 284 1 234 1 169 1 318 1 205 1 64 1 
81 1 185 1 42 1 57 1 190 1 88 1 89 1 48 1 73 1 284 1 234 1 168 1 205 2 
300 1 1 1 334 1 187 1 87 1 
274 1 79 1 1 2 187 2 135 1 43 1 87 1 144 1 6 1 242 2 229 1 300 1 246 2 334 2 335 1 9 1 291 1 306 1 28 1 
207 1 1 1 195 1 294 1 87 1 334 1 318 1 170 1 219 1 
291 1 87 1 306 1 
132 1 108 3 13 1 110 3 240 1 367 1 14 1 147 1 377 1 333 1 118 1 
276 1 147 1 61 1 149 1 
147 1 377 1 
132 1 147 1 146 1 377 1 
132 1 108 1 147 1 377 1 110 1 13 1 333 1 
0 1 110 1 162 1 
132 1 18 1 108 3 13 1 110 3 240 1 259 1 147 1 377 1 340 1 333 1 118 2 
132 1 14 1 108 2 147 1 377 1 110 2 13 1 333 1 137 1 
108 1 120 1 13 1 110 1 240 1 147 1 316 1 215 1 333 1 149 1 317 1 
108 1 147 1 377 1 110 1 13 1 333 1 240 1 
132 1 108 1 377 2 110 1 13 1 333 1 240 1 
108 2 109 1 13 2 110 2 240 1 266 1 147 1 377 1 333 2 35 1 
132 1 108 3 13 1 110 3 240 1 367 1 14 2 101 1 147 2 377 1 61 1 333 1 149 1 
132 1 275 1 108 2 120 1 13 1 110 2 240 1 14 1 147 1 263 1 377 1 215 1 333 1 303 1 317 2 
132 1 108 4 13 2 110 4 240 1 137 1 14 2 147 2 377 1 61 1 333 2 149 1 54 1 
132 1 108 1 147 1 377 1 110 1 13 1 333 1 240 1 
132 2 108 4 276 1 110 4 13 1 259 1 14 2 147 3 377 2 340 1 61 1 333 1 149 1 118 1 
132 1 14 1 108 2 147 1 377 1 110 2 13 1 183 1 333 1 258 1 240 1 261 1 
132 1 108 3 147 1 377 1 340 2 110 3 13 1 333 1 240 1 259 1 118 2 315 1 
206 1 119 1 147 2 157 2 
108 1 244 1 110 1 13 1 333 1 240 1 
132 1 14 1 108 2 147 1 377 1 110 2 13 1 333 1 240 1 367 1 
114 1 
132 1 108 1 147 1 377 1 110 1 13 1 333 1 240 1 

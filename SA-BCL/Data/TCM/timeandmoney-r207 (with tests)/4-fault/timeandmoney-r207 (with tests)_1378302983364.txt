#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 83 109 245 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 83 109 245 87 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 83 109 245 (185,187) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 83 109 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 83 109 245 (185,187) (185,187) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 83 109 245 (185,187) (185,187) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 83 109 245 (185,187) (185,187) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 83 7 295 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 83 109 245 (185,187) (185,187) 101 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 83 109 245 87 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 83 306 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 83 306 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 83 306 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 83 306 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 83 306 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
207 1 189 1 42 1 47 1 329 1 323 1 
207 1 189 1 42 1 47 1 329 1 323 1 
207 1 189 1 42 1 47 1 329 1 323 1 
207 1 189 1 42 1 47 1 329 1 323 1 
221 3 309 1 50 2 88 1 112 1 113 1 114 1 21 2 323 4 233 1 138 1 207 1 122 3 189 4 42 1 263 1 329 1 167 1 
69 1 314 1 88 1 57 1 112 1 323 2 205 1 122 1 207 1 138 1 189 2 42 1 214 1 329 1 167 1 218 1 
221 1 88 1 112 1 21 1 323 3 207 1 122 2 189 3 42 2 263 1 329 2 243 1 218 1 
221 7 309 1 246 1 50 2 88 1 112 1 113 1 114 1 4 1 21 4 233 1 323 9 138 1 122 5 207 1 121 1 189 9 42 2 263 3 329 2 243 1 167 1 218 1 105 1 
221 7 309 1 246 1 50 2 88 1 112 1 113 1 114 1 4 1 21 4 233 1 323 9 138 1 122 5 207 1 121 1 189 9 42 2 263 3 329 2 243 1 167 1 218 1 105 1 
52 1 99 1 303 1 
52 1 236 2 111 1 
245 1 109 1 83 1 
87 1 245 1 109 1 83 1 
185 1 245 1 109 1 83 1 
52 1 74 1 272 1 77 1 90 1 92 1 91 1 276 1 157 1 98 1 99 1 326 1 283 1 331 1 
109 1 83 1 
38 1 74 1 272 1 34 1 15 1 
52 1 9 1 74 2 272 2 99 1 34 1 253 1 15 1 
74 1 272 1 34 1 
185 1 245 1 187 1 109 1 74 1 272 1 83 1 15 1 
52 1 
52 1 224 1 74 2 272 2 99 1 34 1 253 1 15 1 
48 1 52 1 268 1 74 5 272 5 34 2 78 1 253 1 293 1 79 1 277 2 140 2 239 2 190 1 99 1 300 1 219 1 128 1 15 2 
188 1 232 1 
188 1 232 1 
324 1 304 1 
324 1 304 1 
324 1 304 1 
188 1 232 1 321 1 
188 1 232 1 321 1 
188 1 180 1 232 1 
324 1 188 2 75 1 304 1 217 1 232 2 
188 1 232 1 321 1 
188 1 147 1 232 1 
188 1 147 1 232 1 
188 1 147 1 232 1 
153 1 247 1 297 1 188 1 74 1 272 1 264 1 83 1 232 1 319 1 322 1 
247 2 52 1 131 2 74 2 226 1 227 1 272 2 290 1 232 2 319 1 322 3 153 2 5 1 297 2 142 1 188 2 217 1 264 2 307 1 
138 1 167 1 233 1 
138 1 69 1 167 1 
69 1 260 1 213 1 167 3 117 1 233 2 
69 1 260 1 213 1 167 2 14 1 233 1 
69 1 260 1 213 2 167 2 233 1 
67 1 74 5 111 1 76 2 34 1 203 1 115 1 253 1 150 1 293 2 296 1 302 2 82 1 15 4 128 3 52 2 268 1 272 5 318 1 231 1 137 2 277 1 140 1 141 1 236 3 239 1 241 1 26 1 99 1 143 1 64 1 244 1 
67 3 74 9 200 5 111 3 76 6 34 6 203 3 115 3 150 1 253 1 79 1 293 6 38 5 212 1 159 1 302 6 82 4 15 7 128 8 52 5 268 1 19 1 272 9 318 2 181 1 235 1 277 2 140 2 236 9 237 1 239 2 26 3 99 1 64 2 244 3 
67 1 74 3 111 2 76 2 203 1 115 1 79 1 293 2 302 2 82 1 15 2 128 3 52 3 272 3 318 1 137 1 277 1 140 1 236 4 239 1 241 1 99 1 26 1 143 1 64 1 244 1 
67 2 74 4 111 3 76 4 203 2 115 2 79 1 293 4 212 1 302 4 82 2 128 5 15 3 52 4 272 4 318 1 181 1 137 2 277 1 140 1 236 7 237 1 239 1 241 1 99 1 26 2 143 1 64 1 244 2 
311 1 175 1 250 1 303 1 230 1 
175 1 165 1 
11 1 
175 1 274 1 59 1 
175 1 10 1 
175 1 274 1 
93 1 311 2 175 3 328 1 274 1 59 1 
67 1 51 2 130 1 53 1 223 1 199 3 56 7 58 1 148 1 35 3 203 1 116 1 152 1 292 1 60 2 61 1 220 4 
67 1 51 2 130 1 53 1 223 1 199 3 56 7 58 1 148 1 35 3 203 1 116 1 152 1 292 1 60 2 61 1 220 4 
67 1 51 2 130 1 53 1 223 1 199 3 56 7 58 1 148 1 35 3 203 1 116 1 204 1 292 1 152 1 60 2 61 1 220 4 
67 4 107 3 199 10 148 2 35 15 203 4 115 3 116 1 292 1 152 1 37 2 123 4 160 1 215 1 12 1 220 16 49 1 172 1 51 5 53 2 130 5 223 2 132 1 225 1 56 31 89 1 178 1 58 2 60 3 61 1 280 1 240 1 26 3 244 3 
67 1 199 4 148 1 203 1 35 4 118 1 116 1 37 4 292 1 8 1 12 1 220 5 49 2 51 3 53 1 130 1 223 1 132 2 56 9 89 2 58 1 60 2 280 2 61 1 
284 2 66 1 31 1 69 1 108 1 201 2 112 1 251 1 117 1 149 1 151 1 122 1 207 1 210 1 42 1 43 1 167 2 218 1 85 1 86 1 221 1 129 1 173 1 88 1 233 1 323 2 138 1 189 2 191 2 27 1 329 1 
284 1 66 1 31 1 69 1 108 1 201 1 112 1 251 1 117 1 151 1 122 1 154 1 210 1 42 1 43 1 218 1 167 2 85 1 221 2 174 1 173 1 269 1 88 1 233 1 323 3 138 1 189 3 191 1 27 1 329 1 
284 1 31 1 69 1 108 1 201 1 112 1 251 1 117 1 122 1 210 1 43 1 218 1 167 2 85 1 221 2 174 1 173 1 269 1 88 1 323 2 233 1 138 1 189 2 191 1 27 1 
284 1 108 1 201 1 251 2 254 1 120 1 258 1 154 1 210 1 42 1 43 2 218 2 85 2 16 1 222 1 175 1 133 1 274 1 323 1 183 1 189 1 191 1 329 1 
284 1 66 1 31 1 69 1 108 1 201 1 251 1 149 1 151 1 117 1 207 1 210 1 42 1 43 1 218 1 167 2 85 1 174 1 173 1 233 1 323 1 138 1 189 1 191 1 27 1 329 1 
40 1 
68 1 1 1 74 5 77 1 252 2 253 3 254 2 157 1 262 1 161 2 162 1 268 1 175 1 272 5 176 1 273 2 90 1 92 1 91 1 274 1 183 1 277 1 276 1 186 1 98 1 191 2 99 1 102 1 192 2 103 1 283 1 194 4 284 2 108 1 285 2 111 2 201 2 34 6 202 1 36 1 293 2 210 1 216 2 128 2 52 2 133 1 140 1 236 2 239 1 325 1 242 1 326 1 64 1 144 2 331 1 
68 1 74 3 77 1 34 2 202 1 253 1 157 1 161 1 162 1 224 1 272 3 176 1 90 1 92 1 91 1 276 1 98 1 242 1 326 1 283 1 331 1 194 2 
68 1 74 3 34 1 77 1 202 1 253 1 157 1 162 1 52 1 224 1 272 3 176 1 90 1 92 1 91 1 276 1 98 1 242 1 326 1 99 1 192 1 283 1 331 1 194 3 
68 1 74 3 77 1 34 2 202 1 253 1 157 1 161 1 162 1 52 1 224 1 272 3 176 1 90 1 92 1 91 1 276 1 98 1 242 1 326 1 99 1 192 1 283 1 331 1 194 3 144 1 
68 1 74 5 249 1 77 1 252 2 253 3 255 1 157 1 161 4 162 1 266 1 268 1 272 5 176 1 273 2 90 1 91 1 92 1 276 1 277 1 98 1 99 5 192 4 283 1 194 6 285 2 111 2 34 7 202 1 36 1 293 1 298 1 216 2 128 1 52 5 224 1 140 1 238 1 239 1 325 1 326 1 242 1 144 4 331 1 
68 1 74 4 77 1 252 2 253 2 157 1 161 2 162 1 268 1 272 4 176 1 273 2 90 1 91 1 92 1 276 1 277 1 98 1 99 1 192 2 283 1 103 1 194 4 285 2 111 2 34 4 202 1 36 1 293 1 216 2 128 1 52 2 140 1 236 2 239 1 325 1 326 1 242 1 331 1 144 2 
68 1 285 2 74 4 111 2 34 4 77 1 202 1 252 2 36 1 253 2 293 1 255 1 157 1 161 2 162 1 216 2 266 1 128 1 52 1 268 1 272 4 176 1 273 2 90 1 92 1 91 1 276 1 277 1 140 1 239 1 98 1 238 1 325 1 99 1 242 1 326 1 192 2 283 1 144 2 331 1 194 4 
68 1 285 2 74 4 111 2 34 4 77 1 202 1 252 2 36 1 253 2 293 1 255 1 157 1 161 2 162 1 216 2 266 1 128 1 52 1 268 1 272 4 176 1 273 2 90 1 92 1 91 1 276 1 277 1 140 1 239 1 98 1 238 1 325 1 99 1 242 1 326 1 192 2 283 1 144 2 331 1 194 4 
0 1 68 1 198 1 74 4 34 4 77 1 202 1 252 2 253 2 293 1 157 1 161 2 162 1 216 2 266 1 128 1 52 1 268 1 272 4 176 1 316 1 90 1 92 1 91 1 276 1 277 1 139 2 140 1 236 2 281 2 239 1 98 1 325 1 99 1 242 1 326 1 192 2 283 1 144 2 331 1 194 4 
245 1 68 1 109 1 74 2 249 1 77 1 34 1 202 1 157 1 161 1 162 1 83 1 52 1 272 2 176 1 90 1 92 1 91 1 185 1 276 1 187 1 98 1 99 1 242 1 326 1 192 1 283 1 331 1 194 3 144 1 
245 1 68 1 109 1 74 2 249 1 77 1 34 1 202 1 157 1 161 1 162 1 83 1 52 1 272 2 176 1 90 1 92 1 91 1 185 1 276 1 187 1 98 1 99 1 242 1 326 1 192 1 283 1 331 1 194 3 144 1 
0 1 68 1 74 4 77 1 252 2 253 2 157 1 161 2 162 1 268 1 272 4 176 1 90 1 91 1 92 1 276 1 277 1 98 1 281 2 99 1 192 2 283 1 103 1 194 4 34 4 202 1 293 1 216 2 128 1 52 1 140 1 139 2 236 2 239 1 325 1 326 1 242 1 331 1 144 2 
67 3 107 1 70 1 71 1 32 1 199 6 33 1 35 10 203 3 115 3 37 4 294 2 123 2 8 1 160 1 215 1 220 9 49 2 51 3 130 3 54 1 132 2 56 19 89 2 23 2 95 1 280 2 25 1 26 3 244 3 
67 2 107 2 196 1 70 1 71 1 32 2 199 4 33 1 35 12 203 3 115 3 37 6 80 1 294 4 156 1 123 2 8 1 12 2 215 2 13 1 220 14 49 3 51 2 130 2 54 2 132 3 56 26 89 3 229 1 23 1 24 1 280 3 26 2 244 3 
67 5 70 1 71 1 148 1 80 1 156 1 8 1 160 1 12 1 13 1 89 3 23 1 24 1 280 3 25 1 26 4 107 3 196 1 32 2 199 8 33 1 203 5 35 21 115 4 116 1 37 6 292 1 294 4 123 4 215 3 126 1 220 20 49 3 51 4 130 4 54 1 56 41 132 3 58 1 229 1 60 1 61 1 244 4 
67 4 196 1 107 3 70 1 71 1 32 2 199 7 33 1 148 1 35 18 203 5 115 4 116 1 292 1 37 8 80 1 294 4 156 1 123 4 8 1 160 1 12 2 215 3 126 1 13 1 220 20 49 4 51 4 130 3 54 1 132 4 56 38 89 4 58 1 229 1 23 1 24 1 60 1 61 1 280 4 25 1 26 3 244 4 
67 8 196 1 107 4 70 1 71 1 32 1 199 14 33 1 148 1 35 25 203 8 115 7 116 1 292 1 37 4 80 1 294 4 156 1 123 4 8 1 160 2 12 1 215 2 13 1 220 27 49 2 51 7 130 7 54 1 132 2 56 52 89 2 58 1 229 1 23 1 24 1 60 1 61 1 96 2 280 2 26 7 244 7 
153 1 247 1 297 1 208 1 188 1 226 1 227 1 217 1 264 1 232 1 
278 1 180 1 
153 1 247 1 297 1 188 1 177 1 264 1 330 1 320 1 232 1 
286 1 321 1 
147 1 75 1 265 1 
247 1 52 1 131 1 74 1 226 1 227 1 272 1 290 1 319 1 232 1 322 2 153 1 297 1 142 1 188 1 217 1 264 1 307 1 
247 1 52 1 131 1 74 1 226 1 227 1 272 1 290 1 319 1 232 1 322 2 153 1 297 1 142 1 188 1 217 1 264 1 307 1 
247 1 52 1 131 1 74 1 226 1 227 1 272 1 290 1 319 1 232 1 322 2 153 1 297 1 142 1 188 1 217 1 264 1 307 1 
286 1 75 1 321 1 
286 1 75 1 321 1 
147 1 265 1 
147 1 75 1 265 1 
17 1 209 1 
17 1 247 1 131 1 74 1 272 1 290 1 180 1 231 1 232 1 322 1 278 1 153 1 295 1 141 1 297 1 209 1 7 1 188 1 82 1 264 1 83 1 15 1 
284 2 108 1 201 2 77 2 35 1 37 2 257 1 210 1 125 1 45 1 127 1 84 1 220 1 86 2 170 1 49 1 18 1 175 1 271 1 313 1 132 1 56 2 89 1 274 1 22 1 276 2 280 1 97 1 191 2 327 1 331 2 
284 2 66 1 129 1 69 1 108 1 174 1 173 1 312 1 201 2 251 1 117 1 233 1 206 1 138 1 210 1 191 2 27 1 166 1 167 2 
284 1 66 1 69 1 174 1 173 1 108 1 287 1 201 1 251 1 117 1 233 1 206 1 138 1 210 1 191 1 27 1 167 2 
284 1 197 1 108 1 175 1 133 1 201 1 251 1 274 1 183 1 254 1 258 1 210 1 191 1 166 1 
284 1 66 1 69 1 174 1 173 1 108 1 312 1 201 1 251 1 117 1 233 1 206 1 138 1 210 1 191 1 27 1 166 1 167 2 
94 1 
52 1 99 1 303 1 219 1 78 1 128 1 293 1 
285 1 74 1 111 1 34 1 36 1 253 1 293 1 128 1 52 2 268 1 272 1 273 1 277 1 140 1 236 1 239 1 99 1 
67 2 145 2 72 2 74 5 76 6 78 1 253 3 254 1 10 2 164 2 165 3 268 4 175 10 272 5 274 3 182 2 277 4 98 2 191 3 99 2 26 2 102 1 29 1 193 2 195 2 284 3 108 3 201 3 111 6 34 5 203 2 115 2 293 8 211 1 210 4 299 1 302 6 219 1 305 2 128 9 129 1 310 1 52 8 311 2 55 2 228 1 317 2 59 3 140 4 236 12 239 4 64 2 328 1 244 2 
67 2 107 1 196 1 74 1 111 3 34 1 76 5 203 2 115 2 253 1 293 5 80 1 123 1 215 1 13 1 302 5 305 1 128 8 52 5 268 2 272 1 229 1 234 1 24 1 277 2 140 2 236 6 239 2 26 2 99 2 64 1 102 1 282 1 193 2 244 2 
245 1 67 1 268 1 109 1 74 1 272 1 148 1 58 1 203 1 116 1 293 1 185 1 255 1 277 1 140 1 187 1 239 1 101 1 83 1 193 2 128 2 
52 1 268 1 78 1 293 1 277 1 140 1 239 1 99 1 219 1 128 1 
67 2 52 5 111 5 76 5 203 2 115 2 293 5 236 10 26 2 302 5 193 2 305 1 244 2 195 1 128 5 
52 1 74 1 272 1 99 1 34 1 253 1 
284 4 108 1 1 1 74 3 201 4 34 4 253 2 79 1 293 2 254 2 210 1 211 1 262 1 128 2 268 1 175 1 272 3 133 1 135 1 274 1 183 1 277 2 140 2 279 1 239 2 191 4 64 2 102 2 29 2 
87 1 245 1 109 1 83 1 
52 4 268 1 111 2 76 2 293 2 277 1 60 1 140 1 236 4 239 1 99 2 302 2 64 1 102 1 128 1 
153 1 247 1 288 1 
153 1 247 1 288 1 
17 1 153 1 247 1 226 1 315 1 
153 1 247 1 288 1 
153 1 247 1 28 1 
153 1 247 1 28 1 
153 1 247 1 28 1 
153 1 247 1 
188 1 232 1 
67 1 49 2 51 2 130 1 56 8 199 3 132 2 89 2 148 1 58 1 203 1 35 4 116 1 37 4 292 1 60 1 280 2 61 1 12 1 220 4 
67 1 51 2 199 2 56 6 148 1 58 1 35 3 203 1 116 1 292 1 60 1 61 1 303 1 220 3 
67 1 49 1 51 1 130 1 199 2 110 1 132 1 56 4 89 1 35 2 203 1 115 1 37 2 280 1 26 1 244 1 220 2 
67 1 107 1 51 1 130 1 56 7 199 2 35 4 203 1 115 1 123 2 160 1 26 1 215 1 244 1 220 3 
67 3 107 2 199 9 148 2 203 3 35 12 115 2 3 1 116 1 292 1 37 4 155 1 123 2 160 1 12 2 220 11 49 2 51 5 130 4 56 23 132 2 89 2 58 2 60 1 61 1 96 1 280 2 26 2 244 2 
123 1 56 1 35 1 
107 1 56 1 220 1 
49 1 67 1 51 2 130 1 132 1 110 1 56 6 199 3 89 1 35 3 203 1 115 1 37 2 280 1 26 1 244 1 195 1 220 3 
67 2 107 1 196 1 199 2 35 6 203 2 115 2 37 2 80 1 123 1 8 1 215 1 13 1 220 6 49 1 51 1 130 1 56 12 132 1 89 1 229 1 24 1 280 1 26 2 244 2 
67 1 51 1 130 1 56 6 199 2 148 1 58 1 203 1 35 3 116 1 220 3 
49 1 51 1 130 1 199 2 56 3 132 1 89 1 58 1 148 1 35 2 3 1 292 1 37 2 280 1 61 1 12 1 220 1 
49 1 67 2 51 3 130 2 132 1 199 5 56 10 89 1 148 2 58 2 35 5 203 2 116 1 37 2 280 1 8 1 101 1 220 5 
49 1 130 1 132 1 56 2 199 1 89 1 203 1 37 2 8 1 280 1 244 1 220 2 
67 1 49 1 51 1 130 1 199 2 132 1 56 4 89 1 35 2 203 1 115 1 37 2 8 1 280 1 26 1 244 1 220 2 
49 3 51 1 130 1 56 3 132 3 199 2 89 3 148 1 58 1 35 2 3 1 37 6 8 1 280 3 25 1 12 1 220 1 
67 5 107 3 110 1 199 12 148 3 35 18 203 5 3 1 115 3 116 2 292 1 37 10 123 4 8 1 160 1 12 2 215 1 220 16 49 5 51 7 130 5 225 1 132 5 56 34 89 5 178 1 58 3 60 1 61 1 280 5 240 1 25 1 26 3 244 3 
67 1 107 1 199 2 148 1 203 1 35 4 116 1 37 2 292 1 123 1 8 1 215 1 220 4 49 1 51 2 56 8 132 1 89 1 58 1 229 1 60 1 280 1 61 1 
67 1 107 1 110 1 199 3 148 1 35 5 203 2 115 1 116 1 292 1 37 4 123 2 8 1 160 1 215 1 220 6 49 2 51 2 130 1 56 11 132 2 89 2 58 1 229 1 60 1 61 1 280 2 244 1 
67 3 107 1 196 1 110 1 199 4 148 1 35 10 203 3 115 2 116 1 292 1 37 6 80 1 123 1 8 1 215 1 12 1 13 1 220 9 49 3 51 3 130 1 56 19 132 3 89 3 58 1 229 1 24 1 60 1 61 1 280 3 26 2 244 2 
67 2 107 1 196 1 110 1 199 5 148 1 35 7 203 3 115 2 116 1 292 1 37 6 80 1 123 1 8 1 12 1 215 1 13 1 220 10 49 3 51 3 130 2 56 17 132 3 89 3 58 1 229 1 24 1 60 1 61 1 280 3 26 1 244 2 
67 1 107 1 199 2 148 1 203 1 35 4 116 1 37 2 292 1 123 1 8 1 215 1 220 4 49 1 51 2 56 8 132 1 89 1 58 1 229 1 60 1 280 1 61 1 
67 2 107 1 196 1 199 2 35 6 203 2 115 2 37 2 80 1 123 1 8 1 215 1 13 1 220 6 49 1 51 1 130 1 56 12 132 1 89 1 229 1 24 1 280 1 26 2 244 2 
67 2 107 1 196 1 110 1 199 5 148 1 35 8 203 3 115 2 116 1 292 1 37 8 80 1 123 1 8 1 215 1 12 2 13 1 220 10 49 4 51 3 130 2 56 18 132 4 89 4 58 1 229 1 24 1 60 1 61 1 280 4 26 1 244 2 
67 2 107 1 196 1 199 6 35 7 203 3 115 3 37 8 80 1 123 1 8 1 215 1 12 2 13 1 220 9 49 4 51 3 130 3 56 16 132 4 89 4 229 1 24 1 280 4 25 1 26 2 244 3 
67 1 51 3 130 3 56 7 199 6 148 3 58 3 35 4 203 1 116 1 292 2 61 1 220 3 
67 2 107 1 196 1 199 4 148 1 35 8 203 3 115 2 116 1 292 1 37 8 80 1 123 1 8 1 215 1 12 2 13 1 220 10 49 4 51 3 130 1 56 18 132 4 89 4 58 1 229 1 24 1 60 1 61 1 280 4 25 1 26 1 244 2 
276 1 41 1 261 1 77 1 92 1 119 1 331 1 
2 1 77 1 289 1 92 1 119 1 184 1 276 1 81 1 41 1 261 1 44 1 331 1 
284 1 254 1 108 1 210 1 175 1 133 1 191 1 201 1 303 1 274 1 183 1 
83 1 306 1 
83 1 306 1 
83 1 306 1 
284 3 52 1 248 1 108 1 311 1 175 4 74 2 272 2 201 3 34 1 274 1 59 1 254 1 210 1 124 1 98 1 10 1 191 3 99 1 164 1 46 1 29 1 165 1 
284 3 52 1 108 1 311 1 175 4 74 2 272 2 55 1 201 3 34 1 274 1 59 1 254 1 210 1 98 1 10 1 191 3 99 1 164 1 46 1 29 1 165 1 
284 1 108 1 210 1 191 1 201 1 168 1 
284 7 129 1 30 1 174 1 108 2 146 1 175 3 201 6 136 1 59 1 274 2 254 2 210 3 191 7 163 1 328 1 127 1 168 1 169 1 104 1 86 1 
83 1 306 1 
284 1 145 1 72 1 74 3 201 1 34 2 78 1 253 1 293 1 254 1 211 1 165 1 219 1 128 1 15 1 52 1 268 2 311 1 175 2 272 3 55 1 317 1 277 2 140 2 239 2 98 1 191 1 99 1 
284 2 129 1 108 1 311 1 210 2 175 2 191 2 201 2 328 1 228 1 168 1 274 1 59 1 
284 4 129 1 108 1 175 1 133 1 201 4 274 1 183 1 254 1 210 1 191 4 63 1 46 1 
284 2 108 1 146 1 175 1 134 1 201 2 59 1 274 1 210 2 191 2 100 1 65 1 29 1 104 1 
284 1 254 1 138 1 69 1 108 1 210 1 191 1 201 1 27 1 167 1 
284 2 129 1 174 1 108 1 175 1 271 1 201 2 274 1 210 1 191 2 127 1 
284 5 129 1 108 2 175 3 133 1 201 4 274 2 183 1 254 1 210 2 191 5 63 1 163 1 29 1 127 1 169 1 
284 5 129 1 108 2 175 3 133 1 201 4 291 1 274 2 183 1 254 1 210 2 191 5 63 1 29 1 127 1 169 1 
83 1 306 1 
284 1 108 1 146 1 175 1 201 1 136 1 59 1 274 1 210 2 191 1 328 1 29 1 104 1 
122 1 88 1 112 1 303 1 
122 1 189 1 42 1 88 1 112 1 329 1 323 1 
189 1 43 1 218 1 
308 1 20 1 88 1 112 1 323 3 256 1 205 2 122 1 207 1 189 3 42 1 329 1 
221 1 122 1 50 1 189 2 42 1 88 1 112 1 329 1 323 2 
113 1 21 1 323 1 233 1 207 1 122 1 138 1 189 1 42 1 329 1 167 1 
122 1 207 1 189 1 42 1 112 1 329 1 323 1 
207 1 189 1 42 1 88 1 112 2 329 1 323 1 
73 1 112 1 179 1 323 2 122 1 207 1 189 2 42 2 62 1 329 2 
221 2 88 1 112 1 4 1 21 1 323 3 207 1 122 2 189 3 42 1 263 1 329 1 105 1 
221 1 69 1 270 1 88 1 112 1 117 1 323 2 233 1 122 1 207 1 138 1 189 2 42 1 329 1 167 2 
221 2 309 1 50 1 88 1 112 1 21 1 323 4 207 1 122 2 189 4 42 2 263 1 329 2 
122 1 207 1 189 1 42 1 88 1 112 1 329 1 323 1 
308 1 221 2 20 1 88 2 112 2 21 1 323 4 205 1 122 3 189 4 42 1 263 1 301 1 329 1 
221 1 88 1 112 1 323 2 122 1 207 1 259 1 121 1 189 2 42 1 329 1 267 1 
308 2 20 1 88 1 112 1 323 3 205 2 122 1 207 1 39 1 189 3 42 1 329 1 
171 1 106 1 122 2 6 2 
207 1 189 1 42 1 329 1 275 1 323 1 
221 1 122 1 207 1 189 2 42 1 88 1 112 1 329 1 4 1 323 2 
158 1 
122 1 207 1 189 1 42 1 88 1 112 1 329 1 323 1 
221 1 205 1 122 1 207 1 189 3 42 1 88 1 112 1 329 1 4 1 323 3 
122 1 263 1 301 1 21 1 
122 1 112 1 

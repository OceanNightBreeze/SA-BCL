#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (77,85) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 364 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 58 273 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 1 354 1 236 2 191 1 269 6 150 1 4 1 240 2 192 1 317 2 242 1 207 1 298 1 66 1 321 2 11 9 277 3 40 9 42 4 346 5 134 2 137 1 231 1 258 2 26 1 163 1 233 2 141 1 
203 1 354 1 236 2 191 1 269 6 150 1 4 1 240 2 192 1 317 2 242 1 207 1 298 1 66 1 321 2 11 9 277 3 40 9 42 4 346 5 134 2 137 1 231 1 258 2 26 1 163 1 233 2 141 1 
203 1 354 1 236 2 191 1 269 7 150 1 4 1 240 2 192 1 317 2 242 1 207 1 298 1 66 1 321 2 11 10 277 4 40 10 42 5 346 6 134 2 137 1 231 1 258 2 26 1 163 1 233 2 141 1 
203 1 354 1 236 2 191 1 269 4 150 1 4 1 240 2 192 1 317 1 207 1 298 1 66 1 321 2 11 7 277 2 40 7 42 3 346 4 134 2 137 1 231 1 258 2 26 1 163 1 233 2 141 1 
40 4 42 2 346 3 134 1 269 3 150 1 240 1 137 1 317 2 242 1 258 1 26 1 321 1 163 1 11 4 233 1 277 1 141 1 
354 1 40 2 236 1 346 1 134 1 150 1 240 1 192 1 137 1 21 1 258 1 163 1 67 1 11 2 233 1 15 1 
40 3 42 1 236 1 346 2 134 2 269 1 150 1 137 1 207 1 163 1 11 3 233 2 277 1 
236 1 191 1 269 7 150 1 4 1 240 1 63 1 317 2 242 1 207 1 321 1 11 9 277 3 41 1 40 9 42 4 346 5 134 2 137 1 26 1 258 1 163 1 233 2 141 1 
236 1 191 1 269 7 150 1 4 1 240 1 63 1 317 2 242 1 207 1 321 1 11 9 277 3 41 1 40 9 42 4 346 5 134 2 137 1 26 1 258 1 163 1 233 2 141 1 
266 1 34 1 364 1 
266 1 0 1 213 2 
182 2 322 2 146 2 324 2 305 2 158 1 254 1 179 2 
189 2 290 1 334 1 143 1 335 1 146 2 312 1 356 1 205 1 238 1 272 1 35 2 208 1 7 1 319 1 245 1 106 2 195 1 247 1 17 1 322 2 250 1 196 1 324 2 158 1 176 1 254 1 348 2 97 1 373 1 179 3 180 1 74 2 375 1 182 3 305 2 82 1 
350 1 182 1 322 1 146 1 324 1 305 1 158 1 372 1 216 1 179 1 
266 1 292 1 146 1 224 1 371 1 179 1 284 1 34 1 182 1 103 1 183 1 376 1 14 1 216 1 
266 1 322 1 292 1 146 1 324 1 224 1 371 2 179 1 284 2 34 1 182 1 305 1 376 1 14 1 216 1 
361 1 64 1 284 1 152 1 371 1 
39 1 64 1 284 2 266 1 34 1 152 1 239 1 371 2 
284 1 152 1 371 1 
322 1 146 1 324 1 158 1 329 1 371 1 372 1 179 1 350 1 64 1 284 1 182 1 305 1 216 1 
266 1 
39 1 64 1 284 2 266 1 34 1 152 1 29 1 371 2 
39 1 69 1 266 1 251 1 294 2 315 2 60 1 371 5 125 1 112 1 64 2 284 5 34 1 36 1 362 2 117 1 6 1 152 2 212 1 
17 1 189 1 290 1 334 1 146 1 250 1 196 1 324 1 237 1 176 1 348 1 179 2 180 1 74 1 182 2 77 1 211 1 319 1 305 1 245 1 
322 1 146 5 324 4 237 1 254 1 227 1 179 5 360 1 182 5 211 2 183 1 305 4 154 1 234 1 
350 1 291 1 182 2 146 2 324 2 305 2 216 1 179 2 
364 1 254 1 
263 1 322 1 146 2 324 1 254 2 227 1 179 2 182 2 305 1 
77 1 54 1 174 1 
189 1 17 1 334 1 290 1 250 1 196 1 135 1 176 1 254 1 348 1 179 1 180 1 74 1 182 1 319 1 245 1 
322 1 182 3 146 3 211 1 324 3 305 3 254 1 179 3 
350 1 182 1 146 1 324 1 305 1 216 1 179 1 
263 1 182 1 322 1 146 1 324 1 305 1 216 1 227 1 179 1 
189 1 290 1 334 1 292 1 143 1 146 3 356 1 205 1 237 1 272 1 35 1 208 1 7 1 211 1 319 1 245 1 106 2 14 1 195 1 216 1 17 1 322 2 250 1 196 1 324 3 176 1 224 1 158 1 371 1 254 1 348 1 97 1 227 1 179 4 180 1 74 1 115 1 284 1 375 1 182 4 51 1 305 3 376 1 82 1 
182 2 146 2 324 1 211 1 183 1 305 1 254 1 154 1 179 2 
187 1 322 1 266 1 292 1 146 3 324 3 237 1 224 1 371 1 227 1 179 3 284 1 115 1 182 3 211 2 305 3 376 1 14 1 216 1 
322 1 146 2 324 2 227 1 179 2 182 2 77 1 211 1 305 2 54 1 
189 1 17 1 334 1 290 1 250 1 196 1 176 1 254 1 348 1 179 1 180 1 74 1 182 1 319 1 245 1 
189 1 17 1 334 1 290 1 84 1 196 1 254 1 348 1 179 1 180 1 74 1 182 1 319 1 245 1 246 1 
85 1 52 1 
291 1 182 1 146 1 324 1 305 1 14 1 216 1 179 1 
142 1 28 1 
142 1 28 1 
202 1 365 1 
202 1 365 1 
202 1 365 1 
169 1 142 1 28 1 
142 1 267 1 28 1 
202 1 142 2 249 1 280 1 28 2 365 1 
169 1 142 1 28 1 
169 1 142 1 28 1 
142 1 157 1 28 1 
142 1 157 1 28 1 
142 1 157 1 28 1 
142 1 146 2 267 1 190 1 338 1 316 1 62 1 10 1 68 1 107 1 71 1 324 2 347 1 371 1 254 1 349 1 179 2 284 1 182 2 305 2 28 1 332 1 165 1 262 1 
142 2 249 1 266 1 190 2 71 1 347 3 338 2 371 2 316 2 282 1 168 2 284 2 193 1 275 1 287 1 28 2 184 1 353 1 262 2 
258 1 321 1 240 1 
258 1 67 1 240 1 
98 1 22 1 258 3 321 2 67 1 253 1 
98 1 75 1 258 2 321 1 67 1 253 1 
98 2 258 2 321 1 67 1 253 1 
188 1 266 2 0 1 122 1 294 1 315 1 340 2 125 3 271 1 64 4 274 1 36 2 362 1 34 1 152 1 213 3 342 1 107 1 367 2 39 1 345 1 327 1 371 5 48 2 226 1 349 1 283 1 284 5 117 1 118 1 332 1 186 1 
188 2 266 5 31 1 0 3 294 2 315 2 340 6 125 8 167 1 361 5 64 7 243 1 36 6 34 1 362 2 152 6 213 9 342 2 370 1 69 1 39 1 345 3 221 5 327 3 371 9 48 6 349 4 226 1 283 3 330 1 284 9 230 1 117 1 118 3 186 3 
188 1 266 3 0 2 122 1 294 1 315 1 125 3 340 2 271 1 64 2 34 1 362 1 36 2 342 1 213 4 367 1 69 1 345 1 327 1 371 3 48 2 349 1 283 1 284 3 118 1 186 1 
188 1 266 4 0 3 122 1 294 1 315 1 340 4 125 5 167 1 271 1 64 3 34 1 243 1 362 1 36 4 213 7 342 1 367 2 370 1 69 1 345 2 327 2 371 4 48 4 349 2 283 2 284 4 118 2 186 2 
290 1 196 1 319 1 
268 1 196 1 
219 1 196 1 364 1 
196 1 61 1 
73 1 
290 1 196 1 
219 2 290 1 196 3 175 1 319 1 166 1 
369 1 327 1 101 1 2 1 373 4 114 1 35 7 209 1 352 3 331 1 129 1 139 1 78 2 131 1 164 2 186 1 82 3 
369 1 327 1 101 1 2 1 373 4 114 1 35 7 209 1 352 3 331 1 129 1 139 1 78 2 131 1 164 2 186 1 82 3 
369 1 327 1 101 1 2 1 373 4 114 1 76 1 35 7 209 1 352 3 331 1 129 1 139 1 78 2 131 1 164 2 186 1 82 3 
357 3 101 1 89 4 2 2 272 1 35 31 209 1 208 1 244 1 129 1 131 2 106 2 94 1 195 1 369 2 345 3 327 4 45 1 225 1 97 1 283 3 373 16 228 1 114 1 259 1 352 10 331 5 139 2 118 3 78 5 164 3 186 4 82 15 81 1 
101 1 2 1 272 2 35 9 208 2 129 1 131 1 106 4 94 1 195 2 369 1 327 1 97 2 373 5 114 1 181 1 352 4 331 1 139 1 78 3 164 2 56 1 186 1 82 4 
189 1 334 1 120 1 236 1 269 1 59 1 150 1 341 1 240 1 153 1 321 1 67 1 11 2 276 1 344 1 17 1 40 2 346 1 134 1 222 1 348 1 137 1 74 1 257 1 22 1 229 1 258 2 163 1 233 1 83 1 
189 1 235 1 265 1 334 1 120 1 236 1 269 2 59 1 341 1 240 1 153 1 321 1 67 1 11 3 344 1 17 1 40 3 346 1 134 1 222 1 348 1 137 1 74 1 257 1 22 1 229 1 258 2 163 1 53 1 233 1 
189 1 235 1 265 1 334 1 120 1 236 1 269 2 59 1 341 1 240 1 153 1 321 1 67 1 11 2 17 1 40 2 346 1 222 1 348 1 137 1 74 1 22 1 229 1 258 2 163 1 
189 1 310 1 290 1 334 1 236 2 59 2 320 1 11 1 17 1 40 1 108 1 134 1 196 1 222 2 348 1 180 1 74 1 303 1 304 1 229 2 53 1 233 1 306 1 
17 1 189 1 235 1 334 1 40 1 120 1 236 1 134 1 59 1 222 1 348 1 341 1 150 1 240 1 257 1 74 1 22 1 229 1 258 2 153 1 321 1 67 1 11 1 233 1 344 1 83 1 
132 1 
189 2 290 1 334 1 144 1 292 1 146 1 293 1 0 2 294 1 102 1 103 1 152 6 8 2 342 1 14 1 16 2 17 1 301 2 108 1 196 1 111 1 252 2 348 2 303 1 74 2 199 1 117 1 307 2 201 4 266 2 311 2 315 1 125 2 34 1 36 2 362 1 213 2 214 1 217 1 216 1 39 3 325 1 224 1 136 1 281 2 371 5 179 1 180 2 50 1 284 5 182 1 183 1 376 1 55 1 57 1 
201 2 292 1 146 1 293 1 102 1 103 1 152 2 14 1 216 1 39 1 111 1 224 1 371 3 252 1 179 1 50 1 284 3 182 1 183 1 376 1 29 1 55 1 
201 3 292 1 266 1 146 1 293 1 102 1 34 1 103 1 152 1 14 1 216 1 39 1 111 1 224 1 371 3 179 1 50 1 284 3 182 1 183 1 376 1 29 1 55 1 307 1 
201 3 292 1 266 1 146 1 293 1 102 1 34 1 103 1 152 2 14 1 216 1 16 1 39 1 111 1 224 1 371 3 252 1 179 1 50 1 284 3 182 1 183 1 376 1 29 1 55 1 307 1 
201 6 311 2 144 1 266 5 292 1 146 1 293 1 0 2 294 1 315 1 148 1 125 1 91 1 36 1 362 1 34 5 102 1 103 1 152 7 8 2 14 1 216 1 16 4 39 3 301 2 136 1 111 1 224 1 72 1 281 2 371 5 252 4 179 1 50 1 284 5 182 1 25 1 117 1 183 1 376 1 29 1 55 1 307 4 261 1 
292 1 144 1 146 1 293 1 0 2 294 1 102 1 103 1 152 4 8 2 14 1 16 2 301 2 111 1 252 2 117 1 307 2 201 4 311 2 266 2 315 1 125 1 362 1 36 1 34 1 213 2 216 1 217 1 39 2 136 1 224 1 281 2 371 4 179 1 50 1 284 4 182 1 183 1 376 1 55 1 
201 4 266 1 311 2 144 1 292 1 146 1 293 1 0 2 294 1 315 1 148 1 125 1 91 1 34 1 36 1 102 1 362 1 103 1 152 4 8 2 14 1 216 1 16 2 39 2 301 2 136 1 111 1 224 1 281 2 252 2 371 4 179 1 50 1 284 4 182 1 117 1 183 1 376 1 55 1 307 2 261 1 
201 4 266 1 311 2 144 1 292 1 146 1 293 1 0 2 294 1 315 1 148 1 125 1 91 1 34 1 36 1 102 1 362 1 103 1 152 4 8 2 14 1 216 1 16 2 39 2 301 2 136 1 111 1 224 1 281 2 252 2 371 4 179 1 50 1 284 4 182 1 117 1 183 1 376 1 55 1 307 2 261 1 
201 4 266 1 144 1 292 1 146 1 293 1 294 1 270 1 315 1 32 2 148 1 125 1 34 1 36 1 102 1 362 1 103 1 152 4 8 2 213 2 14 1 216 1 16 2 39 2 155 1 301 2 109 1 111 1 224 1 252 2 46 2 371 4 179 1 50 1 284 4 182 1 117 1 183 1 376 1 55 1 307 2 
201 5 266 1 311 2 144 1 292 1 146 1 293 1 0 2 294 1 315 1 148 1 125 1 91 1 34 1 36 1 362 1 102 1 103 1 152 5 8 2 14 1 216 1 16 3 39 2 301 2 136 1 111 1 224 1 281 2 371 4 252 3 179 1 50 1 284 4 182 1 25 1 117 1 183 1 376 1 55 1 307 3 261 1 
201 5 266 1 311 2 144 1 292 1 146 1 293 1 0 2 294 1 315 1 148 1 125 1 91 1 34 1 36 1 362 1 102 1 103 1 152 5 8 2 14 1 216 1 16 3 39 2 301 2 136 1 111 1 224 1 281 2 371 4 252 3 179 1 50 1 284 4 182 1 25 1 117 1 183 1 376 1 55 1 307 3 261 1 
292 1 144 1 146 1 293 1 294 1 102 1 103 1 152 4 8 2 14 1 16 2 155 1 301 2 111 1 252 2 117 1 307 2 201 4 266 1 315 1 125 1 32 2 362 1 36 1 34 1 213 2 216 1 217 1 39 2 224 1 371 4 46 2 179 1 50 1 284 4 182 1 183 1 376 1 55 1 
52 1 364 1 
336 1 356 2 357 1 89 1 272 2 3 1 127 1 35 4 208 2 7 1 105 1 106 4 174 3 216 1 195 2 254 1 97 2 373 1 375 1 198 1 77 3 308 1 82 3 
189 1 290 1 334 1 146 1 335 1 356 1 237 1 272 1 127 1 35 2 208 1 7 1 211 1 319 1 245 1 130 1 106 2 195 1 17 1 250 1 196 1 135 1 324 1 176 1 254 1 348 1 97 1 179 2 373 1 180 1 74 1 182 2 375 1 305 1 79 1 54 1 200 1 82 1 
189 1 146 1 121 1 356 1 237 1 90 1 272 1 127 1 35 2 208 1 7 1 211 1 106 2 195 1 324 1 326 1 348 1 97 1 179 1 180 1 74 1 182 1 375 1 305 1 260 1 82 2 
189 7 235 1 58 1 334 2 290 2 30 1 146 1 335 1 313 1 356 1 238 2 272 1 35 2 208 1 151 1 7 1 211 1 276 1 106 2 95 1 195 1 17 2 108 1 70 1 324 1 196 3 348 8 97 1 179 1 373 1 180 2 74 8 303 1 182 1 375 1 52 1 305 1 377 1 82 1 
146 1 356 1 272 1 127 1 35 3 208 1 7 1 106 2 174 1 195 1 345 1 322 1 43 1 324 1 327 1 97 1 283 1 227 1 179 1 373 1 182 1 77 1 352 1 305 1 78 1 118 1 54 1 186 1 82 2 
52 1 
52 1 
52 1 
70 1 356 1 272 1 97 1 373 2 35 2 208 1 77 1 7 1 352 1 331 1 118 1 54 1 106 2 174 1 195 1 215 1 186 1 
345 1 70 1 356 1 327 1 272 1 97 1 35 2 208 1 77 1 7 1 352 1 173 1 78 1 54 1 106 2 174 1 195 1 82 2 
356 1 272 1 35 4 208 1 7 1 106 2 174 2 195 1 345 1 70 1 327 1 283 1 97 1 373 2 77 2 352 2 331 1 118 1 78 1 54 2 186 1 82 2 
345 1 356 1 327 1 272 1 97 1 283 1 373 2 35 4 208 1 77 2 7 1 352 2 331 1 78 1 118 1 54 2 106 2 174 2 195 1 186 1 82 2 
189 1 290 1 334 1 335 1 205 1 356 1 272 1 35 2 208 1 7 1 319 1 245 1 106 2 195 1 17 1 250 1 196 1 176 1 254 1 348 1 97 1 373 1 179 1 180 1 74 1 182 1 375 1 82 1 
189 1 290 1 334 1 84 1 335 1 356 1 272 1 35 2 208 1 7 1 319 1 245 1 13 1 246 1 106 2 195 1 17 1 196 1 254 1 348 1 97 1 373 1 179 1 180 1 74 1 182 1 375 1 82 1 
356 1 272 1 127 1 35 4 208 1 7 1 106 2 174 2 195 1 345 1 327 1 283 1 97 1 373 2 77 2 352 2 331 1 118 1 78 1 54 2 186 1 82 2 
189 1 334 1 290 1 205 1 356 1 272 1 171 1 35 4 208 1 7 1 319 1 245 1 276 1 106 2 174 2 195 1 17 1 345 1 250 1 196 1 327 1 176 1 348 1 97 1 283 1 373 2 179 1 74 1 182 1 77 2 352 2 331 1 78 1 118 1 54 2 186 1 82 2 
146 1 356 1 272 1 127 1 35 3 208 1 7 1 106 2 174 1 195 1 345 1 322 1 324 1 327 1 97 1 283 1 227 1 197 1 179 1 373 2 182 1 77 1 352 1 331 1 305 1 118 1 54 1 186 1 82 1 
264 1 357 1 89 2 295 2 272 2 35 19 172 1 208 2 244 1 106 4 195 2 300 2 248 1 302 1 345 3 327 3 178 1 97 2 283 3 373 9 228 1 255 1 181 1 352 6 331 3 288 1 78 3 118 3 186 3 82 10 
264 2 357 2 89 2 295 4 272 3 149 1 35 26 208 3 12 1 106 6 94 2 195 3 300 1 279 1 248 1 218 1 302 2 345 2 323 1 327 2 178 1 97 3 283 3 373 14 255 1 228 2 351 1 181 1 352 4 331 2 78 2 118 3 186 3 82 12 
264 2 86 1 357 3 101 1 89 4 2 1 295 4 149 1 272 3 35 41 172 1 208 3 244 1 129 1 131 1 12 1 106 6 94 1 195 3 300 1 279 1 218 1 248 1 302 1 345 4 323 1 327 5 178 1 97 3 283 4 373 20 228 3 255 1 114 1 351 1 181 1 352 8 331 4 78 4 118 4 164 1 186 5 82 21 
264 2 86 1 357 3 101 1 89 4 2 1 295 4 149 1 272 4 35 38 172 1 208 4 244 1 129 1 131 1 12 1 106 8 94 2 195 4 300 1 279 1 218 1 248 1 302 1 345 3 323 1 327 4 178 1 97 4 283 4 373 20 228 3 255 1 114 1 351 1 181 1 352 7 331 3 78 4 118 4 164 1 186 5 82 18 
264 1 355 2 357 4 101 1 89 4 2 1 295 4 149 1 272 2 35 52 208 2 244 2 129 1 131 1 12 1 106 4 94 1 195 2 300 1 279 1 218 1 248 1 302 1 345 7 323 1 327 8 178 1 97 2 283 7 373 27 228 2 255 1 114 1 351 1 181 1 352 14 331 7 78 7 118 7 164 1 186 8 82 25 
169 1 124 1 
170 1 280 1 157 1 
142 1 249 1 190 1 275 1 28 1 338 1 316 1 353 1 185 1 262 1 
267 1 68 1 
142 1 133 1 190 1 162 1 27 1 28 1 338 1 316 1 262 1 
142 1 249 1 266 1 71 1 190 1 347 2 371 1 338 1 316 1 282 1 168 1 284 1 193 1 275 1 28 1 184 1 353 1 262 1 
142 1 249 1 266 1 71 1 190 1 347 2 371 1 338 1 316 1 282 1 168 1 284 1 193 1 275 1 28 1 184 1 353 1 262 1 
142 1 249 1 266 1 71 1 190 1 347 2 371 1 338 1 316 1 282 1 168 1 284 1 193 1 275 1 28 1 184 1 353 1 262 1 
169 1 280 1 124 1 
169 1 280 1 124 1 
170 1 157 1 
170 1 280 1 157 1 
62 1 165 1 
142 1 267 1 146 2 190 1 338 1 316 1 168 1 62 1 64 1 10 1 68 1 107 1 347 1 324 2 328 1 371 1 254 1 282 1 349 1 179 2 284 1 182 2 305 2 28 1 332 1 165 1 262 1 
189 2 289 1 334 1 290 1 58 1 146 2 335 1 313 1 356 1 238 2 126 1 272 1 127 1 35 2 208 1 7 1 299 1 104 1 106 2 195 1 17 1 196 1 18 1 348 2 97 1 179 2 373 1 74 2 182 2 375 1 82 1 
17 1 189 2 235 1 334 1 120 1 206 1 222 1 223 1 348 2 341 1 240 1 74 2 257 1 22 1 258 2 321 1 67 1 37 1 276 1 
189 1 17 1 235 1 334 1 120 1 222 1 223 1 47 1 348 1 341 1 240 1 74 1 257 1 22 1 258 2 321 1 67 1 
17 1 189 1 334 1 290 1 108 1 196 1 222 1 348 1 180 1 74 1 303 1 24 1 37 1 306 1 
17 1 189 1 235 1 334 1 120 1 206 1 222 1 223 1 348 1 341 1 240 1 74 1 257 1 22 1 258 2 321 1 67 1 37 1 
138 1 
266 1 34 1 36 1 251 1 212 1 364 1 125 1 
266 2 311 1 0 1 294 1 315 1 125 1 36 1 362 1 34 1 152 1 213 1 39 1 136 1 281 1 371 1 284 1 117 1 
189 2 334 1 290 1 292 2 145 1 0 6 294 4 61 3 340 6 5 1 241 2 297 2 152 5 342 2 17 2 345 2 251 1 196 6 159 2 19 2 348 2 20 2 74 2 117 4 161 1 118 2 266 8 315 4 125 9 34 2 362 4 36 8 319 1 276 1 212 1 213 12 278 2 39 3 219 2 44 2 175 1 325 1 326 2 327 2 371 5 48 6 49 1 283 2 180 1 285 1 284 5 186 2 
266 5 0 3 294 2 357 1 89 1 315 2 340 5 125 8 149 1 362 2 36 5 34 2 297 2 152 1 12 1 342 1 213 6 194 1 278 1 279 1 39 1 218 1 345 2 156 1 325 1 327 2 371 1 48 5 283 2 228 1 351 1 284 1 117 2 118 2 186 2 
146 1 294 1 147 1 315 1 2 1 125 2 91 1 362 1 36 2 297 2 129 1 131 1 216 1 278 1 322 1 324 1 327 1 158 1 329 1 371 1 372 1 179 1 350 1 284 1 182 1 117 1 305 1 186 2 
266 1 251 1 294 1 315 1 125 1 362 1 36 1 34 1 117 1 212 1 
345 2 266 5 0 5 326 1 327 2 340 5 48 5 125 5 283 2 36 5 297 2 118 2 213 10 186 2 278 1 
39 1 284 1 266 1 34 1 152 1 371 1 
189 2 334 1 290 1 294 2 315 2 125 2 358 1 362 2 36 2 65 1 152 4 342 2 214 1 17 1 69 1 39 2 108 1 196 1 325 2 371 3 348 2 180 2 74 2 303 1 285 2 284 3 117 1 161 1 57 1 
189 1 334 1 290 1 143 1 146 2 205 1 356 1 272 1 35 1 208 1 7 1 319 1 245 1 106 2 195 1 17 1 322 2 250 1 324 2 196 1 158 1 176 1 254 1 348 1 97 1 179 3 180 1 74 1 375 1 182 3 305 2 82 1 
266 4 0 2 294 1 325 1 315 1 340 2 48 2 125 1 36 2 362 1 34 2 117 1 164 1 213 4 342 1 
190 1 110 1 262 1 
190 1 275 1 123 1 165 1 262 1 
190 1 110 1 262 1 
190 1 110 1 262 1 
23 1 190 1 262 1 
23 1 190 1 262 1 
23 1 190 1 262 1 
190 1 262 1 
142 1 28 1 
327 1 101 1 2 1 272 2 97 2 373 4 114 1 35 8 208 2 352 3 331 1 129 1 78 2 131 1 164 1 106 4 94 1 186 1 195 2 82 4 
327 1 101 1 2 1 373 3 114 1 35 6 352 2 129 1 131 1 78 2 164 1 364 1 186 1 82 3 
345 1 327 1 272 1 97 1 283 1 373 2 35 4 208 1 352 2 331 1 363 1 78 1 118 1 106 2 195 1 186 1 82 2 
345 1 327 1 357 1 89 2 283 1 373 3 228 1 35 7 244 1 352 2 331 1 78 1 118 1 186 1 82 4 
336 1 357 1 101 1 147 1 89 1 2 2 272 1 3 1 35 15 208 1 129 1 131 2 106 2 94 1 195 1 327 2 97 1 373 7 114 1 352 6 331 3 78 3 186 2 82 8 
35 1 89 1 82 1 
35 1 357 1 373 1 
345 1 326 1 327 1 272 1 97 1 283 1 373 3 35 6 208 1 352 3 331 1 363 1 118 1 78 2 106 2 195 1 186 1 82 3 
357 1 89 1 272 1 149 1 35 12 208 1 12 1 106 2 195 1 279 1 218 1 345 2 327 2 97 1 283 2 373 6 228 1 351 1 181 1 352 2 331 1 118 2 78 1 186 2 82 6 
327 1 2 1 373 3 35 6 352 2 331 1 129 1 131 1 78 1 186 1 82 3 
336 1 101 1 2 1 272 1 97 1 373 1 114 1 35 3 208 1 352 2 331 1 78 1 131 1 106 2 94 1 195 1 82 2 
327 2 147 1 2 2 272 1 97 1 373 5 181 1 35 10 208 1 352 5 331 2 129 1 131 2 78 3 106 2 195 1 186 2 82 5 
272 1 97 1 373 2 181 1 35 2 208 1 352 1 331 1 118 1 106 2 195 1 186 1 
345 1 327 1 272 1 97 1 283 1 373 2 181 1 35 4 208 1 352 2 331 1 78 1 118 1 106 2 195 1 186 1 82 2 
336 1 2 1 272 3 97 3 373 1 181 1 35 3 172 1 208 3 352 2 331 1 131 1 78 1 106 6 94 1 195 3 82 2 
336 1 357 3 101 1 89 4 2 3 272 5 35 34 172 1 208 5 244 1 129 2 363 1 131 3 106 10 94 2 195 5 345 3 45 1 327 5 97 5 283 3 373 16 228 1 114 1 181 1 259 1 352 12 331 5 118 3 78 7 164 1 186 5 81 1 82 18 
357 1 101 1 89 1 2 1 272 1 35 8 208 1 129 1 131 1 106 2 195 1 279 1 327 1 97 1 373 4 228 1 114 1 181 1 352 2 78 2 164 1 186 1 82 4 
357 1 101 1 89 2 2 1 272 2 35 11 208 2 244 1 129 1 363 1 131 1 106 4 195 2 279 1 327 1 97 2 283 1 373 6 228 1 114 1 181 1 352 3 331 1 78 2 118 1 164 1 186 2 82 5 
357 1 101 1 89 1 2 1 272 3 149 1 35 19 208 3 129 1 363 1 131 1 12 1 106 6 94 1 195 3 279 1 218 1 345 2 327 3 97 3 283 2 373 9 228 1 114 1 351 1 181 1 352 4 331 1 118 2 78 3 164 1 186 3 82 10 
357 1 101 1 89 1 2 1 272 3 149 1 35 17 208 3 129 1 363 1 131 1 12 1 106 6 94 1 195 3 279 1 218 1 345 1 327 2 97 3 283 2 373 10 228 1 114 1 351 1 181 1 352 5 331 2 118 2 78 3 164 1 186 3 82 7 
357 1 101 1 89 1 2 1 272 1 35 8 208 1 129 1 131 1 106 2 195 1 279 1 327 1 97 1 373 4 228 1 114 1 181 1 352 2 78 2 164 1 186 1 82 4 
357 1 89 1 272 1 149 1 35 12 208 1 12 1 106 2 195 1 279 1 218 1 345 2 327 2 97 1 283 2 373 6 228 1 351 1 181 1 352 2 331 1 118 2 78 1 186 2 82 6 
357 1 101 1 89 1 2 1 272 4 149 1 35 18 208 4 129 1 363 1 131 1 12 1 106 8 94 2 195 4 279 1 218 1 345 1 327 2 97 4 283 2 373 10 228 1 114 1 351 1 181 1 352 5 331 2 118 2 78 3 164 1 186 3 82 8 
357 1 89 1 272 4 149 1 35 16 208 4 172 1 12 1 106 8 94 2 195 4 279 1 218 1 345 2 327 2 97 4 283 3 373 9 228 1 351 1 181 1 352 6 331 3 118 3 78 3 186 3 82 7 
327 1 101 1 2 3 373 3 114 2 35 7 352 6 331 3 129 1 131 3 78 3 186 1 82 4 
357 1 101 1 89 1 2 1 272 4 149 1 35 18 208 4 172 1 129 1 131 1 12 1 106 8 94 2 195 4 279 1 218 1 345 1 327 2 97 4 283 2 373 10 228 1 114 1 351 1 181 1 352 4 331 1 118 2 78 3 164 1 186 3 82 8 
182 1 146 1 183 1 177 1 254 1 154 1 179 1 
119 1 204 1 146 1 177 1 254 1 160 1 179 1 256 1 182 1 183 1 154 1 366 1 
17 1 189 1 290 1 334 1 84 1 146 1 196 1 324 1 254 1 348 1 179 2 180 1 74 1 182 2 211 1 319 1 305 1 245 1 
285 1 
17 1 189 1 180 1 303 1 74 1 334 1 290 1 108 1 196 1 364 1 348 1 
17 1 189 1 290 1 334 1 146 1 250 1 196 1 324 1 254 1 348 1 179 2 180 1 74 1 182 2 211 1 319 1 305 1 245 1 
285 1 182 1 146 1 324 1 211 1 305 1 179 1 
285 1 182 1 146 1 324 1 211 1 305 1 179 1 
285 1 284 1 371 1 
285 1 284 1 371 1 
17 1 189 1 74 1 334 1 377 1 348 1 
189 6 17 3 235 1 58 1 290 2 334 2 30 1 175 1 196 3 238 1 314 1 337 1 348 7 180 2 74 7 99 1 151 1 319 1 276 1 377 1 95 1 
189 1 146 1 356 1 101 1 147 1 2 1 272 1 126 1 127 1 35 8 208 1 7 1 211 1 129 1 131 1 106 2 276 1 216 1 195 1 324 1 327 2 254 1 348 1 97 1 373 4 179 1 74 1 114 1 182 1 198 1 352 3 331 1 305 1 78 2 260 1 186 2 82 4 
189 1 266 1 292 1 294 2 315 2 125 1 61 1 64 1 34 1 36 1 362 2 152 2 212 1 39 1 219 1 251 1 44 1 196 2 159 1 371 3 19 1 348 1 20 1 180 1 74 1 284 3 117 2 161 1 
189 2 17 2 219 1 290 1 334 1 175 1 196 2 348 2 49 1 74 2 319 1 276 1 377 1 
17 1 189 4 290 1 334 1 108 1 196 1 88 1 348 4 180 1 74 4 303 1 318 1 276 1 
189 1 17 2 290 1 334 1 196 1 314 1 348 1 33 1 74 1 285 1 296 1 99 1 319 1 9 1 
17 1 189 1 180 1 74 1 334 1 258 1 67 1 348 1 341 1 240 1 
189 2 17 1 235 1 58 1 290 1 334 1 196 1 348 2 74 2 299 1 276 1 
189 3 17 2 58 1 290 2 334 2 108 1 30 1 196 3 88 1 348 4 180 1 303 1 74 4 285 1 276 1 95 1 
189 3 17 2 58 1 290 2 334 2 108 1 30 1 196 3 88 1 348 4 180 1 303 1 74 4 285 1 273 1 276 1 
232 1 254 1 80 1 100 1 309 1 
266 1 292 1 224 1 371 2 254 1 64 1 284 2 115 1 34 1 128 1 116 1 376 1 232 2 14 1 333 1 100 2 80 2 216 1 309 1 
289 1 182 1 146 1 18 1 104 1 80 1 100 1 179 1 309 1 
116 1 128 1 309 1 
137 1 346 1 163 1 364 1 
137 1 40 1 346 1 134 1 163 1 11 1 233 1 
236 1 59 1 11 1 
38 1 354 2 40 3 346 1 134 1 150 1 137 1 210 1 163 1 11 3 233 1 343 1 
137 1 317 1 40 2 346 1 269 1 134 1 163 1 11 2 233 1 
40 1 42 1 346 1 134 1 150 1 240 1 258 1 321 1 11 1 233 1 141 1 
40 1 346 1 134 1 163 1 11 1 233 1 150 1 
137 1 40 1 134 1 163 2 11 1 233 1 150 1 
40 2 346 1 134 2 1 1 87 1 359 1 150 1 163 1 11 2 233 2 
40 3 42 1 191 1 346 2 134 1 269 2 150 1 4 1 137 1 163 1 11 3 233 1 277 1 
40 2 346 1 134 1 269 1 339 1 150 1 240 1 137 1 22 1 258 2 321 1 163 1 67 1 11 2 233 1 
40 4 42 1 346 2 134 2 269 2 150 1 137 1 317 1 242 1 163 1 11 4 233 2 277 1 
137 1 40 1 346 1 134 1 163 1 11 1 233 1 150 1 
354 1 40 4 42 1 346 3 269 2 134 1 137 2 210 1 286 1 163 2 11 4 233 1 343 1 277 1 
137 1 41 1 40 2 346 1 269 1 134 1 163 1 11 2 96 1 233 1 150 1 140 1 
137 1 374 1 354 2 40 3 210 1 346 1 134 1 163 1 11 3 233 1 343 2 150 1 
113 1 92 1 346 2 93 2 
40 1 220 1 134 1 11 1 233 1 150 1 
137 1 40 2 346 1 269 1 134 1 163 1 11 2 233 1 4 1 150 1 
368 1 
137 1 40 1 346 1 134 1 163 1 11 1 233 1 150 1 
354 1 40 3 346 1 269 1 134 1 150 1 4 1 137 1 163 1 11 3 233 1 
42 1 286 1 346 1 277 1 
346 1 163 1 

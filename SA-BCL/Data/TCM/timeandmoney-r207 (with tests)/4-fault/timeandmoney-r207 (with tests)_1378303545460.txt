#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (180,284) 255 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (180,284) 255 199 154 (180,284) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 160 86 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 160 86 126 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 160 86 62 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 160 86 62 210 139 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 160 86 62 210 139 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 160 86 62 210 343 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 160 86 217 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 160 86 217 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 160 86 62 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (180,284) 255 265 107 144 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (180,284) 255 171 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (180,284) 255 199 88 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (180,284) 255 250 60 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (180,284) 255 199 154 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (180,284) 255 250 60 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (180,284) 255 199 154 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (180,284) 255 250 88 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (180,284) 255 87 (83,313) (83,313) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
192 2 108 1 355 2 356 1 305 1 92 9 256 2 230 1 25 1 364 1 367 1 312 1 117 9 283 1 27 1 48 1 10 2 96 1 260 2 29 6 31 1 32 1 322 5 269 3 270 2 189 1 150 2 35 4 
192 2 108 1 355 2 356 1 305 1 92 9 256 2 230 1 25 1 364 1 367 1 312 1 117 9 283 1 27 1 48 1 10 2 96 1 260 2 29 6 31 1 32 1 322 5 269 3 270 2 189 1 150 2 35 4 
192 2 108 1 355 2 356 1 305 1 92 10 256 2 230 1 25 1 364 1 367 1 312 1 117 10 283 1 27 1 48 1 10 2 96 1 260 2 29 7 31 1 32 1 322 6 269 4 270 2 189 1 150 2 35 5 
192 1 108 1 355 2 356 1 305 1 92 7 256 2 230 1 25 1 364 1 367 1 312 1 117 7 283 1 27 1 48 1 10 2 96 1 260 2 29 4 31 1 32 1 322 4 269 2 270 2 150 2 35 3 
283 1 10 1 192 2 355 1 260 1 29 3 356 1 322 3 92 4 256 1 269 1 25 1 270 1 189 1 312 1 367 1 117 4 35 2 
283 1 27 1 10 1 48 1 355 1 260 1 356 1 318 1 346 1 322 1 227 1 92 2 25 1 270 1 150 1 117 2 
283 1 10 2 29 1 356 1 32 1 322 2 92 3 269 1 25 1 270 2 150 1 117 3 35 1 
283 1 192 2 10 2 96 1 355 1 260 1 29 7 356 1 31 1 163 1 32 1 322 5 92 9 256 1 269 3 25 1 270 2 189 1 367 1 312 1 273 1 150 1 117 9 35 4 
283 1 192 2 10 2 96 1 355 1 260 1 29 7 356 1 31 1 163 1 32 1 322 5 92 9 256 1 269 3 25 1 270 2 189 1 367 1 312 1 273 1 150 1 117 9 35 4 
26 1 221 1 365 1 
193 2 34 1 26 1 
259 2 153 2 149 2 194 2 8 2 65 1 290 2 320 1 
325 1 1 1 38 1 153 3 2 1 194 2 357 1 65 1 331 2 133 1 173 2 281 1 136 2 42 2 23 1 69 1 93 1 308 1 8 2 233 1 259 3 159 1 78 1 79 1 161 1 162 1 290 2 320 1 56 1 101 2 268 1 149 2 298 1 190 1 352 1 105 1 106 1 
291 1 259 1 238 1 153 1 149 1 194 1 72 1 8 1 65 1 290 1 
0 1 259 1 153 1 280 1 185 1 370 1 321 1 254 1 306 1 149 1 72 1 26 1 365 1 257 1 
0 1 259 1 153 1 370 2 194 1 185 1 290 1 321 1 254 1 149 1 72 1 26 1 8 1 365 1 257 2 
239 1 279 1 370 1 257 1 17 1 
239 1 219 1 370 2 26 1 365 1 121 1 257 2 17 1 
239 1 370 1 257 1 
291 1 259 1 148 1 238 1 153 1 149 1 194 1 370 1 72 1 8 1 65 1 257 1 17 1 290 1 
26 1 
293 1 239 1 219 1 370 2 26 1 365 1 257 2 17 1 
277 1 47 1 239 2 219 1 370 5 77 1 359 1 80 2 225 1 374 1 165 1 267 2 361 1 58 1 26 1 365 1 17 2 257 5 272 2 
221 1 320 1 
259 2 141 1 153 2 194 1 289 1 290 1 320 2 149 2 8 1 
284 1 255 1 
259 1 1 1 153 1 369 1 78 1 173 1 320 1 101 1 136 1 23 1 69 1 93 1 308 1 105 1 233 1 106 1 
284 1 259 2 1 1 153 2 194 1 78 1 290 1 173 1 101 1 136 1 23 1 69 1 43 1 167 1 149 1 93 1 308 1 105 1 233 1 106 1 
259 3 153 3 167 1 149 3 194 3 8 1 290 3 320 1 
291 1 259 1 153 1 149 1 194 1 72 1 290 1 
259 1 141 1 153 1 149 1 194 1 72 1 8 1 289 1 290 1 
0 1 325 1 1 1 38 1 153 4 194 3 65 1 331 1 173 1 254 1 281 1 136 1 42 2 23 1 69 1 43 1 6 1 93 1 72 1 308 1 8 2 257 1 233 1 141 1 259 4 159 1 185 1 370 1 78 1 79 1 161 1 162 1 290 3 320 1 321 1 101 1 167 1 149 3 298 1 18 1 190 1 352 1 105 1 106 1 
259 2 306 1 153 2 167 1 149 2 194 1 309 1 290 1 320 1 
0 1 341 1 141 1 259 3 153 3 370 1 194 3 185 1 290 3 321 1 254 1 43 1 167 2 149 3 6 1 72 1 26 1 8 1 257 1 
284 1 259 2 141 1 153 2 167 1 149 2 194 2 8 1 290 2 174 1 
259 1 1 1 153 1 78 1 173 1 320 1 101 1 136 1 23 1 69 1 93 1 308 1 105 1 233 1 106 1 
259 1 1 1 153 1 78 1 173 1 320 1 101 1 136 1 212 1 23 1 69 1 93 1 7 1 105 1 106 1 
284 1 325 1 38 1 159 1 79 2 154 1 252 1 331 2 162 1 333 1 199 1 281 1 42 2 255 1 180 1 352 1 
259 1 153 1 149 1 194 1 72 1 274 1 290 1 321 1 
259 5 141 1 153 5 194 4 290 4 320 1 5 1 306 1 43 1 167 2 149 5 8 1 309 1 104 1 
291 1 259 2 153 2 149 2 194 2 72 1 274 1 290 2 
337 1 172 1 
337 1 172 1 
207 1 262 1 
207 1 262 1 
207 1 262 1 
292 1 337 1 172 1 
292 1 337 1 172 1 
299 1 337 1 172 1 
301 1 228 1 207 1 337 2 262 1 172 2 156 1 
292 1 337 1 172 1 
337 1 172 1 222 1 
337 1 172 1 222 1 
337 1 172 1 222 1 
76 3 152 1 50 2 220 2 370 2 172 2 41 1 112 1 301 1 304 1 373 1 337 2 338 1 71 2 59 1 26 1 351 2 257 2 85 2 
182 1 259 2 76 1 299 1 11 1 50 1 109 1 153 2 370 1 220 1 194 2 172 1 290 2 320 1 146 1 373 1 67 1 337 1 149 2 307 1 351 1 366 1 257 1 85 1 
355 1 260 1 256 1 
355 1 260 1 318 1 
223 1 224 1 355 3 256 2 318 1 310 1 
223 1 224 1 37 1 355 2 256 1 318 1 
224 1 223 2 355 2 256 1 318 1 
193 3 219 1 250 1 333 1 88 1 199 1 225 1 229 1 362 2 26 2 75 1 257 5 365 1 182 1 11 1 208 2 239 1 142 1 370 5 77 2 98 2 186 1 241 1 146 1 80 1 349 1 267 1 165 3 34 1 272 1 17 4 215 1 
193 9 219 1 329 1 279 5 250 3 359 1 333 3 88 3 199 3 335 1 225 1 44 1 362 6 74 5 26 5 257 9 365 1 140 1 11 4 208 6 239 6 142 1 370 9 77 6 186 2 241 3 54 1 80 2 349 2 267 2 165 8 34 3 15 1 17 7 272 2 
193 4 250 1 359 1 333 1 88 1 199 1 362 2 26 3 75 1 365 1 257 3 11 1 208 2 370 3 186 1 98 1 77 2 241 1 80 1 349 1 267 1 165 3 34 2 17 2 272 1 215 1 
193 7 250 2 359 1 333 2 88 2 199 2 335 1 362 4 26 4 75 1 365 1 257 4 11 2 208 4 370 4 186 1 98 2 77 4 241 2 54 1 80 1 349 1 267 1 165 5 34 3 15 1 272 1 17 3 215 1 
266 1 221 1 105 1 
94 1 105 1 
286 1 
69 1 105 1 
266 2 23 1 69 1 123 1 105 3 125 1 
23 1 69 1 105 1 
49 1 105 1 
353 1 64 1 317 1 327 3 330 1 2 4 79 3 87 2 331 7 53 1 333 1 241 1 198 1 201 2 83 1 116 1 313 1 
353 1 64 1 317 1 327 3 330 1 2 4 79 3 87 2 331 7 53 1 333 1 241 1 198 1 201 2 83 1 116 1 313 1 
353 1 64 1 317 1 327 3 247 1 330 1 2 4 79 3 87 2 331 7 53 1 333 1 241 1 198 1 201 2 83 1 116 1 313 1 
353 5 64 2 325 1 327 10 2 16 330 2 87 3 250 3 331 31 198 2 88 3 333 4 199 3 42 2 201 5 232 1 116 1 313 1 235 1 285 1 315 1 287 3 317 2 159 1 79 15 53 1 162 1 241 4 265 4 83 1 168 1 352 1 169 1 151 1 
353 1 64 1 129 1 325 2 110 1 327 4 2 5 330 1 87 2 331 9 333 1 198 1 42 4 201 3 232 1 313 1 116 1 317 1 159 2 79 4 162 2 241 1 83 1 352 2 
355 2 356 1 173 1 136 1 360 1 89 1 202 1 178 1 92 2 256 1 25 1 310 1 117 2 283 1 314 1 46 1 10 1 29 1 260 1 345 1 318 1 78 1 322 1 101 1 270 1 271 1 19 1 150 1 216 1 106 1 
355 2 356 1 173 1 334 1 136 1 89 1 202 1 178 1 92 3 256 1 310 1 117 3 283 1 314 1 46 1 10 1 260 1 345 1 29 2 318 1 78 1 13 1 322 1 101 1 323 1 270 1 19 1 150 1 216 1 106 1 
355 2 356 1 173 1 334 1 136 1 89 1 202 1 178 1 92 2 256 1 310 1 117 2 283 1 46 1 345 1 29 2 260 1 318 1 78 1 13 1 322 1 101 1 150 1 216 1 106 1 
173 1 136 1 89 2 69 1 92 1 178 2 93 1 206 1 117 1 10 1 345 2 158 1 78 1 101 1 122 1 323 1 270 1 295 1 150 2 124 1 105 1 36 1 106 1 
355 2 173 1 334 1 136 1 89 1 202 1 178 1 92 1 256 1 25 1 310 1 117 1 314 1 46 1 10 1 260 1 345 1 318 1 78 1 101 1 270 1 271 1 19 1 150 1 216 1 106 1 
176 1 
219 1 40 1 155 1 173 2 225 1 136 2 23 1 22 1 69 2 282 1 93 2 115 1 257 2 234 1 342 1 239 2 370 2 78 3 77 1 80 1 101 2 349 1 267 1 165 1 295 1 272 1 105 2 124 1 106 2 
0 1 259 1 153 1 185 1 370 2 280 1 160 1 263 1 3 2 321 1 253 1 254 1 303 1 137 1 306 1 149 1 72 1 257 2 275 1 
0 1 153 1 219 1 280 1 3 3 253 1 254 1 303 1 306 1 137 1 70 1 72 1 26 1 257 3 365 1 259 1 239 1 185 1 370 3 263 1 321 1 293 1 149 1 275 1 
0 1 259 1 153 1 370 2 280 1 185 1 160 1 263 1 3 2 321 1 253 1 254 1 303 1 137 1 306 1 149 1 72 1 257 2 86 1 275 1 
126 1 0 1 259 1 153 1 239 1 219 1 185 1 370 3 280 1 160 1 263 1 3 2 321 1 253 1 254 1 303 1 293 1 137 1 306 1 149 1 72 1 257 3 86 1 275 1 
0 1 193 1 153 1 219 1 280 1 3 2 253 1 225 1 254 1 303 1 137 1 306 1 179 1 363 1 72 1 257 3 95 1 259 1 239 1 370 3 185 1 160 1 77 1 263 1 30 1 321 1 80 1 165 1 267 1 34 1 149 1 297 1 272 1 62 1 86 1 275 1 
0 1 153 1 219 1 280 1 3 2 253 1 254 1 225 1 303 1 306 1 137 1 179 1 363 1 72 1 139 1 257 3 95 1 259 1 239 1 185 1 370 3 160 1 210 1 77 1 263 1 145 1 30 1 321 1 80 1 165 1 267 1 34 1 149 1 297 1 272 1 62 1 86 1 275 1 
0 1 153 1 219 1 280 1 3 2 253 1 254 1 225 1 303 1 306 1 137 1 179 1 363 1 72 1 139 1 257 3 95 1 259 1 239 1 185 1 370 3 160 1 210 1 77 1 263 1 145 1 30 1 321 1 80 1 165 1 267 1 34 1 149 1 297 1 272 1 62 1 86 1 275 1 
0 1 276 1 193 1 153 1 219 1 280 1 3 2 253 1 254 1 225 1 303 1 306 1 137 1 363 1 72 1 205 1 257 3 259 1 343 1 239 1 185 1 370 3 160 1 210 1 77 1 263 1 30 1 321 1 80 1 165 1 267 1 103 1 149 1 16 1 272 1 62 1 86 1 275 1 
0 1 217 1 259 1 153 1 370 2 280 1 185 1 160 1 263 1 3 2 321 1 253 1 254 1 303 1 137 1 306 1 149 1 72 1 257 2 86 1 275 1 
0 1 217 1 259 1 153 1 370 2 280 1 185 1 160 1 263 1 3 2 321 1 253 1 254 1 303 1 137 1 306 1 149 1 72 1 257 2 86 1 275 1 
0 1 276 1 193 1 153 1 219 1 280 1 3 2 253 1 225 1 254 1 303 1 137 1 306 1 363 1 72 1 205 1 257 3 259 1 239 1 370 3 185 1 160 1 77 1 263 1 30 1 321 1 80 1 165 1 267 1 103 1 149 1 272 1 62 1 86 1 275 1 
64 1 325 1 38 1 327 2 2 3 221 1 252 1 87 1 331 6 198 1 333 1 281 1 42 2 201 2 255 1 313 1 116 1 284 1 159 1 79 3 162 1 241 1 320 2 83 1 352 1 
284 1 107 1 325 1 38 1 159 1 144 1 79 1 331 1 162 1 281 1 265 1 42 2 255 1 231 1 352 1 
1 1 325 1 38 1 354 1 153 2 194 1 2 1 331 2 173 1 174 1 136 1 281 1 23 1 42 2 69 1 43 1 93 1 308 1 231 1 233 1 259 2 369 1 143 1 159 1 78 1 371 1 79 1 290 1 162 1 320 1 101 1 268 1 167 1 149 1 298 1 105 1 352 1 106 1 
1 1 325 2 171 1 38 2 153 2 194 1 248 1 358 1 331 2 173 1 281 2 136 1 23 1 42 4 69 1 43 1 255 1 138 1 93 1 308 1 231 1 233 1 284 1 259 2 261 1 159 2 78 1 79 2 161 1 290 1 162 2 101 1 167 1 149 1 298 1 105 1 352 2 106 1 
191 1 325 2 38 2 153 1 194 1 2 1 249 1 39 1 252 1 331 2 173 8 334 1 360 1 136 8 281 2 42 4 69 2 204 1 93 2 114 1 259 1 159 2 78 2 79 1 290 1 162 2 372 1 101 7 56 2 294 1 268 1 167 1 149 1 295 1 298 1 105 3 352 2 124 1 106 2 
284 1 236 1 259 1 141 1 325 1 38 1 153 1 2 1 194 1 159 1 79 2 250 1 331 3 162 1 290 1 333 1 241 1 88 1 199 1 281 1 42 2 255 1 149 1 231 1 8 1 352 1 
284 1 325 1 38 1 159 1 2 2 252 1 250 1 331 2 162 1 241 1 281 1 42 2 255 1 60 1 352 1 
284 1 325 1 38 1 159 1 154 1 79 2 252 1 331 2 162 1 333 1 199 1 281 1 42 2 255 1 352 1 
284 1 325 1 38 1 159 1 2 2 252 1 250 1 331 2 162 1 88 1 241 1 281 1 42 2 255 1 352 1 
284 1 191 1 325 1 38 1 159 1 2 2 250 1 331 2 162 1 241 1 281 1 42 2 255 1 60 1 352 1 
284 1 191 1 325 1 38 1 159 1 154 1 79 2 331 2 162 1 333 1 199 1 281 1 42 2 255 1 352 1 
284 1 191 1 325 1 38 1 159 1 2 2 250 1 331 2 162 1 88 1 241 1 281 1 42 2 255 1 352 1 
284 1 281 1 325 1 42 2 38 1 255 1 2 2 159 1 250 1 331 2 352 1 162 1 241 1 88 1 
1 1 325 1 38 1 153 1 2 1 331 2 173 1 136 1 281 1 23 1 42 2 69 1 93 1 308 1 233 1 259 1 159 1 78 1 79 1 161 1 162 1 320 1 101 1 268 1 298 1 105 1 352 1 106 1 
1 1 325 1 38 1 153 1 2 1 196 1 331 2 173 1 136 1 281 1 23 1 42 2 69 1 93 1 7 1 259 1 159 1 78 1 79 1 162 1 320 1 212 1 101 1 268 1 298 1 105 1 352 1 106 1 
284 1 325 1 38 1 159 1 2 2 250 1 331 2 162 1 88 1 241 1 281 1 42 2 255 1 231 1 352 1 
1 1 325 1 38 1 153 1 2 2 248 1 250 1 331 2 173 1 88 1 136 1 360 1 281 1 23 1 42 2 69 1 255 1 308 1 233 1 284 1 259 1 159 1 78 1 161 1 162 1 241 1 101 1 105 1 352 1 106 1 
284 1 259 1 141 1 325 1 38 1 153 1 2 2 194 1 159 1 319 1 250 1 331 2 162 1 290 1 241 1 88 1 281 1 42 2 255 1 149 1 231 1 8 1 352 1 
353 3 128 1 325 2 110 1 327 6 2 9 250 3 331 19 88 3 333 3 199 3 201 3 42 4 90 1 226 1 339 1 285 1 287 1 159 2 79 10 99 2 347 1 162 2 241 3 100 1 265 2 147 1 164 2 352 2 169 1 
353 2 128 2 325 3 110 1 245 1 327 4 2 14 250 3 331 26 333 2 88 3 199 2 336 1 201 2 42 6 90 1 226 1 9 1 232 2 339 1 285 2 287 2 209 1 159 3 79 12 51 1 99 1 162 3 241 3 100 2 265 2 164 4 166 1 352 3 
128 1 325 3 327 8 2 20 87 1 331 41 333 5 88 4 90 1 42 6 336 1 226 1 232 1 9 1 339 1 285 3 287 3 51 1 99 1 347 1 241 5 100 2 243 1 352 3 353 4 64 1 110 1 245 1 250 4 198 1 199 4 201 4 313 1 116 1 209 1 159 3 79 21 162 3 265 4 164 4 166 1 83 1 169 1 
353 3 64 1 128 1 325 4 110 1 245 1 327 7 2 20 87 1 250 4 331 38 198 1 88 4 333 4 199 3 336 1 201 4 42 8 90 1 226 1 9 1 232 2 116 1 313 1 339 1 285 3 287 3 209 1 159 4 79 18 51 1 99 1 347 1 162 4 241 5 100 2 265 4 243 1 164 4 166 1 83 1 352 4 169 1 
353 7 170 2 64 1 128 1 325 2 110 1 245 1 327 14 2 27 87 1 250 7 331 52 198 1 88 7 333 8 199 7 336 1 201 7 42 4 90 1 226 1 9 1 232 1 116 1 313 1 339 1 285 2 287 4 209 1 159 2 79 25 51 1 99 1 162 2 241 8 100 1 265 4 164 4 166 1 83 1 352 2 169 2 
301 1 55 1 304 1 50 1 337 1 220 1 172 1 351 1 41 1 85 1 
299 1 366 1 
45 1 324 1 118 1 50 1 337 1 220 1 172 1 351 1 85 1 
76 2 152 1 50 1 370 1 220 1 172 1 41 1 112 1 301 1 304 1 373 1 337 1 338 1 71 1 26 1 351 1 257 1 85 1 
76 2 152 1 50 1 370 1 220 1 172 1 41 1 112 1 301 1 304 1 373 1 337 1 338 1 71 1 26 1 351 1 257 1 85 1 
76 2 152 1 50 1 370 1 220 1 172 1 41 1 112 1 301 1 304 1 373 1 337 1 338 1 71 1 26 1 351 1 257 1 85 1 
292 1 296 1 156 1 
292 1 296 1 156 1 
222 1 258 1 
222 1 258 1 156 1 
109 1 307 1 
299 1 109 1 153 2 220 1 194 2 172 1 21 1 337 1 67 1 338 1 71 1 307 1 257 1 366 1 259 2 76 1 182 1 50 1 11 1 370 1 290 2 320 1 146 1 149 2 351 1 17 1 85 1 
292 1 296 1 
222 1 258 1 156 1 
63 1 325 1 38 1 153 2 2 1 39 1 331 2 173 2 302 1 136 2 281 1 42 2 69 1 114 1 231 1 340 1 259 2 159 1 78 1 79 1 264 1 162 1 56 2 101 2 268 1 149 2 298 1 61 1 105 1 352 1 106 1 
314 1 28 1 183 1 355 2 260 1 318 1 78 1 173 2 334 1 135 1 101 2 136 2 360 1 202 1 178 1 256 1 310 1 216 1 106 1 
314 1 28 1 355 2 260 1 318 1 78 1 173 1 334 1 101 1 136 1 202 1 178 1 256 1 84 1 310 1 216 1 106 1 
183 1 78 1 173 1 101 1 136 1 122 1 102 1 69 1 178 1 93 1 295 1 105 1 124 1 106 1 
314 1 28 1 183 1 355 2 260 1 318 1 78 1 173 1 334 1 135 1 101 1 136 1 202 1 178 1 256 1 310 1 216 1 106 1 
350 1 
374 1 165 1 361 1 77 1 26 1 221 1 365 1 
193 1 219 1 225 1 179 1 26 2 257 1 365 1 95 1 239 1 370 1 77 1 80 1 165 1 267 1 34 1 297 1 272 1 
0 2 171 2 219 3 40 1 173 3 88 2 333 2 225 4 175 1 136 3 93 1 94 3 49 2 184 2 239 5 188 2 241 2 349 2 101 3 242 2 14 1 105 10 106 3 193 12 250 2 111 2 199 2 200 2 360 1 23 3 157 2 69 3 361 1 362 6 113 1 24 2 26 8 365 2 257 5 316 1 208 6 370 5 78 4 119 2 77 8 80 4 266 2 81 1 374 1 165 9 267 4 34 6 272 4 125 1 
193 6 245 1 219 1 130 1 40 1 250 2 88 2 333 2 199 2 200 2 225 2 336 1 362 5 26 5 257 1 365 2 285 1 287 1 239 1 208 5 209 1 370 1 77 5 188 1 51 1 241 2 80 2 349 1 33 1 265 1 165 8 267 2 166 1 34 3 272 2 
64 1 153 1 194 1 65 1 198 1 333 1 200 2 225 1 72 1 8 1 257 1 116 1 259 1 238 1 370 1 145 1 77 2 188 1 240 1 290 1 241 2 291 1 80 1 148 1 267 1 165 2 149 1 272 1 
77 1 80 1 225 1 374 1 267 1 165 1 361 1 26 1 272 1 365 1 
193 10 171 1 208 5 77 5 188 1 250 2 88 2 241 2 333 2 199 2 200 2 165 5 362 5 34 5 26 5 
239 1 219 1 370 1 26 1 365 1 257 1 
219 1 40 1 155 1 173 2 225 1 136 2 23 1 22 1 69 2 282 1 93 2 115 1 257 1 234 1 342 1 239 2 370 1 78 3 77 1 80 1 101 2 349 1 14 1 267 1 165 1 295 1 272 1 105 2 124 1 106 2 
325 1 1 1 38 1 153 3 194 2 65 1 331 1 173 1 136 1 281 1 42 2 23 1 69 1 93 1 308 1 8 2 233 1 259 3 159 1 78 1 79 1 161 1 162 1 290 2 320 1 101 1 149 2 298 1 190 1 352 1 105 1 106 1 
193 4 208 2 77 2 40 1 87 1 80 1 225 1 349 1 267 1 165 1 34 2 362 2 26 4 272 1 365 2 
91 1 220 1 351 1 
91 1 220 1 351 1 
304 1 109 1 220 1 12 1 351 1 
91 1 220 1 351 1 
220 1 351 1 251 1 
220 1 351 1 251 1 
220 1 351 1 251 1 
220 1 351 1 
337 1 172 1 
353 1 64 1 325 2 327 3 2 4 159 2 79 4 87 1 331 8 162 2 333 1 241 1 198 1 201 2 42 4 83 1 232 1 352 2 116 1 313 1 
64 1 327 2 2 3 79 3 221 1 87 1 331 6 198 1 241 1 333 1 201 2 83 1 313 1 116 1 
353 1 325 1 327 2 328 1 159 1 2 2 79 2 250 1 331 4 162 1 333 1 88 1 241 1 199 1 201 1 42 2 352 1 
353 1 285 1 287 1 327 2 2 3 79 4 250 1 331 7 333 1 88 1 241 1 199 1 265 2 201 1 169 1 
353 4 170 1 64 2 107 1 325 2 244 1 327 9 2 11 87 1 250 2 331 23 198 2 88 2 333 3 199 2 201 5 42 4 232 2 116 1 313 1 287 2 159 2 79 12 162 2 241 3 265 2 83 1 169 1 352 2 
265 1 79 1 331 1 
287 1 2 1 331 1 
353 1 325 1 171 1 327 3 159 1 328 1 2 3 79 3 250 1 331 6 162 1 88 1 241 1 333 1 199 1 42 2 201 2 352 1 
353 1 325 1 110 1 245 1 327 2 2 6 250 2 331 12 88 2 333 2 199 2 42 2 201 1 336 1 285 1 287 1 209 1 159 1 79 6 51 1 162 1 241 2 265 1 166 1 352 1 
353 1 64 1 327 2 2 3 79 3 331 6 241 1 333 1 198 1 201 1 116 1 
353 1 64 1 244 1 325 1 327 2 2 1 159 1 79 2 331 3 162 1 198 1 201 1 42 2 83 1 232 1 352 1 313 1 
353 2 64 2 325 1 110 1 327 5 159 1 2 5 79 5 240 1 331 10 162 1 198 2 241 2 333 2 42 2 201 3 352 1 116 1 
353 1 325 1 110 1 327 1 159 1 2 2 250 1 331 2 162 1 241 1 42 2 352 1 
353 1 325 1 110 1 327 2 159 1 2 2 79 2 250 1 331 4 162 1 333 1 88 1 241 1 199 1 201 1 42 2 352 1 
353 1 64 1 244 1 325 3 110 1 327 2 159 3 2 1 79 2 331 3 347 1 162 3 198 1 42 6 201 1 232 1 352 3 
353 5 64 3 244 1 325 5 110 1 327 12 328 1 2 16 87 1 250 3 331 34 198 3 88 3 333 5 199 3 42 10 201 7 232 2 116 2 313 1 235 1 315 1 285 1 287 3 159 5 79 18 347 1 162 5 241 5 265 4 83 1 168 1 352 5 169 1 
64 1 325 1 110 1 327 2 2 4 87 1 331 8 333 1 198 1 42 2 201 2 313 1 116 1 285 1 287 1 159 1 79 4 162 1 241 1 265 1 166 1 83 1 352 1 
353 1 64 1 325 2 110 1 327 3 328 1 2 6 87 1 250 1 331 11 333 1 198 1 88 1 201 2 42 4 116 1 313 1 285 1 287 1 159 2 79 5 162 2 241 2 265 2 166 1 83 1 352 2 169 1 
353 1 64 1 325 3 110 1 245 1 327 4 328 1 2 9 87 1 250 2 331 19 198 1 88 2 333 3 199 2 336 1 42 6 201 3 232 1 116 1 313 1 285 1 287 1 209 1 159 3 79 10 51 1 162 3 241 3 265 1 166 1 83 1 352 3 
353 2 64 1 325 3 110 1 245 1 327 5 328 1 2 10 87 1 250 2 331 17 198 1 88 2 333 2 199 1 42 6 201 3 336 1 232 1 116 1 313 1 285 1 287 1 209 1 159 3 79 7 51 1 162 3 241 3 265 1 166 1 83 1 352 3 
64 1 325 1 110 1 327 2 2 4 87 1 331 8 333 1 198 1 42 2 201 2 313 1 116 1 285 1 287 1 159 1 79 4 162 1 241 1 265 1 166 1 83 1 352 1 
353 1 325 1 110 1 245 1 327 2 2 6 250 2 331 12 88 2 333 2 199 2 42 2 201 1 336 1 285 1 287 1 209 1 159 1 79 6 51 1 162 1 241 2 265 1 166 1 352 1 
353 2 64 1 325 4 110 1 245 1 327 5 328 1 2 10 87 1 250 2 331 18 198 1 88 2 333 2 199 1 336 1 42 8 201 3 232 2 116 1 313 1 285 1 287 1 209 1 159 4 79 8 51 1 162 4 241 3 265 1 166 1 83 1 352 4 
353 3 325 4 110 1 245 1 327 6 2 9 250 3 331 16 88 3 333 2 199 2 336 1 42 8 201 3 232 2 285 1 287 1 209 1 159 4 79 7 51 1 162 4 347 1 241 3 265 1 166 1 352 4 
353 3 64 3 327 6 2 3 79 4 331 7 333 1 198 3 241 1 201 3 83 1 313 2 116 1 
353 1 64 1 325 4 110 1 245 1 327 4 2 10 87 1 250 2 331 18 198 1 88 2 333 2 199 1 336 1 42 8 201 3 232 2 116 1 313 1 285 1 287 1 209 1 159 4 79 8 51 1 162 4 347 1 241 3 265 1 166 1 83 1 352 4 
259 1 306 1 153 1 149 1 309 1 132 1 320 1 
259 1 153 1 132 1 134 1 320 1 348 1 306 1 149 1 73 1 375 1 214 1 309 1 
136 1 101 1 69 1 93 1 78 1 295 1 221 1 105 1 124 1 173 1 106 1 
259 2 1 1 153 2 194 1 78 1 290 1 173 1 320 1 101 1 136 1 23 1 69 1 167 1 149 1 93 1 308 1 105 1 106 1 
1 1 153 2 194 2 173 1 254 1 136 1 175 1 23 2 69 2 72 1 308 1 259 2 49 1 184 1 78 1 290 1 320 1 321 1 101 1 167 1 149 2 105 3 106 1 
1 1 20 1 153 2 194 2 173 2 254 1 136 2 175 1 23 2 69 2 72 1 7 1 259 2 49 1 184 1 78 1 290 1 320 1 321 1 101 2 167 1 149 2 105 3 106 1 
0 1 20 1 195 1 173 3 136 3 175 1 23 1 69 1 93 1 94 1 26 1 257 2 365 1 49 1 184 1 239 1 370 2 78 1 52 1 266 1 101 3 105 4 106 1 
0 1 49 1 184 1 20 1 239 1 370 2 78 1 119 1 173 3 175 1 101 3 136 3 266 1 23 1 69 1 93 1 26 1 94 1 365 1 257 2 105 4 106 1 
136 1 101 1 204 1 78 1 173 1 106 1 
342 1 78 3 249 1 155 1 173 7 372 1 334 1 56 1 360 1 101 6 136 7 23 1 69 2 294 1 204 1 93 2 82 1 114 1 105 3 125 1 106 2 
64 1 1 1 325 2 38 2 153 2 327 2 2 3 194 1 248 1 87 1 331 6 358 1 173 1 333 1 198 1 302 1 281 2 360 1 136 1 201 2 23 1 42 4 69 1 255 1 231 1 308 1 116 1 313 1 233 1 284 1 259 2 159 2 78 1 79 3 161 1 290 1 162 2 320 2 241 1 101 1 167 1 149 1 83 1 105 1 352 2 106 1 
0 1 219 1 111 1 173 1 225 2 136 1 157 1 361 1 93 1 24 1 26 1 94 1 365 1 257 3 239 2 370 3 77 1 119 1 80 2 101 1 266 1 14 1 374 1 165 1 267 2 272 2 17 1 105 2 
78 2 173 2 360 1 266 1 101 2 136 2 23 1 69 1 204 1 113 1 105 2 125 1 106 1 
20 1 78 1 173 4 197 1 101 4 136 4 360 1 69 1 93 1 295 1 124 1 105 1 106 1 
342 1 326 1 78 2 155 1 173 2 175 1 101 2 136 2 23 1 69 1 282 1 115 1 105 1 106 1 
136 1 101 1 355 1 260 1 318 1 93 1 78 1 216 1 173 1 106 1 
63 1 334 1 136 2 101 2 360 1 69 1 78 1 114 1 105 1 173 2 106 1 
78 2 249 1 173 5 197 1 372 1 175 1 101 4 136 5 360 1 69 2 93 1 295 1 114 1 124 1 105 3 106 2 
78 2 173 5 197 1 332 1 372 1 175 1 101 4 136 5 360 1 69 2 93 1 295 1 114 1 124 1 105 3 106 2 
259 2 1 1 153 2 194 1 78 1 290 1 173 1 320 1 101 1 136 1 23 1 69 1 167 1 149 1 93 1 7 1 105 1 106 1 
342 1 78 2 155 1 173 1 175 1 101 1 136 1 23 1 69 1 82 1 105 1 125 1 106 1 
340 1 259 1 344 1 153 1 246 1 264 1 149 1 181 1 61 1 
344 1 97 1 300 1 
344 1 246 1 181 1 66 1 320 1 
0 1 344 1 278 1 370 2 97 1 246 2 185 1 66 2 320 1 321 1 300 1 254 1 6 1 72 1 26 1 181 2 365 1 17 1 257 2 
283 1 322 1 356 1 221 1 
283 1 322 1 10 1 92 1 356 1 270 1 117 1 
89 1 92 1 150 1 
27 2 283 1 10 1 237 1 218 1 356 1 322 1 213 1 92 3 25 1 270 1 117 3 
283 1 322 1 192 1 10 1 29 1 92 2 356 1 270 1 117 2 
322 1 10 1 355 1 260 1 92 1 256 1 270 1 25 1 367 1 35 1 117 1 
283 1 322 1 10 1 92 1 270 1 25 1 117 1 
283 2 10 1 92 1 356 1 270 1 25 1 117 1 
283 1 10 2 131 1 322 1 57 1 92 2 203 1 25 1 270 2 117 2 
283 1 10 1 96 1 29 2 356 1 31 1 322 2 92 3 269 1 25 1 270 1 117 3 35 1 
283 1 10 1 355 2 260 1 29 1 356 1 318 1 322 1 177 1 92 2 256 1 25 1 270 1 310 1 117 2 
283 1 10 2 192 1 29 2 356 1 322 2 92 4 269 1 25 1 270 2 189 1 117 4 35 1 
283 1 322 1 10 1 92 1 356 1 270 1 25 1 117 1 
27 1 283 2 10 1 218 1 29 2 356 2 211 1 322 3 213 1 92 4 269 1 270 1 117 4 35 1 
283 1 368 1 10 1 29 1 356 1 322 1 92 2 25 1 270 1 311 1 273 1 117 2 
27 2 283 1 10 1 218 2 356 1 322 1 213 1 68 1 92 3 25 1 270 1 117 3 
127 1 322 2 120 2 4 1 
10 1 92 1 187 1 270 1 25 1 117 1 
283 1 322 1 10 1 29 1 92 2 356 1 270 1 25 1 31 1 117 2 
288 1 
283 1 322 1 10 1 92 1 356 1 270 1 25 1 117 1 
27 1 283 1 10 1 29 1 356 1 31 1 322 1 92 3 25 1 270 1 117 3 
322 1 269 1 211 1 35 1 
283 1 322 1 

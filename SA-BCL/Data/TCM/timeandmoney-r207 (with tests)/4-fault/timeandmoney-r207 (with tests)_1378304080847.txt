#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (58,189) (58,189) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (58,189) (58,189) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (58,189) (58,189) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (58,189) (58,189) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 1 191 1 230 1 58 1 222 1 189 1 246 1 204 1 377 1 211 1 52 1 
268 1 191 1 230 1 58 1 222 1 189 1 246 1 204 1 377 1 211 1 52 1 
268 1 191 1 230 1 58 1 222 1 189 1 246 1 204 1 377 1 211 1 52 1 
268 1 191 1 230 1 58 1 222 1 189 1 246 1 204 1 377 1 211 1 52 1 
268 1 145 1 209 1 322 1 244 2 367 1 87 1 52 4 79 1 89 3 67 1 191 1 91 3 338 2 377 1 204 4 352 1 266 1 
268 1 145 1 230 1 210 1 367 1 246 1 52 2 79 1 215 1 91 1 191 1 177 1 377 1 204 2 55 1 266 1 
268 2 48 1 244 1 367 1 246 1 87 1 52 3 79 1 89 1 191 2 91 2 377 1 204 3 
45 1 209 1 145 1 48 1 52 9 79 1 191 2 261 1 338 2 266 1 268 2 244 4 271 1 322 1 367 1 246 1 87 3 89 7 67 1 91 5 183 1 204 9 377 1 352 1 
45 1 209 1 145 1 48 1 52 9 79 1 191 2 261 1 338 2 266 1 268 2 244 4 271 1 322 1 367 1 246 1 87 3 89 7 67 1 91 5 183 1 204 9 377 1 352 1 
316 1 361 1 319 1 
7 2 342 1 361 1 
298 2 357 2 153 2 106 1 100 2 182 2 172 1 345 2 
44 2 308 1 97 1 146 1 100 2 77 1 235 1 172 1 314 1 292 1 357 3 175 1 193 1 294 2 153 2 106 1 298 2 57 1 300 1 13 1 15 1 323 1 182 3 65 2 345 2 66 1 347 1 277 1 38 1 280 1 42 1 71 2 184 1 284 1 164 1 285 1 251 2 
298 1 357 1 158 1 114 1 153 1 238 1 100 1 182 1 172 1 345 1 
24 1 269 1 168 1 369 1 122 1 182 1 82 1 357 1 316 1 139 1 153 1 238 1 361 1 116 1 
298 1 269 2 24 2 168 1 100 1 369 1 122 1 182 1 345 1 357 1 316 1 153 1 238 1 361 1 116 1 
327 1 269 1 24 1 232 1 324 1 
327 1 269 2 24 2 316 1 375 1 232 1 361 1 28 1 
327 1 269 1 24 1 
298 1 24 1 269 1 232 1 148 1 100 1 182 1 172 1 345 1 357 1 158 1 114 1 153 1 238 1 
361 1 
327 1 155 1 269 2 24 2 316 1 375 1 232 1 361 1 
186 1 327 2 24 5 269 5 232 2 255 1 170 2 29 1 17 1 274 1 275 1 176 2 316 1 159 1 375 1 226 1 264 1 351 2 361 1 
106 1 319 1 
298 1 100 1 182 2 345 1 200 1 357 2 358 1 153 2 106 2 
372 1 3 1 51 1 
13 1 323 1 77 1 182 1 235 1 65 1 314 1 277 1 357 1 175 1 216 1 294 1 42 1 106 1 284 1 251 1 
298 1 13 1 51 1 323 1 77 1 302 1 235 1 182 2 65 1 345 1 314 1 277 1 81 1 357 2 175 1 294 1 153 1 42 1 284 1 251 1 
298 4 110 1 100 1 302 1 182 5 345 4 200 1 81 2 247 1 357 5 139 1 153 5 106 1 74 1 
298 2 357 2 158 1 153 2 238 1 370 1 182 2 345 2 
81 1 298 3 357 3 153 3 100 1 106 1 182 3 345 3 
298 1 357 1 158 1 153 1 238 1 182 1 345 1 
200 1 298 1 357 1 358 1 153 1 238 1 100 1 182 1 345 1 
44 1 24 1 308 1 97 1 168 1 100 2 77 1 122 1 235 1 172 1 314 1 81 1 292 1 357 4 175 1 294 1 153 3 238 1 106 1 298 3 57 1 269 1 300 1 13 1 323 1 369 1 302 1 182 4 65 1 345 3 66 1 200 1 277 1 38 1 349 1 280 1 42 1 71 2 306 1 284 1 164 1 285 1 116 1 251 1 
298 1 81 1 357 2 139 1 153 2 110 1 106 1 182 2 345 1 
298 3 269 1 24 1 168 1 100 1 369 1 302 1 122 1 182 3 345 3 200 1 81 2 357 3 201 1 349 1 153 3 238 1 361 1 116 1 
298 2 100 1 51 1 182 2 345 2 372 1 200 1 81 1 357 2 153 2 
13 1 323 1 77 1 182 1 235 1 65 1 314 1 277 1 357 1 175 1 294 1 42 1 106 1 284 1 251 1 
13 1 231 1 323 1 77 1 182 1 235 1 65 1 277 1 357 1 175 1 294 1 106 1 284 1 251 1 43 1 
44 4 166 1 0 1 97 2 146 2 3 2 51 2 150 1 260 1 292 1 242 1 156 1 300 1 344 1 66 1 372 2 38 1 374 1 20 1 280 1 281 1 248 1 71 2 164 1 
298 1 357 1 168 1 153 1 238 1 370 1 182 1 345 1 
59 1 147 1 
59 1 147 1 
46 1 163 1 
46 1 163 1 
46 1 163 1 
365 1 59 1 147 1 
309 1 59 1 147 1 
46 1 39 1 59 2 237 1 147 2 163 1 
365 1 59 1 147 1 
365 1 59 1 147 1 
373 1 59 1 147 1 
373 1 59 1 147 1 
373 1 59 1 147 1 
144 1 187 1 24 1 309 1 147 1 4 1 357 2 173 1 152 1 153 2 106 1 132 1 56 1 298 2 269 1 59 1 182 2 112 1 345 2 36 1 69 1 142 1 208 1 96 1 
144 2 286 1 24 2 269 2 59 2 147 2 4 3 36 2 259 2 39 1 126 1 152 1 115 1 69 2 337 1 72 1 361 1 208 2 207 1 
145 1 209 1 266 1 
145 1 210 1 266 1 
267 1 209 2 210 1 49 1 54 1 266 3 
267 1 209 1 92 1 210 1 49 1 266 2 
267 2 209 1 210 1 49 1 266 2 
186 3 187 1 327 1 24 5 0 1 354 1 232 4 170 1 29 1 30 2 290 2 192 1 176 1 7 3 316 1 6 1 151 1 242 1 107 2 9 1 361 2 269 5 156 1 342 1 343 1 344 1 112 1 274 2 375 1 138 1 351 1 142 1 
186 8 327 6 24 9 0 3 232 7 234 1 170 2 29 1 290 6 192 3 176 2 7 9 316 1 6 2 236 1 219 1 264 1 242 3 107 6 361 5 133 5 181 1 269 9 156 3 342 3 343 2 344 3 112 4 324 5 274 6 19 1 375 1 70 1 138 1 351 2 
186 3 24 3 0 1 232 2 170 1 30 1 290 2 192 1 176 1 316 1 6 1 7 4 151 1 264 1 242 1 9 1 107 2 361 3 269 3 156 1 342 2 343 1 344 1 112 1 274 2 351 1 
186 5 24 4 0 2 232 3 170 1 30 2 290 4 192 2 176 1 316 1 7 7 6 1 151 1 264 1 242 2 107 4 9 1 361 4 181 1 269 4 156 2 342 3 343 1 344 2 112 2 274 4 19 1 70 1 351 1 
320 1 77 1 319 1 
34 1 77 1 
75 1 
284 1 77 1 235 1 
93 1 77 1 
284 1 77 1 
320 2 61 1 360 1 284 1 77 3 235 1 
44 7 0 1 156 1 97 3 109 1 2 1 146 4 233 1 223 1 120 1 199 1 150 2 291 1 20 3 263 2 95 1 325 1 
44 7 0 1 156 1 97 3 109 1 2 1 146 4 233 1 223 1 120 1 199 1 150 2 291 1 20 3 263 2 95 1 325 1 
44 7 0 1 156 1 97 3 109 1 2 1 146 4 233 1 223 1 120 1 199 1 150 2 291 1 20 3 263 2 206 1 95 1 325 1 
44 6 97 3 146 3 233 1 312 1 120 1 121 1 150 1 291 1 356 1 292 1 317 1 220 1 263 1 300 1 223 1 199 1 66 1 136 1 38 1 20 2 71 2 22 1 325 2 
44 9 0 1 97 4 2 1 146 5 233 1 120 1 150 3 291 1 292 2 220 1 263 2 156 1 300 2 109 1 223 1 224 1 90 1 66 2 38 2 20 4 71 4 95 1 325 1 
145 1 209 1 47 1 210 1 52 2 355 1 79 1 53 1 191 1 127 1 84 1 294 1 54 1 179 1 196 1 266 2 268 1 13 1 367 1 246 1 323 1 89 1 65 1 91 1 162 1 307 1 204 2 377 1 251 1 185 1 
145 1 209 1 47 1 210 1 52 3 79 1 53 1 191 1 127 1 84 1 294 1 54 1 179 1 196 1 266 2 268 1 108 1 13 1 367 1 246 1 135 1 323 1 65 1 89 2 91 1 202 1 307 1 204 3 251 1 185 1 
209 1 145 1 210 1 52 2 79 1 53 1 127 1 84 1 294 1 54 1 179 1 196 1 266 2 108 1 13 1 367 1 246 1 135 1 323 1 65 1 89 2 91 1 307 1 204 2 251 1 
268 1 13 1 256 1 246 2 323 1 77 1 52 1 64 1 171 1 65 1 191 1 175 1 127 2 202 1 84 2 294 1 41 1 129 1 21 1 307 2 204 1 284 1 251 1 
145 1 209 1 47 1 210 1 52 1 355 1 53 1 191 1 127 1 84 1 294 1 54 1 179 1 196 1 266 2 268 1 13 1 246 1 135 1 323 1 65 1 307 1 204 1 377 1 251 1 185 1 
353 1 
186 2 327 6 5 1 332 2 7 2 294 2 153 1 238 1 241 1 105 1 13 1 157 1 301 2 342 2 62 1 343 1 64 1 65 2 348 1 161 2 350 2 205 2 351 1 251 2 116 1 24 5 168 1 311 4 76 1 256 1 170 1 29 1 77 1 122 1 175 2 82 1 357 1 176 1 316 1 262 1 32 1 33 2 218 1 361 2 180 1 269 5 323 1 369 1 88 1 182 1 274 2 375 3 376 2 139 1 284 1 
180 1 327 1 24 2 269 2 168 1 311 2 369 1 122 1 182 1 82 1 357 1 32 1 262 1 218 1 376 1 139 1 153 1 238 1 105 1 116 1 
327 1 24 3 168 1 311 3 122 1 357 1 82 1 316 1 262 1 32 1 218 1 153 1 238 1 105 1 361 1 180 1 155 1 269 3 301 1 369 1 182 1 375 1 139 1 116 1 
327 2 24 3 168 1 311 3 122 1 357 1 82 1 262 1 32 1 218 1 33 1 153 1 238 1 105 1 180 1 155 1 269 3 301 1 369 1 182 1 375 1 139 1 376 1 116 1 
327 2 24 3 167 1 168 1 148 1 311 3 100 1 122 1 172 1 82 1 357 2 316 1 262 1 32 1 218 1 33 1 153 2 238 2 105 1 361 1 180 1 298 1 155 1 269 3 301 1 369 1 182 2 345 1 158 1 114 1 375 1 139 1 376 1 116 1 
186 1 327 4 5 1 332 2 7 2 153 1 238 1 105 1 342 2 301 2 348 1 161 2 350 2 351 1 205 2 116 1 24 4 168 1 76 1 311 4 170 1 122 1 29 1 357 1 82 1 176 1 316 1 32 1 262 1 218 1 33 2 361 1 180 1 269 4 369 1 182 1 274 1 375 2 139 1 376 2 
186 1 165 1 327 4 24 4 168 1 76 1 311 4 170 1 122 1 29 1 5 1 332 2 357 1 82 1 176 1 316 1 262 1 32 1 33 2 218 1 153 1 238 1 105 1 361 1 180 1 269 4 301 2 342 2 369 1 182 1 274 1 304 1 375 2 376 2 139 1 161 2 350 2 205 2 351 1 116 1 117 1 
186 1 327 4 148 1 100 1 5 1 332 2 153 2 238 2 105 1 298 1 342 2 301 2 345 1 304 1 158 1 114 1 161 2 350 2 351 1 205 2 116 1 117 1 165 1 24 4 168 1 311 4 76 1 170 1 29 1 122 1 172 1 82 1 357 2 176 1 316 1 32 1 262 1 218 1 33 2 361 1 180 1 269 4 369 1 182 2 274 1 375 2 139 1 376 2 
186 1 327 4 148 1 100 1 5 1 332 2 7 2 293 2 153 2 238 2 105 1 298 1 11 1 301 2 345 1 303 2 158 1 114 1 161 2 351 1 116 1 117 1 24 4 168 1 254 1 311 4 170 1 29 1 122 1 172 1 82 1 357 2 176 1 316 1 32 1 262 1 218 1 33 2 361 1 180 1 269 4 369 1 182 2 274 1 375 2 139 1 376 2 228 1 
186 1 327 5 148 1 100 1 5 1 332 2 153 2 238 2 105 1 298 1 301 3 342 2 345 1 304 1 158 1 114 1 161 2 350 2 351 1 205 2 116 1 117 1 165 1 24 4 168 1 311 5 76 1 170 1 122 1 29 1 172 1 82 1 357 2 176 1 316 1 32 1 262 1 33 3 218 1 361 1 180 1 269 4 221 1 369 1 182 2 274 1 375 2 376 3 139 1 
186 1 165 1 327 5 24 4 168 1 76 1 311 5 170 1 29 1 122 1 5 1 332 2 357 1 82 1 176 1 316 1 262 1 32 1 218 1 33 3 153 1 238 1 105 1 361 1 180 1 269 4 221 1 342 2 301 3 369 1 182 1 274 1 304 1 375 2 139 1 376 3 161 2 350 2 205 2 351 1 116 1 117 1 
186 1 327 4 148 1 100 1 5 1 332 2 7 2 293 2 153 2 238 2 105 1 298 1 301 2 345 1 303 2 348 1 158 1 114 1 161 2 351 1 116 1 24 4 168 1 311 4 170 1 122 1 29 1 172 1 357 2 82 1 176 1 316 1 32 1 262 1 218 1 33 2 361 1 180 1 269 4 369 1 182 2 274 1 375 2 139 1 376 2 228 1 
44 6 0 1 97 3 2 1 146 3 3 1 233 1 51 1 150 2 260 1 292 1 263 1 106 2 319 1 300 1 156 1 109 1 223 1 372 1 66 1 38 1 20 2 280 1 71 2 164 1 95 1 
44 11 119 1 0 1 97 5 3 8 146 6 120 1 51 8 121 2 150 1 31 1 292 2 192 2 104 1 238 1 239 1 106 1 242 1 57 1 300 2 156 2 35 1 63 1 344 2 66 2 372 3 38 2 20 2 280 1 305 1 71 4 22 2 164 2 
44 2 98 1 97 1 146 1 77 1 235 1 314 1 81 1 175 1 292 1 357 2 315 1 216 1 294 1 153 1 106 1 298 1 57 1 13 1 300 1 86 1 323 1 63 1 302 1 182 2 65 1 345 1 372 1 66 1 277 1 38 1 280 1 42 1 71 2 284 1 184 1 164 1 251 1 
44 20 0 3 97 10 2 1 3 7 146 10 233 1 51 7 235 2 150 4 292 3 192 2 294 3 153 1 106 2 242 2 298 1 57 1 300 3 13 2 156 3 109 1 60 2 302 1 63 1 344 2 65 3 345 1 66 3 20 8 71 6 164 3 251 3 23 2 308 2 120 4 77 2 80 1 314 2 81 1 175 1 357 3 263 1 130 2 135 1 223 1 323 2 182 3 372 7 277 2 38 3 282 1 280 3 283 1 42 2 184 1 284 2 141 2 95 1 
44 2 97 1 146 1 169 1 256 1 77 3 313 1 260 1 81 1 83 1 357 1 175 2 292 2 193 2 294 7 153 1 178 1 298 1 57 1 13 2 300 2 135 1 323 2 182 1 65 8 64 1 345 1 66 2 37 1 38 2 113 1 280 2 162 1 71 4 250 1 184 1 284 2 164 2 251 8 
44 3 0 1 97 2 3 1 146 1 51 1 100 1 150 1 292 1 357 1 192 1 359 1 153 1 242 1 298 1 300 1 156 1 63 1 182 1 344 1 345 1 372 1 200 1 66 1 38 1 20 1 280 1 71 2 164 1 
44 2 300 1 156 1 3 1 146 2 120 1 51 1 344 1 372 1 66 1 260 1 292 1 38 1 20 1 280 1 248 1 71 2 164 1 
44 2 300 1 0 1 97 2 3 1 51 1 150 1 372 1 66 1 260 1 292 1 38 1 20 1 374 1 280 1 71 2 242 1 164 1 
44 4 0 1 97 2 146 2 3 2 51 2 120 1 150 1 260 1 192 1 292 1 242 1 156 1 300 1 344 1 66 1 372 2 38 1 20 2 280 1 71 2 164 1 
44 2 300 1 156 1 3 1 146 2 120 1 51 1 313 1 344 1 372 1 66 1 292 1 38 1 20 1 280 1 248 1 71 2 164 1 
44 2 300 1 0 1 97 2 3 1 51 1 313 1 150 1 372 1 66 1 292 1 38 1 20 1 374 1 280 1 71 2 242 1 164 1 
44 4 0 1 97 2 146 2 3 2 51 2 120 1 313 1 150 1 192 1 292 1 242 1 156 1 300 1 344 1 66 1 372 2 38 1 20 2 280 1 71 2 164 1 
44 4 0 1 97 2 146 2 3 2 51 2 120 1 150 1 192 1 292 1 242 1 156 1 300 1 344 1 66 1 372 2 38 1 20 2 280 1 71 2 164 1 
44 2 308 1 97 1 146 1 77 1 235 1 314 1 175 1 357 1 292 1 294 1 106 1 57 1 13 1 300 1 323 1 182 1 65 1 66 1 277 1 38 1 280 1 42 1 71 2 184 1 284 1 164 1 251 1 
44 2 97 1 231 1 146 1 77 1 235 1 175 1 357 1 292 1 294 1 106 1 57 1 13 1 300 1 323 1 182 1 65 1 66 1 277 1 38 1 280 1 71 2 184 1 284 1 164 1 43 1 251 1 143 1 
44 4 0 1 97 2 146 2 3 2 51 2 120 1 150 1 192 1 292 1 242 1 156 1 300 1 63 1 344 1 66 1 372 2 38 1 20 2 280 1 71 2 164 1 
23 1 44 4 0 1 308 1 97 2 3 2 146 2 120 1 51 2 77 1 235 1 150 1 314 1 357 1 292 1 192 1 294 1 242 1 156 1 13 1 300 1 323 1 344 1 182 1 65 1 372 2 66 1 277 1 38 1 20 2 280 1 42 1 162 1 71 2 284 1 164 1 251 1 
44 3 0 1 97 1 146 2 3 1 120 1 100 1 51 1 292 1 357 1 192 1 153 1 242 1 298 1 300 1 156 1 272 1 63 1 182 1 344 1 345 1 200 1 66 1 372 1 38 1 20 1 280 1 71 2 164 1 
44 20 0 2 97 11 146 9 329 1 99 1 121 2 214 1 212 1 150 2 292 3 192 2 125 1 217 1 317 2 220 1 8 1 242 2 134 1 300 3 156 2 371 1 344 2 224 1 66 3 68 3 38 3 20 2 40 1 71 6 22 2 378 1 
44 22 0 2 97 12 146 10 329 1 99 1 120 1 121 2 212 1 150 1 292 2 192 2 125 1 217 1 317 2 220 1 8 2 242 2 134 1 300 2 156 2 344 2 224 1 66 2 68 4 38 2 20 2 40 1 71 4 22 2 73 1 378 2 
44 24 26 1 0 2 97 13 146 11 329 1 99 1 120 1 121 3 214 1 212 1 150 2 292 3 192 2 125 1 217 1 317 3 220 1 8 2 242 2 134 1 300 3 156 2 344 2 224 1 66 3 68 4 38 3 20 3 40 1 71 6 22 3 73 1 378 1 
44 22 0 2 97 12 146 10 329 1 99 1 121 2 214 1 212 1 150 1 292 3 192 2 125 1 217 1 317 2 220 1 8 1 242 2 134 1 300 3 156 2 344 2 224 1 66 3 68 4 38 3 20 1 40 1 71 6 22 2 73 1 378 1 
44 22 0 2 97 12 146 10 329 1 99 1 120 1 121 2 212 1 150 3 292 2 192 2 125 1 217 1 317 2 220 1 8 1 242 2 134 1 300 2 156 2 344 2 224 1 66 2 68 4 38 2 20 4 40 1 71 4 22 2 73 1 378 1 
144 1 286 1 39 1 229 1 59 1 147 1 115 1 69 1 208 1 36 1 
309 1 132 1 
326 1 144 1 59 1 147 1 69 1 297 1 101 1 208 1 36 1 
365 1 328 1 
373 1 237 1 14 1 
144 1 286 1 24 1 269 1 59 1 147 1 4 2 36 1 259 1 39 1 126 1 152 1 115 1 69 1 72 1 361 1 208 1 207 1 
144 1 286 1 24 1 269 1 59 1 147 1 4 2 36 1 259 1 39 1 126 1 152 1 115 1 69 1 72 1 361 1 208 1 207 1 
144 1 286 1 24 1 269 1 59 1 147 1 4 2 36 1 259 1 39 1 126 1 152 1 115 1 69 1 72 1 361 1 208 1 207 1 
365 1 237 1 328 1 
365 1 237 1 328 1 
373 1 14 1 
373 1 237 1 14 1 
56 1 96 1 
144 1 187 1 24 1 309 1 147 1 232 1 4 1 258 1 259 1 357 2 173 1 153 2 106 1 132 1 56 1 298 2 269 1 59 1 182 2 112 1 36 1 345 2 69 1 142 1 207 1 208 1 96 1 
44 2 97 1 146 1 257 1 77 1 124 1 357 2 292 1 334 1 335 1 193 2 294 2 103 1 153 2 57 1 13 1 300 1 323 1 63 1 182 2 65 2 66 1 37 1 38 1 113 1 280 1 71 2 284 1 184 1 164 1 251 2 
145 1 209 1 13 1 210 1 135 1 323 1 331 1 65 2 190 1 53 1 225 1 294 2 54 1 162 1 307 1 251 2 185 1 179 1 266 2 
145 1 209 1 13 1 210 1 135 1 323 1 65 1 190 1 53 1 294 1 54 1 227 1 307 1 251 1 185 1 179 1 266 2 
13 1 256 1 323 1 77 1 65 1 64 1 225 1 175 1 294 1 41 1 307 1 284 1 94 1 251 1 
145 1 209 1 13 1 210 1 135 1 323 1 331 1 65 1 190 1 53 1 225 1 294 1 54 1 307 1 251 1 185 1 179 1 266 2 
288 1 
186 1 274 1 275 1 316 1 159 1 361 1 319 1 
186 1 327 1 269 1 24 1 342 1 76 1 170 1 29 1 274 1 176 1 316 1 7 1 375 1 350 1 205 1 351 1 361 2 
186 9 327 5 188 1 0 2 235 3 290 6 192 2 336 2 7 12 294 3 154 1 195 2 241 1 107 6 242 2 243 2 13 4 156 2 61 1 342 6 111 2 343 2 16 2 344 2 18 2 65 3 159 1 162 1 249 1 351 4 251 3 116 2 24 5 170 4 77 10 29 4 175 1 176 4 316 2 318 2 361 8 362 1 363 1 269 5 320 2 34 3 323 3 275 1 276 2 274 8 375 3 284 3 93 2 141 2 
186 6 327 1 24 1 0 1 329 1 99 1 170 2 29 2 121 1 290 4 192 1 336 1 176 2 7 6 316 2 317 1 195 2 241 1 107 4 242 1 361 5 265 1 269 1 156 1 342 3 343 1 344 1 274 3 40 1 137 1 375 1 351 2 22 1 
186 2 24 1 0 1 233 1 148 1 170 1 100 1 29 1 172 1 357 1 336 1 176 1 153 1 238 1 195 2 298 1 299 1 269 1 156 2 109 1 223 1 182 1 345 1 274 2 304 1 158 1 114 1 351 1 
186 1 170 1 29 1 275 1 274 1 176 1 316 1 159 1 351 1 361 1 
186 5 156 2 0 2 342 5 344 2 274 5 290 5 192 2 336 1 7 10 195 2 141 1 107 5 242 2 361 5 
327 1 269 1 24 1 316 1 375 1 361 1 
186 2 327 4 24 3 188 2 256 1 170 2 77 1 29 1 175 2 176 2 294 4 194 1 296 1 154 1 264 1 241 2 269 3 13 1 157 1 323 1 343 2 88 1 65 4 64 1 274 2 375 2 351 2 284 1 251 4 
44 1 308 1 97 1 100 2 77 1 235 1 172 1 314 1 292 1 175 1 357 3 294 1 153 2 106 1 298 2 57 1 300 1 13 1 323 1 182 3 65 1 345 2 66 1 277 1 38 1 280 1 42 1 71 2 284 1 285 1 164 1 251 1 
186 1 342 2 170 1 29 1 343 1 290 2 274 2 176 1 7 4 316 2 263 1 351 1 241 1 107 2 361 4 
208 1 346 1 36 1 
56 1 364 1 115 1 208 1 36 1 
208 1 346 1 36 1 
208 1 346 1 36 1 
368 1 208 1 36 1 
368 1 208 1 36 1 
368 1 208 1 36 1 
208 1 36 1 
59 1 147 1 
44 8 0 1 156 1 300 2 109 1 97 4 2 1 146 4 233 1 223 1 120 1 150 2 66 2 292 2 38 2 20 3 220 1 263 1 71 4 95 1 
44 6 156 1 0 1 97 3 109 1 2 1 146 3 233 1 223 1 150 2 20 2 263 1 95 1 319 1 
44 4 0 1 300 1 156 1 97 2 146 2 27 1 120 1 344 1 150 1 66 1 292 1 38 1 192 1 20 2 71 2 242 1 
44 2 97 1 317 1 146 1 121 1 22 1 
44 25 0 5 97 12 2 1 146 13 233 2 120 4 121 2 150 4 31 1 192 2 292 1 239 1 220 1 263 1 242 2 299 1 156 5 300 1 109 2 223 2 35 1 344 2 66 1 38 1 20 8 71 2 22 2 95 1 
44 1 97 1 22 1 
44 1 146 1 121 1 
44 6 300 1 156 1 0 1 97 3 146 3 27 1 120 1 344 1 150 2 66 1 38 1 292 1 192 1 20 3 71 2 141 1 242 1 
44 7 0 1 156 1 300 1 97 4 146 3 329 1 99 1 121 1 344 1 150 1 224 1 66 1 192 1 292 1 38 1 20 1 40 1 317 1 71 2 242 1 22 1 
44 6 156 1 0 1 109 1 97 3 146 3 233 1 223 1 120 1 150 1 20 2 
44 3 300 1 97 2 2 1 146 1 233 1 312 1 223 1 120 1 150 1 66 1 292 1 38 1 20 2 220 1 71 2 95 1 
44 10 299 1 300 1 156 2 0 2 97 5 109 1 146 5 233 2 223 2 120 2 224 1 150 3 66 1 38 1 292 1 20 5 71 2 
44 2 300 1 156 1 146 2 120 1 344 1 224 1 66 1 292 1 38 1 20 1 71 2 
44 4 0 1 300 1 156 1 97 2 146 2 120 1 344 1 150 1 224 1 66 1 292 1 38 1 192 1 20 2 71 2 242 1 
44 3 300 3 97 2 146 1 233 1 312 1 223 1 120 1 214 1 224 1 150 1 66 3 292 3 38 3 20 2 220 1 71 6 
44 15 0 2 97 8 2 1 146 7 233 2 312 1 27 1 120 3 121 1 214 1 150 3 356 1 292 4 317 1 220 1 299 1 156 2 300 4 109 1 223 2 224 1 66 4 38 4 20 6 71 8 22 1 95 1 
44 7 0 1 97 4 146 3 329 1 99 1 121 1 150 1 292 1 192 1 317 1 242 1 300 1 156 1 344 1 224 1 66 1 38 1 20 1 40 1 71 2 22 1 
44 7 0 1 97 4 146 3 329 1 99 1 27 1 121 1 150 1 292 2 192 1 317 1 242 1 300 2 156 1 344 1 224 1 66 2 38 2 20 1 40 1 71 4 22 1 
44 14 0 2 97 8 2 1 146 6 233 1 329 1 99 1 27 1 121 1 150 3 292 3 192 1 317 1 220 1 263 1 242 1 300 3 156 2 109 1 223 1 344 1 224 1 66 3 38 3 20 3 40 1 71 6 22 1 95 1 
44 7 0 1 97 4 146 3 329 1 99 1 27 1 121 1 150 1 292 2 192 1 317 1 242 1 300 2 156 1 344 1 224 1 66 2 38 2 20 1 40 1 71 4 22 1 
44 7 0 1 97 4 146 3 329 1 99 1 121 1 150 1 292 1 192 1 317 1 242 1 300 1 156 1 344 1 224 1 66 1 38 1 20 1 40 1 71 2 22 1 
44 7 0 1 156 1 300 1 97 4 146 3 329 1 99 1 121 1 344 1 150 1 224 1 66 1 192 1 292 1 38 1 20 1 40 1 317 1 71 2 242 1 22 1 
44 8 0 1 97 5 146 3 329 1 99 1 27 1 121 1 150 1 292 3 192 1 317 1 220 1 242 1 300 3 156 1 344 1 224 1 66 3 38 3 20 1 40 1 71 6 22 1 
44 8 0 1 97 5 146 3 329 1 99 1 121 1 214 1 150 2 292 3 192 1 317 1 220 1 242 1 300 3 156 1 344 1 224 1 66 3 38 3 20 2 40 1 71 6 22 1 
44 7 0 1 156 1 97 4 109 1 2 2 146 3 233 3 223 3 120 3 150 3 20 6 95 1 
44 8 0 1 97 5 146 3 329 1 99 1 121 1 214 1 150 1 292 3 192 1 317 1 220 1 242 1 300 3 156 1 344 1 224 1 66 3 38 3 20 1 40 1 71 6 22 1 
357 1 25 1 153 1 139 1 110 1 106 1 182 1 
340 1 341 1 25 1 110 1 182 1 357 1 102 1 139 1 153 1 295 1 106 1 197 1 
175 1 13 1 294 1 256 1 323 1 284 1 77 1 251 1 64 1 319 1 65 1 
298 1 13 1 323 1 77 1 235 1 182 2 65 1 345 1 314 1 277 1 81 1 357 2 175 1 294 1 153 1 106 1 284 1 251 1 
188 1 168 1 77 3 122 1 235 2 314 1 81 1 357 2 294 1 153 2 238 1 106 1 298 2 13 1 323 1 111 1 182 2 65 1 345 1 277 1 284 2 93 1 251 1 
188 1 231 1 168 1 77 3 122 1 235 2 81 1 357 2 294 2 153 2 238 1 106 1 298 2 13 1 85 1 323 1 111 1 182 2 65 2 345 1 277 1 284 2 93 1 251 2 
327 1 24 2 269 2 13 1 188 1 118 1 320 1 34 1 85 1 111 1 323 1 123 1 77 4 235 1 65 3 175 1 316 1 294 3 93 1 284 1 361 1 116 1 251 3 
327 1 24 2 269 2 13 1 188 1 320 1 34 1 85 1 111 1 323 1 77 4 235 1 65 3 276 1 175 1 316 1 294 3 93 1 284 1 361 1 116 1 251 3 
83 1 13 1 294 1 323 1 251 1 65 1 
13 3 61 1 169 1 135 1 323 2 77 3 235 1 65 7 289 1 37 1 333 1 83 1 175 2 193 1 294 6 162 1 178 1 250 1 284 2 251 7 10 1 
44 6 0 1 97 3 2 1 146 3 3 1 233 1 51 1 235 1 150 2 292 2 294 1 153 1 106 2 298 1 300 2 13 1 156 1 60 1 109 1 63 1 65 1 345 1 66 2 20 2 162 1 71 4 164 2 251 1 23 1 308 1 77 1 314 1 81 1 124 1 357 2 263 1 223 1 323 1 182 2 372 1 277 1 38 2 280 2 42 1 284 1 95 1 
186 1 327 2 24 3 232 1 170 2 29 2 77 2 175 1 176 2 316 1 294 1 318 1 154 1 361 1 269 3 320 1 34 1 16 1 65 1 18 1 274 1 275 1 276 1 159 1 375 1 351 2 251 1 116 1 
13 2 320 1 61 1 323 1 77 2 235 1 65 2 83 1 294 2 162 1 284 1 251 2 363 1 
13 1 85 1 256 1 323 1 77 1 65 4 64 1 175 1 294 4 162 1 284 1 339 1 251 4 
188 1 13 2 149 1 323 1 77 1 213 1 235 1 80 1 65 2 333 1 294 2 284 1 251 2 10 1 
145 1 175 1 13 1 210 1 294 1 323 1 179 1 251 1 65 1 266 1 
37 1 13 1 334 1 294 2 162 1 135 1 323 1 284 1 77 1 251 2 65 2 
188 1 13 2 256 1 169 1 323 2 77 3 64 1 65 5 37 1 175 1 294 4 162 1 284 2 250 1 339 1 251 5 
188 1 13 2 256 1 323 2 77 3 64 1 65 5 37 1 175 1 279 1 294 4 162 1 284 2 250 1 339 1 251 5 
298 1 13 1 231 1 323 1 77 1 235 1 182 2 65 1 345 1 277 1 81 1 357 2 175 1 294 1 153 1 106 1 284 1 251 1 
188 1 13 2 61 1 323 1 77 1 235 1 65 1 289 1 333 1 294 1 284 1 251 1 10 1 
1 1 128 1 366 1 273 1 106 1 
12 1 24 2 269 2 1 2 168 1 232 1 50 1 366 2 273 1 369 1 122 1 316 1 349 1 160 1 128 2 238 1 106 1 361 1 116 1 
1 1 366 1 273 1 257 1 182 1 357 1 335 1 103 1 153 1 
160 1 50 1 273 1 
91 1 367 1 79 1 319 1 
268 1 91 1 191 1 367 1 204 1 52 1 79 1 
127 1 246 1 204 1 
268 1 253 1 321 1 367 1 52 3 79 1 91 1 191 1 278 1 377 1 204 3 55 2 
268 1 91 1 191 1 367 1 338 1 204 2 52 2 79 1 89 1 
268 1 145 1 209 1 91 1 191 1 244 1 352 1 204 1 377 1 52 1 266 1 
268 1 91 1 191 1 367 1 204 1 377 1 52 1 
268 1 191 1 367 2 204 1 377 1 52 1 79 1 
268 2 270 1 245 1 367 1 287 1 52 2 91 1 191 2 377 1 204 2 
268 1 45 1 244 1 367 1 87 1 52 3 79 1 89 2 191 1 91 2 261 1 377 1 204 3 
268 1 209 1 145 1 310 1 210 1 367 1 52 2 79 1 89 1 91 1 191 1 54 1 377 1 204 2 266 2 
268 2 244 1 367 1 87 1 52 4 79 1 89 2 67 1 191 2 91 2 338 1 377 1 204 4 
268 1 91 1 191 1 367 1 204 1 377 1 52 1 79 1 
268 1 253 1 244 1 367 2 87 1 52 4 79 2 89 2 278 1 191 1 91 3 203 1 204 4 55 1 
268 1 198 1 367 1 52 2 330 1 89 1 79 1 91 1 191 1 183 1 377 1 204 2 
268 1 253 2 367 1 52 3 79 1 278 1 91 1 191 1 377 1 204 3 131 1 55 2 
91 2 174 1 240 1 78 2 
252 1 268 1 191 1 204 1 377 1 52 1 
268 1 91 1 45 1 191 1 367 1 204 2 377 1 52 2 79 1 89 1 
140 1 
268 1 91 1 191 1 367 1 204 1 377 1 52 1 79 1 
268 1 45 1 367 1 52 3 89 1 79 1 191 1 91 1 377 1 204 3 55 1 
91 1 244 1 203 1 87 1 
91 1 367 1 

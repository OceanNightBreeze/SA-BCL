#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 108 267 150 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
182 2 164 2 220 1 272 1 88 3 277 1 7 1 374 3 362 2 177 1 289 1 364 1 321 1 
164 2 220 1 78 1 82 1 302 1 7 1 362 5 177 7 289 1 364 3 182 2 272 1 292 1 88 9 155 1 274 1 24 2 340 1 341 1 277 1 374 9 345 1 346 1 321 4 
164 2 220 1 78 1 82 1 302 1 7 1 362 5 177 7 289 1 364 3 182 2 272 1 292 1 88 9 155 1 274 1 24 2 340 1 341 1 277 1 374 9 345 1 346 1 321 4 
164 2 220 1 221 1 78 1 82 1 128 1 62 1 7 2 362 5 177 6 289 1 364 3 226 1 253 1 182 2 273 1 292 2 272 1 88 9 155 2 274 1 24 2 341 2 340 1 277 1 374 9 346 1 321 4 
164 2 220 1 221 1 78 1 82 1 128 1 62 1 7 2 362 5 177 6 289 1 364 3 226 1 253 1 182 2 273 1 292 2 272 1 88 9 155 2 274 1 24 2 341 2 340 1 277 1 374 9 346 1 321 4 
164 2 220 1 221 1 78 1 82 1 128 1 62 1 7 2 362 6 177 7 289 1 364 4 226 1 253 1 182 2 273 1 292 2 272 1 88 10 155 2 274 1 24 2 341 2 340 1 277 1 374 10 346 1 321 5 
164 2 220 1 221 1 78 1 82 1 128 1 62 1 7 2 362 4 177 4 289 1 364 2 226 1 253 1 182 2 273 1 292 2 272 1 88 7 155 2 24 1 341 2 340 1 277 1 374 7 346 1 321 3 
182 1 164 1 220 1 292 1 155 1 88 4 78 1 274 1 24 2 341 1 277 1 374 4 362 3 177 3 346 1 289 1 364 1 321 2 
182 1 164 1 220 1 292 1 212 1 88 2 155 1 48 1 128 1 277 1 7 1 374 2 362 1 289 1 253 1 87 1 
135 1 102 1 59 1 137 1 156 1 23 1 356 1 159 1 266 1 41 1 217 1 143 1 17 1 352 1 
168 1 
0 1 59 2 168 1 137 2 23 1 249 1 208 1 68 1 
296 2 184 1 185 1 228 1 59 5 368 1 168 1 137 5 23 2 222 2 204 1 42 1 319 1 96 2 109 1 249 2 208 1 68 1 366 1 
168 1 103 1 208 1 
161 1 168 1 373 2 
41 1 143 2 156 2 2 1 356 2 159 2 17 2 352 2 
31 1 199 1 2 1 81 1 283 1 356 2 304 1 106 1 41 1 40 1 248 1 224 2 132 1 153 1 44 1 67 1 111 1 17 2 20 2 21 2 156 3 72 1 159 2 25 1 233 2 188 1 94 1 191 1 95 1 120 1 143 3 241 2 146 1 58 1 351 1 198 1 352 2 
41 1 102 1 217 1 143 1 156 1 356 1 159 1 266 1 17 1 352 1 
311 1 355 1 59 1 168 1 137 1 156 1 356 1 266 1 93 1 117 1 236 1 143 1 208 1 29 1 
311 1 59 2 168 1 137 2 156 1 356 1 159 1 266 1 93 1 117 1 143 1 208 1 29 1 17 1 352 1 
59 1 137 1 80 1 23 1 249 1 
166 1 59 2 168 1 137 2 23 1 249 1 208 1 68 1 
59 1 137 1 249 1 
156 2 172 1 2 2 356 2 159 1 305 1 143 2 17 1 352 1 
110 1 293 1 180 1 
20 1 21 1 31 1 156 1 370 1 2 1 81 1 304 1 191 1 40 1 120 1 143 1 132 1 241 1 44 1 58 1 
103 1 2 1 
361 1 143 3 156 3 2 1 356 3 159 3 17 1 352 3 
102 1 143 1 156 1 356 1 159 1 266 1 352 1 
143 1 156 1 172 1 356 1 159 1 266 1 17 1 352 1 305 1 
31 1 199 1 59 1 2 1 81 1 171 1 283 1 356 3 201 1 266 1 304 1 305 1 151 1 40 1 41 1 361 1 224 1 132 1 153 1 44 1 67 1 111 1 17 2 311 1 20 1 21 1 137 1 156 4 72 1 159 3 233 2 188 1 94 1 93 1 191 1 117 1 120 1 143 4 241 1 29 1 58 1 351 1 198 1 352 3 
355 1 361 1 143 2 156 2 2 1 356 2 159 1 77 1 352 1 
311 1 315 1 59 1 168 1 137 1 156 3 356 3 159 3 266 1 201 1 305 1 93 1 151 1 117 1 361 2 143 3 29 1 17 1 352 3 
156 2 356 2 293 1 159 2 305 1 361 1 143 2 180 1 17 1 352 2 
20 1 21 1 31 1 156 1 2 1 81 1 304 1 191 1 40 1 120 1 143 1 241 1 132 1 44 1 58 1 
20 1 21 1 354 1 31 1 156 1 2 1 357 1 304 1 191 1 120 1 143 1 241 1 132 1 44 1 58 1 
30 1 170 1 245 1 248 2 224 4 153 1 207 1 12 1 67 1 110 2 180 2 111 1 157 1 72 1 293 2 89 1 233 2 94 1 53 1 75 1 343 1 279 1 198 1 351 2 
143 1 156 1 356 1 29 1 159 1 266 1 51 1 352 1 
20 1 21 1 31 1 156 2 81 1 356 1 159 1 304 1 191 1 151 1 40 1 361 1 120 1 143 2 132 1 241 1 44 1 180 1 58 1 352 1 
359 1 151 1 355 1 361 2 143 5 156 5 295 1 2 1 356 5 159 4 77 1 17 1 352 4 305 1 
102 1 143 2 156 2 356 2 159 2 51 1 266 1 352 2 
314 1 83 1 287 1 
314 2 183 1 27 1 83 2 303 1 173 1 
314 1 83 1 
314 1 83 1 
183 1 173 1 
183 1 173 1 
183 1 173 1 
314 1 83 1 375 1 
314 1 83 1 375 1 
314 1 83 1 375 1 
314 1 330 1 83 1 
314 1 330 1 83 1 
314 1 330 1 83 1 
314 2 59 2 168 1 47 1 263 2 137 2 338 1 371 3 303 1 114 2 91 2 247 1 83 2 238 1 239 1 242 1 196 2 57 2 281 1 
59 1 263 1 79 1 148 1 2 1 356 2 265 1 325 1 202 1 83 1 307 1 287 1 314 1 335 1 137 1 156 2 371 1 159 2 114 1 239 1 143 2 57 1 196 1 352 2 
125 2 155 2 13 1 341 1 87 1 
292 1 155 1 341 1 
292 1 155 1 87 1 
125 1 155 3 13 1 341 2 16 1 87 1 
125 1 155 2 13 1 341 1 134 1 87 1 
296 1 59 5 168 2 170 1 222 1 325 1 202 1 363 2 249 1 208 1 269 1 68 1 335 1 185 2 228 1 229 1 71 2 137 5 157 1 339 2 23 4 49 1 139 1 373 3 161 1 343 1 96 1 319 3 76 1 279 1 195 1 376 1 
296 2 59 9 282 1 168 5 170 3 80 5 243 1 222 2 325 4 205 1 249 6 208 1 269 2 68 1 19 5 368 1 185 6 228 1 71 6 137 9 157 3 339 6 23 7 49 1 50 1 373 9 190 1 161 3 343 3 96 2 319 8 347 1 279 3 195 3 376 2 
296 1 59 3 168 3 170 1 222 1 325 1 363 1 208 1 269 1 368 1 185 2 229 1 137 3 71 2 157 1 23 2 339 2 139 1 373 4 161 2 343 1 96 1 319 3 376 1 195 1 279 1 
296 1 59 4 168 4 282 1 170 2 222 1 325 2 363 2 208 1 269 1 368 1 185 4 229 1 71 4 137 4 157 2 339 4 23 3 50 1 139 1 373 7 161 3 343 2 96 1 319 5 347 1 376 1 195 2 279 2 
37 1 
103 1 132 1 138 1 
132 1 133 1 
191 1 132 1 
191 1 31 1 118 1 132 3 138 2 250 1 
191 1 31 1 132 1 
132 1 264 1 
170 1 32 2 200 1 89 2 326 1 175 1 63 1 75 3 248 4 8 1 224 7 279 1 331 1 14 1 122 1 178 1 351 3 271 1 
170 4 200 1 32 3 326 2 246 1 63 1 8 1 267 1 248 16 108 3 224 31 331 2 67 1 178 2 14 5 365 4 270 1 111 1 271 2 69 1 312 1 230 1 157 3 72 1 89 5 233 2 343 3 75 10 195 3 279 4 122 1 145 1 198 1 351 15 
170 1 32 2 200 1 301 1 326 1 63 1 248 5 224 9 67 2 331 1 178 1 14 1 111 2 270 1 271 1 72 2 89 3 233 4 75 4 279 1 122 1 198 2 351 4 261 1 
170 1 32 2 200 1 89 2 326 1 63 1 75 3 248 4 8 1 224 7 279 1 331 1 14 1 178 1 122 1 351 3 271 1 
170 1 32 2 200 1 89 2 326 1 63 1 75 3 248 4 8 1 224 7 279 1 331 1 14 1 178 1 122 1 351 3 271 1 
182 1 20 1 164 1 21 1 291 2 126 2 88 1 158 1 140 2 36 1 304 1 5 1 191 1 7 2 38 1 374 1 344 1 119 1 120 1 132 1 241 1 44 1 209 1 
182 1 20 1 164 1 136 1 21 1 291 1 292 1 126 1 155 2 187 1 88 1 341 1 276 1 140 1 304 1 115 1 52 1 277 1 7 1 374 1 218 1 241 1 44 1 268 1 16 1 87 1 
164 1 220 1 126 1 304 1 329 1 7 1 362 1 177 1 289 1 268 1 44 1 16 1 87 1 20 1 182 1 21 1 291 1 292 1 88 2 187 1 155 2 341 1 140 1 276 1 277 1 52 1 115 1 374 2 218 1 241 1 
164 1 220 1 126 1 304 1 38 1 7 1 362 1 177 2 289 1 268 1 44 1 16 1 87 1 20 1 182 1 21 1 136 1 291 1 292 1 88 3 155 2 341 1 140 1 276 1 52 1 115 1 374 3 237 1 218 1 241 1 
220 1 126 1 304 1 7 1 362 1 177 2 289 1 44 1 16 1 87 1 20 1 21 1 136 1 291 1 292 1 88 2 155 2 341 1 140 1 276 1 52 1 115 1 374 2 237 1 241 1 
275 1 
296 1 355 1 59 4 168 1 356 1 3 1 324 3 222 1 266 1 61 1 285 1 4 1 84 1 10 5 223 3 249 5 208 1 179 3 68 2 18 2 112 1 311 1 313 2 185 1 228 1 137 4 156 1 213 1 215 2 234 1 257 1 93 1 74 2 161 2 117 1 236 1 319 1 96 1 143 1 54 1 29 1 377 1 
296 1 355 1 59 4 168 1 356 1 3 1 324 3 222 1 266 1 61 1 285 1 4 1 84 1 10 5 223 3 249 5 208 1 179 3 68 2 18 2 112 1 311 1 313 2 185 1 228 1 137 4 156 1 213 1 215 2 234 1 93 1 257 1 74 2 161 2 117 1 236 1 319 1 96 1 143 1 54 1 29 1 377 1 
59 4 3 1 324 2 284 1 61 1 285 1 4 1 10 4 249 4 208 1 68 2 18 2 156 1 257 1 74 2 117 1 29 1 296 1 355 1 168 1 356 1 222 1 266 1 84 1 223 2 45 2 179 2 181 2 311 1 228 1 185 1 137 4 232 1 373 2 93 1 236 1 143 1 96 1 319 1 
59 5 324 2 3 1 61 1 285 1 4 1 10 4 249 6 208 1 251 1 68 3 18 2 20 2 21 2 156 1 215 2 257 1 74 2 161 2 117 1 344 1 120 2 29 1 296 1 355 1 168 2 299 1 356 1 222 1 266 1 36 1 304 1 84 1 223 2 132 1 44 1 179 2 367 1 311 1 313 2 185 2 228 1 137 5 232 1 373 2 234 1 93 1 191 1 236 1 319 2 96 1 143 1 241 2 376 1 322 1 
311 1 355 1 0 1 59 3 137 3 156 1 3 1 356 1 266 1 61 1 285 1 4 1 257 1 93 1 117 1 236 1 223 1 10 2 143 1 249 2 29 1 68 1 
311 1 355 1 0 1 59 3 168 1 137 3 156 1 324 1 3 1 356 1 266 1 61 1 285 1 4 1 257 1 93 1 117 1 236 1 10 3 143 1 249 1 208 1 29 1 68 1 
355 1 0 1 59 3 168 1 356 1 3 1 324 1 266 1 61 1 285 1 4 1 10 3 223 1 249 2 179 1 208 1 68 1 311 1 137 3 156 1 93 1 257 1 117 1 236 1 143 1 29 1 
296 1 355 1 0 1 59 5 168 5 324 4 356 1 3 1 222 1 266 1 61 1 285 1 4 1 84 1 10 6 223 4 249 7 208 5 179 4 68 3 18 2 112 1 311 1 313 2 185 1 228 1 137 5 156 1 213 1 256 1 215 2 234 1 257 1 93 1 74 2 161 2 117 1 236 1 319 1 96 1 143 1 54 1 29 1 377 1 
59 4 3 1 324 2 61 1 285 1 4 1 10 4 249 4 208 1 68 2 18 2 156 1 215 2 257 1 74 2 117 1 161 2 29 1 296 1 355 1 168 2 356 1 222 1 266 1 84 1 223 2 179 2 311 1 313 2 228 1 185 1 137 4 232 1 373 2 234 1 93 1 236 1 143 1 96 1 319 1 
296 1 355 1 59 4 168 1 324 2 356 1 3 1 222 1 266 1 61 1 285 1 4 1 84 1 223 2 10 4 249 4 208 1 179 2 68 2 18 2 112 1 311 1 313 2 185 1 228 1 137 4 156 1 213 1 215 2 234 1 93 1 257 1 74 2 161 2 117 1 236 1 319 1 143 1 96 1 29 1 377 1 
296 1 355 1 59 4 168 1 324 2 356 1 3 1 222 1 266 1 61 1 285 1 4 1 84 1 223 2 10 4 249 4 208 1 179 2 68 2 18 2 112 1 311 1 313 2 185 1 228 1 137 4 156 1 213 1 215 2 234 1 93 1 257 1 74 2 161 2 117 1 236 1 319 1 143 1 96 1 29 1 377 1 
296 1 297 1 355 1 59 4 168 1 324 2 356 1 3 1 222 1 284 1 266 1 61 1 285 1 4 1 84 1 223 2 10 4 249 4 208 1 179 2 45 2 68 2 181 2 18 2 311 1 185 1 228 1 137 4 156 1 373 2 93 1 257 1 74 2 117 1 236 1 319 1 143 1 96 1 55 1 29 1 377 1 
169 1 356 1 283 1 36 1 304 2 106 2 329 1 361 1 248 1 65 1 130 1 224 2 132 3 44 2 153 2 67 2 85 1 111 2 20 7 136 1 21 8 336 1 156 1 72 2 159 1 233 4 94 2 191 2 95 1 235 1 53 1 344 1 120 2 143 1 98 1 241 8 352 1 198 2 351 1 
170 1 356 1 305 1 6 1 248 1 224 3 206 1 153 1 110 1 67 1 180 1 17 1 111 1 156 1 157 1 72 1 89 1 293 1 159 1 233 2 94 1 75 1 343 1 143 1 195 1 279 1 198 1 352 1 351 2 
103 1 170 1 200 1 32 1 2 2 326 1 63 1 248 3 224 6 153 1 67 1 331 1 110 1 180 1 111 1 72 1 293 1 89 2 233 2 94 1 53 1 75 2 279 1 122 1 198 1 351 3 
170 1 2 1 283 1 267 1 248 8 224 14 108 3 288 1 206 1 153 2 67 2 110 11 14 1 365 3 180 11 111 2 86 1 312 1 157 1 72 2 89 1 293 4 113 1 233 4 94 1 278 1 95 1 75 2 343 2 195 2 279 2 351 6 198 2 
31 1 2 1 81 1 356 1 283 1 203 1 304 1 151 1 40 1 361 1 248 1 224 2 132 1 206 1 44 1 153 1 67 1 111 1 20 1 21 1 370 1 156 2 72 1 293 1 159 1 233 2 94 1 216 1 191 1 95 1 120 1 143 2 241 1 58 1 352 1 198 1 351 1 219 1 
200 1 2 2 283 1 326 1 151 1 63 1 248 10 66 1 206 1 153 3 331 1 67 3 110 7 14 4 15 1 111 3 290 2 20 3 21 3 156 3 157 2 72 3 159 1 293 7 343 2 75 8 120 1 121 2 122 1 351 10 352 1 260 2 163 2 31 2 167 1 170 3 32 1 81 2 356 1 304 2 40 2 361 1 224 20 132 2 44 2 180 7 136 1 89 4 233 6 188 2 94 3 191 2 95 1 143 3 241 3 195 2 279 3 58 2 198 3 
72 1 293 1 233 2 94 1 75 1 53 1 343 1 248 2 224 2 153 1 12 1 110 1 67 1 279 1 14 1 180 1 111 1 198 1 
170 1 157 1 72 1 89 1 293 1 245 1 233 2 94 1 75 1 53 1 224 2 153 1 110 1 67 1 180 1 111 1 198 1 351 2 
170 1 157 1 72 1 89 1 293 2 233 2 94 1 75 2 53 1 343 1 248 2 224 4 153 1 110 2 67 1 195 1 279 1 14 1 180 2 111 1 351 2 198 1 
72 1 293 1 233 2 94 1 75 1 343 1 248 2 224 2 153 1 12 1 110 1 67 1 279 1 14 1 85 1 180 1 111 1 198 1 
170 1 157 1 72 1 89 1 293 1 245 1 233 2 94 1 75 1 224 2 153 1 110 1 67 1 85 1 180 1 111 1 198 1 351 2 
170 1 157 1 72 1 89 1 293 2 233 2 94 1 75 2 343 1 248 2 224 4 153 1 110 2 67 1 195 1 279 1 14 1 85 1 180 2 111 1 351 2 198 1 
170 1 157 1 72 1 89 1 293 2 233 2 94 1 75 2 343 1 248 2 224 4 153 1 110 2 67 1 195 1 279 1 14 1 180 2 111 1 351 2 198 1 
31 1 2 1 81 1 283 1 304 1 40 1 248 1 224 2 132 1 44 1 153 1 67 1 111 1 20 1 21 1 156 1 72 1 188 1 233 2 94 1 191 1 95 1 120 1 143 1 241 1 58 1 198 1 351 1 
31 1 354 1 2 1 283 1 357 1 304 1 248 1 224 2 132 1 44 1 153 1 67 1 111 1 20 1 21 1 46 1 156 1 72 1 233 2 94 1 191 1 95 1 120 1 143 1 241 1 58 1 198 1 351 1 
170 1 248 2 224 4 206 1 153 1 67 1 110 2 14 1 180 2 111 1 157 1 72 1 293 2 89 1 233 2 94 1 343 1 75 2 279 1 195 1 198 1 351 2 
31 1 170 1 81 1 304 1 329 1 40 1 248 2 224 4 132 1 44 1 153 1 110 2 67 1 14 1 180 2 111 1 20 1 21 1 157 1 156 1 72 1 89 1 293 2 188 1 233 2 94 1 191 1 75 2 343 1 143 1 241 1 279 1 195 1 58 1 351 2 260 1 198 1 
170 1 356 1 305 1 248 2 224 3 206 1 153 1 67 1 110 1 14 1 180 1 17 1 111 1 157 1 156 1 72 1 159 1 293 1 233 2 189 1 94 1 75 1 343 1 143 1 195 1 279 1 351 1 198 1 352 1 
165 1 170 3 300 1 129 1 267 1 248 9 224 19 108 1 154 1 67 2 14 3 365 2 111 2 210 2 312 1 22 1 157 3 72 2 89 3 160 1 233 4 343 3 75 6 258 2 195 3 279 3 350 1 198 2 351 10 261 1 
165 2 147 1 170 2 150 1 129 1 327 1 360 1 248 14 267 2 224 26 108 2 154 1 67 3 14 2 365 2 270 2 111 3 210 4 22 1 157 2 72 3 89 2 160 2 233 6 75 4 343 3 258 1 56 1 195 3 279 3 162 1 351 12 198 3 261 1 
165 1 147 1 170 5 32 1 200 1 150 1 129 1 326 1 327 1 360 1 63 1 267 3 248 20 224 41 108 3 154 1 331 1 67 3 14 4 365 4 270 1 111 3 210 4 312 1 22 1 157 4 72 3 89 4 160 2 26 1 233 6 343 4 75 8 258 1 56 1 195 4 279 5 122 1 162 1 350 1 198 3 351 21 261 1 
165 1 147 1 170 4 32 1 200 1 150 1 129 1 326 1 327 1 360 1 63 1 267 3 248 20 224 38 108 3 154 1 331 1 67 4 14 3 365 4 270 2 111 4 210 4 312 1 22 1 157 3 72 4 89 4 160 2 26 1 233 8 343 4 75 7 258 1 56 1 195 4 279 5 122 1 162 1 350 1 198 4 351 18 261 1 
165 1 147 1 170 8 32 1 200 1 150 1 129 1 326 1 327 1 360 1 63 1 267 2 248 27 224 52 108 4 288 2 154 1 331 1 67 2 14 7 365 4 270 1 111 2 210 4 312 2 22 1 157 7 72 2 89 7 160 1 233 4 343 7 75 14 258 1 56 1 195 7 279 8 122 1 162 1 198 2 351 25 261 1 
314 1 83 1 238 1 263 1 242 1 193 1 57 1 196 1 303 1 114 1 
287 1 148 1 
314 1 142 1 83 1 263 1 57 1 196 1 124 1 252 1 114 1 
314 1 59 1 168 1 47 1 137 1 263 1 338 1 371 2 303 1 114 1 91 1 83 1 238 1 239 1 242 1 196 1 57 1 281 1 
314 1 59 1 168 1 47 1 137 1 263 1 338 1 371 2 303 1 114 1 91 1 83 1 238 1 239 1 242 1 196 1 57 1 281 1 
314 1 59 1 168 1 47 1 137 1 263 1 338 1 371 2 303 1 114 1 91 1 83 1 238 1 239 1 242 1 196 1 57 1 281 1 
27 1 375 1 310 1 
27 1 375 1 310 1 
330 1 152 1 
27 1 330 1 152 1 
307 1 265 1 
353 1 59 1 263 1 79 1 148 1 2 1 265 1 356 2 325 1 202 1 83 1 307 1 287 1 314 1 335 1 137 1 156 2 338 1 23 1 371 1 159 2 114 1 91 1 143 2 57 1 196 1 352 2 
375 1 310 1 
27 1 330 1 152 1 
169 1 356 2 283 1 35 1 358 1 304 1 106 2 248 1 64 1 224 2 132 1 206 1 44 1 153 1 67 1 111 1 20 2 21 2 156 2 72 1 233 2 94 1 191 1 95 1 235 1 259 1 97 1 143 2 241 2 198 1 351 1 
20 1 21 1 126 1 149 1 158 1 36 1 304 1 191 1 344 1 120 1 132 1 241 1 131 1 44 1 
20 1 136 1 21 1 292 1 126 1 186 1 155 2 341 1 304 1 52 1 115 1 241 1 131 1 268 1 44 1 16 1 332 1 87 1 
20 2 136 1 21 2 292 1 126 1 186 1 155 2 341 1 304 1 52 1 115 1 329 1 241 2 131 1 44 1 268 1 16 1 332 1 87 1 
20 1 136 1 21 1 292 1 126 1 186 1 155 2 255 1 341 1 52 1 115 1 304 1 241 1 268 1 44 1 16 1 87 1 
316 1 
296 1 228 1 185 1 168 1 222 1 204 1 96 1 319 1 109 1 208 1 
185 5 168 5 71 5 170 2 157 2 339 5 105 2 373 10 73 1 161 5 343 2 319 5 195 2 279 2 290 1 
59 1 168 1 137 1 249 1 208 1 68 1 
296 2 59 3 299 1 222 2 36 1 304 1 107 1 306 1 132 1 44 1 249 4 251 2 68 2 367 1 20 4 21 4 368 1 228 1 185 2 137 3 191 1 344 1 120 2 96 2 319 2 241 4 320 1 376 2 197 2 
199 1 31 1 2 1 81 1 283 1 356 2 304 1 41 1 40 1 224 1 132 1 44 1 153 1 67 1 17 2 111 1 20 1 21 1 156 3 72 1 159 2 233 2 188 1 94 1 191 1 120 1 143 3 241 1 58 1 351 1 198 1 352 2 
296 1 185 2 228 1 168 4 71 2 32 1 339 2 222 1 373 4 161 2 96 1 319 1 376 1 208 2 251 1 
185 1 168 1 103 1 319 1 109 1 208 1 204 1 
296 1 59 1 168 2 222 1 249 1 208 1 68 1 313 1 185 1 228 1 137 1 373 1 234 1 215 1 161 1 319 1 96 1 
101 1 59 5 105 2 204 1 329 1 11 1 109 1 249 5 208 2 251 1 250 1 68 3 290 2 20 3 21 3 254 2 71 6 157 2 339 6 342 2 73 2 161 6 343 2 120 1 296 4 31 3 168 8 170 2 33 2 264 2 222 4 304 4 174 2 306 1 133 3 132 10 44 3 311 2 228 4 185 8 137 5 138 2 90 2 373 12 191 3 192 1 319 9 96 4 241 3 376 2 194 2 195 2 279 2 197 1 
296 1 185 1 228 1 168 1 71 1 150 1 339 1 222 1 373 2 161 1 267 1 108 1 96 1 319 1 365 1 
296 1 102 1 59 1 170 1 127 1 356 1 222 1 266 1 105 2 326 1 63 1 41 1 331 1 17 1 112 1 135 1 228 1 185 2 137 1 156 1 159 1 73 1 217 1 143 1 96 1 319 2 279 2 352 1 
242 1 265 1 280 1 57 1 196 1 
100 1 57 1 196 1 
100 1 57 1 196 1 
100 1 57 1 196 1 
116 1 57 1 196 1 
116 1 57 1 196 1 
116 1 57 1 196 1 
57 1 196 1 
314 1 83 1 
170 2 72 1 127 1 89 3 233 2 326 2 63 1 75 5 248 5 224 10 67 1 331 2 279 2 14 2 111 1 198 1 351 5 261 1 
72 1 233 2 343 1 248 2 75 1 224 2 67 1 279 1 14 1 111 1 198 1 261 1 
170 1 157 1 72 1 89 1 233 2 75 2 343 1 248 2 224 4 67 1 195 1 279 1 14 1 111 1 351 2 198 1 261 1 
298 1 72 3 89 1 233 6 326 1 75 2 248 1 224 3 67 3 331 1 14 1 270 1 350 1 111 3 351 2 198 3 261 1 
298 1 170 5 32 1 200 1 326 3 246 1 39 1 63 2 267 1 248 16 224 34 108 3 331 3 67 5 14 5 365 4 270 2 111 5 69 1 312 1 157 3 72 5 89 7 233 10 343 3 75 12 195 3 279 5 122 1 145 1 350 1 351 18 198 5 261 1 
170 1 32 1 150 1 200 1 326 1 63 1 267 1 248 4 108 1 224 8 67 1 331 1 365 1 111 1 72 1 89 2 233 2 75 2 279 1 122 1 351 4 198 1 261 1 
170 1 32 1 200 1 150 1 326 1 39 1 63 1 267 1 248 6 224 11 108 1 331 1 67 2 14 1 365 2 111 2 312 1 72 2 89 2 233 4 343 1 75 3 195 1 279 2 122 1 351 5 198 2 261 1 
147 1 170 3 32 1 200 1 150 1 326 1 327 1 39 1 63 1 267 1 248 9 108 1 224 19 331 1 67 3 14 1 365 1 111 3 270 1 157 2 72 3 89 3 233 6 343 2 75 4 56 1 195 2 279 3 122 1 162 1 351 10 198 3 261 1 
147 1 170 2 32 1 200 1 150 1 326 1 327 1 39 1 63 1 267 1 248 10 108 1 224 17 331 1 67 3 14 2 365 1 270 1 111 3 157 1 72 3 89 3 233 6 343 2 75 5 56 1 195 2 279 3 122 1 162 1 351 7 198 3 261 1 
170 1 32 1 150 1 200 1 326 1 63 1 267 1 248 4 108 1 224 8 67 1 331 1 365 1 111 1 72 1 89 2 233 2 75 2 279 1 122 1 351 4 198 1 261 1 
147 1 170 2 150 1 327 1 267 1 248 6 108 1 224 12 67 1 14 1 365 1 111 1 157 2 72 1 89 1 233 2 343 2 75 2 56 1 195 2 279 2 162 1 351 6 198 1 261 1 
147 1 170 2 32 1 200 1 150 1 326 1 327 1 39 1 63 1 267 1 248 10 224 18 108 1 331 1 67 4 14 2 365 1 111 4 270 2 157 1 72 4 89 3 233 8 343 2 75 5 56 1 195 2 279 3 122 1 162 1 351 8 198 4 261 1 
147 1 170 2 150 1 327 1 267 1 248 9 224 16 108 1 67 4 14 3 365 1 111 4 270 2 157 2 72 4 89 3 233 8 343 3 75 6 56 1 195 3 279 3 162 1 350 1 351 7 198 4 261 1 
170 1 200 1 89 3 326 3 63 1 75 6 248 3 224 7 331 3 279 1 122 2 14 3 351 4 
147 1 170 2 32 1 200 1 150 1 326 1 327 1 63 1 267 1 248 10 224 18 108 1 331 1 67 4 14 1 365 1 111 4 270 2 157 1 72 4 89 3 233 8 343 2 75 4 56 1 195 2 279 3 122 1 162 1 350 1 351 8 198 4 261 1 
170 1 32 1 72 2 200 1 89 2 233 4 326 1 63 1 248 4 75 3 224 8 279 1 67 2 331 1 14 1 122 1 111 2 270 1 351 4 198 2 
103 1 170 1 32 1 200 1 89 2 326 1 63 1 75 2 248 3 224 6 331 1 279 1 122 1 351 3 
170 1 157 1 72 1 89 1 233 2 39 1 75 2 343 1 248 2 224 4 67 1 195 1 279 1 14 1 111 1 351 2 198 1 
312 1 170 1 157 1 89 1 267 1 248 3 343 1 75 2 224 7 108 1 195 1 279 1 14 1 365 2 351 4 
298 1 170 3 32 1 200 1 326 2 63 1 248 11 108 2 224 23 288 1 331 2 67 2 14 4 365 2 270 2 111 2 312 1 157 2 72 2 89 5 233 4 278 1 75 9 343 2 279 3 195 2 122 1 351 12 198 2 
224 1 365 1 351 1 
248 1 224 1 108 1 
170 1 157 1 72 1 89 2 233 2 39 1 343 1 248 3 75 3 224 6 67 1 195 1 279 1 14 1 111 1 198 1 290 1 351 3 
147 1 170 2 150 1 327 1 267 1 248 6 108 1 224 12 67 1 14 1 365 1 111 1 157 2 72 1 89 1 233 2 343 2 75 2 56 1 195 2 279 2 162 1 351 6 198 1 261 1 
170 1 89 1 326 1 63 1 248 3 75 2 224 6 279 1 331 1 14 1 351 3 
298 1 72 1 200 1 89 1 233 2 326 1 248 1 75 2 224 3 331 1 67 1 14 1 122 1 270 1 111 1 351 2 198 1 
355 1 143 1 156 1 2 1 225 1 356 1 77 1 
355 1 369 1 156 1 2 1 244 1 356 1 141 1 92 1 328 1 143 1 225 1 77 1 
20 4 21 4 231 1 36 1 304 1 329 1 191 1 344 1 120 1 240 1 241 4 132 1 44 1 
334 1 20 2 262 1 21 2 31 1 34 1 304 2 191 1 43 1 241 2 132 1 44 1 197 1 15 1 
20 1 21 1 292 1 155 1 120 1 241 1 44 1 304 1 115 1 87 1 
20 2 191 1 136 1 21 2 329 1 235 1 132 1 241 2 44 1 35 1 304 1 
20 4 21 5 231 1 36 1 304 2 329 1 191 2 344 1 235 1 120 1 130 1 241 5 132 3 98 1 44 2 197 1 
20 4 21 5 1 1 231 1 36 1 304 2 329 1 191 2 344 1 235 1 120 1 241 5 132 3 98 1 44 2 197 1 
20 1 191 1 21 1 344 1 103 1 120 1 132 1 241 1 44 1 36 1 304 1 
20 1 21 1 31 1 156 2 2 1 81 1 356 1 159 1 304 1 191 1 361 1 120 1 143 2 132 1 241 1 44 1 58 1 352 1 
31 2 2 1 81 1 264 1 356 2 266 1 304 1 174 1 361 1 132 3 44 1 20 1 21 1 156 2 159 1 191 2 117 1 143 2 241 1 197 1 29 1 58 1 352 2 
354 1 31 2 2 1 264 1 356 2 266 1 304 1 174 1 361 1 132 3 44 1 20 2 21 2 156 2 159 1 191 2 117 1 143 2 240 1 241 2 197 1 29 1 58 1 352 2 
31 1 59 2 168 1 264 1 304 1 174 1 132 4 133 1 44 1 249 1 208 1 20 3 311 1 21 3 211 1 337 1 137 2 138 1 191 1 120 1 240 1 241 3 197 1 
311 1 20 3 21 3 31 1 59 2 168 1 137 2 264 1 138 1 304 1 174 1 191 1 120 1 240 1 241 3 133 1 132 4 44 1 194 1 249 1 208 1 197 1 
20 1 21 1 336 1 241 1 44 1 304 1 
334 1 20 6 262 1 136 1 21 7 31 1 336 1 304 3 106 1 329 1 191 2 235 1 65 1 130 1 120 2 98 1 241 7 132 3 44 2 250 1 378 1 
200 1 2 2 326 1 329 1 63 1 248 3 206 1 153 2 67 2 331 1 110 1 111 2 20 1 21 1 156 2 72 2 293 1 159 1 75 2 259 1 121 1 122 1 260 1 352 1 351 3 31 1 170 1 32 1 81 1 356 1 304 1 40 1 361 1 224 6 132 1 44 1 180 1 89 2 188 1 233 4 94 2 191 1 143 2 241 1 279 1 58 1 198 2 
296 2 59 3 168 1 33 1 222 2 204 1 306 1 133 1 132 2 109 1 249 2 208 1 68 1 20 1 311 1 21 1 254 1 185 1 228 2 137 3 23 1 138 1 90 1 120 1 319 1 96 2 241 1 194 1 
20 2 21 2 31 1 336 1 138 1 304 2 329 1 191 1 241 2 11 1 132 2 44 1 250 1 
20 1 21 1 31 1 354 1 156 2 2 1 356 1 159 1 304 1 191 1 361 1 120 1 143 2 132 1 241 1 44 1 58 1 352 1 
334 1 20 1 262 1 21 1 31 1 304 2 191 1 241 1 132 1 44 1 197 1 250 1 378 1 
227 1 176 1 64 1 28 1 143 1 156 1 97 1 356 1 358 1 
176 1 60 1 123 1 
227 1 176 1 28 1 2 1 379 1 
59 1 102 1 168 1 60 1 356 1 266 1 176 1 41 1 9 1 208 1 17 1 135 1 137 1 156 1 23 1 159 1 217 1 143 1 123 1 352 1 
182 1 164 1 220 1 374 1 362 1 88 1 289 1 277 1 
182 1 164 1 70 1 220 2 88 4 214 1 374 4 362 3 177 2 289 2 364 1 348 1 321 1 253 1 
182 1 164 1 220 1 88 2 323 1 302 1 277 1 374 2 362 1 177 1 289 1 99 1 
182 1 164 1 220 1 70 2 374 3 362 1 88 3 104 1 289 1 348 1 277 1 253 2 
317 1 318 2 362 2 308 1 
182 1 164 1 374 1 88 1 309 1 277 1 
182 1 164 1 220 1 374 2 362 1 177 1 88 2 289 1 340 1 277 1 
372 1 
182 1 164 1 220 1 374 1 362 1 88 1 289 1 277 1 
182 1 164 1 220 1 88 3 340 1 277 1 374 3 362 1 177 1 289 1 253 1 
362 1 364 1 214 1 321 1 
362 1 289 1 
220 1 362 1 103 1 289 1 
182 1 164 1 220 1 374 1 362 1 88 1 289 1 
7 1 88 1 140 1 
182 1 164 1 70 1 220 1 88 3 277 1 374 3 362 1 289 1 348 1 333 1 253 2 
182 1 164 1 220 1 374 2 362 1 177 1 88 2 289 1 24 1 
182 1 164 1 292 1 88 1 155 1 341 1 277 1 374 1 362 1 346 1 321 1 
182 1 164 1 374 1 362 1 88 1 289 1 277 1 
182 1 164 1 220 1 374 1 88 1 289 2 277 1 
286 1 182 2 164 2 374 2 294 1 362 1 88 2 289 1 144 1 277 1 
182 1 164 1 220 1 88 3 82 1 340 1 277 1 374 3 362 2 177 2 289 1 364 1 321 1 
182 1 164 1 220 1 292 1 155 2 88 2 341 1 277 1 374 2 362 1 177 1 289 1 349 1 16 1 87 1 
182 2 164 2 220 1 88 4 274 1 24 1 277 1 374 4 362 2 177 2 289 1 364 1 321 1 

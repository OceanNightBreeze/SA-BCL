#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 303 40 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 303 40 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 267 174 91 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 2 1 1 132 2 279 1 38 1 28 1 369 3 162 2 30 1 167 1 11 1 220 3 158 1 
149 2 1 6 150 1 129 1 132 5 80 1 28 1 348 1 30 4 271 1 34 2 11 3 60 2 297 2 89 2 158 2 279 1 38 1 369 9 191 1 162 2 70 1 282 1 167 1 318 1 103 1 220 9 324 1 
149 2 1 6 150 1 129 1 132 5 80 1 28 1 348 1 30 4 271 1 34 2 11 3 60 2 297 2 89 2 158 2 279 1 38 1 369 9 191 1 162 2 70 1 282 1 167 1 318 1 103 1 220 9 324 1 
149 2 1 7 150 1 129 1 132 6 80 1 28 1 348 1 30 5 271 1 34 2 11 4 60 2 297 2 89 2 158 2 279 1 38 1 369 10 191 1 162 2 70 1 282 1 167 1 318 1 103 1 220 10 324 1 
149 2 1 4 150 1 129 1 132 4 80 1 28 1 348 1 30 3 271 1 34 2 11 2 60 2 297 2 89 1 158 2 279 1 38 1 369 7 191 1 162 2 70 1 167 1 318 1 103 1 220 7 324 1 
149 1 1 3 132 3 279 1 28 1 369 4 162 1 30 2 70 1 282 1 167 1 11 1 34 1 103 1 220 4 60 1 297 1 89 2 
149 1 132 1 131 1 279 1 190 1 28 1 369 2 191 1 162 1 167 1 359 1 34 1 318 1 220 2 297 1 158 1 
149 2 1 7 150 1 129 1 132 5 28 1 30 4 178 1 11 3 34 1 112 1 60 1 297 1 89 2 158 1 38 1 279 1 369 9 162 2 70 1 282 1 167 1 103 1 220 9 
149 2 1 7 150 1 129 1 132 5 28 1 30 4 178 1 11 3 34 1 112 1 60 1 297 1 89 2 158 1 38 1 279 1 369 9 162 2 70 1 282 1 167 1 103 1 220 9 
197 1 127 1 119 1 122 1 226 1 96 1 54 1 195 1 312 1 332 1 246 1 184 1 285 1 322 1 
333 1 
353 1 275 1 119 2 226 1 106 1 333 1 237 1 54 2 
353 1 275 1 119 5 278 1 325 2 201 2 290 1 226 2 95 1 29 1 41 2 54 5 373 1 333 1 360 1 365 1 114 1 247 1 237 2 
275 1 120 1 333 1 
261 1 333 1 215 2 
127 2 195 2 312 1 96 2 332 2 246 2 285 2 104 1 
50 1 127 2 286 1 287 1 346 2 203 2 227 1 292 1 83 1 177 1 57 2 109 1 294 2 183 1 332 3 90 1 366 1 335 1 336 1 17 1 96 3 338 2 69 1 125 1 195 2 372 1 244 1 312 1 314 1 317 1 375 1 246 2 285 2 171 1 345 1 104 1 361 1 
197 1 127 1 195 1 122 1 312 1 96 1 332 1 246 1 184 1 285 1 
275 1 127 1 119 1 96 1 54 1 207 1 332 1 333 1 263 1 170 1 184 1 186 1 156 1 222 1 
275 1 127 1 119 2 96 1 54 2 195 1 332 1 246 1 333 1 263 1 170 1 184 1 285 1 156 1 222 1 
270 1 119 1 226 1 237 1 54 1 
353 1 275 1 119 2 226 1 333 1 236 1 237 1 54 2 
119 1 237 1 54 1 
127 2 96 2 195 1 102 1 332 2 246 1 285 1 22 1 104 2 
248 1 232 1 4 1 
366 1 287 1 346 1 17 1 203 1 96 1 227 1 83 1 69 1 125 1 294 1 183 1 332 1 317 1 44 1 104 1 
366 1 287 1 127 1 4 1 17 1 346 1 203 1 133 1 227 1 96 2 362 1 83 1 69 1 125 1 195 1 294 1 183 1 317 1 332 2 285 1 
120 1 104 1 
127 3 195 3 96 3 332 3 246 1 362 1 285 3 104 1 
197 1 127 1 195 1 96 1 332 1 184 1 285 1 
127 1 195 1 102 1 96 1 332 1 246 1 184 1 285 1 22 1 
50 1 287 1 286 1 127 3 346 1 203 1 133 1 227 1 292 1 362 1 83 1 177 1 54 1 57 1 231 1 182 1 109 1 294 1 183 1 332 4 184 1 156 1 90 1 366 1 335 1 119 1 17 1 96 4 338 2 69 1 125 1 195 3 372 1 244 1 312 1 102 1 317 1 246 2 263 1 170 1 285 3 345 1 104 1 222 1 
127 2 195 1 239 1 96 2 332 2 362 1 186 1 285 1 104 1 
127 3 119 1 133 1 96 3 362 2 340 1 54 1 231 1 195 3 102 1 332 3 246 1 333 1 184 1 263 1 170 1 285 3 156 1 222 1 
127 2 4 1 96 2 362 1 232 1 195 2 102 1 332 2 246 1 285 2 
366 1 287 1 346 1 17 1 203 1 96 1 227 1 83 1 69 1 125 1 294 1 183 1 332 1 317 1 104 1 
366 1 0 1 287 1 346 1 17 1 203 1 96 1 280 1 83 1 125 1 294 1 183 1 332 1 317 1 104 1 
50 1 248 2 224 1 173 1 327 1 4 2 176 1 292 1 55 1 57 4 232 2 109 1 153 1 273 1 210 1 90 2 335 1 16 1 338 2 310 1 372 1 313 1 375 2 345 1 
127 1 195 1 96 1 332 1 184 1 170 1 285 1 238 1 
127 5 239 1 133 1 96 5 362 2 195 4 86 1 35 1 102 1 332 5 246 1 186 1 285 4 104 1 
197 1 127 2 195 2 96 2 332 2 184 1 285 2 238 1 
24 1 82 1 151 1 
272 1 24 2 355 1 320 1 56 1 151 2 
24 1 151 1 
24 1 151 1 
272 1 355 1 
272 1 355 1 
272 1 355 1 
24 1 266 1 151 1 
24 1 266 1 151 1 
24 1 266 1 151 1 
79 1 24 1 151 1 
79 1 24 1 151 1 
79 1 24 1 151 1 
172 1 289 1 24 2 119 2 217 2 56 1 151 2 54 2 166 1 136 1 350 2 283 2 75 2 252 1 296 2 87 3 211 1 333 1 321 1 
172 1 127 2 24 1 82 1 151 1 54 1 111 1 296 1 87 1 332 2 253 1 274 1 119 1 96 2 217 1 98 1 195 2 358 1 283 1 75 1 285 2 45 1 104 1 221 1 
259 1 302 2 131 1 60 1 297 2 
34 1 60 1 297 1 
131 1 34 1 297 1 
259 1 302 1 131 1 60 2 216 1 297 3 
259 1 302 1 131 1 60 1 146 1 297 2 
200 1 201 1 325 1 327 1 27 1 290 1 226 4 134 2 29 2 176 1 55 1 54 5 329 1 111 1 333 2 237 1 159 2 353 1 116 1 275 1 187 1 119 5 254 2 123 1 97 1 215 3 41 1 313 1 261 1 360 3 45 1 221 1 
325 2 201 2 327 3 27 2 226 7 290 1 134 6 29 6 176 3 55 3 54 9 329 2 293 1 270 5 33 1 333 5 237 6 353 1 275 1 119 9 254 6 354 5 368 1 123 3 97 1 215 9 41 2 18 1 74 1 313 3 373 1 261 3 360 8 147 1 221 4 
200 1 201 1 325 1 327 1 27 1 226 2 29 2 134 2 176 1 54 3 329 1 55 1 333 3 159 1 275 1 187 1 119 3 254 2 123 1 215 4 41 1 313 1 261 2 373 1 360 3 221 1 
200 1 201 1 325 1 327 2 27 1 226 3 134 4 29 4 176 2 54 4 329 1 55 2 293 1 333 4 159 2 275 1 187 1 119 4 254 4 368 1 123 2 215 7 41 1 74 1 313 2 261 3 373 1 360 5 221 2 
308 1 
125 1 120 1 144 1 
125 1 110 1 
125 1 83 1 
125 3 351 1 144 2 317 1 262 1 83 1 
125 1 317 1 83 1 
125 1 137 1 
3 1 23 1 202 1 213 2 307 1 176 1 124 1 205 1 180 1 57 7 153 2 84 1 313 1 245 1 375 4 210 3 90 3 13 1 
50 1 49 1 3 1 23 5 202 1 327 3 267 3 174 1 292 1 176 4 205 2 55 3 180 1 57 31 84 2 153 5 209 1 210 10 90 15 13 2 14 1 335 1 213 3 123 3 338 2 65 1 124 2 68 1 164 4 372 1 313 4 245 1 375 16 148 1 
50 2 3 1 23 1 202 1 176 1 292 2 205 1 364 1 57 9 180 1 153 3 84 1 210 4 90 4 13 1 335 2 93 1 213 2 338 4 124 1 68 1 372 2 313 1 375 5 
3 1 23 1 202 1 213 2 176 1 124 1 205 1 57 7 180 1 153 2 84 1 313 1 245 1 375 4 210 3 90 3 13 1 
3 1 23 1 202 1 213 2 176 1 124 1 205 1 57 7 180 1 153 2 84 1 313 1 245 1 375 4 210 3 90 3 13 1 
149 1 287 1 346 1 203 1 5 1 53 1 83 1 179 2 206 1 294 1 10 1 334 2 158 2 366 1 17 1 369 1 162 1 192 1 357 1 240 1 125 1 220 1 47 2 
149 1 288 1 287 1 131 1 346 1 203 1 179 1 294 1 34 1 60 1 334 1 235 1 297 2 158 1 279 1 17 1 369 1 162 1 66 1 216 1 370 1 256 1 165 1 344 1 220 1 47 1 
149 1 1 1 288 1 287 1 2 1 132 1 131 1 346 1 203 1 28 1 179 1 294 1 34 1 60 1 334 1 235 1 297 2 158 1 279 1 17 1 369 2 162 1 66 1 216 1 370 1 256 1 165 1 167 1 220 2 47 1 
149 1 1 2 288 1 287 1 132 1 131 1 346 1 203 1 28 1 179 1 294 1 34 1 60 1 334 1 235 1 297 2 158 1 17 1 337 1 369 3 216 1 162 1 192 1 66 1 256 1 165 1 167 1 344 1 220 3 47 1 
1 2 287 1 132 1 131 1 346 1 203 1 28 1 179 1 294 1 34 1 60 1 334 1 235 1 297 2 158 1 17 1 337 1 369 2 216 1 256 1 165 1 167 1 344 1 220 2 47 1 
367 1 
353 1 366 1 303 1 119 2 325 1 201 1 346 1 203 1 290 1 40 1 29 1 41 1 54 2 294 1 157 1 237 2 
353 1 127 1 119 3 328 1 96 1 106 1 339 1 363 1 54 3 242 2 19 1 207 1 332 1 155 1 184 1 170 1 263 1 156 1 186 1 237 2 222 1 115 1 
353 1 275 1 127 1 118 1 119 3 328 1 96 1 106 1 339 1 54 3 242 3 19 1 207 1 332 1 155 1 333 1 184 1 170 1 263 1 156 1 186 1 237 1 222 1 115 1 
127 1 328 1 106 1 363 1 54 3 207 1 332 1 155 1 184 1 333 1 186 1 156 1 237 2 115 1 353 1 275 1 118 1 119 3 96 1 339 1 214 1 242 3 19 1 263 1 170 1 222 1 
201 1 6 1 290 1 106 1 7 1 54 5 207 1 155 1 156 1 299 1 115 1 353 3 352 1 118 4 119 5 214 4 19 1 261 2 170 1 263 1 360 1 222 1 127 1 325 1 26 2 328 1 29 1 228 2 363 4 31 1 135 2 234 1 332 1 184 1 333 5 186 1 237 7 275 5 96 1 339 1 41 1 242 6 342 1 48 2 
201 1 6 1 290 1 349 1 54 4 207 1 155 1 156 1 299 1 115 1 353 2 118 2 119 4 214 2 215 2 19 1 261 2 170 1 263 1 360 1 222 1 127 1 325 1 26 2 328 1 29 1 228 2 363 2 135 2 332 1 184 1 333 2 186 1 237 4 275 1 96 1 339 1 41 1 242 4 48 2 
127 1 26 2 325 1 201 1 6 1 290 1 328 1 228 2 29 1 363 2 135 2 31 1 54 4 207 1 234 1 332 1 155 1 333 1 184 1 186 1 156 1 299 1 237 4 115 1 353 2 352 1 275 1 118 2 119 4 96 1 214 2 339 1 41 1 242 4 19 1 261 2 263 1 170 1 360 1 48 2 222 1 
127 1 26 2 325 1 201 1 6 1 290 1 328 1 228 2 29 1 363 2 135 2 31 1 54 4 207 1 234 1 332 1 155 1 333 1 184 1 186 1 156 1 299 1 237 4 115 1 353 2 352 1 275 1 118 2 119 4 96 1 214 2 339 1 41 1 242 4 19 1 261 2 263 1 170 1 360 1 48 2 222 1 
127 1 26 2 265 1 325 1 201 1 6 1 290 1 328 1 29 1 363 2 135 2 31 1 54 4 207 1 332 1 155 1 333 1 184 1 186 1 156 1 237 4 300 2 115 1 353 2 275 1 118 2 119 4 96 1 214 2 339 1 215 2 41 1 242 4 19 1 284 2 169 1 219 1 263 1 170 1 360 1 222 1 
127 1 26 2 201 1 325 1 6 1 290 1 328 1 228 2 29 1 363 3 135 2 31 1 54 4 207 1 234 1 332 1 155 1 333 1 184 1 186 1 156 1 299 1 237 5 115 1 353 2 352 1 275 1 118 3 119 4 96 1 339 1 214 3 41 1 242 5 19 1 342 1 261 2 263 1 170 1 360 1 48 2 222 1 
127 1 26 2 201 1 325 1 6 1 290 1 328 1 228 2 29 1 363 3 135 2 31 1 54 4 207 1 234 1 332 1 155 1 333 1 184 1 186 1 156 1 299 1 237 5 115 1 353 2 352 1 275 1 118 3 119 4 96 1 339 1 214 3 41 1 242 5 19 1 342 1 261 2 263 1 170 1 360 1 48 2 222 1 
127 1 26 2 201 1 325 1 265 1 6 1 290 1 328 1 29 1 349 1 363 2 135 2 54 4 207 1 332 1 155 1 333 1 184 1 186 1 156 1 237 4 300 2 115 1 353 2 275 1 118 2 119 4 96 1 214 2 339 1 215 2 41 1 242 4 19 1 284 2 263 1 170 1 360 1 222 1 
127 1 287 2 50 2 52 1 2 1 105 1 346 8 203 7 362 1 292 2 83 2 57 2 294 8 109 2 32 1 10 1 331 1 273 1 332 1 208 1 90 1 366 2 335 2 336 1 17 2 96 1 338 4 357 1 257 1 71 1 125 3 195 1 372 2 244 1 344 1 375 1 285 1 345 2 361 2 
248 1 50 1 127 1 4 1 327 1 292 1 176 1 55 1 57 3 232 1 109 1 153 1 332 1 210 1 90 2 335 1 96 1 123 1 338 2 309 1 195 1 372 1 313 1 102 1 246 1 319 1 375 1 285 1 345 1 
50 1 248 1 3 1 4 1 202 1 292 1 176 1 180 1 57 6 232 1 109 1 84 1 153 2 273 1 210 2 90 3 13 1 335 1 120 1 213 1 338 2 372 1 313 1 375 3 345 1 104 2 
50 2 248 11 23 1 4 11 327 1 174 1 267 3 229 1 268 1 292 2 176 2 55 2 57 14 181 1 232 4 109 1 153 1 210 2 90 6 335 2 336 1 39 1 123 2 338 4 65 1 164 3 372 2 244 1 313 1 319 1 375 8 345 2 104 1 
287 1 127 1 50 1 128 1 346 1 203 1 133 1 227 1 362 1 292 1 83 1 57 2 232 1 294 1 109 1 183 1 332 2 90 1 366 1 335 1 15 1 336 1 17 1 189 1 96 2 338 2 69 1 125 1 195 1 372 1 244 1 317 1 44 1 319 1 375 1 285 1 345 1 104 1 
50 3 286 2 287 2 248 7 3 1 202 1 346 3 4 7 203 3 292 3 55 2 57 20 294 3 109 3 153 4 210 8 12 2 13 1 304 1 213 1 17 2 123 2 69 2 125 2 313 3 317 2 319 1 127 1 23 4 327 2 133 1 175 2 227 2 362 1 176 3 83 2 180 1 232 7 84 1 183 2 332 3 90 10 366 1 335 3 336 1 188 1 96 3 338 6 195 1 145 1 372 3 244 1 243 2 344 1 374 2 375 10 285 1 345 3 104 2 
248 1 335 1 50 1 23 1 224 1 4 1 338 2 292 1 176 1 55 1 57 2 232 1 109 1 372 1 273 1 375 2 210 1 345 1 
248 1 335 1 50 1 16 1 4 1 327 1 338 2 292 1 57 2 232 1 109 1 153 1 372 1 313 1 273 1 210 1 90 2 345 1 
50 1 248 2 23 1 4 2 327 1 176 1 292 1 55 1 57 4 232 2 109 1 153 1 273 1 210 2 90 2 335 1 123 1 338 2 372 1 313 1 375 2 345 1 
248 1 335 1 50 1 23 1 224 1 4 1 338 2 292 1 176 1 55 1 57 2 232 1 109 1 331 1 372 1 375 2 210 1 345 1 
248 1 335 1 50 1 16 1 4 1 327 1 338 2 292 1 57 2 232 1 109 1 153 1 331 1 372 1 313 1 210 1 90 2 345 1 
50 1 248 2 23 1 4 2 327 1 176 1 292 1 55 1 57 4 232 2 109 1 153 1 331 1 210 2 90 2 335 1 123 1 338 2 372 1 313 1 375 2 345 1 
50 1 248 2 23 1 4 2 327 1 176 1 292 1 55 1 57 4 232 2 109 1 153 1 210 2 90 2 335 1 123 1 338 2 372 1 313 1 375 2 345 1 
287 1 286 1 50 1 346 1 203 1 227 1 292 1 83 1 57 2 294 1 109 1 183 1 332 1 90 1 366 1 335 1 336 1 17 1 96 1 338 2 69 1 125 1 372 1 244 1 317 1 375 1 345 1 104 1 
287 1 0 1 50 1 346 1 203 1 292 1 83 1 57 2 294 1 109 1 183 1 332 1 298 1 90 1 366 1 335 1 336 1 17 1 96 1 280 1 338 2 125 1 372 1 244 1 317 1 375 1 345 1 104 1 
50 1 248 2 23 1 4 2 327 1 176 1 292 1 55 1 57 4 232 2 109 1 153 1 210 2 90 2 335 1 123 1 338 2 372 1 313 1 375 2 319 1 345 1 
248 2 287 1 286 1 50 1 2 1 23 1 327 1 4 2 346 1 203 1 175 1 227 1 176 1 292 1 83 1 55 1 57 4 232 2 294 1 109 1 153 1 183 1 332 1 210 2 90 2 335 1 17 1 96 1 123 1 338 2 69 1 125 1 372 1 313 1 317 1 375 2 345 1 
50 1 127 1 248 1 23 1 327 1 4 1 292 1 176 1 55 1 57 3 232 1 109 1 332 1 210 1 90 1 335 1 92 1 96 1 123 1 338 2 195 1 372 1 313 1 102 1 246 1 319 1 375 2 285 1 345 1 
51 1 50 2 23 3 225 2 327 3 174 1 267 1 292 2 176 3 55 3 57 19 153 3 295 1 138 1 210 6 90 10 335 2 93 1 123 3 338 4 65 1 67 1 164 2 218 1 372 2 20 1 313 3 101 1 375 9 77 2 
51 1 50 3 23 2 225 1 327 2 204 1 174 2 267 2 292 3 176 3 55 3 57 26 58 1 153 2 295 1 138 1 210 4 90 12 335 3 117 1 91 1 93 1 142 1 123 3 338 6 64 1 68 2 67 2 164 2 372 3 313 2 20 2 375 14 77 4 
50 3 51 1 3 1 202 1 204 1 292 3 55 4 57 41 58 1 153 4 295 1 210 8 13 1 117 1 213 1 123 4 65 1 64 1 67 2 68 1 164 4 313 5 20 1 77 4 23 4 327 4 225 1 267 3 174 3 176 5 180 1 84 1 138 1 139 1 90 21 335 3 91 1 93 1 142 1 338 6 372 3 101 1 375 20 
51 1 50 4 3 1 23 3 225 1 202 1 327 3 204 1 174 3 267 3 292 4 176 5 55 4 180 1 57 38 58 1 84 1 153 4 295 1 138 1 139 1 210 7 90 18 13 1 335 4 117 1 91 1 93 1 142 1 213 1 123 4 338 8 64 1 65 1 68 2 67 2 164 4 372 4 20 1 313 4 101 1 375 20 77 4 
51 1 50 2 3 1 23 7 225 1 202 1 327 7 204 1 174 2 267 4 229 2 292 2 176 8 55 7 180 1 57 52 58 1 84 1 153 7 295 1 138 1 210 14 90 25 13 1 335 2 117 1 91 1 93 1 142 1 213 1 123 7 338 4 64 1 65 2 68 1 67 1 164 4 372 2 20 1 313 8 375 27 77 4 
166 1 283 1 24 1 75 1 296 1 211 1 217 1 56 1 223 1 151 1 
82 1 253 1 
277 1 283 1 24 1 75 1 296 1 250 1 217 1 258 1 151 1 
172 1 289 1 119 1 24 1 217 1 56 1 54 1 151 1 166 1 136 1 350 1 283 1 75 1 252 1 296 1 87 2 211 1 333 1 
172 1 289 1 119 1 24 1 217 1 56 1 54 1 151 1 166 1 136 1 350 1 283 1 75 1 252 1 296 1 87 2 211 1 333 1 
172 1 289 1 119 1 24 1 217 1 56 1 54 1 151 1 166 1 136 1 350 1 283 1 75 1 252 1 296 1 87 2 211 1 333 1 
59 1 266 1 320 1 
59 1 266 1 320 1 
79 1 212 1 
79 1 320 1 212 1 
274 1 98 1 
127 2 289 1 24 1 226 1 82 1 54 1 151 1 350 1 111 1 296 1 332 2 87 1 253 1 274 1 119 1 96 2 217 1 98 1 42 1 195 2 358 1 283 1 75 1 285 2 45 1 104 1 221 1 
59 1 266 1 
79 1 320 1 212 1 
287 1 126 1 127 2 50 1 52 1 346 2 81 1 203 2 292 1 83 1 57 2 294 2 109 1 32 1 332 2 88 1 90 1 335 1 336 1 17 1 96 2 338 2 125 1 311 1 99 1 372 1 244 1 319 1 375 1 345 1 361 2 
366 1 287 1 130 1 37 1 17 1 346 1 203 1 357 1 83 1 179 1 206 1 125 1 294 1 10 1 
301 1 160 1 288 1 287 1 130 1 131 1 17 1 346 1 203 1 216 1 179 1 165 1 294 1 34 1 344 1 60 1 297 2 235 1 
301 1 160 1 287 1 288 1 130 1 2 1 131 1 17 1 346 2 203 2 216 1 179 1 165 1 294 2 34 1 344 1 60 1 297 2 235 1 
160 1 288 1 287 1 131 1 346 1 17 1 203 1 216 1 179 1 165 1 294 1 34 1 344 1 316 1 60 1 297 2 235 1 
241 1 
275 1 325 1 201 1 290 1 29 1 41 1 333 1 114 1 365 1 360 1 
254 5 327 2 123 2 29 5 134 5 291 2 176 2 215 10 55 2 313 2 261 5 333 5 360 5 76 1 12 1 
353 1 275 1 119 1 333 1 237 1 54 1 
353 1 366 1 303 1 119 1 325 1 201 1 346 1 203 1 290 1 40 1 29 1 269 1 41 1 54 1 294 1 157 1 237 2 
275 1 120 1 29 1 333 1 360 1 365 1 114 1 
201 1 325 1 290 1 228 1 29 1 54 1 333 2 299 1 237 1 353 1 275 1 119 1 215 1 41 1 261 1 360 1 48 1 
287 3 249 2 2 1 201 4 346 3 203 3 290 4 291 2 54 5 55 2 294 3 110 3 114 1 157 1 113 2 12 2 61 1 353 3 119 5 17 4 254 6 255 1 123 2 215 12 125 10 313 2 261 6 317 3 262 1 360 9 76 2 78 1 323 2 222 2 325 4 27 2 327 2 134 6 29 8 176 2 269 1 83 3 137 2 185 2 333 8 365 1 237 5 366 1 275 2 143 1 144 2 193 2 41 4 46 2 
91 1 325 1 201 1 254 1 267 1 290 1 174 1 29 1 134 1 215 2 41 1 164 1 261 1 333 1 360 1 
197 1 127 1 201 1 325 1 202 1 290 1 29 2 291 2 176 2 54 1 108 1 84 1 234 1 332 1 184 1 13 1 119 1 122 1 96 1 41 1 195 1 313 1 312 1 246 1 360 2 285 1 76 1 322 1 
50 1 127 2 286 1 287 1 346 1 203 1 227 1 292 1 177 1 83 1 57 1 294 1 109 1 183 1 332 3 90 1 366 1 335 1 17 1 96 3 338 2 69 1 125 1 195 2 372 1 244 1 312 1 317 1 246 2 285 2 345 1 104 1 
275 2 325 1 201 1 213 1 254 2 27 1 290 1 134 2 29 2 215 4 41 1 261 2 333 4 360 1 157 1 
283 1 211 1 274 1 36 1 217 1 
9 1 283 1 217 1 
9 1 283 1 217 1 
9 1 283 1 217 1 
199 1 283 1 217 1 
199 1 283 1 217 1 
199 1 283 1 217 1 
283 1 217 1 
24 1 151 1 
50 1 335 1 93 1 23 2 202 1 338 2 292 1 176 2 57 10 108 1 84 2 153 3 372 1 313 2 375 5 210 5 90 5 13 2 
335 1 50 1 93 1 23 1 338 2 292 1 176 1 55 1 57 2 372 1 375 2 210 1 
335 1 50 1 93 1 23 1 327 1 123 1 338 2 292 1 176 1 55 1 57 4 153 1 372 1 313 1 375 2 210 2 90 2 
335 3 50 3 93 1 23 1 94 1 338 6 292 3 68 1 57 3 84 1 153 1 372 3 101 1 375 1 210 2 90 2 13 1 
50 5 3 1 23 5 202 2 327 3 174 1 267 3 292 5 176 5 55 3 180 1 57 34 84 3 153 7 209 1 210 12 90 18 13 3 14 1 335 5 93 1 213 1 94 1 306 1 123 3 338 10 65 1 68 2 164 4 372 5 313 5 101 1 375 16 148 1 
335 2 50 2 3 1 23 1 213 1 202 1 338 4 176 1 292 2 68 1 57 8 180 1 153 2 84 1 372 2 313 1 375 4 210 3 90 4 13 1 
3 1 120 1 213 1 202 1 176 1 180 1 57 6 84 1 153 2 313 1 375 3 210 2 90 3 13 1 
335 1 50 1 23 1 327 1 306 1 123 1 338 2 292 1 176 1 55 1 57 4 153 1 372 1 313 1 375 2 210 2 90 2 
23 1 327 1 174 1 267 1 123 1 65 1 176 1 164 2 55 1 57 7 153 1 313 1 375 3 210 2 90 4 
50 2 3 1 23 4 202 1 327 2 267 2 176 3 268 1 229 1 292 2 55 2 180 1 57 23 84 2 153 5 210 9 90 12 13 2 335 2 213 1 94 1 123 2 338 4 65 1 68 2 164 2 372 2 313 3 375 11 
57 1 90 1 164 1 
57 1 267 1 375 1 
50 1 335 1 23 1 327 1 306 1 123 1 338 2 292 1 176 1 55 1 57 6 153 2 372 1 313 1 375 3 210 3 12 1 90 3 
50 1 23 1 327 2 267 1 174 1 204 1 292 1 176 2 55 2 57 12 58 1 153 1 210 2 90 6 335 1 91 1 93 1 142 1 123 2 338 2 64 1 164 1 372 1 313 2 375 6 
23 1 202 1 176 1 57 6 84 1 153 1 313 1 375 3 210 2 90 3 13 1 
335 1 50 1 3 1 23 1 94 1 338 2 292 1 68 1 180 1 57 3 153 1 84 1 372 1 375 1 210 2 90 2 13 1 
50 1 3 1 202 1 267 1 174 1 176 1 292 1 57 8 180 1 84 1 153 2 210 2 90 4 13 1 335 1 91 1 93 1 213 1 338 2 164 1 372 1 313 1 375 4 
50 2 3 1 23 1 202 1 174 1 267 1 292 2 176 2 55 1 180 1 57 11 153 2 84 1 210 3 90 5 13 1 335 2 91 1 93 1 213 1 306 1 123 1 338 4 65 1 164 2 372 2 313 1 375 6 
50 3 3 1 23 1 202 1 327 2 267 1 174 1 204 1 292 3 176 3 55 2 180 1 57 19 58 1 84 1 153 3 210 4 90 10 13 1 335 3 91 1 93 1 142 1 213 1 306 1 123 2 338 6 64 1 68 1 164 1 372 3 313 3 375 9 
50 3 3 1 23 2 202 1 327 1 267 1 174 1 204 1 292 3 176 3 55 2 180 1 57 17 58 1 84 1 153 3 210 5 90 7 13 1 335 3 91 1 93 1 142 1 213 1 306 1 123 2 338 6 64 1 68 1 164 1 372 3 313 2 375 10 
50 1 3 1 202 1 267 1 174 1 176 1 292 1 57 8 180 1 84 1 153 2 210 2 90 4 13 1 335 1 91 1 93 1 213 1 338 2 164 1 372 1 313 1 375 4 
50 1 23 1 327 2 267 1 174 1 204 1 292 1 176 2 55 2 57 12 58 1 153 1 210 2 90 6 335 1 91 1 93 1 142 1 123 2 338 2 64 1 164 1 372 1 313 2 375 6 
50 4 3 1 23 2 202 1 327 1 204 1 174 1 267 1 292 4 176 3 55 2 180 1 57 18 58 1 84 1 153 3 210 5 90 8 13 1 335 4 91 1 93 1 142 1 213 1 306 1 123 2 338 8 64 1 68 2 164 1 372 4 313 2 375 10 
50 4 23 3 327 2 204 1 174 1 267 1 292 4 176 3 55 3 57 16 58 1 153 3 210 6 90 7 335 4 91 1 93 1 142 1 123 3 338 8 64 1 68 2 164 1 372 4 313 2 101 1 375 9 
3 1 23 3 202 1 176 1 57 7 180 2 84 3 153 3 313 1 375 3 210 6 90 4 13 3 
50 4 3 1 23 1 202 1 327 1 204 1 174 1 267 1 292 4 176 3 55 2 180 1 57 18 58 1 84 1 153 3 210 4 90 8 13 1 335 4 91 1 93 1 142 1 213 1 123 2 338 8 64 1 68 2 164 1 372 4 313 2 101 1 375 10 
127 1 239 1 96 1 332 1 186 1 264 1 104 1 
127 1 276 1 239 1 305 1 96 1 163 1 251 1 21 1 332 1 264 1 186 1 104 1 
366 1 287 1 2 1 17 1 346 4 203 4 357 1 83 1 125 1 281 1 294 4 10 1 85 1 
287 1 304 1 346 2 17 2 255 1 203 2 161 1 356 1 83 1 125 1 294 2 233 1 315 1 317 1 
165 1 366 1 287 1 294 1 131 1 17 1 346 1 34 1 203 1 297 1 
126 1 287 1 2 1 346 2 17 1 203 2 83 1 125 1 294 2 32 1 344 1 
366 1 287 2 2 1 346 5 17 2 105 1 255 1 203 4 357 1 83 2 125 3 281 1 294 5 10 1 32 1 208 1 
366 1 198 1 287 2 2 1 346 5 17 2 105 1 255 1 203 4 357 1 83 2 125 3 281 1 294 5 10 1 32 1 
125 1 366 1 287 1 294 1 10 1 120 1 17 1 346 1 203 1 357 1 83 1 
366 1 127 1 287 1 17 1 346 1 203 1 96 2 227 1 362 1 83 1 125 1 195 1 294 1 183 1 317 1 332 2 285 1 104 1 
287 1 127 2 346 1 203 1 227 1 362 1 83 2 137 1 294 1 183 1 332 2 184 1 156 1 113 1 17 1 255 1 96 2 125 3 195 1 317 2 170 1 285 2 104 1 
287 1 0 1 127 2 346 2 203 2 362 1 83 2 137 1 294 2 85 1 183 1 332 2 184 1 156 1 113 1 17 1 255 1 96 2 125 3 195 1 317 2 170 1 285 2 104 1 
287 1 346 3 203 3 83 1 54 2 137 1 294 3 85 1 110 1 333 1 113 1 237 1 62 1 366 1 275 1 119 2 17 1 255 1 144 1 63 1 125 4 317 1 222 1 
366 1 275 1 287 1 249 1 119 2 17 1 346 3 255 1 203 3 144 1 83 1 54 2 125 4 137 1 294 3 85 1 110 1 317 1 333 1 113 1 237 1 222 1 
287 1 294 1 17 1 346 1 203 1 257 1 
366 2 287 2 2 1 121 1 105 1 346 7 17 3 203 6 356 1 257 1 83 2 71 1 125 3 294 7 32 1 233 1 344 1 317 1 208 1 262 1 361 1 
248 1 287 1 127 1 50 2 286 1 3 1 2 1 4 1 202 1 346 1 203 1 175 1 227 1 176 1 362 1 292 2 83 1 57 6 180 1 232 1 109 2 294 1 153 2 84 1 183 1 332 2 210 2 90 3 13 1 335 2 213 1 17 1 96 2 338 4 69 1 125 1 311 1 195 1 372 2 313 1 243 1 317 1 375 3 319 1 285 1 345 2 104 2 
249 1 201 2 325 2 346 1 203 1 290 2 226 1 29 1 269 1 54 3 294 1 110 1 333 1 365 1 114 1 237 2 366 1 353 1 275 1 119 3 144 1 193 1 41 2 125 2 360 1 46 1 323 1 222 1 
287 1 2 1 346 2 143 1 17 2 203 2 144 1 257 1 83 1 125 2 294 2 317 1 262 1 
366 1 127 1 0 1 287 1 17 1 346 1 203 1 96 2 362 1 83 1 125 1 195 1 294 1 183 1 317 1 332 2 285 1 104 1 
287 1 121 1 346 1 17 2 255 1 203 1 356 1 83 1 125 1 294 1 233 1 317 1 262 1 
127 1 326 1 81 1 96 1 371 1 99 1 73 1 332 1 88 1 
343 1 326 1 347 1 
73 1 326 1 194 1 104 1 371 1 
275 1 119 2 326 1 347 1 226 1 194 2 107 1 54 2 371 2 231 1 343 1 73 2 333 1 184 1 170 1 263 1 156 1 104 1 222 1 
149 1 167 1 132 1 279 1 28 1 369 1 220 1 162 1 
149 1 1 2 141 1 132 3 28 2 369 4 162 1 30 1 167 2 152 1 11 1 318 1 220 4 196 1 
149 1 1 1 132 1 279 1 369 2 28 1 162 1 330 1 167 1 168 1 220 2 112 1 
149 1 141 1 132 1 279 1 369 3 28 1 162 1 230 1 167 1 152 2 318 2 220 3 
72 1 132 2 100 2 376 1 
149 1 279 1 43 1 369 1 220 1 162 1 
149 1 1 1 150 1 167 1 132 1 279 1 28 1 369 2 220 2 162 1 
8 1 
149 1 167 1 132 1 279 1 28 1 369 1 220 1 162 1 
167 1 132 1 120 1 28 1 
149 1 167 1 132 1 28 1 369 1 220 1 162 1 
369 1 334 1 158 1 
149 1 141 1 132 1 279 1 369 3 28 1 162 1 341 1 167 1 152 1 318 2 220 3 
149 1 1 1 167 1 132 1 28 1 369 2 220 2 162 1 89 1 
149 1 132 1 279 1 34 1 369 1 60 1 220 1 297 1 162 1 30 1 70 1 
149 1 167 1 132 1 279 1 369 1 220 1 162 1 
149 1 167 2 279 1 28 1 369 1 220 1 162 1 
149 2 140 1 167 1 132 1 25 1 279 1 154 1 369 2 220 2 162 2 
149 1 150 1 1 2 129 1 132 2 279 1 28 1 369 3 162 1 30 1 167 1 11 1 220 3 
149 1 1 1 132 1 131 1 279 1 28 1 369 2 162 1 216 1 167 1 260 1 34 1 220 2 60 1 297 2 
149 2 1 2 132 2 279 1 28 1 369 4 162 2 30 1 282 1 167 1 11 1 220 4 89 1 
149 1 1 1 150 1 132 1 279 1 369 3 28 1 162 1 167 1 318 1 220 3 
132 1 11 1 30 1 196 1 
167 1 132 1 

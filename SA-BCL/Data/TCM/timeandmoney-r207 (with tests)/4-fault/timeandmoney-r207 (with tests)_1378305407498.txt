#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (67,87) 0 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (67,87) 0 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 297 198 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 354 44 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 354 44 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 354 88 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 294 354 44 341 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 354 44 341 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 55 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 297 198 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
315 2 157 1 50 1 178 1 158 1 196 1 30 9 8 2 31 2 54 1 302 1 303 1 304 2 109 9 110 2 143 5 85 1 324 3 350 1 87 1 208 2 24 1 210 1 67 1 231 1 93 4 234 2 127 6 
315 2 157 1 50 1 178 1 158 1 196 1 30 9 8 2 31 2 54 1 302 1 303 1 304 2 109 9 110 2 143 5 85 1 324 3 350 1 87 1 208 2 24 1 210 1 67 1 231 1 93 4 234 2 127 6 
315 2 157 1 50 1 178 1 158 1 196 1 30 10 8 2 31 2 54 1 302 1 303 1 304 2 109 10 110 2 143 6 85 1 324 4 350 1 87 1 208 2 24 1 210 1 67 1 231 1 93 5 234 2 127 7 
315 2 50 1 178 1 158 1 196 1 30 7 8 2 31 2 54 1 302 1 303 1 304 2 109 7 110 1 143 4 85 1 324 2 350 1 87 1 208 2 24 1 210 1 67 1 231 1 93 3 234 2 127 4 
315 1 109 4 157 1 110 2 143 3 85 1 158 1 324 1 350 1 30 4 208 1 8 1 24 1 31 1 93 2 303 1 304 1 127 3 
315 1 109 2 143 1 85 1 193 1 158 1 263 1 350 1 167 1 30 2 8 1 208 1 31 1 54 1 302 1 234 1 
315 2 109 3 143 2 85 1 158 1 324 1 350 1 30 3 31 2 67 1 93 1 234 1 127 1 
0 1 31 1 109 1 315 1 67 1 334 1 158 1 30 1 
0 1 31 1 109 1 315 1 67 1 334 1 158 1 30 1 
265 1 311 1 40 1 
129 1 97 2 40 1 
293 2 121 1 20 1 280 2 320 2 313 2 69 2 240 2 
1 1 71 1 357 1 98 1 243 1 74 1 177 1 248 1 133 2 320 3 359 1 280 2 360 2 11 1 306 1 16 2 203 1 227 1 20 1 205 1 36 2 347 1 323 1 267 1 287 1 307 1 289 1 184 1 212 2 293 2 121 1 187 1 188 1 233 1 313 2 69 2 240 3 
293 1 27 1 121 1 280 1 330 1 351 1 320 1 313 1 69 1 240 1 
356 1 265 1 37 1 40 1 250 1 368 1 320 1 135 1 280 1 57 1 330 1 164 1 239 1 240 1 
356 1 265 1 40 1 250 1 368 2 320 1 293 1 135 1 280 1 57 1 330 1 313 1 239 2 69 1 240 1 
163 1 368 1 147 1 352 1 239 1 
27 1 7 1 160 1 320 1 280 1 265 1 40 1 368 1 147 1 351 1 352 1 293 1 121 1 230 1 330 1 313 1 239 1 69 1 240 1 
368 1 352 1 239 1 
27 1 368 1 351 1 147 1 160 1 320 1 293 1 121 1 280 1 330 1 313 1 239 1 69 1 240 1 
40 1 
27 1 318 1 160 1 320 1 280 1 265 1 40 1 368 1 147 1 351 1 352 1 293 1 121 1 230 1 330 1 313 1 239 1 69 1 240 1 
27 1 218 1 300 2 221 1 160 1 320 1 252 1 77 1 280 1 137 4 35 1 15 2 225 1 283 2 206 2 265 2 64 1 368 4 369 1 40 2 351 1 41 1 147 2 352 2 43 1 293 1 121 1 171 1 370 1 230 1 150 2 330 1 313 1 69 1 239 4 240 1 274 2 375 5 
20 1 311 1 
344 1 20 2 3 1 320 2 293 1 280 2 313 1 69 1 240 2 
276 1 312 1 99 1 
203 1 71 1 20 1 357 1 177 1 249 1 248 1 133 1 307 1 320 1 289 1 212 1 359 1 360 1 233 1 240 1 
71 1 203 1 357 1 219 1 177 1 248 1 307 1 133 1 320 2 289 1 162 1 212 1 293 1 359 1 280 1 360 1 312 1 233 1 69 1 240 2 
20 1 3 1 219 1 37 1 320 5 76 1 162 2 293 4 280 5 174 1 155 1 313 1 69 4 240 5 
293 2 229 1 280 2 330 1 351 1 320 2 69 2 240 2 
162 1 293 3 20 1 280 3 313 1 320 3 69 3 240 3 
293 1 280 1 330 1 351 1 320 1 69 1 240 1 
293 1 344 1 280 1 3 1 330 1 320 1 313 1 69 1 240 1 
1 1 71 1 356 1 3 1 357 1 98 1 29 1 74 1 219 1 177 1 248 1 250 1 133 1 320 4 162 1 135 1 359 1 280 3 360 1 57 1 306 1 16 1 203 1 227 1 20 1 36 2 347 1 267 1 287 1 368 1 307 1 289 1 212 1 293 3 121 1 187 1 188 1 310 1 330 1 233 1 313 2 69 3 239 1 240 4 
162 1 293 1 20 1 280 2 37 1 155 1 320 2 69 1 240 2 
356 1 3 1 29 1 219 1 40 1 368 1 250 1 320 3 162 2 293 3 135 1 280 3 172 1 57 1 330 1 313 1 239 1 69 3 240 3 
3 1 99 1 320 2 162 1 293 2 280 2 312 1 313 1 69 2 240 2 
203 1 71 1 20 1 357 1 177 1 248 1 133 1 307 1 320 1 289 1 212 1 359 1 360 1 233 1 240 1 
20 1 357 1 177 1 248 1 133 1 307 1 320 1 289 1 212 1 359 1 360 1 233 1 363 1 240 1 165 1 
276 2 1 1 98 1 99 2 300 1 179 1 255 1 305 1 306 1 107 1 16 4 226 1 62 1 205 2 206 1 36 2 347 1 267 2 187 1 188 1 312 2 216 1 237 1 191 1 
293 1 280 1 229 1 57 1 330 1 320 1 69 1 240 1 
327 1 21 1 
327 1 21 1 
214 1 298 1 
214 1 298 1 
214 1 298 1 
327 1 309 1 21 1 
327 1 309 1 21 1 
327 1 21 1 94 1 
327 2 214 1 21 2 65 1 38 1 298 1 
327 1 309 1 21 1 
327 1 21 1 238 1 
327 1 21 1 238 1 
327 1 21 1 238 1 
176 1 20 1 333 1 21 1 368 1 51 1 320 2 327 1 293 2 280 2 232 1 256 1 296 1 46 1 59 1 80 1 14 1 138 1 94 1 190 1 239 1 69 2 240 2 181 1 
61 1 18 1 192 1 176 2 333 3 21 2 349 2 38 1 40 1 368 2 51 2 353 1 197 1 327 2 46 1 138 2 202 1 239 2 181 2 
304 1 208 1 8 1 
193 1 208 1 8 1 
17 1 193 1 228 1 304 2 8 3 60 1 
17 1 105 1 193 1 304 1 8 2 60 1 
17 2 193 1 304 1 8 2 60 1 
316 2 97 1 132 1 300 1 134 1 10 1 58 1 137 3 59 1 305 1 14 1 15 1 206 1 286 1 265 1 266 1 368 4 40 1 147 4 352 1 43 1 230 1 150 1 122 1 123 1 296 1 216 1 239 4 375 1 47 1 274 1 
27 1 160 1 320 1 163 1 280 1 224 1 265 1 368 2 40 1 351 1 147 2 352 1 290 1 293 1 121 1 26 1 330 1 313 1 239 2 69 1 240 1 
129 2 316 1 97 4 300 1 132 2 134 1 137 3 305 1 15 1 206 1 286 1 265 1 64 1 266 2 40 3 368 3 147 2 150 1 123 1 122 1 296 1 216 1 239 3 47 1 274 1 375 2 
129 3 316 2 97 7 300 2 132 4 134 1 137 5 305 2 257 1 15 1 366 1 206 2 286 1 265 1 266 4 64 1 169 1 40 4 368 4 147 3 150 1 123 1 122 2 296 2 216 2 239 4 274 1 47 1 375 4 
311 1 233 1 235 1 
329 1 233 1 
247 1 
359 1 233 1 307 1 
233 1 114 1 
233 1 307 1 
52 1 359 1 233 3 235 2 39 1 307 1 
156 1 205 4 206 1 144 1 267 3 300 1 179 2 41 1 101 1 252 1 77 1 124 1 255 3 45 2 364 1 16 7 82 1 
156 1 205 4 206 1 144 1 267 3 300 1 179 2 41 1 101 1 252 1 77 1 124 1 255 3 45 2 364 1 16 7 82 1 
156 1 205 4 206 1 144 1 267 3 300 1 179 2 41 1 101 1 252 1 77 1 124 1 255 3 125 1 45 2 364 1 16 7 82 1 
156 1 241 1 98 1 300 4 101 1 179 5 252 2 77 1 255 10 306 1 305 3 343 1 364 2 258 4 82 1 365 1 16 31 284 3 205 16 36 2 206 4 347 1 367 1 144 2 267 15 41 2 209 1 90 1 188 1 122 3 124 5 151 1 45 3 216 3 
156 1 299 1 98 2 300 1 179 3 101 1 252 1 77 1 255 4 342 1 306 2 364 1 16 9 205 5 206 1 36 4 347 2 144 1 267 4 41 1 188 2 124 1 151 1 45 2 
315 1 72 1 49 1 73 1 193 1 158 1 245 1 220 1 177 1 30 2 133 1 8 2 31 1 360 1 32 1 199 1 304 1 34 1 109 2 143 1 85 1 264 1 228 1 350 1 208 1 289 1 212 1 234 1 217 1 127 1 
315 1 72 1 49 1 73 1 193 1 245 1 220 1 177 1 30 3 133 1 75 1 8 2 336 1 31 1 360 1 32 1 304 1 34 1 109 3 143 1 85 1 228 1 350 1 208 1 145 1 289 1 212 1 234 1 217 1 127 2 
72 1 49 1 193 1 220 1 177 1 30 2 133 1 8 2 336 1 360 1 32 1 304 1 34 1 109 2 143 1 85 1 228 1 350 1 145 1 208 1 289 1 212 1 234 1 217 1 127 2 
315 1 109 1 357 1 112 1 242 1 177 1 115 1 30 1 307 1 75 1 133 1 289 1 31 1 212 1 321 1 360 1 32 2 233 1 13 1 234 2 34 2 217 2 372 1 
315 1 72 1 49 1 73 1 193 1 158 1 245 1 220 1 177 1 30 1 133 1 8 2 336 1 31 1 360 1 32 1 199 1 304 1 34 1 109 1 228 1 208 1 289 1 212 1 234 1 217 1 
159 1 
357 1 368 1 133 1 352 2 43 1 212 1 198 1 360 1 230 1 91 1 150 1 123 1 297 1 137 1 15 1 239 1 375 1 274 1 
275 1 356 1 96 1 246 2 250 1 320 1 53 1 135 1 280 1 57 1 164 1 345 1 37 1 368 2 146 1 352 1 330 1 215 1 239 2 240 1 
275 1 356 1 96 1 246 3 250 1 318 1 320 1 135 1 53 1 280 1 57 1 164 1 345 1 265 1 37 1 368 2 40 1 352 1 230 1 330 1 215 1 239 2 240 1 314 1 
275 1 96 1 356 1 141 1 345 1 246 2 37 1 250 1 368 2 146 1 352 1 320 1 53 1 135 1 280 1 57 1 330 1 215 1 164 1 239 2 240 1 
230 1 318 1 368 1 352 1 239 1 
275 1 356 1 96 1 129 1 97 1 246 3 250 1 320 1 53 1 135 1 280 1 57 1 201 2 164 1 137 1 15 1 141 1 345 1 63 1 346 2 348 1 37 1 368 2 146 1 352 2 291 1 269 2 43 1 294 1 230 1 150 1 330 1 215 1 239 2 314 1 375 1 274 1 240 1 
275 1 356 1 96 1 129 1 246 3 250 1 320 1 135 1 53 1 280 1 57 1 201 2 164 1 137 1 15 1 259 1 141 1 345 1 346 2 348 1 37 1 368 2 146 1 352 2 291 1 269 2 43 1 44 1 294 1 230 1 150 1 330 1 215 1 354 1 239 2 314 1 375 1 274 1 240 1 
275 1 356 1 96 1 129 1 246 3 250 1 320 1 135 1 53 1 280 1 57 1 201 2 164 1 137 1 15 1 259 1 141 1 345 1 346 2 348 1 37 1 368 2 146 1 352 2 291 1 269 2 43 1 44 1 294 1 230 1 150 1 330 1 215 1 354 1 239 2 314 1 375 1 274 1 240 1 
275 1 356 1 96 1 97 1 246 3 250 1 320 1 135 1 53 1 280 1 57 1 200 1 164 1 137 1 15 1 141 1 345 1 285 1 166 2 346 2 37 1 368 2 146 1 352 2 88 1 269 2 43 1 89 1 294 1 230 1 150 1 330 1 215 1 354 1 239 2 314 1 375 1 274 1 240 1 
275 1 356 1 96 1 129 1 246 2 250 1 320 1 135 1 53 1 280 1 57 1 201 1 164 1 137 1 341 1 15 1 259 1 345 1 141 2 346 1 348 1 37 1 368 2 146 2 352 3 291 1 269 1 43 1 44 1 294 1 230 1 150 1 330 1 215 1 354 1 239 2 375 1 274 1 240 1 
275 1 356 1 96 1 129 1 246 4 250 1 320 1 135 1 53 1 280 1 57 1 201 2 164 1 137 1 341 1 15 1 259 1 345 1 141 2 346 2 348 1 37 1 368 2 146 2 352 3 291 1 269 2 43 1 44 1 294 1 230 1 150 1 330 1 215 1 354 1 239 2 375 1 274 1 240 1 314 2 
275 1 356 1 96 1 97 1 246 3 250 1 320 1 53 1 135 1 280 1 57 1 200 1 164 1 137 1 15 1 141 1 345 1 63 1 166 2 346 2 37 1 368 2 146 1 352 2 269 2 43 1 89 1 294 1 230 1 150 1 330 1 215 1 239 2 314 1 375 1 274 1 240 1 
276 1 1 1 156 1 98 1 99 1 300 1 101 1 179 2 252 1 77 1 255 2 306 1 16 6 20 2 205 3 36 2 206 1 347 1 267 3 41 1 187 1 188 1 312 1 311 1 45 1 237 1 
276 11 1 2 241 1 98 2 243 1 74 1 99 4 279 1 300 1 179 1 255 2 33 1 306 2 305 1 343 1 258 3 16 14 284 3 20 1 205 8 36 4 206 2 347 2 267 6 207 1 42 1 187 1 188 2 124 1 122 2 312 11 216 2 273 1 
71 1 1 1 357 1 98 1 244 1 219 1 74 1 243 1 177 1 248 1 249 1 99 1 133 1 320 2 162 1 359 1 360 1 280 1 339 1 306 1 16 2 203 1 20 1 205 1 36 2 347 1 267 1 307 1 289 1 212 1 293 1 187 1 188 1 233 1 355 1 273 1 69 1 240 2 
1 3 156 1 98 3 243 1 248 2 99 7 300 3 101 1 252 1 336 1 162 1 255 8 306 3 305 2 16 20 203 2 20 2 205 10 206 3 347 3 267 10 307 2 23 2 119 1 212 3 270 1 25 2 213 1 122 2 124 4 312 7 216 2 273 1 69 1 276 7 71 2 357 1 74 1 219 1 177 2 179 4 133 3 320 3 77 1 359 2 360 3 280 1 281 2 36 6 287 2 41 1 289 2 293 1 187 3 188 3 45 1 189 2 233 2 240 3 
1 2 357 2 98 2 243 1 74 1 177 2 133 8 320 1 336 1 162 1 253 1 280 1 360 8 136 1 306 2 16 2 205 1 36 4 347 2 264 1 267 1 115 1 307 2 289 2 184 2 212 7 293 1 186 1 271 1 187 2 188 2 233 3 236 1 332 1 68 1 237 1 69 1 372 1 240 1 
276 1 1 1 3 1 98 1 99 1 300 1 179 1 320 1 280 1 255 1 306 1 305 1 16 3 205 1 36 2 206 1 347 1 267 2 293 1 149 1 187 1 188 1 122 1 312 1 216 1 313 1 273 1 69 1 240 1 
276 1 1 1 226 1 205 2 36 2 98 1 206 1 347 1 99 1 187 1 188 1 124 1 255 1 312 1 216 1 306 1 237 1 16 2 
276 1 1 1 36 2 98 1 347 1 99 1 300 1 267 2 179 1 187 1 188 1 255 1 312 1 306 1 305 1 237 1 191 1 16 2 
276 2 1 1 205 2 36 2 98 1 206 1 347 1 99 2 267 2 300 1 179 1 187 1 188 1 124 1 122 1 255 2 312 2 216 1 305 1 306 1 237 1 16 4 
276 1 1 1 226 1 205 2 36 2 98 1 206 1 347 1 99 1 187 1 188 1 124 1 255 1 312 1 216 1 306 1 332 1 16 2 
276 1 1 1 36 2 98 1 347 1 99 1 300 1 267 2 179 1 187 1 188 1 255 1 312 1 306 1 305 1 332 1 191 1 16 2 
276 2 1 1 98 1 99 2 300 1 179 1 255 2 306 1 305 1 16 4 205 2 206 1 36 2 347 1 267 2 187 1 188 1 122 1 124 1 312 2 216 1 332 1 
276 2 1 1 205 2 36 2 98 1 206 1 347 1 99 2 267 2 300 1 179 1 187 1 188 1 124 1 122 1 255 2 312 2 216 1 305 1 306 1 16 4 
71 1 1 1 357 1 98 1 243 1 74 1 177 1 248 1 133 1 320 1 359 1 360 1 306 1 16 2 203 1 20 1 205 1 36 2 347 1 287 1 267 1 307 1 289 1 212 1 187 1 188 1 233 1 240 1 
1 1 48 1 357 1 98 1 243 1 74 1 177 1 248 1 133 1 320 1 359 1 360 1 363 1 306 1 16 2 165 1 20 1 205 1 36 2 347 1 267 1 307 1 289 1 212 1 187 1 188 1 233 1 240 1 
276 2 1 1 205 2 36 2 98 1 206 1 347 1 99 2 267 2 300 1 179 1 187 1 188 1 124 1 122 1 255 2 312 2 216 1 305 1 306 1 273 1 16 4 
276 2 71 1 1 1 98 1 177 1 99 2 248 1 300 1 179 1 133 1 320 1 359 1 360 1 255 2 305 1 306 1 16 4 203 1 205 2 206 1 36 2 347 1 264 1 267 2 287 1 307 1 23 1 289 1 212 1 187 1 188 1 124 1 122 1 312 2 233 1 216 1 240 1 
276 1 1 1 3 1 98 1 99 1 300 1 320 1 102 1 280 1 255 1 305 1 306 1 16 3 205 2 36 2 206 1 347 1 267 1 293 1 187 1 188 1 124 1 122 1 312 1 216 1 313 1 273 1 69 1 240 1 
277 4 156 1 241 3 98 3 5 1 131 1 300 5 101 1 179 4 251 2 252 1 77 1 338 1 12 1 255 8 342 1 306 3 305 4 343 1 258 4 16 41 140 1 284 3 205 20 36 6 206 5 347 3 113 1 267 21 41 1 66 1 148 1 292 1 120 1 173 1 188 3 151 1 122 4 124 4 45 1 126 1 216 4 154 1 
277 4 156 1 241 3 98 4 5 1 131 1 300 4 101 1 179 4 251 2 252 1 77 1 338 1 12 1 255 7 342 1 306 4 305 3 343 1 258 4 16 38 140 1 284 3 205 20 36 8 206 5 347 4 113 1 267 18 41 1 66 1 148 1 292 1 120 1 173 1 188 4 151 2 122 4 124 3 45 1 126 1 216 4 154 1 
277 4 156 1 241 2 98 2 5 1 131 1 300 8 101 1 179 7 251 1 252 1 77 1 338 1 12 1 255 14 33 2 342 1 306 2 305 7 343 2 258 4 16 52 284 4 205 27 36 4 206 8 347 2 113 1 267 25 41 1 66 1 148 1 292 1 120 1 188 2 151 1 122 7 124 7 45 1 126 1 216 7 154 1 
277 2 241 1 98 2 131 2 300 3 179 3 251 1 255 6 342 1 306 2 305 3 343 1 258 2 16 19 284 1 205 9 36 4 206 3 347 2 113 1 267 10 325 1 66 1 173 1 188 2 122 3 124 3 126 1 216 3 154 1 
277 4 241 2 98 3 5 1 131 1 300 2 179 2 251 2 338 1 12 1 255 4 342 1 306 3 305 2 258 2 16 26 284 2 205 14 36 6 206 3 347 3 113 1 267 12 66 1 148 1 292 1 120 1 188 3 124 2 151 2 122 3 126 2 216 3 154 1 
327 1 61 1 18 1 176 1 21 1 362 1 38 1 51 1 138 1 181 1 
256 1 94 1 
327 1 108 1 176 1 185 1 21 1 116 1 51 1 138 1 181 1 
309 1 161 1 
106 1 65 1 238 1 
61 1 18 1 192 1 176 1 333 2 21 1 349 1 38 1 40 1 368 1 51 1 353 1 197 1 327 1 46 1 138 1 239 1 181 1 
61 1 18 1 192 1 176 1 333 2 21 1 349 1 38 1 40 1 368 1 51 1 353 1 197 1 327 1 46 1 138 1 239 1 181 1 
61 1 18 1 192 1 176 1 333 2 21 1 349 1 38 1 40 1 368 1 51 1 353 1 197 1 327 1 46 1 138 1 239 1 181 1 
309 1 65 1 161 1 
309 1 65 1 161 1 
106 1 238 1 
106 1 65 1 238 1 
232 1 80 1 
327 1 55 1 176 1 21 1 368 1 147 1 51 1 138 1 239 1 181 1 
1 1 2 1 98 1 243 1 74 1 177 1 133 2 320 2 358 1 360 2 103 1 280 2 306 1 16 2 205 1 261 1 36 2 347 1 267 1 307 1 289 1 184 2 212 2 187 1 188 1 233 1 236 1 68 1 273 1 95 1 240 2 
72 1 49 1 84 1 193 1 177 1 264 1 245 1 228 1 208 1 8 2 133 2 289 1 336 1 212 2 360 2 104 1 304 1 34 1 260 1 
72 1 49 1 193 1 245 1 177 1 228 1 335 1 208 1 8 2 133 1 289 1 336 1 212 1 360 1 104 1 304 1 34 1 
357 1 84 1 242 1 177 1 115 1 307 1 133 1 289 1 212 1 360 1 254 1 233 1 34 1 372 1 
72 1 49 1 84 1 193 1 177 1 245 1 228 1 208 1 8 2 133 1 289 1 336 1 212 1 360 1 104 1 304 1 34 1 260 1 
308 1 
171 1 265 1 311 1 137 1 40 1 369 1 375 1 
129 1 97 1 265 1 348 1 40 1 352 1 291 1 43 1 230 1 150 1 201 1 137 1 15 1 274 1 375 1 
97 6 300 1 9 1 301 1 337 1 305 1 15 2 206 1 266 3 307 1 352 2 118 1 212 1 25 1 123 1 122 1 216 1 272 1 274 2 356 1 129 3 28 1 357 1 177 2 132 3 133 1 359 1 360 1 137 4 182 1 283 1 39 1 368 1 40 3 289 1 43 2 230 1 329 2 150 2 233 4 235 1 239 1 375 3 
241 1 97 6 5 1 194 1 300 2 160 1 338 1 340 1 12 1 305 2 15 2 258 1 206 2 265 2 266 5 351 1 352 1 121 1 122 2 123 1 216 2 313 1 69 1 274 2 27 1 129 3 218 1 132 5 320 1 280 1 137 8 284 1 283 2 40 5 148 1 43 2 292 1 293 1 230 1 91 1 150 2 330 1 240 1 375 5 
27 1 218 1 300 1 160 1 320 1 252 1 77 1 280 1 137 2 15 1 259 1 225 1 283 2 206 2 368 1 351 1 41 1 43 1 293 1 121 1 150 1 330 1 313 1 239 1 69 1 240 1 274 1 375 2 
265 1 369 1 40 1 43 1 171 1 150 1 137 1 15 1 274 1 375 1 
25 1 283 2 129 5 97 10 206 2 218 1 122 2 266 5 137 5 216 2 300 2 305 2 40 5 132 5 375 5 
27 1 265 1 40 1 351 1 160 1 320 1 352 1 293 1 121 1 280 1 230 1 330 1 313 1 69 1 240 1 
19 1 357 1 133 1 352 2 212 1 43 1 198 1 360 1 230 1 91 1 150 1 123 1 297 1 137 1 15 1 375 1 274 1 
71 1 1 1 357 1 98 1 74 1 177 1 248 1 133 1 320 3 359 1 360 1 280 2 306 1 16 1 203 1 227 1 20 1 36 2 347 1 267 1 287 1 307 1 289 1 212 1 293 2 121 1 187 1 188 1 233 1 313 2 69 2 240 3 
129 2 97 4 265 2 266 2 132 2 40 4 43 1 91 1 150 1 123 1 45 1 137 1 15 1 375 2 274 1 
176 1 152 1 181 1 
176 1 152 1 181 1 
61 1 176 1 100 1 80 1 181 1 
176 1 152 1 181 1 
176 1 111 1 181 1 
176 1 111 1 181 1 
176 1 111 1 181 1 
176 1 181 1 
327 1 21 1 
156 1 241 1 98 1 300 1 101 1 179 2 252 1 77 1 338 1 255 2 342 1 306 1 258 1 16 8 284 1 205 4 206 1 36 2 347 1 267 4 41 1 188 1 45 1 
156 1 241 1 98 2 300 1 179 2 101 1 252 1 77 1 338 1 255 3 342 1 306 2 343 1 258 2 16 11 284 1 205 6 36 4 206 2 347 2 267 5 41 1 328 1 188 2 122 1 124 1 45 1 216 1 
156 1 241 1 98 3 5 1 300 3 101 1 179 3 252 1 77 1 338 1 255 4 12 1 342 1 306 3 305 2 258 1 16 19 284 1 205 9 36 6 206 3 347 3 267 10 41 1 148 1 328 1 292 1 188 3 124 1 122 2 151 1 45 1 216 2 
156 1 241 1 98 3 5 1 300 2 101 1 179 3 252 1 77 1 338 1 255 5 12 1 342 1 306 3 305 1 258 1 16 17 284 1 205 10 36 6 206 3 347 3 267 7 41 1 148 1 328 1 292 1 188 3 151 1 124 2 122 2 45 1 216 2 
156 1 241 1 98 1 300 1 101 1 179 2 252 1 77 1 338 1 255 2 342 1 306 1 258 1 16 8 284 1 205 4 206 1 36 2 347 1 267 4 41 1 188 1 45 1 
241 1 98 1 5 1 300 2 179 1 338 1 255 2 12 1 342 1 306 1 305 2 258 1 16 12 284 1 205 6 36 2 206 2 347 1 267 6 148 1 292 1 188 1 124 1 122 2 216 2 
156 1 241 1 98 4 5 1 300 2 101 1 179 3 252 1 77 1 338 1 12 1 255 5 342 1 306 4 305 1 258 1 16 18 284 1 205 10 36 8 206 3 347 4 267 8 41 1 148 1 328 1 292 1 188 4 124 2 122 2 151 2 45 1 216 2 
241 1 98 4 5 1 300 2 179 3 338 1 12 1 255 6 342 1 306 4 305 2 258 1 16 16 284 1 205 9 36 8 206 3 347 4 267 7 148 1 292 1 173 1 188 4 124 3 122 3 151 2 216 3 
156 2 205 3 206 1 267 4 300 1 101 1 41 3 179 3 252 3 77 1 124 3 255 6 16 7 
156 1 241 1 98 4 5 1 300 2 101 1 179 3 252 1 77 1 338 1 12 1 255 4 342 1 306 4 305 1 258 1 16 18 284 1 205 10 36 8 206 3 347 4 267 8 41 1 148 1 292 1 173 1 188 4 124 1 122 2 151 2 45 1 216 2 
156 1 205 4 206 1 36 4 98 2 347 2 300 1 267 4 179 2 101 1 41 1 252 1 77 1 188 2 124 1 151 1 45 1 255 3 306 2 16 8 
156 1 205 3 206 1 267 3 300 1 101 1 41 1 179 2 252 1 77 1 45 1 311 1 255 2 16 6 
205 2 36 2 98 1 206 1 347 1 267 2 300 1 179 1 328 1 188 1 122 1 124 1 255 2 216 1 305 1 306 1 16 4 
284 1 241 1 205 3 206 1 300 1 267 4 179 1 122 1 124 1 255 2 216 1 305 1 343 1 258 2 16 7 
156 1 98 2 300 3 101 1 179 5 252 2 77 1 255 9 33 1 305 2 306 2 343 1 258 2 16 23 284 2 205 11 142 1 206 3 36 4 347 2 267 12 41 2 42 1 188 2 124 4 122 2 151 2 45 1 216 2 
267 1 258 1 16 1 
284 1 205 1 16 1 
205 3 98 1 36 2 206 1 347 1 267 3 300 1 179 2 328 1 25 1 188 1 122 1 124 1 255 3 216 1 306 1 305 1 16 6 
241 1 98 1 5 1 300 2 179 1 338 1 255 2 12 1 342 1 306 1 305 2 258 1 16 12 284 1 205 6 36 2 206 2 347 1 267 6 148 1 292 1 188 1 124 1 122 2 216 2 
205 3 206 1 300 1 267 3 41 1 179 1 252 1 77 1 124 1 255 2 16 6 
156 1 205 1 142 1 36 2 98 1 347 1 267 2 179 1 41 1 101 1 252 1 188 1 124 1 151 1 255 2 306 1 16 3 
205 5 98 1 36 2 206 2 347 1 267 5 300 2 41 2 179 3 252 2 77 1 188 1 124 2 255 5 342 1 306 1 225 1 16 10 
205 2 36 2 98 1 206 1 347 1 188 1 124 1 255 1 342 1 216 1 306 1 16 2 
205 2 36 2 98 1 206 1 347 1 267 2 300 1 179 1 188 1 122 1 124 1 255 2 342 1 216 1 305 1 306 1 16 4 
142 1 205 1 36 6 98 3 347 3 267 2 41 1 179 1 252 1 173 1 188 3 151 1 124 1 255 2 342 1 306 3 16 3 
156 1 241 1 98 5 300 5 101 1 179 7 252 3 77 2 255 12 342 1 306 5 305 3 343 1 258 4 365 1 16 34 284 3 142 1 205 16 36 10 206 5 347 5 267 18 41 3 209 1 328 1 90 1 173 1 188 5 151 2 122 3 124 5 45 1 216 3 
222 1 20 1 280 1 37 1 320 1 155 1 240 1 
20 1 204 1 4 1 37 1 320 1 222 1 280 1 175 1 92 1 180 1 155 1 240 1 
212 1 360 1 357 1 177 1 311 1 233 1 115 1 307 1 133 1 289 1 372 1 
71 1 20 1 357 1 177 1 248 1 307 1 133 1 320 2 289 1 162 1 212 1 293 1 359 1 280 1 360 1 233 1 69 1 240 2 
71 1 20 1 177 1 114 1 248 1 250 1 307 2 133 1 320 2 289 1 162 1 212 1 293 2 359 2 280 2 360 1 57 1 295 1 330 1 233 3 69 1 139 1 240 2 
130 1 177 1 248 1 250 1 133 2 320 2 162 1 359 2 360 2 280 2 57 1 165 1 139 1 20 1 114 1 307 2 289 1 212 2 293 2 295 1 330 1 233 3 69 1 240 2 
27 1 356 1 317 1 177 1 160 1 133 1 320 1 359 1 280 1 360 1 139 1 265 1 114 1 368 2 40 1 351 1 307 1 352 1 289 1 326 1 212 1 293 1 121 1 329 1 295 1 330 1 233 4 235 1 313 1 69 1 239 2 240 1 
27 1 356 1 177 1 160 1 133 1 320 1 359 1 280 1 360 1 182 1 139 1 265 1 114 1 368 2 40 1 351 1 307 1 352 1 289 1 212 1 293 1 121 1 329 1 295 1 330 1 233 4 235 1 313 1 69 1 239 2 240 1 
212 1 360 1 271 1 177 1 133 1 289 1 
357 2 264 1 177 3 22 1 39 1 133 7 307 2 289 2 184 1 336 1 212 6 253 1 359 1 78 1 360 7 186 1 271 1 233 3 136 1 236 1 374 1 
1 2 156 1 2 1 98 2 99 1 248 1 300 1 101 1 252 1 162 1 255 2 306 2 16 6 203 1 20 2 205 3 206 1 347 2 264 1 267 3 307 1 23 1 212 1 312 1 273 1 69 1 276 1 71 1 177 1 133 1 179 2 320 2 77 1 359 1 360 1 280 1 281 1 36 4 287 1 41 1 289 1 293 1 187 2 188 2 45 1 233 1 240 2 
300 2 9 1 160 1 252 1 337 1 15 2 19 1 206 2 265 2 351 1 352 2 212 1 121 1 171 1 313 1 69 1 274 2 27 1 356 1 28 1 357 1 218 1 133 1 320 1 77 1 360 1 280 1 137 4 182 1 225 1 283 2 368 2 369 1 40 2 147 1 41 1 43 2 293 1 230 1 329 1 150 2 330 1 233 2 235 1 239 2 240 1 375 5 
264 1 177 2 39 1 133 2 307 1 301 1 289 1 212 2 359 1 360 2 271 1 233 2 235 1 
130 1 357 1 177 1 264 1 168 1 115 1 133 4 307 1 289 1 212 4 360 4 233 1 372 1 
278 1 177 2 319 1 133 2 307 1 289 1 212 2 359 1 78 1 360 2 213 1 295 1 233 1 374 1 
212 1 360 1 357 1 49 1 193 1 177 1 208 1 8 1 133 1 289 1 
264 1 177 1 133 2 307 1 289 1 212 2 336 1 360 2 233 1 236 1 95 1 
357 1 264 1 177 2 168 1 115 1 133 5 307 2 289 2 212 4 360 5 186 1 295 1 233 3 236 1 136 1 372 1 
357 1 264 1 177 2 168 1 115 1 133 5 307 2 289 2 212 4 360 5 295 1 233 3 236 1 136 1 372 1 70 1 
20 1 357 1 177 1 248 1 307 1 133 1 320 2 289 1 162 1 212 1 293 1 359 1 280 1 360 1 233 1 69 1 240 2 165 1 
177 2 22 1 39 1 133 1 307 1 289 1 212 1 359 1 78 1 360 1 295 1 233 1 374 1 
128 1 20 1 268 1 81 1 223 1 
128 1 356 1 20 1 29 1 265 1 40 1 250 1 368 2 147 1 268 2 135 1 57 1 330 1 239 2 373 1 223 2 81 2 322 1 282 1 
128 1 280 1 103 1 261 1 268 1 320 1 358 1 223 1 240 1 
128 1 373 1 282 1 
143 1 85 1 311 1 350 1 
31 1 109 1 315 1 143 1 85 1 350 1 30 1 
109 1 234 1 217 1 
315 1 109 3 83 1 143 1 85 1 158 1 6 1 350 1 30 3 31 1 54 2 371 1 
31 1 109 2 315 1 110 1 143 1 85 1 350 1 30 2 127 1 
315 1 109 1 143 1 158 1 30 1 8 1 208 1 24 1 31 1 93 1 304 1 
31 1 109 1 315 1 143 1 85 1 158 1 30 1 
31 1 109 1 315 1 85 2 158 1 350 1 30 1 
31 2 170 1 109 2 315 2 143 1 85 1 158 1 153 1 30 2 211 1 
315 1 109 3 143 2 85 1 158 1 324 1 350 1 30 3 210 1 31 1 231 1 93 1 127 2 
315 1 109 2 143 1 85 1 193 1 158 1 228 1 350 1 30 2 8 2 208 1 288 1 31 1 304 1 127 1 
315 2 109 4 157 1 110 1 143 2 85 1 158 1 324 1 350 1 30 4 31 2 93 1 127 2 
31 1 109 1 315 1 143 1 85 1 158 1 350 1 30 1 
109 4 315 1 83 1 143 3 85 2 324 1 350 2 30 4 31 1 54 1 361 1 93 1 371 1 127 2 
315 1 109 1 262 1 334 1 85 1 158 1 350 1 30 1 31 1 361 1 331 1 
31 1 54 2 109 3 315 1 83 1 143 1 85 1 158 1 86 1 350 1 30 3 371 2 
183 2 56 1 143 2 117 1 
31 1 109 1 315 1 158 1 195 1 30 1 
31 1 109 2 315 1 143 1 231 1 85 1 158 1 350 1 30 2 127 1 
79 1 
31 1 109 1 315 1 143 1 85 1 158 1 350 1 30 1 
31 1 54 1 109 3 315 1 143 1 231 1 85 1 158 1 350 1 30 3 127 1 
143 1 361 1 93 1 324 1 
143 1 85 1 

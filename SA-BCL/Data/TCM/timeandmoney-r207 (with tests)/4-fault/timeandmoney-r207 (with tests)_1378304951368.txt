#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (134,326) (134,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (134,326) (134,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (134,326) (134,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (134,326) (134,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
177 1 134 1 227 1 212 1 84 1 321 1 163 1 284 1 326 1 14 1 181 1 
177 1 134 1 227 1 212 1 84 1 321 1 163 1 284 1 326 1 14 1 181 1 
177 1 134 1 227 1 212 1 84 1 321 1 163 1 284 1 326 1 14 1 181 1 
177 1 134 1 227 1 212 1 84 1 321 1 163 1 284 1 326 1 14 1 181 1 
79 1 294 1 96 1 227 1 38 1 100 1 284 1 163 4 232 2 337 1 192 3 193 1 130 1 321 4 340 3 131 1 181 1 19 2 
79 1 331 1 96 1 227 1 146 1 284 1 163 2 14 1 177 1 337 1 361 1 321 2 340 1 131 1 181 1 144 1 
294 1 227 2 284 2 163 3 297 1 14 1 337 1 192 1 321 3 340 2 131 1 181 1 19 1 
79 1 294 3 159 1 38 1 350 1 163 9 297 1 164 1 244 1 337 1 192 7 193 1 340 5 96 1 227 2 284 2 100 1 14 1 232 2 130 1 321 9 131 1 181 1 19 4 
79 1 294 3 159 1 38 1 350 1 163 9 297 1 164 1 244 1 337 1 192 7 193 1 340 5 96 1 227 2 284 2 100 1 14 1 232 2 130 1 321 9 131 1 181 1 19 4 
1 1 111 1 310 1 
35 2 1 1 345 1 
104 2 185 2 90 2 269 1 348 2 358 2 373 2 230 1 
293 1 368 2 157 1 109 1 81 1 0 1 37 1 36 2 135 1 185 3 112 1 162 1 370 2 371 1 190 1 269 1 25 1 220 1 90 2 92 1 195 2 169 1 373 2 304 1 122 1 99 1 175 1 358 2 230 1 104 3 105 1 76 1 316 1 107 1 236 1 348 2 182 2 
104 1 10 1 185 1 90 1 67 1 263 1 348 1 358 1 373 1 230 1 
21 1 1 1 111 1 185 1 201 1 67 1 311 1 104 1 378 1 167 1 362 1 341 1 60 1 348 1 
21 1 1 1 111 1 185 1 201 1 67 1 358 1 311 1 104 1 167 1 362 2 90 1 341 2 373 1 348 1 
336 1 362 1 172 1 323 1 341 1 
336 1 253 1 1 1 362 2 111 1 93 1 172 1 341 2 
336 1 362 1 341 1 
10 1 185 1 67 1 172 1 230 1 358 1 104 1 362 1 90 1 263 1 341 1 303 1 373 1 348 1 
1 1 
336 1 1 1 362 2 111 1 93 1 172 1 341 2 132 1 
1 1 22 1 73 1 111 1 172 2 127 1 357 1 336 2 116 2 362 5 208 2 89 2 93 1 223 1 120 1 341 5 266 1 62 1 252 1 
269 1 310 1 
158 1 185 2 309 1 358 1 269 2 104 2 90 1 348 2 373 1 
261 1 170 1 166 1 
36 1 122 1 185 1 99 1 370 1 371 1 175 1 269 1 25 1 104 1 33 1 220 1 105 1 236 1 195 1 169 1 
121 1 97 1 36 1 122 1 185 2 99 1 370 1 371 1 175 1 358 1 25 1 105 1 220 1 104 2 236 1 261 1 90 1 195 1 169 1 348 1 
104 3 121 1 185 3 90 3 373 1 269 1 348 3 358 3 
104 1 185 1 90 1 67 1 263 1 348 1 358 1 
104 1 158 1 185 1 90 1 67 1 309 1 348 1 358 1 373 1 
293 1 368 1 157 1 81 1 0 1 21 1 158 1 36 1 185 4 112 1 67 1 162 1 370 1 371 1 190 1 269 1 25 1 220 1 167 1 248 1 90 3 92 1 195 1 169 1 341 1 373 2 304 1 121 1 97 1 122 1 99 1 201 1 175 1 358 3 230 1 311 1 105 1 104 4 76 1 362 1 236 1 210 1 348 3 182 2 
104 2 121 1 185 2 153 1 90 1 269 1 60 1 348 2 358 1 
158 1 21 1 1 1 121 2 97 1 185 3 201 1 67 1 358 3 311 1 104 3 85 1 362 1 167 1 248 1 90 3 341 1 373 1 348 3 
158 1 121 1 185 2 358 2 166 1 104 2 90 2 261 1 373 1 348 2 
36 1 122 1 185 1 99 1 370 1 371 1 175 1 269 1 25 1 104 1 220 1 105 1 236 1 195 1 169 1 
36 1 122 1 185 1 99 1 370 1 68 1 175 1 269 1 25 1 104 1 105 1 236 1 195 1 169 1 267 1 
329 1 293 1 214 1 157 1 368 4 0 1 81 2 37 2 112 1 24 1 166 2 142 1 194 1 92 1 170 2 145 1 277 1 52 1 12 1 76 1 77 1 261 2 179 1 182 2 
311 1 104 1 185 1 90 1 381 1 67 1 348 1 358 1 
158 1 121 2 97 1 185 5 187 1 255 1 358 4 269 1 104 5 153 1 90 4 60 1 348 5 373 1 
104 2 185 2 90 2 381 1 67 1 263 1 348 2 358 2 
191 1 71 1 
191 1 71 1 
51 1 42 1 
51 1 42 1 
51 1 42 1 
191 1 171 1 71 1 
191 1 171 1 71 1 
191 1 114 1 71 1 
300 1 191 2 51 1 243 1 71 2 42 1 
191 1 171 1 71 1 
191 1 344 1 71 1 
191 1 344 1 71 1 
191 1 344 1 71 1 
1 1 199 3 124 1 83 2 285 2 243 1 125 2 191 2 86 1 45 2 362 2 247 1 275 1 339 1 143 2 71 2 341 2 276 1 72 1 
292 1 332 1 185 2 83 1 334 1 114 1 269 1 191 1 140 1 90 2 119 1 143 1 71 1 341 1 276 1 251 1 199 1 285 1 125 1 358 2 104 2 362 1 237 1 348 2 
79 1 96 1 130 1 
79 1 96 1 331 1 
96 3 331 1 56 1 130 2 239 1 356 1 
288 1 96 2 331 1 130 1 239 1 356 1 
96 2 331 1 130 1 239 1 356 2 
35 3 1 2 332 1 296 1 111 1 334 1 5 2 336 1 245 1 116 1 142 1 194 1 89 1 93 1 94 2 341 5 145 1 252 1 279 1 172 4 127 2 102 2 257 1 345 1 362 5 208 1 151 1 237 1 179 1 324 1 266 3 241 1 
35 9 22 1 1 5 296 3 111 1 5 6 336 6 245 1 116 2 87 5 142 3 194 3 89 2 93 1 341 9 145 3 252 1 279 2 306 1 54 1 172 7 127 6 102 6 204 1 376 1 257 2 345 3 362 9 208 2 237 4 152 1 179 3 323 5 34 1 266 8 
35 4 1 3 22 1 296 1 111 1 5 2 116 1 142 1 194 1 89 1 94 1 341 3 145 1 279 1 172 2 127 2 102 2 257 1 345 2 362 3 208 1 151 1 237 1 179 1 266 3 241 1 
35 7 1 4 22 1 296 2 111 1 5 4 116 1 142 2 194 2 89 1 94 2 341 4 145 2 279 1 306 1 172 3 127 4 102 4 257 1 345 3 362 4 208 1 151 1 237 2 152 1 179 2 34 1 266 5 241 1 
53 1 169 1 310 1 
372 1 169 1 
31 1 
169 1 175 1 
53 2 236 1 169 3 196 1 265 1 175 1 
236 1 169 1 175 1 
168 1 169 1 
214 3 368 7 81 3 37 4 219 1 44 1 273 1 379 1 246 1 235 2 150 1 194 1 77 2 238 1 250 1 198 1 145 1 
214 3 368 7 81 3 37 4 219 1 44 1 273 1 379 1 246 1 235 2 150 1 194 1 77 2 238 1 250 1 198 1 145 1 
214 3 368 7 81 3 37 4 161 1 219 1 44 1 273 1 379 1 246 1 235 2 150 1 194 1 77 2 238 1 250 1 198 1 145 1 
293 1 214 10 368 31 81 15 0 1 160 3 37 16 296 3 112 1 219 2 299 1 44 1 273 2 246 2 27 1 142 3 194 4 250 1 198 5 145 4 375 4 76 1 235 3 379 2 150 1 318 1 207 1 77 5 179 3 238 1 290 1 59 1 182 2 291 1 
293 2 214 4 368 9 0 2 81 4 37 5 112 2 298 1 219 1 44 1 246 1 27 1 273 1 194 1 250 1 198 1 145 1 228 1 76 2 235 2 379 1 77 3 238 1 182 4 
79 1 331 1 36 1 370 1 163 2 25 1 271 1 337 1 192 1 28 1 195 1 301 1 91 1 340 1 96 2 227 1 122 1 147 1 284 1 14 1 56 1 206 1 319 1 58 1 363 1 130 1 321 2 240 1 131 1 181 1 
79 1 331 1 36 1 370 1 163 3 25 1 271 1 337 1 192 2 8 1 28 1 195 1 91 1 340 1 374 1 96 2 227 1 122 1 147 1 284 1 14 1 233 1 56 1 319 1 58 1 363 1 130 1 321 3 240 1 131 1 
79 1 331 1 36 1 370 1 163 2 25 1 271 1 337 1 192 2 8 1 28 1 195 1 91 1 340 1 96 2 122 1 147 1 14 1 233 1 56 1 58 1 363 1 130 1 321 2 131 1 
374 1 36 1 122 1 227 1 217 1 99 1 284 1 163 1 370 1 147 2 175 1 14 2 25 1 270 1 15 1 271 2 28 2 352 1 195 1 169 1 321 1 347 1 63 1 
79 1 331 1 36 1 370 1 163 1 25 1 271 1 28 1 195 1 91 1 96 2 227 1 122 1 147 1 284 1 14 1 233 1 56 1 206 1 319 1 58 1 363 1 130 1 321 1 240 1 181 1 
320 1 
35 2 1 2 2 1 36 2 185 1 4 1 41 1 43 1 6 1 88 2 89 1 352 1 195 2 93 3 252 1 99 2 201 1 13 1 311 1 104 1 362 5 208 1 364 2 18 1 266 2 327 1 60 1 21 1 111 1 216 2 217 1 370 2 67 1 335 2 25 1 336 6 116 1 117 1 167 1 169 1 341 5 225 1 278 1 279 1 122 1 283 2 174 2 175 1 127 2 286 4 378 1 345 2 78 2 382 1 348 1 
21 1 185 1 4 1 67 1 41 1 336 2 117 1 167 1 88 1 93 1 341 3 201 1 13 1 286 2 311 1 104 1 378 1 362 3 348 1 60 1 382 1 132 1 
21 1 1 1 185 1 111 1 4 1 67 1 41 1 336 1 117 1 167 1 93 1 341 3 201 1 13 1 286 3 311 1 104 1 378 1 362 3 364 1 348 1 60 1 382 1 132 1 
21 1 1 1 185 1 111 1 4 1 67 1 41 1 336 2 117 1 167 1 88 1 93 1 341 3 201 1 283 1 13 1 286 3 311 1 104 1 378 1 362 3 364 1 348 1 60 1 382 1 132 1 
1 5 349 1 2 1 185 1 4 1 41 1 43 1 88 4 89 1 93 3 252 1 201 1 13 1 311 1 104 1 317 1 362 5 259 1 208 1 364 4 60 1 266 1 21 1 111 5 216 2 67 1 335 2 336 7 116 1 117 1 167 1 341 5 283 4 174 2 127 1 286 6 378 1 234 1 345 2 78 2 180 1 382 1 348 1 132 1 
35 2 1 2 2 1 185 1 4 1 41 1 43 1 89 1 88 2 93 2 252 1 201 1 13 1 311 1 104 1 362 4 208 1 364 2 60 1 266 1 18 1 21 1 216 2 111 1 67 1 335 2 336 4 116 1 117 1 167 1 341 4 283 2 174 2 127 1 286 4 378 1 345 2 78 2 348 1 382 1 
21 1 1 1 349 1 2 1 111 1 216 2 185 1 4 1 67 1 41 1 335 2 336 4 43 1 116 1 117 1 167 1 88 2 89 1 93 2 341 4 252 1 283 2 201 1 174 2 127 1 13 1 286 4 311 1 104 1 378 1 317 1 345 2 362 4 259 1 208 1 364 2 78 2 266 1 348 1 60 1 382 1 
21 1 1 1 349 1 2 1 111 1 216 2 185 1 4 1 67 1 41 1 335 2 336 4 43 1 116 1 117 1 167 1 88 2 89 1 93 2 341 4 252 1 283 2 201 1 174 2 127 1 13 1 286 4 311 1 104 1 378 1 317 1 345 2 362 4 259 1 208 1 364 2 78 2 266 1 348 1 60 1 382 1 
156 1 35 2 21 1 215 1 1 1 2 1 111 1 185 1 4 1 67 1 41 1 335 2 336 4 116 1 117 1 351 1 167 1 88 2 89 1 93 2 46 2 341 4 252 1 283 2 201 1 173 2 127 1 13 1 286 4 311 1 104 1 378 1 317 1 362 4 208 1 364 2 78 2 266 1 348 1 60 1 382 1 
21 1 1 1 349 1 2 1 111 1 216 2 185 1 4 1 67 1 41 1 335 2 43 1 336 5 116 1 117 1 167 1 89 1 88 3 93 2 341 4 252 1 201 1 283 3 174 2 127 1 13 1 286 5 311 1 104 1 378 1 234 1 317 1 345 2 259 1 362 4 208 1 364 3 78 2 266 1 348 1 60 1 382 1 
21 1 1 1 349 1 2 1 111 1 216 2 185 1 4 1 67 1 41 1 335 2 43 1 336 5 116 1 117 1 167 1 89 1 88 3 93 2 341 4 252 1 201 1 283 3 174 2 127 1 13 1 286 5 311 1 104 1 378 1 234 1 317 1 345 2 259 1 362 4 208 1 364 3 78 2 266 1 348 1 60 1 382 1 
35 2 1 1 2 1 185 1 4 1 41 1 351 1 89 1 88 2 93 2 46 2 252 1 201 1 13 1 311 1 104 1 362 4 208 1 364 2 60 1 266 1 18 1 21 1 111 1 67 1 335 2 336 4 116 1 117 1 167 1 341 4 283 2 173 2 127 1 286 4 378 1 78 2 348 1 382 1 
214 2 293 1 368 6 157 1 81 3 0 1 37 3 112 1 12 1 269 2 310 1 166 1 219 1 76 1 44 1 235 1 273 1 194 1 77 2 261 1 92 1 238 1 170 1 250 1 145 1 182 2 
214 2 293 2 157 1 368 14 109 1 81 6 295 1 0 2 160 3 37 8 296 2 112 2 269 1 166 4 142 1 194 1 92 2 170 11 198 1 304 1 145 2 30 1 281 1 128 1 375 3 359 1 76 2 77 1 261 11 179 2 290 1 59 1 182 4 
293 1 157 1 368 2 0 1 81 1 109 1 36 1 37 1 185 2 112 1 370 1 371 1 269 1 25 1 166 1 220 1 69 1 90 1 195 1 92 1 169 1 304 1 121 1 97 1 122 1 30 1 98 1 99 1 175 1 358 1 105 1 33 1 104 2 256 1 76 1 236 1 348 1 182 2 
293 3 81 10 0 3 36 3 37 10 296 2 185 3 39 2 189 1 190 2 44 1 142 2 194 3 90 1 195 3 92 3 250 1 198 4 304 1 145 3 97 1 99 1 202 2 11 1 358 1 104 3 105 2 57 2 211 1 261 7 214 8 157 3 368 20 109 1 112 3 23 2 370 3 371 2 269 2 25 2 166 7 219 1 220 2 273 1 169 2 170 7 121 1 122 2 30 1 175 2 233 1 76 3 235 1 77 4 236 2 179 2 238 1 348 1 182 6 
20 1 293 2 157 2 368 2 0 2 109 1 81 1 183 1 36 8 184 1 37 1 186 1 185 1 217 1 112 2 370 7 25 2 90 1 352 1 301 1 195 8 92 2 169 3 304 1 121 1 122 2 99 2 12 1 175 2 358 1 233 1 104 1 76 2 316 2 209 1 260 1 325 1 348 1 182 4 
214 1 293 1 157 1 368 3 158 1 0 1 81 2 37 1 296 1 185 1 112 1 166 1 142 1 194 1 90 1 92 1 170 1 373 1 145 1 254 1 30 1 358 1 104 1 76 1 77 1 261 1 179 1 348 1 182 2 
214 1 293 1 368 2 157 1 0 1 37 2 112 1 24 1 12 1 166 1 76 1 261 1 179 1 92 1 170 1 198 1 182 2 145 1 
214 1 293 1 368 2 157 1 0 1 81 2 52 1 112 1 12 1 166 1 76 1 142 1 77 1 194 1 261 1 92 1 170 1 182 2 
293 1 214 2 157 1 368 4 0 1 81 2 37 2 296 1 112 1 166 2 142 1 194 1 92 1 170 2 198 1 145 1 12 1 76 1 77 1 179 1 261 2 182 2 
214 1 293 1 368 2 157 1 0 1 37 2 112 1 24 1 166 1 76 1 209 1 261 1 179 1 92 1 170 1 198 1 182 2 145 1 
214 1 293 1 368 2 157 1 0 1 81 2 52 1 112 1 166 1 76 1 142 1 77 1 209 1 194 1 261 1 92 1 170 1 182 2 
293 1 214 2 157 1 368 4 0 1 81 2 37 2 296 1 112 1 166 2 142 1 194 1 92 1 170 2 198 1 145 1 76 1 209 1 77 1 179 1 261 2 182 2 
293 1 214 2 368 4 157 1 0 1 81 2 37 2 296 1 112 1 166 2 142 1 194 1 92 1 170 2 198 1 145 1 76 1 77 1 179 1 261 2 182 2 
293 1 368 2 157 1 109 1 0 1 81 1 37 1 36 1 185 1 112 1 370 1 371 1 190 1 269 1 25 1 220 1 195 1 92 1 169 1 304 1 122 1 99 1 175 1 105 1 104 1 76 1 236 1 182 2 
293 1 368 2 157 1 109 1 0 1 81 1 37 1 36 1 185 1 112 1 370 1 68 1 269 1 25 1 195 1 92 1 169 1 304 1 122 1 99 1 175 1 148 1 105 1 104 1 76 1 236 1 267 1 182 2 
293 1 214 2 157 1 368 4 0 1 81 2 37 2 296 1 112 1 166 2 142 1 194 1 92 1 170 2 198 1 145 1 30 1 76 1 77 1 179 1 261 2 182 2 
214 2 293 1 368 4 157 1 81 2 0 1 37 2 36 1 296 1 185 1 112 1 370 1 371 1 190 1 166 2 25 1 220 1 142 1 194 1 195 1 301 1 92 1 169 1 170 2 198 1 145 1 122 1 175 1 105 1 104 1 76 1 57 1 77 1 236 1 261 2 179 1 182 2 
214 1 293 1 157 1 368 3 81 1 158 1 0 1 37 2 296 1 185 1 112 1 166 1 142 1 194 1 90 1 92 1 170 1 198 1 373 1 145 1 30 1 358 1 104 1 76 1 380 1 179 1 261 1 348 1 182 2 
293 3 133 4 81 21 0 3 37 20 296 4 298 1 44 1 142 4 194 5 353 1 250 1 198 4 145 5 305 1 101 1 55 1 360 1 312 1 106 1 59 1 366 2 367 1 214 8 368 41 330 1 160 3 112 3 218 1 219 1 27 1 273 1 338 1 123 1 375 4 76 3 289 1 235 1 77 4 179 4 290 3 238 1 182 6 
133 4 293 4 214 7 330 1 368 38 0 4 81 18 160 3 37 20 296 4 112 4 298 1 218 1 219 1 44 1 273 1 27 2 338 1 142 3 194 4 353 1 250 1 198 3 145 5 305 1 123 1 55 1 101 1 375 4 360 1 312 1 76 4 289 1 106 1 235 1 77 4 179 4 238 1 290 3 59 1 366 2 367 1 182 8 
133 4 293 2 214 14 330 1 368 52 0 2 81 25 160 4 37 27 296 7 112 2 298 1 218 1 219 1 44 1 273 1 27 1 142 7 194 8 353 1 250 1 198 7 145 8 305 1 123 1 281 2 55 1 101 1 375 4 360 1 312 1 76 2 106 1 235 1 77 7 179 7 238 1 290 2 59 2 366 1 367 1 182 4 
133 2 293 2 214 6 368 19 0 2 81 10 160 1 37 9 296 3 112 2 298 1 142 3 194 3 353 1 198 3 145 3 226 1 305 1 101 1 375 2 360 1 76 2 289 1 77 3 179 3 290 1 59 1 366 1 367 2 182 4 
214 4 133 4 293 3 368 26 330 1 81 12 0 3 37 14 160 2 296 3 112 3 298 1 218 1 27 2 142 2 194 2 353 1 198 2 145 3 305 1 123 1 55 1 101 2 375 2 360 1 312 1 76 3 106 1 77 2 179 3 290 2 366 2 367 1 182 6 
191 1 124 1 66 1 339 1 83 1 285 1 243 1 143 1 125 1 71 1 
292 1 114 1 
191 1 7 1 83 1 285 1 29 1 143 1 125 1 71 1 32 1 
1 1 199 2 124 1 83 1 285 1 243 1 125 1 191 1 86 1 45 1 362 1 247 1 339 1 143 1 276 1 341 1 71 1 72 1 
1 1 199 2 124 1 83 1 285 1 243 1 125 1 191 1 86 1 45 1 362 1 247 1 339 1 143 1 276 1 341 1 71 1 72 1 
1 1 199 2 124 1 83 1 285 1 243 1 125 1 191 1 86 1 45 1 362 1 247 1 339 1 143 1 276 1 341 1 71 1 72 1 
300 1 171 1 328 1 
300 1 171 1 328 1 
242 1 344 1 
300 1 242 1 344 1 
140 1 119 1 
292 1 332 1 185 2 83 1 334 1 114 1 269 1 191 1 45 1 140 1 90 2 119 1 143 1 341 1 71 1 72 1 251 1 199 1 172 1 285 1 125 1 358 2 104 2 314 1 362 1 237 1 348 2 
171 1 328 1 
300 1 242 1 344 1 
293 1 157 1 368 2 0 1 109 1 81 1 36 2 184 1 37 1 185 2 112 1 370 2 25 1 26 1 195 2 92 1 169 1 47 1 304 1 122 1 30 1 175 1 104 2 76 1 316 2 154 1 322 1 17 1 325 1 348 2 182 2 
79 1 96 2 331 1 36 2 122 1 113 1 370 2 25 1 233 1 138 1 271 1 56 1 319 1 363 1 130 1 195 2 301 1 91 1 213 1 
79 1 96 2 331 1 36 1 122 1 370 1 25 1 233 1 138 1 271 1 56 1 319 1 363 1 130 1 195 1 91 1 249 1 
80 1 36 1 122 1 217 1 99 1 113 1 370 1 175 1 25 1 270 1 271 1 352 1 195 1 169 1 
79 1 96 2 331 1 36 1 122 1 113 1 370 1 25 1 233 1 138 1 271 1 56 1 319 1 363 1 130 1 195 1 91 1 213 1 
343 1 
1 1 111 1 223 1 120 1 127 1 266 1 310 1 
35 1 1 2 111 1 216 1 174 1 127 1 336 1 43 1 116 1 362 1 345 1 208 1 89 1 93 1 341 1 266 1 252 1 
35 12 1 8 36 3 296 2 5 6 137 2 142 2 89 4 194 2 301 1 195 3 93 3 196 1 197 2 252 4 145 2 307 2 53 2 99 1 201 2 202 2 102 6 203 2 149 2 258 1 362 5 208 4 262 2 264 1 266 9 111 2 268 1 65 2 370 3 165 1 25 4 336 5 116 4 372 3 168 2 169 10 223 1 120 1 341 5 278 1 279 2 122 3 175 3 127 8 231 2 178 1 345 6 236 3 179 2 
330 1 35 6 1 5 160 1 296 2 111 2 5 5 218 1 336 1 116 2 142 2 89 2 194 2 93 1 354 1 341 1 252 2 145 2 278 1 279 1 123 1 55 1 127 5 203 1 102 5 103 1 375 1 106 1 149 2 362 1 345 3 208 2 179 2 290 1 266 8 
185 1 67 1 219 1 116 1 273 1 89 1 194 1 90 1 250 1 341 1 303 1 373 1 252 1 145 2 200 1 10 1 127 2 230 1 358 1 203 1 104 1 149 2 259 1 362 1 208 1 263 1 266 2 348 1 
1 1 111 1 127 1 116 1 208 1 89 1 120 1 223 1 266 1 252 1 
35 10 1 5 296 2 202 1 5 5 127 5 203 1 102 5 149 2 345 5 142 2 194 2 179 2 266 5 145 2 
336 1 1 1 362 1 111 1 93 1 341 1 
22 1 36 4 217 1 370 4 165 1 25 1 336 4 116 2 89 2 352 1 195 4 169 1 93 2 302 1 341 3 225 1 252 1 279 2 278 2 122 1 99 2 175 1 127 2 258 2 362 3 108 1 208 2 327 1 266 2 
293 1 368 1 157 1 81 1 0 1 36 1 185 3 112 1 370 1 162 1 371 1 190 1 269 1 25 1 220 1 90 2 195 1 92 1 169 1 373 2 304 1 122 1 99 1 175 1 358 2 230 1 104 3 105 1 76 1 236 1 348 2 182 2 
279 1 278 1 35 4 1 4 111 2 5 2 127 2 102 2 116 1 235 1 345 2 208 1 89 1 266 1 252 1 
274 1 83 1 143 1 
274 1 83 1 143 1 
64 1 40 1 83 1 119 1 143 1 
274 1 83 1 143 1 
188 1 83 1 143 1 
188 1 83 1 143 1 
188 1 83 1 143 1 
83 1 143 1 
191 1 71 1 
293 1 214 2 368 8 330 1 81 4 0 1 160 1 37 4 112 1 298 1 219 1 44 1 273 1 194 1 250 1 145 1 375 1 76 1 235 1 77 2 290 1 238 1 182 2 
293 2 214 3 368 11 330 1 81 5 0 2 160 1 37 6 296 1 112 2 298 1 219 1 44 1 273 1 194 1 250 1 198 1 145 2 375 2 76 2 235 1 77 2 179 1 238 1 290 1 59 1 61 1 182 4 
293 3 214 4 368 19 330 1 81 10 0 3 160 1 37 9 296 2 112 3 298 1 218 1 219 1 44 1 273 1 27 1 142 2 194 3 250 1 198 1 145 3 123 1 55 1 375 1 76 3 106 1 235 1 77 3 179 2 238 1 290 1 61 1 182 6 
293 3 214 5 368 17 330 1 81 7 0 3 160 1 37 10 296 2 112 3 298 1 218 1 219 1 44 1 273 1 27 1 142 1 194 2 250 1 198 2 145 3 123 1 55 1 375 1 76 3 106 1 235 1 77 3 179 2 238 1 290 1 61 1 182 6 
293 1 214 2 368 8 330 1 81 4 0 1 160 1 37 4 112 1 298 1 219 1 44 1 273 1 194 1 250 1 145 1 375 1 76 1 235 1 77 2 290 1 238 1 182 2 
293 1 214 2 368 12 330 1 81 6 0 1 160 1 37 6 296 2 112 1 298 1 218 1 142 2 194 2 198 1 145 2 123 1 55 1 375 1 76 1 106 1 77 1 179 2 290 1 182 2 
293 4 214 5 368 18 330 1 81 8 0 4 160 1 37 10 296 2 112 4 298 1 218 1 219 1 44 1 273 1 27 2 142 1 194 2 250 1 198 2 145 3 123 1 55 1 375 1 76 4 106 1 235 1 77 3 179 2 238 1 290 1 61 1 182 8 
293 4 214 6 368 16 330 1 81 7 0 4 160 1 37 9 296 3 112 4 298 1 218 1 27 2 142 2 194 2 198 3 145 3 123 1 55 1 375 1 76 4 289 1 106 1 77 3 179 3 290 1 182 8 
214 6 368 7 81 4 37 3 219 3 44 1 273 3 194 1 77 3 238 2 250 1 198 3 145 1 
293 4 214 4 368 18 330 1 81 8 0 4 160 1 37 10 296 2 112 4 298 1 218 1 219 1 44 1 273 1 27 2 142 1 194 2 250 1 198 1 145 3 123 1 55 1 375 1 76 4 289 1 106 1 235 1 77 3 179 2 238 1 290 1 182 8 
214 3 293 2 368 8 81 4 0 2 37 4 112 2 219 1 76 2 44 1 235 1 27 1 273 1 194 1 77 2 238 1 250 1 198 1 145 1 182 4 
214 2 368 6 81 3 37 3 310 1 219 1 44 1 235 1 273 1 77 2 194 1 238 1 250 1 145 1 
214 2 293 1 368 4 81 2 0 1 37 2 296 1 112 1 76 1 142 1 77 1 194 1 179 1 61 1 198 1 182 2 145 1 
214 2 368 7 81 4 160 1 37 3 296 1 375 2 142 1 77 1 194 1 179 1 290 1 59 1 198 1 145 1 
214 9 293 2 368 23 81 12 0 2 37 11 160 2 296 2 112 2 219 2 44 1 273 2 27 2 272 1 142 2 194 3 250 1 198 4 145 3 281 1 375 2 359 1 76 2 235 1 77 5 179 2 238 1 59 1 182 4 
375 1 368 1 81 1 
368 1 37 1 160 1 
293 1 214 3 368 6 0 1 81 3 37 3 296 1 112 1 202 1 76 1 142 1 194 1 77 2 179 1 61 1 198 1 182 2 145 1 
293 1 214 2 368 12 330 1 81 6 0 1 160 1 37 6 296 2 112 1 298 1 218 1 142 2 194 2 198 1 145 2 123 1 55 1 375 1 76 1 106 1 77 1 179 2 290 1 182 2 
214 2 368 6 81 3 37 3 219 1 273 1 194 1 77 1 250 1 198 1 145 1 
214 2 293 1 368 3 81 2 0 1 37 1 112 1 219 1 76 1 44 1 273 1 272 1 27 1 77 1 238 1 198 1 182 2 
293 1 214 5 368 10 0 1 81 5 37 5 200 1 112 1 298 1 219 2 76 1 273 2 77 3 194 2 250 1 198 2 182 2 145 2 
293 1 214 1 368 2 0 1 37 2 112 1 298 1 76 1 179 1 198 1 182 2 145 1 
214 2 293 1 368 4 81 2 0 1 37 2 296 1 112 1 298 1 76 1 142 1 77 1 194 1 179 1 198 1 182 2 145 1 
293 3 214 2 368 3 81 2 0 3 37 1 112 3 298 1 219 1 76 3 289 1 27 1 272 1 273 1 77 1 198 1 182 6 
293 5 214 12 368 34 81 18 0 5 160 3 37 16 296 3 112 5 298 1 219 3 44 1 273 3 272 1 27 2 142 3 194 5 250 2 198 5 145 5 375 4 76 5 289 1 235 1 207 1 318 1 77 7 179 3 238 1 290 1 59 1 61 1 291 1 182 10 
104 1 185 1 153 1 70 1 269 1 348 1 60 1 
185 1 308 1 269 1 104 1 313 1 118 1 221 1 153 1 70 1 224 1 60 1 348 1 
36 1 122 1 217 1 352 1 99 1 195 1 169 1 370 1 175 1 310 1 25 1 
121 1 36 1 122 1 185 2 99 1 370 1 175 1 269 1 358 1 25 1 105 1 104 2 220 1 236 1 90 1 195 1 169 1 348 1 
36 1 185 2 65 1 370 1 67 1 269 1 25 1 220 1 167 1 90 2 195 1 168 1 169 3 121 1 122 1 175 2 358 1 311 1 104 2 105 1 258 1 236 2 348 2 
36 2 333 1 185 2 65 1 370 2 67 1 269 1 25 1 167 1 90 2 195 2 168 1 169 3 121 1 122 1 175 2 358 1 311 1 104 2 105 1 258 1 236 2 267 1 348 2 
1 1 36 3 333 1 111 1 65 1 370 3 25 1 336 1 115 1 372 1 195 3 168 1 169 4 341 2 122 1 53 1 99 1 201 1 342 1 175 1 258 1 362 2 236 1 
1 1 36 3 122 1 333 1 111 1 53 1 99 1 65 1 201 1 370 3 175 1 137 1 25 1 336 1 362 2 258 1 236 1 372 1 168 1 195 3 169 4 341 2 
183 1 36 1 122 1 195 1 370 1 25 1 
20 1 183 1 36 7 122 2 186 1 369 1 99 2 370 6 175 2 25 3 233 1 75 1 316 1 139 1 236 1 260 1 301 1 195 7 169 3 196 1 325 1 
293 2 0 2 81 3 36 1 37 3 185 2 190 1 44 1 194 1 90 1 195 1 301 1 92 2 47 1 250 1 145 1 358 1 104 2 105 1 57 1 261 1 214 2 157 2 368 6 23 1 112 2 370 1 371 1 269 2 166 1 25 1 219 1 220 1 273 1 169 1 170 1 121 1 122 1 30 1 175 1 76 2 235 1 236 1 77 2 238 1 348 1 182 4 
1 1 36 1 111 1 370 1 137 1 165 1 336 2 116 2 89 2 372 1 195 1 169 2 93 1 223 1 120 1 197 1 341 3 252 2 307 1 53 1 99 1 201 1 172 1 127 1 231 1 362 3 208 2 266 1 
183 1 36 2 122 1 53 1 370 2 175 1 25 2 236 1 301 1 195 2 169 2 264 1 196 1 
36 4 122 1 333 1 217 1 99 1 370 4 175 1 25 1 141 1 352 1 195 4 301 1 169 1 
36 2 122 1 369 1 189 1 370 2 126 1 175 1 25 2 315 1 139 1 258 1 236 1 195 2 169 1 
79 1 96 1 331 1 36 1 122 1 99 1 91 1 195 1 370 1 25 1 
233 1 36 2 122 1 154 1 195 2 301 1 169 1 370 2 175 1 325 1 25 1 
20 1 36 5 122 2 217 1 99 1 370 4 175 2 25 2 141 1 258 1 352 1 260 1 195 5 301 1 169 3 325 1 
50 1 36 5 122 2 217 1 99 1 370 4 175 2 25 2 141 1 258 1 352 1 260 1 195 5 301 1 169 3 325 1 
121 1 36 1 122 1 185 2 99 1 370 1 175 1 269 1 358 1 25 1 105 1 104 2 236 1 90 1 195 1 169 1 348 1 267 1 
36 1 122 1 369 1 370 1 175 1 25 2 75 1 139 1 258 1 236 1 195 1 169 1 196 1 
287 1 74 1 16 1 269 1 95 1 
49 1 21 1 1 1 111 1 74 2 201 1 67 1 172 1 269 1 229 1 311 1 287 1 167 1 362 2 248 1 16 2 155 1 341 2 95 2 
287 1 104 1 26 1 185 1 16 1 322 1 17 1 348 1 95 1 
287 1 49 1 229 1 
337 1 340 1 131 1 310 1 
337 1 227 1 321 1 163 1 284 1 340 1 131 1 
28 1 321 1 14 1 
280 1 227 1 284 1 163 3 146 2 337 1 321 3 340 1 181 1 131 1 355 1 48 1 
337 1 192 1 227 1 321 2 163 2 284 1 340 1 131 1 232 1 
79 1 96 1 227 1 284 1 163 1 193 1 130 1 321 1 340 1 181 1 19 1 
337 1 227 1 321 1 163 1 284 1 340 1 181 1 
337 2 227 1 321 1 163 1 284 1 131 1 181 1 
227 2 136 1 282 1 284 2 163 2 337 1 321 2 340 1 9 1 181 1 
294 1 159 1 227 1 350 1 284 1 163 3 337 1 192 2 321 3 340 2 131 1 181 1 19 1 
79 1 331 1 96 2 227 1 82 1 284 1 163 2 337 1 192 1 56 1 130 1 321 2 340 1 131 1 181 1 
294 1 227 2 284 2 163 4 100 1 232 1 337 1 192 2 321 4 340 2 131 1 181 1 19 1 
337 1 227 1 321 1 163 1 284 1 340 1 131 1 181 1 
294 1 227 1 146 1 163 4 284 1 337 2 192 2 129 1 321 4 340 3 131 2 48 1 355 1 19 1 
227 1 284 1 163 2 164 1 337 1 205 1 192 1 365 1 321 2 340 1 181 1 131 1 
227 1 3 1 284 1 163 3 146 2 337 1 321 3 340 1 181 1 131 1 355 1 48 2 
110 1 222 1 340 2 346 2 
227 1 321 1 163 1 284 1 176 1 181 1 
337 1 192 1 227 1 350 1 321 2 163 2 284 1 340 1 131 1 181 1 
377 1 
337 1 227 1 321 1 163 1 284 1 340 1 131 1 181 1 
227 1 350 1 284 1 163 3 146 1 192 1 337 1 321 3 340 1 181 1 131 1 
294 1 129 1 340 1 19 1 
337 1 340 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 239 342 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 239 342 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 239 342 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 239 342 301 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 2 357 3 124 1 200 2 128 1 129 1 339 1 132 1 268 2 119 1 353 3 205 1 246 1 
248 1 55 1 192 2 4 1 76 2 144 1 119 1 353 9 261 1 122 1 235 1 83 2 357 9 358 1 359 1 48 2 124 1 85 1 200 5 128 3 129 1 339 2 224 2 132 1 268 2 205 6 246 4 166 1 
248 1 55 1 192 2 4 1 76 2 144 1 119 1 353 9 261 1 122 1 235 1 83 2 357 9 358 1 359 1 48 2 124 1 85 1 200 5 128 3 129 1 339 2 224 2 132 1 268 2 205 6 246 4 166 1 
248 1 55 1 192 2 4 1 76 2 144 1 119 1 353 10 261 1 122 1 235 1 83 2 357 10 358 1 359 1 48 2 124 1 85 1 200 6 128 4 129 1 339 2 224 2 132 1 268 2 205 7 246 5 166 1 
55 1 192 2 4 1 76 2 144 1 119 1 353 7 261 1 122 1 235 1 83 2 357 7 358 1 359 1 48 1 124 1 85 1 200 4 128 2 129 1 339 2 224 2 132 1 268 2 205 4 246 3 166 1 
248 1 83 1 235 1 357 4 48 2 200 3 192 1 4 1 128 1 129 1 76 1 224 1 132 1 268 1 119 1 353 4 205 3 246 2 
83 1 357 2 2 1 85 1 361 1 200 1 192 1 129 1 76 1 222 1 339 1 132 1 144 1 268 1 119 1 353 2 
248 1 235 1 83 2 357 9 305 1 359 1 48 2 124 1 55 1 179 1 200 5 192 1 4 1 128 3 129 1 76 1 339 1 224 1 132 1 268 2 119 1 353 9 205 7 246 4 
248 1 235 1 83 2 357 9 305 1 359 1 48 2 124 1 55 1 179 1 200 5 192 1 4 1 128 3 129 1 76 1 339 1 224 1 132 1 268 2 119 1 353 9 205 7 246 4 
217 1 292 1 275 1 337 1 49 1 141 1 18 1 37 1 194 1 203 1 213 1 374 1 177 1 378 1 
90 1 
267 1 241 1 292 2 90 1 275 1 49 2 238 1 272 1 
53 1 292 5 275 2 49 5 199 2 238 1 57 1 267 1 90 1 340 1 92 1 70 1 43 1 214 1 44 2 71 1 272 2 321 2 137 1 
233 1 90 1 238 1 
90 1 145 1 140 2 
203 2 337 2 213 2 141 2 18 1 152 1 378 2 37 2 
276 1 327 1 139 1 231 1 190 1 141 2 74 2 191 1 34 1 117 1 37 2 259 1 100 1 211 2 9 1 212 1 42 1 121 1 120 1 213 2 333 1 152 1 302 2 262 1 104 1 337 3 125 1 106 2 18 1 313 1 203 2 136 1 242 1 317 1 376 1 320 2 378 3 
217 1 194 1 203 1 337 1 213 1 141 1 18 1 177 1 378 1 37 1 
12 1 292 1 337 1 49 1 309 1 238 1 172 1 90 1 290 1 213 1 335 1 378 1 177 1 187 1 
12 1 292 2 337 1 49 2 141 1 309 1 238 1 37 1 203 1 90 1 290 1 213 1 378 1 177 1 187 1 
292 1 275 1 49 1 272 1 252 1 
267 1 292 2 90 1 275 1 16 1 49 2 238 1 272 1 
292 1 49 1 272 1 
337 2 351 1 141 1 37 1 203 1 213 2 79 1 152 2 378 2 
293 1 99 1 185 1 
104 1 276 1 337 1 125 1 139 1 231 1 74 1 106 1 191 1 266 1 9 1 317 1 152 1 302 1 376 1 378 1 
233 1 152 1 
104 1 276 1 125 1 337 2 230 1 231 1 139 1 141 1 74 1 191 1 106 1 203 1 99 1 9 1 317 1 213 1 302 1 376 1 45 1 378 2 
337 5 230 2 141 4 115 1 37 1 296 1 203 4 213 5 79 1 335 1 152 1 112 1 378 5 45 1 
217 1 203 2 96 1 337 2 213 2 141 2 177 1 378 2 
203 3 337 3 230 1 213 3 141 3 152 1 378 3 37 1 
217 1 203 1 337 1 213 1 141 1 177 1 378 1 
203 1 337 1 351 1 213 1 141 1 79 1 177 1 378 1 37 1 
292 1 276 1 327 1 230 1 231 1 139 1 190 1 141 3 74 1 191 1 282 1 37 2 259 1 100 1 211 2 9 1 212 1 121 1 120 1 213 3 79 1 152 1 302 1 262 1 45 1 177 1 12 1 104 1 125 1 337 4 49 1 309 1 106 1 18 1 88 1 203 3 136 1 242 1 317 1 290 1 376 1 320 1 378 4 187 1 
203 1 337 2 230 1 213 2 141 1 152 1 335 1 112 1 378 2 
12 1 292 1 337 3 49 1 230 2 141 3 309 1 88 1 37 1 142 1 203 3 90 1 290 1 213 3 79 1 177 1 45 1 378 3 187 1 
293 1 337 2 230 1 141 2 37 1 203 2 99 1 213 2 79 1 378 2 
104 1 276 1 337 1 125 1 139 1 231 1 74 1 106 1 191 1 9 1 317 1 152 1 302 1 376 1 378 1 
104 1 276 1 337 1 125 1 139 1 231 1 74 1 106 1 329 1 9 1 152 1 302 1 150 1 376 1 378 1 
293 2 325 1 327 1 31 1 190 1 97 1 116 1 256 1 99 2 211 2 121 1 120 1 355 1 262 2 178 1 66 1 130 1 313 2 315 1 91 1 136 1 242 1 185 2 320 4 
203 1 96 1 337 1 213 1 141 1 309 1 177 1 378 1 
322 1 372 1 87 1 
343 1 277 1 372 2 86 1 87 2 197 1 
372 1 87 1 
372 1 87 1 
86 1 197 1 
86 1 197 1 
86 1 197 1 
297 1 372 1 87 1 
297 1 372 1 87 1 
297 1 372 1 87 1 
372 1 265 1 87 1 
372 1 265 1 87 1 
372 1 265 1 87 1 
322 1 0 1 169 1 292 1 95 1 337 2 189 1 49 1 237 1 220 1 141 2 87 1 159 1 131 1 331 1 203 2 78 1 372 1 319 1 213 2 149 1 152 1 379 1 378 2 
0 1 13 2 292 2 95 3 277 1 49 2 220 2 193 1 87 2 131 2 254 1 160 1 90 1 78 2 372 2 284 1 22 1 149 2 25 1 
224 1 192 2 215 1 82 2 222 1 
224 1 192 1 76 1 
192 1 76 1 222 1 
224 2 192 3 215 1 59 1 82 1 222 1 
224 1 170 1 192 2 215 1 82 1 222 1 
292 5 324 1 169 1 275 4 140 3 116 1 145 1 43 1 44 1 66 1 49 5 199 1 50 1 238 1 366 2 159 1 158 1 68 1 225 1 133 2 267 1 135 2 90 2 315 1 91 1 70 2 319 1 228 1 272 1 321 1 347 1 137 3 
169 4 292 9 324 2 275 7 140 9 116 3 252 5 40 1 145 3 43 1 214 1 44 2 236 5 264 1 105 1 66 3 49 9 199 2 365 1 238 1 50 1 366 6 311 1 68 2 225 3 133 6 267 1 90 5 315 3 91 3 52 1 70 6 272 6 321 2 137 8 
292 3 324 1 169 1 275 2 140 4 116 1 145 2 214 1 44 1 66 1 49 3 199 1 238 1 366 2 158 1 68 1 225 1 133 2 90 3 135 1 315 1 91 1 70 2 228 1 321 1 137 3 
292 4 324 1 169 2 275 3 140 7 116 2 145 3 214 1 44 1 264 1 66 2 49 4 199 1 238 1 366 4 311 1 158 1 68 1 225 2 133 4 90 4 135 2 315 2 91 2 52 1 70 4 228 1 321 1 137 5 
173 1 
233 1 9 1 310 1 
9 1 346 1 
104 1 276 1 9 1 
103 1 9 1 
276 1 9 1 
104 1 198 1 276 1 9 3 310 2 46 1 
54 2 31 4 56 2 171 1 116 1 69 2 256 2 209 1 313 3 315 1 298 1 369 1 352 1 244 1 262 3 377 1 320 6 303 1 
54 4 327 1 31 7 56 1 278 1 171 1 116 3 256 3 77 3 211 2 121 1 120 1 262 11 303 1 285 1 66 3 180 4 221 1 157 1 69 1 202 1 225 3 51 1 313 11 315 3 91 3 136 1 244 2 227 1 320 22 377 1 
54 1 327 2 31 4 56 2 171 1 116 1 255 1 256 3 209 1 298 1 211 4 352 1 121 2 120 2 262 4 286 1 69 2 313 4 315 1 136 2 244 1 227 1 320 8 377 1 
54 2 31 4 56 2 171 1 116 1 69 2 256 2 313 3 209 1 315 1 298 1 352 1 244 1 262 3 377 1 320 6 303 1 
54 2 31 4 56 2 171 1 116 1 69 2 256 2 313 3 209 1 315 1 298 1 352 1 244 1 262 3 377 1 320 6 303 1 
218 1 83 1 357 1 276 1 125 1 208 1 139 1 74 1 106 1 289 1 253 1 6 2 339 2 7 2 110 1 268 1 9 1 353 1 111 2 302 1 376 1 11 1 186 1 
326 1 30 1 139 1 74 1 192 2 76 1 59 1 6 1 7 1 119 1 353 1 300 1 302 1 263 1 83 1 357 1 125 1 106 1 222 1 339 1 224 1 162 1 268 1 21 1 93 1 111 1 
326 1 30 1 139 1 74 1 192 2 76 1 59 1 6 1 7 1 119 1 353 2 300 1 302 1 263 1 83 1 357 2 125 1 200 1 106 1 129 1 222 1 339 1 224 1 132 1 268 1 21 1 371 1 93 1 205 1 111 1 
326 1 139 1 74 1 192 2 76 1 59 1 6 1 7 1 353 3 300 1 302 1 263 1 83 1 357 3 125 1 200 1 363 1 106 1 129 1 222 1 339 1 224 1 132 1 162 1 268 1 21 1 93 1 111 1 205 2 186 1 
326 1 139 1 74 1 192 2 59 1 76 1 6 1 7 1 353 2 300 1 302 1 357 2 125 1 200 1 363 1 106 1 129 1 222 1 339 1 224 1 132 1 162 1 21 1 111 1 205 2 
35 1 
324 1 276 1 139 1 140 2 3 2 232 2 332 1 9 1 145 2 335 1 64 4 102 1 12 1 337 1 199 1 156 1 106 2 238 1 107 1 67 1 70 2 290 1 206 1 345 2 168 1 292 5 74 2 253 1 172 1 210 2 118 2 43 1 213 1 44 1 302 2 177 1 218 1 306 1 125 1 362 2 49 5 308 1 309 1 367 1 312 2 267 3 90 2 226 1 271 1 272 6 376 2 321 1 378 1 137 2 187 1 
168 1 12 1 306 1 292 3 337 1 49 3 308 1 156 1 309 1 172 1 312 1 267 1 241 1 290 1 213 1 206 1 272 2 335 1 64 2 177 1 378 1 187 1 
168 1 292 3 232 1 172 1 213 1 335 1 177 1 64 3 306 1 12 1 337 1 49 3 308 1 156 1 309 1 238 1 241 1 267 1 90 1 290 1 206 1 272 1 378 1 187 1 
168 1 292 3 232 1 172 1 118 1 213 1 335 1 177 1 64 3 306 1 12 1 337 1 49 3 308 1 156 1 309 1 238 1 312 1 267 1 241 1 90 1 290 1 206 1 272 2 378 1 187 1 
168 1 292 5 295 1 3 2 232 4 172 1 210 2 118 4 145 2 43 1 213 1 44 1 354 1 335 1 195 1 177 1 64 6 306 1 12 1 360 1 337 1 362 2 49 5 199 1 308 1 156 1 309 1 238 5 367 1 312 4 267 3 241 1 90 5 271 1 270 1 70 1 290 1 206 1 345 2 272 7 321 1 378 1 137 1 187 1 
140 2 3 2 232 2 145 2 335 1 64 4 12 1 337 1 199 1 156 1 238 1 290 1 70 1 206 1 345 2 168 1 292 4 172 1 210 2 118 2 43 1 213 1 44 1 177 1 306 1 49 4 362 2 308 1 309 1 367 1 312 2 267 2 90 2 226 1 271 1 272 4 378 1 321 1 187 1 137 1 
168 1 292 4 3 2 232 2 172 1 210 2 118 2 145 2 43 1 213 1 44 1 335 1 354 1 195 1 177 1 64 4 306 1 12 1 337 1 360 1 362 2 49 4 308 1 199 1 156 1 309 1 238 1 367 1 312 2 267 2 90 1 271 1 70 1 290 1 206 1 272 4 345 2 321 1 378 1 137 1 187 1 
168 1 292 4 3 2 232 2 172 1 210 2 118 2 145 2 43 1 213 1 44 1 335 1 354 1 195 1 177 1 64 4 306 1 12 1 337 1 360 1 362 2 49 4 308 1 199 1 156 1 309 1 238 1 367 1 312 2 267 2 90 1 271 1 70 1 290 1 206 1 272 4 345 2 321 1 378 1 137 1 187 1 
28 1 168 1 292 4 140 2 3 2 281 2 232 2 172 1 210 2 118 2 43 1 213 1 334 2 44 1 335 1 195 1 177 1 64 4 306 1 12 1 337 1 49 4 308 1 199 1 156 1 309 1 238 1 19 1 312 2 182 1 267 2 90 1 271 1 70 1 290 1 206 1 272 4 321 1 378 1 137 1 187 1 
168 1 292 4 3 2 232 3 172 1 210 2 118 3 145 2 43 1 213 1 44 1 354 1 335 1 195 1 177 1 64 5 306 1 12 1 337 1 360 1 362 2 49 4 199 1 308 1 156 1 309 1 238 1 367 1 312 3 267 2 90 1 271 1 270 1 70 1 290 1 206 1 345 2 272 5 321 1 378 1 137 1 187 1 
168 1 292 4 3 2 232 3 172 1 210 2 118 3 145 2 43 1 213 1 44 1 354 1 335 1 195 1 177 1 64 5 306 1 12 1 337 1 360 1 362 2 49 4 199 1 308 1 156 1 309 1 238 1 367 1 312 3 267 2 90 1 271 1 270 1 70 1 290 1 206 1 345 2 272 5 321 1 378 1 137 1 187 1 
168 1 28 1 292 4 140 2 3 2 281 2 232 2 172 1 210 2 118 2 43 1 213 1 334 2 44 1 335 1 177 1 64 4 306 1 12 1 337 1 49 4 199 1 308 1 156 1 309 1 238 1 312 2 267 2 90 1 226 1 271 1 70 1 290 1 206 1 272 4 321 1 378 1 137 1 187 1 
276 2 230 1 327 2 73 1 139 2 141 1 74 8 190 2 34 2 58 1 253 1 9 3 211 4 100 1 176 1 213 1 121 2 120 2 101 1 333 1 302 7 262 1 218 1 337 1 125 2 106 8 287 1 130 1 162 1 313 1 203 1 269 1 371 1 136 2 242 2 23 1 376 2 378 1 320 2 
293 1 327 1 31 1 190 1 141 1 116 1 37 1 256 1 99 1 211 2 121 1 120 1 213 1 79 1 262 2 47 1 337 1 66 1 225 1 314 1 313 1 203 1 315 1 91 1 136 1 242 1 185 1 378 1 320 3 
327 1 31 2 190 1 56 2 116 1 130 1 69 2 256 2 313 2 233 1 209 1 315 1 298 1 211 2 242 1 136 1 352 1 120 1 121 1 152 2 262 3 320 5 
293 4 54 1 327 2 31 2 190 1 278 1 116 1 256 1 99 11 77 3 100 1 211 4 121 2 120 2 333 1 152 1 262 6 307 1 338 1 219 1 66 1 221 1 180 3 89 1 225 2 314 1 313 8 315 2 91 2 136 2 242 2 185 11 320 14 
276 1 293 1 230 1 327 1 231 1 139 1 74 1 190 1 141 1 191 1 251 1 9 1 211 2 100 1 120 1 213 1 121 1 333 1 152 1 302 1 262 1 45 1 104 1 125 1 337 2 106 1 266 1 314 1 313 1 203 1 370 1 317 1 136 1 242 1 24 1 376 1 378 2 320 2 
276 2 54 4 327 3 230 1 139 2 231 2 141 1 190 3 191 2 56 2 61 1 99 6 100 1 9 2 333 1 152 2 65 1 104 2 14 2 337 3 66 2 106 3 69 2 162 1 203 1 242 3 344 2 293 6 32 2 31 8 74 3 250 2 116 3 256 4 209 1 259 2 298 1 211 6 352 1 121 3 213 1 120 3 302 3 262 10 45 1 125 2 225 2 314 1 313 9 315 3 184 1 91 2 136 3 317 2 185 6 376 1 378 3 320 19 
293 1 325 1 54 1 327 1 31 1 190 1 130 1 313 2 99 1 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 1 320 2 
178 1 293 1 66 1 327 1 31 1 190 1 116 1 130 1 256 1 99 1 211 2 242 1 136 1 120 1 121 1 185 1 262 2 320 2 
293 2 54 1 66 1 327 1 31 2 190 1 116 1 130 1 256 1 225 1 313 2 99 2 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 2 262 2 320 4 
293 1 325 1 54 1 327 1 31 1 190 1 287 1 313 2 99 1 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 1 320 2 
178 1 293 1 66 1 327 1 31 1 190 1 287 1 116 1 256 1 99 1 211 2 242 1 136 1 120 1 121 1 185 1 262 2 320 2 
293 2 54 1 66 1 327 1 31 2 190 1 287 1 116 1 256 1 225 1 313 2 99 2 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 2 262 2 320 4 
293 2 54 1 66 1 327 1 31 2 190 1 116 1 256 1 225 1 313 2 99 2 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 2 262 2 320 4 
276 1 327 1 231 1 139 1 74 1 190 1 191 1 259 1 9 1 211 2 100 1 120 1 121 1 333 1 152 1 302 1 262 1 104 1 125 1 337 1 106 1 313 1 317 1 242 1 136 1 376 1 320 2 378 1 
276 1 327 1 231 1 139 1 74 1 190 1 329 1 9 1 211 2 100 1 120 1 121 1 333 1 152 1 150 1 302 1 262 1 154 1 104 1 125 1 337 1 106 1 313 1 242 1 136 1 376 1 320 2 378 1 
293 2 54 1 66 1 327 1 31 2 190 1 116 1 256 1 225 1 314 1 313 2 99 2 315 1 211 2 91 1 242 1 136 1 120 1 121 1 185 2 262 2 320 4 
293 2 276 1 54 1 327 1 31 2 231 1 139 1 32 1 74 1 190 1 191 1 116 1 256 1 259 1 99 2 9 1 211 2 120 1 121 1 302 1 262 2 104 1 125 1 337 1 66 1 106 1 225 1 313 2 315 1 91 1 371 1 317 1 242 1 136 1 185 2 320 4 378 1 
207 1 293 1 54 1 327 1 31 1 190 1 141 1 116 1 37 1 99 1 211 2 121 1 120 1 213 1 79 1 262 1 337 1 66 1 225 1 314 1 313 2 203 1 315 1 91 1 136 1 242 1 185 1 378 1 320 3 
229 1 54 3 327 2 138 2 31 6 278 1 116 3 255 1 256 3 77 1 211 4 121 2 120 2 260 1 63 1 301 1 262 10 196 2 304 1 66 3 180 2 221 1 225 3 313 9 315 3 342 1 91 3 136 2 245 1 320 19 
114 1 249 1 327 2 31 1 138 2 116 1 255 1 256 1 77 2 211 4 121 2 120 2 63 2 301 1 262 8 66 1 221 2 180 2 239 1 225 1 313 6 315 1 342 2 91 1 136 2 227 1 245 1 320 14 
114 1 249 1 54 2 327 3 328 1 138 3 31 4 278 1 116 3 255 1 256 2 77 3 211 6 121 3 120 3 260 1 63 2 301 1 262 15 196 1 304 1 66 3 239 1 180 4 221 3 225 3 313 12 315 3 342 1 91 3 136 3 227 1 245 1 320 27 
114 1 249 1 54 2 327 3 328 1 138 3 31 5 278 1 116 3 255 1 256 3 77 3 211 6 121 3 120 3 260 1 63 2 301 1 262 15 196 1 304 1 66 3 239 1 180 4 221 3 225 3 313 12 315 3 342 1 91 3 136 3 227 1 245 1 320 27 
114 1 249 1 54 5 294 1 327 2 138 2 31 12 56 2 278 2 116 6 255 1 256 7 209 1 298 1 77 4 211 4 352 1 121 2 120 2 63 1 301 1 262 20 155 1 66 5 239 1 180 4 221 2 69 2 89 2 225 6 313 22 315 7 342 1 91 6 136 2 227 1 245 1 320 42 
131 1 277 1 78 1 373 1 220 1 372 1 149 1 193 1 87 1 25 1 
322 1 331 1 
131 1 134 1 368 1 78 1 220 1 372 1 149 1 87 1 375 1 
161 1 297 1 
343 1 265 1 148 1 
0 1 13 1 292 1 95 2 277 1 49 1 220 1 193 1 87 1 131 1 254 1 160 1 90 1 78 1 372 1 22 1 149 1 25 1 
0 1 13 1 292 1 95 2 277 1 49 1 220 1 193 1 87 1 131 1 254 1 160 1 90 1 78 1 372 1 22 1 149 1 25 1 
0 1 13 1 292 1 95 2 277 1 49 1 220 1 193 1 87 1 131 1 254 1 160 1 90 1 78 1 372 1 22 1 149 1 25 1 
161 1 297 1 343 1 
161 1 297 1 343 1 
265 1 148 1 
343 1 265 1 148 1 
189 1 237 1 
322 1 29 1 292 1 95 1 169 1 275 1 189 1 141 2 254 1 331 1 78 1 213 2 149 1 152 1 13 1 337 2 49 1 220 1 237 1 87 1 159 1 131 1 203 2 372 1 319 1 378 2 379 1 
113 1 276 1 327 1 139 1 74 2 190 1 34 2 9 1 211 2 100 1 176 1 213 2 120 1 121 1 333 1 302 2 262 1 84 1 125 1 337 2 106 2 20 1 223 1 314 1 313 1 269 1 136 1 242 1 26 1 378 2 320 2 
274 1 218 1 276 1 125 1 139 1 74 1 106 1 253 1 7 1 110 1 9 1 302 1 376 1 27 1 
274 1 125 1 139 1 74 1 192 2 106 1 33 1 76 1 59 1 222 1 224 1 162 1 7 1 316 1 21 1 93 1 300 1 302 1 
274 1 125 1 139 1 74 2 192 2 106 2 33 1 76 1 59 1 222 1 224 1 162 1 7 1 316 1 21 1 371 1 93 1 300 1 302 2 
125 1 139 1 74 1 192 2 106 1 76 1 59 1 181 1 222 1 224 1 162 1 7 1 316 1 21 1 93 1 300 1 302 1 
41 1 
199 1 238 1 340 1 90 1 92 1 43 1 70 1 44 1 321 1 137 1 
14 1 15 2 66 2 140 10 366 5 116 2 225 2 133 5 90 5 315 2 91 2 70 5 145 5 151 1 137 5 
292 1 267 1 90 1 49 1 238 1 272 1 
324 2 292 3 276 1 139 1 74 4 283 1 253 1 8 1 9 1 43 1 147 2 214 1 44 2 302 4 356 1 218 1 102 1 125 1 49 3 199 2 106 4 107 1 67 2 267 2 70 2 272 4 376 2 321 2 137 2 
233 1 90 1 340 1 92 1 70 1 238 1 137 1 
292 1 140 1 145 1 43 1 44 1 362 1 49 1 199 1 238 1 367 1 267 1 90 2 70 1 345 1 272 1 321 1 137 1 
323 2 188 1 324 2 276 3 139 4 140 12 9 10 145 6 147 1 234 2 151 2 104 3 198 1 103 2 14 2 15 2 66 2 199 4 106 3 238 2 67 1 340 1 290 2 70 8 164 1 346 3 247 2 292 5 74 3 116 2 175 2 43 4 44 4 302 3 80 2 356 1 123 2 125 3 49 5 310 2 366 6 225 2 267 3 133 6 90 8 315 2 92 1 91 2 371 1 272 5 376 1 321 4 273 1 137 9 
114 1 292 1 249 1 140 6 116 1 77 1 43 2 145 3 44 2 15 1 66 1 49 1 199 2 127 1 180 1 221 1 239 1 238 1 366 4 225 1 267 1 133 4 90 4 315 1 91 1 70 2 272 1 321 2 137 5 
292 1 141 1 56 1 116 1 37 1 194 1 39 1 298 1 43 1 213 1 44 1 151 1 354 1 177 1 217 1 337 1 15 2 49 1 199 1 18 1 69 1 203 1 315 2 70 2 374 1 378 1 321 1 137 2 
276 1 327 1 139 1 231 1 74 1 141 2 190 1 191 1 37 2 259 1 100 1 211 2 212 1 9 1 121 1 120 1 213 2 152 1 302 1 262 1 104 1 337 3 125 1 106 1 18 1 203 2 317 1 242 1 136 1 376 1 320 1 378 3 
324 1 199 1 140 4 238 2 171 1 366 2 67 1 133 2 90 4 145 2 70 2 43 1 44 1 321 1 137 1 
189 1 220 1 149 1 25 1 216 1 
17 1 220 1 149 1 
17 1 220 1 149 1 
17 1 220 1 149 1 
220 1 149 1 108 1 
220 1 149 1 108 1 
220 1 149 1 108 1 
220 1 149 1 
372 1 87 1 
31 2 56 2 116 1 69 2 256 2 313 2 39 1 298 1 315 1 262 3 320 5 
54 1 327 1 31 1 255 1 313 2 315 1 211 2 91 1 136 1 120 1 121 1 320 2 
54 1 66 1 327 1 31 2 116 1 255 1 256 1 225 1 313 2 315 1 211 2 91 1 136 1 120 1 121 1 262 2 320 4 
304 1 54 1 327 3 31 2 56 1 69 1 255 1 256 1 313 1 211 6 136 3 227 1 120 3 121 3 94 1 262 2 320 3 
54 6 327 5 31 12 56 3 278 1 116 5 255 1 256 6 209 1 298 2 77 3 211 10 352 1 121 5 120 5 262 19 285 1 304 1 66 3 180 4 221 1 157 1 69 3 225 3 51 1 313 16 315 5 91 3 136 5 227 2 165 1 94 1 320 35 
54 2 327 2 31 4 56 2 116 1 69 2 256 2 313 4 209 1 315 1 298 1 211 4 136 2 352 1 120 2 121 2 227 1 262 5 320 9 
256 2 313 2 209 1 233 1 315 1 298 1 31 2 352 1 56 2 262 3 116 1 320 5 69 2 
54 1 66 1 327 1 31 2 116 1 256 1 225 1 313 2 315 1 211 2 91 1 136 1 120 1 121 1 165 1 262 2 320 4 
54 1 66 1 31 2 221 1 180 2 278 1 116 1 256 1 225 1 313 3 77 1 315 1 91 1 262 4 320 7 
54 4 327 2 31 9 56 3 278 1 116 3 256 5 209 1 298 1 77 2 211 4 352 1 120 2 121 2 262 12 307 1 66 2 180 2 69 3 89 1 225 2 313 10 315 3 91 2 136 2 227 2 94 1 320 22 
180 1 262 1 320 1 
313 1 77 1 320 1 
14 1 54 1 66 1 327 1 31 3 116 1 225 1 256 2 313 3 315 1 211 2 91 1 136 1 121 1 120 1 165 1 262 3 320 6 
114 1 155 1 249 1 54 1 66 2 294 1 327 1 31 2 239 1 221 1 180 1 116 2 255 1 256 1 225 2 313 6 315 2 77 1 91 2 211 2 136 1 120 1 121 1 262 6 320 12 
31 1 56 1 116 1 69 1 256 1 313 2 298 1 315 1 262 2 320 4 
54 1 327 1 31 2 56 1 69 1 256 1 313 1 209 1 211 2 136 1 352 1 227 1 120 1 121 1 94 1 262 2 320 3 
255 1 313 1 77 1 211 2 327 1 136 1 121 1 120 1 180 1 221 1 239 1 262 1 320 2 
54 1 327 2 31 1 278 1 239 1 221 1 180 2 255 1 225 1 313 3 315 1 77 1 91 1 211 4 136 2 120 2 121 2 165 1 262 2 320 5 
114 1 249 1 66 1 327 2 31 1 239 1 221 1 180 1 116 1 255 1 256 1 225 1 313 3 315 1 77 1 91 1 211 4 136 2 227 1 120 2 121 2 262 5 320 8 
114 1 249 1 54 1 327 2 294 1 31 2 116 1 255 1 256 1 77 1 211 4 121 2 120 2 262 4 155 1 66 1 180 1 221 1 239 1 225 2 313 7 315 2 91 2 136 2 227 1 320 11 
255 1 313 1 77 1 211 2 327 1 136 1 121 1 120 1 180 1 221 1 239 1 262 1 320 2 
114 1 155 1 249 1 54 1 66 2 294 1 327 1 31 2 239 1 221 1 180 1 116 2 255 1 256 1 225 2 313 6 315 2 77 1 91 2 211 2 136 1 120 1 121 1 262 6 320 12 
114 1 249 1 66 1 327 3 31 1 239 1 221 1 180 1 116 1 255 1 256 1 225 1 313 3 315 1 77 1 91 1 211 6 136 3 227 1 120 3 121 3 165 1 262 5 320 8 
304 1 114 1 249 1 66 1 327 3 31 2 239 1 221 1 180 1 116 1 255 1 256 2 225 1 313 3 315 1 77 1 91 1 211 6 136 3 227 1 120 3 121 3 262 5 320 8 
54 2 31 4 56 2 116 1 69 2 256 2 209 2 313 3 298 1 315 1 352 1 262 4 320 7 
304 1 114 1 249 1 66 1 327 3 31 1 239 1 221 1 180 1 116 1 255 1 256 1 225 1 313 3 315 1 77 1 91 1 211 6 136 3 227 1 120 3 121 3 262 5 320 8 
337 1 213 1 152 1 335 1 378 1 112 1 240 1 
337 1 349 1 279 1 240 1 38 1 146 1 213 1 152 1 336 1 335 1 112 1 378 1 
218 1 276 1 125 1 139 1 364 1 74 4 106 4 253 1 341 1 9 1 371 1 302 4 376 1 
65 1 104 1 276 1 125 1 139 2 74 2 350 1 106 2 98 1 9 1 299 1 147 1 302 2 167 1 
125 1 139 1 74 1 192 1 300 1 106 1 302 1 376 1 76 1 222 1 
20 1 162 1 276 1 125 1 269 1 9 1 371 1 139 1 74 2 106 2 302 2 
218 1 276 2 125 2 139 2 364 1 74 5 106 5 58 1 253 1 269 1 9 3 371 1 147 1 23 1 302 4 376 1 
218 1 276 2 125 2 139 2 364 1 74 5 106 5 253 1 258 1 269 1 9 3 371 1 147 1 23 1 302 4 376 1 
218 1 233 1 276 1 125 1 9 1 139 1 74 1 106 1 302 1 376 1 253 1 
104 1 276 1 337 2 125 1 230 1 231 1 139 1 141 1 74 1 106 1 191 1 203 1 9 1 213 1 152 1 302 1 376 1 378 2 
276 2 230 1 139 1 231 1 74 1 141 2 191 1 9 3 147 1 213 2 152 1 302 1 234 1 177 1 12 1 104 2 103 1 125 1 337 2 106 1 309 1 203 1 378 2 
276 2 230 1 139 1 231 1 74 2 141 2 9 3 147 1 213 2 152 1 150 1 302 2 234 1 177 1 12 1 104 2 103 1 125 1 337 2 106 2 309 1 203 1 341 1 378 2 
103 1 104 1 292 2 276 1 125 1 49 2 139 1 74 3 106 3 238 1 310 1 90 1 204 1 341 1 9 4 290 1 147 1 62 1 234 1 302 3 272 1 376 1 346 1 
103 1 104 1 292 2 276 1 125 1 49 2 139 1 74 3 106 3 238 1 310 1 90 1 341 1 9 4 290 1 147 1 234 1 302 3 272 1 376 1 346 1 247 1 
125 1 139 1 73 1 74 1 106 1 302 1 
198 1 104 1 276 2 125 2 73 1 139 3 74 7 350 1 106 7 34 1 58 1 36 1 162 1 269 1 9 3 371 1 299 1 23 1 101 1 302 6 376 2 
276 1 230 1 327 2 31 2 231 1 139 1 32 1 190 2 141 1 74 1 250 1 191 1 56 2 116 1 256 2 209 1 259 1 298 1 9 1 211 4 352 1 120 2 213 1 121 2 152 2 302 1 262 3 104 1 125 1 337 2 106 1 69 2 313 2 314 1 203 1 315 1 371 1 136 2 242 2 317 1 320 5 26 1 378 2 
323 1 292 3 275 1 74 1 9 2 43 2 175 1 44 2 302 1 356 1 123 1 49 3 199 2 106 1 238 1 310 1 267 1 90 1 340 1 92 1 70 1 290 1 272 2 376 1 346 1 321 2 137 1 247 1 
188 1 104 1 198 1 276 1 125 1 9 2 371 1 139 2 73 1 74 2 106 2 310 1 302 2 
104 1 276 1 337 2 125 1 230 1 231 1 139 1 141 1 74 1 106 1 203 1 9 1 213 1 152 1 302 1 150 1 376 1 378 2 
198 1 104 1 276 1 125 1 139 2 74 1 350 1 106 1 36 1 9 1 299 1 147 1 302 1 
348 1 257 1 72 1 183 1 152 1 
348 2 12 1 292 2 72 2 275 1 49 2 126 1 309 1 238 1 88 1 143 1 257 1 90 1 183 2 290 1 318 1 152 1 177 1 187 1 
113 1 223 1 257 1 84 1 72 1 337 1 183 1 213 1 378 1 
143 1 257 1 126 1 
83 1 357 1 132 1 268 1 119 1 200 1 353 1 129 1 
83 1 357 4 1 1 85 1 200 3 288 1 128 1 129 2 132 2 268 1 291 1 353 4 205 2 246 1 
83 1 153 1 357 2 179 1 200 1 129 1 132 1 268 1 119 1 10 1 353 2 205 1 
83 1 357 3 1 2 85 2 200 1 288 1 129 1 132 1 268 1 174 1 119 1 353 3 
200 2 330 2 75 1 109 1 
83 1 357 1 268 1 119 1 353 1 81 1 
83 1 357 2 132 1 359 1 268 1 119 1 200 1 353 2 205 1 129 1 
280 1 
83 1 357 1 132 1 268 1 119 1 200 1 353 1 129 1 
132 1 233 1 200 1 129 1 
83 1 357 1 132 1 268 1 200 1 353 1 129 1 
339 1 357 1 111 1 
83 1 357 3 1 1 85 2 200 1 288 1 129 1 60 1 132 1 268 1 119 1 353 3 
83 1 357 2 132 1 48 1 268 1 200 1 353 2 205 1 129 1 
235 1 83 1 224 1 357 1 268 1 119 1 200 1 353 1 192 1 246 1 76 1 
83 1 357 1 268 1 119 1 200 1 353 1 129 1 
83 1 357 1 132 1 268 1 119 1 353 1 129 2 
83 2 357 2 200 1 129 1 5 1 268 2 163 1 119 1 243 1 353 2 
83 1 357 3 359 1 55 1 200 2 128 1 129 1 132 1 268 1 119 1 353 3 205 2 246 1 
83 1 357 2 200 1 192 2 201 1 129 1 59 1 76 1 222 1 224 1 132 1 268 1 119 1 353 2 205 1 
83 2 248 1 357 4 48 1 200 2 128 1 129 1 132 1 268 2 119 1 353 4 205 2 246 1 
83 1 357 3 132 1 359 1 268 1 85 1 119 1 200 1 353 3 205 1 129 1 
291 1 200 1 128 1 246 1 
200 1 129 1 

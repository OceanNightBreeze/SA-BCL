#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 175 122 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 2 253 1 188 1 329 1 65 1 78 1 330 2 111 1 213 2 18 3 315 1 194 1 82 3 
1 1 253 6 362 2 65 2 313 2 111 3 315 1 94 1 144 1 236 1 369 1 344 1 99 2 188 1 329 1 241 1 78 4 39 1 212 1 374 2 330 2 213 5 270 1 18 9 194 1 353 2 303 1 82 9 
1 1 253 6 362 2 65 2 313 2 111 3 315 1 94 1 144 1 236 1 369 1 344 1 99 2 188 1 329 1 241 1 78 4 39 1 212 1 374 2 330 2 213 5 270 1 18 9 194 1 353 2 303 1 82 9 
1 1 253 7 362 2 65 2 313 2 111 4 315 1 94 1 144 1 236 1 369 1 344 1 99 2 188 1 329 1 241 1 78 5 39 1 212 1 374 2 330 2 213 6 270 1 18 10 194 1 353 2 303 1 82 10 
1 1 253 4 362 2 65 2 313 2 111 2 315 1 94 1 144 1 369 1 344 1 99 2 188 1 329 1 241 1 78 3 39 1 212 1 374 1 330 2 213 4 270 1 18 7 194 1 353 2 303 1 82 7 
99 1 253 3 188 1 329 1 362 1 78 2 212 1 374 2 313 1 111 1 330 1 213 3 18 4 315 1 353 1 144 1 82 4 236 1 
344 1 99 1 188 1 329 1 362 1 65 1 39 1 312 1 213 1 330 1 314 1 18 2 315 1 353 1 82 2 218 1 
253 7 362 1 65 1 335 1 313 1 111 3 315 1 144 1 320 1 236 1 99 2 188 1 329 1 241 1 78 4 212 1 374 2 330 2 213 5 18 9 194 1 353 1 303 1 82 9 
253 7 362 1 65 1 335 1 313 1 111 3 315 1 144 1 320 1 236 1 99 2 188 1 329 1 241 1 78 4 212 1 374 2 330 2 213 5 18 9 194 1 353 1 303 1 82 9 
220 1 307 1 201 1 127 1 181 1 79 1 204 1 45 1 227 1 21 1 186 1 273 1 10 1 60 1 
5 1 
228 1 69 1 21 1 12 1 201 2 92 1 181 2 5 1 
220 1 334 1 307 1 110 4 283 1 256 1 201 5 309 1 92 2 181 5 204 1 5 1 45 1 227 1 228 1 113 1 209 1 367 1 114 1 186 1 293 2 72 1 10 1 172 1 104 1 12 1 127 1 300 2 79 1 269 1 271 4 21 2 273 1 198 1 60 1 199 2 
228 1 5 1 129 1 
141 1 87 2 5 1 
220 2 227 2 186 2 273 2 127 2 355 1 10 2 204 1 
42 2 200 2 220 2 251 1 63 1 162 1 26 1 333 1 27 1 307 1 166 1 179 2 222 2 139 1 203 1 310 1 204 1 287 1 207 1 227 3 93 1 291 1 232 1 186 2 10 2 35 1 49 1 327 1 101 2 268 1 127 3 53 1 150 1 80 1 154 1 273 2 355 1 159 1 160 1 
220 1 227 1 307 1 186 1 273 1 127 1 10 1 79 1 204 1 45 1 
307 1 282 1 201 1 127 1 29 1 181 1 5 1 228 1 227 1 15 1 376 1 262 1 31 1 273 1 
220 1 307 1 201 2 127 1 29 1 181 2 5 1 228 1 227 1 15 1 262 1 31 1 186 1 273 1 10 1 
21 1 201 1 47 1 92 1 181 1 
228 1 229 1 21 1 12 1 201 2 92 1 181 2 5 1 
201 1 92 1 181 1 
220 1 127 2 180 1 290 1 227 2 186 1 273 2 355 2 10 1 
86 1 149 1 340 1 
42 1 251 1 162 1 101 1 123 1 179 1 127 1 203 1 310 1 287 1 227 1 93 1 207 1 291 1 232 1 355 1 
355 1 129 1 
42 1 251 1 162 1 101 1 179 1 127 2 203 1 310 1 287 1 207 1 93 1 227 2 375 1 291 1 232 1 186 1 273 1 157 1 10 1 340 1 
220 1 227 3 375 1 186 3 273 3 127 3 355 1 10 3 
227 1 307 1 186 1 273 1 127 1 10 1 79 1 
220 1 290 1 227 1 307 1 186 1 273 1 127 1 180 1 10 1 
42 1 200 2 251 1 220 2 162 1 26 1 333 1 27 1 360 1 307 1 166 1 179 1 222 1 201 1 29 1 203 1 180 1 310 1 181 1 204 1 287 1 207 1 93 1 227 4 291 1 262 1 31 1 232 1 186 3 10 3 49 1 327 1 101 1 268 1 127 4 53 1 150 1 15 1 375 1 80 1 273 3 355 1 157 1 177 1 
227 2 375 1 376 1 267 1 186 1 273 2 127 2 355 1 10 1 
220 1 357 1 307 1 201 1 127 3 29 1 180 1 181 1 5 1 227 3 15 1 375 2 262 1 31 1 186 3 273 3 157 1 10 3 177 1 
220 1 86 1 127 2 180 1 227 2 375 1 186 2 273 2 10 2 340 1 
42 1 251 1 162 1 101 1 179 1 127 1 203 1 310 1 287 1 227 1 93 1 207 1 291 1 232 1 355 1 
42 1 251 1 101 1 179 1 127 1 203 1 287 1 227 1 93 1 207 1 291 1 231 1 232 1 355 1 305 1 
200 2 86 2 26 2 333 1 27 1 166 1 222 4 139 2 292 1 365 1 340 2 298 1 36 1 147 1 268 1 76 1 149 2 300 1 150 1 54 1 350 1 132 1 80 1 199 1 
15 1 227 1 307 1 186 1 174 1 273 1 127 1 10 1 
220 1 267 1 308 1 127 5 180 1 230 1 227 5 375 2 376 1 186 4 273 5 355 1 157 1 10 4 
227 2 307 1 174 1 186 2 273 2 127 2 10 2 79 1 
316 1 142 1 248 1 
100 1 316 2 95 1 195 1 142 2 259 1 
316 1 142 1 
316 1 142 1 
195 1 259 1 
195 1 259 1 
195 1 259 1 
316 1 233 1 142 1 
316 1 233 1 142 1 
316 1 233 1 142 1 
316 1 142 1 37 1 
316 1 142 1 37 1 
316 1 142 1 37 1 
61 1 98 1 277 1 100 1 242 2 201 2 181 2 5 1 224 1 337 2 192 1 68 3 169 1 316 2 366 1 142 2 275 2 304 2 265 2 
254 1 201 1 91 1 202 1 181 1 223 1 182 1 224 1 337 1 227 2 68 1 316 1 142 1 186 2 10 2 242 1 127 2 189 1 273 2 355 1 275 1 106 1 248 1 304 1 
314 1 30 2 353 2 313 1 205 1 
353 1 362 1 313 1 
314 1 353 1 362 1 
314 1 30 1 353 3 361 1 205 1 313 2 
314 1 30 1 353 2 77 1 205 1 313 1 
334 1 87 3 110 3 254 1 201 5 92 1 223 1 181 5 257 1 5 2 228 1 365 1 141 1 209 1 9 2 211 1 299 1 172 1 173 1 11 1 147 1 328 2 175 1 104 1 12 1 126 2 300 1 271 2 21 4 106 1 41 1 199 1 
359 1 334 1 87 3 254 2 110 3 201 7 92 4 181 7 257 1 5 3 228 1 365 1 141 1 209 1 72 1 9 2 47 3 117 3 211 1 172 1 147 1 328 2 175 1 12 1 104 1 300 1 271 2 21 5 134 1 59 1 41 1 199 1 
299 1 21 1 173 1 175 1 201 2 72 1 181 2 
299 1 122 1 173 1 175 1 201 1 72 1 181 1 
135 1 
352 1 287 1 129 1 
116 1 287 1 
203 1 287 1 
207 1 352 2 88 1 203 1 66 1 287 3 
207 1 203 1 287 1 
243 1 287 1 
266 2 26 3 283 1 222 7 139 4 300 1 225 1 350 3 292 2 113 1 168 1 114 1 170 1 210 1 249 1 107 1 73 1 199 1 
200 2 26 15 333 1 136 1 27 1 283 2 222 31 139 16 311 1 112 3 292 5 113 1 168 5 365 3 170 1 114 2 210 1 73 1 264 1 266 3 211 3 121 1 147 3 268 1 300 4 14 4 350 10 19 1 56 1 80 1 156 1 249 2 107 2 199 4 
266 2 200 4 26 4 333 2 27 2 283 1 102 1 268 2 222 9 139 5 300 1 167 1 350 4 292 3 113 1 168 1 80 2 114 1 170 1 210 1 249 1 264 1 107 1 199 1 
266 2 26 3 283 1 222 7 139 4 300 1 350 3 292 2 113 1 168 1 114 1 170 1 249 1 210 1 107 1 73 1 199 1 
266 2 26 3 283 1 222 7 139 4 300 1 350 3 292 2 113 1 168 1 114 1 170 1 249 1 210 1 107 1 73 1 199 1 
85 1 42 1 251 1 0 1 99 1 101 1 179 1 203 1 65 2 140 2 287 1 330 1 183 1 93 1 301 1 291 1 18 1 131 1 71 2 274 2 34 1 82 1 115 1 
42 1 356 1 251 1 178 1 179 1 362 1 361 1 65 1 313 1 140 1 93 1 314 1 71 1 96 1 343 1 99 1 101 1 329 1 128 1 330 1 18 1 353 2 57 1 274 1 354 1 82 1 
42 1 356 1 251 1 253 1 178 1 179 1 362 1 361 1 65 1 313 1 140 1 93 1 314 1 315 1 71 1 343 1 99 1 101 1 188 1 329 1 128 1 213 1 330 1 55 1 18 2 353 2 57 1 274 1 354 1 82 2 
42 1 85 1 356 1 251 1 253 2 179 1 362 1 361 1 65 1 313 1 140 1 93 1 314 1 315 1 71 1 96 1 343 1 99 1 101 1 188 1 128 1 213 1 330 1 190 1 18 3 353 2 57 1 274 1 354 1 82 3 
42 1 251 1 253 2 179 1 361 1 362 1 65 1 140 1 313 1 93 1 314 1 315 1 71 1 96 1 343 1 101 1 188 1 128 1 213 1 190 1 18 2 353 2 57 1 274 1 82 2 
371 1 
42 2 279 1 334 1 87 2 179 2 282 1 2 2 92 6 181 5 5 2 287 1 228 1 93 1 227 1 291 2 185 1 141 2 7 2 46 2 143 2 295 1 101 2 12 3 104 1 15 1 301 1 151 4 23 1 251 1 358 2 163 2 164 1 64 1 307 1 110 2 201 5 29 1 203 1 257 1 262 1 70 1 31 1 209 1 172 1 324 1 124 1 38 1 127 1 331 2 271 2 376 1 131 1 272 1 273 1 83 1 
279 1 307 1 282 1 2 1 201 3 29 1 92 2 181 3 227 1 262 1 69 1 31 1 185 1 324 1 124 1 38 1 12 1 127 1 15 1 151 2 376 1 273 1 
279 1 307 1 282 1 201 3 29 1 92 1 181 3 5 1 227 1 228 1 262 1 69 1 31 1 185 1 7 1 324 1 124 1 38 1 12 1 127 1 15 1 151 3 376 1 273 1 
279 1 307 1 282 1 2 1 201 3 29 1 92 2 181 3 5 1 227 1 228 1 69 1 262 1 31 1 185 1 7 1 324 1 124 1 12 1 38 1 127 1 15 1 151 3 331 1 376 1 273 1 
279 1 334 1 282 1 2 4 92 7 181 5 5 5 288 1 227 1 228 5 185 1 141 2 7 4 46 2 143 2 12 3 104 1 15 1 151 6 358 2 163 2 306 1 164 1 307 1 110 1 201 5 29 1 260 1 261 1 262 1 69 1 31 1 209 1 172 1 324 1 124 1 38 1 127 1 331 4 271 1 376 1 272 1 273 1 81 1 
279 1 334 1 87 2 282 1 2 2 92 4 181 4 5 2 227 1 228 1 185 1 141 2 46 2 7 2 143 2 104 1 12 2 15 1 151 4 358 2 163 2 164 1 307 1 64 1 110 1 201 4 29 1 262 1 31 1 209 1 172 1 324 1 124 1 38 1 127 1 271 1 331 2 376 1 272 1 273 1 
358 2 279 1 163 2 306 1 164 1 334 1 307 1 110 1 282 1 2 2 201 4 29 1 92 4 181 4 5 1 288 1 228 1 260 1 227 1 262 1 31 1 185 1 141 2 209 1 7 2 46 2 143 2 172 1 324 1 124 1 12 2 38 1 104 1 127 1 15 1 331 2 271 1 151 4 376 1 272 1 273 1 
358 2 279 1 163 2 306 1 164 1 334 1 307 1 110 1 282 1 2 2 201 4 29 1 92 4 181 4 5 1 288 1 228 1 260 1 227 1 262 1 31 1 185 1 141 2 209 1 7 2 46 2 143 2 172 1 324 1 124 1 12 2 38 1 104 1 127 1 15 1 331 2 271 1 151 4 376 1 272 1 273 1 
358 2 279 1 164 1 334 1 87 2 307 1 110 1 282 1 2 2 201 4 29 1 92 4 181 4 5 1 228 1 260 1 227 1 262 1 31 1 185 1 209 1 7 2 46 2 171 2 321 1 296 2 172 1 324 1 124 1 12 2 38 1 372 1 104 1 127 1 15 1 105 1 331 2 271 1 151 4 376 1 273 1 
358 2 279 1 163 2 306 1 164 1 334 1 307 1 110 1 282 1 2 3 201 4 29 1 92 5 181 4 5 1 288 1 228 1 260 1 227 1 261 1 262 1 31 1 185 1 141 2 209 1 46 2 7 3 143 2 172 1 324 1 124 1 12 2 104 1 38 1 127 1 15 1 271 1 151 5 331 3 376 1 272 1 273 1 
358 2 279 1 163 2 306 1 164 1 334 1 307 1 110 1 282 1 2 3 201 4 29 1 92 5 181 4 5 1 288 1 228 1 260 1 227 1 261 1 262 1 31 1 185 1 141 2 209 1 46 2 7 3 143 2 172 1 324 1 124 1 12 2 104 1 38 1 127 1 15 1 271 1 151 5 331 3 376 1 272 1 273 1 
279 1 334 1 87 2 282 1 2 2 92 4 181 4 5 1 227 1 228 1 185 1 46 2 7 2 296 2 104 1 12 2 15 1 151 4 358 2 164 1 307 1 64 1 110 1 201 4 29 1 262 1 31 1 209 1 171 2 321 1 172 1 324 1 124 1 38 1 127 1 271 1 331 2 376 1 273 1 
42 8 251 2 200 4 26 1 333 2 27 2 179 8 166 2 255 1 222 2 139 1 203 2 287 3 227 1 93 2 291 2 208 1 186 1 10 1 96 1 342 1 101 7 327 1 51 1 268 2 127 1 150 2 191 1 54 1 375 1 301 1 55 1 152 1 302 1 80 2 131 1 273 1 159 1 160 2 
220 1 200 2 86 1 26 2 333 1 27 1 166 1 222 3 180 1 139 1 227 1 292 1 365 1 186 1 318 1 10 1 340 1 211 1 147 1 268 1 149 1 127 1 300 1 150 1 350 1 80 1 22 1 273 1 199 1 
266 1 200 2 86 1 26 3 333 1 27 1 166 1 283 1 268 1 222 6 149 1 139 3 300 1 150 1 129 1 350 2 54 1 292 2 113 1 80 1 114 1 170 1 355 2 210 1 340 1 199 1 
200 4 86 4 26 6 333 2 27 2 136 1 166 2 222 14 139 8 112 3 292 1 168 1 365 1 318 1 319 1 340 11 211 2 327 1 147 2 268 2 240 1 149 11 300 2 150 1 130 1 14 3 350 2 80 2 156 1 355 1 176 1 159 1 199 1 
42 1 251 1 200 2 162 1 86 1 26 1 333 1 27 1 179 1 166 1 222 2 203 1 139 1 310 1 287 1 207 1 93 1 227 2 291 1 232 1 186 1 318 1 10 1 101 1 327 1 123 1 268 1 127 2 150 1 375 1 351 1 17 1 80 1 197 1 273 1 355 1 157 1 159 1 
42 3 86 7 333 3 283 1 179 3 222 20 139 10 287 2 226 2 227 3 93 2 291 1 292 4 232 2 186 1 10 1 96 1 340 7 49 2 101 3 147 2 149 7 244 2 300 3 150 3 245 1 350 8 355 2 157 1 159 1 199 3 200 6 251 2 109 2 162 2 26 10 27 3 166 3 203 2 310 2 206 2 207 2 113 1 168 4 365 2 114 1 170 1 318 1 210 1 266 1 211 2 327 1 268 3 127 3 375 1 80 3 273 1 217 1 84 1 
200 2 86 1 333 1 27 1 166 1 147 1 268 1 222 2 149 1 139 2 300 1 150 1 350 1 54 1 168 1 80 1 340 1 298 1 
200 2 86 1 26 2 333 1 27 1 166 1 268 1 222 2 149 1 150 1 350 1 54 1 292 1 365 1 80 1 132 1 340 1 199 1 
200 2 86 2 26 2 333 1 27 1 166 1 222 4 139 2 292 1 168 1 365 1 340 2 211 1 147 1 268 1 149 2 300 1 150 1 54 1 350 2 80 1 199 1 
200 2 86 1 333 1 27 1 166 1 147 1 268 1 222 2 149 1 139 2 300 1 150 1 350 1 168 1 302 1 80 1 340 1 298 1 
200 2 86 1 26 2 333 1 27 1 166 1 268 1 222 2 149 1 150 1 350 1 292 1 302 1 365 1 80 1 132 1 340 1 199 1 
200 2 86 2 26 2 333 1 27 1 166 1 222 4 139 2 292 1 168 1 365 1 340 2 211 1 147 1 268 1 149 2 300 1 150 1 350 2 302 1 80 1 199 1 
200 2 86 2 26 2 333 1 27 1 166 1 222 4 139 2 292 1 168 1 365 1 340 2 211 1 147 1 268 1 149 2 300 1 150 1 350 2 80 1 199 1 
42 1 251 1 200 2 162 1 26 1 333 1 27 1 179 1 166 1 222 2 139 1 203 1 310 1 287 1 207 1 93 1 227 1 291 1 232 1 49 1 101 1 327 1 268 1 127 1 150 1 80 1 355 1 159 1 
25 1 42 1 251 1 200 2 26 1 333 1 27 1 179 1 166 1 222 2 139 1 203 1 287 1 207 1 93 1 227 1 231 1 291 1 232 1 101 1 327 1 268 1 127 1 150 1 80 1 355 1 159 1 305 1 
200 2 86 2 26 2 333 1 27 1 166 1 222 4 139 2 292 1 168 1 365 1 318 1 340 2 211 1 147 1 268 1 149 2 300 1 150 1 350 2 80 1 199 1 
42 1 251 1 200 2 86 2 162 1 26 2 333 1 27 1 179 1 166 1 222 4 139 2 203 1 310 1 287 1 226 1 207 1 93 1 227 1 292 1 365 1 168 1 232 1 340 2 49 1 211 1 101 1 147 1 268 1 149 2 127 1 300 1 150 1 350 2 55 1 80 1 199 1 
220 1 200 2 86 1 26 1 333 1 27 1 166 1 222 3 180 1 139 2 227 1 365 1 168 1 186 1 318 1 10 1 340 1 211 1 239 1 147 1 268 1 127 1 149 1 300 1 150 1 350 1 80 1 273 1 199 1 
332 1 200 4 26 10 333 2 27 2 136 1 284 2 222 19 138 1 139 9 4 1 167 1 112 1 67 1 292 3 32 1 168 3 365 3 211 3 119 1 146 2 147 3 268 2 300 3 14 2 350 6 80 2 156 1 40 1 199 3 
332 1 200 6 26 12 333 3 27 3 137 1 43 1 284 4 222 26 138 1 139 14 4 2 167 1 112 2 339 1 292 2 168 2 365 2 294 1 235 1 264 2 211 3 119 2 146 1 147 3 268 3 373 1 300 3 14 2 350 4 80 3 156 2 40 1 199 2 
332 1 333 3 136 1 137 1 283 1 222 41 284 4 43 1 138 1 139 20 4 2 339 1 292 4 294 1 235 1 145 1 146 1 147 4 300 5 14 4 350 8 156 3 199 5 200 6 26 21 27 3 112 3 167 1 365 4 168 4 113 1 32 1 170 1 114 1 210 1 264 1 211 4 266 1 119 1 268 3 373 1 80 3 40 1 
332 1 200 8 26 18 333 4 27 4 136 1 283 1 137 1 43 1 284 4 222 38 138 1 139 20 4 2 167 1 112 3 339 1 292 4 32 1 113 1 168 3 365 3 114 1 170 1 294 1 210 1 235 1 264 2 145 1 266 1 211 4 119 1 146 1 147 4 268 4 373 1 300 5 14 4 350 7 80 4 156 3 40 1 199 4 
332 1 200 4 26 25 333 2 27 2 136 2 283 1 137 1 43 1 284 4 222 52 138 1 139 27 4 1 167 1 112 4 339 1 292 7 113 1 168 7 365 7 114 1 170 1 294 1 210 1 235 1 264 1 266 1 211 7 119 1 146 1 147 7 268 2 373 1 300 8 14 4 350 14 80 2 156 2 176 2 40 1 199 8 
98 1 337 1 100 1 169 1 316 1 142 1 242 1 275 1 336 1 304 1 
248 1 182 1 
338 1 337 1 325 1 316 1 142 1 125 1 242 1 275 1 304 1 
61 1 98 1 277 1 100 1 201 1 242 1 181 1 5 1 224 1 337 1 68 2 169 1 316 1 366 1 142 1 275 1 304 1 265 1 
61 1 98 1 277 1 100 1 201 1 242 1 181 1 5 1 224 1 337 1 68 2 169 1 316 1 366 1 142 1 275 1 304 1 265 1 
61 1 98 1 277 1 100 1 201 1 242 1 181 1 5 1 224 1 337 1 68 2 169 1 316 1 366 1 142 1 275 1 304 1 265 1 
95 1 233 1 286 1 
95 1 233 1 286 1 
37 1 155 1 
95 1 37 1 155 1 
202 1 189 1 
277 1 254 1 201 1 91 1 202 1 181 1 223 1 182 1 337 1 227 2 68 1 316 1 142 1 186 2 10 2 265 1 118 1 242 1 127 2 189 1 21 1 273 2 355 1 275 1 106 1 248 1 304 1 
233 1 286 1 
95 1 37 1 155 1 
42 2 251 1 200 2 280 1 26 1 333 1 27 1 179 2 166 1 222 2 203 1 139 1 287 1 93 1 227 2 208 1 318 1 33 1 237 1 327 1 101 2 268 1 127 2 150 1 191 1 215 1 20 1 80 1 273 2 159 1 160 2 
42 1 251 1 101 1 179 1 203 1 140 1 287 1 184 1 93 1 291 1 301 1 131 1 115 1 297 1 
42 1 356 1 251 1 161 1 343 1 101 1 179 1 362 1 361 1 128 1 313 1 140 1 289 1 184 1 314 1 93 1 353 2 96 1 
42 2 251 1 356 1 161 1 343 1 101 2 179 2 362 1 361 1 128 1 313 1 140 1 289 1 184 1 314 1 93 1 55 1 353 2 96 1 
42 1 356 1 251 1 161 1 343 1 101 1 179 1 362 1 361 1 3 1 128 1 313 1 140 1 314 1 93 1 353 2 96 1 
6 1 
172 1 334 1 209 1 104 1 
228 1 201 1 12 1 92 1 181 1 5 1 
42 2 251 1 334 1 179 2 110 1 201 2 203 1 92 2 257 1 181 2 285 1 287 1 93 1 291 2 70 1 209 1 72 1 172 1 101 2 104 1 12 1 271 1 301 1 131 1 23 1 83 1 
129 1 
163 1 334 1 87 1 110 1 201 1 92 1 181 1 5 2 228 1 141 1 209 1 143 1 172 1 104 1 12 1 271 1 272 1 
42 3 278 2 334 4 281 1 87 12 179 3 88 1 92 5 181 5 285 1 5 8 287 10 228 2 93 4 291 1 141 6 293 2 9 6 48 1 101 3 50 2 147 2 104 4 243 2 12 3 52 2 244 2 347 1 13 2 300 2 55 1 193 2 352 2 196 2 24 1 199 2 251 3 28 1 110 9 201 5 203 3 257 2 258 1 207 3 262 2 365 2 209 4 367 2 116 3 211 2 172 4 328 6 271 8 83 1 
334 2 87 6 137 1 110 8 89 1 201 1 92 1 257 1 181 1 5 5 112 1 228 2 339 1 365 2 209 2 141 3 367 1 293 2 317 1 9 5 294 1 235 1 211 2 172 2 147 2 328 5 12 1 104 2 373 1 300 2 14 1 271 5 156 1 83 1 199 2 
220 1 306 1 334 1 307 1 283 1 110 2 201 1 181 1 204 1 45 1 227 1 113 1 209 1 367 1 114 1 293 2 186 1 10 1 172 1 104 1 127 1 300 2 79 1 271 2 273 1 198 1 60 1 199 1 
42 1 200 2 220 2 251 1 162 1 26 1 333 1 27 1 179 1 166 1 222 1 203 1 310 1 204 1 287 1 227 3 93 1 207 1 291 1 232 1 186 2 10 2 49 1 327 1 101 1 268 1 127 3 53 1 150 1 80 1 273 2 355 1 
266 1 172 1 334 1 87 4 110 1 328 2 104 1 257 1 5 4 228 2 271 2 141 2 209 1 9 2 83 1 
98 1 189 1 275 1 304 1 108 1 
275 1 304 1 363 1 
275 1 304 1 363 1 
275 1 304 1 363 1 
219 1 275 1 304 1 
219 1 275 1 304 1 
219 1 275 1 304 1 
275 1 304 1 
316 1 142 1 
200 2 26 5 333 1 27 1 283 2 268 1 222 10 139 5 300 2 167 1 350 5 292 3 168 2 113 1 80 1 114 2 198 1 199 2 
200 2 333 1 27 1 147 1 268 1 222 2 139 2 300 1 167 1 350 1 168 1 80 1 
211 1 200 2 26 2 333 1 27 1 147 1 268 1 222 4 139 2 300 1 167 1 350 2 292 1 365 1 168 1 80 1 199 1 
200 6 26 2 333 3 27 3 283 1 268 3 222 3 139 1 167 1 350 2 292 1 32 1 168 1 80 3 114 1 153 1 264 1 
200 10 26 18 333 5 27 5 136 1 283 3 222 34 139 16 311 1 167 1 112 3 292 7 113 2 32 1 168 5 365 3 114 3 170 1 210 1 264 2 266 1 211 3 121 1 147 3 268 5 300 5 14 4 350 12 19 1 80 5 153 1 156 1 58 1 199 5 
200 2 26 4 333 1 27 1 283 1 222 8 139 4 112 1 167 1 339 1 292 2 113 1 170 1 114 1 210 1 266 1 268 1 300 1 14 1 350 2 80 1 156 1 199 1 
200 4 26 5 333 2 27 2 136 1 283 1 222 11 139 6 167 1 112 1 339 1 292 2 113 1 168 1 114 1 170 1 210 1 266 1 211 1 147 1 268 2 300 2 14 2 350 3 80 2 156 1 58 1 199 1 
200 6 26 10 333 3 27 3 283 1 137 1 222 19 139 9 112 1 167 1 339 1 292 3 113 1 168 1 365 2 114 1 170 1 294 1 210 1 235 1 264 1 266 1 211 2 147 2 268 3 373 1 300 3 14 1 350 4 80 3 156 1 58 1 199 3 
200 6 26 7 333 3 27 3 283 1 137 1 222 17 139 10 112 1 167 1 339 1 292 3 113 1 168 2 365 1 114 1 170 1 294 1 210 1 235 1 264 1 266 1 211 2 147 2 268 3 373 1 300 3 14 1 350 5 80 3 156 1 58 1 199 2 
200 2 26 4 333 1 27 1 283 1 222 8 139 4 112 1 167 1 339 1 292 2 113 1 170 1 114 1 210 1 266 1 268 1 300 1 14 1 350 2 80 1 156 1 199 1 
200 2 26 6 333 1 27 1 137 1 222 12 139 6 112 1 167 1 339 1 292 1 168 1 365 2 294 1 235 1 211 2 147 2 268 1 373 1 300 2 14 1 350 2 80 1 156 1 199 2 
200 8 26 8 333 4 27 4 283 1 137 1 222 18 139 10 167 1 112 1 339 1 292 3 113 1 168 2 365 1 114 1 170 1 294 1 210 1 235 1 264 2 266 1 211 2 147 2 268 4 373 1 300 3 14 1 350 5 80 4 156 1 58 1 199 2 
200 8 26 7 333 4 27 4 137 1 222 16 139 9 167 1 112 1 339 1 292 3 168 3 32 1 365 2 294 1 235 1 264 2 211 3 147 3 268 4 373 1 300 3 14 1 350 6 80 4 156 1 199 2 
26 4 283 3 222 7 139 3 300 1 350 6 292 3 168 3 113 1 170 1 114 3 210 2 199 1 
200 8 26 8 333 4 27 4 283 1 137 1 222 18 139 10 167 1 112 1 339 1 292 3 113 1 168 1 32 1 365 1 114 1 170 1 294 1 210 1 235 1 264 2 266 1 211 2 147 2 268 4 373 1 300 3 14 1 350 4 80 4 156 1 199 2 
266 1 200 4 26 4 333 2 27 2 283 1 268 2 222 8 139 4 300 1 350 3 292 2 113 1 168 1 80 2 170 1 114 1 210 1 264 1 199 1 
266 1 350 2 26 3 292 2 113 1 114 1 283 1 170 1 222 6 139 3 300 1 210 1 199 1 129 1 
211 1 200 2 26 2 333 1 27 1 147 1 268 1 222 4 139 2 300 1 350 2 292 1 365 1 168 1 80 1 58 1 199 1 
211 1 26 4 136 1 147 1 222 7 139 3 300 1 14 2 112 1 350 2 292 1 365 1 168 1 156 1 199 1 
200 4 26 12 333 2 136 1 27 2 283 2 222 23 139 11 112 2 292 5 113 1 168 4 365 2 114 2 170 1 210 1 264 2 266 1 211 2 147 2 268 2 240 1 300 3 14 2 350 9 80 2 153 1 176 1 199 3 
14 1 26 1 222 1 
112 1 222 1 139 1 
211 1 200 2 26 3 333 1 27 1 147 1 268 1 222 6 244 1 139 3 300 1 350 3 292 2 168 1 365 1 80 1 58 1 199 1 
200 2 26 6 333 1 27 1 137 1 222 12 139 6 112 1 167 1 339 1 292 1 168 1 365 2 294 1 235 1 211 2 147 2 268 1 373 1 300 2 14 1 350 2 80 1 156 1 199 2 
26 3 283 1 222 6 139 3 300 1 350 2 292 1 113 1 168 1 114 1 199 1 
200 2 26 2 333 1 27 1 283 1 268 1 222 3 139 1 350 2 292 1 168 1 80 1 114 1 170 1 153 1 210 1 264 1 
227 1 16 1 376 1 267 1 273 1 127 1 355 1 
120 1 267 1 221 1 90 1 127 1 364 1 227 1 16 1 376 1 273 1 234 1 355 1 
370 1 42 4 251 1 101 4 179 4 203 1 287 1 93 1 291 1 301 1 55 1 131 1 247 1 
42 2 62 1 251 1 281 1 101 2 179 2 203 1 245 1 287 1 214 1 207 1 93 2 368 1 187 1 
42 1 251 1 314 1 93 1 291 1 101 1 353 1 179 1 362 1 128 1 
42 2 251 1 237 1 101 2 179 2 203 1 287 1 191 1 93 1 55 1 96 1 
370 1 42 5 342 1 251 2 281 1 101 4 179 5 255 1 203 2 287 3 191 1 93 2 301 1 291 1 55 1 131 1 
370 1 42 5 342 1 251 2 281 1 101 4 179 5 75 1 203 2 287 3 191 1 93 2 301 1 291 1 55 1 131 1 
42 1 251 1 93 1 301 1 291 1 131 1 101 1 179 1 203 1 287 1 129 1 
42 1 251 1 162 1 101 1 179 1 127 2 203 1 287 1 207 1 93 1 227 2 375 1 291 1 232 1 186 1 273 1 355 1 10 1 
42 1 278 1 251 1 162 1 307 1 281 1 101 1 179 1 243 1 29 1 127 2 203 2 287 3 15 1 207 2 93 1 227 2 375 1 232 1 186 1 273 2 355 1 10 2 
42 2 278 1 251 1 307 1 281 1 101 2 179 2 243 1 29 1 127 2 203 2 287 3 15 1 207 2 93 1 227 2 375 1 232 1 186 1 247 1 273 2 355 1 10 2 305 1 
42 3 278 1 251 1 281 1 101 3 179 3 243 1 201 2 203 1 92 1 181 2 5 1 287 4 228 1 207 1 93 1 291 1 262 1 352 1 377 1 247 1 116 1 250 1 
42 3 278 1 251 1 281 1 101 3 179 3 243 1 201 2 52 1 203 1 92 1 181 2 5 1 287 4 228 1 207 1 93 1 291 1 262 1 352 1 247 1 116 1 
42 1 251 1 93 1 101 1 179 1 51 1 
342 1 42 7 251 2 345 1 101 6 179 7 51 1 88 1 255 1 203 2 287 3 191 1 214 1 207 1 93 3 291 2 55 1 152 1 187 1 96 1 160 1 
42 1 86 1 333 2 179 1 283 1 222 6 139 3 287 1 226 1 227 2 93 1 292 2 232 1 186 1 10 1 340 1 49 1 101 1 149 1 300 1 150 2 350 2 55 1 355 2 199 1 200 4 251 1 162 1 109 1 26 3 27 2 166 2 203 1 310 1 207 1 113 1 170 1 114 1 318 1 210 1 266 1 268 2 127 2 375 1 215 1 80 2 273 1 
42 1 334 2 28 1 110 1 179 1 201 3 92 2 181 3 5 1 285 1 287 2 228 1 291 1 262 1 209 2 48 1 116 1 172 2 101 1 50 1 104 2 12 1 52 1 271 1 193 1 352 1 21 1 196 1 
42 2 251 1 101 2 179 2 51 1 88 1 203 1 258 1 287 2 207 1 93 2 55 1 352 1 
42 1 251 1 101 1 179 1 127 2 203 1 287 1 207 1 93 1 227 2 375 1 291 1 232 1 186 1 273 1 355 1 10 1 305 1 
42 1 251 1 345 1 281 1 101 1 179 1 88 1 203 1 287 1 214 1 207 1 93 2 187 1 
280 1 238 1 346 1 127 1 227 1 20 1 33 1 273 1 341 1 
246 1 133 1 341 1 
238 1 103 1 346 1 355 1 341 1 
74 1 238 2 307 1 103 2 201 2 346 2 29 1 181 2 5 1 228 1 15 1 262 1 21 1 246 1 31 1 133 1 355 1 341 1 177 1 
99 1 18 1 315 1 188 1 329 1 82 1 213 1 330 1 
253 2 99 1 188 2 148 1 78 1 39 1 330 1 111 1 213 3 18 4 315 2 82 4 158 1 322 1 
99 1 253 1 188 1 329 1 335 1 213 1 330 1 349 1 18 2 315 1 216 1 82 2 
99 1 188 1 329 1 148 2 44 1 39 2 213 1 330 1 18 3 315 1 82 3 158 1 
8 1 263 2 97 1 213 2 
99 1 18 1 165 1 329 1 82 1 330 1 
253 1 99 1 18 2 315 1 188 1 329 1 303 1 82 2 213 1 330 1 
276 1 
99 1 18 1 315 1 188 1 329 1 82 1 213 1 330 1 
315 1 188 1 213 1 129 1 
99 1 18 1 315 1 188 1 82 1 213 1 330 1 
274 1 65 1 82 1 
99 1 326 1 188 1 329 1 148 1 39 2 213 1 330 1 18 3 315 1 82 3 158 1 
253 1 99 1 18 2 315 1 188 1 82 2 374 1 213 1 330 1 
99 1 18 1 353 1 329 1 144 1 362 1 82 1 78 1 313 1 213 1 330 1 
99 1 18 1 315 1 329 1 82 1 213 1 330 1 
99 1 18 1 315 2 188 1 329 1 82 1 330 1 
323 1 252 1 99 2 329 1 213 1 330 2 18 2 315 1 82 2 378 1 
99 1 253 2 188 1 329 1 241 1 78 1 330 1 111 1 213 2 18 3 315 1 303 1 82 3 
99 1 253 1 188 1 329 1 361 1 362 1 348 1 313 1 213 1 330 1 314 1 18 2 315 1 353 2 82 2 
99 2 253 2 188 1 329 1 78 1 374 1 330 2 111 1 213 2 18 4 315 1 82 4 236 1 
253 1 99 1 188 1 329 1 39 1 330 1 213 1 18 3 315 1 303 1 82 3 
322 1 78 1 213 1 111 1 
315 1 213 1 

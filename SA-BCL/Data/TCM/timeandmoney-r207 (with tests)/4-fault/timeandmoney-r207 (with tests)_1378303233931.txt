#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 (56,190) (56,190) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 (56,190) (56,190) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 (56,190) (56,190) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 (56,190) (56,190) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 31 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 244 31 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (122,239,269,294) (122,239,269,294) 370 13 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 2 239 7 156 1 241 1 150 1 58 1 269 2 51 1 17 1 341 1 244 1 183 1 167 1 78 1 370 1 114 1 294 2 235 6 205 2 190 1 122 4 56 1 338 2 211 2 
83 2 239 7 156 1 241 1 150 1 58 1 269 2 51 1 17 1 341 1 244 1 183 1 167 1 78 1 370 1 114 1 294 2 235 6 205 2 190 1 122 4 56 1 338 2 211 2 
83 2 239 7 156 1 241 1 150 1 58 1 269 2 51 1 17 1 341 1 244 1 183 1 167 1 78 1 370 1 114 1 294 2 235 6 205 2 190 1 122 4 56 1 338 2 211 2 
83 2 239 7 156 1 241 1 150 1 58 1 269 2 51 1 17 1 341 1 244 1 183 1 167 1 78 1 370 1 114 1 294 2 235 6 205 2 190 1 122 4 56 1 338 2 211 2 
370 1 239 2 235 1 294 1 58 1 269 1 122 1 244 1 
83 1 239 2 156 1 150 1 58 1 288 1 269 1 341 1 290 1 294 1 235 2 114 1 205 1 372 1 225 1 145 1 
83 2 239 3 58 1 269 2 17 1 294 2 235 3 205 1 122 1 338 1 372 1 211 1 225 1 
83 2 239 7 31 1 58 1 269 2 51 1 17 1 244 1 167 1 44 1 370 1 294 2 235 6 205 1 122 5 338 2 211 2 
83 2 239 7 31 1 58 1 269 2 51 1 17 1 244 1 167 1 44 1 370 1 294 2 235 6 205 1 122 5 338 2 211 2 
16 1 89 1 298 1 
101 2 16 1 359 1 
238 2 280 2 120 2 109 1 377 2 200 1 226 2 328 2 
280 2 255 1 109 1 53 2 200 1 333 1 259 1 112 1 117 2 118 1 356 1 120 2 121 1 237 1 12 1 127 1 126 1 42 1 238 2 213 1 134 2 181 1 377 3 76 1 322 1 345 2 46 1 346 1 218 1 323 1 161 1 23 1 349 1 248 2 28 1 226 3 328 2 
137 1 238 1 317 1 280 1 120 1 377 1 289 1 200 1 226 1 328 1 
251 1 72 1 96 1 16 1 377 1 289 1 100 1 292 1 186 1 120 1 264 1 298 1 365 1 226 1 
238 1 72 1 96 1 16 1 280 1 377 1 100 2 289 1 292 1 186 2 120 1 264 1 298 1 328 1 226 1 
293 1 186 1 204 1 59 1 100 1 
306 1 186 2 204 1 16 1 59 1 256 1 298 1 100 2 
186 1 204 1 100 1 
238 1 15 1 317 1 280 1 59 1 377 1 289 1 100 1 200 1 137 1 186 1 120 1 328 1 226 1 
16 1 
280 1 200 1 306 1 204 1 120 1 266 1 238 1 15 1 317 1 16 1 59 1 377 1 100 2 289 1 137 1 186 2 298 1 328 1 226 1 
227 2 284 1 194 1 64 1 16 1 330 1 59 2 361 1 100 5 343 1 306 1 168 1 186 5 204 2 313 1 249 1 55 2 193 2 298 1 
109 1 89 1 
238 1 280 1 158 1 377 2 109 2 120 2 295 1 226 2 328 1 
261 1 74 1 332 1 
42 1 134 1 255 1 181 1 109 1 377 1 53 1 76 1 259 1 322 1 202 1 345 1 346 1 118 1 226 1 126 1 
42 1 238 1 134 1 181 1 255 1 377 2 53 1 76 1 332 1 259 1 322 1 345 1 346 1 47 1 118 1 120 1 209 1 328 1 226 2 126 1 
238 4 107 1 280 1 158 1 257 1 377 5 109 1 47 1 22 1 120 5 209 2 365 1 328 4 226 5 
137 1 238 2 120 2 377 2 135 1 289 1 226 2 328 2 
238 3 280 1 120 3 209 1 109 1 377 3 226 3 328 3 
137 1 238 1 120 1 377 1 289 1 226 1 328 1 
238 1 280 1 120 1 158 1 295 1 377 1 289 1 226 1 328 1 
148 1 280 2 255 1 109 1 53 1 200 1 259 1 117 2 118 1 356 1 120 3 209 1 121 1 264 1 12 1 127 1 126 1 42 1 238 3 213 1 72 1 96 1 73 1 158 1 134 1 181 1 377 4 76 1 289 1 100 1 322 1 292 1 345 1 46 1 346 1 186 1 218 1 323 1 47 1 23 1 349 1 248 1 226 4 328 3 
238 1 107 1 120 2 209 1 109 1 377 2 365 1 226 2 328 1 
238 3 148 1 72 1 268 1 96 1 280 1 16 1 158 1 377 3 100 1 289 1 292 1 186 1 47 1 120 3 209 2 264 1 328 3 226 3 
238 2 280 1 120 2 158 1 209 1 74 1 377 2 332 1 226 2 328 2 
42 1 134 1 255 1 181 1 109 1 377 1 53 1 76 1 259 1 322 1 345 1 346 1 118 1 226 1 126 1 
42 1 303 1 134 1 255 1 181 1 109 1 377 1 53 1 76 1 35 1 322 1 345 1 346 1 226 1 126 1 
146 1 32 1 332 2 260 1 261 2 115 1 117 2 9 1 121 1 127 1 213 1 130 1 242 1 74 2 245 1 216 1 46 1 218 1 323 1 161 2 23 2 248 4 381 1 276 1 
238 1 96 1 120 1 377 1 135 1 289 1 226 1 328 1 
253 1 221 1 
253 1 221 1 
170 1 50 1 
170 1 50 1 
170 1 50 1 
262 1 253 1 221 1 
262 1 253 1 221 1 
262 1 253 1 221 1 
253 1 221 1 189 1 
217 1 7 1 170 1 50 1 253 2 221 2 
253 1 221 1 111 1 
253 1 221 1 111 1 
253 1 221 1 111 1 
1 1 33 1 253 1 109 1 233 1 85 1 68 1 357 1 120 2 267 1 238 2 71 1 377 2 100 1 60 1 79 1 186 1 221 1 189 1 247 1 191 1 328 2 226 2 366 1 
71 2 178 1 33 1 16 1 132 1 253 2 164 1 100 2 60 3 233 2 85 2 7 1 186 2 221 2 26 2 247 2 27 1 173 1 299 1 
114 1 156 1 183 1 
114 1 156 1 145 1 
240 1 156 3 311 1 183 2 327 1 145 1 
147 1 240 1 156 2 183 1 327 1 145 1 
240 2 156 2 183 1 327 1 145 1 
146 1 227 1 302 1 194 3 34 1 330 2 306 1 204 1 68 1 119 1 357 1 358 2 9 1 39 1 55 1 359 1 284 1 242 1 16 2 59 4 43 2 320 1 100 5 101 3 380 1 186 5 188 1 80 2 191 1 193 1 298 1 276 1 
146 3 227 2 194 8 330 6 254 1 281 1 168 1 306 1 68 4 204 6 69 1 119 2 358 6 9 3 39 1 55 2 359 3 174 1 284 1 242 3 16 5 59 7 320 3 100 9 344 1 19 1 101 9 293 5 186 9 188 2 80 6 193 2 223 5 298 1 276 3 
146 1 227 1 302 1 194 3 330 2 168 1 68 1 119 1 9 1 358 2 55 1 359 2 242 1 16 3 59 2 43 1 320 1 100 3 101 4 380 1 186 3 188 1 80 2 193 1 298 1 276 1 
146 2 227 1 302 1 194 5 330 4 168 1 68 2 119 1 358 4 9 2 55 1 359 3 174 1 242 2 16 4 59 3 43 2 320 2 100 4 344 1 19 1 101 7 380 1 186 4 188 1 80 4 193 1 298 1 276 2 
123 1 89 1 76 1 
304 1 76 1 
199 1 
42 1 346 1 76 1 
236 1 76 1 
346 1 76 1 
42 1 346 1 151 1 123 2 198 1 76 3 
242 1 179 1 342 1 245 2 45 1 347 1 138 1 310 1 207 1 23 3 161 4 9 1 316 1 248 7 274 2 381 3 326 1 
242 1 179 1 342 1 245 2 45 1 347 1 138 1 310 1 207 1 23 3 161 4 9 1 316 1 248 7 274 2 381 3 326 1 
242 1 179 1 319 1 342 1 245 2 45 1 347 1 138 1 310 1 207 1 23 3 161 4 9 1 316 1 248 7 274 2 381 3 326 1 
146 2 279 1 2 4 310 1 207 2 117 2 314 1 9 4 316 4 121 1 213 1 242 3 179 1 320 3 321 1 342 1 245 4 379 1 45 2 46 1 347 2 138 2 218 1 23 13 161 16 248 29 192 1 143 1 29 1 274 3 144 3 326 1 276 3 381 8 
213 2 242 1 3 1 376 1 342 1 245 3 45 1 347 1 46 2 138 1 310 1 218 2 207 1 117 4 23 4 161 5 9 1 316 1 248 9 121 2 143 1 274 2 326 1 381 4 
83 1 195 1 255 1 108 1 53 1 114 1 235 2 205 1 311 1 10 1 122 1 70 1 372 1 239 2 156 2 286 1 58 1 269 1 99 1 134 1 183 1 160 1 322 1 345 1 294 1 139 1 82 1 296 1 225 1 145 1 
83 1 196 1 195 1 255 1 108 1 53 1 114 1 235 3 311 1 205 1 371 1 86 1 10 1 122 2 70 1 372 1 239 3 156 2 286 1 269 1 99 1 134 1 183 1 322 1 345 1 294 1 139 1 82 1 225 1 145 1 
83 1 196 1 255 1 108 1 53 1 235 2 114 1 205 1 311 1 371 1 10 1 122 2 70 1 372 1 239 2 156 2 286 1 134 1 183 1 322 1 345 1 139 1 82 1 225 1 145 1 
239 1 157 1 269 1 134 1 255 1 182 1 108 2 53 1 76 1 334 1 322 1 345 1 103 1 346 1 294 1 235 1 205 2 86 1 139 2 10 2 142 1 30 1 126 1 
195 1 255 1 108 1 53 1 114 1 235 1 205 1 311 1 371 1 10 1 70 1 239 1 156 2 286 1 58 1 269 1 99 1 134 1 183 1 160 1 322 1 345 1 294 1 139 1 82 1 145 1 
197 1 
251 1 49 2 149 1 194 2 255 1 53 2 306 3 204 6 263 1 88 2 55 1 264 1 359 2 96 1 16 2 97 1 362 1 100 5 101 2 322 1 102 1 106 1 162 2 275 1 365 1 226 1 227 1 330 2 229 1 110 1 119 1 120 1 336 1 40 1 126 2 284 1 72 1 134 2 182 1 377 1 136 1 76 1 289 1 77 2 345 2 292 1 346 1 186 5 141 2 48 2 246 4 142 1 193 1 298 1 250 2 
251 1 229 1 306 1 204 2 120 1 336 1 264 1 88 1 266 1 72 1 96 1 377 1 136 1 362 1 100 3 289 1 292 1 102 1 186 3 246 2 365 1 226 1 
251 1 229 1 306 1 204 1 120 1 336 1 264 1 266 1 72 1 96 1 16 1 377 1 136 1 362 1 100 3 289 1 292 1 102 1 186 3 141 1 246 3 365 1 298 1 226 1 
251 1 229 1 306 1 204 2 120 1 336 1 264 1 88 1 266 1 72 1 96 1 377 1 136 1 362 1 100 3 289 1 292 1 102 1 186 3 48 1 141 1 246 3 365 1 226 1 
251 1 300 1 301 1 149 1 49 2 194 1 4 1 200 1 306 3 204 7 355 1 88 4 264 1 55 1 359 2 266 1 317 1 15 1 96 1 16 1 362 1 100 5 102 1 106 1 162 2 365 1 328 1 226 2 227 1 280 1 330 1 229 1 120 2 336 1 238 1 72 1 284 1 340 1 377 2 136 1 289 2 77 2 137 1 292 1 186 5 48 4 141 2 246 4 193 1 298 1 250 2 
251 1 149 1 49 2 194 1 306 2 204 4 264 1 55 1 88 2 359 2 96 1 16 2 362 1 100 4 101 2 102 1 106 1 162 2 365 1 275 1 226 1 227 1 330 1 229 1 120 1 336 1 72 1 284 1 377 1 136 1 289 1 77 2 292 1 186 4 48 2 141 2 246 4 193 1 298 1 250 2 
227 1 251 1 49 2 149 1 301 1 194 1 330 1 229 1 306 2 204 4 355 1 120 1 336 1 88 2 264 1 55 1 359 2 72 1 284 1 96 1 340 1 16 1 377 1 136 1 362 1 100 4 289 1 77 2 292 1 102 1 186 4 106 1 141 2 48 2 162 2 246 4 193 1 298 1 365 1 250 2 226 1 
227 1 251 1 49 2 149 1 301 1 194 1 330 1 229 1 306 2 204 4 355 1 120 1 336 1 88 2 264 1 55 1 359 2 72 1 284 1 96 1 340 1 16 1 377 1 136 1 362 1 100 4 289 1 77 2 292 1 102 1 186 4 106 1 141 2 48 2 162 2 246 4 193 1 298 1 365 1 250 2 226 1 
227 1 251 1 149 1 194 1 330 1 229 1 36 2 306 2 204 4 120 1 336 1 315 1 88 2 264 1 55 1 374 2 72 1 284 1 96 1 340 1 16 1 180 1 377 1 136 1 362 1 100 4 289 1 271 1 101 2 292 1 102 1 186 4 141 2 48 2 162 2 246 4 193 1 298 1 365 1 250 2 226 1 
227 1 251 1 300 1 49 2 149 1 301 1 194 1 330 1 229 1 306 2 204 5 355 1 120 1 336 1 55 1 264 1 88 3 359 2 284 1 72 1 96 1 340 1 16 1 377 1 136 1 362 1 100 4 289 1 77 2 292 1 102 1 186 4 106 1 162 2 48 3 141 3 246 5 193 1 298 1 365 1 250 2 226 1 
227 1 251 1 300 1 49 2 149 1 301 1 194 1 330 1 229 1 306 2 204 5 355 1 120 1 336 1 55 1 264 1 88 3 359 2 284 1 72 1 96 1 340 1 16 1 377 1 136 1 362 1 100 4 289 1 77 2 292 1 102 1 186 4 106 1 162 2 48 3 141 3 246 5 193 1 298 1 365 1 250 2 226 1 
251 1 149 1 194 1 306 2 204 4 315 1 264 1 55 1 88 2 96 1 16 1 362 1 100 4 101 2 102 1 162 2 365 1 275 1 226 1 227 1 330 1 229 1 36 2 120 1 336 1 72 1 284 1 374 2 377 1 136 1 289 1 292 1 186 4 48 2 141 2 246 4 193 1 298 1 250 2 
32 1 109 2 332 1 261 1 310 1 207 1 117 2 9 1 121 1 89 1 127 1 213 1 242 1 74 1 342 1 245 2 46 1 218 1 323 1 138 1 161 3 23 3 248 6 274 1 326 1 381 2 
146 1 351 1 279 2 2 4 109 1 332 13 261 13 308 1 117 4 314 1 9 3 316 1 121 2 337 1 127 1 95 1 213 2 242 1 74 4 320 3 184 1 245 1 46 2 218 2 323 2 349 1 23 7 161 10 248 17 28 1 144 3 381 2 276 3 
351 1 255 1 109 1 53 1 259 1 202 1 118 1 117 2 282 1 120 1 209 1 121 1 126 1 127 1 42 1 238 1 93 1 213 1 134 1 181 1 74 1 377 2 76 1 322 1 345 1 346 1 46 1 323 1 218 1 219 1 47 1 349 1 23 1 161 1 248 2 28 1 226 2 328 1 
146 2 351 1 255 2 53 3 259 2 261 7 310 1 207 1 8 2 356 2 9 3 209 1 316 4 57 2 213 3 320 2 322 2 218 3 323 3 23 10 24 2 161 10 325 2 274 1 28 1 326 1 328 1 226 3 276 2 228 1 109 2 332 7 67 1 38 1 371 1 117 6 118 2 120 1 121 3 126 1 127 3 42 2 238 1 242 3 134 3 181 2 74 7 377 3 76 2 342 1 245 4 345 3 46 3 346 2 138 1 47 1 349 1 248 20 381 8 
32 1 252 1 369 1 255 2 53 7 112 2 6 1 371 1 117 4 120 1 209 1 121 2 90 1 126 2 127 2 238 1 213 2 134 8 159 1 182 1 377 1 76 3 322 2 345 8 46 2 346 2 104 1 218 2 323 2 105 1 161 1 349 1 23 1 248 2 142 1 296 1 28 1 226 1 328 1 
146 1 351 1 280 1 332 1 261 1 117 2 120 1 9 1 121 1 127 1 238 1 213 1 242 1 158 1 74 1 75 1 377 1 320 1 245 1 46 1 218 1 323 1 161 1 23 2 248 3 381 1 328 1 226 1 276 1 
213 1 32 1 74 1 332 1 261 1 46 1 323 1 218 1 115 1 117 2 161 2 9 1 316 1 248 2 121 1 381 1 127 1 276 1 
146 1 213 1 32 1 242 1 74 1 332 1 245 1 261 1 216 1 46 1 323 1 218 1 117 2 23 2 248 2 121 1 381 1 127 1 
146 1 32 1 332 2 261 2 117 2 9 1 121 1 316 1 127 1 213 1 242 1 74 2 320 1 245 1 46 1 218 1 323 1 161 2 23 2 248 4 276 1 381 2 
213 1 252 1 74 1 332 1 261 1 46 1 323 1 218 1 115 1 117 2 161 2 9 1 316 1 248 2 121 1 381 1 127 1 276 1 
146 1 213 1 242 1 252 1 74 1 332 1 245 1 261 1 216 1 46 1 323 1 218 1 117 2 23 2 248 2 121 1 381 1 127 1 
146 1 252 1 332 2 261 2 117 2 9 1 121 1 316 1 127 1 213 1 242 1 74 2 320 1 245 1 46 1 218 1 323 1 161 2 23 2 248 4 276 1 381 2 
146 1 332 2 261 2 117 2 9 1 121 1 316 1 127 1 213 1 242 1 74 2 320 1 245 1 46 1 218 1 323 1 161 2 23 2 248 4 276 1 381 2 
255 1 109 1 53 1 259 1 118 1 117 2 356 1 121 1 126 1 127 1 42 1 213 1 134 1 181 1 377 1 76 1 322 1 345 1 346 1 46 1 323 1 218 1 161 1 349 1 23 1 248 2 28 1 226 1 
367 1 303 1 255 1 109 1 53 1 35 1 117 2 121 1 126 1 127 1 42 1 213 1 134 1 181 1 377 1 76 1 322 1 345 1 346 1 46 1 323 1 218 1 161 1 349 1 23 1 248 2 28 1 226 1 
146 1 351 1 332 2 261 2 117 2 9 1 121 1 316 1 127 1 213 1 242 1 74 2 320 1 245 1 46 1 218 1 323 1 161 2 23 2 248 4 276 1 381 2 
146 1 255 1 53 1 332 2 259 1 261 2 118 1 117 2 356 1 9 1 316 1 121 1 127 1 42 1 213 1 242 1 134 1 74 2 181 1 377 1 320 1 76 1 245 1 322 1 345 1 346 1 46 1 323 1 218 1 23 2 161 2 24 1 248 4 296 1 381 2 276 1 226 1 
146 1 351 1 280 1 332 1 261 1 37 1 117 2 120 1 9 1 316 1 121 1 127 1 238 1 213 1 242 1 158 1 74 1 377 1 320 1 46 1 218 1 323 1 23 1 161 2 248 3 381 1 328 1 226 1 276 1 
146 3 2 5 352 1 305 1 206 1 310 1 207 1 9 6 314 3 316 3 91 1 213 3 320 5 215 4 218 3 220 1 161 22 23 20 364 1 62 1 274 1 276 5 326 1 279 2 166 2 169 1 117 6 121 3 172 1 41 1 339 1 242 4 376 1 378 1 342 1 245 3 46 3 138 1 81 1 248 42 143 1 144 3 381 6 
146 4 279 2 2 5 352 1 305 1 166 2 169 1 310 1 206 1 207 1 117 8 314 3 9 6 316 2 121 4 172 1 41 1 339 1 91 1 213 4 242 5 376 1 320 5 342 1 378 1 215 4 245 5 46 4 138 1 218 4 220 1 81 1 23 21 161 22 364 1 248 43 62 1 143 2 274 1 144 3 326 1 276 5 381 7 
146 3 279 1 2 3 352 1 305 1 166 1 310 1 206 1 207 1 117 2 314 2 9 5 316 2 121 1 172 1 41 1 339 1 91 1 213 1 242 4 376 1 320 4 342 1 378 1 245 3 215 3 46 1 138 1 218 1 220 1 81 1 23 15 161 17 364 1 248 32 274 1 144 2 326 1 381 5 276 4 
146 2 279 1 2 2 352 2 166 1 117 4 314 1 9 3 316 2 121 2 172 1 41 1 91 1 213 2 177 1 242 2 376 1 320 3 245 2 215 2 46 2 218 2 220 1 23 8 161 9 248 17 62 1 144 1 381 4 276 3 
146 2 2 2 352 1 305 1 166 2 206 1 117 6 314 2 9 3 316 2 121 3 172 1 41 1 339 1 91 1 213 3 242 2 376 1 320 3 378 1 245 2 215 4 46 3 218 3 220 2 81 1 23 12 161 14 364 1 248 26 143 2 144 2 381 4 276 3 
232 1 233 1 71 1 85 1 7 1 178 1 253 1 221 1 247 1 173 1 
79 1 189 1 
233 1 71 1 20 1 85 1 116 1 253 1 221 1 133 1 247 1 
283 1 262 1 
217 1 175 1 111 1 
71 1 178 1 33 1 16 1 132 1 253 1 164 1 100 1 60 2 233 1 85 1 7 1 186 1 221 1 26 1 247 1 173 1 299 1 
71 1 178 1 33 1 16 1 132 1 253 1 164 1 100 1 60 2 233 1 85 1 7 1 186 1 221 1 26 1 247 1 173 1 299 1 
71 1 178 1 33 1 16 1 132 1 253 1 164 1 100 1 60 2 233 1 85 1 7 1 186 1 221 1 26 1 247 1 173 1 299 1 
217 1 283 1 262 1 
217 1 283 1 262 1 
175 1 111 1 
217 1 175 1 111 1 
267 1 1 1 
350 1 1 1 253 1 109 1 233 1 85 1 68 1 357 1 120 2 267 1 71 1 238 2 59 1 377 2 100 1 60 1 79 1 186 1 221 1 26 1 189 1 247 1 191 1 226 2 299 1 366 1 328 2 
351 1 369 1 255 1 53 2 230 1 112 2 117 2 120 2 121 1 265 1 373 1 127 1 213 1 98 1 134 2 18 1 377 2 76 1 322 1 345 2 346 1 46 1 104 1 323 1 218 1 161 1 349 1 23 1 248 2 28 1 226 2 
14 1 156 2 286 1 360 1 99 1 134 2 255 1 183 1 53 2 108 1 322 1 345 2 114 1 311 1 371 1 82 1 296 1 145 1 277 1 
156 2 286 1 99 1 134 1 255 1 183 1 53 1 108 1 66 1 322 1 345 1 114 1 311 1 371 1 82 1 145 1 277 1 
157 1 360 1 134 1 255 1 182 1 53 1 108 1 76 1 322 1 345 1 346 1 324 1 142 1 126 1 
14 1 156 2 286 1 360 1 99 1 134 1 255 1 183 1 53 1 108 1 322 1 345 1 114 1 311 1 371 1 82 1 145 1 277 1 
185 1 
194 1 16 1 330 1 313 1 249 1 89 1 298 1 
227 1 49 1 194 1 330 1 306 1 204 1 55 1 359 1 284 1 16 2 100 1 77 1 101 1 186 1 106 1 193 1 298 1 
146 2 194 9 151 1 255 3 304 3 53 3 203 1 306 3 309 1 204 5 312 2 313 1 358 6 9 2 263 1 55 4 210 2 359 6 16 8 320 2 100 5 363 1 322 4 101 12 21 2 25 2 325 2 278 2 276 2 227 4 330 8 119 2 236 2 123 2 126 1 128 1 42 3 284 4 287 1 285 2 242 2 134 3 76 10 345 3 292 2 346 3 186 5 348 2 80 6 140 2 249 1 296 1 193 4 298 2 
146 2 227 2 194 8 2 1 330 5 305 1 306 1 206 1 204 1 119 1 358 5 314 1 9 2 263 1 54 1 55 2 124 1 359 3 339 1 284 2 242 2 16 5 320 2 100 1 378 1 101 6 186 1 21 2 80 5 140 1 81 1 193 2 144 1 298 2 276 2 
227 1 194 2 280 1 330 2 200 1 207 1 355 1 9 2 120 1 55 1 238 1 284 1 15 1 317 1 242 1 377 1 289 1 100 1 342 1 291 1 137 1 186 1 138 1 21 2 140 1 193 1 226 1 328 1 
227 1 284 1 194 1 16 1 330 1 313 1 55 1 249 1 193 1 298 1 
146 2 242 2 194 5 16 5 330 5 320 2 101 10 21 2 80 5 140 1 9 2 358 5 325 1 359 5 276 2 
306 1 186 1 204 1 16 1 298 1 100 1 
163 1 227 2 194 2 330 2 255 2 53 4 110 1 168 1 203 1 306 2 204 4 119 2 40 1 263 2 55 2 126 2 128 2 42 1 284 1 375 1 270 1 134 4 182 1 76 2 100 3 322 3 345 4 346 2 186 3 61 1 272 1 142 1 193 2 224 1 
280 2 255 1 109 1 53 1 200 1 259 1 117 2 118 1 356 1 120 2 121 1 12 1 126 1 127 1 42 1 238 2 213 1 134 1 181 1 377 3 76 1 322 1 345 1 46 1 346 1 218 1 323 1 23 1 349 1 248 1 226 3 328 2 
227 1 284 1 194 1 16 4 330 2 101 4 80 2 119 1 358 2 263 1 55 1 274 1 193 1 359 2 298 2 
92 1 233 1 71 1 
92 1 233 1 71 1 
92 1 233 1 71 1 
267 1 233 1 71 1 243 1 173 1 
233 1 71 1 11 1 
233 1 71 1 11 1 
233 1 71 1 11 1 
233 1 71 1 
253 1 221 1 
279 1 2 2 305 1 310 1 117 2 207 1 314 1 9 2 121 1 213 1 242 1 376 1 320 1 342 1 245 2 46 1 138 1 218 1 23 5 161 6 248 11 274 1 144 1 381 2 276 1 326 1 
2 1 305 1 310 1 117 4 207 1 9 1 314 1 121 2 94 1 213 2 242 1 376 1 342 1 245 2 46 2 218 2 138 1 23 4 161 4 248 8 274 1 144 1 326 1 381 2 
146 2 2 1 305 1 310 1 206 1 207 1 117 6 314 1 9 3 316 1 121 3 339 1 94 1 213 3 242 3 376 1 320 2 342 1 378 1 245 3 46 3 138 1 218 3 81 1 23 10 161 9 248 19 143 1 274 1 144 1 326 1 276 2 381 4 
146 1 2 1 305 1 310 1 206 1 207 1 117 6 314 1 9 3 316 2 121 3 339 1 94 1 213 3 242 2 376 1 320 2 342 1 378 1 245 3 46 3 138 1 218 3 23 7 161 10 81 1 248 17 143 1 274 1 144 1 326 1 276 2 381 5 
279 1 2 2 305 1 310 1 117 2 207 1 314 1 9 2 121 1 213 1 242 1 376 1 320 1 342 1 245 2 46 1 138 1 218 1 23 5 161 6 248 11 274 1 144 1 381 2 276 1 326 1 
146 2 2 1 305 1 206 1 117 2 314 1 9 2 316 1 121 1 339 1 213 1 242 2 376 1 320 2 378 1 245 1 46 1 218 1 23 6 161 6 81 1 248 12 144 1 276 2 381 2 
146 1 2 1 305 1 310 1 206 1 207 1 117 8 314 1 9 3 316 2 121 4 339 1 94 1 213 4 242 2 376 1 320 2 342 1 378 1 245 3 46 4 138 1 218 4 81 1 23 8 161 10 248 18 143 2 274 1 144 1 326 1 276 2 381 5 
146 2 2 1 305 1 206 1 117 8 314 1 9 3 316 3 121 4 339 1 213 4 242 2 376 1 320 3 378 1 245 3 46 4 218 4 81 1 23 7 161 9 248 16 62 1 143 2 144 1 276 3 381 6 
242 1 342 1 245 3 310 1 138 3 207 3 23 4 161 3 9 1 248 7 316 3 326 2 381 6 
146 1 2 1 305 1 310 1 206 1 207 1 117 8 314 1 9 3 316 1 121 4 339 1 213 4 242 2 376 1 320 2 342 1 378 1 245 3 46 4 138 1 218 4 81 1 23 8 161 10 248 18 62 1 143 2 274 1 144 1 326 1 276 2 381 4 
213 2 242 1 342 1 245 2 46 2 218 2 310 1 138 1 117 4 207 1 23 4 161 4 9 1 248 8 316 1 121 2 143 1 274 1 381 3 326 1 
242 1 342 1 245 2 310 1 138 1 207 1 23 3 161 3 9 1 248 6 89 1 274 1 326 1 381 2 
146 1 94 1 213 1 242 1 320 1 245 1 46 1 218 1 117 2 23 2 161 2 9 1 121 1 248 4 316 1 381 2 276 1 
146 1 279 1 2 2 242 1 320 1 245 1 23 4 161 3 314 1 9 1 248 7 144 1 381 1 276 1 
146 2 279 1 2 2 234 1 310 1 207 2 117 4 9 3 316 4 121 2 337 1 95 1 213 2 242 3 320 2 342 1 245 5 46 2 138 2 218 2 161 11 23 12 248 23 143 2 274 1 144 2 326 1 381 9 276 2 
2 1 23 1 248 1 
161 1 248 1 144 1 
146 1 94 1 213 1 242 1 320 1 245 2 46 1 218 1 117 2 23 3 161 3 9 1 121 1 248 6 316 1 325 1 276 1 381 3 
146 2 2 1 305 1 206 1 117 2 314 1 9 2 316 1 121 1 339 1 213 1 242 2 376 1 320 2 378 1 245 1 46 1 218 1 23 6 161 6 81 1 248 12 144 1 276 2 381 2 
242 1 342 1 245 1 138 1 207 1 161 3 23 3 9 1 248 6 316 1 381 2 
213 1 245 1 234 1 46 1 138 1 218 1 310 1 207 1 117 2 161 1 23 2 316 1 248 3 121 1 143 1 381 2 326 1 
213 1 242 2 376 1 342 1 245 3 291 1 46 1 218 1 138 2 117 2 207 2 161 5 23 5 9 2 121 1 316 2 248 10 381 5 
213 1 376 1 46 1 218 1 117 2 161 2 9 1 121 1 248 2 316 1 276 1 381 1 
146 1 213 1 242 1 376 1 320 1 245 1 46 1 218 1 117 2 23 2 161 2 9 1 121 1 248 4 316 1 381 2 276 1 
213 3 376 1 245 1 234 1 46 3 218 3 138 1 117 6 207 1 23 2 161 1 248 3 121 3 316 1 143 1 62 1 381 2 
146 2 279 1 2 4 234 1 310 1 207 3 117 10 314 1 9 5 121 5 316 4 94 1 213 5 242 4 376 1 320 3 321 1 342 2 245 6 379 1 46 5 138 3 218 5 23 16 161 16 248 32 143 2 62 1 192 1 274 1 144 3 326 1 276 3 381 10 
187 1 107 1 120 1 109 1 377 1 365 1 226 1 
368 1 107 1 109 1 377 1 84 1 187 1 171 1 120 1 87 1 297 1 365 1 226 1 
322 1 345 1 346 1 134 1 255 1 142 1 182 1 53 1 89 1 76 1 126 1 
42 1 238 1 134 1 181 1 255 1 109 1 377 2 53 1 76 1 259 1 322 1 345 1 346 1 120 1 209 1 328 1 226 2 126 1 
255 1 109 1 53 1 259 1 120 2 209 1 236 1 128 1 42 2 238 1 72 1 96 1 134 1 181 1 377 2 76 3 289 1 322 1 345 1 346 2 348 1 226 2 328 2 
255 1 109 1 53 2 35 1 5 1 120 2 209 1 236 1 128 1 42 2 238 1 72 1 96 1 134 2 181 1 377 2 76 3 289 1 322 1 345 2 346 2 348 1 226 2 328 2 
42 1 128 1 214 1 16 1 134 3 255 1 53 3 304 1 76 4 100 2 5 1 322 1 292 1 345 3 346 1 186 2 348 1 204 1 236 1 222 1 123 1 298 1 126 1 
42 1 128 1 16 1 134 3 255 1 53 3 304 1 76 4 100 2 5 1 322 1 292 1 345 3 346 1 186 2 348 1 204 1 25 1 236 1 123 1 298 1 126 1 
322 1 345 1 6 1 134 1 255 1 53 1 
42 1 131 1 151 1 134 7 159 1 255 2 53 6 76 3 112 1 322 3 345 7 6 1 346 2 104 1 371 1 105 1 61 1 296 1 90 1 126 2 224 1 
351 1 255 1 53 1 259 1 261 1 310 1 8 1 207 1 356 1 9 1 209 1 213 2 18 1 322 1 218 2 323 2 24 1 161 3 23 3 274 1 328 1 226 2 326 1 109 2 332 1 118 1 117 4 120 1 121 2 127 2 42 1 238 1 242 1 134 1 74 1 181 1 377 2 76 1 342 1 245 2 345 1 46 2 346 1 138 1 248 6 296 1 381 2 
227 2 194 1 330 1 53 1 304 1 203 1 306 1 204 2 312 1 313 1 55 2 123 1 210 1 126 1 284 2 16 1 59 1 134 1 76 2 100 3 345 1 292 1 186 3 25 1 249 1 193 2 298 1 278 1 
42 1 287 1 151 1 134 2 255 1 53 2 76 2 322 2 345 2 6 1 346 1 123 1 296 1 
134 4 182 1 255 1 53 4 76 1 5 1 322 1 345 4 307 1 346 1 142 1 296 1 126 1 
128 1 42 1 270 1 134 2 255 1 53 2 76 1 322 2 345 2 38 1 346 1 61 1 272 1 224 1 
322 1 345 1 114 1 156 1 82 1 134 1 255 1 53 1 145 1 126 1 
134 2 255 1 53 2 76 1 322 1 345 2 346 1 104 1 371 1 296 1 373 1 
128 1 134 5 182 1 255 2 53 4 76 3 322 2 345 5 307 1 346 2 104 1 105 1 142 1 296 1 90 1 126 1 
128 1 134 5 165 1 182 1 255 2 53 4 76 3 322 2 345 5 307 1 346 2 104 1 142 1 296 1 90 1 126 1 
42 1 238 1 134 1 181 1 255 1 109 1 377 2 53 1 76 1 35 1 322 1 345 1 346 1 120 1 209 1 328 1 226 2 126 1 
128 1 42 1 131 1 151 1 134 1 255 1 53 1 76 1 322 2 345 1 346 1 61 1 224 1 
113 1 63 1 65 1 109 1 353 1 
155 1 63 1 148 1 72 1 176 1 96 1 16 1 59 1 65 2 109 1 353 2 289 1 100 2 354 1 113 2 292 1 186 2 264 1 298 1 
113 1 63 1 98 1 120 1 377 1 353 1 265 1 226 1 230 1 
63 1 176 1 354 1 
83 1 89 1 372 1 225 1 
83 1 239 1 235 1 294 1 269 1 372 1 225 1 
235 1 205 1 10 1 
83 1 212 1 239 3 58 1 150 2 269 1 294 1 235 3 335 1 208 1 372 1 225 1 
370 1 239 2 235 1 294 1 269 1 122 1 
83 1 0 1 239 1 114 1 156 1 235 1 294 1 58 1 269 1 183 1 211 1 
83 1 239 1 235 1 294 1 58 1 269 1 225 1 
239 1 235 1 294 1 58 1 269 1 372 1 225 2 
83 1 129 1 239 2 58 1 269 2 294 2 235 2 153 1 225 1 329 1 
83 2 239 3 58 1 269 1 51 1 167 1 294 1 235 3 122 2 338 1 372 1 211 1 225 1 
83 1 239 2 156 2 58 1 269 1 183 1 294 1 235 2 114 1 311 1 273 1 122 1 372 1 225 1 145 1 
370 1 239 2 235 1 294 1 58 1 269 1 122 1 13 1 
83 1 239 1 235 1 294 1 58 1 269 1 372 1 225 1 
212 1 83 3 239 4 150 1 269 1 152 1 235 4 294 1 208 1 122 2 338 1 372 2 211 1 225 2 
83 1 239 2 58 1 269 1 231 1 44 1 294 1 235 2 122 1 125 1 372 1 225 1 
212 1 83 1 239 3 58 1 150 2 269 1 331 1 294 1 235 3 208 2 372 1 225 1 
83 2 201 1 318 1 154 2 
239 1 235 1 294 1 58 1 269 1 52 1 
83 1 239 2 235 2 294 1 58 1 269 1 122 1 372 1 225 1 167 1 
258 1 
83 1 239 1 235 1 294 1 58 1 269 1 372 1 225 1 
83 1 239 3 58 1 150 1 269 1 167 1 294 1 235 3 122 1 372 1 225 1 
83 1 152 1 338 1 211 1 
83 1 225 1 

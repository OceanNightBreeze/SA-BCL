#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 146 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 146 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 2 128 1 308 1 238 2 108 1 8 1 191 2 192 2 165 1 142 2 144 1 316 1 115 1 273 1 247 4 171 2 220 1 274 6 151 9 374 1 202 1 204 1 206 1 152 1 300 9 176 5 234 2 368 3 
235 2 128 1 308 1 238 2 108 1 8 1 191 2 192 2 165 1 142 2 144 1 316 1 115 1 273 1 247 4 171 2 220 1 274 6 151 9 374 1 202 1 204 1 206 1 152 1 300 9 176 5 368 3 234 2 
235 2 128 1 308 1 238 2 108 1 8 1 191 2 192 2 165 1 142 2 144 1 316 1 115 1 273 1 247 5 171 2 220 1 274 7 151 10 374 1 202 1 204 1 206 1 152 1 300 10 176 6 368 4 234 2 
235 2 128 1 308 1 238 2 108 1 8 1 191 2 192 2 165 1 142 2 144 1 316 1 115 1 247 3 171 2 220 1 274 4 151 7 374 1 202 1 204 1 206 1 152 1 300 7 176 4 368 2 234 1 
273 1 128 1 247 2 171 1 220 1 274 3 151 4 238 1 204 1 191 1 192 1 300 4 176 3 142 1 316 1 115 1 368 1 234 2 
235 1 171 1 151 2 238 1 118 1 204 1 242 1 8 1 191 1 192 1 176 1 300 2 165 1 143 1 316 1 115 1 
235 1 247 1 274 1 151 3 238 2 374 1 204 1 191 2 300 3 176 2 316 1 115 1 368 1 
235 1 273 1 128 1 247 4 171 1 220 1 274 7 185 1 151 9 238 2 374 1 204 1 191 2 192 1 152 1 176 5 300 9 181 1 142 1 144 1 316 1 115 1 234 2 368 3 
235 1 273 1 128 1 247 4 171 1 220 1 274 7 185 1 151 9 238 2 374 1 204 1 191 2 192 1 152 1 176 5 300 9 181 1 142 1 144 1 316 1 115 1 234 2 368 3 
146 1 156 1 323 1 
324 2 156 1 170 1 
351 2 40 2 100 2 163 2 379 1 362 2 182 1 98 2 
1 1 351 3 353 1 237 1 107 1 61 1 239 1 134 1 289 2 137 1 138 1 372 1 40 3 139 1 141 1 163 2 335 1 41 1 168 1 167 1 248 1 73 2 74 1 174 1 362 2 98 2 119 1 253 1 100 2 379 1 326 1 302 2 102 1 125 2 257 2 182 1 77 1 
351 1 7 1 40 1 26 1 100 1 163 1 379 1 89 1 362 1 98 1 
351 1 320 1 131 1 98 1 343 1 323 1 211 1 64 1 40 1 280 1 378 1 26 1 156 1 105 1 
351 1 320 2 362 1 98 1 343 1 323 1 211 1 64 2 40 1 280 1 100 1 378 1 26 1 163 1 156 1 
355 1 64 1 320 1 55 1 194 1 
355 1 64 2 320 2 55 1 173 1 10 1 156 1 323 1 
64 1 320 1 55 1 
351 1 320 1 46 1 362 1 98 1 355 1 7 1 64 1 40 1 26 1 100 1 379 1 163 1 89 1 
156 1 
355 1 184 1 64 2 320 2 55 1 10 1 156 1 323 1 
306 1 209 2 320 5 352 1 366 1 323 1 75 1 345 1 23 1 161 1 355 2 64 5 122 2 55 2 215 1 10 1 155 1 156 1 113 2 
351 2 33 1 362 1 119 1 98 1 239 1 253 1 370 1 289 1 372 1 40 2 139 1 100 1 326 1 302 1 102 1 41 1 303 1 335 1 257 1 
146 1 182 1 
351 2 362 1 98 2 267 1 40 2 24 1 100 1 163 1 182 2 
33 1 210 1 225 1 
351 1 119 1 239 1 253 1 289 1 372 1 40 1 139 1 326 1 302 1 335 1 41 1 102 1 257 1 182 1 336 1 
351 3 40 3 100 3 163 1 362 3 303 1 182 1 98 3 
351 1 40 1 26 1 100 1 89 1 362 1 98 1 
351 1 40 1 26 1 100 1 24 1 163 1 362 1 98 1 267 1 
1 1 351 4 353 1 237 1 107 1 61 1 239 1 370 1 211 1 134 1 289 1 64 1 372 1 40 4 139 1 163 2 41 1 335 1 168 1 145 1 248 1 73 1 320 1 174 1 362 3 119 1 98 3 343 1 253 1 280 1 24 1 100 3 378 1 26 1 379 1 326 1 302 1 102 1 303 1 125 2 231 1 257 1 182 1 77 1 
351 2 40 2 100 1 362 1 342 1 303 1 182 1 98 2 105 1 
351 3 320 1 362 3 98 3 343 1 370 1 211 1 375 1 64 1 40 3 280 1 24 1 26 1 100 3 378 1 163 1 303 2 156 1 145 1 
351 2 33 1 362 2 225 1 98 2 40 2 24 1 100 2 163 1 303 1 
351 1 119 1 253 1 239 1 289 1 372 1 40 1 139 1 326 1 302 1 335 1 41 1 102 1 257 1 182 1 
351 1 160 1 119 1 253 1 239 1 289 1 372 1 40 1 139 1 326 1 302 1 102 1 257 1 182 1 328 1 
1 1 33 2 210 2 2 1 331 1 237 1 81 1 134 1 168 1 248 2 73 4 249 1 74 2 174 1 365 1 225 2 50 1 22 1 203 1 51 1 254 1 297 1 125 2 77 1 
351 1 40 1 26 1 378 1 100 1 362 1 20 1 98 1 
351 5 362 4 342 1 98 5 370 1 40 5 100 4 24 1 163 1 11 1 303 2 216 1 182 1 105 1 
351 2 40 2 26 1 100 2 20 1 89 1 362 2 98 2 
69 1 126 1 
69 1 126 1 
217 1 86 1 
217 1 86 1 
217 1 86 1 
56 1 69 1 126 1 
65 1 69 1 126 1 
347 1 69 2 217 1 126 2 218 1 86 1 
56 1 69 1 126 1 
56 1 69 1 126 1 
245 1 69 1 126 1 
245 1 69 1 126 1 
245 1 69 1 126 1 
15 3 96 1 159 1 320 2 361 1 251 2 37 1 135 1 64 2 109 2 292 1 269 2 313 2 380 2 69 2 126 2 218 1 156 1 259 1 
15 1 261 1 31 1 351 2 159 1 320 1 16 1 251 1 362 2 83 1 98 2 277 1 64 1 65 1 40 2 269 1 100 2 313 1 154 1 380 1 69 1 315 1 126 1 182 1 
171 1 192 1 142 1 
171 1 192 1 118 1 
228 1 192 3 25 1 282 1 142 2 118 1 
228 1 79 1 192 1 25 1 4 1 118 1 
228 2 192 2 25 1 142 1 118 1 
183 1 31 1 209 1 3 1 309 1 83 1 85 2 371 1 288 1 355 4 133 1 64 5 10 1 113 1 170 1 196 1 320 5 16 1 365 1 21 2 49 2 50 1 75 2 323 1 51 1 345 1 254 1 122 1 324 3 55 1 155 3 156 2 
306 1 183 3 129 1 209 2 264 1 309 2 35 5 310 1 83 4 62 1 371 1 355 7 133 2 64 9 10 1 194 5 113 2 170 3 373 1 198 1 320 9 365 3 21 6 49 6 50 3 75 6 323 1 51 3 345 1 254 3 122 2 324 9 55 6 155 8 156 5 
306 1 183 1 209 1 3 1 309 1 83 1 85 1 355 2 133 1 64 3 113 1 170 2 196 1 320 3 365 1 21 2 50 1 49 2 323 1 75 2 51 1 254 1 122 1 324 4 155 3 156 3 
306 1 183 2 129 1 209 1 264 1 3 1 309 1 83 2 85 2 133 1 355 3 64 4 113 1 170 3 196 1 373 1 320 4 365 2 21 4 49 4 50 2 323 1 75 4 51 2 254 2 122 1 324 7 155 5 156 4 
208 1 146 1 239 1 
307 1 239 1 
12 1 
139 1 239 1 
208 2 372 1 139 1 322 1 187 1 239 3 
372 1 139 1 239 1 
53 1 239 1 
158 2 2 4 38 1 241 1 162 2 243 1 111 1 140 2 90 1 248 6 73 14 45 1 74 8 365 3 364 1 203 5 51 3 52 2 
158 2 2 4 38 1 241 1 162 2 243 1 111 1 140 2 90 1 248 6 73 14 45 1 74 8 364 3 365 3 203 7 51 3 52 2 
158 2 2 4 38 1 241 1 162 2 243 1 111 1 140 2 90 1 114 1 248 6 73 14 45 1 74 8 364 1 365 3 203 5 51 3 52 2 
183 3 158 3 2 7 354 4 38 1 134 1 241 2 162 3 243 1 111 1 140 3 90 1 168 1 93 1 95 1 248 19 73 40 45 2 222 1 174 1 74 21 150 1 365 6 364 7 296 1 50 3 203 14 51 6 52 2 254 3 350 3 179 1 28 1 125 2 77 1 
158 2 2 5 134 2 190 1 241 1 162 2 243 1 111 1 140 2 90 1 168 2 360 1 248 7 73 16 45 1 174 2 74 9 365 3 364 2 203 7 51 3 52 2 28 1 125 4 77 2 
235 1 262 1 238 1 289 1 191 1 66 1 192 2 193 1 91 1 142 1 316 1 115 1 246 1 171 1 274 1 151 2 223 1 118 1 253 1 204 1 176 1 178 1 300 2 301 1 153 1 302 1 102 1 257 1 282 1 258 1 
235 1 284 1 262 1 238 1 289 1 191 1 66 1 192 2 193 1 142 1 115 1 246 1 72 1 171 1 274 2 151 3 223 1 118 1 253 1 204 1 27 1 176 1 300 3 301 1 153 1 302 1 102 1 282 1 257 1 258 1 
235 1 284 1 262 1 289 1 66 1 192 2 142 1 115 1 246 1 171 1 274 2 151 2 118 1 253 1 204 1 27 1 176 1 300 2 301 1 153 1 302 1 102 1 257 1 282 1 258 1 
235 2 262 2 238 1 239 1 289 1 191 1 139 1 166 1 72 1 197 1 151 1 253 1 348 1 326 1 300 1 153 2 302 1 180 1 102 1 230 1 257 1 258 2 327 1 
235 1 262 1 238 1 289 1 191 1 66 1 192 2 193 1 91 1 142 1 316 1 246 1 171 1 151 1 223 1 118 1 253 1 27 1 300 1 301 1 153 1 302 1 102 1 257 1 282 1 258 1 
321 1 
351 1 59 1 209 1 266 2 211 1 64 5 9 1 270 1 10 3 166 1 359 2 113 1 71 1 170 2 320 5 323 1 75 2 122 1 324 2 280 1 26 1 326 2 327 1 329 2 131 1 186 1 239 1 133 1 289 2 40 1 139 1 92 1 337 1 147 2 200 1 97 2 47 2 201 1 98 1 343 1 253 1 295 1 252 1 345 1 299 2 55 6 378 1 302 2 101 4 155 2 102 1 257 2 156 2 104 1 105 1 
337 1 351 1 184 1 59 1 147 1 320 3 131 1 186 1 98 1 343 1 295 1 211 1 64 3 280 1 40 1 55 2 26 1 378 1 10 1 101 2 104 1 105 1 
351 1 59 1 184 1 131 1 266 1 186 1 211 1 64 3 40 1 10 1 337 1 320 3 98 1 343 1 295 1 323 1 280 1 55 1 378 1 26 1 101 3 105 1 104 1 156 1 
351 1 184 1 59 1 131 1 266 1 186 1 211 1 64 3 40 1 10 1 337 1 147 1 320 3 47 1 98 1 343 1 295 1 323 1 280 1 378 1 26 1 55 2 101 3 105 1 104 1 156 1 
351 1 59 1 209 1 266 4 211 1 64 5 10 3 113 1 359 2 71 1 170 2 320 5 323 5 75 1 122 1 280 1 123 1 26 1 281 1 29 1 329 2 184 1 236 1 131 1 186 1 132 1 40 1 92 1 337 1 147 4 97 2 47 4 98 1 343 1 295 1 345 1 378 1 55 7 299 2 101 6 155 1 104 1 105 1 156 5 
351 1 59 1 209 1 266 2 211 1 64 4 10 2 113 1 359 2 71 1 170 2 320 4 75 1 323 1 122 1 324 2 280 1 26 1 329 2 131 1 186 1 40 1 92 1 337 1 147 2 97 2 47 2 98 1 201 1 343 1 295 1 345 1 378 1 299 2 55 4 101 4 155 1 105 1 104 1 156 2 
329 2 351 1 59 1 209 1 131 1 266 2 186 1 132 1 211 1 64 4 40 1 10 2 359 2 113 1 92 1 71 1 170 2 337 1 147 2 320 4 97 2 47 2 98 1 343 1 295 1 323 1 75 1 345 1 122 1 123 1 280 1 55 4 299 2 378 1 26 1 101 4 155 1 281 1 156 1 105 1 104 1 
329 2 351 1 59 1 209 1 131 1 266 2 186 1 132 1 211 1 64 4 40 1 10 2 359 2 113 1 92 1 71 1 170 2 337 1 147 2 320 4 97 2 47 2 98 1 343 1 295 1 323 1 75 1 345 1 122 1 123 1 280 1 55 4 299 2 378 1 26 1 101 4 155 1 281 1 156 1 105 1 104 1 
329 2 351 1 59 1 209 1 131 1 266 2 186 1 36 1 211 1 64 4 40 1 10 2 68 1 113 1 92 1 337 1 147 2 320 4 47 2 276 1 98 1 343 1 295 1 323 1 75 1 345 1 122 1 377 2 324 2 123 1 280 1 55 4 299 2 378 1 26 1 101 4 207 2 155 1 156 1 105 1 104 1 
329 2 351 1 59 1 236 1 209 1 131 1 266 3 186 1 132 1 211 1 64 4 40 1 10 2 359 2 113 1 92 1 71 1 170 2 337 1 147 3 320 4 97 2 47 3 98 1 343 1 295 1 323 1 75 1 345 1 122 1 123 1 280 1 299 2 378 1 26 1 55 5 101 5 155 1 281 1 156 1 105 1 104 1 
329 2 351 1 59 1 236 1 209 1 131 1 266 3 186 1 132 1 211 1 64 4 40 1 10 2 359 2 113 1 92 1 71 1 170 2 337 1 147 3 320 4 97 2 47 3 98 1 343 1 295 1 323 1 75 1 345 1 122 1 123 1 280 1 299 2 378 1 26 1 55 5 101 5 155 1 281 1 156 1 105 1 104 1 
351 1 59 1 209 1 266 2 211 1 64 4 10 2 113 1 320 4 75 1 323 1 122 1 324 2 280 1 26 1 329 2 131 1 186 1 36 1 40 1 92 1 337 1 147 2 47 2 98 1 201 1 343 1 295 1 345 1 377 2 378 1 299 2 55 4 101 4 155 1 207 2 105 1 104 1 156 1 
1 1 158 1 248 2 146 1 2 2 73 5 74 3 237 1 174 1 365 1 203 2 51 1 52 1 134 1 162 1 297 1 243 1 140 1 90 1 125 2 182 2 77 1 168 1 
183 2 1 2 33 11 2 1 210 11 353 1 237 1 34 1 354 3 134 2 141 1 314 1 356 1 168 2 248 6 148 1 73 14 174 2 74 8 150 1 364 1 48 1 365 2 225 4 296 1 50 2 203 2 51 1 254 1 350 3 125 4 182 1 77 2 
1 1 351 2 237 1 353 1 239 1 370 1 240 1 289 1 134 1 372 1 40 2 139 1 141 1 41 1 335 1 336 1 44 1 168 1 248 1 73 2 174 1 74 1 362 1 48 1 119 1 225 1 98 1 253 1 100 1 229 1 326 1 302 1 102 1 303 1 257 1 125 2 182 1 77 1 
351 3 1 3 158 1 210 6 2 6 353 1 61 2 162 2 111 1 168 3 14 2 317 2 73 27 174 3 74 14 362 1 364 1 365 5 119 2 225 6 175 2 26 1 326 1 125 6 182 3 77 3 367 1 183 2 33 6 237 3 239 2 370 1 289 1 134 3 243 1 372 2 88 1 40 3 140 2 139 2 141 1 90 1 335 2 41 2 248 13 48 1 98 1 99 2 253 2 50 2 203 7 51 5 52 2 254 2 100 1 302 1 303 1 102 2 257 1 260 1 
351 1 1 2 237 2 353 1 286 1 239 3 63 1 289 8 134 2 40 1 139 2 141 1 166 1 168 2 167 2 116 1 319 1 338 1 248 1 73 2 174 2 74 1 362 1 224 1 98 1 253 2 297 1 27 1 100 1 178 1 326 2 302 8 303 1 102 2 257 7 125 4 77 2 327 1 58 1 
183 1 1 1 351 1 33 1 2 1 210 1 237 1 285 1 134 1 40 1 163 1 168 1 248 2 73 3 174 1 74 1 362 1 48 1 365 1 225 1 98 1 50 1 203 1 51 1 254 1 100 1 24 1 125 2 77 1 
1 1 33 1 210 1 73 2 249 1 237 1 174 1 74 2 364 1 365 1 225 1 50 1 203 1 134 1 297 1 125 2 77 1 168 1 
1 1 33 1 248 2 2 1 210 1 73 2 331 1 237 1 174 1 225 1 203 1 51 1 134 1 254 1 297 1 125 2 77 1 168 1 
183 1 1 1 248 2 33 2 2 1 210 2 73 4 237 1 174 1 74 2 364 1 365 1 225 2 50 1 203 2 51 1 134 1 254 1 297 1 125 2 77 1 168 1 
1 1 33 1 210 1 73 2 249 1 237 1 174 1 74 2 364 1 365 1 225 1 50 1 203 1 134 1 125 2 77 1 168 1 116 1 
1 1 33 1 248 2 2 1 210 1 73 2 331 1 237 1 174 1 225 1 203 1 51 1 134 1 254 1 125 2 77 1 168 1 116 1 
183 1 1 1 248 2 33 2 2 1 210 2 73 4 237 1 174 1 74 2 364 1 365 1 225 2 50 1 203 2 51 1 134 1 254 1 125 2 77 1 168 1 116 1 
183 1 1 1 248 2 33 2 2 1 210 2 73 4 237 1 174 1 74 2 364 1 365 1 225 2 50 1 203 2 51 1 134 1 254 1 125 2 77 1 168 1 
351 1 1 1 237 1 353 1 61 1 239 1 289 1 134 1 372 1 40 1 139 1 141 1 41 1 335 1 168 1 248 1 73 2 74 1 174 1 119 1 253 1 326 1 302 1 102 1 257 1 125 2 182 1 77 1 
351 1 1 1 237 1 353 1 160 1 239 1 289 1 134 1 372 1 40 1 139 1 141 1 168 1 248 1 73 2 74 1 174 1 119 1 253 1 326 1 302 1 102 1 257 1 125 2 182 1 77 1 328 1 157 1 
183 1 1 1 248 2 33 2 2 1 210 2 73 4 237 1 174 1 74 2 364 1 48 1 365 1 225 2 50 1 203 2 51 1 134 1 254 1 125 2 77 1 168 1 
183 1 351 1 1 1 33 2 2 1 210 2 237 1 61 1 239 1 289 1 134 1 372 1 40 1 139 1 41 1 335 1 168 1 248 2 73 4 74 2 174 1 364 1 365 1 225 2 119 1 50 1 253 1 175 1 203 2 51 1 254 1 178 1 302 1 102 1 257 1 125 2 77 1 
183 1 1 1 351 1 33 1 210 1 237 1 5 1 134 1 40 1 163 1 168 1 248 1 73 3 174 1 74 2 362 1 364 1 48 1 365 1 98 1 225 1 50 1 203 1 51 1 254 1 100 1 24 1 125 2 77 1 
183 4 158 1 2 4 189 4 354 4 134 3 190 1 162 1 243 1 291 1 140 1 164 2 90 1 293 1 358 1 43 1 168 3 219 1 248 21 221 1 73 41 174 3 74 20 150 3 365 5 364 4 296 1 50 4 203 8 120 1 51 5 52 1 254 4 121 1 349 1 350 3 54 1 255 1 28 1 304 1 125 6 305 1 77 3 
183 4 158 1 2 4 189 4 354 4 134 4 190 1 162 1 243 1 291 1 140 1 164 2 90 1 293 1 358 1 43 1 168 4 219 1 248 18 221 1 73 38 174 4 74 20 150 3 365 5 364 3 296 1 50 4 203 7 120 1 51 4 52 1 254 3 121 1 349 1 350 3 54 1 255 1 28 2 304 1 125 8 305 1 77 4 
183 7 158 1 2 7 189 4 354 4 134 2 190 1 162 1 243 1 140 1 314 2 164 1 90 1 293 1 358 1 43 1 168 2 248 25 221 1 73 52 174 2 74 27 150 2 365 8 364 7 296 2 50 7 203 14 120 1 51 8 52 1 254 7 121 1 349 1 350 4 54 1 255 1 28 1 304 1 125 4 305 1 77 2 
183 3 2 3 189 2 354 2 134 2 190 1 291 1 164 1 293 1 168 2 248 10 73 19 174 2 74 9 150 1 365 3 364 3 296 1 50 3 203 6 120 1 51 3 254 3 349 1 350 1 54 2 124 1 255 1 125 4 77 2 
183 3 2 2 189 4 354 2 134 3 190 1 164 2 293 1 358 1 43 1 168 3 248 12 221 1 73 26 174 3 74 14 150 2 364 2 365 3 50 3 203 4 51 2 120 2 254 2 121 1 349 1 350 2 54 1 255 1 28 2 304 1 125 6 305 1 77 3 
269 1 313 1 361 1 341 1 251 1 69 1 380 1 126 1 218 1 259 1 
261 1 65 1 
269 1 313 1 251 1 69 1 380 1 112 1 256 1 126 1 333 1 
15 2 159 1 320 1 361 1 251 1 37 1 135 1 64 1 109 1 292 1 269 1 313 1 380 1 69 1 126 1 218 1 156 1 259 1 
15 2 159 1 320 1 361 1 251 1 37 1 135 1 64 1 109 1 292 1 269 1 313 1 380 1 69 1 126 1 218 1 156 1 259 1 
15 2 159 1 320 1 361 1 251 1 37 1 135 1 64 1 109 1 292 1 269 1 313 1 380 1 69 1 126 1 218 1 156 1 259 1 
347 1 56 1 6 1 
347 1 56 1 6 1 
245 1 177 1 
347 1 245 1 177 1 
154 1 315 1 
351 2 31 1 261 1 83 1 37 1 355 1 64 1 109 1 65 1 40 2 269 1 313 1 69 1 315 1 15 1 320 1 16 1 251 1 362 2 98 2 277 1 344 1 100 2 380 1 154 1 126 1 182 1 
56 1 6 1 
347 1 245 1 177 1 
1 1 351 2 237 1 353 1 286 1 287 1 239 1 289 2 134 1 39 1 290 1 40 2 139 1 141 1 357 1 168 1 167 2 248 1 339 1 73 2 174 1 74 1 48 1 98 2 253 1 302 2 102 1 125 2 257 2 77 1 58 1 
171 1 32 1 262 1 223 1 118 1 253 1 289 2 66 1 192 2 27 1 178 1 302 2 102 1 282 1 257 2 142 1 233 1 272 1 246 1 
171 1 60 1 262 1 223 1 118 1 253 1 289 1 66 1 192 2 27 1 302 1 102 1 282 1 257 1 142 1 233 1 246 1 
262 1 199 1 253 1 239 1 289 1 348 1 139 1 326 1 302 1 102 1 257 1 166 1 327 1 272 1 
171 1 32 1 262 1 223 1 118 1 253 1 289 1 66 1 192 2 27 1 302 1 102 1 282 1 257 1 142 1 233 1 272 1 246 1 
136 1 
146 1 352 1 155 1 366 1 156 1 323 1 75 1 
209 1 64 1 10 1 359 1 113 1 71 1 170 1 320 1 97 1 75 1 323 1 345 1 122 1 324 1 55 1 155 1 156 2 
183 1 330 1 307 2 209 2 311 1 187 1 239 3 268 1 289 1 133 1 64 1 372 1 139 1 10 1 271 1 113 2 170 3 317 1 320 1 275 1 250 1 365 1 21 3 50 1 49 3 253 1 75 3 76 1 51 1 345 2 254 1 122 2 324 6 55 1 326 1 302 1 102 2 155 4 257 1 156 3 78 1 
0 1 183 2 209 2 82 1 84 1 354 1 133 1 64 1 10 1 271 2 113 2 43 1 170 3 221 1 320 1 200 1 150 1 365 2 21 5 49 5 50 2 75 5 323 2 345 2 51 2 254 2 121 1 122 2 350 1 324 6 55 1 155 8 304 1 305 1 156 5 
0 1 351 1 209 1 132 1 7 1 162 1 64 1 40 1 111 1 140 1 163 1 89 1 271 2 113 1 320 1 46 1 362 1 365 2 98 1 75 2 345 1 51 1 52 1 122 1 26 1 100 1 379 1 155 2 
209 1 352 1 366 1 75 1 323 1 345 1 122 1 155 1 113 1 156 1 
0 1 317 1 183 2 365 2 21 5 50 2 49 5 75 5 51 2 254 2 324 10 271 2 155 5 156 5 170 5 
64 1 320 1 55 1 10 1 156 1 323 1 
306 1 283 1 209 2 130 1 265 2 239 1 289 4 133 2 64 3 139 1 9 1 270 1 10 2 166 1 113 2 320 3 200 2 294 1 253 1 75 2 345 1 122 2 55 4 326 2 302 4 102 1 155 2 257 4 327 1 
351 3 1 1 353 1 237 1 107 1 61 1 239 1 289 1 134 1 372 1 40 3 139 1 163 2 335 1 41 1 168 1 248 1 73 1 174 1 362 2 98 2 119 1 253 1 100 2 326 1 379 1 302 1 102 1 125 2 257 1 182 1 77 1 
158 1 209 1 200 1 21 2 49 2 75 2 323 2 345 1 133 1 122 1 324 4 155 1 113 1 156 4 170 2 
205 1 269 1 251 1 
127 1 269 1 361 1 251 1 154 1 
205 1 269 1 251 1 
205 1 269 1 251 1 
318 1 269 1 251 1 
318 1 269 1 251 1 
318 1 269 1 251 1 
269 1 251 1 
69 1 126 1 
158 1 2 4 354 1 134 1 190 1 162 2 243 1 111 1 140 2 90 1 168 1 248 7 73 15 174 1 74 8 150 1 364 1 365 3 203 5 51 3 52 2 350 1 304 1 125 2 77 1 
183 1 158 1 2 4 354 2 134 2 190 1 162 2 243 1 111 1 140 2 90 1 168 2 248 8 73 18 174 2 74 10 150 1 365 4 364 2 296 1 50 1 203 6 51 3 52 2 350 1 304 1 125 4 77 2 381 1 
183 2 158 1 2 5 354 1 134 3 190 1 162 2 243 1 111 1 140 2 90 1 43 1 168 3 248 13 73 26 221 1 174 3 74 13 150 1 364 2 365 5 50 2 203 7 51 5 52 2 254 2 121 1 350 1 28 1 304 1 125 6 305 1 77 3 381 1 
183 2 158 1 2 5 354 1 134 3 190 1 162 2 243 1 111 1 140 2 90 1 43 1 168 3 248 10 73 24 221 1 174 3 74 14 150 1 364 4 365 5 50 2 203 9 51 4 52 2 254 1 350 1 121 1 28 1 304 1 125 6 305 1 77 3 381 1 
158 1 2 4 354 1 134 1 190 1 162 2 243 1 111 1 140 2 90 1 168 1 248 7 73 15 174 1 74 8 150 1 364 1 365 3 203 5 51 3 52 2 350 1 304 1 125 2 77 1 
183 2 2 1 354 1 134 1 190 1 43 1 168 1 248 6 73 12 221 1 174 1 74 6 150 1 364 1 365 2 50 2 203 2 51 2 254 2 350 1 121 1 304 1 125 2 305 1 77 1 
183 2 158 1 2 5 354 1 134 4 190 1 162 2 243 1 111 1 140 2 90 1 43 1 168 4 248 11 221 1 73 25 174 4 74 14 150 1 364 2 365 5 50 2 203 7 51 4 52 2 254 1 121 1 350 1 28 2 304 1 125 8 305 1 77 4 381 1 
183 3 2 3 354 1 134 4 190 1 291 1 43 1 168 4 248 7 221 1 73 16 174 4 74 9 150 1 364 3 365 3 50 3 203 6 51 2 254 2 121 1 350 1 28 2 304 1 125 8 305 1 77 4 
248 4 2 3 73 7 74 3 364 3 365 1 203 6 51 1 52 1 162 3 243 1 140 3 90 2 
183 2 158 1 2 5 354 1 134 4 190 1 162 2 243 1 111 1 291 1 140 2 90 1 43 1 168 4 248 11 221 1 73 25 174 4 74 14 150 1 364 2 365 5 50 2 203 7 51 4 52 2 254 1 121 1 350 1 28 2 304 1 125 8 305 1 77 4 
158 1 2 4 134 2 162 2 243 1 111 1 140 2 90 1 168 2 248 8 73 17 174 2 74 9 364 3 365 3 203 7 51 3 52 2 28 1 125 4 77 2 
158 1 248 2 146 1 2 2 73 5 74 3 365 1 203 2 51 1 52 1 162 1 243 1 140 1 90 1 
183 1 248 2 2 1 73 4 174 1 74 2 365 1 364 1 50 1 203 2 51 1 134 1 254 1 125 2 77 1 168 1 381 1 
183 1 248 4 2 1 73 7 74 3 150 1 365 1 364 1 296 1 50 1 203 2 51 1 354 2 254 1 350 1 
183 2 158 1 2 5 354 2 134 1 162 2 243 1 111 1 140 2 314 1 90 1 168 1 248 12 73 25 148 1 74 13 174 1 365 5 364 2 50 2 296 1 203 7 51 5 52 2 254 2 350 2 28 1 125 2 77 1 
354 1 248 1 73 1 
350 1 73 1 74 1 
317 1 183 1 248 3 2 2 73 6 174 1 74 3 365 1 364 1 50 1 203 3 51 1 134 1 254 1 125 2 77 1 168 1 381 1 
183 2 2 1 354 1 134 1 190 1 43 1 168 1 248 6 73 12 221 1 174 1 74 6 150 1 364 1 365 2 50 2 203 2 51 2 254 2 350 1 121 1 304 1 125 2 305 1 77 1 
248 3 2 1 73 6 74 3 365 1 364 1 203 2 51 1 52 1 162 1 140 1 
248 2 2 1 73 3 74 1 18 1 174 1 364 1 203 2 134 1 162 1 243 1 140 1 28 1 90 1 125 2 77 1 168 1 
248 5 2 3 73 10 174 1 74 5 364 2 365 2 203 5 51 2 52 1 134 1 190 1 162 2 111 1 140 2 125 2 77 1 168 1 
73 2 174 1 74 2 365 1 364 1 50 1 203 1 134 1 190 1 125 2 77 1 168 1 
183 1 248 2 2 1 73 4 174 1 74 2 365 1 364 1 50 1 203 2 51 1 134 1 254 1 190 1 125 2 77 1 168 1 
248 2 2 1 73 3 18 1 174 3 74 1 364 1 203 2 134 3 190 1 162 1 291 1 140 1 28 1 125 6 77 3 168 3 
183 2 158 1 2 5 354 3 134 4 190 1 162 2 243 1 111 1 291 1 140 2 90 1 168 4 93 1 95 1 248 15 73 31 174 4 74 16 150 1 365 5 364 4 50 2 203 9 51 5 52 2 254 2 350 3 28 1 179 1 125 8 77 4 381 1 
376 1 351 1 40 1 342 1 182 1 98 1 105 1 
351 1 149 1 342 1 98 1 376 1 227 1 312 1 214 1 298 1 40 1 182 1 105 1 
289 1 146 1 139 1 326 1 302 1 102 1 166 1 257 1 327 1 253 1 239 1 
351 2 362 1 119 1 98 1 239 1 253 1 289 1 372 1 40 2 139 1 100 1 326 1 302 1 102 1 303 1 41 1 257 1 182 1 
351 2 265 1 239 3 289 1 372 2 40 2 139 2 41 1 362 2 98 2 119 1 253 1 53 1 280 1 100 1 378 1 26 1 302 1 303 1 102 1 257 1 182 1 232 1 
351 2 265 1 160 1 239 3 289 2 372 2 40 2 139 2 70 1 362 2 98 2 119 1 253 1 53 1 280 1 100 1 378 1 26 1 302 2 303 1 102 1 257 2 182 1 232 1 
351 1 208 1 307 1 265 1 239 2 211 1 289 1 7 1 64 2 110 1 40 1 163 1 89 1 320 2 46 1 362 1 98 1 323 1 26 1 55 1 100 1 379 1 302 1 257 1 156 1 
351 1 307 1 265 1 311 1 239 1 289 1 7 1 64 1 40 1 163 1 89 1 320 1 46 1 362 1 98 1 323 1 26 1 100 1 379 1 302 1 257 1 156 1 
289 1 338 1 302 1 102 1 257 1 253 1 
319 1 338 1 80 1 224 1 188 1 187 1 239 3 253 2 87 1 63 1 289 7 372 1 27 1 139 2 178 1 326 2 302 7 102 3 257 6 167 1 58 1 
351 2 1 2 158 1 2 4 61 1 162 2 111 1 168 2 14 1 73 13 174 2 74 7 362 1 364 1 365 3 119 1 175 1 26 1 178 1 125 4 182 3 77 2 237 2 239 1 289 1 134 2 39 1 372 1 243 1 40 2 139 1 140 2 41 1 335 1 90 1 248 6 48 1 98 1 253 1 203 5 51 3 52 2 100 1 302 1 303 1 102 1 257 1 260 1 
0 1 351 1 307 1 209 2 352 1 311 1 355 1 7 1 64 2 162 1 111 1 163 1 10 1 271 2 113 2 320 2 362 1 366 1 365 2 76 1 75 5 323 2 122 2 26 1 326 1 78 1 130 1 239 1 289 1 40 1 140 1 89 1 250 1 46 1 98 1 345 2 51 2 52 1 55 1 100 1 379 1 302 1 155 4 257 1 156 2 
208 1 338 1 275 1 187 1 239 2 253 1 289 2 372 1 139 1 178 1 302 2 102 2 257 2 
340 1 239 1 253 1 289 4 139 1 326 1 178 1 302 4 102 1 257 4 166 1 70 1 327 1 
265 1 332 1 188 1 239 1 253 1 87 1 278 1 289 2 212 1 372 1 139 1 302 2 102 2 257 2 
289 1 171 1 192 1 326 1 302 1 102 1 257 1 118 1 253 1 246 1 
287 1 239 1 253 1 289 2 27 1 139 1 178 1 302 2 102 1 257 2 58 1 
340 1 265 1 224 1 239 3 253 2 63 1 289 5 139 2 326 1 178 1 302 5 102 2 166 1 257 4 327 1 58 1 
340 1 265 1 117 1 239 3 253 2 63 1 289 5 139 2 326 1 178 1 302 5 102 2 166 1 257 4 327 1 58 1 
351 2 362 1 119 1 98 1 160 1 239 1 253 1 289 1 372 1 40 2 139 1 100 1 326 1 302 1 102 1 303 1 257 1 182 1 
80 1 265 1 188 1 187 1 239 1 253 1 87 1 289 1 372 1 139 1 302 1 102 2 257 1 
351 1 339 1 263 1 17 1 98 1 334 1 290 1 40 1 357 1 
195 1 263 1 226 1 
67 1 263 1 17 1 182 1 334 1 
195 1 320 2 263 1 17 2 343 1 323 1 226 1 334 2 211 1 279 1 355 1 64 2 280 1 67 2 26 1 378 1 182 1 156 1 145 1 
204 1 146 1 176 1 115 1 
204 1 191 1 176 1 300 1 151 1 238 1 115 1 
235 1 300 1 153 1 
172 1 151 3 238 1 346 1 204 1 8 2 191 1 176 1 300 3 316 1 115 1 94 1 
204 1 274 1 191 1 176 1 300 2 151 2 238 1 115 1 234 1 
247 1 171 1 220 1 151 1 238 1 191 1 192 1 300 1 176 1 142 1 316 1 
191 1 176 1 300 1 151 1 238 1 316 1 115 1 
204 1 191 1 300 1 151 1 238 1 316 1 115 2 
369 1 106 1 151 2 238 2 191 2 325 1 176 1 300 2 316 1 115 1 
247 1 274 2 151 3 238 1 204 1 191 1 152 1 300 3 176 2 144 1 316 1 115 1 368 1 
171 1 274 1 151 2 238 1 118 1 204 1 191 1 192 2 176 1 300 2 103 1 282 1 142 1 316 1 115 1 
273 1 247 1 274 2 151 4 238 2 204 1 191 2 300 4 176 2 316 1 115 1 234 1 368 1 
204 1 191 1 176 1 300 1 151 1 238 1 316 1 115 1 
247 1 172 1 274 2 151 4 238 1 346 1 204 2 8 1 191 1 300 4 176 3 115 2 57 1 368 1 
274 1 19 1 151 2 238 1 204 1 213 1 191 1 176 1 300 2 181 1 316 1 115 1 
172 1 151 3 363 1 238 1 346 2 204 1 8 2 191 1 176 1 300 3 316 1 115 1 
176 2 30 2 42 1 13 1 
244 1 191 1 300 1 151 1 238 1 316 1 
204 1 274 1 191 1 176 1 300 2 151 2 238 1 144 1 316 1 115 1 
169 1 
204 1 191 1 176 1 300 1 151 1 238 1 316 1 115 1 
274 1 151 3 238 1 204 1 8 1 191 1 300 3 176 1 144 1 316 1 115 1 
247 1 176 1 57 1 368 1 
176 1 115 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 219 236 380 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 312 1 104 1 267 4 361 1 54 1 169 1 173 1 8 1 344 5 90 1 319 1 366 1 290 2 108 2 176 1 38 9 254 2 297 1 257 1 70 9 329 3 22 2 303 1 184 2 302 6 355 2 120 2 
339 1 312 1 104 1 267 4 361 1 54 1 169 1 173 1 8 1 344 5 90 1 319 1 366 1 290 2 108 2 176 1 38 9 254 2 297 1 257 1 70 9 329 3 22 2 303 1 184 2 302 6 355 2 120 2 
339 1 312 1 104 1 267 5 361 1 54 1 169 1 173 1 8 1 344 6 90 1 319 1 366 1 290 2 108 2 176 1 38 10 254 2 297 1 257 1 70 10 329 4 22 2 303 1 184 2 302 7 355 2 120 2 
339 1 312 1 267 3 361 1 54 1 169 1 173 1 8 1 344 4 90 1 319 1 366 1 290 2 108 2 176 1 38 7 254 2 297 1 257 1 70 7 329 2 22 1 303 1 184 2 302 4 355 2 120 2 
38 4 254 1 339 1 312 1 297 1 104 1 267 2 329 1 70 4 22 2 184 1 302 3 344 3 319 1 120 1 366 1 290 1 108 1 
38 2 254 1 339 1 207 1 54 1 70 2 148 1 173 1 184 1 344 1 355 1 319 1 120 1 366 1 290 1 357 1 
38 3 254 2 339 1 267 1 70 3 329 1 184 2 302 1 344 2 90 1 355 1 319 1 366 1 
339 1 29 1 312 1 104 1 267 4 361 1 194 1 169 1 344 5 90 1 319 1 366 1 290 1 108 1 38 9 254 2 297 1 329 3 70 9 22 2 302 7 184 2 355 1 120 1 
339 1 29 1 312 1 104 1 267 4 361 1 194 1 169 1 344 5 90 1 319 1 366 1 290 1 108 1 38 9 254 2 297 1 329 3 70 9 22 2 302 7 184 2 355 1 120 1 
161 1 159 1 258 1 
199 2 161 1 36 1 
74 2 67 2 215 2 30 2 370 1 265 2 259 1 117 2 
338 1 27 1 192 1 215 3 30 2 340 2 3 1 264 1 265 2 362 1 55 1 56 1 200 1 318 1 12 1 156 1 66 2 37 1 157 1 177 1 67 3 255 2 114 1 370 1 259 1 116 1 117 2 44 1 276 1 74 2 229 1 142 1 99 1 78 1 308 2 309 2 100 1 
74 1 67 1 305 1 209 1 215 1 30 1 265 1 13 1 259 1 117 1 
136 1 67 1 52 1 215 1 84 1 265 1 159 1 119 1 57 1 333 1 346 1 305 1 161 1 47 1 
136 1 67 1 52 1 30 1 215 1 265 1 159 1 117 1 74 1 57 1 346 2 333 1 305 1 161 1 47 2 
369 1 51 1 346 1 151 1 47 1 
369 1 28 1 346 2 151 1 161 1 159 1 47 2 223 1 
346 1 151 1 47 1 
369 1 67 1 30 1 215 1 265 1 259 1 117 1 74 1 197 1 346 1 305 1 209 1 47 1 13 1 
161 1 
369 1 346 2 151 1 240 1 161 1 159 1 47 2 223 1 
369 2 225 2 206 1 159 1 42 1 314 2 371 1 288 1 301 2 58 1 346 5 151 2 377 1 161 1 46 1 47 5 336 1 272 1 223 1 
156 1 67 2 255 1 192 1 30 1 215 2 340 1 264 1 265 1 117 1 276 1 56 1 229 1 59 1 99 1 318 1 200 1 24 1 309 1 80 1 
370 1 258 1 
67 2 215 2 30 1 370 2 265 2 117 1 74 1 45 1 244 1 
162 1 59 1 18 1 
156 1 67 1 255 1 215 1 192 1 340 1 370 1 264 1 276 1 229 1 56 1 99 1 200 1 318 1 278 1 309 1 
74 1 67 3 215 3 30 3 370 1 265 3 80 1 117 3 
67 1 305 1 209 1 215 1 30 1 265 1 117 1 
74 1 67 1 45 1 244 1 305 1 215 1 30 1 265 1 117 1 
212 1 27 1 52 1 192 1 215 4 30 3 340 1 3 1 264 1 265 3 362 1 55 1 56 1 57 1 244 1 318 1 346 1 200 1 12 1 156 1 66 2 37 1 177 1 136 1 67 4 255 1 370 1 296 1 259 1 117 3 44 1 276 1 229 1 74 2 99 1 333 1 78 1 24 1 305 1 47 1 308 1 309 1 100 1 80 1 
119 1 67 2 215 2 30 1 370 1 265 2 34 1 117 1 80 1 
136 1 67 3 113 1 52 1 30 3 215 3 296 1 265 3 117 3 74 1 57 1 244 1 346 1 333 1 305 1 24 1 161 1 47 1 80 2 
67 2 30 2 215 2 18 1 265 2 117 2 74 1 244 1 59 1 80 1 
156 1 67 1 255 1 215 1 340 1 192 1 370 1 264 1 276 1 229 1 56 1 99 1 200 1 318 1 309 1 
67 1 326 1 255 1 2 1 215 1 340 1 192 1 370 1 264 1 276 1 56 1 99 1 200 1 318 1 309 1 
162 2 27 1 163 1 285 1 31 1 3 1 362 1 89 1 59 2 33 1 61 1 12 1 324 1 66 2 37 1 325 1 138 1 273 1 18 2 41 1 116 2 78 2 308 4 100 1 
171 1 67 1 333 1 305 1 215 1 30 1 265 1 117 1 
119 1 15 1 137 1 74 1 67 5 244 1 24 1 215 5 30 4 370 1 265 5 34 1 117 4 80 2 
171 1 67 2 305 1 209 1 215 2 30 2 265 2 117 2 
97 1 342 1 
97 1 342 1 
40 1 248 1 
40 1 248 1 
40 1 248 1 
97 1 342 1 72 1 
97 1 342 1 72 1 
97 1 342 1 25 1 
97 2 269 1 40 1 248 1 342 2 313 1 
97 1 342 1 72 1 
97 1 342 1 353 1 
97 1 342 1 353 1 
97 1 342 1 353 1 
97 2 124 2 214 1 140 1 287 2 342 2 180 2 313 1 343 1 216 2 228 1 77 1 346 2 161 1 11 2 47 2 92 3 237 1 94 1 
291 1 67 2 97 1 102 1 215 2 287 1 30 2 370 1 342 1 265 2 180 1 216 1 228 1 117 2 43 1 218 1 346 1 174 1 47 1 11 1 92 1 189 1 25 1 337 1 
120 1 290 1 108 1 
148 1 120 1 290 1 
148 1 9 1 153 1 320 1 120 3 108 2 
148 1 9 1 320 1 120 2 108 1 86 1 
148 1 9 2 320 1 120 2 108 1 
238 1 311 2 163 1 102 1 314 1 131 2 288 2 363 1 199 3 33 1 346 5 174 1 151 1 223 1 36 1 349 1 324 1 369 4 325 1 225 1 226 1 159 1 181 2 43 1 73 1 301 1 185 1 46 1 161 2 47 5 188 1 336 3 
81 1 238 2 311 6 163 3 102 4 51 5 147 1 314 2 131 6 288 6 363 3 199 9 33 3 346 9 151 6 223 1 36 3 252 1 324 3 369 7 325 3 225 2 39 1 294 5 226 2 159 1 115 1 42 1 301 2 75 1 185 1 161 5 46 1 47 9 336 8 
238 1 311 2 163 1 102 1 314 1 131 2 288 2 363 1 199 4 33 1 346 3 36 2 369 2 324 1 325 1 225 1 226 1 159 1 181 1 42 1 73 1 301 1 161 3 188 1 47 3 336 3 
81 1 238 1 311 4 163 2 102 2 314 1 131 4 288 4 363 2 199 7 33 2 346 4 36 3 369 3 324 2 325 2 225 1 39 1 226 1 159 1 181 2 115 1 42 1 301 1 73 1 161 4 47 4 188 1 336 5 
192 1 201 1 258 1 
126 1 192 1 
378 1 
192 1 264 1 
99 1 192 3 264 1 201 2 63 1 193 1 
99 1 192 1 264 1 
192 1 263 1 
324 1 273 3 179 1 351 1 168 1 243 1 116 4 132 1 372 1 33 1 78 3 61 2 187 1 365 1 222 2 308 7 35 1 
324 1 273 3 179 1 351 1 168 1 243 1 116 4 132 1 372 1 33 1 78 3 61 2 187 1 365 1 222 2 308 7 35 1 
324 1 16 1 273 3 179 1 168 1 351 1 243 1 116 4 132 1 372 1 33 1 78 3 61 2 187 1 365 1 222 2 308 7 35 1 
27 1 163 3 3 1 341 1 168 1 243 2 132 5 363 3 33 4 247 1 61 5 365 1 367 1 368 3 222 3 35 2 66 2 324 4 37 1 325 3 273 10 179 1 178 1 351 1 330 1 116 16 331 1 372 2 186 1 78 15 187 2 79 4 308 31 100 1 
27 2 3 2 168 1 243 1 132 1 33 1 268 1 61 3 222 2 35 1 324 1 66 4 37 2 273 4 179 1 19 1 351 1 116 5 372 1 186 1 78 4 187 1 308 9 100 2 
1 1 339 1 340 1 105 1 148 1 344 1 318 1 153 1 319 1 10 1 366 1 154 1 290 1 108 1 109 1 323 1 38 2 254 1 255 1 17 1 328 1 70 2 276 1 302 1 184 1 355 1 210 1 120 2 160 1 309 1 
123 1 339 1 127 1 340 1 53 1 105 1 148 1 344 1 318 1 153 1 319 1 10 1 290 1 108 1 109 1 323 1 38 3 254 1 255 1 17 1 328 1 70 3 276 1 184 1 302 2 355 1 210 1 120 2 160 1 309 1 
123 1 339 1 340 1 53 1 105 1 148 1 344 1 318 1 153 1 319 1 290 1 323 1 108 1 38 2 255 1 17 1 328 1 70 2 276 1 302 2 355 1 210 1 120 2 160 1 309 1 
38 1 254 1 360 1 127 1 255 1 192 1 17 2 340 1 264 1 68 1 70 1 32 1 105 2 276 1 172 1 184 1 304 1 318 1 200 1 355 2 160 2 221 1 309 1 
123 1 340 1 105 1 148 1 318 1 153 1 10 1 366 1 154 1 290 1 108 1 109 1 323 1 38 1 254 1 255 1 17 1 328 1 70 1 276 1 184 1 355 1 210 1 120 2 160 1 309 1 
335 1 
238 1 283 1 52 1 340 2 192 1 6 1 288 2 106 2 57 1 199 2 346 5 200 2 151 6 155 2 111 2 203 2 14 2 67 1 255 2 20 2 159 1 71 1 118 1 119 1 301 1 304 1 305 1 161 2 262 1 309 2 83 4 215 1 264 1 84 1 265 1 314 1 172 1 318 1 134 1 223 3 36 2 135 1 96 1 136 1 225 1 276 1 98 1 333 1 232 1 46 1 379 1 47 5 336 2 48 1 190 2 
83 2 283 1 52 1 215 1 84 1 240 1 265 1 57 1 346 3 151 2 223 1 96 1 14 1 136 1 67 1 118 1 119 1 333 1 305 1 262 1 47 3 48 1 
83 3 283 1 52 1 215 1 84 1 240 1 265 1 57 1 346 3 151 1 155 1 223 1 96 1 136 1 67 1 159 1 118 1 119 1 333 1 305 1 161 1 262 1 47 3 48 1 
83 3 283 1 52 1 215 1 84 1 240 1 265 1 57 1 346 3 151 2 155 1 223 1 96 1 111 1 14 1 136 1 67 1 159 1 118 1 119 1 333 1 305 1 161 1 262 1 47 3 48 1 
83 6 283 1 284 1 52 1 146 1 215 1 84 1 240 1 242 1 265 1 6 1 314 1 288 1 106 2 57 1 346 5 317 1 151 7 155 4 223 3 36 2 203 2 96 1 111 4 14 4 136 1 225 1 67 1 158 1 20 2 159 5 118 1 119 1 301 1 98 1 333 1 305 1 46 1 161 5 262 1 47 5 336 1 48 1 190 2 
283 1 52 1 6 1 288 1 57 1 106 2 199 2 346 4 151 4 155 2 203 2 111 2 14 2 67 1 20 2 159 1 118 1 119 1 301 1 305 1 161 2 262 1 83 4 215 1 84 1 265 1 314 1 223 2 36 2 96 1 136 1 225 1 98 1 333 1 232 1 46 1 47 4 336 1 48 1 190 2 
83 4 283 1 284 1 52 1 215 1 146 1 84 1 265 1 242 1 6 1 314 1 288 1 106 2 57 1 346 4 151 4 155 2 223 2 36 2 111 2 203 2 96 1 14 2 136 1 67 1 225 1 20 2 159 1 118 1 119 1 301 1 98 1 333 1 305 1 161 1 46 1 262 1 47 4 336 1 48 1 190 2 
83 4 283 1 284 1 52 1 215 1 146 1 84 1 265 1 242 1 6 1 314 1 288 1 106 2 57 1 346 4 151 4 155 2 223 2 36 2 111 2 203 2 96 1 14 2 136 1 67 1 225 1 20 2 159 1 118 1 119 1 301 1 98 1 333 1 305 1 161 1 46 1 262 1 47 4 336 1 48 1 190 2 
282 2 239 1 83 4 283 1 284 1 52 1 215 1 84 1 265 1 314 1 288 1 106 2 57 1 199 2 346 4 151 4 155 2 223 2 111 2 96 1 110 1 14 2 136 1 67 1 225 1 327 2 159 1 118 1 119 1 301 1 98 1 76 1 333 1 305 1 161 1 46 1 262 1 47 4 336 1 48 1 190 2 
83 5 283 1 284 1 52 1 146 1 215 1 84 1 265 1 242 1 6 1 314 1 288 1 106 2 57 1 346 4 151 5 155 3 223 2 36 2 203 2 96 1 111 3 14 3 136 1 225 1 67 1 158 1 20 2 159 1 118 1 119 1 301 1 98 1 333 1 305 1 161 1 46 1 262 1 47 4 336 1 48 1 190 2 
83 5 283 1 284 1 52 1 146 1 215 1 84 1 265 1 242 1 6 1 314 1 288 1 106 2 57 1 346 4 151 5 155 3 223 2 36 2 203 2 96 1 111 3 14 3 136 1 225 1 67 1 158 1 20 2 159 1 118 1 119 1 301 1 98 1 333 1 305 1 161 1 46 1 262 1 47 4 336 1 48 1 190 2 
282 2 283 1 52 1 288 1 57 1 106 2 199 2 346 4 151 4 155 2 111 2 14 2 67 1 159 1 118 1 119 1 301 1 76 1 305 1 161 1 262 1 83 4 215 1 84 1 265 1 314 1 223 2 96 1 136 1 225 1 327 2 98 1 333 1 232 1 46 1 47 4 336 1 48 1 190 2 
162 1 27 1 285 1 3 1 168 1 362 1 59 1 33 1 61 2 12 1 222 1 66 2 37 1 324 1 273 2 179 1 18 1 370 2 351 1 258 1 116 3 372 1 78 3 187 1 308 6 100 1 
162 11 27 2 163 2 3 2 362 1 132 1 363 2 59 11 33 1 61 1 364 1 322 1 12 2 368 3 93 1 66 4 37 2 324 2 325 1 205 1 273 2 114 1 370 1 18 4 330 1 116 8 331 1 44 1 143 1 78 6 79 3 308 14 100 2 
358 1 27 1 192 1 340 1 215 2 30 1 264 1 3 1 265 1 362 1 56 1 318 1 200 1 12 1 156 1 37 1 66 2 67 2 255 1 114 1 370 1 295 1 18 1 117 1 116 1 44 1 276 1 229 1 99 1 143 1 278 1 24 1 78 1 235 1 309 1 308 2 100 1 80 1 
340 3 192 2 3 3 195 1 56 2 59 7 200 1 61 6 62 2 12 3 156 2 66 6 67 3 255 3 114 1 18 7 351 1 117 1 116 10 261 2 78 10 24 1 309 3 308 20 80 1 359 1 123 1 162 7 27 3 163 2 30 1 215 3 129 2 264 2 168 1 265 1 362 3 132 4 363 2 33 3 318 2 222 1 37 3 324 3 177 2 325 2 273 10 179 1 370 2 274 2 44 1 276 2 332 1 229 2 372 1 143 1 99 2 187 1 100 3 
123 1 1 1 213 1 27 2 285 1 215 1 30 1 192 3 340 7 3 2 264 2 265 1 362 2 149 1 172 1 318 2 200 2 150 1 12 2 66 4 37 2 253 1 157 2 67 1 255 8 114 1 117 1 116 1 208 1 44 1 276 2 304 1 78 1 306 1 234 1 309 8 308 2 100 2 80 1 
162 1 27 1 163 1 30 1 215 1 3 1 265 1 362 1 363 1 107 1 59 1 244 1 33 1 61 1 12 1 66 2 37 1 324 1 325 1 67 1 273 1 18 1 117 1 116 1 74 1 143 1 78 2 308 3 100 1 
37 1 66 2 324 1 162 1 138 1 27 1 163 1 273 1 285 1 18 1 3 1 362 1 116 2 132 1 59 1 308 2 12 1 100 1 
37 1 66 2 162 1 325 1 27 1 273 1 285 1 18 1 3 1 31 1 362 1 59 1 33 1 78 2 61 1 308 2 12 1 100 1 
162 2 163 1 27 1 285 1 3 1 362 1 132 1 363 1 59 2 33 1 61 1 12 1 324 1 66 2 37 1 325 1 273 2 18 2 116 2 78 2 308 4 100 1 
37 1 66 2 324 1 162 1 213 1 138 1 27 1 163 1 273 1 18 1 3 1 362 1 116 2 132 1 59 1 308 2 12 1 100 1 
37 1 66 2 162 1 325 1 213 1 27 1 273 1 18 1 3 1 31 1 362 1 59 1 33 1 78 2 61 1 308 2 12 1 100 1 
162 2 213 1 163 1 27 1 3 1 362 1 132 1 363 1 59 2 33 1 61 1 12 1 324 1 66 2 37 1 325 1 273 2 18 2 116 2 78 2 308 4 100 1 
162 2 163 1 27 1 3 1 362 1 132 1 363 1 59 2 33 1 61 1 12 1 324 1 66 2 37 1 325 1 273 2 18 2 116 2 78 2 308 4 100 1 
27 1 340 1 192 1 215 1 264 1 3 1 362 1 56 1 318 1 200 1 12 1 156 1 37 1 66 2 177 1 67 1 255 1 114 1 370 1 116 1 44 1 276 1 229 1 99 1 78 1 308 2 309 1 100 1 
27 1 2 1 340 1 192 1 215 1 264 1 3 1 362 1 196 1 56 1 318 1 200 1 12 1 37 1 66 2 326 1 67 1 255 1 114 1 370 1 116 1 44 1 276 1 99 1 78 1 308 2 309 1 100 1 
162 2 163 1 27 1 3 1 362 1 132 1 363 1 59 2 33 1 61 1 12 1 324 1 66 2 37 1 325 1 273 2 18 2 116 2 143 1 78 2 308 4 100 1 
162 2 1 1 163 1 27 1 340 1 192 1 215 1 264 1 3 1 362 1 132 1 363 1 56 1 59 2 33 1 318 1 61 1 12 1 156 1 324 1 37 1 66 2 325 1 177 1 67 1 273 2 255 1 18 2 116 2 276 1 229 1 99 1 261 1 78 2 308 4 309 1 100 1 
162 1 27 1 163 1 30 1 215 1 3 1 265 1 362 1 132 1 7 1 363 1 244 1 59 1 33 1 12 1 66 2 37 1 324 1 325 1 67 1 273 1 18 1 117 1 116 2 74 1 143 1 78 1 308 3 100 1 
82 1 27 2 163 3 3 2 266 1 132 3 363 3 315 1 33 3 268 1 61 3 220 1 368 1 249 2 66 4 37 2 324 3 325 3 292 2 273 6 330 1 116 9 331 1 231 1 78 10 279 1 79 2 308 19 145 1 100 2 
82 2 27 3 163 3 3 3 266 1 5 1 87 1 132 2 363 3 315 1 33 2 268 1 61 2 91 1 219 1 220 2 368 2 249 4 66 6 37 3 324 3 325 2 292 1 273 4 116 14 331 2 186 2 231 1 78 12 236 1 308 26 79 2 100 3 380 1 
82 2 27 3 163 4 3 3 168 1 266 1 5 1 87 1 132 4 363 4 315 1 33 5 268 1 61 4 91 1 219 1 222 1 220 1 368 3 249 4 66 6 37 3 324 5 325 4 292 1 273 8 179 1 351 1 330 1 116 20 331 3 372 1 186 1 23 1 231 1 78 21 187 1 236 1 79 4 308 41 145 1 100 3 380 1 
82 2 27 4 163 4 3 4 168 1 266 1 5 1 87 1 132 3 363 4 315 1 33 4 268 1 61 4 91 1 219 1 222 1 220 1 368 3 249 4 66 8 37 4 324 5 325 3 292 1 273 7 179 1 351 1 330 1 116 20 331 3 372 1 186 2 23 1 231 1 78 18 187 1 236 1 79 4 308 38 145 1 100 4 380 1 
82 1 27 2 163 7 3 2 168 1 266 1 5 1 87 1 132 7 363 7 315 1 33 8 268 1 61 7 91 1 219 1 222 1 322 2 220 1 368 4 249 4 66 4 37 2 324 8 325 7 292 1 273 14 179 1 351 1 330 2 116 27 331 2 372 1 186 1 231 1 78 25 187 1 236 1 79 4 308 52 100 2 380 1 
97 1 77 1 287 1 342 1 11 1 180 1 313 1 352 1 216 1 237 1 
25 1 337 1 
198 1 97 1 354 1 60 1 287 1 342 1 11 1 180 1 216 1 
97 1 124 1 140 1 287 1 342 1 180 1 313 1 343 1 216 1 228 1 77 1 346 1 161 1 47 1 11 1 92 2 237 1 94 1 
97 1 124 1 140 1 287 1 342 1 180 1 313 1 343 1 216 1 228 1 77 1 346 1 161 1 47 1 11 1 92 2 237 1 94 1 
97 1 124 1 140 1 287 1 342 1 180 1 313 1 343 1 216 1 228 1 77 1 346 1 161 1 47 1 11 1 92 2 237 1 94 1 
50 1 269 1 72 1 
50 1 269 1 72 1 
230 1 353 1 
230 1 269 1 353 1 
291 1 189 1 
124 1 102 1 215 2 287 1 30 2 342 1 265 2 216 1 217 1 218 1 346 1 174 1 11 1 92 1 369 1 291 1 67 2 97 1 140 1 370 1 180 1 117 2 43 1 47 1 25 1 189 1 337 1 
50 1 72 1 
230 1 269 1 353 1 
27 1 192 1 215 2 340 2 264 1 3 1 4 1 265 2 362 1 88 1 289 1 345 1 318 1 150 1 65 1 12 1 37 1 66 2 157 2 67 2 255 2 114 1 116 1 44 1 276 1 143 1 78 1 234 1 309 2 308 2 100 1 
123 1 1 1 255 2 340 2 17 1 328 1 148 1 260 1 276 1 316 1 318 1 210 1 153 1 120 2 10 1 290 1 356 1 108 1 309 2 
123 1 255 1 340 1 17 1 85 1 328 1 148 1 276 1 318 1 210 1 153 1 120 2 10 1 290 1 356 1 108 1 309 1 
255 1 192 1 340 1 17 1 264 1 276 1 172 1 316 1 304 1 318 1 200 1 309 1 221 1 26 1 
123 1 255 1 340 1 17 1 328 1 148 1 260 1 276 1 316 1 318 1 210 1 153 1 120 2 10 1 290 1 356 1 108 1 309 1 
103 1 
288 1 206 1 377 1 161 1 159 1 336 1 258 1 
6 1 314 1 288 1 199 1 346 1 151 1 223 1 36 1 203 1 225 1 20 1 159 1 301 1 46 1 161 2 47 1 336 1 
238 2 191 1 1 1 281 3 192 10 340 3 193 1 288 8 199 12 200 1 346 5 151 5 201 2 250 1 293 1 206 1 255 3 159 2 301 4 161 8 307 2 263 2 309 3 121 1 311 6 126 3 163 2 165 1 129 2 264 3 166 2 314 4 131 6 363 2 33 2 318 3 133 2 271 2 223 3 36 6 135 1 324 2 136 2 325 2 225 4 139 2 275 2 276 4 99 3 377 1 144 2 46 4 47 5 336 9 
311 4 281 1 163 1 314 2 131 4 87 1 288 3 363 1 199 6 33 1 346 1 151 1 91 1 219 1 368 1 223 1 36 3 324 1 325 1 225 2 159 1 182 1 331 1 301 2 46 2 161 4 47 1 236 1 336 5 79 1 380 1 
281 2 215 1 146 1 30 1 166 1 265 1 314 1 288 2 197 1 33 1 346 1 13 1 324 2 67 1 225 1 179 1 21 1 259 1 117 1 301 1 74 1 372 1 305 1 209 1 187 1 46 1 47 1 336 2 
288 1 301 1 225 1 206 1 377 1 161 1 46 1 159 1 336 1 314 1 
324 2 311 5 281 2 325 2 163 2 129 1 166 1 131 5 288 5 363 2 199 10 33 2 161 5 336 5 36 5 
346 1 151 1 161 1 159 1 47 1 223 1 
238 2 286 1 165 2 192 1 340 4 167 1 264 1 314 2 288 2 172 1 318 1 200 2 346 3 151 4 134 1 223 2 135 2 225 2 293 1 255 4 42 1 71 1 276 1 301 2 304 1 46 1 47 3 309 4 336 2 
27 1 340 1 215 3 30 2 192 1 3 1 264 1 265 2 362 1 55 1 56 1 200 1 318 1 12 1 156 1 66 2 37 1 177 1 67 3 255 1 370 1 259 1 117 2 44 1 276 1 74 2 229 1 99 1 78 1 308 1 309 1 100 1 
238 1 135 1 311 2 225 1 159 2 314 1 131 2 288 2 301 1 199 4 46 1 161 4 222 1 336 1 36 2 
373 1 11 1 180 1 
373 1 11 1 180 1 
183 1 291 1 77 1 11 1 180 1 
373 1 11 1 180 1 
11 1 180 1 69 1 
11 1 180 1 69 1 
11 1 180 1 69 1 
11 1 180 1 
97 1 342 1 
324 1 37 2 66 4 27 2 273 3 179 1 3 2 351 1 168 1 116 4 132 1 372 1 33 1 186 1 78 4 61 2 187 1 222 1 308 8 100 2 
324 1 273 2 179 1 351 1 168 1 258 1 116 3 372 1 33 1 78 3 61 2 187 1 222 1 308 6 
37 1 66 2 324 1 325 1 27 1 163 1 273 2 3 1 116 2 170 1 132 1 363 1 33 1 78 2 61 1 308 4 100 1 
324 1 325 1 163 1 273 2 330 1 116 3 331 1 132 1 363 1 33 1 78 4 61 1 79 2 308 7 368 1 
163 2 27 2 3 2 168 1 132 4 363 2 33 3 364 1 61 5 202 1 222 1 368 2 322 1 324 3 37 2 66 4 325 2 273 9 179 1 351 1 330 1 116 11 372 2 186 2 78 12 187 2 308 23 79 2 100 2 
78 1 308 1 79 1 
308 1 368 1 116 1 
66 2 37 1 324 1 325 1 27 1 163 1 273 2 129 1 3 1 116 3 170 1 132 1 363 1 33 1 78 3 61 1 308 6 100 1 
27 1 163 2 3 1 87 1 132 1 363 2 33 2 268 1 61 1 91 1 219 1 368 1 66 2 37 1 324 2 325 2 273 2 116 6 331 1 78 6 308 12 79 1 236 1 100 1 380 1 
324 1 273 2 179 1 116 3 132 1 372 1 33 1 78 3 61 1 187 1 308 6 
37 1 66 2 27 1 273 2 3 1 168 1 351 1 116 1 132 1 372 1 186 1 78 2 61 1 187 1 202 1 308 3 100 1 
66 2 37 1 324 2 27 1 273 5 179 1 3 1 21 1 116 5 132 2 372 2 33 2 268 1 78 5 61 3 187 2 308 10 100 1 
37 1 66 2 324 1 27 1 163 1 273 1 3 1 116 2 132 1 268 1 308 2 100 1 
37 1 66 2 324 1 325 1 27 1 163 1 273 2 3 1 116 2 132 1 363 1 33 1 268 1 78 2 61 1 308 4 100 1 
37 3 66 6 27 3 273 2 3 3 116 1 132 1 372 1 186 1 268 1 78 2 61 1 187 1 202 1 308 3 145 1 100 3 
27 5 163 3 341 1 3 5 168 1 170 1 132 5 363 3 33 5 268 1 247 1 61 7 202 1 222 1 368 3 66 10 37 5 324 5 325 3 273 12 179 2 178 1 351 1 330 1 116 16 331 1 372 3 186 2 78 18 187 3 79 4 308 34 145 1 100 5 
27 1 3 1 168 1 33 1 268 1 61 2 222 1 368 1 324 1 66 2 37 1 273 2 179 1 351 1 116 4 331 1 372 1 78 4 187 1 308 8 79 1 100 1 380 1 
27 2 163 1 3 2 168 1 170 1 132 1 363 1 33 1 268 1 61 2 222 1 368 1 66 4 37 2 324 2 273 3 179 1 351 1 330 1 116 6 331 1 372 1 78 5 187 1 308 11 79 2 100 2 380 1 
27 3 163 2 3 3 168 1 87 1 170 1 132 1 363 2 33 3 268 1 61 3 91 1 219 1 222 1 368 1 66 6 37 3 324 3 325 2 273 4 179 1 351 1 116 9 331 1 372 1 186 1 78 10 187 1 308 19 79 1 236 1 100 3 380 1 
27 3 163 2 3 3 168 1 87 1 170 1 132 2 363 2 33 2 268 1 61 3 91 1 219 1 222 1 368 1 66 6 37 3 324 3 325 1 273 5 179 1 351 1 116 10 331 1 372 1 186 1 78 7 187 1 308 17 79 1 236 1 100 3 380 1 
27 1 3 1 168 1 33 1 268 1 61 2 222 1 368 1 324 1 66 2 37 1 273 2 179 1 351 1 116 4 331 1 372 1 78 4 187 1 308 8 79 1 100 1 380 1 
27 1 163 2 3 1 87 1 132 1 363 2 33 2 268 1 61 1 91 1 219 1 368 1 66 2 37 1 324 2 325 2 273 2 116 6 331 1 78 6 308 12 79 1 236 1 100 1 380 1 
27 4 163 2 3 4 168 1 87 1 132 2 170 1 363 2 33 2 268 1 61 3 91 1 219 1 222 1 368 1 66 8 37 4 324 3 325 1 273 5 179 1 351 1 116 10 331 1 372 1 186 2 78 8 187 1 236 1 308 18 79 1 100 4 380 1 
27 4 163 3 3 4 87 1 132 3 363 3 33 2 268 1 61 3 91 1 219 1 368 1 66 8 37 4 324 3 325 2 273 6 116 9 331 1 186 2 78 7 236 1 308 16 79 1 100 4 145 1 380 1 
324 1 273 6 179 1 351 1 168 2 116 3 132 3 372 3 33 1 78 4 61 3 187 3 308 7 
27 4 163 2 3 4 168 1 87 1 132 1 363 2 33 2 268 1 61 3 91 1 219 1 222 1 368 1 66 8 37 4 324 3 325 1 273 4 179 1 351 1 116 10 331 1 372 1 186 2 78 8 187 1 236 1 308 18 79 1 100 4 145 1 380 1 
119 1 67 1 101 1 215 1 370 1 265 1 34 1 
49 1 0 1 67 1 101 1 256 1 215 1 370 1 265 1 119 1 246 1 34 1 211 1 
276 1 172 1 304 1 255 1 318 1 200 1 192 1 340 1 264 1 309 1 258 1 
67 2 255 1 192 1 30 1 215 2 340 1 370 1 264 1 265 1 117 1 276 1 56 1 229 1 99 1 200 1 318 1 309 1 80 1 
340 1 165 1 215 2 30 1 192 3 264 2 265 2 56 1 57 1 318 1 133 1 67 2 255 1 370 1 117 2 276 1 229 1 99 2 333 1 305 1 263 1 309 1 80 1 
340 2 165 1 215 2 30 1 192 3 264 2 265 2 56 1 57 1 318 1 133 1 95 1 326 1 67 2 255 2 370 1 117 2 276 1 99 2 333 1 305 1 263 1 309 2 80 1 
204 1 136 1 126 1 255 3 165 1 340 3 192 4 264 1 130 1 159 1 276 1 99 1 200 1 346 2 318 1 151 1 133 1 201 1 161 1 263 1 47 2 309 3 95 1 
136 1 126 1 255 3 139 1 165 1 340 3 192 4 264 1 159 1 276 1 99 1 200 1 346 2 318 1 151 1 133 1 201 1 161 1 263 1 47 2 309 3 95 1 
276 1 255 1 318 1 340 1 306 1 309 1 
157 1 123 1 1 1 253 1 255 7 128 1 164 1 340 6 192 3 264 2 193 1 208 1 149 1 276 3 245 1 99 1 200 2 318 2 306 1 234 1 309 7 
1 1 340 1 192 1 3 2 56 1 59 1 345 1 61 2 62 1 12 2 156 1 66 4 67 2 255 1 18 1 351 1 117 1 116 3 261 1 78 3 309 1 308 6 80 1 162 1 27 2 30 1 215 2 264 1 168 1 265 1 362 2 33 1 318 1 222 1 37 2 324 1 177 1 273 2 179 1 370 2 276 1 229 1 372 1 143 1 99 1 187 1 100 2 
126 1 340 1 192 2 314 2 288 1 200 1 346 3 151 2 201 1 271 1 223 1 369 1 136 1 225 2 206 1 255 1 293 1 139 1 159 1 275 1 301 2 377 1 161 1 46 2 47 3 307 1 336 1 309 1 
1 1 255 2 340 2 192 2 264 1 193 1 276 2 99 1 318 1 201 1 306 1 309 2 121 1 
276 1 172 1 1 1 304 1 255 4 318 1 200 1 192 1 340 4 264 1 64 1 309 4 95 1 
359 1 255 2 164 1 165 1 340 2 192 1 264 1 276 2 245 1 99 1 318 1 374 1 309 2 348 1 
148 1 276 1 255 1 318 1 200 1 210 1 340 1 120 1 290 1 309 1 
1 1 123 1 255 2 340 2 192 1 264 1 4 1 276 1 318 1 234 1 309 2 
1 1 255 5 165 1 340 4 192 3 264 2 208 1 149 1 276 2 172 1 304 1 200 1 318 2 64 1 234 1 309 5 
310 1 1 1 255 5 165 1 340 4 192 3 264 2 208 1 276 2 172 1 304 1 200 1 318 2 64 1 234 1 309 5 
67 2 326 1 255 1 192 1 30 1 215 2 340 1 370 1 264 1 265 1 117 1 276 1 56 1 99 1 200 1 318 1 309 1 80 1 
255 1 128 1 164 1 165 1 340 1 192 1 264 1 193 1 276 2 245 1 99 1 318 1 309 1 
375 1 277 1 370 1 321 1 122 1 
369 1 136 1 141 1 52 1 370 1 296 1 159 1 57 1 333 1 346 2 305 1 277 2 375 2 376 1 161 1 347 1 321 2 47 2 122 1 
289 1 67 1 215 1 277 1 265 1 65 1 321 1 122 1 88 1 
141 1 376 1 122 1 
344 1 339 1 319 1 258 1 
38 1 184 1 344 1 254 1 339 1 319 1 70 1 
38 1 355 1 160 1 
38 3 254 1 339 1 350 1 70 3 54 2 184 1 344 1 319 1 366 1 270 1 224 1 
22 1 38 2 302 1 184 1 344 1 254 1 339 1 319 1 70 2 
38 1 184 1 344 1 254 1 120 1 297 1 366 1 290 1 267 1 108 1 70 1 
38 1 184 1 344 1 254 1 339 1 366 1 70 1 
38 1 184 1 254 1 339 2 319 1 366 1 70 1 
251 1 38 2 254 2 339 1 300 1 70 2 184 2 344 1 233 1 366 1 
38 3 254 1 339 1 267 1 361 1 70 3 169 1 329 1 184 1 302 2 344 2 319 1 366 1 
38 2 254 1 339 1 70 2 148 1 184 1 302 1 344 1 334 1 153 1 319 1 120 2 366 1 290 1 108 1 
38 4 254 2 339 1 104 1 267 1 70 4 329 1 22 1 184 2 302 2 344 2 319 1 366 1 
38 1 184 1 344 1 254 1 339 1 319 1 366 1 70 1 
38 4 254 1 339 2 350 1 267 1 54 1 70 4 329 1 302 2 184 1 344 3 152 1 319 2 270 1 
38 2 254 1 339 1 299 1 227 1 194 1 70 2 184 1 302 1 344 1 319 1 366 1 
38 3 254 1 339 1 350 2 298 1 70 3 54 2 184 1 344 1 319 1 366 1 270 1 
125 1 344 2 112 1 280 2 
38 1 184 1 254 1 241 1 366 1 70 1 
38 2 302 1 184 1 344 1 254 1 339 1 319 1 366 1 169 1 70 2 
175 1 
38 1 184 1 344 1 254 1 339 1 319 1 366 1 70 1 
38 3 254 1 339 1 70 3 54 1 169 1 302 1 184 1 344 1 319 1 366 1 
344 1 152 1 267 1 329 1 
344 1 339 1 

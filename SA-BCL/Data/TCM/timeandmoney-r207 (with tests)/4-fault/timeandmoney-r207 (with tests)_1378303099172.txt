#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) (58,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) (58,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 161 114 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (192,259) 103 152 (189,190) 65 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 161 114 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 71 (192,259) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (192,259) 103 152 (189,190) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (116,181,244,261) (116,181,244,261) (116,181,244,261) 182 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
140 1 302 1 141 1 76 1 78 1 238 1 178 1 149 1 312 1 290 1 68 1 242 1 227 1 273 1 
145 1 
145 1 230 1 104 1 178 1 247 1 302 2 211 1 238 2 
230 2 213 1 328 1 247 1 302 5 191 1 175 1 218 1 14 2 238 5 145 1 257 2 104 1 178 2 240 1 67 1 185 1 26 1 295 2 
145 1 104 1 130 1 
145 1 148 1 160 2 
197 1 140 2 312 2 141 2 290 2 76 2 242 1 273 2 
92 2 298 1 140 2 141 2 142 2 192 1 193 1 56 1 308 1 100 1 101 1 197 1 22 1 312 2 314 1 25 1 267 1 270 2 271 1 242 1 273 3 320 1 165 1 277 1 118 1 168 2 32 1 76 3 176 1 36 1 80 1 339 2 340 1 125 1 343 1 45 1 290 2 
140 1 312 1 149 1 141 1 290 1 76 1 78 1 242 1 227 1 273 1 
140 1 302 1 76 1 98 1 238 1 145 1 285 1 104 1 286 1 87 1 291 1 273 1 272 1 227 1 
140 1 302 2 141 1 76 1 238 2 145 1 285 1 104 1 286 1 312 1 87 1 290 1 273 1 272 1 227 1 
230 1 178 1 302 1 109 1 238 1 
145 1 230 1 104 1 178 1 247 1 302 2 236 1 238 2 
230 1 302 1 238 1 
326 1 92 1 140 1 168 1 142 1 76 2 176 1 192 1 193 1 308 1 100 1 340 1 22 1 312 1 314 1 290 1 226 1 273 2 320 1 322 1 
0 1 140 2 141 1 76 2 197 2 312 1 290 1 273 2 163 1 
85 1 226 1 243 1 
92 1 168 1 142 1 76 1 192 1 176 1 193 1 79 1 308 1 100 1 340 1 197 1 22 1 314 1 273 1 320 1 
197 1 130 1 
197 1 140 3 312 3 141 1 290 3 76 3 273 3 322 1 
140 1 312 1 290 1 76 1 78 1 227 1 273 1 
0 1 140 1 312 1 141 1 290 1 76 1 227 1 273 1 163 1 
92 1 298 1 297 1 140 3 141 2 302 1 142 1 192 1 193 1 56 1 308 1 100 1 194 1 238 1 197 1 22 1 312 3 314 1 25 1 267 1 270 1 271 1 242 1 273 4 272 1 320 1 163 1 322 1 326 1 165 1 277 1 168 1 76 4 176 1 36 1 285 1 339 2 286 1 340 1 125 1 343 1 87 1 290 3 227 1 
197 1 86 1 140 2 312 1 291 1 290 1 76 2 273 2 322 1 
326 1 140 3 141 1 302 1 76 3 77 1 194 1 238 1 145 1 285 1 286 1 312 3 87 1 290 3 227 1 273 3 272 1 163 1 322 2 
140 2 141 1 76 2 85 1 312 2 290 2 273 2 226 1 322 1 163 1 
92 1 168 1 142 1 76 1 192 1 176 1 193 1 100 1 308 1 340 1 197 1 22 1 314 1 273 1 320 1 
92 1 168 1 142 1 76 1 176 1 100 1 308 1 340 1 197 1 22 1 106 1 314 1 131 1 273 1 320 1 
298 1 303 1 10 1 12 1 239 1 25 1 267 1 270 4 271 1 243 2 166 1 165 1 277 1 164 1 118 2 169 1 258 1 339 2 85 2 125 2 128 1 292 1 135 1 226 2 
140 1 312 1 290 1 332 1 76 1 227 1 272 1 273 1 
326 1 140 5 141 1 76 5 86 1 197 1 312 4 288 1 345 1 291 1 290 4 273 5 322 2 163 1 
140 2 312 2 332 1 290 2 76 2 78 1 227 1 273 2 
300 1 222 1 28 1 
300 2 248 1 7 1 99 1 81 1 28 2 
300 1 28 1 
300 1 28 1 
248 1 81 1 
248 1 81 1 
248 1 81 1 
300 1 41 1 28 1 
300 1 41 1 28 1 
300 1 41 1 28 1 
300 1 321 1 28 1 
300 1 321 1 28 1 
300 1 321 1 28 1 
212 1 300 2 7 1 302 2 278 2 279 2 263 2 123 1 97 3 144 2 17 1 238 2 145 1 83 1 127 2 129 1 108 1 228 1 28 2 
300 1 299 1 140 2 302 1 263 1 97 1 144 1 238 1 197 1 312 2 202 1 273 2 28 1 323 1 278 1 173 1 279 1 76 2 39 1 256 1 83 1 222 1 290 2 134 1 
18 2 245 1 139 1 233 1 155 2 
233 1 155 1 75 1 
245 1 155 1 75 1 
18 1 245 1 139 1 233 2 155 3 159 1 
18 1 245 1 139 1 233 1 155 2 35 1 
230 1 91 1 52 1 6 2 302 5 234 1 191 3 303 1 95 1 12 1 14 1 238 5 239 1 145 2 104 1 148 1 67 2 208 1 160 3 27 2 323 1 166 1 213 1 247 1 173 1 257 1 221 1 178 4 341 1 342 2 134 1 295 1 
230 6 91 3 302 9 234 2 191 8 303 3 95 2 12 3 195 1 57 1 14 2 238 9 239 3 145 5 104 1 148 3 265 1 67 6 269 1 109 5 208 1 160 9 27 6 323 4 328 1 166 3 213 1 247 1 251 5 37 1 257 2 178 7 287 1 342 6 295 2 
52 1 91 1 6 1 302 3 234 1 191 3 95 1 303 1 12 1 14 1 238 3 239 1 145 3 104 1 148 2 67 2 160 4 27 2 323 1 166 1 328 1 257 1 178 2 341 1 342 2 295 1 
52 1 91 2 6 2 302 4 234 1 191 5 95 1 303 2 12 2 195 1 14 1 238 4 239 2 145 4 104 1 148 3 265 1 67 4 269 1 160 7 27 4 323 2 166 2 328 1 257 1 178 3 341 1 342 4 295 1 
180 1 
130 1 315 1 308 1 
13 1 308 1 
22 1 308 1 
22 1 314 1 315 2 224 1 69 1 308 3 
22 1 314 1 308 1 
308 1 90 1 
166 1 164 3 2 2 246 1 214 1 118 4 169 2 331 1 12 1 254 1 60 1 125 3 203 1 270 7 225 1 207 1 206 1 324 1 
91 3 2 3 298 1 303 3 12 4 60 5 239 3 241 4 154 1 267 1 203 2 270 31 207 1 271 1 206 2 112 1 324 2 165 1 164 10 166 4 276 1 246 1 214 2 118 16 169 5 333 1 334 1 254 1 339 2 125 15 44 1 223 1 225 1 138 3 
2 2 298 2 12 1 60 1 61 1 267 2 270 9 203 1 271 2 206 1 207 1 324 1 166 1 165 2 164 4 118 5 214 1 246 1 169 3 254 1 84 1 339 4 125 4 44 1 
166 1 164 3 2 2 246 1 214 1 118 4 169 2 12 1 254 1 60 1 125 3 203 1 270 7 225 1 206 1 207 1 324 1 
166 1 164 3 2 2 246 1 214 1 118 4 169 2 12 1 254 1 60 1 125 3 203 1 270 7 225 1 206 1 207 1 324 1 
116 1 181 1 174 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 174 1 244 1 
188 1 92 1 232 1 142 1 261 2 233 1 100 1 58 1 196 1 198 1 23 1 199 1 316 1 155 2 159 1 244 2 245 1 168 1 216 1 120 1 75 1 176 1 346 1 47 2 137 1 
132 1 
191 1 262 1 96 1 98 1 14 1 19 1 21 1 104 1 272 1 273 1 111 2 30 1 213 1 119 5 33 1 281 2 40 1 285 1 220 3 286 1 291 1 227 1 295 1 49 2 229 1 230 5 140 1 302 4 238 4 145 1 148 2 67 1 153 2 156 3 327 1 247 2 330 3 74 1 76 1 257 1 87 1 347 1 
230 5 140 1 302 4 262 1 191 1 96 1 98 1 14 1 238 4 145 1 19 1 104 1 21 1 148 2 153 2 67 1 156 3 273 1 272 1 111 2 30 1 213 1 327 1 247 2 119 5 330 3 74 1 33 1 76 1 281 2 40 1 257 1 285 1 286 1 220 3 87 1 291 1 227 1 49 2 295 1 229 1 347 1 
230 4 50 1 140 1 302 4 191 1 96 1 98 1 14 1 238 4 145 1 104 1 67 1 156 2 160 2 273 1 272 1 111 2 30 1 213 1 327 1 247 2 119 4 330 2 33 1 76 1 40 1 257 1 285 1 42 1 220 2 286 1 87 1 291 1 186 2 48 2 227 1 49 2 295 1 229 1 
92 2 191 2 96 1 98 1 14 1 100 1 19 1 104 1 22 1 273 1 272 1 111 2 30 1 213 1 119 4 33 1 281 2 40 1 219 1 285 1 42 1 220 2 286 1 291 1 227 1 49 2 295 1 229 1 230 6 231 1 140 1 234 1 302 5 142 2 308 1 309 1 238 5 145 2 62 1 311 1 148 2 153 2 67 2 156 2 319 1 160 2 327 1 247 3 168 2 330 2 76 1 176 1 257 1 340 2 87 1 
230 2 140 1 302 3 96 1 98 1 238 3 273 1 272 1 211 1 30 1 327 1 119 2 247 1 76 1 40 1 285 1 286 1 220 1 87 1 291 1 227 1 229 1 
230 1 140 1 302 3 96 1 98 1 238 3 145 1 104 1 273 1 272 1 211 1 30 1 327 1 119 3 247 1 330 1 76 1 40 1 285 1 286 1 87 1 291 1 227 1 229 1 
230 2 140 1 302 3 96 1 98 1 238 3 145 1 104 1 156 1 273 1 272 1 211 1 30 1 327 1 247 1 119 3 330 1 76 1 40 1 285 1 286 1 220 1 87 1 291 1 227 1 229 1 
191 1 262 1 96 1 98 1 14 1 19 1 104 5 21 1 272 1 273 1 111 2 211 1 30 1 213 1 119 6 33 1 281 2 40 1 285 1 220 4 286 1 291 1 227 1 295 1 49 2 229 1 230 7 140 1 302 5 238 5 145 5 148 2 67 1 153 2 156 4 327 1 247 3 330 4 74 1 76 1 177 1 257 1 87 1 347 1 
230 4 140 1 302 4 191 1 96 1 98 1 14 1 238 4 145 2 19 1 104 1 148 2 153 2 67 1 156 2 160 2 273 1 272 1 111 2 30 1 213 1 327 1 247 2 119 4 330 2 33 1 76 1 281 2 40 1 257 1 285 1 42 1 220 2 286 1 87 1 291 1 227 1 49 2 295 1 229 1 
230 4 140 1 302 4 262 1 191 1 96 1 98 1 14 1 238 4 145 1 19 1 104 1 148 2 153 2 67 1 156 2 273 1 272 1 111 2 30 1 327 1 213 1 247 2 119 4 330 2 74 1 33 1 76 1 281 2 40 1 285 1 257 1 220 2 286 1 87 1 291 1 227 1 49 2 295 1 229 1 347 1 
230 4 140 1 302 4 262 1 191 1 96 1 98 1 14 1 238 4 145 1 19 1 104 1 148 2 153 2 67 1 156 2 273 1 272 1 111 2 30 1 327 1 213 1 247 2 119 4 330 2 74 1 33 1 76 1 281 2 40 1 285 1 257 1 220 2 286 1 87 1 291 1 227 1 49 2 295 1 229 1 347 1 
230 4 50 1 140 1 302 4 9 1 262 1 191 1 96 1 98 1 14 1 238 4 145 1 104 1 67 1 156 2 160 2 273 1 272 1 111 2 30 1 327 1 213 1 247 2 119 4 330 2 33 1 76 1 40 1 283 1 285 1 257 1 220 2 286 1 87 1 291 1 186 2 48 2 227 1 49 2 295 1 229 1 
92 7 298 2 231 1 140 1 142 8 100 2 308 3 101 2 64 1 62 1 22 2 23 1 312 1 25 2 267 2 270 2 271 2 273 1 161 1 322 1 325 1 115 1 165 2 277 2 167 1 118 1 168 8 122 1 76 1 176 2 36 1 340 2 339 4 125 1 45 1 290 1 184 1 46 1 135 1 
91 1 298 1 140 1 141 1 303 1 12 1 16 1 239 1 312 1 25 1 267 1 270 3 271 1 243 1 273 1 163 1 29 1 164 1 165 1 277 1 166 1 118 1 169 1 76 1 85 1 339 2 125 2 290 1 226 1 
2 1 298 1 12 1 197 2 25 1 267 1 203 1 270 6 207 1 271 1 243 1 165 1 277 1 164 2 166 1 214 1 246 1 118 3 169 2 254 1 85 1 339 2 125 3 130 1 226 1 135 1 
91 2 298 2 303 2 12 2 15 1 60 1 239 1 20 1 197 1 154 1 241 3 25 2 267 2 270 14 271 2 243 11 112 1 29 1 164 2 165 2 277 1 166 1 118 8 169 1 36 1 252 1 339 4 85 4 179 1 125 6 45 1 226 11 138 3 
92 1 298 1 140 1 142 1 192 1 193 1 308 1 100 1 197 1 22 1 312 1 151 1 314 1 313 1 25 1 267 1 270 2 271 1 273 2 320 1 322 1 29 1 326 1 277 1 165 1 118 1 168 1 76 2 176 1 36 1 79 1 337 1 340 1 85 1 339 2 125 1 45 1 290 1 
91 2 2 1 92 3 190 2 192 2 193 2 12 3 100 2 197 2 22 2 23 1 25 3 267 3 203 1 270 20 207 1 271 3 273 3 274 2 210 2 275 2 29 1 277 3 214 1 118 10 36 1 125 10 45 1 290 1 226 7 296 1 298 3 140 1 142 3 303 2 304 1 308 2 60 4 239 2 312 1 314 2 158 1 243 7 320 2 322 1 326 1 166 3 165 3 164 8 246 1 168 3 169 4 76 3 176 2 254 1 340 1 339 6 85 7 343 2 
164 1 277 1 165 1 298 1 118 2 303 1 12 1 60 1 258 1 85 1 339 2 25 1 267 1 270 2 271 1 226 1 243 1 135 1 
164 1 277 1 165 1 166 1 298 1 169 1 239 1 85 1 339 2 125 2 128 1 25 1 267 1 270 2 271 1 226 1 243 1 135 1 
91 1 166 1 164 2 277 1 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 85 2 339 2 125 2 25 1 267 1 270 4 271 1 226 2 243 2 135 1 
164 1 277 1 165 1 298 1 118 2 303 1 12 1 60 1 258 1 85 1 339 2 184 1 25 1 267 1 270 2 271 1 226 1 243 1 
164 1 277 1 165 1 166 1 298 1 169 1 239 1 85 1 339 2 125 2 128 1 184 1 25 1 267 1 270 2 271 1 226 1 243 1 
91 1 166 1 164 2 277 1 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 85 2 339 2 125 2 184 1 25 1 267 1 270 4 271 1 226 2 243 2 
91 1 166 1 164 2 277 1 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 85 2 339 2 125 2 25 1 267 1 270 4 271 1 226 2 243 2 
92 1 298 1 142 1 192 1 193 1 100 1 308 1 197 1 22 1 314 1 25 1 267 1 270 2 271 1 273 1 320 1 277 1 165 1 118 1 168 1 76 1 176 1 36 1 340 1 339 2 125 1 343 1 45 1 
92 1 298 1 142 1 143 1 100 1 308 1 197 1 22 1 106 1 314 1 25 1 267 1 270 2 271 1 273 1 320 1 277 1 165 1 118 1 168 1 76 1 176 1 36 1 340 1 339 2 125 1 45 1 131 1 
29 1 91 1 166 1 164 2 277 1 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 85 2 339 2 125 2 25 1 267 1 270 4 271 1 226 2 243 2 
91 1 92 1 298 1 142 1 303 1 192 1 193 1 12 1 100 1 308 1 60 1 239 1 22 1 314 1 25 1 267 1 270 4 271 1 243 2 273 1 320 1 274 1 166 1 164 2 277 1 165 1 118 2 168 1 169 1 76 1 176 1 85 2 339 2 125 2 343 1 46 1 226 2 
91 1 298 1 140 1 141 1 303 1 12 1 60 1 239 1 312 1 25 1 267 1 270 3 271 1 273 1 243 1 163 1 29 1 166 1 164 1 165 1 277 1 118 2 171 1 76 1 339 2 85 1 125 1 290 1 226 1 
1 1 91 4 2 1 260 1 93 1 12 5 105 1 201 2 267 3 270 41 203 1 271 3 207 1 112 1 31 4 118 20 214 1 34 1 217 1 38 1 125 21 44 1 133 1 136 1 138 3 298 3 303 4 59 1 60 4 239 4 154 3 241 4 166 5 164 8 165 3 246 1 329 1 169 4 336 1 254 1 255 1 84 1 339 6 
1 1 91 4 2 1 260 1 298 4 93 1 303 4 12 5 59 1 60 3 239 3 105 1 241 4 154 3 201 2 267 4 203 1 270 38 207 1 271 4 112 1 31 4 165 4 164 7 166 4 246 1 214 1 118 20 329 1 169 4 34 1 217 1 38 1 336 1 254 1 255 1 84 1 339 8 125 18 44 2 133 1 136 1 138 3 
91 7 2 1 260 1 298 2 93 1 303 7 12 8 59 1 60 7 239 7 105 1 241 4 154 2 201 1 267 2 203 1 270 52 207 1 271 2 112 2 31 4 165 2 164 14 166 8 246 1 214 1 118 27 169 7 34 1 217 1 38 1 336 1 254 1 255 1 84 1 339 4 179 2 125 25 44 1 133 1 136 1 138 4 
91 3 260 1 298 2 301 1 303 3 12 3 59 1 60 3 239 3 105 1 241 2 154 1 201 1 267 2 270 19 271 2 112 1 31 2 165 2 164 6 166 3 118 9 329 1 169 3 336 1 84 1 339 4 125 10 136 2 138 1 
91 3 260 2 298 3 93 1 303 3 12 3 59 1 60 2 239 2 105 1 201 2 154 2 241 2 267 3 270 26 271 3 164 4 166 2 31 4 165 3 118 14 169 2 34 1 217 1 38 1 336 1 255 1 84 1 339 6 125 12 44 2 133 1 136 1 138 2 
146 1 300 1 7 1 129 1 278 1 263 1 279 1 144 1 17 1 28 1 
299 1 222 1 
300 1 43 1 66 1 88 1 278 1 263 1 279 1 144 1 28 1 
212 1 300 1 7 1 302 1 278 1 279 1 263 1 123 1 97 2 144 1 17 1 238 1 145 1 83 1 127 1 129 1 228 1 28 1 
212 1 300 1 7 1 302 1 278 1 279 1 263 1 123 1 97 2 144 1 17 1 238 1 145 1 83 1 127 1 129 1 228 1 28 1 
212 1 300 1 7 1 302 1 278 1 279 1 263 1 123 1 97 2 144 1 17 1 238 1 145 1 83 1 127 1 129 1 228 1 28 1 
107 1 99 1 41 1 
107 1 99 1 41 1 
264 1 321 1 
99 1 264 1 321 1 
202 1 39 1 
300 1 299 1 140 2 302 1 263 1 97 1 144 1 238 1 197 1 312 2 202 1 318 1 273 2 28 1 323 1 278 1 173 1 76 2 279 1 123 1 39 1 256 1 178 1 127 1 222 1 290 2 134 1 
107 1 41 1 
99 1 264 1 321 1 
92 2 298 1 140 2 142 2 305 1 237 1 101 2 25 1 267 1 317 1 270 2 271 1 273 2 161 1 114 1 115 1 29 1 277 1 165 1 118 1 168 2 76 2 36 1 339 2 125 1 344 1 45 1 
92 1 231 1 168 1 142 1 94 1 176 1 54 1 100 1 308 1 340 1 22 1 62 1 316 1 268 1 
245 1 92 1 4 1 232 1 168 1 233 1 142 1 250 1 75 1 176 1 54 1 100 1 196 1 23 1 155 2 316 1 205 1 159 1 
245 1 92 2 4 1 232 1 168 2 233 1 142 2 250 1 75 1 176 1 54 1 100 1 196 1 23 1 155 2 316 1 46 1 205 1 159 1 
245 1 92 1 232 1 168 1 233 1 142 1 250 1 75 1 176 1 100 1 196 1 23 1 183 1 155 2 316 1 205 1 159 1 
172 1 
92 1 298 1 140 2 142 1 141 2 192 1 193 1 56 1 100 1 308 1 197 1 22 1 312 2 314 1 25 1 267 1 270 1 271 1 242 1 273 3 320 1 165 1 277 1 168 1 76 3 176 1 36 1 339 2 340 1 125 1 343 1 290 2 
2 1 213 1 234 1 191 1 14 1 257 1 145 4 104 2 342 2 311 1 148 2 67 2 160 4 295 1 27 2 
145 1 257 1 104 1 213 1 240 1 67 1 191 1 26 1 14 1 295 1 
91 2 166 2 5 2 191 5 303 2 12 2 145 5 239 2 342 5 148 5 67 5 209 1 160 10 27 5 275 1 
145 1 230 1 104 1 247 1 302 1 238 1 
230 4 92 4 231 1 142 4 234 2 302 3 191 2 100 1 308 1 14 2 309 1 238 3 22 1 62 1 311 2 200 1 67 2 113 2 328 1 213 1 247 2 168 4 121 1 176 1 335 1 219 1 257 2 340 2 295 2 
145 1 104 1 240 1 67 1 130 1 191 1 26 1 
230 1 302 1 191 1 14 1 238 1 19 1 145 2 104 1 148 1 67 1 153 1 160 1 213 1 247 1 281 1 257 1 295 1 
92 1 189 1 142 1 234 1 191 1 13 2 14 1 308 4 100 1 103 1 22 1 65 1 314 1 152 1 315 1 213 1 168 1 170 1 176 2 257 1 340 1 259 1 224 1 295 1 
230 1 91 2 5 2 234 1 93 1 302 1 191 8 303 2 12 2 14 2 238 1 145 5 239 2 104 2 311 1 148 3 67 5 241 1 154 1 209 1 160 6 27 5 213 2 166 2 247 1 34 1 38 1 253 1 255 1 257 2 342 5 289 1 133 1 295 2 138 1 
5 2 140 1 302 1 141 1 191 2 55 1 12 2 14 1 238 1 149 1 312 1 67 2 203 1 68 1 209 1 242 1 273 1 213 1 166 1 214 1 246 1 74 1 76 1 78 1 257 1 290 1 227 1 295 1 
263 1 39 1 110 1 144 1 17 1 
147 1 263 1 144 1 
147 1 263 1 144 1 
147 1 263 1 144 1 
249 1 263 1 144 1 
249 1 263 1 144 1 
249 1 263 1 144 1 
263 1 144 1 
300 1 28 1 
2 1 298 1 12 1 241 1 154 1 267 1 270 8 203 1 271 1 207 1 166 1 165 1 164 2 118 4 214 1 246 1 169 2 34 1 254 1 84 1 339 2 125 4 138 1 
91 1 2 1 298 2 303 1 12 2 60 1 102 1 241 2 154 1 267 2 203 1 270 11 207 1 271 2 112 1 166 1 165 2 164 3 246 1 214 1 118 6 169 2 34 1 254 1 84 1 339 4 125 5 138 1 
91 2 2 1 298 3 93 1 303 2 12 3 60 1 102 1 239 2 241 1 154 1 267 3 203 1 270 19 207 1 271 3 165 3 166 3 164 4 246 1 214 1 118 9 169 3 34 1 38 1 254 1 255 1 84 1 339 6 125 10 44 1 133 1 138 1 
91 2 2 1 298 3 93 1 303 2 12 3 60 2 102 1 239 1 241 1 154 1 267 3 203 1 270 17 207 1 271 3 165 3 166 2 164 5 246 1 214 1 118 10 169 3 34 1 38 1 254 1 255 1 84 1 339 6 125 7 44 1 133 1 138 1 
2 1 298 1 12 1 241 1 154 1 267 1 270 8 203 1 271 1 207 1 166 1 165 1 164 2 118 4 214 1 246 1 169 2 34 1 254 1 84 1 339 2 125 4 138 1 
91 2 298 1 93 1 303 2 12 2 60 1 239 2 241 1 154 1 267 1 270 12 271 1 165 1 166 2 164 2 118 6 169 1 34 1 38 1 255 1 84 1 339 2 125 6 133 1 138 1 
91 2 2 1 298 4 93 1 303 2 12 3 60 2 102 1 239 1 241 1 154 1 267 4 203 1 270 18 207 1 271 4 165 4 166 2 164 5 246 1 214 1 118 10 169 3 34 1 38 1 254 1 255 1 84 1 339 8 125 8 44 2 133 1 138 1 
91 3 298 4 93 1 303 3 12 3 60 3 239 2 241 1 154 1 267 4 270 16 271 4 165 4 166 2 164 6 118 9 329 1 169 3 34 1 38 1 255 1 84 1 339 8 125 7 44 2 133 1 138 1 
166 1 164 6 214 3 246 1 118 3 169 3 12 1 254 1 60 3 125 4 270 7 203 3 207 2 
91 2 2 1 298 4 93 1 303 2 12 3 60 1 239 1 241 1 154 1 267 4 203 1 270 18 207 1 271 4 165 4 166 2 164 4 246 1 214 1 118 10 329 1 169 3 34 1 38 1 254 1 255 1 84 1 339 8 125 8 44 2 133 1 138 1 
165 1 164 5 166 2 298 1 214 2 118 5 246 1 169 3 55 1 12 2 60 2 84 1 339 2 125 5 267 1 203 2 270 10 271 1 
165 1 164 1 298 1 118 2 303 1 12 1 60 1 84 1 339 2 267 1 270 2 271 1 
91 1 166 1 164 2 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 84 1 339 2 125 2 267 1 270 4 271 1 
165 3 164 2 298 3 214 1 118 1 329 1 169 1 60 1 84 1 339 6 63 1 125 2 44 1 267 3 270 3 203 1 271 3 
91 3 2 1 298 5 303 3 12 5 60 5 102 1 239 3 63 1 241 4 154 1 267 5 203 3 270 34 207 1 271 5 112 1 276 1 165 5 164 12 166 5 246 2 214 3 118 16 329 1 169 7 334 1 254 1 84 1 339 10 125 18 44 2 223 1 138 3 
2 1 166 1 164 3 165 2 246 1 118 4 298 2 214 1 169 2 12 1 254 1 60 1 339 4 125 4 44 1 267 2 270 8 203 1 271 2 207 1 
2 1 164 2 166 1 214 1 246 1 118 3 169 2 12 1 254 1 125 3 130 1 203 1 270 6 207 1 
91 1 166 1 164 2 165 1 298 1 118 2 169 1 303 1 12 1 60 1 239 1 102 1 339 2 125 2 267 1 270 4 271 1 
91 1 166 1 164 2 118 3 169 1 303 1 12 1 60 1 239 1 125 4 154 1 241 2 270 7 112 1 138 1 
91 2 2 1 298 2 303 2 12 3 15 1 60 4 239 2 63 1 241 2 267 2 203 2 270 23 207 1 271 2 112 1 164 9 166 3 165 2 246 1 214 2 118 11 169 5 254 1 339 4 125 12 179 1 44 2 138 2 
125 1 241 1 270 1 
118 1 270 1 138 1 
91 1 165 1 164 3 166 1 298 1 118 3 169 2 303 1 12 1 60 1 102 1 239 1 339 2 125 3 267 1 270 6 271 1 275 1 
91 2 298 1 93 1 303 2 12 2 60 1 239 2 241 1 154 1 267 1 270 12 271 1 165 1 166 2 164 2 118 6 169 1 34 1 38 1 255 1 84 1 339 2 125 6 133 1 138 1 
166 1 164 2 246 1 118 3 214 1 169 1 12 1 60 1 125 3 270 6 203 1 
164 2 165 1 118 1 214 1 298 1 169 1 254 1 60 1 339 2 63 1 125 2 44 1 267 1 203 1 270 3 207 1 271 1 
197 1 86 1 140 1 291 1 266 1 76 1 273 1 
140 1 8 1 76 1 338 1 197 1 86 1 24 1 266 1 291 1 293 1 273 1 70 1 
92 4 231 1 168 4 73 1 142 4 176 1 308 1 100 1 340 1 62 1 22 1 157 1 46 1 
92 2 53 1 168 2 142 2 306 1 304 1 176 2 11 1 308 1 100 1 22 1 314 1 113 1 162 1 
340 1 245 1 92 1 168 1 142 1 155 1 75 1 176 1 100 1 196 1 
92 2 23 1 168 2 142 2 46 1 161 1 114 1 
92 4 231 1 168 5 73 1 142 5 122 1 176 2 308 3 100 2 340 1 62 1 64 1 22 2 46 1 113 1 161 1 
92 4 231 1 168 5 73 1 142 5 122 1 176 2 308 3 100 2 82 1 340 1 62 1 22 2 46 1 113 1 161 1 
340 1 22 1 62 1 92 1 231 1 168 1 130 1 142 1 176 1 100 1 308 1 
92 1 140 1 168 1 142 1 76 2 176 1 192 1 308 1 100 1 340 1 197 1 22 1 312 1 314 1 290 1 273 2 320 1 322 1 
92 1 140 2 142 1 192 1 100 1 308 3 197 1 22 2 312 1 314 2 273 2 272 1 320 1 113 1 322 1 71 1 168 1 76 2 176 1 87 1 290 2 227 1 90 1 
92 2 140 2 142 2 100 1 308 3 197 1 22 2 106 1 312 1 314 2 157 1 273 2 272 1 320 1 113 1 322 1 71 1 168 2 76 2 176 1 87 1 290 2 227 1 90 1 
230 1 92 3 71 1 72 1 168 3 215 1 302 2 142 3 176 1 13 1 308 4 100 1 238 2 145 1 285 1 340 1 104 1 22 1 314 1 315 1 157 1 113 1 90 1 
92 1 71 1 168 1 302 1 142 1 176 1 13 1 308 4 100 1 238 1 22 1 314 1 315 1 259 1 113 1 90 1 
325 1 92 1 168 1 142 1 176 1 100 1 
325 1 92 6 167 1 168 7 142 7 122 1 306 1 176 3 308 3 100 2 101 1 284 1 340 2 64 1 22 2 23 1 314 1 46 1 224 1 161 1 162 1 
92 1 2 1 190 1 192 1 193 1 12 1 100 1 22 1 197 2 25 2 267 2 203 1 270 6 271 2 207 1 273 2 274 1 29 1 277 2 214 1 118 3 125 3 290 1 46 1 226 1 298 2 140 1 142 1 308 1 312 1 314 1 243 1 320 1 322 1 165 2 164 2 166 1 246 1 168 1 169 2 76 2 176 1 254 1 85 1 339 4 343 1 344 1 
189 1 213 1 92 1 168 1 142 1 302 1 335 1 13 1 308 2 14 1 238 1 257 1 103 1 178 1 340 1 152 1 315 1 259 1 295 1 
325 1 92 2 168 2 170 1 142 2 176 2 308 2 100 1 22 1 314 1 315 1 46 1 224 1 
92 1 140 1 168 1 142 1 76 2 176 1 308 1 100 1 340 1 197 1 22 1 312 1 106 1 314 1 290 1 273 2 320 1 322 1 
92 1 168 1 142 1 306 1 176 2 308 1 100 1 284 1 22 1 314 1 224 1 113 1 162 1 
197 1 310 1 126 1 150 1 280 1 
302 2 280 2 235 1 194 1 238 2 145 1 285 1 104 1 178 1 286 1 197 1 310 2 126 2 150 1 87 1 89 1 227 1 272 1 294 1 
140 1 76 1 280 1 305 1 237 1 310 1 150 1 317 1 273 1 
150 1 235 1 294 1 
116 1 181 1 182 1 244 1 
188 1 51 1 307 1 282 1 
188 1 346 1 
116 1 181 1 182 1 244 1 
116 1 51 1 181 1 261 1 47 1 244 2 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
188 2 3 2 204 1 124 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
117 1 
116 1 181 1 182 1 244 1 
188 1 130 1 346 1 137 1 
116 1 181 1 244 1 
216 1 120 1 47 1 
116 1 181 1 182 1 244 1 
116 1 181 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 244 1 
116 1 181 1 182 1 187 1 244 1 
116 1 181 1 182 1 244 1 
116 1 245 1 181 1 182 1 155 1 244 1 
116 1 181 1 182 1 244 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 276 38 1 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 276 38 1 174 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 276 38 1 (75,313) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 276 38 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 276 38 1 (75,313) (75,313) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 44 282 212 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 162 65 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 162 65 142 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 162 65 142 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 162 65 142 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 276 201 16 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 163 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 276 38 1 (75,313) (75,313) 224 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 276 38 1 174 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 276 59 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 276 59 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 276 59 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 276 59 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 30 13 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 276 59 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 48 2 171 9 52 1 259 5 4 1 8 1 134 1 300 2 176 9 220 1 139 2 56 1 267 1 271 2 145 1 309 1 24 1 311 1 274 3 185 6 317 2 71 1 238 4 242 1 205 2 330 2 165 1 
49 1 48 2 171 9 52 1 259 5 4 1 8 1 134 1 300 2 176 9 220 1 139 2 56 1 267 1 271 2 145 1 309 1 24 1 311 1 274 3 185 6 317 2 71 1 238 4 242 1 205 2 330 2 165 1 
49 1 48 2 171 10 52 1 259 6 4 1 8 1 134 1 300 2 176 10 220 1 139 2 56 1 267 1 271 2 145 1 309 1 24 1 311 1 274 4 185 7 317 2 71 1 238 5 242 1 205 2 330 2 165 1 
49 1 48 2 171 7 52 1 259 4 4 1 8 1 134 1 300 2 176 7 220 1 139 2 56 1 267 1 271 2 145 1 309 1 311 1 274 2 185 4 317 2 71 1 238 3 242 1 205 1 330 2 165 1 
49 1 317 1 48 1 171 4 259 3 8 1 300 1 220 1 176 4 238 2 242 1 271 1 205 2 24 1 311 1 330 1 274 1 185 3 
49 1 317 1 171 2 259 1 4 1 300 1 137 1 220 1 176 2 139 1 242 1 21 1 145 1 271 1 46 1 330 1 
49 1 317 2 171 3 52 1 259 2 220 1 176 3 139 1 238 1 242 1 330 2 274 1 185 1 
49 1 48 1 171 9 52 1 259 5 8 1 300 1 176 9 220 1 139 1 56 1 267 1 271 1 24 1 311 1 274 3 185 7 317 2 324 1 238 4 242 1 204 1 205 2 330 2 
49 1 48 1 171 9 52 1 259 5 8 1 300 1 176 9 220 1 139 1 56 1 267 1 271 1 24 1 311 1 274 3 185 7 317 2 324 1 238 4 242 1 204 1 205 2 330 2 
110 1 31 1 155 1 
110 1 23 1 63 2 
276 1 1 1 38 1 
276 1 1 1 38 1 174 1 
276 1 1 1 38 1 75 1 
251 1 107 1 191 1 211 1 110 1 153 1 298 1 155 1 20 1 329 1 247 1 180 1 312 1 149 1 
276 1 38 1 
107 1 247 1 93 1 291 1 40 1 
107 2 270 1 110 1 247 2 291 1 40 1 155 1 175 1 
107 1 247 1 40 1 
107 1 276 1 1 1 247 1 38 1 291 1 75 1 313 1 
110 1 
107 2 98 1 270 1 110 1 247 2 291 1 40 1 155 1 
107 5 110 1 195 2 114 1 261 1 40 2 155 1 156 1 270 1 81 1 22 2 247 5 206 2 289 1 290 1 103 1 147 1 291 2 316 1 
256 1 135 1 
256 1 135 1 
69 1 199 1 
69 1 199 1 
69 1 199 1 
256 1 104 1 135 1 
256 1 104 1 135 1 
256 1 246 1 135 1 
87 1 69 1 256 2 135 2 315 1 199 1 
256 1 104 1 135 1 
256 1 135 1 187 1 
256 1 135 1 187 1 
256 1 135 1 187 1 
228 1 107 2 319 1 256 2 110 1 297 3 214 1 135 2 76 2 177 1 240 2 19 2 223 1 328 2 247 2 207 1 164 1 84 2 315 1 
76 1 107 1 240 1 276 1 256 1 19 1 297 1 328 1 247 1 214 1 135 1 
48 1 271 1 300 1 
271 1 300 1 137 1 
48 2 229 1 3 1 300 3 137 1 236 1 
48 1 229 1 3 1 124 1 300 2 137 1 
48 1 229 2 3 1 300 2 137 1 
252 1 168 1 50 1 216 1 303 1 270 1 22 1 23 1 103 1 63 3 147 2 183 1 226 2 189 1 107 5 72 2 279 1 110 2 195 1 281 1 39 1 40 1 155 1 283 1 203 1 247 5 206 1 290 3 47 1 291 4 85 2 250 1 
166 1 294 1 252 1 168 2 91 1 93 5 216 3 270 1 100 1 22 2 23 3 310 1 103 1 63 9 147 6 183 3 67 5 107 9 72 6 110 5 195 2 281 3 39 3 40 6 155 1 200 1 203 4 81 1 247 9 206 2 290 8 47 3 291 7 85 6 250 2 
168 1 216 1 22 1 23 2 183 1 147 2 63 4 226 1 189 1 107 3 72 2 279 1 110 3 195 1 281 1 39 1 155 1 203 1 81 1 247 3 206 1 290 3 291 2 47 1 250 1 85 2 
166 1 168 1 91 1 216 2 100 1 22 1 23 3 63 7 183 2 147 4 226 2 107 4 189 1 72 4 279 1 110 4 195 1 281 2 39 2 155 1 203 2 81 1 247 4 206 1 290 5 291 3 47 2 85 4 250 1 
96 1 117 1 233 1 31 1 249 1 
96 1 42 1 
213 1 
96 1 209 1 
96 3 170 1 244 1 233 2 234 1 209 1 
96 1 170 1 209 1 
96 1 121 1 
318 1 129 1 255 2 232 3 39 1 217 3 264 1 265 1 77 4 120 1 43 1 18 1 222 7 61 2 272 1 27 1 183 1 
318 1 129 1 255 2 232 3 39 1 217 3 264 1 265 1 77 4 120 1 43 1 18 1 222 7 61 2 272 1 27 1 183 1 
318 1 129 1 255 2 232 3 39 1 217 3 264 1 265 1 77 4 120 1 43 1 18 1 222 7 61 2 272 1 45 1 27 1 183 1 
130 4 129 2 255 5 89 1 216 3 217 10 54 1 264 1 12 3 265 5 99 1 57 1 18 1 101 2 144 1 222 31 272 1 61 3 27 2 183 4 66 1 318 2 70 1 280 1 232 15 281 3 39 4 326 1 77 16 120 2 80 1 43 1 160 1 47 3 
318 1 70 2 129 1 255 3 108 1 89 2 280 2 232 4 39 1 217 4 53 1 264 1 265 1 77 5 120 1 80 2 43 1 57 1 18 1 222 9 101 4 61 2 27 1 183 1 
49 1 48 1 254 1 51 1 171 2 259 1 300 2 262 1 301 1 137 1 176 2 220 1 139 1 11 1 269 2 178 1 15 1 271 1 60 1 185 1 317 1 151 2 230 1 41 2 115 1 236 1 242 1 158 1 123 1 248 1 330 1 
49 1 48 1 51 1 171 3 259 1 262 1 301 1 300 2 137 1 176 3 139 1 269 1 178 1 15 1 271 1 60 1 273 1 185 2 317 1 275 1 151 1 115 1 41 1 236 1 119 1 242 1 158 1 123 1 248 1 330 1 
49 1 48 1 51 1 171 2 259 1 262 1 301 1 300 2 137 1 176 2 139 1 269 1 15 1 60 1 271 1 273 1 185 2 275 1 151 1 115 1 41 1 236 1 242 1 158 1 248 1 
51 2 171 1 88 1 262 2 301 1 218 1 176 1 96 1 139 2 221 1 14 1 15 1 269 1 317 1 150 1 151 1 323 1 41 1 115 2 325 1 119 1 330 1 209 1 
48 1 51 1 171 1 262 1 301 1 300 2 137 1 176 1 220 1 139 1 11 1 269 1 178 1 15 1 271 1 60 1 273 1 317 1 151 1 115 1 41 1 236 1 158 1 123 1 248 1 330 1 
241 1 
251 1 168 1 167 1 95 1 10 2 96 1 14 2 268 1 269 2 15 1 270 3 20 1 22 1 23 2 180 1 103 1 184 2 186 1 107 5 33 1 191 1 277 1 110 2 195 1 40 6 41 2 198 1 116 1 202 1 44 1 288 2 206 1 290 2 209 1 211 1 298 1 299 1 301 1 218 1 302 2 221 1 308 2 63 2 147 2 312 1 149 1 227 2 68 1 151 2 231 2 153 1 155 1 239 4 247 5 329 1 
251 1 107 3 167 1 68 1 191 1 211 1 298 1 153 1 40 2 95 1 198 1 116 1 98 1 239 2 270 1 20 1 288 1 247 3 329 1 180 1 312 1 149 1 
251 1 167 1 211 1 298 1 95 1 98 1 270 1 20 1 180 1 312 1 149 1 227 1 107 3 68 1 191 1 110 1 153 1 40 1 198 1 116 1 155 1 239 3 329 1 247 3 
251 1 167 1 211 1 298 1 95 1 302 1 98 1 270 1 20 1 180 1 312 1 149 1 227 1 107 3 68 1 191 1 110 1 153 1 198 1 40 2 116 1 155 1 239 3 288 1 329 1 247 3 
251 1 167 1 95 1 10 2 98 1 270 3 17 1 20 1 22 1 23 2 180 1 103 1 184 2 107 5 191 1 278 1 110 5 195 1 40 7 198 1 116 1 282 1 202 1 44 1 288 4 206 1 290 1 211 1 298 1 302 4 219 1 308 2 143 1 312 1 147 1 149 1 227 4 68 1 231 2 153 1 155 5 239 6 329 1 247 5 
251 1 167 1 95 1 10 2 268 1 270 2 20 1 22 1 23 2 180 1 103 1 184 2 107 4 191 1 110 2 195 1 198 1 40 4 116 1 202 1 44 1 288 2 206 1 290 1 211 1 298 1 302 2 308 2 312 1 147 1 63 2 149 1 227 2 68 1 231 2 153 1 155 1 239 4 329 1 247 4 
251 1 167 1 211 1 298 1 95 1 10 2 302 2 219 1 270 2 308 2 17 1 20 1 22 1 23 2 180 1 103 1 147 1 312 1 184 2 149 1 227 2 107 4 68 1 191 1 110 1 231 2 195 1 153 1 40 4 198 1 155 1 282 1 116 1 202 1 239 4 44 1 288 2 329 1 247 4 206 1 290 1 
251 1 167 1 211 1 298 1 95 1 10 2 302 2 219 1 270 2 308 2 17 1 20 1 22 1 23 2 180 1 103 1 147 1 312 1 184 2 149 1 227 2 107 4 68 1 191 1 110 1 231 2 195 1 153 1 40 4 198 1 155 1 282 1 116 1 202 1 239 4 44 1 288 2 329 1 247 4 206 1 290 1 
251 1 167 1 211 1 212 1 298 1 95 1 10 1 20 1 180 1 312 1 184 1 149 1 107 2 68 1 191 1 153 1 198 1 116 1 282 1 239 2 44 1 329 1 247 2 
251 1 167 1 211 1 298 1 95 1 10 2 219 1 302 3 270 2 308 2 17 1 20 1 22 1 23 2 180 1 103 1 147 1 312 1 184 2 149 1 227 3 107 4 68 1 191 1 278 1 110 1 231 2 195 1 153 1 198 1 40 5 155 1 282 1 116 1 202 1 239 5 44 1 288 3 329 1 247 4 206 1 290 1 
251 1 167 1 211 1 298 1 95 1 10 2 219 1 302 3 270 2 308 2 17 1 20 1 22 1 23 2 180 1 103 1 147 1 312 1 184 2 149 1 227 3 107 4 68 1 191 1 278 1 110 1 231 2 195 1 153 1 198 1 40 5 155 1 282 1 116 1 202 1 239 5 44 1 288 3 329 1 247 4 206 1 290 1 
251 1 167 1 95 1 10 2 268 1 270 2 20 1 22 1 180 1 103 1 184 2 107 4 191 1 35 2 110 1 195 1 198 1 40 4 116 1 44 1 288 2 206 1 290 1 211 1 298 1 302 2 55 1 312 1 147 1 63 2 149 1 227 2 68 1 153 1 155 1 239 4 329 1 247 4 82 2 
130 2 255 3 89 2 7 1 216 3 217 6 12 1 265 3 142 1 144 1 101 4 222 19 25 1 183 3 65 1 66 1 188 1 70 2 108 1 37 1 74 2 280 2 322 2 232 10 281 3 39 3 77 9 80 2 125 1 47 3 
130 2 255 1 89 3 92 1 216 2 217 2 265 1 12 2 57 2 142 1 101 6 222 18 144 2 26 1 183 2 65 2 188 1 70 3 108 1 152 1 74 2 280 3 232 8 281 1 39 1 154 1 77 10 80 3 285 1 162 1 125 2 47 2 
130 4 255 2 89 3 92 1 7 1 216 4 217 5 12 3 265 3 57 1 142 1 144 3 101 6 222 32 26 1 183 4 65 1 66 1 188 1 70 3 152 1 108 1 37 1 74 3 280 3 322 1 232 17 281 4 39 4 154 1 77 15 80 3 285 1 162 1 125 2 47 4 292 1 
130 4 255 3 89 4 92 1 7 1 216 4 217 6 12 3 265 3 57 2 142 1 144 3 101 8 222 31 26 1 183 4 65 1 66 1 188 1 70 4 152 1 108 1 37 1 74 3 280 4 322 1 232 15 281 3 39 3 154 1 77 16 80 4 285 1 162 1 125 2 47 4 292 1 
130 4 255 6 89 2 92 1 216 6 217 11 264 1 12 4 265 5 57 1 18 1 142 1 144 2 101 4 222 42 61 1 26 1 183 7 65 1 66 2 188 1 318 1 70 2 152 1 108 1 74 2 321 2 280 2 232 19 281 5 39 6 154 1 77 23 120 1 80 2 43 1 285 1 162 1 125 1 47 6 
228 1 76 1 240 1 256 1 19 1 223 1 296 1 328 1 135 1 315 1 
246 1 112 1 
76 1 240 1 256 1 19 1 194 1 328 1 133 1 135 1 293 1 
228 1 107 1 319 1 256 1 110 1 297 2 214 1 135 1 76 1 177 1 240 1 19 1 223 1 247 1 328 1 164 1 84 1 315 1 
228 1 107 1 319 1 256 1 110 1 297 2 214 1 135 1 76 1 177 1 240 1 19 1 223 1 247 1 328 1 164 1 84 1 315 1 
228 1 107 1 319 1 256 1 110 1 297 2 214 1 135 1 76 1 177 1 240 1 19 1 223 1 247 1 328 1 164 1 84 1 315 1 
87 1 104 1 105 1 
87 1 104 1 105 1 
157 1 187 1 
87 1 157 1 187 1 
225 1 127 1 
107 1 276 1 256 1 297 1 112 1 135 1 303 1 283 1 201 1 76 1 240 1 203 1 16 1 19 1 246 1 328 1 247 1 225 1 291 1 164 1 84 1 127 1 
104 1 105 1 
87 1 157 1 187 1 
251 2 254 2 131 1 89 1 6 1 301 1 96 1 140 1 306 1 15 1 307 1 269 2 179 1 101 2 222 2 30 1 190 1 70 1 191 2 151 2 193 1 280 1 36 1 232 1 197 1 41 2 77 1 284 1 80 1 329 2 209 1 
48 1 151 2 2 1 230 1 94 1 300 2 301 1 41 2 115 1 137 1 236 1 15 1 269 2 178 1 158 1 141 1 271 1 248 1 273 1 
48 1 151 1 73 1 300 2 41 1 115 1 301 1 137 1 236 1 269 1 178 1 158 1 15 1 141 1 271 1 248 1 273 1 
151 1 2 1 301 1 41 1 115 1 325 1 218 1 96 1 221 1 14 1 15 1 269 1 181 1 209 1 
48 1 151 1 2 1 94 1 300 2 41 1 115 1 301 1 137 1 236 1 15 1 269 1 178 1 158 1 141 1 271 1 248 1 273 1 
83 1 
110 1 290 1 114 1 147 1 261 1 31 1 155 1 
308 1 270 1 22 1 23 1 103 1 147 1 63 1 107 1 110 2 195 1 231 1 40 1 155 1 202 1 247 1 206 1 290 1 
168 2 253 2 170 1 173 2 261 1 96 6 14 1 15 2 269 2 270 3 22 4 102 1 23 6 103 4 183 2 32 2 107 5 277 1 110 8 195 4 113 2 281 2 114 1 39 2 41 2 40 5 42 3 122 1 206 4 290 9 47 2 209 1 295 1 298 2 216 2 301 1 305 2 58 2 146 2 64 1 63 12 147 8 151 2 72 6 230 1 233 2 155 2 245 2 244 1 247 5 163 1 85 6 
168 1 130 1 92 1 216 2 136 1 12 1 58 2 270 1 22 2 144 1 23 3 103 2 26 1 63 6 147 5 183 2 32 1 107 1 277 1 72 5 152 1 110 5 195 2 281 2 39 2 40 1 154 1 155 2 79 1 285 1 247 1 206 2 290 8 47 2 85 5 
318 1 107 1 276 1 1 1 195 1 38 1 39 1 75 1 219 1 264 1 120 1 58 2 22 1 247 1 224 1 206 1 290 2 103 1 147 1 183 1 313 1 
110 1 195 1 114 1 261 1 155 1 22 1 206 1 103 1 290 1 147 1 
72 5 110 5 113 1 281 2 39 2 216 2 58 2 23 5 290 5 47 2 183 2 147 5 63 10 32 1 85 5 
107 1 270 1 110 1 247 1 40 1 155 1 
168 2 210 1 258 1 301 1 218 1 96 1 221 1 14 2 15 1 269 2 270 2 22 2 103 1 64 2 147 2 186 1 33 1 107 3 151 2 277 2 195 2 41 2 40 4 81 1 122 1 247 3 206 2 290 2 209 1 
276 1 1 1 38 1 174 1 
168 1 277 1 72 2 110 4 195 1 155 2 22 1 23 2 61 1 206 1 103 1 290 1 63 4 147 2 85 2 
76 1 240 1 161 1 
76 1 240 1 161 1 
228 1 76 1 240 1 111 1 225 1 
76 1 240 1 161 1 
76 1 240 1 243 1 
76 1 240 1 243 1 
76 1 240 1 243 1 
76 1 240 1 
256 1 135 1 
318 1 70 2 255 2 89 2 280 2 232 4 39 1 217 3 264 1 77 4 265 1 80 2 120 1 57 1 43 1 18 1 222 8 101 4 61 1 183 1 
318 1 255 2 232 3 39 1 217 2 264 1 77 3 120 1 43 1 18 1 222 6 61 1 183 1 31 1 
70 1 255 1 89 1 280 1 232 2 281 1 39 1 132 1 216 1 217 2 77 2 265 1 80 1 101 2 222 4 47 1 183 1 
130 2 255 1 281 1 232 4 39 1 216 1 217 2 12 1 77 3 265 1 144 1 222 7 47 1 183 1 66 1 
130 2 255 5 89 2 216 2 215 1 217 9 264 1 265 4 12 2 57 2 18 1 222 23 101 4 61 1 183 3 66 1 318 2 70 2 321 1 280 2 232 12 281 2 39 3 77 11 120 2 80 2 43 1 47 2 208 1 
130 1 222 1 232 1 
77 1 12 1 222 1 
70 1 255 2 89 1 280 1 113 1 232 3 281 1 132 1 39 1 216 1 217 3 77 3 265 1 80 1 101 2 222 6 47 1 183 1 
130 1 255 1 89 1 92 1 216 2 217 2 265 1 12 1 222 12 144 1 101 2 26 1 183 2 70 1 152 1 108 1 280 1 232 6 281 2 39 2 154 1 77 6 80 1 285 1 47 2 
318 1 255 1 232 3 39 1 217 2 264 1 77 3 265 1 120 1 222 6 183 1 
318 1 70 1 255 1 89 1 280 1 232 2 215 1 217 2 77 1 265 1 120 1 80 1 57 1 43 1 18 1 222 3 101 2 
318 2 70 1 255 3 108 1 89 1 280 1 232 5 39 2 217 5 264 1 265 2 77 5 80 1 120 2 101 2 222 10 224 1 183 2 
70 1 108 1 89 1 280 1 217 1 77 2 265 1 80 1 101 2 222 2 47 1 183 1 
70 1 255 1 108 1 89 1 280 1 232 2 281 1 39 1 216 1 217 2 77 2 265 1 80 1 101 2 222 4 47 1 183 1 
318 1 70 3 255 1 108 1 89 3 280 3 232 2 7 1 215 1 217 2 265 1 77 1 80 3 120 1 57 1 222 3 101 6 
130 4 255 7 89 5 132 1 7 1 215 1 216 3 217 12 54 1 264 2 12 3 265 5 57 2 99 1 18 1 144 1 101 10 222 34 61 1 183 5 66 1 318 3 70 5 108 1 280 5 232 18 281 3 39 5 77 16 120 3 80 5 43 1 160 1 47 3 
318 1 70 1 130 1 255 2 108 1 152 1 89 1 280 1 232 4 39 1 217 2 264 1 77 4 12 1 120 1 80 1 43 1 18 1 101 2 144 1 222 8 61 1 183 1 
130 2 255 2 89 2 132 1 216 1 217 3 264 1 12 1 265 1 18 1 222 11 144 1 101 4 61 1 183 2 66 1 318 1 70 2 152 1 108 1 280 2 232 5 39 1 77 6 120 1 80 2 43 1 47 1 
130 1 255 3 89 3 92 1 132 1 216 2 217 4 264 1 265 1 12 1 57 1 18 1 222 19 144 1 101 6 61 1 26 1 183 3 318 1 70 3 152 1 108 1 280 3 232 10 281 2 39 3 154 1 77 9 120 1 80 3 43 1 285 1 47 2 
130 1 255 3 89 3 92 1 132 1 216 2 217 5 264 1 265 2 12 1 57 1 18 1 222 17 144 1 101 6 61 1 26 1 183 3 318 1 70 3 152 1 108 1 280 3 232 7 281 1 39 2 154 1 77 10 120 1 80 3 43 1 285 1 47 2 
318 1 70 1 130 1 255 2 108 1 152 1 89 1 280 1 232 4 39 1 217 2 264 1 77 4 12 1 120 1 80 1 43 1 18 1 101 2 144 1 222 8 61 1 183 1 
130 1 255 1 89 1 92 1 216 2 217 2 265 1 12 1 222 12 144 1 101 2 26 1 183 2 70 1 152 1 108 1 280 1 232 6 281 2 39 2 154 1 77 6 80 1 285 1 47 2 
130 1 255 3 89 4 92 1 132 1 216 2 217 5 264 1 265 2 12 1 57 2 18 1 222 18 144 1 101 8 61 1 26 1 183 3 318 1 70 4 152 1 108 1 280 4 232 8 281 1 39 2 154 1 77 10 120 1 80 4 43 1 285 1 47 2 
130 1 255 3 89 4 92 1 7 1 216 3 217 6 265 3 12 1 57 2 222 16 144 1 101 8 26 1 183 3 70 4 152 1 108 1 280 4 232 7 281 2 39 2 154 1 77 9 80 4 285 1 47 3 
318 3 255 3 232 4 39 1 217 6 264 1 265 3 77 3 120 3 43 1 18 2 222 7 183 1 
130 1 255 3 89 4 92 1 7 1 216 2 217 4 264 1 265 1 12 1 57 2 18 1 222 18 144 1 101 8 61 1 26 1 183 3 318 1 70 4 152 1 108 1 280 4 232 8 281 1 39 2 154 1 77 10 120 1 80 4 43 1 285 1 47 2 
251 1 34 1 191 1 20 1 109 1 329 1 5 1 
251 1 34 1 191 1 109 1 5 1 260 1 9 1 78 1 20 1 327 1 329 1 106 1 
96 1 221 1 14 1 15 1 151 1 269 1 301 1 31 1 41 1 209 1 218 1 
276 1 59 1 
276 1 59 1 
276 1 59 1 
107 1 247 1 64 1 
107 1 247 1 64 1 
15 1 151 1 269 1 28 1 301 1 41 1 
254 1 151 7 170 1 320 1 257 1 230 1 41 7 301 2 263 1 96 3 14 2 269 6 15 3 159 1 287 1 244 1 28 1 273 1 30 1 148 1 209 2 
276 1 59 1 
298 1 173 1 261 1 305 1 96 2 14 1 269 1 270 1 22 2 103 2 146 1 147 1 107 3 151 1 110 1 195 2 114 1 233 1 41 1 40 2 155 1 42 1 122 1 245 1 247 3 206 2 290 1 291 1 
96 2 15 2 151 2 269 2 170 1 230 1 244 1 102 1 233 1 28 1 301 1 41 2 209 1 
128 1 151 4 230 1 41 4 301 1 218 1 304 1 96 1 221 1 14 1 15 1 269 4 209 1 
151 1 170 1 257 1 90 1 41 1 301 1 97 1 96 1 118 1 269 1 15 2 159 1 64 1 209 1 
14 1 15 1 151 1 269 1 271 1 248 1 300 1 301 1 41 1 137 1 
151 2 230 1 6 1 41 2 301 1 96 1 269 2 15 1 273 1 30 1 209 1 
151 4 320 1 230 1 41 4 301 2 218 1 263 1 304 1 96 3 221 1 14 1 269 3 15 2 64 1 30 1 209 2 
151 4 230 1 41 4 301 2 218 1 263 1 304 1 96 3 221 1 14 1 13 1 269 3 15 2 64 1 30 1 209 2 
276 1 59 1 
64 1 
49 1 242 1 259 1 31 1 
49 1 176 1 317 1 242 1 171 1 259 1 330 1 
139 1 51 1 171 1 
49 1 176 3 317 1 220 1 242 1 171 3 259 1 145 2 172 1 330 1 126 1 235 1 
49 1 176 2 317 1 242 1 171 2 259 1 205 1 330 1 185 1 
48 1 176 1 317 1 220 1 238 1 171 1 259 1 271 1 311 1 330 1 300 1 
176 1 317 1 220 1 242 1 171 1 259 1 330 1 
49 1 176 1 317 1 220 1 242 2 171 1 330 1 
317 2 192 1 0 1 171 2 259 1 220 1 176 2 237 1 242 1 330 2 
49 1 317 1 171 3 259 2 220 1 176 3 56 1 238 1 267 1 242 1 330 1 185 2 274 1 
49 1 317 1 48 1 171 2 259 1 196 1 300 2 137 1 236 1 220 1 176 2 242 1 271 1 330 1 185 1 
49 1 317 2 171 4 259 2 220 1 176 4 238 1 242 1 205 1 24 1 330 2 185 2 274 1 
49 1 176 1 317 1 220 1 242 1 171 1 259 1 330 1 
49 2 317 1 171 4 259 3 172 1 235 1 176 4 238 1 242 2 145 1 29 1 330 1 185 2 274 1 
49 1 176 2 317 1 220 1 266 1 242 1 171 2 259 1 324 1 330 1 185 1 86 1 
317 1 49 1 171 3 259 1 172 1 235 2 220 1 176 3 242 1 145 2 182 1 330 1 
138 1 169 2 259 2 62 1 
176 1 317 1 220 1 286 1 171 1 330 1 
49 1 176 2 317 1 220 1 267 1 242 1 171 2 259 1 330 1 185 1 
314 1 
49 1 176 1 317 1 220 1 242 1 171 1 259 1 330 1 
49 1 176 3 317 1 220 1 267 1 242 1 171 3 259 1 145 1 330 1 185 1 
238 1 259 1 29 1 274 1 
242 1 259 1 

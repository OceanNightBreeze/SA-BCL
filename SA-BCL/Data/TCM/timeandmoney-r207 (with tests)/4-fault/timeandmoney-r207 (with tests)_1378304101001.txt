#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (28,187) (17,35) (17,35) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 239 130 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (28,187) (28,187) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (28,187) (17,35) (17,35) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (28,187) (17,35) (17,35) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (28,187) (17,35) (17,35) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 239 130 121 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (50,232) 342 16 (9,254) 104 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 301 7 270 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 301 7 270 179 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 356 (50,232) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (50,232) 342 16 (9,254) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 9 126 1 216 5 351 3 34 9 219 1 106 1 276 2 353 1 107 2 108 1 237 2 223 1 77 1 153 1 241 2 178 1 44 1 84 1 330 1 331 2 265 4 246 1 18 6 341 2 340 1 364 2 365 1 
165 9 126 1 216 5 351 3 34 9 219 1 106 1 353 1 107 2 276 2 108 1 237 2 223 1 77 1 153 1 241 2 178 1 44 1 84 1 330 1 331 2 265 4 246 1 18 6 341 2 340 1 364 2 365 1 
165 10 126 1 216 6 351 4 34 10 219 1 106 1 353 1 107 2 276 2 108 1 237 2 223 1 77 1 153 1 241 2 178 1 44 1 84 1 330 1 331 2 265 5 246 1 18 7 341 2 340 1 364 2 365 1 
165 7 126 1 216 4 351 2 34 7 219 1 353 1 107 2 276 1 108 1 237 2 223 1 77 1 153 1 241 2 178 1 44 1 84 1 330 1 331 2 265 3 246 1 18 4 341 2 340 1 364 2 365 1 
44 1 165 4 216 3 265 2 246 1 351 1 34 4 106 1 107 1 276 2 108 1 237 1 223 1 18 3 341 1 364 1 241 1 178 1 
44 1 165 2 243 1 216 1 146 1 331 1 34 2 107 1 108 1 201 1 223 1 77 1 341 1 364 1 153 1 241 1 
44 1 165 3 216 2 331 1 265 1 351 1 34 3 219 1 108 1 223 1 18 1 341 2 364 2 
165 9 216 5 351 3 219 1 34 9 276 2 107 1 106 1 108 1 354 1 237 1 223 1 241 1 205 1 178 1 44 1 331 1 265 4 246 1 18 7 341 2 340 1 364 2 365 1 
165 9 216 5 351 3 219 1 34 9 276 2 107 1 106 1 108 1 354 1 237 1 223 1 241 1 205 1 178 1 44 1 331 1 265 4 246 1 18 7 341 2 340 1 364 2 365 1 
128 1 195 1 81 1 
128 1 114 2 345 1 
180 1 162 2 118 2 73 2 24 1 67 2 352 2 200 2 
99 2 3 1 217 1 101 1 73 2 350 1 297 1 352 2 199 2 221 2 200 2 277 1 302 1 303 1 112 1 113 1 242 1 65 1 244 1 180 1 139 1 14 1 183 1 67 3 313 2 362 1 288 1 116 1 91 1 22 1 119 1 162 3 118 2 48 2 23 1 50 1 24 1 
137 1 162 1 118 1 73 1 24 1 67 1 269 1 352 1 136 1 200 1 
128 1 138 1 102 1 195 1 166 1 268 1 67 1 269 1 336 1 200 1 162 1 301 1 212 1 206 1 
128 1 73 1 102 1 195 1 166 1 268 2 67 1 352 1 269 1 336 1 200 1 118 1 162 1 212 2 206 1 
194 1 268 1 227 1 212 1 247 1 
10 1 128 1 195 1 129 1 268 2 227 1 212 2 247 1 
268 1 227 1 212 1 
137 1 73 1 268 1 247 1 67 1 269 1 197 1 352 1 200 1 118 1 162 1 24 1 212 1 136 1 
128 1 
10 1 128 1 195 1 268 2 227 1 212 2 247 1 224 1 
10 1 128 1 348 1 182 1 195 1 268 5 247 2 227 2 248 1 184 1 209 1 151 2 176 2 252 1 212 5 43 1 344 2 96 1 27 1 
180 1 81 1 
180 2 73 1 148 1 67 2 352 1 200 2 162 2 118 1 26 1 
122 1 310 1 289 1 
180 1 217 1 139 1 297 1 14 1 67 1 313 1 221 1 362 1 91 1 8 1 22 1 162 1 48 1 50 1 302 1 
180 1 202 1 118 1 162 3 73 3 67 3 352 3 200 3 
162 1 73 1 67 1 269 1 352 1 136 1 200 1 
162 1 118 1 73 1 148 1 67 1 269 1 352 1 26 1 200 1 
99 2 3 1 217 1 73 3 102 1 350 1 297 1 166 1 148 1 352 3 199 1 221 1 200 3 277 1 202 1 302 1 303 1 112 1 304 1 206 1 65 1 244 1 180 1 139 1 332 1 14 1 183 1 268 1 67 4 269 1 140 1 313 1 336 1 362 1 288 1 91 1 22 1 118 2 162 4 48 1 23 1 50 1 24 1 212 1 
180 1 7 1 202 1 162 2 73 1 301 1 67 2 352 1 200 2 
128 1 102 1 332 1 73 3 166 1 148 1 268 1 67 3 269 1 352 3 336 1 200 3 202 2 118 1 162 3 212 1 366 1 304 1 206 1 
73 2 310 1 148 1 67 2 352 2 200 2 202 1 118 1 162 2 122 1 
180 1 217 1 139 1 297 1 14 1 67 1 313 1 221 1 362 1 91 1 22 1 162 1 48 1 50 1 302 1 
180 1 217 1 139 1 14 1 103 1 67 1 313 1 221 1 362 1 91 1 22 1 162 1 48 1 175 1 302 1 
99 2 144 1 298 1 199 4 277 2 150 1 238 1 240 1 303 1 112 1 42 1 65 1 310 2 183 1 359 1 337 1 286 1 288 1 119 2 23 1 122 2 163 1 289 2 213 1 
162 1 73 1 67 1 269 1 352 1 206 1 200 1 97 1 
217 1 139 1 332 1 73 1 310 1 14 1 297 1 67 2 352 1 313 1 221 1 200 1 362 1 91 1 22 1 202 1 162 2 48 1 50 1 302 1 
180 1 316 1 73 4 332 1 148 1 67 5 352 4 200 5 7 1 202 2 162 5 118 1 301 1 123 1 
162 2 73 2 67 2 269 1 352 2 136 1 97 1 200 2 
38 1 
38 1 
127 1 159 1 
127 1 159 1 
127 1 159 1 
38 1 
38 1 
38 1 
127 1 159 1 38 2 
38 1 
38 1 
38 1 
38 1 
264 2 128 1 66 1 268 2 17 1 88 2 187 1 35 1 189 1 38 2 132 2 212 2 294 2 260 1 279 2 
264 1 73 1 268 1 74 1 130 1 67 1 352 1 255 1 88 1 200 1 162 1 239 1 38 1 132 1 212 1 125 1 260 1 294 1 279 1 
237 1 241 1 107 1 
146 1 241 1 107 1 
237 2 146 1 56 1 111 1 241 3 214 1 
237 1 225 1 146 1 56 1 241 2 214 1 
237 1 146 1 56 2 241 2 214 1 
128 2 348 3 296 2 195 1 74 1 234 1 172 1 255 1 151 1 238 1 62 1 176 1 240 1 82 1 42 1 10 1 45 2 114 3 268 5 227 1 247 4 333 1 209 2 361 2 286 1 117 1 212 5 367 1 125 1 344 1 345 1 27 1 
273 1 128 5 348 8 194 5 296 6 195 1 234 2 172 1 318 1 355 1 151 2 238 3 176 2 240 3 42 3 64 1 10 1 114 9 268 9 227 6 247 7 248 1 333 2 209 6 335 1 361 6 286 3 212 9 367 3 51 5 125 4 344 2 345 3 231 1 27 1 
128 3 348 3 195 1 296 2 234 1 151 1 238 1 62 1 176 1 240 1 82 1 42 1 45 1 114 4 268 3 247 2 248 1 333 1 209 2 361 2 286 1 212 3 367 1 125 1 344 1 345 2 
128 4 273 1 348 5 195 1 296 4 234 1 151 1 238 2 176 1 62 1 240 2 82 1 42 2 64 1 45 2 114 7 268 4 247 3 248 1 333 1 209 4 361 4 286 2 212 4 367 2 125 2 344 1 345 3 231 1 
362 1 2 1 81 1 
362 1 85 1 
21 1 
362 1 139 1 
362 3 131 1 2 2 139 1 14 1 89 1 
362 1 139 1 14 1 
362 1 190 1 
144 2 167 1 5 1 170 1 208 1 220 1 199 7 277 3 250 2 286 1 109 1 238 1 119 4 325 1 78 1 213 3 124 1 
144 2 167 1 5 1 170 1 208 1 220 1 199 7 277 3 250 2 286 1 109 1 238 1 119 4 325 1 78 1 213 3 124 1 
144 2 167 1 5 1 170 1 208 1 220 1 199 7 277 3 250 2 286 1 109 1 238 1 119 4 325 1 78 1 213 3 124 1 370 1 
99 2 144 5 30 1 167 1 170 2 5 2 220 2 199 31 277 15 76 1 109 5 238 4 323 1 325 1 78 2 240 3 134 1 303 1 42 3 262 3 280 4 12 1 183 1 208 1 338 1 250 3 286 4 288 1 119 16 23 1 213 10 124 1 192 1 367 3 
144 3 99 4 30 1 167 1 183 2 5 1 170 1 208 1 220 1 199 9 277 4 250 2 286 1 109 1 288 2 238 1 119 5 325 1 71 1 23 2 78 1 213 4 303 2 293 1 
165 2 216 1 317 1 55 1 146 1 217 1 233 1 58 1 34 2 107 1 221 1 108 1 237 1 223 1 110 1 111 1 241 2 302 1 135 1 44 1 331 1 267 1 226 1 313 1 18 1 363 1 341 1 364 1 48 1 291 1 
165 3 216 1 317 1 55 1 146 1 217 1 233 1 58 1 34 3 107 1 221 1 108 1 237 1 223 1 110 1 111 1 241 2 302 1 135 1 331 1 309 1 226 1 313 1 284 1 363 1 18 2 341 1 364 1 48 1 49 1 
165 2 216 1 317 1 146 1 217 1 233 1 34 2 221 1 107 1 108 1 237 1 223 1 110 1 111 1 241 2 302 1 135 1 331 1 226 1 313 1 284 1 363 1 18 2 48 1 49 1 
165 1 215 1 145 1 317 2 217 1 4 1 34 1 221 1 320 1 302 1 135 2 331 2 309 1 139 1 313 1 339 1 70 1 362 1 363 2 91 1 341 1 364 1 48 1 
165 1 317 1 55 1 146 1 217 1 233 1 58 1 34 1 107 1 221 1 237 1 110 1 111 1 241 2 302 1 135 1 44 1 331 1 226 1 313 1 363 1 341 1 364 1 48 1 49 1 291 1 
47 1 
272 1 147 1 102 1 195 1 196 1 198 2 200 1 151 1 154 1 155 1 204 2 206 1 10 3 158 1 11 1 114 2 67 1 333 1 209 2 336 1 339 1 70 1 210 2 162 1 211 2 212 5 344 1 345 2 27 1 128 2 348 2 217 1 166 1 173 4 300 1 218 2 221 2 174 1 176 1 40 1 39 1 301 1 302 1 41 2 138 1 139 1 268 5 227 6 46 2 269 1 313 2 362 1 91 2 48 2 95 1 
102 1 166 1 173 2 200 1 174 1 155 1 40 1 301 1 224 1 206 1 10 1 11 1 138 1 268 3 227 2 67 1 269 1 336 1 162 1 211 1 212 3 95 1 
128 1 102 1 166 1 195 1 173 3 200 1 174 1 155 1 40 1 301 1 224 1 206 1 10 1 11 1 138 1 268 3 227 1 67 1 46 1 269 1 336 1 162 1 212 3 95 1 
128 1 102 1 166 1 195 1 173 3 200 1 174 1 155 1 40 1 301 1 41 1 224 1 206 1 10 1 11 1 138 1 268 3 227 2 67 1 46 1 269 1 336 1 162 1 211 1 212 3 95 1 
102 1 195 5 198 2 200 1 151 1 154 1 155 1 204 2 206 1 10 3 11 1 67 1 209 1 336 1 249 1 251 1 210 2 162 1 211 4 212 5 344 1 345 2 27 1 29 1 346 1 128 5 348 1 166 1 173 6 218 2 174 1 40 1 176 1 39 1 301 1 41 4 224 1 259 1 138 1 268 5 227 7 46 4 269 1 95 1 
102 1 195 1 198 2 200 1 151 1 154 1 155 1 204 2 206 1 10 2 11 1 114 2 67 1 209 1 336 1 210 2 162 1 211 2 212 4 344 1 345 2 27 1 128 2 348 1 166 1 173 4 218 2 300 1 174 1 39 1 176 1 40 1 301 1 41 2 138 1 268 4 227 4 46 2 269 1 95 1 
346 1 128 1 348 1 102 1 195 1 166 1 173 4 218 2 198 2 200 1 174 1 151 1 154 1 39 1 155 1 40 1 176 1 301 1 41 2 204 2 206 1 10 2 11 1 138 1 268 4 227 4 46 2 67 1 269 1 209 1 336 1 249 1 251 1 210 2 162 1 211 2 212 4 95 1 344 1 345 2 27 1 
346 1 128 1 348 1 102 1 195 1 166 1 173 4 218 2 198 2 200 1 174 1 151 1 154 1 39 1 155 1 40 1 176 1 301 1 41 2 204 2 206 1 10 2 11 1 138 1 268 4 227 4 46 2 67 1 269 1 209 1 336 1 249 1 251 1 210 2 162 1 211 2 212 4 95 1 344 1 345 2 27 1 
346 1 128 1 348 1 102 1 195 1 166 1 173 4 200 1 174 1 151 1 154 1 155 1 40 1 203 1 176 1 301 1 41 2 204 2 206 1 263 2 10 2 11 1 282 2 138 1 114 2 268 4 227 4 46 2 67 1 269 1 209 1 336 1 210 2 343 1 162 1 211 2 212 4 229 1 95 1 344 1 27 1 
29 1 346 1 128 1 348 1 102 1 195 1 166 1 173 5 218 2 198 2 200 1 174 1 151 1 154 1 39 1 176 1 155 1 40 1 301 1 41 3 204 2 206 1 10 2 11 1 138 1 268 4 227 5 67 1 46 3 269 1 209 1 336 1 249 1 251 1 210 2 162 1 211 3 212 4 95 1 344 1 345 2 27 1 
29 1 346 1 128 1 348 1 102 1 195 1 166 1 173 5 218 2 198 2 200 1 174 1 151 1 154 1 39 1 176 1 155 1 40 1 301 1 41 3 204 2 206 1 10 2 11 1 138 1 268 4 227 5 67 1 46 3 269 1 209 1 336 1 249 1 251 1 210 2 162 1 211 3 212 4 95 1 344 1 345 2 27 1 
128 1 348 1 102 1 195 1 166 1 173 4 300 1 200 1 174 1 151 1 154 1 155 1 40 1 176 1 301 1 41 2 204 2 206 1 263 2 10 2 11 1 282 2 138 1 114 2 268 4 227 4 46 2 67 1 269 1 209 1 336 1 210 2 343 1 162 1 211 2 212 4 95 1 344 1 27 1 
99 2 144 2 167 1 298 1 220 1 199 6 277 3 238 1 325 1 78 1 81 1 303 1 112 1 65 1 180 2 310 1 183 1 208 1 250 1 286 1 288 1 119 3 122 1 23 1 289 1 213 2 
144 1 99 4 101 1 350 1 75 1 199 14 277 6 321 1 109 1 238 1 240 1 134 1 303 2 112 2 42 2 262 3 65 1 180 1 280 3 266 1 310 11 183 2 338 1 286 2 288 2 120 1 119 8 23 2 122 4 289 11 213 2 367 2 98 1 
99 2 217 1 73 1 101 1 297 1 350 1 57 1 352 1 221 1 199 2 200 1 277 1 8 1 202 1 302 1 303 1 112 1 65 1 180 1 139 1 266 1 332 1 14 1 183 1 207 1 67 2 313 1 362 1 91 1 288 1 22 1 188 1 48 1 162 2 119 1 50 1 122 1 23 1 
144 4 99 6 3 2 101 1 199 20 200 1 277 10 149 2 109 4 202 1 324 1 238 3 325 1 240 2 112 3 65 3 332 1 14 2 67 3 115 1 208 1 250 1 286 3 288 3 19 2 22 2 162 3 119 10 23 3 122 7 289 7 213 8 254 2 217 2 73 1 167 1 350 1 297 2 352 1 220 1 221 3 78 1 133 1 302 2 303 3 42 2 180 2 181 2 266 1 139 2 310 7 183 3 313 3 362 2 91 1 48 3 49 1 50 2 367 2 
315 1 99 4 217 2 73 1 101 1 350 1 169 1 235 1 299 1 298 1 352 1 221 7 199 2 200 1 277 1 202 1 302 2 303 2 112 2 113 2 65 2 308 1 139 2 267 1 183 2 15 1 67 1 313 8 186 1 339 1 362 3 70 1 91 2 288 2 162 1 48 8 119 1 49 1 23 2 
144 1 99 2 73 1 148 1 352 1 199 3 200 1 277 2 238 1 240 1 303 1 112 1 42 1 65 1 266 1 310 1 183 1 67 1 286 1 288 1 118 1 162 1 119 1 122 1 23 1 143 1 289 1 213 1 367 1 
99 2 310 1 183 1 298 1 199 2 286 1 109 1 288 1 150 1 119 2 122 1 23 1 289 1 213 1 303 1 112 1 42 1 65 1 
144 1 99 2 310 1 183 1 298 1 199 2 277 2 288 1 238 1 122 1 23 1 289 1 163 1 240 1 213 1 303 1 112 1 65 1 
99 2 144 1 298 1 199 4 277 2 109 1 238 1 240 1 303 1 42 1 112 1 65 1 310 2 183 1 286 1 288 1 119 2 23 1 122 2 289 2 213 2 367 1 
99 2 308 1 310 1 183 1 199 2 286 1 109 1 288 1 150 1 119 2 122 1 23 1 289 1 213 1 303 1 112 1 42 1 65 1 
144 1 99 2 308 1 310 1 183 1 199 2 277 2 288 1 238 1 122 1 23 1 289 1 163 1 240 1 213 1 303 1 112 1 65 1 
99 2 144 1 199 4 277 2 109 1 238 1 240 1 303 1 42 1 112 1 65 1 308 1 310 2 183 1 286 1 288 1 119 2 23 1 122 2 289 2 213 2 367 1 
99 2 144 1 199 4 277 2 109 1 238 1 240 1 303 1 42 1 112 1 65 1 310 2 183 1 286 1 288 1 119 2 23 1 122 2 289 2 213 2 367 1 
99 2 3 1 217 1 101 1 297 1 350 1 199 2 221 1 277 1 302 1 303 1 112 1 65 1 180 1 139 1 14 1 183 1 67 1 313 1 362 1 91 1 288 1 22 1 119 1 48 1 162 1 50 1 23 1 
99 2 217 1 101 1 350 1 103 1 199 2 221 1 277 1 175 1 302 1 303 1 112 1 65 1 180 1 139 1 14 1 183 1 67 1 313 1 69 1 362 1 91 1 288 1 22 1 119 1 48 1 162 1 23 1 
99 2 144 1 199 4 277 2 109 1 238 1 240 1 303 1 42 1 112 1 65 1 266 1 310 2 183 1 286 1 288 1 119 2 23 1 122 2 289 2 213 2 367 1 
144 1 99 2 3 1 217 1 297 1 199 4 221 1 277 2 109 1 238 1 240 1 302 1 303 1 42 1 112 1 65 1 139 1 310 2 14 1 267 1 183 1 67 1 313 1 286 1 362 1 19 1 288 1 22 1 119 2 48 1 162 1 122 2 50 1 23 1 289 2 213 2 367 1 
99 2 73 1 148 1 352 1 199 3 200 1 277 1 109 1 238 1 240 1 303 1 112 1 42 1 65 1 266 1 310 1 183 1 67 1 185 1 286 1 288 1 118 1 162 1 119 2 23 1 122 1 289 1 213 1 367 1 
144 3 99 4 199 19 277 10 109 3 238 3 240 3 80 1 257 1 134 1 303 2 42 3 262 1 83 2 328 1 280 2 306 1 183 2 338 1 286 3 314 1 288 2 20 1 119 9 23 2 71 1 290 2 213 6 367 3 53 1 
144 2 99 6 30 2 168 1 33 1 199 26 277 12 109 2 238 2 240 2 80 1 156 1 303 3 134 2 42 3 262 2 83 4 328 2 280 2 306 2 86 1 183 3 360 1 286 3 314 1 288 3 20 1 92 1 119 14 23 3 71 1 290 1 213 4 367 3 
99 6 144 4 199 41 277 21 109 4 238 5 325 1 240 4 156 1 328 1 280 4 208 1 338 1 250 1 286 5 20 1 288 3 119 20 71 1 23 3 290 1 213 8 30 1 168 1 167 1 33 1 220 1 78 1 80 1 303 3 134 3 257 1 42 4 262 3 83 4 306 2 86 1 183 3 311 1 360 1 314 1 92 1 367 4 
144 4 99 8 30 2 167 1 168 1 33 1 220 1 199 38 277 18 109 3 238 4 325 1 78 1 240 3 156 1 80 1 257 1 134 3 303 4 42 4 262 3 83 4 328 1 280 4 306 2 86 1 183 4 311 1 208 1 360 1 338 1 250 1 286 5 314 1 288 4 20 1 92 1 119 20 23 4 71 1 290 1 213 7 367 4 
144 7 99 4 30 1 167 1 168 1 33 1 220 1 199 52 277 25 109 7 238 8 325 1 78 1 240 7 156 1 80 1 134 2 303 2 42 7 262 4 83 4 328 1 280 4 306 1 86 1 183 2 208 1 360 1 338 2 250 1 286 8 314 1 288 2 20 1 92 1 119 27 23 2 71 1 290 1 213 14 367 7 98 2 
264 1 28 1 187 1 132 1 38 1 294 1 279 1 
239 1 
264 1 278 1 132 1 38 1 294 1 279 1 
264 1 128 1 66 1 268 1 17 1 88 2 187 1 35 1 189 1 38 1 132 1 212 1 260 1 294 1 279 1 
264 1 128 1 66 1 268 1 17 1 88 2 187 1 35 1 189 1 38 1 132 1 212 1 260 1 294 1 279 1 
264 1 128 1 66 1 268 1 17 1 88 2 187 1 35 1 189 1 38 1 132 1 212 1 260 1 294 1 279 1 
61 1 
61 1 
68 1 
68 1 
90 1 326 1 
264 1 66 1 268 1 74 1 247 1 130 1 255 1 88 1 189 1 121 1 239 1 38 1 132 1 212 1 125 1 294 1 279 1 
61 1 
68 1 
1 1 99 2 217 1 101 1 350 1 169 1 199 2 221 2 200 2 222 1 277 1 302 1 303 1 112 1 113 2 65 1 305 1 139 1 266 1 183 1 67 2 313 2 186 1 362 1 271 1 288 1 48 2 142 1 162 2 119 1 23 1 
146 1 317 1 217 1 267 1 233 1 58 1 313 2 107 1 221 2 236 1 237 1 110 1 48 2 49 1 111 1 241 2 302 1 79 1 368 1 
146 1 317 1 217 1 274 1 233 1 58 1 313 1 107 1 221 1 237 1 110 1 48 1 49 1 111 1 241 2 302 1 368 1 
215 1 317 1 217 1 139 1 313 1 221 1 339 1 362 1 70 1 91 1 48 1 302 1 79 1 261 1 
146 1 317 1 217 1 233 1 58 1 313 1 107 1 221 1 236 1 237 1 110 1 48 1 49 1 111 1 241 2 79 1 302 1 368 1 
347 1 
128 1 348 1 182 1 195 1 252 1 81 1 209 1 
128 2 348 1 195 1 218 1 198 1 151 1 39 1 176 1 10 1 114 1 268 1 227 1 209 1 212 1 344 1 345 1 27 1 
2 1 348 1 349 1 217 2 232 1 104 1 221 1 131 1 151 1 176 1 302 1 9 1 85 2 139 1 14 1 333 1 313 1 16 1 362 4 91 1 342 1 48 1 344 1 27 1 
147 1 128 5 348 8 168 1 296 5 195 2 171 2 33 1 256 1 60 1 151 2 238 2 176 2 240 2 156 1 134 1 42 2 262 1 10 1 281 1 280 1 114 6 86 1 268 1 227 1 333 1 209 5 360 1 361 5 286 2 212 1 367 2 344 2 345 3 27 2 
348 2 73 1 171 2 197 1 352 1 220 1 200 1 151 1 238 1 78 1 176 1 136 1 281 1 137 1 268 1 67 1 269 1 208 1 209 2 249 1 286 2 162 1 118 1 24 1 212 1 344 1 164 1 27 1 
128 1 348 1 182 1 195 1 209 1 151 1 176 1 252 1 344 1 27 1 
281 1 128 5 348 5 114 10 296 5 171 2 209 5 361 5 286 2 149 1 238 2 240 2 367 2 42 2 345 5 
10 1 128 1 195 1 268 1 212 1 227 1 
272 1 147 2 348 2 217 1 319 1 221 4 151 2 152 2 176 2 302 1 10 2 158 1 307 1 139 1 268 3 227 4 248 1 312 1 333 2 313 4 209 2 339 1 362 1 70 1 91 2 48 4 212 3 344 2 27 1 
99 2 3 1 217 1 73 2 350 1 297 1 352 2 199 1 221 1 200 2 277 1 302 1 303 1 112 1 65 1 244 1 180 1 139 1 14 1 183 1 67 3 313 1 362 1 288 1 91 1 22 1 48 1 162 3 118 2 23 1 50 1 24 1 
128 4 147 1 348 1 114 4 296 2 195 2 333 1 209 2 250 1 361 2 151 1 176 1 344 1 345 2 27 1 
264 1 160 1 132 1 
264 1 160 1 132 1 
264 1 90 1 36 1 132 1 157 1 
264 1 160 1 132 1 
264 1 141 1 132 1 
264 1 141 1 132 1 
264 1 141 1 132 1 
264 1 132 1 
38 1 
144 2 99 4 30 1 167 1 183 2 208 1 220 1 199 8 250 1 277 4 286 1 109 1 288 2 238 1 119 4 23 2 325 1 78 1 213 3 303 2 
144 2 167 1 208 1 220 1 199 6 250 1 277 3 286 1 238 1 119 3 325 1 78 1 81 1 213 2 
144 1 99 2 183 1 199 4 277 2 286 1 288 1 109 1 238 1 119 2 23 1 240 1 213 2 303 1 367 1 42 1 72 1 
144 1 280 2 199 7 338 1 277 4 286 1 109 1 238 1 119 3 240 1 134 1 213 2 367 1 42 1 262 1 
144 5 99 4 30 2 167 1 220 2 59 1 199 23 277 12 109 4 238 3 325 1 78 2 240 2 303 2 42 2 262 2 280 2 183 2 208 1 338 1 250 1 286 3 288 2 119 11 120 1 23 2 213 9 367 2 98 1 
277 1 280 1 199 1 
119 1 199 1 262 1 
99 2 144 2 183 1 199 6 277 3 286 1 288 1 149 1 109 1 238 1 119 3 23 1 240 1 303 1 213 3 367 1 42 1 72 1 
99 2 144 1 168 1 33 1 199 12 277 6 109 1 238 2 240 2 156 1 134 1 303 1 42 2 262 1 280 1 86 1 183 1 360 1 286 2 288 1 119 6 23 1 71 1 213 2 367 2 
144 1 208 1 220 1 199 6 277 3 286 1 109 1 238 1 119 3 78 1 213 2 
144 1 99 2 30 1 167 1 183 1 220 1 59 1 199 3 277 2 109 1 288 1 119 1 325 1 23 1 78 1 213 2 303 1 
99 2 144 3 183 1 208 1 220 2 199 10 277 5 286 2 288 1 109 2 238 2 119 5 23 1 71 1 78 2 303 1 213 5 164 1 
99 2 183 1 199 2 286 1 288 1 109 1 119 2 71 1 23 1 303 1 213 1 42 1 
144 1 99 2 183 1 199 4 277 2 286 1 288 1 109 1 238 1 119 2 71 1 23 1 240 1 213 2 303 1 367 1 42 1 
99 6 144 1 30 1 183 3 59 1 220 1 199 3 277 2 288 3 109 1 119 1 71 1 23 3 78 1 257 1 303 3 213 2 
99 10 144 7 30 2 167 1 220 3 59 1 199 34 277 18 109 5 323 1 238 5 325 1 78 3 240 3 134 1 257 1 303 5 42 3 262 3 280 4 12 1 183 5 208 2 338 1 250 1 286 5 288 5 119 16 23 5 71 1 213 12 192 1 367 3 72 1 
99 2 144 2 167 1 220 1 199 8 277 4 238 1 325 1 78 1 156 1 134 1 303 1 262 1 280 1 183 1 208 1 250 1 286 1 288 1 119 4 23 1 71 1 213 2 
144 2 99 4 167 1 220 1 199 11 277 5 109 1 238 1 325 1 78 1 156 1 134 1 303 2 42 1 262 1 280 2 183 2 208 1 338 1 250 1 286 2 288 2 119 6 71 1 23 2 213 3 367 1 72 1 
99 6 144 3 30 1 167 1 168 1 33 1 220 1 199 19 277 10 109 1 238 3 325 1 78 1 240 2 156 1 134 1 303 3 42 2 262 1 280 1 86 1 183 3 208 1 360 1 250 1 286 3 288 3 119 9 23 3 71 1 213 4 367 2 72 1 
99 6 144 3 30 1 167 1 168 1 33 1 220 1 199 17 277 7 109 2 238 2 325 1 78 1 240 1 156 1 134 1 303 3 42 2 262 1 280 1 86 1 183 3 208 1 360 1 250 1 286 3 288 3 119 10 23 3 71 1 213 5 367 2 72 1 
99 2 144 2 167 1 220 1 199 8 277 4 238 1 325 1 78 1 156 1 134 1 303 1 262 1 280 1 183 1 208 1 250 1 286 1 288 1 119 4 23 1 71 1 213 2 
99 2 144 1 168 1 33 1 199 12 277 6 109 1 238 2 240 2 156 1 134 1 303 1 42 2 262 1 280 1 86 1 183 1 360 1 286 2 288 1 119 6 23 1 71 1 213 2 367 2 
99 8 144 3 30 2 167 1 168 1 33 1 220 1 199 18 277 8 109 2 238 2 325 1 78 1 240 1 156 1 134 1 303 4 42 2 262 1 280 1 86 1 183 4 208 1 360 1 250 1 286 3 288 4 119 10 23 4 71 1 213 5 367 2 72 1 
99 8 144 3 30 2 168 1 33 1 199 16 277 7 109 3 238 2 240 2 156 1 134 1 303 4 257 1 42 3 262 1 280 1 86 1 183 4 360 1 286 3 288 4 119 9 71 1 23 4 213 6 367 3 
144 3 167 1 208 1 220 3 199 7 277 4 286 1 109 3 238 1 119 3 325 2 78 3 213 6 
99 8 144 3 30 2 167 1 168 1 33 1 220 1 199 18 277 8 109 1 238 2 325 1 78 1 240 1 156 1 134 1 303 4 257 1 42 2 262 1 280 1 86 1 183 4 208 1 360 1 250 1 286 3 288 4 119 10 71 1 23 4 213 4 367 2 
7 1 301 1 270 1 
7 1 54 1 301 1 270 1 191 1 177 1 52 1 179 1 
362 1 70 1 91 1 217 1 48 1 139 1 302 1 81 1 313 1 221 1 339 1 
180 1 217 1 139 1 73 1 14 1 67 2 352 1 313 1 221 1 200 1 362 1 91 1 22 1 202 1 162 2 48 1 50 1 302 1 
180 1 217 1 139 2 73 1 166 1 14 2 67 2 269 1 352 2 313 1 221 1 200 2 362 3 22 1 202 1 152 1 162 2 48 1 50 1 190 1 302 1 356 1 206 1 
217 1 73 1 166 1 352 2 221 2 200 2 6 1 202 1 152 1 175 1 302 1 356 1 206 1 180 1 139 2 14 2 67 2 269 1 313 2 362 3 22 1 48 2 162 2 190 1 
2 1 128 1 217 1 102 1 195 1 221 3 6 1 152 1 302 1 258 1 356 1 85 1 139 1 14 1 268 2 227 1 313 3 362 4 91 1 48 3 190 1 212 2 230 1 
85 1 2 1 217 1 139 1 232 1 14 1 268 1 313 1 221 1 362 4 152 1 48 1 190 1 212 1 302 1 356 1 
315 1 217 1 48 1 302 1 313 1 221 1 
315 1 295 1 217 3 139 2 267 1 14 1 169 1 235 1 299 1 15 1 358 1 313 7 221 6 131 1 362 3 91 2 48 7 49 1 302 2 113 1 369 1 
99 4 144 2 3 1 199 6 200 1 277 3 202 1 238 1 325 1 112 2 65 2 14 1 67 2 208 1 250 1 286 1 19 1 288 2 22 1 162 2 119 3 122 1 23 2 289 1 213 2 254 1 217 1 73 1 297 1 167 1 352 1 220 1 221 1 222 1 78 1 302 1 303 2 180 2 266 1 139 1 267 1 310 1 183 2 313 1 362 1 48 1 50 1 
2 1 85 1 232 1 268 1 247 1 313 1 16 1 319 1 221 1 362 2 91 1 151 1 342 1 48 1 176 1 212 1 9 1 344 1 27 1 
315 1 2 1 349 1 217 2 139 1 267 1 14 1 313 2 221 2 131 1 362 2 48 2 302 1 
217 1 139 1 267 1 313 4 221 4 339 1 6 1 70 1 362 1 91 1 48 4 94 1 302 1 
217 2 139 1 14 1 105 1 115 1 358 1 313 2 221 2 362 1 152 1 48 2 161 1 302 1 369 1 
91 1 146 1 217 1 48 1 233 1 241 1 302 1 313 1 107 1 221 1 
362 1 271 1 217 1 48 2 139 1 49 1 267 1 169 1 302 1 313 2 221 2 
217 2 139 2 267 1 169 1 15 1 299 1 313 5 221 4 339 1 70 1 362 3 91 1 152 1 48 5 94 1 302 2 
217 2 139 2 267 1 169 1 299 1 313 5 221 4 339 1 70 1 362 3 91 1 152 1 48 5 94 1 302 2 292 1 
180 1 217 1 139 1 73 1 14 1 67 2 352 1 313 1 221 1 200 1 362 1 91 1 22 1 202 1 162 2 48 1 175 1 302 1 
295 1 217 2 139 1 14 1 358 1 313 1 221 1 131 1 362 1 152 1 48 1 302 1 369 1 
180 1 322 1 25 1 285 1 87 1 
180 1 128 1 102 1 195 1 166 1 268 2 247 1 32 1 269 1 87 1 285 2 336 1 322 2 287 1 37 1 25 2 212 2 304 1 206 1 
305 1 1 1 67 1 87 1 200 1 322 1 142 1 162 1 25 1 
287 1 37 1 87 1 
223 1 216 1 81 1 108 1 
165 1 223 1 216 1 341 1 364 1 34 1 108 1 
165 1 363 1 331 1 
44 1 165 3 0 1 216 1 275 1 34 3 108 1 77 2 223 1 341 1 364 1 193 1 
165 2 223 1 18 1 216 1 341 1 364 1 34 2 276 1 108 1 
44 1 165 1 216 1 265 1 246 1 34 1 107 1 237 1 341 1 364 1 241 1 
165 1 44 1 216 1 341 1 364 1 34 1 108 1 
165 1 44 1 223 1 341 1 364 1 34 1 108 2 
44 1 165 2 216 1 100 1 357 1 34 2 108 1 341 2 364 2 63 1 
44 1 165 3 216 2 265 1 351 1 34 3 108 1 223 1 18 2 341 1 340 1 364 1 365 1 
44 1 165 2 216 1 146 1 34 2 107 1 108 1 237 1 223 1 18 1 341 1 364 1 93 1 111 1 241 2 
44 1 165 4 216 2 265 1 351 1 34 4 106 1 276 1 108 1 223 1 18 2 341 2 364 2 
165 1 44 1 223 1 216 1 341 1 364 1 34 1 108 1 
0 1 165 4 216 3 265 1 275 1 351 1 34 4 108 2 77 1 223 2 18 2 341 1 364 1 327 1 
44 1 165 2 31 1 216 1 245 1 34 2 108 1 354 1 18 1 223 1 341 1 364 1 
44 1 165 3 0 2 216 1 253 1 275 1 34 3 108 1 77 2 223 1 341 1 364 1 
216 2 13 1 228 2 283 1 
165 1 44 1 329 1 341 1 364 1 34 1 
165 2 44 1 223 1 18 1 216 1 340 1 341 1 364 1 34 2 108 1 
334 1 
165 1 44 1 223 1 216 1 341 1 364 1 34 1 108 1 
44 1 165 3 216 1 34 3 108 1 18 1 77 1 223 1 341 1 340 1 364 1 
216 1 265 1 351 1 327 1 
216 1 108 1 

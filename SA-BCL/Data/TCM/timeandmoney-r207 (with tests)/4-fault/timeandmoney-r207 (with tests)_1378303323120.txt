#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 (129,223) (129,223) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 (129,223) (129,223) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 (129,223) (129,223) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 (129,223) (129,223) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 26 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 347 26 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 95 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 38 363 24 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
199 1 3 1 86 2 28 1 331 2 300 3 254 7 361 2 303 1 7 1 146 1 148 3 98 1 210 1 189 2 74 1 191 2 129 1 241 4 347 1 63 7 193 2 165 1 138 2 223 1 
199 1 3 1 86 2 28 1 331 2 300 3 254 7 361 2 303 1 7 1 146 1 148 3 98 1 210 1 189 2 191 2 74 1 129 1 241 4 347 1 63 7 193 2 165 1 138 2 223 1 
199 1 3 1 86 2 28 1 331 2 300 3 254 7 361 2 303 1 7 1 146 1 148 3 98 1 210 1 189 2 191 2 74 1 129 1 241 4 347 1 63 7 193 2 165 1 138 2 223 1 
199 1 3 1 86 2 28 1 331 2 300 3 254 7 361 2 303 1 7 1 146 1 148 3 98 1 210 1 189 2 191 2 74 1 129 1 241 4 347 1 63 7 193 2 165 1 138 2 223 1 
86 1 189 1 289 1 74 1 191 1 331 1 241 3 300 2 254 4 361 1 347 1 63 4 303 1 146 2 148 2 138 1 
188 1 341 1 46 1 86 1 189 1 74 1 254 2 60 1 361 1 63 2 7 1 193 1 351 1 148 1 98 1 138 1 
341 1 63 3 46 1 193 1 189 2 28 1 74 1 148 2 331 1 138 2 241 1 300 1 254 3 
210 1 3 1 86 1 26 1 189 2 289 1 191 1 74 1 28 1 331 3 241 7 300 4 92 1 254 9 361 1 347 1 303 1 63 9 193 1 146 2 148 4 138 2 
210 1 3 1 86 1 26 1 189 2 289 1 191 1 74 1 28 1 331 3 241 7 300 4 92 1 254 9 361 1 347 1 303 1 63 9 193 1 146 2 148 4 138 2 
278 1 197 1 372 1 
22 1 
353 2 205 2 284 2 304 2 335 2 202 1 30 1 91 2 
353 2 23 1 25 1 200 1 170 1 202 1 30 1 174 1 91 2 281 1 230 1 206 1 205 2 231 1 284 3 304 2 335 3 97 1 123 1 9 1 233 2 207 2 336 2 150 1 56 1 35 1 14 1 130 1 159 2 160 1 19 1 136 1 81 1 20 1 113 1 82 2 226 1 
353 1 360 1 205 1 284 1 304 1 335 1 30 1 271 1 196 1 91 1 
166 1 227 1 278 1 155 1 280 1 48 1 372 1 78 1 284 1 304 1 335 1 65 1 376 1 271 1 
166 2 353 1 278 1 155 1 280 1 48 2 91 1 372 1 78 1 205 1 284 1 304 1 335 1 376 1 271 1 
166 1 249 1 116 1 252 1 48 1 
166 2 249 1 116 1 278 1 137 1 48 2 157 1 372 1 
166 1 249 1 48 1 
166 1 353 1 116 1 30 1 48 1 91 1 360 1 205 1 284 1 304 1 335 1 271 1 196 1 10 1 
278 1 
166 2 249 1 116 1 278 1 221 1 48 2 157 1 372 1 
166 5 0 2 249 2 116 2 340 1 36 1 278 1 48 5 76 1 157 1 372 1 323 2 61 1 295 1 364 1 164 1 43 1 66 1 183 2 
202 1 197 1 
353 1 202 2 242 1 91 1 205 1 284 2 304 2 335 2 109 1 
354 1 235 1 132 1 
25 1 170 1 202 1 281 1 230 1 159 1 160 1 231 1 284 1 335 1 233 1 20 1 150 1 297 1 82 1 56 1 
353 1 205 3 284 3 304 3 335 3 202 1 299 1 91 3 
205 1 284 1 304 1 335 1 271 1 196 1 91 1 
353 1 205 1 284 1 304 1 335 1 109 1 271 1 242 1 91 1 
166 1 353 2 23 1 25 1 200 1 170 1 280 1 202 1 30 1 299 1 48 1 174 1 90 1 91 3 281 1 230 1 206 1 205 3 231 1 284 4 304 3 335 4 97 1 9 1 233 1 207 1 336 2 150 1 56 1 35 1 155 1 130 1 78 1 160 1 159 1 218 1 109 1 81 1 20 1 269 1 113 1 376 1 271 1 82 1 
227 1 205 1 284 2 304 2 335 2 202 1 299 1 173 1 91 1 
166 1 353 1 278 1 155 1 280 1 48 1 299 2 91 3 90 1 78 1 205 3 218 1 284 3 304 3 335 3 109 1 271 1 368 1 376 1 
354 1 353 1 299 1 91 2 205 2 284 2 304 2 335 2 109 1 235 1 
25 1 170 1 202 1 281 1 230 1 159 1 160 1 231 1 284 1 335 1 233 1 20 1 150 1 82 1 56 1 
25 1 170 1 202 1 281 1 107 1 230 1 159 1 231 1 284 1 246 1 335 1 233 1 20 1 82 1 56 1 
354 2 23 1 200 1 118 1 356 1 174 1 49 1 283 1 206 1 50 1 147 1 123 2 9 1 336 2 207 4 235 2 237 1 35 1 370 1 103 1 132 2 135 1 64 1 81 2 
125 1 78 1 205 1 284 1 304 1 335 1 271 1 91 1 
25 1 170 1 299 1 91 1 281 1 230 1 160 1 205 1 159 1 231 1 218 1 284 2 304 1 335 2 20 1 233 1 150 1 235 1 82 1 56 1 
227 1 274 1 353 1 202 1 299 2 173 1 91 4 205 4 328 1 284 5 218 1 304 5 335 5 109 1 
125 1 205 2 284 2 304 2 335 2 271 1 196 1 91 2 
87 1 243 1 
87 1 243 1 
4 1 225 1 
4 1 225 1 
4 1 225 1 
245 1 87 1 243 1 
179 1 87 1 243 1 
68 1 80 1 87 2 4 1 225 1 243 2 
245 1 87 1 243 1 
245 1 87 1 243 1 
87 1 149 1 243 1 
87 1 149 1 243 1 
87 1 149 1 243 1 
166 2 45 2 69 1 154 1 278 1 87 2 48 2 290 1 131 2 243 2 143 2 31 1 180 2 80 1 268 1 8 1 366 3 367 1 184 2 
166 1 45 1 127 1 344 1 87 1 202 1 290 1 48 1 133 1 134 1 91 2 243 1 179 1 143 1 205 2 284 2 257 1 180 1 304 2 335 2 18 1 247 1 366 1 184 1 
361 1 86 1 191 1 
60 1 361 1 86 1 
60 1 361 3 94 1 318 1 191 2 83 1 
60 1 361 2 94 1 318 1 191 1 192 1 
60 1 361 2 94 1 318 2 191 1 
0 1 166 5 353 1 249 1 22 4 116 4 169 1 278 3 118 1 30 1 48 5 91 1 93 2 360 1 205 1 284 1 257 1 304 1 335 1 183 1 10 1 34 2 369 1 237 1 343 1 266 2 213 1 346 1 267 1 76 1 322 2 157 1 323 1 372 1 135 1 61 2 64 1 164 3 271 1 196 1 
0 1 166 5 249 3 353 1 22 4 116 4 252 2 278 3 118 1 30 1 48 5 91 1 93 2 360 1 205 1 284 1 257 1 304 1 335 1 55 1 183 1 10 1 12 1 237 1 343 1 266 2 213 1 346 1 267 1 76 1 322 2 157 1 323 1 372 1 135 1 61 2 64 1 349 2 164 3 271 1 196 1 
0 1 166 3 353 1 116 2 22 4 169 1 278 3 118 1 30 1 48 3 91 1 93 2 360 1 205 1 284 1 257 1 304 1 335 1 183 1 10 1 34 1 369 1 237 1 266 2 213 1 267 1 346 1 322 2 372 1 323 1 135 1 61 2 64 1 164 3 66 1 271 1 196 1 
0 1 166 2 22 4 116 1 169 1 278 2 118 1 48 2 93 2 257 1 183 1 34 1 317 1 369 1 237 1 266 2 213 1 267 1 346 1 322 2 323 1 135 1 61 2 64 1 164 3 66 1 
308 1 281 1 197 1 
152 1 281 1 
44 1 
230 1 281 1 
308 2 230 1 6 1 248 1 281 3 56 1 
230 1 281 1 56 1 
281 1 176 1 
370 3 332 1 49 2 120 1 135 1 333 1 145 1 64 1 52 1 182 1 110 2 81 3 123 4 207 7 306 1 151 1 57 1 
370 3 332 1 49 2 120 1 135 1 333 1 145 1 64 1 52 1 182 1 110 2 81 3 123 4 207 7 306 1 151 1 57 1 
370 3 311 1 332 1 49 2 120 1 135 1 333 1 145 1 64 1 52 1 182 1 110 2 81 3 123 4 207 7 306 1 151 1 57 1 
23 1 200 1 118 3 332 4 49 3 120 1 333 1 206 1 95 1 181 1 123 11 336 2 207 22 306 1 57 1 237 3 35 1 265 1 370 7 346 3 37 3 158 1 135 3 106 1 293 1 62 1 294 4 64 3 110 1 81 11 
23 2 35 2 200 2 370 4 251 1 332 1 49 3 120 1 135 1 106 1 333 1 206 2 145 1 64 1 52 1 110 2 296 1 81 4 123 5 207 9 336 4 151 1 306 1 57 1 
198 1 273 1 25 1 46 1 86 1 358 1 254 2 177 1 361 2 231 1 148 1 233 1 11 1 263 1 341 1 264 1 189 1 191 1 74 1 371 1 214 1 241 1 60 1 159 1 63 2 193 1 108 1 138 1 82 1 83 1 
198 1 25 1 46 1 86 1 140 1 358 1 141 1 254 3 177 1 361 2 231 1 259 1 148 1 233 1 11 1 341 1 264 1 189 1 191 1 371 1 214 1 241 2 60 1 159 1 63 3 193 1 108 1 138 1 82 1 83 1 
198 1 25 1 46 1 86 1 140 1 358 1 254 2 361 2 231 1 259 1 148 1 233 1 11 1 341 1 264 1 191 1 214 1 241 2 60 1 159 1 63 2 193 1 108 1 82 1 83 1 
198 2 185 1 84 1 264 2 25 1 189 1 170 1 279 1 228 1 281 1 141 1 358 2 254 1 230 1 159 1 231 1 63 1 193 2 233 1 138 1 222 1 82 1 224 1 
198 1 25 1 86 1 358 1 254 1 177 1 361 2 231 1 259 1 233 1 11 1 263 1 264 1 189 1 191 1 74 1 371 1 214 1 60 1 159 1 63 1 193 1 108 1 138 1 82 1 83 1 
313 1 
0 1 249 2 5 1 48 3 93 1 304 1 335 1 337 1 261 1 155 1 213 1 157 1 61 2 159 2 350 1 164 2 220 1 222 1 65 1 271 1 224 1 166 3 227 1 22 1 25 1 277 1 278 1 170 2 280 1 281 1 357 1 230 1 229 1 231 1 284 1 233 2 183 1 128 1 75 2 38 1 76 1 291 1 39 1 77 1 323 1 78 1 327 1 195 1 82 2 376 1 
166 3 227 1 249 2 67 1 280 1 48 3 357 1 229 1 284 1 304 1 335 1 261 1 155 1 75 2 157 1 78 1 327 1 350 1 221 1 65 1 376 1 271 1 
166 3 249 1 227 1 278 1 280 1 48 3 357 1 229 1 284 1 304 1 335 1 261 1 155 1 75 3 215 1 157 1 372 1 78 1 327 1 350 1 221 1 65 1 376 1 271 1 
166 3 227 1 249 2 67 1 278 1 280 1 48 3 357 1 229 1 284 1 304 1 335 1 51 1 261 1 155 1 75 3 215 1 157 1 372 1 78 1 327 1 350 1 221 1 65 1 376 1 271 1 
0 1 249 7 5 2 48 5 93 2 304 1 51 4 335 1 337 2 261 1 339 1 155 1 215 4 157 3 61 1 350 1 164 1 221 1 65 1 271 1 166 5 227 1 67 4 278 5 280 1 121 1 357 1 229 1 284 1 363 1 183 1 126 2 75 6 76 1 38 1 77 1 291 2 372 5 323 1 78 1 327 1 42 1 376 1 330 1 
0 1 166 2 227 1 22 1 278 1 280 1 5 1 48 2 357 1 93 1 229 1 284 1 304 1 335 1 337 1 261 1 183 1 155 1 128 1 75 2 38 1 76 1 291 1 77 1 323 1 78 1 61 1 327 1 350 1 164 1 65 1 376 1 271 1 
166 4 0 1 249 4 227 1 67 2 278 1 280 1 5 2 48 4 357 1 93 2 229 1 363 1 284 1 304 1 51 2 335 1 337 2 261 1 183 1 339 1 126 2 155 1 215 2 75 4 38 1 76 1 157 2 291 2 77 1 372 1 323 1 78 1 61 1 327 1 350 1 42 1 164 1 65 1 376 1 271 1 
166 4 0 1 249 4 227 1 67 2 278 1 280 1 5 2 48 4 357 1 93 2 229 1 363 1 284 1 304 1 51 2 335 1 337 2 261 1 183 1 339 1 126 2 155 1 215 2 75 4 38 1 76 1 157 2 291 2 77 1 372 1 323 1 78 1 61 1 327 1 350 1 42 1 164 1 65 1 376 1 271 1 
166 2 0 1 227 1 22 1 24 1 280 1 5 1 48 2 357 1 229 1 363 1 284 1 304 1 335 1 261 1 183 1 13 1 342 1 155 1 75 2 38 1 76 1 291 1 323 1 373 1 78 1 61 1 327 1 350 1 164 1 65 1 376 1 271 1 
0 1 166 4 227 1 249 5 67 3 278 1 280 1 5 2 48 4 121 1 357 1 93 2 229 1 363 1 284 1 304 1 335 1 51 3 337 2 183 1 261 1 339 1 126 2 155 1 75 5 215 3 38 1 76 1 157 2 291 2 77 1 372 1 323 1 78 1 61 1 327 1 42 1 350 1 164 1 65 1 376 1 271 1 
0 1 166 4 227 1 249 5 67 3 278 1 280 1 5 2 48 4 121 1 357 1 93 2 229 1 363 1 284 1 304 1 335 1 51 3 337 2 183 1 261 1 339 1 126 2 155 1 75 5 215 3 38 1 76 1 157 2 291 2 77 1 372 1 323 1 78 1 61 1 327 1 42 1 350 1 164 1 65 1 376 1 271 1 
0 1 249 4 5 2 48 4 304 1 335 1 51 2 261 1 342 2 155 1 215 2 157 2 61 1 350 1 164 1 65 1 271 1 166 4 227 1 22 2 67 2 278 1 280 1 357 1 229 1 284 1 286 2 183 1 128 1 75 4 76 1 38 1 291 2 323 1 372 1 373 1 78 1 327 1 376 1 
354 1 23 1 35 1 200 1 370 2 103 1 202 2 132 1 49 2 174 1 135 1 333 1 206 1 145 1 64 1 52 1 110 1 81 3 123 3 9 1 207 6 336 2 235 1 197 1 151 1 57 1 
354 4 23 2 167 1 200 2 47 1 118 2 202 1 332 1 49 1 174 1 206 2 97 1 9 2 123 8 336 4 207 14 235 11 236 1 100 1 237 1 35 2 265 1 310 1 370 2 14 1 346 2 37 3 132 11 158 1 135 2 294 3 64 1 81 6 
354 1 23 1 25 1 200 1 170 1 202 1 299 1 174 1 91 1 281 1 70 1 230 1 205 1 206 1 231 1 284 2 258 1 304 1 335 2 97 1 233 1 9 1 123 1 150 1 336 2 207 2 56 1 35 1 310 1 14 1 160 1 159 1 218 1 163 1 20 1 81 1 82 1 297 1 
200 3 202 2 299 1 49 4 332 4 91 1 333 1 206 3 205 1 145 1 259 1 304 1 52 1 335 3 97 1 9 3 336 6 207 20 150 2 151 1 56 2 57 1 310 1 14 1 346 2 59 1 159 3 160 2 161 1 218 1 64 3 110 1 20 2 354 7 23 3 25 2 27 2 170 1 118 2 174 3 281 2 230 2 231 2 284 3 285 2 233 3 123 10 235 7 237 2 35 3 370 8 130 2 132 7 326 1 135 3 79 2 81 10 82 3 377 2 
273 1 23 2 355 1 25 2 168 1 200 2 201 1 170 2 299 1 174 2 91 1 281 3 230 2 205 1 206 2 231 2 284 1 259 1 304 1 335 1 97 1 233 8 9 2 123 1 336 4 207 2 338 1 35 2 103 1 14 1 292 1 159 7 219 1 136 2 81 1 270 1 222 1 82 8 224 1 
354 1 353 1 23 1 200 1 118 1 49 1 174 1 91 1 206 1 205 1 284 1 304 1 335 1 9 1 123 1 336 2 207 3 235 1 186 1 237 1 35 1 310 1 370 1 346 1 132 1 135 1 64 1 109 1 81 2 
354 1 23 1 35 1 200 1 370 1 103 1 118 1 332 1 132 1 174 1 135 1 206 1 147 1 9 1 123 2 207 2 336 2 235 1 
354 1 23 1 237 1 35 1 200 1 370 1 103 1 49 1 132 1 174 1 206 1 283 1 64 1 9 1 81 2 207 2 336 2 235 1 
354 2 237 1 23 1 35 1 200 1 370 2 103 1 118 1 346 1 49 1 332 1 132 2 174 1 135 1 206 1 64 1 81 2 9 1 123 2 207 4 336 2 235 2 
354 1 23 1 355 1 35 1 200 1 370 1 118 1 332 1 132 1 174 1 135 1 206 1 147 1 9 1 123 2 207 2 336 2 235 1 
354 1 23 1 237 1 355 1 35 1 200 1 370 1 49 1 132 1 174 1 206 1 283 1 64 1 9 1 81 2 207 2 336 2 235 1 
354 2 237 1 23 1 355 1 35 1 200 1 370 2 118 1 346 1 49 1 332 1 132 2 174 1 135 1 206 1 64 1 81 2 9 1 123 2 207 4 336 2 235 2 
354 2 237 1 23 1 35 1 200 1 370 2 118 1 346 1 49 1 332 1 132 2 174 1 135 1 206 1 64 1 81 2 9 1 123 2 336 2 207 4 235 2 
23 1 25 1 200 1 170 1 202 1 174 1 281 1 230 1 206 1 231 1 284 1 335 1 97 1 123 1 233 1 9 1 207 2 150 1 336 2 56 1 35 1 14 1 130 1 160 1 159 1 20 1 81 1 82 1 
23 1 25 1 200 1 170 1 202 1 174 1 281 1 230 1 206 1 231 1 284 1 335 1 97 1 123 1 233 1 9 1 207 2 336 2 99 1 56 1 35 1 14 1 107 1 159 1 246 1 20 1 81 1 82 1 
354 2 237 1 23 1 35 1 310 1 200 1 370 2 118 1 346 1 49 1 332 1 132 2 174 1 135 1 206 1 64 1 81 2 9 1 123 2 207 4 336 2 235 2 
273 1 354 2 23 1 25 1 200 1 118 1 49 1 332 1 174 1 281 1 230 1 206 1 231 1 284 1 335 1 123 2 233 1 9 1 207 4 150 1 336 2 235 2 56 1 237 1 35 1 370 2 130 1 346 1 132 2 135 1 160 1 159 1 64 1 79 1 81 2 20 1 82 1 
353 1 354 1 23 1 200 1 118 1 332 1 174 1 91 1 175 1 206 1 205 1 284 1 304 1 335 1 9 1 123 2 336 2 207 3 235 1 237 1 35 1 310 1 370 1 346 1 132 1 135 1 64 1 109 1 81 1 
275 1 23 3 85 1 139 1 200 3 315 1 118 4 29 1 49 4 332 4 359 1 178 1 333 1 206 3 145 1 52 1 71 2 260 1 123 20 336 6 207 41 151 1 57 1 208 1 237 4 102 1 211 4 35 3 265 3 370 8 190 1 346 4 15 1 37 3 158 1 135 5 106 1 294 4 375 1 64 5 110 1 296 1 81 21 
275 1 23 4 85 1 139 1 200 4 315 1 118 4 29 1 49 4 332 3 359 1 178 1 333 1 206 4 145 1 52 1 71 2 260 1 123 20 336 8 207 38 151 1 57 1 208 1 237 3 102 1 211 4 35 4 265 3 370 7 190 1 346 4 15 1 37 3 158 1 135 5 106 2 294 4 375 1 64 4 110 1 296 1 81 18 
275 1 23 2 85 1 139 1 200 2 315 1 118 7 29 1 49 7 332 7 359 1 333 1 206 2 145 1 52 1 71 1 260 1 123 27 336 4 207 52 236 2 151 1 57 1 208 1 237 7 102 1 211 4 35 2 265 2 370 14 190 1 346 7 15 1 37 4 158 2 135 8 106 1 294 4 64 8 110 1 296 1 81 25 
275 1 23 2 200 2 118 3 29 1 49 3 332 3 359 1 178 1 206 2 362 1 71 1 123 9 336 4 207 19 208 1 237 3 211 2 35 2 265 1 370 6 190 2 346 3 37 1 158 1 135 3 294 2 64 3 296 1 81 10 
275 1 23 3 85 1 139 1 200 3 315 1 118 3 29 1 332 2 49 2 359 2 206 3 71 2 123 14 260 1 336 6 207 26 208 1 237 2 102 1 211 4 35 3 265 2 370 4 190 1 346 3 15 1 37 2 135 3 106 2 294 2 64 2 296 1 81 12 
101 1 45 1 143 1 180 1 80 1 268 1 87 1 367 1 243 1 184 1 
179 1 247 1 
45 1 187 1 143 1 117 1 180 1 88 1 87 1 243 1 184 1 
166 1 45 1 154 1 278 1 87 1 290 1 48 1 131 1 243 1 143 1 31 1 180 1 80 1 268 1 8 1 366 2 367 1 184 1 
166 1 45 1 154 1 278 1 87 1 290 1 48 1 131 1 243 1 143 1 31 1 180 1 80 1 268 1 8 1 366 2 367 1 184 1 
166 1 45 1 154 1 278 1 87 1 290 1 48 1 131 1 243 1 143 1 31 1 180 1 80 1 268 1 8 1 366 2 367 1 184 1 
245 1 68 1 58 1 
245 1 68 1 58 1 
348 1 149 1 
68 1 348 1 149 1 
127 1 18 1 
166 1 45 1 116 1 87 1 202 1 48 1 91 2 143 1 179 1 205 2 284 2 180 1 257 1 304 2 335 2 366 1 184 1 154 1 127 1 344 1 131 1 134 1 133 1 243 1 16 1 247 1 18 1 
245 1 58 1 
68 1 348 1 149 1 
23 1 25 1 200 1 174 1 281 1 230 1 206 1 231 1 284 2 334 1 304 2 335 2 365 1 97 1 233 2 9 1 123 1 336 2 207 2 338 1 309 1 35 1 310 1 14 1 319 1 312 1 159 2 219 1 136 2 81 1 82 2 
273 1 264 1 25 1 86 1 191 1 214 1 60 1 177 1 361 2 159 2 17 1 231 1 259 1 194 1 108 1 233 2 82 2 83 1 272 1 
264 1 25 1 86 1 191 1 214 1 60 1 177 1 361 2 159 1 231 1 259 1 329 1 108 1 233 1 82 1 83 1 272 1 
264 1 25 1 170 1 212 1 279 1 281 1 230 1 159 1 231 1 194 1 233 1 222 1 82 1 224 1 
264 1 25 1 86 1 191 1 214 1 60 1 177 1 361 2 159 1 17 1 231 1 259 1 194 1 108 1 233 1 82 1 83 1 272 1 
321 1 
61 1 36 1 278 1 364 1 164 1 197 1 372 1 
0 1 22 1 278 1 76 1 77 1 323 1 93 1 61 1 164 1 337 1 183 1 
0 3 249 5 2 1 48 5 301 2 93 6 255 2 6 1 56 1 152 3 308 2 155 2 266 6 213 2 346 2 157 3 217 2 159 1 61 7 64 2 164 8 314 1 114 2 166 5 352 2 22 12 25 1 170 1 278 7 118 2 281 6 230 1 231 2 285 2 32 1 233 1 183 3 237 2 239 2 76 3 322 6 39 1 372 1 323 3 135 2 82 1 
166 1 0 2 249 1 22 6 85 1 139 1 315 1 278 5 118 2 89 1 48 1 255 2 93 3 54 1 260 1 183 2 209 1 237 2 102 1 265 1 266 5 213 1 346 2 37 1 76 2 157 1 322 5 39 1 323 2 372 2 135 2 61 5 294 1 64 2 164 8 
0 1 166 1 353 1 30 1 48 1 91 1 255 2 360 1 333 1 205 1 284 1 304 1 335 1 52 1 183 1 10 1 57 1 209 1 238 1 76 1 323 1 135 2 61 2 64 1 42 1 164 2 271 1 196 1 
0 1 36 1 278 1 76 1 323 1 372 1 61 1 364 1 164 1 183 1 
22 4 237 1 266 2 278 2 118 1 346 1 322 2 255 1 93 2 135 1 61 2 64 1 164 2 
166 1 249 1 278 1 48 1 157 1 372 1 
0 2 166 3 249 4 1 1 25 1 170 2 48 3 253 1 281 1 230 1 231 1 287 1 233 4 183 2 213 2 156 2 76 1 157 2 39 2 323 2 159 4 61 2 195 1 164 2 220 1 66 1 222 1 82 4 224 1 
353 2 23 1 25 1 200 1 170 1 202 1 30 1 174 1 91 2 281 1 230 1 206 1 205 2 231 1 284 3 304 2 335 3 97 1 233 1 9 1 207 1 336 2 150 1 56 1 35 1 130 1 159 1 160 1 81 1 20 1 113 1 82 1 
0 1 22 4 266 2 278 4 213 1 76 1 322 2 39 1 93 2 323 1 372 2 61 2 110 1 164 1 183 1 
143 1 122 1 180 1 
143 1 180 1 18 1 367 1 298 1 
143 1 122 1 180 1 
143 1 122 1 180 1 
143 1 180 1 320 1 
143 1 180 1 320 1 
143 1 180 1 320 1 
143 1 180 1 
87 1 243 1 
23 1 85 1 200 1 49 2 206 1 333 1 145 1 52 1 123 4 207 8 336 2 151 1 57 1 35 1 265 1 370 2 37 1 135 1 294 1 64 1 110 1 296 1 81 4 
23 2 85 1 200 2 118 1 49 2 332 1 333 1 206 2 145 1 52 1 123 6 207 11 336 4 151 1 57 1 35 2 265 1 370 3 346 1 37 1 158 1 216 1 135 2 294 2 64 1 110 1 296 1 81 5 
23 3 85 1 139 1 200 3 315 1 118 2 332 1 49 3 333 1 206 3 145 1 52 1 123 9 260 1 207 19 336 6 151 1 57 1 237 2 102 1 35 3 265 1 370 4 346 2 37 1 216 1 135 3 106 1 294 1 64 3 110 1 296 1 81 10 
23 3 85 1 200 3 139 1 315 1 118 2 332 2 49 3 333 1 206 3 145 1 52 1 123 10 260 1 207 17 336 6 151 1 57 1 237 1 102 1 35 3 265 1 370 5 346 2 37 1 216 1 135 3 106 1 294 1 64 2 110 1 296 1 81 7 
23 1 85 1 200 1 49 2 206 1 333 1 145 1 52 1 123 4 207 8 336 2 151 1 57 1 35 1 265 1 370 2 37 1 135 1 294 1 64 1 110 1 296 1 81 4 
23 1 85 1 200 1 139 1 315 1 118 2 332 1 49 1 206 1 123 6 260 1 207 12 336 2 237 2 102 1 35 1 265 1 370 2 346 2 37 1 135 2 294 1 64 2 296 1 81 6 
23 4 85 1 139 1 200 4 315 1 118 2 332 2 49 3 333 1 206 4 145 1 52 1 123 10 260 1 207 18 336 8 151 1 57 1 237 1 102 1 35 4 265 1 370 5 346 2 37 1 216 1 135 3 106 2 294 1 64 2 110 1 296 1 81 8 
23 4 85 1 139 1 200 4 315 1 118 3 332 3 49 3 178 1 206 4 123 9 260 1 207 16 336 8 237 2 102 1 35 4 265 1 370 6 346 3 37 1 135 3 106 2 294 1 64 2 296 1 81 7 
370 6 49 3 332 3 135 1 333 3 145 2 64 1 52 1 81 4 123 3 207 7 151 1 57 3 
23 4 85 1 139 1 200 4 315 1 118 2 332 1 49 3 178 1 333 1 206 4 145 1 52 1 123 10 260 1 207 18 336 8 151 1 57 1 237 1 102 1 35 4 265 1 370 4 346 2 37 1 135 3 106 2 294 1 64 2 110 1 296 1 81 8 
23 2 35 2 200 2 370 3 332 1 49 2 135 1 106 1 206 2 333 1 145 1 64 1 52 1 110 1 81 4 123 4 207 8 336 4 151 1 57 1 
370 2 49 2 135 1 333 1 145 1 64 1 52 1 110 1 81 3 123 3 207 6 197 1 151 1 57 1 
237 1 23 1 35 1 200 1 370 2 118 1 346 1 49 1 332 1 216 1 135 1 206 1 64 1 81 2 123 2 336 2 207 4 
237 1 265 1 370 2 118 1 346 1 37 1 49 1 332 1 158 1 135 1 294 2 64 1 81 4 123 3 207 7 
23 2 200 2 47 1 118 2 332 4 49 5 333 2 206 2 145 1 52 1 123 11 207 23 336 4 236 1 262 1 151 1 57 2 237 2 35 2 370 9 346 2 37 2 158 1 135 3 106 2 294 2 64 3 110 1 81 12 
294 1 81 1 207 1 
123 1 207 1 37 1 
23 1 237 1 35 1 200 1 370 3 118 1 346 1 332 1 49 2 216 1 135 1 206 1 285 1 64 1 81 3 123 3 336 2 207 6 
23 1 85 1 200 1 139 1 315 1 118 2 332 1 49 1 206 1 123 6 260 1 207 12 336 2 237 2 102 1 35 1 265 1 370 2 346 2 37 1 135 2 294 1 64 2 296 1 81 6 
370 2 49 1 332 1 135 1 333 1 64 1 52 1 123 3 81 3 207 6 57 1 
23 1 35 1 200 1 370 2 332 1 49 1 106 1 333 1 206 1 145 1 123 1 81 2 207 3 336 2 262 1 151 1 57 1 
23 1 238 1 35 1 200 1 370 5 49 3 332 2 135 2 206 1 333 2 64 2 52 1 296 1 123 5 81 5 336 2 207 10 57 2 
23 1 35 1 200 1 370 1 118 1 332 1 135 1 206 1 296 1 123 2 336 2 207 2 
237 1 23 1 35 1 200 1 370 2 118 1 346 1 49 1 332 1 135 1 206 1 64 1 296 1 81 2 123 2 336 2 207 4 
23 3 35 3 200 3 370 2 49 1 332 1 106 1 178 1 206 3 333 1 296 1 81 2 123 1 207 3 336 6 262 1 57 1 
23 5 200 5 118 3 332 5 49 7 178 1 333 3 206 5 145 1 181 1 52 2 123 16 336 10 207 34 262 1 151 1 57 3 237 3 35 5 265 1 370 12 346 3 37 3 158 1 216 1 135 5 106 2 62 1 293 1 294 4 64 5 110 1 296 1 81 18 
227 1 153 1 284 1 304 1 335 1 202 1 173 1 
227 1 153 1 345 1 202 1 119 1 204 1 173 1 282 1 284 1 304 1 335 1 307 1 
230 1 159 1 231 1 25 1 170 1 233 1 222 1 82 1 281 1 224 1 197 1 
25 1 170 1 202 1 299 1 91 1 281 1 230 1 205 1 159 1 160 1 231 1 284 2 304 1 335 2 20 1 233 1 82 1 56 1 
25 1 202 1 299 1 91 1 281 3 176 1 230 2 205 2 231 1 284 2 304 2 335 2 233 1 56 2 156 1 325 1 78 1 160 1 159 1 20 1 82 1 376 1 271 1 
250 1 25 1 202 1 299 1 91 1 281 3 176 1 230 2 205 2 231 1 284 2 304 2 335 2 233 2 56 2 156 1 325 1 78 1 159 2 246 1 20 1 82 2 376 1 271 1 
166 2 152 1 249 1 308 1 73 1 250 1 25 1 170 1 278 1 155 1 156 1 48 2 281 4 372 1 176 1 325 1 230 1 159 3 231 1 233 3 305 1 82 3 56 1 
166 2 152 1 249 1 308 1 250 1 25 1 170 1 278 1 155 1 239 1 156 1 48 2 281 4 372 1 176 1 325 1 230 1 159 3 231 1 233 3 82 3 56 1 
292 1 159 1 231 1 25 1 233 1 82 1 
273 1 25 2 168 1 316 1 201 1 170 2 281 3 292 1 40 1 230 2 159 6 6 1 231 3 219 1 259 1 136 1 233 7 53 1 270 1 82 7 56 1 
273 1 354 1 23 2 25 1 200 2 27 1 202 2 299 1 49 2 174 2 91 1 281 1 230 1 333 1 205 1 206 2 231 1 145 1 284 2 334 1 304 1 52 1 335 2 123 3 9 2 233 1 207 6 336 4 150 1 235 1 151 1 56 1 57 1 35 2 310 1 370 2 130 1 132 1 135 1 159 1 160 1 64 1 79 1 110 1 81 3 20 1 82 1 
0 2 166 3 352 1 249 2 1 1 116 1 278 1 170 1 48 3 301 1 281 2 364 1 233 1 183 2 152 1 308 1 36 1 155 1 239 1 76 2 157 1 372 1 323 2 61 1 159 1 217 1 164 1 82 1 
273 1 308 1 25 1 281 2 292 1 230 1 159 2 6 1 231 2 233 2 82 2 314 1 56 1 
273 1 250 1 25 1 170 1 142 1 281 1 230 1 159 4 231 1 233 4 222 1 82 4 224 1 
25 1 156 1 203 1 281 1 324 1 40 1 326 1 230 1 159 2 231 2 233 2 53 1 82 2 56 1 
60 1 361 1 159 1 231 1 25 1 86 1 170 1 108 1 233 1 82 1 
273 1 25 1 319 1 281 1 230 1 159 2 231 1 219 1 259 1 233 2 82 2 
273 1 25 2 168 1 170 1 156 1 142 1 281 3 230 2 159 4 231 2 219 1 233 5 222 1 270 1 82 5 224 1 
273 1 276 1 25 2 170 1 156 1 142 1 281 3 230 2 159 4 231 2 219 1 233 5 222 1 270 1 82 5 224 1 
25 1 170 1 202 1 299 1 91 1 281 1 230 1 205 1 159 1 231 1 284 2 246 1 304 1 335 2 20 1 233 1 82 1 56 1 
25 1 316 1 156 1 281 1 40 1 230 1 159 1 6 1 231 2 233 1 53 1 82 1 56 1 
309 1 312 1 244 1 284 1 304 1 335 1 365 1 288 1 234 1 
162 1 288 1 105 1 
244 1 202 1 172 1 288 1 234 1 
166 2 116 1 278 1 155 1 280 1 202 1 240 1 172 2 48 2 105 1 90 1 372 1 244 2 78 1 162 1 288 1 234 2 271 1 376 1 
341 1 46 1 148 1 197 1 
341 1 63 1 46 1 189 1 148 1 138 1 254 1 
198 1 63 1 193 1 
341 1 46 1 189 1 171 1 74 1 254 3 63 3 96 1 148 1 98 2 138 1 21 1 
341 1 63 2 46 1 189 1 146 1 148 1 138 1 241 1 254 2 
361 1 303 1 63 1 86 1 189 1 191 1 74 1 148 1 138 1 300 1 254 1 
341 1 63 1 189 1 74 1 148 1 138 1 254 1 
341 2 63 1 46 1 189 1 74 1 138 1 254 1 
115 1 341 1 189 2 74 1 254 2 144 1 374 1 63 2 148 1 138 2 
210 1 341 1 3 1 46 1 189 1 74 1 331 1 241 2 300 1 254 3 63 3 148 2 138 1 
341 1 46 1 86 1 189 1 74 1 191 1 241 1 254 2 60 1 361 2 256 1 63 2 148 1 138 1 83 1 
341 1 63 4 46 1 189 2 289 1 146 1 74 1 148 2 331 1 138 2 300 1 241 2 254 4 
341 1 63 1 46 1 189 1 74 1 148 1 138 1 254 1 
341 2 46 2 189 1 331 1 241 2 300 1 254 4 63 4 96 1 111 1 148 3 98 1 138 1 21 1 
341 1 63 2 46 1 41 1 189 1 232 1 74 1 148 1 138 1 241 1 92 1 254 2 
341 1 63 3 46 1 189 1 96 2 104 1 74 1 148 1 98 2 138 1 21 1 254 3 
302 1 148 2 33 1 124 2 
63 1 189 1 74 1 112 1 138 1 254 1 
341 1 3 1 63 2 46 1 189 1 74 1 148 1 138 1 241 1 254 2 
72 1 
341 1 63 1 46 1 189 1 74 1 148 1 138 1 254 1 
3 1 341 1 63 3 46 1 189 1 74 1 148 1 98 1 138 1 241 1 254 3 
111 1 148 1 331 1 300 1 
341 1 148 1 

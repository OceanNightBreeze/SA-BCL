#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 1 242 1 133 5 200 9 75 4 181 9 76 2 228 1 49 2 301 1 160 2 140 3 13 2 82 2 284 1 84 2 208 1 54 1 254 1 150 1 193 1 59 1 263 6 217 2 195 1 41 1 357 1 272 1 
223 1 242 1 133 5 200 9 75 4 181 9 76 2 228 1 49 2 301 1 160 2 140 3 13 2 82 2 284 1 84 2 208 1 54 1 254 1 150 1 193 1 59 1 263 6 217 2 195 1 41 1 357 1 272 1 
223 1 242 1 133 6 200 10 75 5 181 10 76 2 228 1 49 2 301 1 160 2 140 4 13 2 82 2 284 1 84 2 208 1 54 1 254 1 150 1 193 1 59 1 263 7 217 2 195 1 41 1 357 1 272 1 
223 1 242 1 133 4 200 7 75 3 181 7 76 2 228 1 49 2 301 1 160 2 140 2 13 2 82 2 284 1 84 2 208 1 54 1 254 1 150 1 193 1 59 1 263 4 217 1 195 1 357 1 272 1 
223 1 133 3 200 4 75 2 76 1 181 4 193 1 59 1 263 3 49 1 160 1 217 2 195 1 140 1 82 1 41 1 84 1 272 1 
133 1 200 2 76 1 181 2 193 1 59 1 108 1 157 1 160 1 322 1 13 1 82 1 84 1 54 1 254 1 272 1 
242 1 133 2 200 3 75 1 76 2 181 3 193 1 59 1 263 1 140 1 13 1 82 2 272 1 
223 1 257 1 242 1 133 5 200 9 75 4 76 2 181 9 193 1 59 1 263 7 227 1 49 1 301 1 160 1 217 2 195 1 140 3 13 1 284 1 82 2 41 1 84 1 272 1 
223 1 257 1 242 1 133 5 200 9 75 4 76 2 181 9 193 1 59 1 263 7 227 1 49 1 301 1 160 1 217 2 195 1 140 3 13 1 284 1 82 2 41 1 84 1 272 1 
248 1 277 1 109 1 
299 1 207 2 109 1 
317 2 360 2 69 1 18 2 40 2 274 1 232 2 291 2 
339 1 317 3 199 1 360 2 131 1 241 1 319 1 69 1 70 1 274 1 276 1 106 1 203 1 243 2 366 1 247 1 141 1 143 1 55 1 232 2 119 1 234 1 352 1 376 1 165 1 261 1 37 2 291 2 171 1 88 2 90 2 16 1 174 1 18 3 40 2 295 1 21 2 
279 1 317 1 360 1 186 1 18 1 40 1 274 1 310 1 232 1 291 1 
198 1 317 2 360 1 274 1 109 1 344 1 279 1 186 2 348 1 53 1 248 1 372 1 232 2 164 1 58 1 354 1 310 1 291 1 293 1 18 2 40 1 
198 1 317 2 360 2 274 1 109 1 344 1 279 1 186 2 53 1 248 1 372 2 232 2 164 2 58 1 310 1 291 2 293 1 18 2 40 2 
368 1 340 1 35 1 372 1 164 1 
68 1 132 1 340 1 248 1 35 1 372 2 109 1 164 2 
35 1 372 1 164 1 
198 1 317 1 360 1 274 1 340 1 310 1 291 1 279 1 186 1 40 1 18 1 372 1 232 1 164 1 
109 1 
68 1 340 1 248 1 35 1 372 2 109 1 169 1 164 2 
68 1 361 1 340 2 73 2 35 2 182 1 377 1 309 2 109 1 214 1 77 1 206 1 172 2 248 1 196 1 20 1 372 5 315 1 164 5 
69 1 277 1 
317 2 360 1 69 2 71 1 28 1 291 1 18 2 40 1 232 2 
298 1 204 1 359 1 
339 1 317 1 199 1 131 1 352 1 319 1 69 1 203 1 243 1 165 1 261 1 88 1 18 1 266 1 21 1 143 1 
339 1 273 1 199 1 317 2 360 1 131 1 352 1 319 1 203 1 165 1 243 1 261 1 88 1 40 1 18 2 143 1 21 1 144 1 232 1 359 1 
317 3 360 3 69 1 18 3 40 3 144 1 232 3 291 1 
317 1 360 1 186 1 18 1 40 1 310 1 232 1 
317 1 360 1 186 1 18 1 40 1 71 1 28 1 232 1 291 1 
339 1 199 1 241 1 47 1 203 1 106 1 243 1 344 1 53 1 164 1 119 1 256 1 352 1 165 1 58 1 261 1 171 1 18 4 21 1 358 1 273 1 317 4 360 3 131 1 319 1 70 1 69 1 274 1 276 1 28 1 366 1 186 2 141 1 372 1 143 1 144 1 232 3 234 1 376 1 37 1 291 2 88 1 293 1 90 2 40 3 
317 2 360 1 313 1 69 1 18 2 40 1 348 1 144 1 232 2 
273 1 317 3 360 3 47 1 58 1 28 1 109 1 291 1 344 1 311 1 293 1 186 1 40 3 18 3 53 1 372 1 144 2 232 3 164 1 
317 2 360 2 204 1 28 1 291 1 40 2 18 2 144 1 232 2 359 1 
339 1 317 1 199 1 131 1 319 1 352 1 69 1 203 1 243 1 165 1 261 1 88 1 18 1 21 1 143 1 
317 1 327 1 199 1 319 1 352 1 69 1 203 1 243 1 165 1 261 1 88 1 186 1 18 1 370 1 21 1 143 1 358 1 
197 1 241 1 298 2 362 1 26 1 0 1 106 1 204 2 321 1 117 1 141 1 142 1 119 1 234 1 376 1 37 4 171 2 90 2 97 1 295 2 239 1 99 1 240 1 359 2 
293 1 317 1 360 1 186 1 18 1 40 1 161 1 232 1 
273 1 331 1 317 5 360 4 313 1 69 1 18 5 40 4 320 1 348 1 28 1 144 2 232 5 291 1 
317 2 360 2 186 1 18 2 40 2 161 1 310 1 232 2 
60 1 188 1 
60 1 188 1 
48 1 292 1 
48 1 292 1 
48 1 292 1 
363 1 60 1 188 1 
96 1 60 1 188 1 
63 1 65 1 48 1 60 2 292 1 188 2 
363 1 60 1 188 1 
363 1 60 1 188 1 
180 1 60 1 188 1 
180 1 60 1 188 1 
180 1 60 1 188 1 
233 1 306 2 120 3 184 1 109 1 278 1 215 2 60 2 6 2 52 2 65 1 349 1 337 1 85 1 372 2 43 1 338 2 188 2 164 2 
317 2 360 2 69 1 278 1 6 1 80 1 185 1 231 1 372 1 232 2 188 1 164 1 306 1 120 1 289 1 215 1 60 1 216 1 312 1 92 1 40 2 18 2 96 1 338 1 
49 1 160 1 84 1 
160 1 322 1 84 1 
49 2 322 1 202 1 212 1 84 3 210 1 
49 1 288 1 322 1 202 1 212 1 84 2 
49 1 322 1 202 2 212 1 84 2 
197 1 68 1 72 1 26 1 299 1 340 4 73 1 182 2 321 1 109 2 8 1 206 3 12 1 248 1 207 3 117 1 372 5 211 1 164 5 151 1 289 1 33 2 35 1 309 1 330 2 312 1 172 1 92 1 238 1 267 2 20 1 296 1 
197 3 68 1 72 2 27 1 26 3 299 3 340 7 73 2 182 6 321 3 109 5 77 1 8 1 368 5 206 8 12 2 323 1 248 1 207 9 117 3 14 1 372 9 211 3 164 9 289 4 166 1 35 6 192 1 309 2 378 5 330 6 172 2 314 1 267 6 20 1 
197 1 72 1 26 1 299 2 340 2 73 1 321 1 182 2 109 3 77 1 206 3 12 1 248 1 207 4 117 1 372 3 164 3 211 1 151 1 289 1 33 1 309 1 330 2 172 1 267 2 296 1 
197 2 72 1 27 1 26 2 299 3 340 3 73 1 321 2 182 4 109 4 77 1 206 5 12 1 248 1 207 7 117 2 14 1 372 4 164 4 211 2 151 1 289 2 33 2 192 1 309 1 330 4 172 1 267 4 296 1 
352 1 335 1 277 1 
352 1 29 1 
101 1 
352 1 143 1 
352 3 94 1 335 2 364 1 261 1 143 1 
352 1 261 1 143 1 
189 1 352 1 
105 1 362 2 26 2 117 2 142 3 287 1 31 1 375 1 149 1 290 1 36 1 37 9 153 1 171 4 123 1 295 5 380 1 22 1 
105 1 362 2 26 2 117 2 142 4 287 1 31 1 375 1 149 2 290 1 36 1 37 9 153 1 171 4 123 1 295 5 380 1 22 1 
24 1 105 1 362 2 26 2 117 2 142 3 287 1 31 1 149 1 375 1 290 1 36 1 37 9 153 1 171 4 123 1 295 5 380 1 22 1 
197 3 241 1 25 1 105 1 362 5 106 1 26 5 321 3 159 1 303 1 283 4 117 5 142 11 211 3 287 1 234 1 31 1 375 2 149 6 376 1 290 2 36 2 37 33 170 3 153 2 171 16 90 2 173 1 265 1 123 1 295 17 219 1 125 1 380 1 22 2 
241 2 362 3 26 2 106 2 300 1 117 2 371 1 142 5 287 1 234 2 31 1 375 1 149 2 376 2 290 1 36 1 37 11 153 1 171 5 90 4 265 1 123 1 295 6 380 1 22 1 
133 1 200 2 203 1 243 1 181 2 76 1 158 1 78 1 137 1 138 1 49 1 160 1 322 1 13 1 82 1 84 2 252 1 210 1 328 1 165 1 193 1 59 1 263 1 88 1 38 1 17 1 95 1 334 1 21 1 272 1 
130 1 133 1 200 3 203 1 243 1 181 3 76 1 158 1 78 1 137 1 138 1 49 1 160 1 322 1 13 1 82 1 84 2 210 1 328 1 353 1 165 1 193 1 59 1 263 2 88 1 38 1 95 1 334 1 176 1 21 1 
133 1 200 2 203 1 243 1 181 2 158 1 78 1 137 1 138 1 49 1 160 1 322 1 13 1 84 2 210 1 328 1 353 1 165 1 193 1 59 1 263 2 88 1 334 1 176 1 21 1 
146 1 328 2 130 1 45 1 352 1 319 1 200 1 203 1 165 1 243 1 76 1 181 1 88 1 138 2 113 1 13 2 334 2 51 1 336 1 82 1 143 1 21 1 86 1 
200 1 203 1 243 1 181 1 76 1 158 1 78 1 137 1 138 1 49 1 160 1 322 1 13 1 82 1 84 2 252 1 210 1 328 1 165 1 88 1 38 1 95 1 334 1 176 1 21 1 272 1 
374 1 
44 2 299 2 203 1 2 2 243 2 107 1 109 4 244 1 344 1 11 1 206 2 113 1 12 1 348 1 51 1 53 1 248 3 207 2 249 2 164 5 352 1 307 1 165 1 262 1 58 1 309 1 354 1 168 1 122 2 172 1 18 1 20 1 21 2 270 2 68 3 317 1 319 2 73 1 182 2 135 1 365 2 229 2 281 1 81 1 186 1 143 1 372 5 232 1 148 1 35 6 88 2 293 1 39 1 42 4 102 1 
68 1 317 1 109 2 244 1 344 1 186 1 348 1 53 1 248 2 372 3 232 1 164 3 148 1 35 2 262 1 58 1 354 1 168 1 169 1 293 1 122 1 18 1 42 2 102 1 
317 1 148 1 2 1 58 1 262 1 354 1 109 2 168 1 244 1 344 1 293 1 186 1 18 1 348 1 248 2 53 1 42 3 372 2 232 1 102 1 164 2 
68 1 317 1 2 1 109 3 365 1 244 1 344 1 186 1 348 1 53 1 248 3 372 3 232 1 164 3 148 1 35 2 262 1 58 1 354 1 168 1 169 1 293 1 122 1 18 1 42 3 102 1 
44 2 198 1 299 2 2 3 4 1 109 4 244 1 344 1 206 1 348 1 248 4 53 1 249 2 118 1 164 5 307 1 58 1 262 1 354 1 309 1 310 1 168 1 169 1 122 4 172 1 18 2 20 1 220 1 270 2 222 1 317 2 68 3 360 1 274 1 73 1 182 1 365 4 279 1 229 2 186 2 81 1 372 5 325 1 232 2 148 1 35 7 291 1 293 1 40 1 42 5 102 1 
44 2 299 2 2 2 109 4 244 1 344 1 206 1 348 1 248 3 53 1 249 2 207 2 164 4 307 1 58 1 262 1 309 1 354 1 168 1 122 2 172 1 18 1 20 1 270 2 317 1 68 2 73 1 182 1 365 2 229 2 186 1 81 1 281 1 372 4 232 1 148 1 35 4 293 1 42 4 102 1 
44 2 68 2 317 1 299 2 2 2 73 1 182 1 365 2 109 3 244 1 344 1 229 2 206 1 81 1 186 1 348 1 53 1 248 3 249 2 372 4 118 1 232 1 164 4 148 1 307 1 35 4 262 1 58 1 309 1 354 1 168 1 122 2 293 1 172 1 18 1 42 4 20 1 220 1 270 2 222 1 102 1 
44 2 68 2 317 1 299 2 2 2 73 1 182 1 365 2 109 3 244 1 344 1 229 2 206 1 81 1 186 1 348 1 53 1 248 3 249 2 372 4 118 1 232 1 164 4 148 1 307 1 35 4 262 1 58 1 309 1 354 1 168 1 122 2 293 1 172 1 18 1 42 4 20 1 220 1 270 2 222 1 102 1 
68 2 317 1 2 2 73 1 182 1 3 1 365 2 109 3 244 1 344 1 229 2 139 1 206 1 81 1 186 1 348 1 53 1 248 3 207 2 249 2 372 4 232 1 164 4 56 2 148 1 35 4 262 1 58 1 309 1 354 1 168 1 194 2 122 2 293 1 172 1 18 1 124 1 42 4 20 1 222 1 102 1 
44 2 68 2 317 1 299 2 73 1 2 3 182 1 109 3 365 3 244 1 344 1 229 2 206 1 81 1 186 1 348 1 53 1 248 3 249 2 118 1 372 4 325 1 232 1 164 4 148 1 307 1 35 5 262 1 58 1 309 1 354 1 168 1 293 1 122 3 172 1 18 1 20 1 42 5 220 1 270 2 222 1 102 1 
44 2 68 2 317 1 299 2 73 1 2 3 182 1 109 3 365 3 244 1 344 1 229 2 206 1 81 1 186 1 348 1 53 1 248 3 249 2 118 1 372 4 325 1 232 1 164 4 148 1 307 1 35 5 262 1 58 1 309 1 354 1 168 1 293 1 122 3 172 1 18 1 20 1 42 5 220 1 270 2 222 1 102 1 
2 2 109 3 244 1 344 1 206 1 348 1 248 3 53 1 249 2 207 2 164 4 56 2 58 1 262 1 309 1 354 1 168 1 122 2 172 1 18 1 124 1 20 1 317 1 68 2 73 1 182 1 365 2 229 2 186 1 81 1 281 1 372 4 232 1 148 1 35 4 194 2 293 1 42 4 102 1 
90 2 234 1 31 1 241 1 106 1 376 1 277 1 239 1 141 1 380 1 119 1 
197 1 241 2 25 1 69 1 70 1 298 11 362 1 106 2 26 1 321 2 204 4 343 1 283 3 141 1 117 2 142 2 209 1 55 1 119 2 211 2 234 2 329 1 149 1 376 2 37 14 170 3 294 1 171 6 90 4 91 1 173 1 295 8 359 11 
339 1 273 1 199 1 317 2 131 1 360 1 319 1 241 1 69 1 70 1 203 1 106 1 243 1 204 1 343 1 141 1 143 1 144 1 55 1 232 1 119 1 234 1 352 1 190 1 376 1 165 1 261 1 237 1 37 2 88 1 171 1 90 2 18 2 40 1 266 1 295 1 268 1 21 1 
339 2 197 2 199 2 241 3 298 6 106 3 203 2 243 1 204 6 343 1 117 4 55 1 119 3 211 2 352 2 165 2 261 2 213 1 171 11 18 3 123 1 21 1 358 1 359 6 273 1 317 3 360 1 131 2 319 1 69 1 70 1 362 4 26 4 321 2 366 2 186 1 141 3 142 5 143 2 144 1 326 1 232 1 373 2 287 1 234 3 31 1 149 1 376 3 290 1 36 1 236 2 37 22 88 1 90 6 89 2 40 1 93 2 295 11 380 1 
104 1 317 1 360 1 319 2 241 2 70 1 203 2 106 2 243 8 113 1 304 1 51 1 251 1 141 2 143 2 253 1 144 1 55 1 232 1 119 2 234 2 352 3 376 2 165 2 121 1 37 2 88 8 171 1 90 4 16 2 17 1 333 1 18 1 40 1 176 1 239 1 295 1 21 7 381 1 
197 1 317 1 360 1 241 1 298 1 362 1 106 1 26 1 204 1 321 1 28 1 343 1 141 1 117 1 142 1 232 1 119 1 211 1 286 1 234 1 376 1 37 3 291 1 171 2 90 2 40 1 18 1 295 1 359 1 
234 1 241 1 149 1 298 1 376 1 106 1 204 1 321 1 37 2 90 2 239 1 99 1 295 2 141 1 117 1 142 1 359 1 119 1 
197 1 234 1 241 1 298 1 362 1 376 1 106 1 26 1 204 1 37 2 171 2 90 2 97 1 239 1 141 1 142 1 359 1 119 1 
197 1 241 1 298 2 362 1 106 1 26 1 321 1 204 2 117 1 141 1 142 2 211 1 119 1 234 1 149 1 376 1 37 4 171 2 90 2 295 2 239 1 359 2 
234 1 241 1 149 1 298 1 376 1 106 1 121 1 204 1 321 1 37 2 90 2 99 1 295 2 141 1 117 1 142 1 359 1 119 1 
197 1 234 1 241 1 298 1 362 1 376 1 106 1 26 1 121 1 204 1 37 2 171 2 90 2 97 1 141 1 142 1 359 1 119 1 
197 1 241 1 298 2 362 1 106 1 26 1 321 1 204 2 117 1 141 1 142 2 211 1 119 1 234 1 149 1 376 1 121 1 37 4 171 2 90 2 295 2 359 2 
197 1 234 1 241 1 149 1 298 2 362 1 26 1 376 1 106 1 204 2 321 1 37 4 171 2 90 2 295 2 141 1 117 1 142 2 359 2 119 1 211 1 
339 1 199 1 317 1 131 1 319 1 241 1 69 1 70 1 203 1 106 1 243 1 366 1 141 1 143 1 55 1 119 1 234 1 352 1 376 1 165 1 261 1 37 2 88 1 171 1 90 2 18 1 295 1 21 1 
199 1 317 1 319 1 241 1 69 1 70 1 203 1 106 1 243 1 5 1 186 1 370 1 141 1 143 1 119 1 327 1 234 1 352 1 376 1 165 1 261 1 37 1 88 1 171 1 90 2 18 1 21 1 358 1 
197 1 241 1 298 2 362 1 106 1 26 1 321 1 204 2 343 1 117 1 141 1 142 2 211 1 119 1 234 1 149 1 376 1 37 4 171 2 90 2 295 2 359 2 
197 1 339 1 199 1 317 1 131 1 241 1 298 2 362 1 26 1 203 1 106 1 243 1 204 2 321 1 366 1 117 1 141 1 142 2 143 1 373 1 119 1 211 1 234 1 352 1 149 1 376 1 165 1 261 1 37 4 171 2 88 1 90 2 17 1 18 1 295 2 21 1 359 2 
197 1 317 1 360 1 241 1 298 1 26 1 106 1 321 1 204 1 28 1 343 1 302 1 141 1 117 1 142 1 232 1 119 1 211 1 234 1 149 1 376 1 37 3 291 1 171 1 90 2 40 1 18 1 295 2 359 1 
197 3 241 2 25 1 275 2 362 3 46 1 106 2 26 3 321 3 10 1 112 1 114 2 283 2 115 1 371 1 117 3 305 1 142 6 211 3 234 2 149 3 376 2 61 1 37 19 170 1 171 10 90 4 173 1 295 9 221 1 
197 2 318 1 241 3 275 1 362 2 46 2 26 2 106 3 342 1 321 3 10 1 114 4 283 2 285 1 115 2 371 1 117 3 305 1 142 4 211 3 234 3 147 1 149 2 376 3 61 1 37 26 170 2 171 12 90 6 356 1 173 2 265 2 295 14 67 1 
197 4 318 1 241 3 25 1 275 1 362 3 46 1 106 3 26 4 342 1 321 4 10 1 114 4 283 4 285 1 115 2 371 1 117 4 305 1 142 6 351 1 211 4 234 3 31 1 147 1 149 3 376 3 61 1 37 34 170 3 171 18 356 1 90 6 173 3 265 1 295 16 221 1 380 1 67 1 
197 3 318 1 241 4 25 1 275 1 362 3 46 1 106 4 26 3 342 1 321 4 10 1 114 4 283 4 285 1 115 2 371 1 117 4 305 1 142 6 351 1 211 4 234 4 31 1 147 1 149 3 376 4 61 1 37 33 170 3 171 16 356 1 90 8 173 3 265 2 295 17 221 1 380 1 67 1 
197 7 318 1 241 2 25 2 275 1 362 6 46 1 106 2 26 7 342 1 321 7 10 1 114 4 283 4 285 1 115 1 371 1 117 7 305 1 142 13 211 7 234 2 31 1 147 1 149 7 376 2 61 1 37 47 170 4 294 2 171 23 356 1 90 4 173 2 265 1 295 24 380 1 67 1 
233 1 346 1 306 1 65 1 85 1 215 1 6 1 60 1 188 1 338 1 
185 1 96 1 
306 1 269 1 215 1 6 1 60 1 23 1 245 1 188 1 338 1 
233 1 306 1 120 2 184 1 109 1 278 1 215 1 60 1 6 1 52 1 65 1 349 1 337 1 85 1 372 1 164 1 338 1 188 1 
233 1 306 1 120 2 184 1 109 1 278 1 215 1 60 1 6 1 52 1 65 1 349 1 337 1 85 1 372 1 164 1 338 1 188 1 
233 1 306 1 120 2 184 1 109 1 278 1 215 1 60 1 6 1 52 1 65 1 349 1 337 1 85 1 372 1 164 1 338 1 188 1 
128 1 63 1 363 1 
128 1 63 1 363 1 
154 1 180 1 
154 1 63 1 180 1 
216 1 231 1 
317 2 360 2 69 1 340 1 184 1 6 1 345 1 80 1 185 1 52 1 231 1 372 1 232 2 164 1 188 1 306 1 120 1 289 1 215 1 60 1 216 1 312 1 92 1 18 2 40 2 96 1 338 1 
128 1 363 1 
154 1 63 1 180 1 
104 1 317 2 241 1 70 1 203 1 106 1 243 2 74 1 343 1 9 1 141 1 143 1 55 1 232 2 119 1 234 1 352 1 308 1 376 1 165 1 15 1 37 2 88 2 171 1 90 2 16 2 18 2 175 1 295 1 21 2 381 1 
328 1 203 1 165 1 243 2 183 1 110 1 78 1 137 1 88 2 49 1 160 1 322 1 17 1 95 1 230 1 176 1 84 2 21 2 210 1 
328 1 203 1 243 1 165 1 78 1 137 1 88 1 49 1 160 1 322 1 95 1 230 1 176 1 84 2 21 1 162 1 210 1 
328 1 352 1 319 1 203 1 165 1 243 1 183 1 88 1 113 1 51 1 143 1 21 1 155 1 86 1 
328 1 203 1 243 1 165 1 183 1 110 1 78 1 137 1 88 1 49 1 160 1 322 1 95 1 230 1 176 1 84 2 21 1 210 1 
83 1 
206 1 361 1 248 1 196 1 277 1 182 1 109 1 
44 1 68 1 299 1 73 1 182 1 109 2 206 1 248 1 207 1 372 1 164 1 307 1 35 1 309 1 172 1 20 1 270 1 
197 1 203 2 299 3 243 1 109 3 344 1 206 4 12 1 207 6 117 1 164 2 211 1 352 4 258 1 165 1 260 1 261 1 309 2 172 2 264 1 267 3 20 2 21 1 316 1 127 1 68 1 319 1 26 1 73 2 364 1 321 1 182 3 29 2 143 1 372 2 34 1 35 2 235 1 88 1 330 3 93 1 335 1 
197 2 68 1 318 1 299 3 26 2 73 2 135 1 182 5 321 2 109 5 7 1 206 8 12 1 283 1 248 2 285 1 207 6 117 2 372 1 30 1 164 1 211 2 147 1 35 1 309 2 170 1 330 5 356 1 173 1 172 2 267 5 100 1 20 2 103 2 67 1 
198 1 317 1 360 1 274 1 26 1 73 1 182 2 7 1 279 1 206 2 186 1 117 2 372 1 232 1 164 1 287 1 290 1 309 1 36 1 310 1 291 1 172 1 18 1 40 1 123 1 20 1 220 1 103 2 
361 1 73 1 182 1 309 1 109 1 172 1 206 1 196 1 248 1 20 1 
197 1 299 2 26 1 321 1 182 2 109 2 330 2 206 2 267 2 207 4 117 1 211 1 
68 1 248 1 35 1 372 1 109 1 164 1 
68 2 319 2 203 1 73 2 243 4 107 1 135 2 182 2 77 1 11 1 206 2 12 2 113 1 51 1 116 2 143 1 372 3 164 3 145 1 352 1 259 1 165 1 35 4 309 2 88 4 172 2 20 1 21 4 126 1 
339 1 317 3 199 1 360 2 131 1 241 1 319 1 69 1 70 1 274 1 276 1 106 1 203 1 243 1 366 1 141 1 143 1 232 2 119 1 234 1 352 1 376 1 165 1 261 1 37 1 291 2 171 1 88 1 90 2 18 3 40 2 21 1 
299 1 73 1 182 1 135 1 309 1 109 2 330 1 172 1 206 1 12 1 248 1 207 2 20 1 
306 1 177 1 6 1 
233 1 306 1 57 1 231 1 6 1 
306 1 177 1 6 1 
306 1 177 1 6 1 
306 1 98 1 6 1 
306 1 98 1 6 1 
306 1 98 1 6 1 
306 1 6 1 
60 1 188 1 
241 2 362 2 106 2 26 2 117 2 142 4 234 2 287 1 31 1 149 2 376 2 290 1 36 1 37 10 171 5 90 4 265 1 123 1 295 5 380 1 
31 1 277 1 380 1 
197 1 234 1 241 1 149 1 362 1 26 1 376 1 106 1 321 1 37 4 171 2 246 1 90 2 295 2 117 1 142 2 211 1 
197 1 25 1 149 1 362 1 26 1 321 1 37 7 170 1 171 4 173 1 283 2 295 3 117 1 142 2 211 1 
197 2 25 1 241 1 362 3 26 4 106 1 321 2 283 2 117 4 142 5 211 2 287 1 234 1 31 1 329 1 149 2 376 1 290 1 36 1 37 20 170 2 171 10 294 1 90 2 265 1 123 1 295 10 380 1 
171 1 283 1 37 1 
295 1 37 1 170 1 
197 1 234 1 241 1 149 1 362 2 106 1 376 1 26 1 321 1 37 6 246 1 171 3 90 2 93 1 295 3 117 1 142 3 211 1 
197 2 318 1 241 1 362 1 106 1 26 2 321 2 283 1 285 1 371 1 117 2 142 2 211 2 234 1 147 1 149 1 376 1 37 12 170 1 171 6 90 2 356 1 173 1 295 6 67 1 
287 1 149 1 362 1 26 1 290 1 36 1 37 6 171 3 295 3 117 1 142 2 
234 1 31 1 241 1 149 1 362 1 376 1 106 1 290 1 36 1 37 3 367 1 171 2 90 2 265 1 123 1 295 1 142 2 380 1 
234 1 287 1 241 1 149 2 362 3 106 1 376 1 26 2 290 2 36 2 37 10 171 5 90 2 123 1 295 5 371 1 117 2 142 5 
234 1 241 1 149 1 376 1 106 1 321 1 37 2 90 2 295 2 371 1 117 1 142 1 
197 1 234 1 241 1 149 1 362 1 26 1 376 1 106 1 321 1 37 4 171 2 90 2 295 2 371 1 117 1 142 2 211 1 
234 3 241 3 149 1 362 1 376 3 106 3 290 1 36 1 37 3 367 1 171 2 90 6 265 1 295 1 371 1 142 2 221 1 
197 2 241 4 362 3 106 4 26 4 321 2 246 1 303 1 283 3 371 1 117 4 142 6 211 2 287 1 234 4 31 1 149 3 376 4 290 1 36 1 37 24 170 3 171 12 90 8 173 1 265 1 123 1 295 12 219 1 125 1 380 1 221 1 
318 1 241 1 362 2 26 2 106 1 283 1 117 2 371 1 142 3 287 1 234 1 31 1 149 1 376 1 290 1 36 1 37 10 170 1 171 5 90 2 173 1 123 1 295 5 380 1 
318 1 241 2 25 1 362 2 26 2 106 2 321 1 246 1 283 2 371 1 117 3 142 4 211 1 287 1 234 2 31 1 149 2 376 2 290 1 36 1 37 13 170 1 171 6 90 4 173 1 123 1 295 7 380 1 
197 2 318 1 241 3 362 3 106 3 26 4 321 2 246 1 283 1 285 1 371 1 117 4 142 5 211 2 287 1 234 3 31 1 147 1 149 2 376 3 290 1 36 1 37 21 170 1 171 11 90 6 356 1 173 1 265 1 123 1 295 10 380 1 67 1 
197 1 318 1 241 3 362 3 106 3 26 3 321 2 246 1 283 1 285 1 371 1 117 4 142 6 211 2 287 1 234 3 31 1 147 1 149 3 376 3 290 1 36 1 37 19 170 1 171 8 90 6 356 1 173 1 265 1 123 1 295 11 380 1 67 1 
318 1 241 1 362 2 26 2 106 1 283 1 117 2 371 1 142 3 287 1 234 1 31 1 149 1 376 1 290 1 36 1 37 10 170 1 171 5 90 2 173 1 123 1 295 5 380 1 
197 2 318 1 241 1 362 1 106 1 26 2 321 2 283 1 285 1 371 1 117 2 142 2 211 2 234 1 147 1 149 1 376 1 37 12 170 1 171 6 90 2 356 1 173 1 295 6 67 1 
197 1 318 1 241 4 362 3 106 4 26 3 321 2 246 1 283 1 285 1 371 1 117 4 142 5 211 2 287 1 234 4 31 1 147 1 149 2 376 4 290 1 36 1 37 20 170 1 171 9 90 8 356 1 173 1 265 2 123 1 295 11 380 1 67 1 
197 2 318 1 241 4 362 3 106 4 26 2 321 3 283 1 285 1 371 1 117 3 142 6 211 3 234 4 147 1 149 3 376 4 37 16 170 1 171 7 90 8 356 1 173 1 265 2 295 9 221 1 67 1 
287 1 31 1 149 2 362 2 26 1 290 2 36 2 37 5 171 3 123 1 295 2 117 1 142 4 380 1 
197 1 318 1 241 4 362 3 106 4 26 3 321 2 283 1 285 1 371 1 117 4 142 5 211 2 287 1 234 4 31 1 147 1 149 2 376 4 290 1 36 1 37 20 170 1 171 9 90 8 356 1 173 1 265 2 123 1 295 11 380 1 221 1 67 1 
317 1 313 1 69 1 18 1 50 1 348 1 232 1 
317 1 69 1 167 1 205 1 313 1 18 1 50 1 348 1 379 1 66 1 187 1 232 1 
88 1 352 1 113 1 319 1 203 1 165 1 51 1 277 1 243 1 143 1 21 1 
339 1 199 1 317 2 360 1 352 1 319 1 69 1 203 1 243 1 165 1 261 1 88 1 40 1 18 2 143 1 21 1 144 1 232 1 
339 1 189 1 199 1 317 2 360 1 352 3 69 1 203 1 243 1 165 1 58 1 261 2 293 1 88 1 186 1 40 2 18 2 116 1 143 2 21 1 144 1 271 1 232 2 
317 2 199 1 360 1 69 1 203 1 243 1 186 2 370 1 116 1 143 2 144 1 232 2 189 1 352 3 165 1 261 2 58 1 88 1 293 1 18 2 40 2 21 1 358 1 271 1 
198 1 317 1 360 1 274 1 203 1 243 1 109 1 344 1 279 1 186 1 248 1 116 1 250 1 29 1 372 2 143 1 232 1 164 2 189 1 352 4 165 1 35 1 261 1 310 1 355 1 291 1 88 1 18 1 40 1 335 1 21 1 271 1 
198 1 317 1 360 1 274 1 203 1 243 1 109 1 344 1 279 1 186 1 248 1 116 1 29 1 372 2 143 1 232 1 164 2 189 1 352 4 165 1 35 1 261 1 310 1 291 1 88 1 18 1 40 1 335 1 21 1 127 1 271 1 
88 1 203 1 165 1 243 1 251 1 21 1 
104 1 319 2 352 3 203 3 243 7 165 2 364 1 261 1 226 1 88 7 16 1 332 1 17 1 333 1 304 1 176 1 251 1 21 6 143 2 253 1 163 1 
339 1 199 1 241 2 106 2 203 1 243 1 343 1 117 2 119 2 352 1 165 1 261 1 15 1 171 4 17 1 18 2 123 1 21 1 358 1 317 2 131 1 360 1 69 1 362 2 26 2 366 1 186 1 141 2 143 1 142 3 144 1 232 1 373 1 234 2 287 1 31 1 149 1 376 2 290 1 36 1 37 8 88 1 89 1 90 4 40 1 295 4 380 1 
198 1 340 1 243 1 109 2 7 1 344 1 206 4 248 2 117 2 164 3 352 2 260 1 309 2 310 1 172 2 18 1 123 1 20 2 21 1 126 1 127 1 68 1 317 1 360 1 319 1 361 1 274 1 26 2 73 2 182 5 279 1 186 1 29 1 372 3 232 1 287 1 35 2 34 1 290 1 235 1 36 1 291 1 88 1 40 1 335 1 196 1 103 2 
352 2 203 2 243 2 165 1 364 1 261 1 88 2 17 1 335 1 251 1 21 2 143 1 316 1 
156 1 179 1 319 1 352 1 203 1 243 4 165 1 88 4 17 1 113 1 51 1 21 4 143 1 
352 1 32 1 225 1 203 2 243 2 165 1 261 1 226 1 88 2 369 1 116 1 21 2 143 1 163 1 
88 1 160 1 322 1 319 1 203 1 165 1 243 1 84 1 21 1 78 1 
104 1 352 1 203 1 243 2 165 1 88 2 9 1 17 1 176 1 21 2 143 1 
156 1 104 1 319 1 352 3 203 2 243 5 165 2 88 5 113 1 17 1 304 1 51 1 116 1 21 4 143 2 253 1 
156 1 104 1 224 1 319 1 352 3 203 2 243 5 165 2 88 5 113 1 17 1 304 1 51 1 116 1 21 4 143 2 
317 2 199 1 360 1 319 1 69 1 203 1 243 1 186 1 370 1 143 1 144 1 232 1 352 1 165 1 261 1 88 1 18 2 40 1 21 1 358 1 
352 1 203 2 243 1 165 1 364 1 261 1 226 1 88 1 332 1 116 1 21 1 143 1 163 1 
62 1 282 1 69 1 134 1 136 1 
198 1 317 1 360 1 274 1 47 1 340 1 134 1 109 1 136 1 79 1 344 1 279 1 282 1 186 2 347 1 53 1 248 1 372 2 232 1 164 2 87 1 58 1 310 1 291 1 293 1 62 1 18 1 40 1 
317 1 308 1 74 1 136 1 62 1 282 1 175 1 18 1 232 1 
87 1 282 1 347 1 
133 1 277 1 193 1 59 1 
133 1 200 1 82 1 181 1 76 1 193 1 59 1 
138 1 200 1 13 1 
133 1 200 3 76 1 181 3 193 1 59 1 64 1 218 1 82 1 54 2 272 1 297 1 
217 1 133 1 200 2 82 1 181 2 76 1 193 1 59 1 263 1 
223 1 133 1 200 1 75 1 76 1 181 1 49 1 160 1 82 1 84 1 272 1 
133 1 200 1 82 1 181 1 76 1 193 1 272 1 
200 1 82 1 181 1 76 1 193 2 59 1 272 1 
255 1 133 1 200 2 152 1 341 1 76 2 181 2 193 1 82 2 272 1 
133 2 200 3 75 1 76 1 181 3 193 1 59 1 263 2 301 1 140 1 82 1 284 1 272 1 
133 1 200 2 76 1 181 2 191 1 193 1 59 1 263 1 49 1 160 1 322 1 82 1 84 2 272 1 210 1 
133 2 200 4 75 1 76 2 181 4 193 1 59 1 263 2 217 1 140 1 82 2 41 1 272 1 
133 1 200 1 82 1 181 1 76 1 193 1 59 1 272 1 
133 3 200 4 75 1 181 4 76 1 193 2 59 2 263 2 111 1 140 1 218 1 82 1 54 1 297 1 
129 1 257 1 133 1 200 2 76 1 181 2 193 1 59 1 263 1 280 1 82 1 272 1 
133 1 200 3 76 1 181 3 193 1 59 1 218 2 82 1 350 1 54 2 297 1 272 1 
133 2 201 1 324 2 178 1 
200 1 1 1 82 1 181 1 76 1 272 1 
301 1 133 1 200 2 82 1 181 2 76 1 193 1 59 1 263 1 272 1 
19 1 
133 1 200 1 82 1 181 1 76 1 193 1 59 1 272 1 
301 1 133 1 200 3 82 1 181 3 76 1 193 1 54 1 59 1 263 1 272 1 
111 1 133 1 140 1 75 1 
133 1 193 1 
